<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 06 Apr 2024 07:00:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[SearXNG is a free internet metasearch engine (164 pts)]]></title>
            <link>https://github.com/searxng/searxng</link>
            <guid>39948044</guid>
            <pubDate>Fri, 05 Apr 2024 22:27:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/searxng/searxng">https://github.com/searxng/searxng</a>, See on <a href="https://news.ycombinator.com/item?id=39948044">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><hr>

<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/searxng/searxng/master/src/brand/searxng.svg"><img src="https://raw.githubusercontent.com/searxng/searxng/master/src/brand/searxng.svg"></a></p>

<hr>
<p dir="auto">Privacy-respecting, hackable <a href="https://en.wikipedia.org/wiki/Metasearch_engine" rel="nofollow">metasearch engine</a></p>
<p dir="auto"><a href="https://searx.space/" rel="nofollow">Searx.space</a> lists ready-to-use running instances.</p>
<p dir="auto">A <a href="https://docs.searxng.org/user" rel="nofollow">user</a>, <a href="https://docs.searxng.org/admin" rel="nofollow">admin</a> and <a href="https://docs.searxng.org/dev" rel="nofollow">developer</a> handbook is available on the <a href="https://docs.searxng.org/" rel="nofollow">homepage</a>.</p>
<p dir="auto"><a href="https://docs.searxng.org/admin/installation.html" rel="nofollow"><img src="https://camo.githubusercontent.com/d03a3c450f1338b2d7b3b13e5df2eee07fc3ebdc2fa1f1fd0d7eaec049717b49/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d696e7374616c6c2d626c7565" alt="SearXNG install" data-canonical-src="https://img.shields.io/badge/-install-blue"></a> <a href="https://docs.searxng.org/" rel="nofollow"><img src="https://camo.githubusercontent.com/98e0355a460efccf423cdd69ced6df4190be41fddd82872a0b83b3dfb102cdf3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d686f6d65706167652d626c7565" alt="SearXNG homepage" data-canonical-src="https://img.shields.io/badge/-homepage-blue"></a> <a href="https://github.com/searxng/searxng/wiki"><img src="https://camo.githubusercontent.com/9164d57b5c4f056547d2535e5cdca025c4cb18ff526539f182bc9dfd0cfc51ae/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d77696b692d626c7565" alt="SearXNG wiki" data-canonical-src="https://img.shields.io/badge/-wiki-blue"></a> <a href="https://github.com/searxng/searxng/blob/master/LICENSE"><img src="https://camo.githubusercontent.com/24368ce71a4355192bbd02cf2fe76a69ff7f18674abaf159b19af37713497c25/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4147504c2d626c75652e737667" alt="AGPL License" data-canonical-src="https://img.shields.io/badge/license-AGPL-blue.svg"></a> <a href="https://github.com/searxng/searxng/issues"><img src="https://camo.githubusercontent.com/504dd793406a904416d3b23fe1c332aa9469aa4beb5b802fdbec146911f6ec3c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f73656172786e672f73656172786e673f636f6c6f723d79656c6c6f77266c6162656c3d697373756573" alt="Issues" data-canonical-src="https://img.shields.io/github/issues/searxng/searxng?color=yellow&amp;label=issues"></a> <a href="https://github.com/searxng/searxng/commits/master"><img src="https://camo.githubusercontent.com/cded9140035497b74511dd5cb02a283fdc96a957affab3ffef893751372faf43/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f792f73656172786e672f73656172786e673f636f6c6f723d79656c6c6f77266c6162656c3d636f6d6d697473" alt="commits" data-canonical-src="https://img.shields.io/github/commit-activity/y/searxng/searxng?color=yellow&amp;label=commits"></a> <a href="https://translate.codeberg.org/projects/searxng/" rel="nofollow"><img src="https://camo.githubusercontent.com/bfadff5bc5728aaf3b29a13cdba64f25c27b8e61a3d0a23698c834524dfa21c8/68747470733a2f2f7472616e736c6174652e636f6465626572672e6f72672f776964676574732f73656172786e672f2d2f73656172786e672f7376672d62616467652e737667" alt="weblate" data-canonical-src="https://translate.codeberg.org/widgets/searxng/-/searxng/svg-badge.svg"></a> <a href="https://docs.searxng.org/" rel="nofollow"><img src="https://raw.githubusercontent.com/searxng/searxng/master/src/brand/searxng-wordmark.svg" alt="SearXNG logo"></a></p>
<hr>
<p dir="auto"><h2 id="user-content-contact" tabindex="-1" dir="auto">Contact</h2><a id="user-content-contact" aria-label="Permalink: Contact" href="#contact"></a></p>
<p dir="auto">Ask questions or just chat about SearXNG on</p>
<dl>
<dt>IRC</dt>
<dd><p dir="auto"><a href="https://web.libera.chat/?channel=#searxng" rel="nofollow">#searxng on libera.chat</a> which is bridged to Matrix.</p>
</dd>
<dt>Matrix</dt>
<dd><p dir="auto"><a href="https://matrix.to/#/#searxng:matrix.org" rel="nofollow">#searxng:matrix.org</a></p>
</dd>
</dl>
<p dir="auto"><h2 id="user-content-setup" tabindex="-1" dir="auto">Setup</h2><a id="user-content-setup" aria-label="Permalink: Setup" href="#setup"></a></p>
<ul dir="auto">
<li>A well maintained <a href="https://github.com/searxng/searxng-docker">Docker image</a>, also built for ARM64 and ARM/v7 architectures.</li>
<li>Alternatively there are <em>up to date</em> <a href="https://docs.searxng.org/admin/installation-scripts.html" rel="nofollow">installation scripts</a>.</li>
<li>For individual setup consult our detailed <a href="https://docs.searxng.org/admin/installation-searxng.html" rel="nofollow">Step by step</a> instructions.</li>
<li>To fine-tune your instance, take a look at the <a href="https://docs.searxng.org/admin/index.html" rel="nofollow">Administrator documentation</a>.</li>
</ul>
<p dir="auto"><h2 id="user-content-translations" tabindex="-1" dir="auto">Translations</h2><a id="user-content-translations" aria-label="Permalink: Translations" href="#translations"></a></p>
<p dir="auto">Help translate SearXNG at <a href="https://translate.codeberg.org/projects/searxng/searxng/" rel="nofollow">Weblate</a></p>

<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/2d8a8ad3e638c68c348ec0fdf02e96183c769ec4c7aff2f7c613dcb71ea5bba4/68747470733a2f2f7472616e736c6174652e636f6465626572672e6f72672f776964676574732f73656172786e672f2d2f6d756c74692d6175746f2e737667"><img src="https://camo.githubusercontent.com/2d8a8ad3e638c68c348ec0fdf02e96183c769ec4c7aff2f7c613dcb71ea5bba4/68747470733a2f2f7472616e736c6174652e636f6465626572672e6f72672f776964676574732f73656172786e672f2d2f6d756c74692d6175746f2e737667" data-canonical-src="https://translate.codeberg.org/widgets/searxng/-/multi-auto.svg"></a></p>

<p dir="auto"><h2 id="user-content-contributing" tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">Are you a developer? Have a look at our <a href="https://docs.searxng.org/dev/quickstart.html" rel="nofollow">development quickstart</a> guide, it's very easy to contribute. Additionally we have a <a href="https://docs.searxng.org/dev/index.html" rel="nofollow">developer documentation</a>.</p>
<p dir="auto"><h2 id="user-content-codespaces" tabindex="-1" dir="auto">Codespaces</h2><a id="user-content-codespaces" aria-label="Permalink: Codespaces" href="#codespaces"></a></p>
<p dir="auto">You can contribute from your browser using <a href="https://docs.github.com/en/codespaces/overview">GitHub Codespaces</a>:</p>
<ul dir="auto">
<li>Fork the repository</li>
<li>Click on the <code>&lt;&gt; Code</code> green button</li>
<li>Click on the <code>Codespaces</code> tab instead of <code>Local</code></li>
<li>Click on <code>Create codespace on master</code></li>
<li>VSCode is going to start in the browser</li>
<li>Wait for <code>git pull &amp;&amp; make install</code> to appear and then disappear</li>
<li>You have <a href="https://github.com/settings/billing">120 hours per month</a> (see also your <a href="https://github.com/codespaces">list of existing Codespaces</a>)</li>
<li>You can start SearXNG using <code>make run</code> in the terminal or by pressing <code>Ctrl+Shift+B</code></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[World_sim: LLM prompted to act as a sentient CLI universe simulator (149 pts)]]></title>
            <link>https://worldsim.nousresearch.com/</link>
            <guid>39947713</guid>
            <pubDate>Fri, 05 Apr 2024 21:55:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://worldsim.nousresearch.com/">https://worldsim.nousresearch.com/</a>, See on <a href="https://news.ycombinator.com/item?id=39947713">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Apple Updates App Store Guidelines to Permit Game Emulators, EU Music App Links (181 pts)]]></title>
            <link>https://www.macrumors.com/2024/04/05/app-store-guidelines-emulators-music-app-links/</link>
            <guid>39946694</guid>
            <pubDate>Fri, 05 Apr 2024 20:16:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.macrumors.com/2024/04/05/app-store-guidelines-emulators-music-app-links/">https://www.macrumors.com/2024/04/05/app-store-guidelines-emulators-music-app-links/</a>, See on <a href="https://news.ycombinator.com/item?id=39946694">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main" id="maincontent"><article expanded="true"><div data-io-article-url="/2024/04/05/app-store-guidelines-emulators-music-app-links/"><p>Apple today updated its <a href="https://developer.apple.com/app-store/review/guidelines/">App Store guidelines</a> to comply with an <a href="https://www.macrumors.com/2024/03/04/eu-fines-apple-2-billion/">anti-steering mandate</a> levied by the European Commission. Music streaming apps like Spotify are now permitted to include a link or buy button that leads to a website with information about alternative music purchasing options, though this is only permitted <a href="https://developer.apple.com/support/music-streaming-services-entitlement-eea/">in the European Economic Area</a>.</p>
<p><img src="https://images.macrumors.com/t/MuYr2cyAEYdr0CMrrvuycUPK5vs=/400x0/article-new/2022/01/iOS-App-Store-General-Feature-JoeBlue.jpg?lossy" srcset="https://images.macrumors.com/t/MuYr2cyAEYdr0CMrrvuycUPK5vs=/400x0/article-new/2022/01/iOS-App-Store-General-Feature-JoeBlue.jpg?lossy 400w,https://images.macrumors.com/t/j81xjhvPhb1xAaD6jc-kW3SoaHc=/800x0/article-new/2022/01/iOS-App-Store-General-Feature-JoeBlue.jpg?lossy 800w,https://images.macrumors.com/t/6S1CCkPCfv7Bu5OKPv07871bKhY=/1600x0/article-new/2022/01/iOS-App-Store-General-Feature-JoeBlue.jpg 1600w,https://images.macrumors.com/t/2D83fOzXH1a-mo51oJaSX0SjmzQ=/2500x0/filters:no_upscale()/article-new/2022/01/iOS-App-Store-General-Feature-JoeBlue.jpg 2500w" sizes="(max-width: 900px) 100vw, 697px" alt="iOS App Store General Feature JoeBlue" width="2250" height="1266"></p>
<blockquote><p>Music Streaming Services Entitlements: music streaming apps in specific regions can use Music Streaming Services Entitlements to include a link (which may take the form of a buy button) to the developer's website that informs users of other ways to purchase digital music content or services. These entitlements also permit music streaming app developers to invite users to provide their email address for the express purpose of sending them a link to the developer's website to purchase digital music content or services. Learn more about these entitlements.</p>
<p>In accordance with the entitlement agreements, the link may inform users about where and how to purchase those in-app purchase items, and the price of such items. The entitlements are limited to use only in the iOS or iPadOS App Store in specific storefronts. In all other storefronts, streaming music apps and their metadata may not include buttons, external links, or other calls to action that direct customers to purchasing mechanisms other than in-app purchase.</p></blockquote>
<p>The European Commission in March fined <a href="https://www.macrumors.com/2024/03/04/eu-fines-apple-2-billion/">Apple $2 billion</a> for anti-competitive conduct against rival music streaming services. The fine also came with a requirement that Apple "remove the anti-steering provisions" from its <a href="https://www.macrumors.com/guide/app-store/">App Store</a> rules, which Apple has now done. Apple is restricted from repeating the infringement or adopting similar practices in the future, though it is worth noting that Apple plans to appeal the decision.</p>
<p>Apple has accused Spotify of manipulating the European Commission to get the rules of the ‌App Store‌ rewritten in its favor. "They want to use Apple's tools and technologies, distribute on the ‌App Store‌, and benefit from the trust we've built with users - and pay Apple nothing for it," <a href="https://www.macrumors.com/2024/03/04/eu-fines-apple-2-billion/">Apple complained</a> following the ruling.</p>
<p>In addition to updating its streaming music rules, Apple today also added games from retro game console emulator apps to the list of permitted software allowable under guideline 4.7. Guideline 4.7 permits apps to offer HTML5 mini apps and mini games, streaming games, chatbots, game emulators, and plug-ins.</p>
<blockquote><p>Apps may offer certain software that is not embedded in the binary, specifically HTML5 mini apps and mini games, streaming games, chatbots, and plug-ins. Additionally, retro game console emulator apps can offer to download games. You are responsible for all such software offered in your app, including ensuring that such software complies with these Guidelines and all applicable laws.</p></blockquote>
<p>Game emulators have managed to sneak onto the ‌App Store‌ several times over the years by using hidden functionality, but Apple has not explicitly permitted them until now. The rule change that allows for game emulators is worldwide, as is support for apps that offer mini apps and mini games.</p>
</div></article><p><h2>Popular Stories</h2></p><div><h3><a href="https://www.macrumors.com/2024/04/02/iphone-16-pro-models-rumored-features/">iPhone 16 Pro Expected Later This Year With These 12 New Features</a></h3><p>While the iPhone 16 Pro and iPhone 16 Pro Max are still months away from launching, there are already over a dozen rumors about the devices. Below, we have recapped new features and changes expected for the devices so far. These are some of the key changes rumored for the iPhone 16 Pro models as of April 2024:Larger displays: The iPhone 16 Pro and iPhone 16 Pro Max will be equipped with large...</p></div><div><h3><a href="https://www.macrumors.com/2024/04/02/ios-18-resource-reveals-visionos-redesign/">Alleged iOS 18 Design Resource Reveals visionOS-Like Redesign [Updated]</a></h3><p>A first look at iOS 18's rumored visionOS-style redesign may have been revealed by a new image of the Camera app. Alleged iOS 18 design resource. MacRumors received the above iPhone frame template from an anonymous source who claims they obtained it from an iOS engineer. It will allegedly be included as part of the Apple Design Resources for iOS 18, which helps developers visually design apps ...</p></div><div><h3><a href="https://www.macrumors.com/2024/04/03/apple-reportedly-investigating-robotics/">Apple Exploring 'Mobile Robot' That 'Follows Users Around Their Homes'</a></h3><p>Wednesday April 3, 2024 12:21 pm PDT by <a href="https://www.macrumors.com/author/joe-rossignol/" rel="author">Joe Rossignol</a></p><p>Apple is exploring various "personal robotics" projects in an effort to create its "next big thing," according to Bloomberg's Mark Gurman. Amazon's Astro robot One of these projects is described as a "mobile robot" that would "follow users around their homes," while another is said to be an "advanced table-top home device that uses robotics to move a display around":Engineers at Apple have...</p></div><div><h3><a href="https://www.macrumors.com/2024/04/02/apple-reveals-new-ai-system/">Apple Researchers Reveal New AI System That Can Beat GPT-4</a></h3><p>Apple researchers have developed an artificial intelligence system named ReALM (Reference Resolution as Language Modeling) that aims to radically enhance how voice assistants understand and respond to commands. In a research paper (via VentureBeat), Apple outlines a new system for how large language models tackle reference resolution, which involves deciphering ambiguous references to...</p></div><div><h3><a href="https://www.macrumors.com/2024/04/04/apple-suppliers-say-new-ipads-repeatedly-postponed/">Apple Suppliers Say New iPads Have Been 'Repeatedly Postponed'</a></h3><p>It has been nearly 18 months since Apple last updated its iPad lineup, and customers are anxiously waiting for new models to be announced. For months, there have been rumors about new iPad Pro and iPad Air models, but the estimated timeframe for their release has been repeatedly pushed back from March to April to May. In defense of these rumors, it does sound like Apple has experienced...</p></div><div><h3><a href="https://www.macrumors.com/2024/04/01/apple-card-savings-rate-to-decrease/">Apple Card Savings Account to Receive First-Ever Interest Rate Decrease</a></h3><p>Nearly one year after it launched in the U.S., the Apple Card's high-yield savings account will be receiving its first-ever interest rate decrease. Starting on April 3, the Apple Card savings account's annual percentage yield (APY) will be lowered to 4.4%, according to data on Apple's backend discovered by MacRumors contributor Aaron Perris. The account currently has a 4.5% APY. 4.4% will ...</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AI and the Problem of Knowledge Collapse (149 pts)]]></title>
            <link>https://arxiv.org/abs/2404.03502</link>
            <guid>39946169</guid>
            <pubDate>Fri, 05 Apr 2024 19:30:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2404.03502">https://arxiv.org/abs/2404.03502</a>, See on <a href="https://news.ycombinator.com/item?id=39946169">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2404.03502">View PDF</a></p><blockquote>
            <span>Abstract:</span>While artificial intelligence has the potential to process vast amounts of data, generate new insights, and unlock greater productivity, its widespread adoption may entail unforeseen consequences. We identify conditions under which AI, by reducing the cost of access to certain modes of knowledge, can paradoxically harm public understanding. While large language models are trained on vast amounts of diverse data, they naturally generate output towards the 'center' of the distribution. This is generally useful, but widespread reliance on recursive AI systems could lead to a process we define as "knowledge collapse", and argue this could harm innovation and the richness of human understanding and culture. However, unlike AI models that cannot choose what data they are trained on, humans may strategically seek out diverse forms of knowledge if they perceive them to be worthwhile. To investigate this, we provide a simple model in which a community of learners or innovators choose to use traditional methods or to rely on a discounted AI-assisted process and identify conditions under which knowledge collapse occurs. In our default model, a 20% discount on AI-generated content generates public beliefs 2.3 times further from the truth than when there is no discount. Finally, based on the results, we consider further research directions to counteract such outcomes.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Andrew Peterson [<a href="https://arxiv.org/show-email/0d2c7712/2404.03502">view email</a>]      <br>    <strong>[v1]</strong>
        Thu, 4 Apr 2024 15:06:23 UTC (57 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Breakthrough drug trial saw cancer vanish in every patient (2022) (122 pts)]]></title>
            <link>https://www.euronews.com/health/2022/06/07/this-breakthrough-drug-trial-saw-cancer-vanish-in-every-patient</link>
            <guid>39946137</guid>
            <pubDate>Fri, 05 Apr 2024 19:27:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.euronews.com/health/2022/06/07/this-breakthrough-drug-trial-saw-cancer-vanish-in-every-patient">https://www.euronews.com/health/2022/06/07/this-breakthrough-drug-trial-saw-cancer-vanish-in-every-patient</a>, See on <a href="https://news.ycombinator.com/item?id=39946137">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>
        The cancer patients saw their tumours disappear after the treatment, and have been cancer-free for two years.
    </p><div><p>More than a dozen rectal cancer patients in the United States have seen their cancer disappear after undergoing experimental immunotherapy, in what doctors are calling an astonishing result.</p><p>The patients, who were part of a small clinical trial led by researchers from New York’s Memorial Sloan Kettering (MSK) Cancer Center, saw their tumours vanish after being treated with an experimental drug called dostarlimab.</p><p>Details of the trial were <a href="https://www.nejm.org/doi/pdf/10.1056/NEJMoa2201445"><strong>published</strong></a> on Sunday in the New England Journal of Medicine.</p><p>The paper described the results of 12 patients with rectal cancer, all of whom saw their cancer vanish after treatment with dostarlimab.</p><p>Participants received a dose of dostarlimab every three weeks for six months, with the idea being that they would need to undergo standard treatments of chemotherapy, radiation therapy and surgery following treatment.</p><p>However, researchers found that in every case, the cancer was cleared through the experimental treatment alone.</p><h2><strong>A first in cancer treatment</strong></h2><p>The trial has been hailed as a first in cancer treatment, with one of the paper’s authors, Dr Luis Diaz Jr of Memorial Sloan Kettering, telling the <strong><a href="https://www.nytimes.com/2022/06/05/health/rectal-cancer-checkpoint-inhibitor.html?referringSource=articleShare">New York Times</a></strong> that he knew of no other study in which a treatment completely obliterated a cancer in every patient.</p><p>“I believe this is the first time this has happened in the history of cancer,” he said.</p><p>Immunotherapy harnesses the body’s own immune system to identify and destroy cancer cells.</p><p>The trial focussed on a subset of rectal cancer patients whose cancer had a specific mutation, MSK said in a <a href="https://www.mskcc.org/news/rectal-cancer-disappears-after-experimental-use-immunotherapy"><strong>statement</strong></a>.</p><p>This sort of rectal cancer, known as "mismatch repair-deficient" (MMRd) rectal cancer, tends to respond poorly to standard chemotherapy regimens. In the trial, researchers wanted to investigate if immunotherapy alone could beat rectal cancer that had not spread to other tissues, the organisation said.</p><p>The research, which is ongoing, has seen at least 14 patients “and counting” have their tumours disappear, with none of them experiencing significant side effects, it added.</p><p>There was no need for standard treatments of radiation, surgery, or chemotherapy, and the cancer has not returned in any of the patients, who have been cancer-free for up to two years, it said.</p><p>“It’s incredibly rewarding to get these happy tears and happy emails from the patients in this study who finish treatment and realise, ‘Oh my God, I get to keep all my normal body functions that I feared I might lose to radiation or surgery’,” said Dr Andrea Cercek of Memorial Sloan Kettering, who co-led the trial.</p><h2>How does this immunotherapy work?</h2><p>Inspiration for the study came from a previous trial led by Dr Diaz, which saw patients taking a drug called pembrolizumab, the New York Times reported. That trial, which involved patients with advanced cancer that resisted standard treatment, saw participants’ tumours stabilise, shrink and even vanish.</p><p>In the current trial, researchers wanted to see what a similar drug, dostarlimab, would do if used before the cancer cells had a chance to spread.</p><p>This sort of treatment focuses on particular proteins called checkpoints, which are made by some types of immune system cells as well as some cancer cells, according to the US&nbsp;<a href="https://www.cancer.gov/publications/dictionaries/cancer-terms/def/immune-checkpoint-inhibitor"><strong>National Cancer Institute</strong></a>. The checkpoints, which keep immune responses from being too strong, can sometimes prevent immune cells from effectively killing cancer cells.</p><p>Like pembrolizumab, dostarlimab is a “checkpoint inhibitor”: It essentially “releases the brakes” on an immune cell, freeing it to recognise and attack cancer cells, according to MSK.</p><p>“When the brakes are taken off the immune cells, MMRd cells look especially strange because they have so many mutations. So the immune cells attack with much more force,” Dr Cercek said.</p><h2><strong>More research needed</strong></h2><p>The results have provided “what may be an early glimpse of a revolutionary treatment shift”, Dr Hanna Sanoff, an oncologist at the Lineberger Comprehensive Cancer Center at the University of North Carolina, who was not involved in the trial, <a href="https://www.nejm.org/doi/full/10.1056/NEJMe2204282"><strong>wrote in an editorial</strong></a> accompanying the paper.</p><p>However, she added that although the results are “cause for great optimism”, such an approach “cannot yet supplant our current curative treatment approach”.</p><p>“Whether the results of this small study conducted at Memorial Sloan Kettering Cancer Center will be generalisable to a broader population of patients with rectal cancer is also not known,” she said.</p><p>“In order to provide more information regarding which patients might benefit from immunotherapy, subsequent trials should aim for heterogeneity in age, coexisting conditions, and tumour bulk”.</p><p>The clinical trial is continuing to enrol patients and is growing, the MSK researchers said. They are also investigating to see if the same method can beat other cancers, and are looking at patients with gastric (stomach), prostate, and pancreatic cancers.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[For twenty years, PostSecret has broadcast suburban America’s hidden truths (102 pts)]]></title>
            <link>https://hazlitt.net/longreads/dark-matter</link>
            <guid>39945931</guid>
            <pubDate>Fri, 05 Apr 2024 19:09:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hazlitt.net/longreads/dark-matter">https://hazlitt.net/longreads/dark-matter</a>, See on <a href="https://news.ycombinator.com/item?id=39945931">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="article-wrap">
<p><strong>In the early aughts</strong>, Frank Warren ran a medical document delivery business in Germantown, Maryland. It was a monotonous job, involving daily trips to government offices to copy thousands of pages of journal articles for pharmaceutical companies, law firms, and non-profits. By his early forties, he had a house in a nice subdivision, a wife, a young daughter, and a dog. His family fostered children for a few weeks or months, and he felt a sense of purpose in helping kids who were suffering acute crises in their own homes. From the outside, things appeared to be going better than well. But inside, something was missing: A sense of adventure, or at least a little fun. An outlet to explore the weirder, darker, and more imaginative parts of his interior world. He’d never been one for small talk, preferring instead to launch into deep discussions, even with people he barely knew. He wondered if he could create a place like that outside of everyday conversation, a place full of awe, anguish, and urgency.</p>
<p>In the fall of 2004, Frank came up with an idea for a project. After he finished delivering documents for the day, he’d drive through the darkened streets of Washington, D.C., with stacks of self-addressed postcards—three thousand in total. At metro stops, he’d approach strangers. “Hi,” he’d say. “I’m Frank. And I collect secrets.” Some people shrugged him off, or told him they didn’t have any secrets. Surely, Frank thought, those people had the best ones. Others were amused, or intrigued. They took cards and, following instructions he’d left next to the address, decorated them, wrote down secrets they’d never told anyone before, and mailed them back to Frank. All the secrets were anonymous.</p>
<p>Initially, Frank received about one hundred postcards back. They told stories of infidelity, longing, abuse. Some were erotic. Some were funny. He displayed them at a local art exhibition and included an anonymous secret of his own. After the exhibition ended, though, the postcards kept coming. By 2024, Frank would have more than a million.</p>
<p>*</p>

<p>After his exhibit closed, the postcards took over Frank’s life. Hundreds poured into his mailbox, week after week. He decided to create a website, PostSecret, where every Sunday he uploaded images of postcards he’d received in the mail.</p>
<p>The website is a simple, ad-free blog with a black background, the 4x6 rectangular confessions emerging from the darkness like faces illuminated around a campfire. Frank is careful to keep himself out of the project—he thinks of the anonymous postcard writers as the project’s authors—so there’s no commentary. Yet curation is what makes PostSecret art. There’s a dream logic to the postcards’ sequence, like walking through a surrealist painting, from light to dark to absurd to profound.</p>

<p><em>I’m afraid that one day, we’ll find out TOMS are made by a bunch of slave kids!</em></p>

<p><em>I am a man. After an injury my hormones got screwed up and my breasts started to grow. I can’t tell anyone this but: I really like having tits.</em></p>

<p><em>I’m in love with a murderer… but I’ve never felt safer in anyone else’s arms.</em></p>

<p><em>I cannot relax in my bathtub because I have an irrational fear that it’s going to fall through the floor.</em></p>

<p>Even if you don’t see him on the website, Frank is always present: selecting postcards, placing them in conversation with one another. Off-screen, he’s a lanky, youthful 60-year-old emanating the healthy glow of those who live near the beach. Last August, we met at his house in Laguna Niguel, in a trim suburban neighbourhood a few miles from the ocean; when I asked about his week, he told me his Oura Ring said he’d slept well the night before. He offered me a seat on his back patio, and the din of children playing sports rang out from a park below. His right arm was in a sling. He’d fractured his scapula after a wave slammed him to the sand while he was bodysurfing.</p>
<p>As we spoke, I gathered that his outlook on most everything is positive—disarmingly so. The first time he had a scapula fracture, after a bike accident a few years ago, “I had this sense of release, I would say, from my everyday concerns and burdens,” he said. Physically exhausting himself through endurance exercise is his relief from the postcards, which skew emotionally dark. “I’ve had to become the kind of person that can do this every day,” he told me.</p>
<p>For years, Frank has been interested in postcards as a medium of narrative. Before PostSecret, he had a project he called “The Reluctant Oracle,” in which he placed postcards with messages like <em>Your question is a misunderstood answer</em> into empty bottles and deposited them in a lake near his house. (A <em>Washington Post</em><a href="https://www.washingtonpost.com/archive/local/2004/10/04/postcards-from-the-waters-edge/316c1548-a0c0-45b4-aaf1-ee023bd8a071/"> article</a> from the time said “The form is cliche: a message in a bottle,” but called the messages themselves “creepy and alluring.”)</p>
<p>What he considers his earliest postcard project, though, dates from his childhood. When he was in fifth grade, just as he was about to board the bus to camp in the mountains near Los Angeles, his mother handed him three postcards. She told him to write down any interesting experiences he had and mail the cards back home.</p>
<p>Frank took the cards. “It’s a Christian sleep-away camp, so of course a lot of crazy stuff happened, and of course I didn’t write my mom about any of it,” he said. But just before camp ended, he remembered the postcards, jotted something down, and mailed them. When he saw them in the mailbox a few days later, he wondered, <em>Am I the same person that wrote this message days ago?</em> The self, he had observed as a grade schooler, was always in a state of flux.</p>
<p>Examining secrets was part of a lifelong inquiry into what it means to speak. Frank’s parents split up when he was twelve—a shocking and destabilizing event that would define his adolescence. Soon after, he moved with his mother and brother from Southern California to Springfield, Illinois. Messed up by his parents’ divorce and his cross-country move, Frank became anxious and depressed.</p>
<p>While he was in high school, Frank went to a Pentecostal church three or four times a week, searching for a sense of connection with others. At the end of every service, churchgoers would pray at the altar to receive the Holy Spirit. Then, they spoke in tongues. All around him, the Spirit took hold, and people flailed their arms, wept, and danced. Frank looked on with envy and shame. No matter how hard he tried, no matter how many people tried to help him, he never spoke in tongues. It was a spiritual failure, this failure of language.</p>
<p>After college, while living in Virginia, he met a guy named Dave on the basketball court. They became close fast. Dave was funny and sensitive, and also athletic: he and Frank played hundreds of pickup games together. But Dave seemed to be struggling. He was living with his parents, couldn’t land a job. He spent a lot of time on computers, and confided in Frank that he was being bullied online. “You’ve got to get out of here,” Frank told him. That was one of the last things he ever said to Dave. Frank moved to Maryland, and not long after, he got a call from Dave’s father. Dave had killed himself. Frank was crushed. He felt like he should have seen more warning signs, and at the same time, felt helpless. He ruminated on how Dave might have interpreted their final conversation. <em>Out of his parents’ house</em>, he’d meant. <em>Not out of this life.</em></p>
<p>In the wake of his loss, Frank wanted “to do something useful with his grief,” so he decided to volunteer on a suicide prevention hotline. In training, his supervisors modelled how to inflect his voice to sound non-judgmental, how to ask open-ended questions and get below the surface of everyday conversation—lessons he would carry into his later life. He felt catharsis in listening to other people’s pain, and, in turn, sensed that they appreciated his presence. Simply by talking about their struggles, he found, they sometimes gained new understanding. Once every week or two, Frank listened for six hours, up until late in the quiet of his house, as people unravelled. He let them talk, and he let them stay silent. Listening to people’s confessions in the wee hours of the morning, Frank realized that people needed a way to talk about the messy topics often off limits in everyday conversation.</p>
<p>PostSecret contains echoes of his time volunteering on the suicide prevention hotline. Like the hotline, the project draws attention to the ways people conceal parts of themselves, and encourages disclosure. But the postcards go even further: They’re public, available for anyone to see. They show us the types of stories people normally keep guarded, creating, in the aggregate, a living inventory of our taboos.</p>

<p>*</p>

<p>What is a secret? Knowledge kept hidden from others, etymologically linked to the words <em>seduction</em> and <em>excrement</em>. To entice someone to look closer; to force them to look away.</p>
<p>Secrecy, writes psychologist Michael Slepian in his 2022 book, <em>The Secret Lives of Secrets</em>, is not an act, but an intention — “I intend,” he writes, “for people not to learn this thing.” “To intend to keep a secret,” he continues, “you need to have a mind capable of reasoning with other minds.” Thus, psychologists believe we start to develop a concept of secrets at around the age of three years old, when we also begin to understand that other people have minds—beliefs, desires, emotions—different from our own. At that point, researchers believe, we also develop the ability to experience self-conscious emotions like guilt, shame, and embarrassment. As our theory of the mind develops, we begin to worry that other people are unable or unwilling to understand us, which, in turn, motivates secrecy. Our teenage years are especially ripe for secret-keeping. As we develop stronger senses of self, we distance ourselves from our parents in a bid to assert control over our lives. Keeping secrets from our parents “allows an escape from [their] criticism, punishment, and anger,” Slepian writes, “but it also precludes the possibility of receiving help when it’s most needed.”</p>
<p>Cultural taboos create secrecy. Systems and structures uphold it. The nature, and content, of secret-keeping varies across cultures, but we have always hidden things from one another. The Greek gods had secret affairs; for centuries, women in central China wrote to each other in a secret language to evade the ire of oppressive husbands. Today, people keep secrets for safety: They conceal medical conditions to receive better insurance coverage, and hide their legal status so they don’t get deported. Even scripture has something to say about secrets, which is, mostly: don’t keep them. Proverbs 28:13 reads, “He who conceals his sins does not prosper, but whoever confesses them and renounces them finds mercy.” God, in other words, wants full disclosure.</p>
<p>We keep secrets because we are ashamed or afraid; we tell them because we want an escape. We want to feel accepted, seen. Naturally, we share some secrets with our friends and partners, but sometimes those relationships are the source of a secret, so instead we seek out neutral interlocutors. A bartender in Las Vegas told me the same client came, week after week, to talk specifically with him about her anxiety and troubled dating life. A hairdresser in Salt Lake City told me that Mormons grappling with their faltering faith came to her, an ex-Mormon, to work through family conflict. A therapist I met in Arkansas observed that many of her clients were leaving Christianity and using therapy as their new religion, which she found “a little spooky.”</p>
<p>When I asked what she meant, she told me that people, ex-Christian or otherwise, often look to therapy to find a source of meaning and release in their life—to fill a spiritual and emotional vacuum. Evangelicalism, she said, values “inappropriate vulnerability,” where people share testimonies and break boundaries in public venues. She’s wary when she hears those same stories within the context of therapy—when clients come in and feel obligated to spill everything up front, then ask for cures to their emotional ailments.</p>
<p>Later, thinking about secrets, I remembered this conversation and the phrase “inappropriate vulnerability.” How much vulnerability with strangers is appropriate? How much is too much?&nbsp;</p>

<p>*</p>

<p>For a while, PostSecret was my secret. The website existed in the internet nest I made for myself during adolescence, along with sites like fmylife.com, where users each posted a few lines about the tediums and mishaps of their days, often involving anxiety, depression, alcohol, and sex. They were websites that revealed glimpses of how other people lived, where I could gather anecdotes about adult life and begin to construct an idea of how my own world might look one day.</p>
<p>I grew up in Temecula, a California suburb not too far from where Frank currently lives. My friends and I wandered around the mall to try on skinny jeans, and sprinted around after dark to toilet-paper our classmates’ yards. Suburban life often felt stifling, so I had a habit of inventing stories to make my world seem more interesting. I recounted to friends, with narrative flourish, an encounter I’d had with a freshwater shark in an alpine lake. I created a mysterious, dark-haired boyfriend who I’d met at a soccer tournament. I’d never actually had a boyfriend.</p>
<p>Temecula had a distinctly conservative atmosphere, and it was impossible to escape the shame that accompanied any stray thought about boys, or my changing body. Ours was a town where, in 2008, neighbours supported a California ban on gay marriage. Residents protested the city’s first mosque with signs reading “no to sharia law” in 2010. Arsonists set fire to a local abortion clinic in 2017, and, just in the past two years, the school board would ban critical race theory and reject an elementary school curriculum that referenced Harvey Milk. My family went to a Methodist church, but I sometimes went to Mormon dances with friends; at one such dance in middle school, my dress was too short, so a chaperone made me staple cloth to the hem to cover my knees. During slow dances, we held on to boys’ shoulders from an arm’s length away.</p>
<p>Most everyone I knew in Temecula went to church on Sundays. But I found church boring. I’d excuse myself to go to the bathroom and linger there during sermons, counting the flowers on the wallpaper. I didn’t understand how God, who I didn’t see or hear, could exist.</p>
<p>But even if I didn’t believe God was real, my family did, and religious ideas subtly permeated our home life, shaping what we did and did not talk about. We talked about doing well in school and sports; we didn’t talk about our feelings, or puberty, or dating. My body was a secret, softening and bleeding, fascinating and repulsive.</p>
<p>I didn’t really speak to anyone about these changes, though I do remember one car ride to school with a friend. Her mom was driving, and my friend slipped me pieces of paper in the backseat. In her scrunched-up handwriting, she asked: <em>Do you wear bras? Do you have hair down there?</em> When I was a freshman, my period bled through my capris, and upperclassmen stared as I waddled across campus to the cross-country teacher’s classroom for gym shorts, sweat slicking down my back. I’d only ever used thin pads, and I was too anxious to ask about buying tampons. I didn’t want to talk about it, and no one ever asked.</p>
<p>I can barely remember sex ed programming in school; for years, I thought just sleeping next to a boy could get me pregnant. When, in high school, I started the drug Accutane to tame my unruly face, my dermatologist listed off options for pregnancy prevention to avoid harm to an unborn fetus. A family member who was in the room interjected: “She’ll choose abstinence.” It was only after I left and my world opened up that I understood where I came from. That my hometown, and even my own family, bred secrecy.</p>
<p>If I wanted answers to questions—Should I be shaving? Why do I sometimes feel sad?—I had to find them elsewhere. So I swivelled for hours on an office chair in front of a wheezing PC. It was here I learned of Frank’s work.</p>
<p>I remember the glow of the monitor in the dark upstairs hallway, the feeling of the mouse under my hand as I scrolled through secrets. I remember the padding of feet on stairs, the quick click of the X. Browser window vanished.</p>

<p>*</p>

<p>Over the years, Frank has developed a process for selecting secrets. He sorts the most promising ones into a few boxes. A good secret involves a particular alchemy of art and content. He likes secrets he’s never heard before—there are fewer and fewer these days, but every once in a while something new will pop up—and secrets he has seen but which are presented in a surprising way. At this point, twenty years after the project began, he mostly relies on intuition to select those he posts to the website. He’s kept every postcard over the years, even during a cross-country move. (The secrets he’s posted in the past decade are stored in his upstairs closet and garage; the rest are mostly on loan to the Museum of Us, in San Diego.) Every postcard, that is, except one. He blames a relative for losing it.</p>
<p>On the website, the scrolling experience is simple enough—scroll, rectangle, scroll, next rectangle—but within the rectangles, something else is happening: a cacophony of colour, scrawl, scribble, cross-outs, stickers, stamps, maps, photographs, sketches. Once, I saw locks of hair taped to a postcard; the writer said they collected the hair of children they babysat. The spectre of tactility, if not tactility itself, reminds the viewer that there are thousands of people behind these postcards, and thousands of hours over the course of twenty years were spent creating them.</p>
<p>Is this sociology? Psychology? Voyeurism? The postcards are shaped like little windows, glimpses into someone’s life, devoid of context. Frank likes to think of them, in the collective, as a cross-section of human nature, and each week he tries to select a range of moods, including a smattering of lighthearted secrets to round out his postcard representation of the psyche, even though most of what he receives is dark. I wondered if reading all these secrets gave him some sort of unique lens into who we are, but he’s not sure. Everyone has different parts of themselves or their lives that they’re afraid to acknowledge. Today, most secrets he receives are about relationships—either feeling dissatisfied with a partner or revolving around loneliness.</p>
<p>“My hope is when people read the secrets each week they have no idea what I think about religion, politics, or feminism. I want to be across the board, so anyone can see themselves in a secret,” he said. “If it’s strong and offensive, guess what, people keep offensive, racist secrets in their heart. That’s part of the project—exposing that.” He doesn’t intentionally seek out racist or sexist secrets, and doesn’t post anything that’s “hardcore racist,” but he thinks there’s value in representing the less-than-savoury aspects of human nature, because that’s a true representation of who we are as a whole.</p>
<p>That said, there are some kinds of secrets he generally doesn’t post. He often doesn’t upload postcards written from the throes of suicidal ideation. He doesn’t want the website to become a toxic cesspool of hopelessness. He also doesn’t generally post the photos included with secrets when doing so might share with someone intimate knowledge that they didn’t know themselves. One postcard, for example, included a family photograph alongside a secret reading, <em>My brother doesn’t realize his father isn’t the same as our father</em>. All the faces were visible. What if the brother saw it and recognized himself? “I don’t feel like I have ownership of that secret,” Frank said. Instead, he posted the text.</p>
<p>There’s no way to fact-check the secrets; Frank takes those sharing them at their word. In 2013, he posted a secret depicting an image from Google Maps and a red arrow. It read: <em>I said she dumped me, but really, I dumped her (body)</em>. After an internet uproar, Reddit users found that the location was in Chicago, someone called the police, and the police found nothing, eventually determining the secret was a hoax. Legally, Frank told me, the postcards are considered hearsay.</p>

<p>*</p>

<p>The secrets come without context, so Frank put me in touch with a handful of their authors so I could&nbsp; understand what inspired them to send him their postcards. (Occasionally, the authors email him and reveal their identities.) One of them, Casey, was possessed by secrets for all of her childhood. (Casey is a pseudonym; some people in this piece asked that their names be changed to maintain their privacy.) Her father discouraged his kids from making friends and conditioned in them a suspicion of other people. Because he didn’t work, and because her mother, who she suspected had undiagnosed schizophrenia, was shuttered inside all day, Casey was forced to support the family financially. At age fourteen, she was collecting soda bottles for money. The roof was falling in. She was afraid to tell her family she was gay.</p>
<p>When she left home for college in the early 2000s, she was finally able to make friends of her own accord. All of them knew about PostSecret—it was, at the time, in its heyday—and they’d scroll through the entries every Sunday to compare favourites.&nbsp;</p>
<p>Casey liked the honesty of PostSecret, how it gave voice to the unspoken. Her father still had a psychic hold over her life, but she started opening up about her family to her new friends. One of them, Ramón, was gay, too, and not out to his family. They soon became close. He was an aspiring actor, extroverted and funny. It seemed like he knew everyone, and in turn, everyone said he was their best friend. Casey and Ramón were the only people in their friend group who didn’t drink. They’d both grown up with unstable families and were afraid that alcohol would make them lose control.</p>
<p>But when, in junior year, she started experimenting with drinking, he cut off their friendship, accusing her of betraying her values. She was baffled and frustrated; she thought his response was extreme. To do something with her frustration, she submitted a secret decorated with a photo of him in a Halloween costume reading: <em>A real friend would have stayed around and helped me</em>. She heard he’d seen the postcard and was furious, but they never really talked about it, and today, decades later, they’re no longer close. Casey doesn’t keep secrets anymore. She doesn’t tolerate them.</p>
<p>Some secret-keepers described their postcard as liberating. One woman, V., sent in a secret acknowledging that her infertility was a relief because she wouldn’t have to go off her bipolar medications while pregnant. She wanted to become a mother, but she felt that, even if fertile, her body wasn’t capable of carrying a baby, and she didn’t know how to tell her husband. When she wrote her secret, she stared at it on her table, and when it was posted, she stared at it on her screen. She was struck by the fact she could reveal her secret to the public but not to her partner, and decided to tell him how she felt. Last September, they adopted a son.</p>
<p>Others didn’t seem to think much about their secrets after the fact, I learned when I talked to Carl, aged sixty-seven, a former federal law enforcement agent who lives in Washington State. His postcard depicted a hand of eight playing cards. With a Sharpie, he’d written in all caps: <em>GAMBLING DESTROYED MY 4TH AND LAST MARRIAGE.</em>&nbsp;</p>
<p>As we talked, he was to the point, answering questions in a sentence or two and never elaborating. I could picture him: a gruff, single, middle-aged man who left the house every once in a while to get a cup of coffee with a buddy. He must be lonely, though he’d never admit it, and gambling must have distracted him from his loneliness. “I don’t have any secrets,” he said. “And if I did, I wouldn’t be telling you.”</p>
<p>In 2007, he found a postcard among the “boxes and boxes of crap” in his dead mother’s house. At the time, the divorce from his fourth wife was fresh and he was feeling bitter, so he grabbed a Sharpie, scrawled his message, and put it in the mailbox. “That was that. I was blowing off steam,” he said. “It wasn’t some contemplative therapeutic thing.” Then, he told me something that upended my assumptions about him. “It wasn’t my gambling,” he said. “It was her gambling.”</p>
<p>Some postcards are impulsive, I realized. And because the postcard hadn’t specified whose gambling was the issue, I’d filled in the gap. Fascinated by my own mental jump, I asked more questions. How long had they been married? How did he learn about the gambling? Four marriages? What about the other three? To that last question, Carl said, “I don’t think that applies.”</p>
<p>I wanted to tell him: <em>Of course it applies! </em>I felt like his whole life was bound up in that postcard. Something led to the breakup with his first wife, and his second, and his third, which then led him to his fourth, and to their breakup, and to this piece of mail that ended up on Frank’s website. I wanted his autobiography. I wanted to know everything.</p>

<p>*</p>

<p>Frank told me, “Most of our lives are secret. I think that in the same way that dark matter makes up ninety percent of the universe—this matter that we cannot see or touch or have any evidence of except for its effect on gravity—our lives are like that too. The majority of what we are and who we are is kept private inside. It might express itself in our behaviours, and our fears, and even in human conflict and celebration, but always in this sublimated way.”</p>
<p>Carl was less philosophical. “This thing happened, I forgot about it, and now I’m talking to you.”</p>

<p>*</p>

<p>In the years after he created the website, Frank wrote several books and held live events, which were often sold-out with more than a thousand people in the audience. The events were usually scripted: Frank shared secrets he’d received and secrets of his own. He was no longer the invisible curator. He was, instead, the very reason people gathered. Today he doesn’t do many events, and he says he’s finished writing books. But at the height of PostSecret a decade ago, the events were central to his work—and underscore how much he values the catharsis that follows disclosure.</p>
<p>In 2013, Frank travelled to Australia for a PostSecret tour. At an event in Melbourne, he seemed comfortable assuming his central role; midway through the evening, he shared his own story. He played a voicemail from his mother, who’d seen a copy of Frank’s first book. “I’m not too happy with it, so forget about mailing me one,” she said. This, Frank told the audience, was not a surprise. “My mom has been like that as long as I’ve known her.” His brother and father were estranged from her, but he and his mother still had a functional relationship. “Even so, my earliest memories being around my mom are memories of having to have my defences up. I couldn’t let my guard down. My earliest memories keeping secrets were from my mom,” he said.</p>
<p>He told the audience about his experience with the Pentecostal church. At the end of every service, he explained, members would share their testimonies, and the congregation would cheer and shout, “Amen!”</p>
<p>Evoking that part of the service, Frank said he wanted to share his own testimony with the audience: If he could go back in time and erase all the moments in his life that had caused him pain and humiliation and suffering, he wouldn’t. Each one of those moments, he said, had brought him to this moment and to the person he is today. He likes who he is today. Suffering in silence led him to make PostSecret; the darkest parts of his past were inseparable from the parts of himself he liked now, and they made him a better father. If you can get through your own struggles, he told the audience, “you’ll have this beautiful story of healing, a story that you can share with others, others who are in that struggle.” Adopting a faint Southern accent, he asked, “Can I get a witness? Can I get an amen, brother?” Someone shouted amen. “Thank you, sister.” The theatre erupted into applause.</p>
<p>Then, Frank invited people to line up in the aisles and share their secrets. When one woman stepped up to the microphone, she said, “About a year ago, my ex-boyfriend raped me.” Her voice broke, and through tears, she continued, “And then told me he was getting engaged the next day. I think it’s about time I ask for help.” The audience applauded, and Frank commented that often the first step to making change in one’s life is sharing a secret. The woman left the microphone. The next person stepped up to share.</p>
<p>There was something both beautiful and garish about this spectacle. I remembered my conversation with the Arkansas therapist and the idea of inappropriate vulnerability. Watching the woman speak, I felt a mix of queasiness and regret and rubbernecking and curiosity. It was the feeling I have when I reveal too much about myself too quickly, without the slow buildup of trust and intimacy. Then the microphone went to another person, as if this were a conveyor belt of secrets, and there was no time to grapple with the weight of what had just been said.&nbsp;</p>
<p>In a 2016 LitHub essay, the writer Erik Anderson accused Frank of profiting, however indirectly, from other people’s traumas with his books and speaker fees. Frank often refers to secrets as the currency of intimacy—we exchange our secrets and become deeper friends or partners—but to Anderson, they’re also Frank’s professional currency, the reason he has a career at all. What happens to the secrets of PostSecret, he asks? Does having a secret posted actually do anything beneficial for the sharer? “Warren’s feel good message about the healing benefits of disclosure, about self-actualization through confession, may elide a painful truth about secrets,” he writes. “Once shared, especially anonymously, they become secrets again, hidden by and in the very excesses of the internet that made them possible.”</p>
<p>Frank told me he’s aware of the delicate role he plays as the keeper of people’s secrets. People trust him to treat their stories with care, so he’s never tried to monetize the website. It’s true, he says, that most of his income from the past decade has come from book advances and speaker fees. But, he told me, “I don’t get too much negative feedback from anyone in the community.” And as for what happens to the secrets, he says he hopes that by sharing them, people might be motivated to take action. Or perhaps, like on the suicide hotline, they can begin to see their secrets differently. We often assign secrets a physical weight; maybe by making them public, we can make them lighter, or smaller. But none of that is guaranteed.&nbsp;</p>
<p>For an hour, the theatre in Melbourne was transformed into a church of secrets. In the church of secrets, pain is pedagogy. Pain must teach us something, must have meaning, or else how could we live through it? We turn pain into a story, and make that story public in the hopes that we might get something in return. Empathy. Action. Friendship. Money. If I could go back, I would never choose pain.&nbsp;</p>

<p>*</p>

<p><em>I have a secret</em>—this is the language we use. We possess secrets, hold them close, though sometimes, perhaps, it’s better said that secrets possess us. And by secrets I mean the things we feel we cannot say, and so no one says them. What I mean by secret is taboo. What I mean by secret is fear.</p>
<p>Around a year ago, when I was in California for the holidays, a high school friend who I’ll call Sam invited me to meet in a park. Another friend, Alex, was in town too. I hadn’t seen either of them in years. We sat underneath a cypress tree and threw a rubber Frisbee to the Australian shepherd Sam was dog-sitting. The air smelled of salt. The grass itched our legs. Sam told us she’d been going to sex therapy with her husband, who she married when she was twenty-three. She was now twenty-seven. She and her husband were both deconstructing from the church, a painful personal reckoning with a culture that preached sexual purity. She’d always felt guilty about sex, and she didn’t know about pleasure.&nbsp;</p>
<p>“I didn’t start going to the gynecologist until after college,” I offered in commiseration. “Until tenth grade I thought having sex was just sleeping next to each other.”</p>
<p>“I always felt so observed,” said Alex, the first of us to have a boyfriend in high school.</p>
<p>“You were observed,” I said. We laughed, and I sat back and marvelled. The three of us had slept together on blow-up mattresses and swum at the beach and splashed in backyard pools but had never really talked—at least, not about the things we considered secrets. We were women now. All these years later, we’d finally found the words.</p>
<p>I wondered if Frank had ever been able to talk openly with his family. PostSecret was, after all, partly inspired by the difficulties of his upbringing. Frank told me his father was initially skeptical of the project, finding it voyeuristic, and maybe unnecessary. But eventually he began to appreciate the project and even told Frank something he’d been holding in for a while.&nbsp;</p>
<p>But Frank’s mother never came around. When we were sitting on his patio in Laguna Niguel, I asked about her a few times, and he told me a story. When he was a teenager, after he’d moved to Illinois, Frank got into a fight with her. He can’t remember what happened, only that he’d probably done something to anger her. He ran to his room and locked the door. His mom pounded on the door with a mop, broke through one of the panels, and reached her hand through to unlock the door. Frank ran into his bathroom and opened the window. It was snowing and dark outside, around 9 p.m. He climbed through the window and ran a block down the street to his friend’s house. He and his friend started talking as though this were a normal hangout, but eventually, his friend looked down at his feet. “Where are your shoes?” Frank was wearing only socks.</p>
<p>I asked another question. Gently, without drawing attention to what he was doing, Frank changed the subject. It was the first time I’d seen him withhold information. He didn’t want to talk about his mother anymore, and I didn’t need to know.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Autonomous Overhead Powerline Recharging for Uninterrupted Drone Operations [video] (129 pts)]]></title>
            <link>https://www.youtube.com/watch?v=C-uekD6VTIQ</link>
            <guid>39945733</guid>
            <pubDate>Fri, 05 Apr 2024 18:50:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=C-uekD6VTIQ">https://www.youtube.com/watch?v=C-uekD6VTIQ</a>, See on <a href="https://news.ycombinator.com/item?id=39945733">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Some colleges will soon charge $100k a year – how did this happen? (109 pts)]]></title>
            <link>https://www.nytimes.com/2024/04/05/your-money/paying-for-college/100k-college-cost-vanderbilt.html</link>
            <guid>39945133</guid>
            <pubDate>Fri, 05 Apr 2024 17:46:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2024/04/05/your-money/paying-for-college/100k-college-cost-vanderbilt.html">https://www.nytimes.com/2024/04/05/your-money/paying-for-college/100k-college-cost-vanderbilt.html</a>, See on <a href="https://news.ycombinator.com/item?id=39945133">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2024/04/05/your-money/paying-for-college/100k-college-cost-vanderbilt.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[The Rise and Fall of Silicon Graphics (275 pts)]]></title>
            <link>https://www.abortretry.fail/p/the-rise-and-fall-of-silicon-graphics</link>
            <guid>39944496</guid>
            <pubDate>Fri, 05 Apr 2024 16:42:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.abortretry.fail/p/the-rise-and-fall-of-silicon-graphics">https://www.abortretry.fail/p/the-rise-and-fall-of-silicon-graphics</a>, See on <a href="https://news.ycombinator.com/item?id=39944496">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>James Henry Clark was born on the 23rd of March in 1944 in Plainview, Texas. Clark’s family was far from wealthy. His father was fond of drinking and couldn’t keep a job. His mother worked at a local doctor’s office making about $225 per month (around $2605 in 2024). Clark’s parents divorced while Clark was still young, and while that salary may seem fine if low adjusted for inflation, Clark’s mother would only have received $175.50 ($2032) after income tax and social security tax, and it was the sole income for a woman and her three children. For himself, Clark was a bit rowdy. His high school highlights include setting off a smoke bomb on the band bus, smuggling a skunk into a school dance, telling his English teacher to go to Hell, drinking, and drag racing. Given the era, I imagine that the drinking was accompanied by chain smoking.</p><p>That times were different is… inadequate verbiage. For all the unruly behavior, Clark was only suspended from school twice. On his second suspension, young Clark decided he’d not be returning to school. He chose to join the US Navy and convinced his mother to sign the permission forms. Of course, this is Jim Clark, and the initial days of his naval career didn’t exactly go well. Clark had never taken a multiple choice test. He thought that for many questions more than one of the answers were at least partially true and therefore selected them. The officers in charge of test administration thought that Clark was attempting to fool the computer that checked the answers, and he was immediately sent out to sea with other delinquent recruits where he was given poor treatment, and rough and disgusting chores. The experience of Naval life lit a fire in Clark, and he chose to advance his station in life. He began learning about electronics, taking some general educational courses, and offering loans to other sailors at up to forty percent interest.</p><p>His first step was to get his General Education Diploma, which he did. He then enrolled at Tulane. Clark did well at Tulane but transferred to the University of New Orleans from which he received his BS and MA in Physics. He then attended the University of Utah where he earned his Ph.D. in computer science in 1974. From 1974 through 1978, Clark was employed as an assistant professor at UC Santa Cruz, but he left to become an associate professor at Stanford in 1979.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png" width="407" height="584.1046025104603" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:343,&quot;width&quot;:239,&quot;resizeWidth&quot;:407,&quot;bytes&quot;:94503,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F342c42c8-1711-4ced-9743-39ee9643b2f9_239x343.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption>Jim Clark</figcaption></figure></div><p><span>Early in his time at Stanford, Clark worked on a project with Xerox PARC with support from ARPA to develop three dimensional graphics. This led to the creation of the Geometry Engine. In “</span><em>The Geometry Engine: A VLSI Geometry System for Graphics,</em><span>” Clark also makes specific reference to Marc Hannah and Lynn Conway as being valuable contributors to the effort. What was the Geometry Engine? It was a special purpose microprocessor that handled matrix math along with point mapping. It featured an instruction set suitable both to 2D and 3D graphics, could generate quadratic/cubic curves and conic sections, worked with both vector and raster based systems, and operated in either integer or floating point systems as needed. In fewer words, Jim Clark and his team at Stanford along with the folks of PARC invented the GPU.</span></p><div data-component-name="FileToDOM"><div><p><img src="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack.com%2Fimg%2Fattachment_icon.svg"></p><div><p>The Geometry Engine: A VLSI Geometry System for Graphics</p><p>1.01MB ∙ PDF file</p></div><p><a href="https://www.abortretry.fail/api/v1/file/66f72818-db99-4d73-977d-d8aca262e06b.pdf" rel=""><span>Download</span></a></p></div><p>The Geometry Engine: A VLSI Geometry System for Graphics</p><p><a href="https://www.abortretry.fail/api/v1/file/66f72818-db99-4d73-977d-d8aca262e06b.pdf" rel=""><span>Download</span></a></p></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png" width="726" height="958.6267605633802" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:750,&quot;width&quot;:568,&quot;resizeWidth&quot;:726,&quot;bytes&quot;:1079259,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc357f4a4-05b9-4de5-b812-8041185d4d84_568x750.png 1456w" sizes="100vw"></picture></div></a><figcaption>The Geometry Engine, image from ACM via Stanford</figcaption></figure></div><p>Clark founded Silicon Graphics Inc on the 9th of November in 1981, and he left Stanford early in 1982 to pursue building the company full time with just $25000 in funding (around $85000 in 2024) from a friend and the contents of his own accounts. Accompanying Clark in this adventure were Kurt Akeley, Dave Brown, Tom Davis, Mark Grossman, Marc Hannah, Herb Kuta, Rocky Rhodes, and Abbey Silverstone. While SGI knew they would deal in computers outfitted with a powerful GPU, they did not know precisely what else those computers should feature. As a result, Clark asked potential customers what they’d like to see in a workstation. While at least one potential customer was interested in VMS, NASA’s new Advanced Supercomputing division was very interested in UNIX and they were willing to pay. The division’s director at the time spoke with Clark, and (verbally) committed to purchasing at least eighteen workstations in their first order.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png" width="726" height="230.7642857142857" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:178,&quot;width&quot;:560,&quot;resizeWidth&quot;:726,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6feaa947-8be5-4c44-a921-78b74e1f40e9_560x178.png 1456w" sizes="100vw"></picture></div></a></figure></div><p><span>As things began to come together around a product plan, </span><a href="https://www.mayfield.com/" rel="">Mayfield</a><span> invested in the young company. As the development and production of workstations is rather expensive, Clark and SGI’s other founders were forced to sell more and more of the company’s ownership to keep operating. The first product to ship was the IRIS 1000, where IRIS meant Integrated Raster Imaging System, in November of 1983. This machine was intended for use as a terminal for a VAX-11 and featured a Motorola 68000 clocked at 8 MHz with 768K RAM, a Geometry Engine clocked at 6 MHz capable of over six million geometric floating point operations per second, and a 10 Mbps ethernet NIC. The cabinet of the IRIS 1000 was ten inches wide, twenty one inches tall, twenty seven inches deep, and when fully assembled weighed in at one hundred pounds with a ten slot backplane. This machine was followed by the IRIS 1200 which was the same machine but with a twenty slot backplane. These were followed by workstation models 1400 and 1500 in April of 1984 which upgraded the CPU to the Motorola 68010 clocked at 10 MHz with 1.5M of RAM. These machines were differentiated from one another in the size of HDD they featured with the 1500 having been larger. The 1400 featured a 72MB </span><a href="https://www.abortretry.fail/p/the-floppy-disk" rel="">winchester disk</a><span>, while the 1500 featured 474MB of SMD. Both of these ran a UNIX SVR4 variant with BSD enhancements called GL2, and they featured twenty slot backplanes. The main system boards in these four machines were licensed from Andy Bechtolsheim just before he founded </span><a href="https://www.abortretry.fail/p/the-network-is-the-computer" rel="">Sun Microsystems</a><span>. The 1000 and 1200 used the PM1 and the 1400 and 1500 used the PM2. These were not cheap systems with the IRIS 1000 having a price of $22500 (around $67200 in 2024) and the 1400 having a price of $35700 in 1984 (around $106600 in 2024). These twenty slot machines were eighteen inches wide, twenty nine inches tall, and twenty seven inches deep, and fully assembled weighed in at two hundred pounds. By the time the first of these machines sold to Carnegie-Mellon University’s Electronic Imaging Lab, the founders of SGI owned very little of their company.</span></p><p>From nearly the first day that SGI’s hardware was on the market, software developers began trying to exploit the machines’ graphics capabilities. A rather prominent example of this was Wavefront Technologies in Santa Barbara led by Bill Kovacs, Larry Barels, and Mark Sylvester. Their first product was called Preview and launched in 1984 on SGI’s hardware. Their customer list included Universal Studios, NBC, NASA, and Electronic Arts. Naturally, this also informs us that these companies were using SGI hardware.</p><p>Given the outline of his youth, it isn’t very surprising that Clark was a hands-off kind of manager. He would hire the brightest minds he could, set a general target, and then let people go after it however they saw fit. There are two narratives for what follows. The first and most common that I’ve read was that Mayfield didn’t much care for Clark’s management style and they brought Ed McCracken formerly of HP in as CEO. The second narrative states that Clark didn’t care for running the company and brought McCracken in on his own accord. Whatever the case, McCracken stated of Clark:</p><blockquote><p><em>Jim's not a day-to-day person. He works in his own time frame. He takes complex things and makes it simple. It might take a month, a day, or a year. He gets in these moods for a while where he's almost unavailable. He's most effective when he's in that mood.</em></p></blockquote><p>In August of 1985, the company introduced the IRIS 2000 series of workstations. These machines were all based upon the the PM2 system board featuring the Motorola 68010 clocked at 10 MHz with a floating point coprocessor (SKYFPM-M-03). Naturally, these all featured the graphics engine as well. The IRIS 2000 and 2200 were ten slot backplane, shipped without a disk, and were intended for use as terminals. The 2300 and 2400 were twenty slot backplane and shipped with winchester disks. The IRIS 2500 was rackmount and used SMD disks. The 2000 series used a Geometry Engine clocked at 8 MHz. A few months after the initial launch of these upgraded machines, SGI launched the turbo line. This included the 2300T, 2400T, and 2500T which featured the IP2 system board with a Motorola 68020 clocked at 16 MHz, an FP1 floating point unit, and 2MB to 16MB of RAM. The RAM of the turbo units used a newer, faster, local bus. As a result, the RAM between turbo and non-turbo systems could not be mixed. This was an important bit of information as SGI did offer turbo upgrades for non-turbo systems that would then require the purchase of expensive proprietary memory.</p><p>In January of 1986, SGI made their initial public offering raising $17.2 million (nearly $49 million in 2024) with trading having started at $3 per share and topping $30 on the day. The following month, the company introduced the IRIS 3000 line. These are very similar to the IRIS 2000 turbo machines but with Enhanced IRIS Graphics. These featured either ten or twelve Graphics Engines clocked at 10 MHz with either eight or thirty two bitplanes depending upon configuration. The 3000 line could be ordered with either winchester disk drives, ESDI drives, or SMD.</p><p>Also in 1986, Control Data Corporation and Silicon Graphics signed a deal under which CDC would resell IRIS machines under CDC’s own branding. As far as I know, no complete listing of which models sold under what naming survives today, but it is known that the IRIS 3130 was resold as the CDC Cyber 910. This would make it a machine with twelve GEs at 10 MHz and ESDI drives.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg" width="1456" height="1941" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1941,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F86698a05-3d98-4ae8-a1d6-332ca658a339_1875x2500.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>IRIS 3130, rebadged by Control Data, image from sgistuff.net</figcaption></figure></div><p>In March of 1987, Silicon Graphics announced a new machine that marked a major transition for the company. The Professional Iris was a RISC machine built around the R2000 from MIPS Computer Systems (another project started at Stanford and spun out as its own company) clocked at 8 MHz. The company’s press release read:</p><blockquote><p><em>The first member of the Iris line is the 4D/60, a RISC superworkstation with a 32-bit 8 MHz CPU from MIPS Computer Systems. It offer performance three times that of the Silicon Graphics Iris 3100 series. The graphics performance has been enhanced with 38 custom and semicustom graphic chips. It performs 140,000 32 bit three dimensional floating point transformations per second and renders over 4,500 100-pixel polygons per second with smooth shading and hidden surface removal. It offers 24 colour bit-planes for more than 16 million colours; four user-accessible system planes for overlay or underlay, menu and windowing functions; a 24-bit Z-buffer enabling hidden surface removal with greater accuracy and realism; high-level primitives such as splines and surfaces for more accurate renderings; and a multi-mode graphics windowing environment. </em></p><p><em>Standard configuration includes 4Mb CPU, eight colour bit-planes for 256 colours); four system planes, a Weitek-based floating point accelerator board; a 170Mb ESDI disk and controller; a 19″ 1,280 by 1,024 60Hz non-interlaced colour monitor; keyboard and mouse; and a floor-standing chassis with 12 VME slots and a 1,000-watt power supply. </em></p><p><em>Software compatible with the previous generation, it runs Unix System V.3 with a base price of $74,000.</em></p></blockquote><p>The Professional Iris line included the 4D/60 mentioned in the press release followed by the 4D/50, 4D/70, 4D/80, and 4D/85. All of these featured the R2000 CPU with a floating point coprocessor. The 50 and 60 had an R2000 clocked at 8 MHz, while the 70 was at 12.5 MHz, and the 80 and 85 were clocked at 16.7 MHz. For comparison to other architectures, the 4D/50 was capable of seven million instructions per second, the 70 was capable of ten million, and the 80 was capable of thirteen million. The 50 and 60 had memory configurations starting at 4MB and upgradeable to 12MB. The rest of the lineup started at 8MB and could be upgraded to a maximum of 144MB. The first of the 4D/60, 50, and 70 systems to ship utilized the Clover 1 graphics system. Later models shipped with Clover 2 branded as IRIS GT. IRIS GT brought hardware support for lighting, smooth shading, antialiasing, pan/zoom of images, arbitrarily shaped windows, and other rather modern capabilities. Importantly, the bus for this system was a proprietary 64 bit bus. The actual chips powering all of the graphics capabilities were still the Graphics Engines, but these were updated some and they were capable of twenty million floating point operations per second. The Professional Iris series brought an end to the disk anarchy of the previous lineup and all systems utilized SCSI hard disks, and QIC-120 tape drives were also available. These systems were resold by both Control Data Corporation and Prime Computers. The UNIX version mentioned in the press release was SGI’s 4D1 which would later be renamed IRIX.</p><p>On the 29th of March in 1988, Control Data Corporation announced that it would be acquiring twenty percent of Silicon Graphics for $68.9 million (nearly $181 million in 2024) and extending its licensing deal for reselling SGI’s machines with an agreement to purchase $150 million (around $393 million in 2024) in hardware over the next three years.</p><p>On the 16th of September in 1988, SGI announced that IBM would be purchasing graphics cards and licensing IRIS GL, the software library for SGI’s graphics, for use in the IBM RS/6000 POWERStation. McCracken commented:</p><blockquote><p><em>We are pleased to establish a relationship with IBM and look forward to working with them. The agreement reinforces our long-time conviction that three-dimensional graphics will become a mainstream technology in the computer industry. As real-time 3D graphics is made more affordable, the rapid growth that the 3D workstation industry is experiencing will continue to escalate.</em></p></blockquote><p><span>The card in question was the IrisVision, and while I refer to it as a card, it was really two cards. The primary card held the Graphics Engine and daughter cards held the framebuffer and z-buffer memories totaling 5MB for the framebuffer and 3.75MB for the z-buffer. The primary card connected to the computer via its MCA bus edge connector, and it provided a DE-15 connector for display attachment. Overall, the IrisVision&nbsp;MCA card’s hardware was extremely similar to the graphics system in the SGI Personal Iris series introduced in 1987. It featured SGI’s fifth generation geometry processing pipeline (referred to as GE5, or Graphics Engine five), either an eight or twenty four bit per pixel frame buffer, and twenty four bits per pixel z-buffer. Also, just as the workstations’ hardware did, the IrisVision implemented the entire IrisGL API in hardware. The primary difference in IrisVision was the presence of a VGA (DE-15) passthrough for 2D graphics. In the course of the IrisVision’s development, an IBM PS/2 running OS/2 was used for testing and development. This resulted not only in a minimal OS/2 driver, but also in an ISA version of the IrisVision being developed. Ultimately, the only major customer SGI had managed to obtain was IBM for the MCA card for the RS/6000 UNIX workstations. Their struggle may have been that the card was priced at $4995 (just over $13000 in 2024). The company ultimately spun off the entire project as a separate company, Pellucid, which didn’t fare well. The former SGI employees who started Pellucid still managed to change the world </span><a href="https://www.abortretry.fail/p/so-powerful-its-kind-of-ridiculous" rel="">when they founded 3dfx</a><span> which used similar technology as well as the passthrough for 2D graphics.</span></p><p>SGI held a rather firm grasp on high-end graphics workstations, but hadn’t yet made a push into the entry level market. This changed with the introduction of the Personal Iris lineup. The line started with the 4D/20 which made use of a R2000 CPU from MIPS clocked at 12.5 MHz achieving ten million instructions per second. The other three machines made use of the R3000. In the 4D/25 the R3000 was clocked at 20 MHz achieving sixteen million instructions per second. In the 4D/30, the clock speed was pushed to 30 MHz and the performance was bumped to twenty seven million instructions per second. The highest performance model was the 4D/35 at 36 MHz and thirty three million instructions per second. Maximum memory supported on these systems was 128MB. Personal Iris systems were sold by both SGI and Control Data as expected, but these systems were also offered rebadged by the somewhat newly reconstituted Groupe Bull. From what I can find, Bull’s sales of rebadged SGI machines weren’t great; they had better luck with NEC hardware. For the naming “Personal Iris” and the thought that SGI would be attacking the “low-end” of the workstation market… the pricing wasn’t all that reflective unless one were to compare to “high-end” SGI machines which could reach lofty prices of about $100000 (about $262000 in 2024). The Personal Iris line started at $20000 (roughly $52000 in 2024).</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg" width="709" height="985.6829268292682" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:513,&quot;width&quot;:369,&quot;resizeWidth&quot;:709,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b5e2b31-3d63-4334-b5c4-d9c78fd90694_369x513.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>SGI Personal Iris, press image from SGI</figcaption></figure></div><p>The other, much higher end and far more expensive, SGI lineup introduced at this time was the PowerSeries which were multi-processor systems (up to eight CPUs) and could be deskside or rackmount. These systems could also support higher clocks at up to 40 MHz which in combination with up to eight processors could mean performance over two hundred thirty million instructions per second. The power of these systems was put to use in the movies The Abyss, Terminator 2, and Jurassic Park among many more.</p><p>In March of 1991, Compaq acquired thirteen percent of SGI for $135 million (around $307 million in 2024) along with an agreement to invest another $50 million (about $114 million in 2024) in the development of a new workstation that would be priced at around $7500 (roughly $17100 in 2024). </p><p>The most famous and beloved SGI systems were introduced from 1991 to 1995. These models were the Indigo, Indigo 2, and the Indy. The corresponding high-end systems were the Crimson, and Challenge series. The first Indigo system released in 1991 featured a MIPS R3000 CPU clocked at 30 MHz. The Indigo (and Crimson) moved SGI’s systems to 64 bit MIPS CPUs starting with the R4000 at 100 MHz and the R4400 at 150 MHz in 1992. The 150 MHz part in an Indigo could achieve one hundred twenty million instructions per second. The Indigo 2 was first introduced in 1993 with the MIPS R4400 CPU and “Extreme” graphics. The Indy was lowest end SKU of the three, and it was introduced in July of 1993 with a 100 MHz R4000PC CPU, 24 bit graphics system, 16MB of RAM, the IRIX operating system, a fifteen inch monitor, and a price of $4995 (about $10700 in 2024).</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg" width="995" height="512" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:512,&quot;width&quot;:995,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe9d42849-c42c-4882-8d34-4b5f8e8fa97c_995x512.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>SGI Indigo 2, image from unixhq.com</figcaption></figure></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg" width="1456" height="1456" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1456,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:2969758,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff762c302-1f27-41f2-88e0-b610553c931f_3264x3264.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>SGI Indigo 2 10000 IMPACT, from my personal collection</figcaption></figure></div><p>On the 13th of March in 1992 announced that it was acquiring MIPS Computer Systems via a stock swap worth about $333 million (around $737 million in 2024). This followed MIPS having had financial problems, high employee turnover, and the exit of the company’s president, Charles Boesenberg, one month earlier. For SGI, the acquisition ensured their part supply. MIPS Computer Systems became MIPS Technologies. The combined company had revenues at around $1 billion (about $2.21 billion in 2024). However, the large acquisition did mean that SGI posted a loss on the year of about $118 million (or $261 million in 2024). This move also briefly brought SGI into the ACE alliance that aimed to build a workstation standard on the MIPS CPU and the UNIX operating system as well as the 80386/486 and NT. This group was built of Compaq, MIPS, Microsoft, DEC, SCO, Acer, CDC, Kubota, Olivetti, NKK, Prime Computer, Pyramid Technology, Siemens, Sony, Sumitomo, Tandem, Zenith, and Wang. SGI and Compaq left the alliance rather promptly. This could be due to their own arrangement not long before, but ACE fell apart completely not much later anyway. I suspect that no strong alliance of fierce competitors would last long in a market that was shrinking due to low-cost commodity hardware and software consistently improving year over year in the PC compatible market. Yet, the SGI Indigo 2, Indy, Challenge and a few more were mildly compliant with the ACE ARC (Advanced RISC Computing) standard.</p><p>On the 30th of June in 1992, Silicon Graphics released OpenGL. This was a cross-platform API for both 2D and 3D graphics allowing hardware acceleration of rendering via one or more GPUs descended directly from IRIS GL. Unlike its predecessor, OpenGL did not have windowing, and it didn’t offer a mouse or keyboard API. IRIS GL had been developed before X and other graphical environments were available, and therefore had needed those features, but OpenGL had no such requirements. Another major change in the transition to OpenGL regarded feature availability. IRIS GL presupposed the use of SGI’s hardware. OpenGL could not make such an assumption, and as a result it allowed features not supported by a GPU to be rendered in software by the CPU. One customer this would positively affect was Microsoft who’d licensed IRIS GL for inclusion in NT in 1991.</p><p>At the end of 1992, Jim Clark met with Nintendo CEO Hiroshi Yamauchi to discuss bringing 3D graphics to Nintendo’s next game console. In many ways, the Nintendo 64 was an SGI workstation in miniature with a MIPS R4300 CPU clocked at 93.75 MHz offering one hundred twenty five million instructions per second, 4MB of Rambus DRAM at 250 MHz (actually 4.5MB but 512K is visible only to the GPU) which could be doubled with a RAM expansion pack, and the Reality coprocessor clocked at 62.5 MHz which offered the SGI GraphicsEngine (though a more modest version). The system supported 16.8 million colors, a maximum resolution of 640x480, and audio sampled at up to 44.1 KHz. Unfortunately, the design of the system meant that the full capabilities would almost never be fully realized. For example, there was no dedicated sound chip, so high sample rates would tax the CPU, and while the R4300 is 64 bit, the Nintendo 64 had a 32 bit data bus. Yet, showing the nature of the hardware packed into the Nintendo 64 is the Nintendo 64DD. This offered 64MB read/write magnetic disks (similar to Zip), a real time clock, internet connectivity via a 28.8 kbps modem, keyboard, mouse, and audio/video capture effectively transforming the Nintendo 64 into a small workstation. The expansion, after significant delays and a one year two and a half month life on the market, was a commercial failure. The Nintendo 64 itself, however, was a huge success following its release in 1996.</p><p>Industrial Light and Magic had been using SGI hardware since 1987, and on the 8th of April in 1993, they announced a partnership with SGI to create the Joint Environment for Digital Imaging, or JEDI. This allowed the two companies to gain insight from each other’s work. SGI got access to much of ILM’s software expertise while ILM got access to the latest and greatest hardware at a discount.</p><p><span>In 1994, Jim Clark left SGI, sold his shares in the company, and went on to </span><a href="https://www.abortretry.fail/p/the-modern-memex" rel="">partner with Marc Andreessen and start Netscape</a><span>.</span></p><p>In 1995, SGI spent about $500 million (or $1 billion in 2024) acquiring Alias Research, Kroyer Films, and Wavefront technologies. At roughly the same time, SGI worked with DreamWorks SKG to form DreamWorks Digital Studio where these newly acquired companies’ products could be put to good use.</p><p><span>On the 26th of February in 1996, Silicon Graphics acquired Cray Research for $740 million (or $1.47 billion in 2024). This gave SGI control of around forty percent of the high performance computing market at the time. While many industry analysts speculated about SGI’s motives, Cray was struggling to survive and they had multiple installations at NASA. While SGI had been successful in entertainment, that sector accounted only for something around ten percent of SGI’s annual revenues. The bulk of SGI’s customers were governmental, so much so that SGI created the wholly owned subsidiary Silicon Graphics Federal Inc to hold those contracts and provide service and support for governmental organizations. In this way, SGI was essentially making sure they couldn’t lose one of their largest and most valuable customers, NASA, as they’d be the provider of not only workstations but also the support and service of NASA’s supercomputers. The supercomputer relationship benefited SGI all the way to 2008 with </span><a href="https://www.nas.nasa.gov/hecc/resources/pleiades.html" rel="">Pleiades</a><span>.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg" width="800" height="618" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:618,&quot;width&quot;:800,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6616be0-a734-4714-a45d-e53460d6a36b_800x618.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Cray Y-MP Model D installation at NASA’s Glenn Research Center, image from Clive England via cray-history.net</figcaption></figure></div><p>The new SGI workstations of 1996 were the O2 and O2+ series. These systems were very different from both their predecessors and successors in that they utilized a unified memory architecture via the Memory &amp; Rendering ASIC (MRE). The MRE had direct paths to all parts of the O2 such as the CPU, memory, I/O, compression, display, and imaging. Due to this structure, graphics hardware wasn’t optional but rather integral to the system’s design. The O2 could come equipped with an R5000, RM5200SC, RM7000A, R10000, or R12000 CPU. Frequencies ranged from 180 MHz to 400 MHz, all options had on-board floating point support, and could support up to 1GB of unified memory via eight 128MB DIMMs of one hundred thirty nine pin SDRAM.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg" width="1456" height="2174" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:2174,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F690e88f8-b329-423e-b05e-adc75b6c7c4f_1674x2500.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>The high-end deskside and rackmount options made available at this time were the Origin 2000, Origin 200, and Onyx 2 series. These were multiple CPU systems with distributed, shared-memory architecture called S2MP. The Origin 200 was the entry level system, the Onyx 2 was a step up, and the Origin 2000 was the premium SGI branded system and was rackmount. This series also had Cray Origin at the super-premium level with up to one hundred twenty eight R10000 CPUs. The IRIX operating system shipped with these models supported SMP.</p><p>On the 14th of May in 1997, SGI announced the acquisition of ParaGraph International Inc. ParaGraph was a vendor of VRML and web graphics software, and after the acquisition the company and its assets were moved to Mountain View with the new name of Cosmo Software. McCracken commented:</p><blockquote><p><em>One of the most important long-term growth opportunities for Silicon Graphics is to empower the designers, developers, and service providers of the Second Web. With the acquisition of the leading PC 3D Internet company and the formation of Cosmo Software, we are increasing our investment and reinforcing our leadership in the market for the software and services that will bring about this new interactive medium.</em></p></blockquote><p>Bringing the technologies of Onyx 2 series to the midrange workstation was the Octane, released in January of 1997. This was the a desktop machine instead of deskside, but it supported dual CPUs. This line featured the crossbar switch that debuted in the high-end and server machines of the prior year. The concept was that instead of a traditional shared bus, each subsystem could communicate with any other without interference. The crossbar switch had seven ports: HEART ASIC (CPU and memory), graphics (Impact [first or second generation] or VPro), XIO B, XIO C, XIO D, built-in I/O, PCI bridge. The Octane did have a higher-end version, the Octane 2, which featured more powerful CPUs and GPUs, higher density memory support, and a beefier PSU. CPUs in the Octane ranged from the R10000 at 175 MHz to the R14000A at 600 MHz, and RAM ranged from 64MB to 2GB.</p><p><span>Silicon Graphics didn’t do too well in 1997 overall. For revenues of $3.6 billion (or $7 billion in 2024) the company posted a loss of $78.6 million (roughly $152 million in 2024). On the 29th of October in 1997, Ed McCracken resigned as did the executive vice president of sales and marketing, Gary Lauer. The company then laid off around nine percent of its employees (about seven hundred people). Richard Belluzzo (formerly at HP) took over as CEO and Robert H. Ewald who was already the executive vice president of computer systems (formerly president of Cray) took over Lauer’s job duties. Some sources claim that McCracken was forced out, but this isn’t accurate. At the annual shareholder meeting in Palo Alto, McCracken announced his resignation stating: “</span><em>after a great deal of thought, the time is right for me and the company to make a change</em><span>.” He then proceeded to find and to hire his replacement himself.</span></p><p>Around this time, Silicon Graphics filed a lawsuit against a startup called ArtX. ArtX was founded by Dr. Wei Yen and around nineteen other SGI employees who’d worked on the Nintendo 64. The company’s original goal was to develop a PC graphics chip that would rival 3dfx. Then, in May of 1998, the company gained a contract to develop a graphics processor for Nintendo’s next generation game console, the GameCube. At COMDEX in the autumn of 1999, the company unveiled the Aladdin 7 chipset which shipped as integrated GPUs on K6-2 and K6-3 motherboards made by Acer Labs. ArtX was bought by ATI in February of 2000. ArtX’s technology was incorporated into ATI’s GPUs from 2002 until roughly 2005. SGI’s lawsuit against ArtX was quietly dropped in 1998 without any settlement having been reached.</p><p><span>On the 1st of January in 1998, shortly after taking over as CEO, Belluzzo sold two of SGI’s PCB factories and restructured the company from twenty six groups to just five. SGI then setup MIPS Technologies as its own legal entity (though SGI maintained a majority ownership), terminated the Cosmo software business, and proceeded to make customers hesitant to continue investments into the MIPS architecture by announcing SGI’s intent to migrate to </span><a href="https://www.abortretry.fail/p/the-itanic-saga" rel="">Itanium</a><span> (and collaborating on projects Monterey and Trillian) while simultaneously launching an IA-32 series of machines running NT known as the Visual Workstation. Additionally, the company began outsourcing the manufacturing of their computers, and cut the operating budget by about $200 million (or $381 million in 2024). In Spring of 1998, the company announced a lawsuit against NVIDIA for patent infringement.</span></p><p>None of this helped to change the overall direction of the company. Revenues fell to $3.1 billion and the company posted a loss of $460 million for 1998. On the 20th of July in 1999, without adequate funding to continue the lawsuit against NVIDIA, SGI and NVIDIA agreed to license one another their respective patent portfolios. The company continued to lose money, and Belluzzo left on the 22nd of August in 1999 to lead Microsoft’s MSN division.</p><p>As Bob Bishop took the reigns of SGI, things looked dark. AMD announced their 64 bit architecture in October, PC graphics had made massive strides while remaining significantly less expensive than SGI’s offerings, NT was proving to be a solid and less expensive competitor to UNIX, Linux was eating away at traditional UNIX market segments, and Itanium still hadn’t launched. By this point, the company had no fall back as they’d mostly stopped investment into new MIPS CPUs.</p><p>On the 2nd of March in 2000, SGI sold Cray to Tera Computer for $22 million (or $40 million in 2024). Tera promptly renamed itself to Cray Inc as it took on an installed base of six hundred supercomputers and two hundred customers across thirty different countries.</p><p>SGI’s final MIPS workstations were the Fuel and Tezro lines. Fuel was introduced in 2002 with the R14000 clocked at 500 MHz, up to 4GB of DDR SDRAM, and SGI’s VPro graphics. Models were available with up to an R16000 CPU clocked at 900 MHz. The Tezro was launched in 2003 starting at $20500 (or $34574 in 2024). This model featured only the R16000 and could be configured at clock speeds from 600 MHz to 1 GHz with 512MB to 8GB of DDR SDRAM and SGI’s VPro graphics. Fuel workstations were single CPU, but Tezro was offered with one to four CPUs. While SGI’s IA-32, Itanium, and Xeon workstations and servers sold, they didn’t make much money. On the 10th of July in 2003, SGI vacated and leased their headquarters to Google.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg" width="1024" height="601" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:601,&quot;width&quot;:1024,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;undefined&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="undefined" title="undefined" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0506bff0-0947-41de-8184-b978e6120faa_1024x601.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>SGI’s headquarters after becoming the Googleplex, by Coolcaesar at English Wikipedia</figcaption></figure></div><p>As SGI’s fortunes continued to decline, the company sold Alias Systems (formerly Alias|Wavefront) for $58 million on the 16th of April in 2004 to Accel-KKR (roughly $95 million in 2024). Then, in November of 2005, SGI was delisted from the NYSE due its stock price sinking below the minimum required. In January of 2006, Dennis McKenna was hired as president and CEO, and named chairman of the board. Bishop remained on the board of directors and served as vice chairman. On the 8th of May, the company filed for bankruptcy protections. The campus leased to Google was sold to Google in June of 2006 for $319 million (or $491 million in 2024). It’s prior home in Mountain View had been sold to the Computer History Museum in 2002. The company emerged from bankruptcy and was relisted in October. The official end of SGI’s MIPS and IRIX came on the 29th of December in 2006 with the final orders being fulfilled in March of 2007. Bob Ewald replaced McKenna as CEO on the 9th of April in 2007. In December of 2008, SGI was again delisted. On the 1st of April in 2009, the company filed for bankruptcy, and was subsequently purchased by Rackable Systems for around $42 million on the 11th of May in 2009 (roughly $65 million in 2024). Rackable renamed itself Silicon Graphics International following the acquisition, and it was later bought by Hewlett Packard Enterprise.</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fortran on WebAssembly (183 pts)]]></title>
            <link>https://gws.phd/posts/fortran_wasm/</link>
            <guid>39944275</guid>
            <pubDate>Fri, 05 Apr 2024 16:21:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gws.phd/posts/fortran_wasm/">https://gws.phd/posts/fortran_wasm/</a>, See on <a href="https://news.ycombinator.com/item?id=39944275">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="quarto-content">
<!-- sidebar -->
<!-- margin-sidebar -->
    
<!-- main -->
<main id="quarto-document-content">





<video controls="" autoplay="" muted="" loop="" width="100%">
<source src="https://gws.phd/posts/fortran_wasm/digits.webm" type="video/webm; codecs=vp9">
<source src="https://gws.phd/posts/fortran_wasm/digits.mp4" type="video/mp4">
</video>
<figcaption>
<a href="#mnist">Digit classification</a> with machine learning, running in the browser using BLAS routines compiled to WebAssembly.
</figcaption>
<section id="introduction">
<h2>Introduction</h2>
<p><span><a href="https://fortran-lang.org/">Fortran</a></span><a href="#fn1" id="fnref1" role="doc-noteref"><sup>1</sup></a> is one of the oldest programming languages around. It first appeared in 1957, making it older than the C programming language, the Intel 4004 CPU, and even the IBM System/360 series of mainframe computers<a href="#fn2" id="fnref2" role="doc-noteref"><sup>2</sup></a>. Fortran was created at a time when the byte had just been invented, and computers were still made of vacuum tubes and frustration.</p>
<div><p><sup>1</sup>&nbsp;The name is derived from <em>Formula Translator</em>. <span>Fortran</span> was originally stylised in all-caps, but modern Fortran has dropped it.</p><p><sup>2</sup>&nbsp;The System/360 was released around 1965. The 4004 around 1970. And <a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">K&amp;R C</a> was published in 1978.</p><p><sup>3</sup>&nbsp;The argument goes that Fortran’s lack of aliasing and use of native arrays rather than pointer arithmetic allow the optimiser to generate more efficient output than an equivalent C program. However, there are also counter-arguments against this.</p></div><p>Over the years, Fortran has formed a rich history of use for computationally intensive scientific and engineering applications. It has powered the fluid dynamics of weather prediction and climate models, provided the condensed matter simulations for my <a href="https://gws.phd/docs/thesis_gws.pdf">PhD</a>, and is still considered by some to be more efficient than C for numerically heavy work<a href="#fn3" id="fnref3" role="doc-noteref"><sup>3</sup></a>. The syntax of modern Fortran is also surprisingly easy to get up and running with. This is not your parent’s <span>Fortran&nbsp;77</span> code; most restrictions that make fixed‑form Fortran awful to use are no longer in place in modern Fortran.</p>
<p>In a clash of computational eras, this blog post is about compiling existing Fortran code for WebAssembly so that it can run in a web browser. I’ll describe the method we currently use for the <a href="https://github.com/r-wasm/webr">webR</a> project, compiling Fortran code using a patched version of <a href="https://llvm.org/">LLVM</a>’s <code>flang-new</code> compiler<a href="#fn4" id="fnref4" role="doc-noteref"><sup>4</sup></a>. The post also serves as a request for help. The method I describe unfortunately relies on a hack, and this hack means that I cannot contribute the changes back to LLVM without assistance from a more experienced compiler developer.</p>
<p><sup>4</sup>&nbsp;“LLVM” is not an acronym, it is the full name of the project.</p></section>
<section id="so-whats-the-problem">
<h2>So, what’s the problem?</h2>
<p>There are a surprising number of potential methods and toolchains available to compile Fortran to WebAssembly. Unfortunately, none of the available options are feature complete. Each method has its drawbacks, and none are a simple plug-and-play solution.</p>
<p>Back in 2020, the situation was summarised wonderfully by Christoph Honal’s article <a href="https://chrz.de/2020/04/21/fortran-in-the-browser/">FORTRAN in the Browser</a>. Even now, the article is worth reading and provides a nice background for this post. I personally owe a lot to Christoph’s article, particularly for its description of the <a href="https://dragonegg.llvm.org/">Dragonegg</a> toolchain. Without that article, I would have given up on Fortran for WebAssembly a long time ago.</p>
<p>Our goal by the end of this post is to be able to compile a modern Fortran routine to WebAssembly that takes in some numerical arguments, computes the output of <a href="http://www.netlib.org/blas/">BLAS</a> and <a href="https://netlib.org/lapack/">LAPACK</a> routines<a href="#fn5" id="fnref5" role="doc-noteref"><sup>5</sup></a>, and either returns the result or prints it to console. From what I remember, in 2020 none of the methods outlined in Christoph’s article could do this satisfactorily. Dragonegg and <code>f2c</code> both get close but have some drawbacks, as I’ll describe below.</p>
<div><p><sup>5</sup>&nbsp;LAPACK (Linear Algebra Package) is a popular library of routines used to numerically solve problems in linear algebra. It’s written in Fortran 90 and itself relies on a BLAS (Basic Linear Algebra Subprograms) library.</p><p><sup>6</sup>&nbsp;via <a href="https://pyodide.org/en/stable/">Pyodide</a> and <a href="https://github.com/r-wasm/webr">webR</a>.</p></div><p>Together, BLAS and LAPACK routines provide a powerful numerical platform. Running them in the browser opens the door for several higher-level programming environments that rely on them under the hood, such as SciPy or R<a href="#fn6" id="fnref6" role="doc-noteref"><sup>6</sup></a>. The beauty of this approach is that it allows you to bring existing and extensively battle-tested tools and libraries to the web without having to rewrite them all in Rust or JavaScript.</p>
<p>Later, I’ll show an example of this with a machine learning demo that directly uses BLAS routines compiled from Fortran to WebAssembly. Rather than having to write fiddly linear algebra numerical algorithms in JavaScript, we can use reliable and efficient BLAS routines directly<a href="#fn7" id="fnref7" role="doc-noteref"><sup>7</sup></a>.</p>
<p><sup>7</sup>&nbsp;Whilst running machine learning algorithms in a web browser will never be as efficient as using dedicated hardware, such as a GPU, I still think it’s a fun demo.</p><section id="compiler-round-up">
<h2 data-anchor-id="compiler-round-up">Compiler round-up</h2>
<p>Since <a href="https://chrz.de/2020/04/21/fortran-in-the-browser/">FORTRAN in the Browser</a> was published things have changed a little, particularly when it comes to the LLVM-based Fortran compilers. As far as I am aware, here’s a brief round-up of the current situation in 2024.</p>
<section id="the-f2c-utility">
<h3 data-anchor-id="the-f2c-utility">The <code>f2c</code> utility</h3>
<p>The <a href="https://en.wikipedia.org/wiki/F2c"><code>f2c</code></a> program converts <span>Fortran 77</span> to C code, which Emscripten can then compile into WebAssembly. This is the method that the <a href="https://pyodide.org/en/stable/">Pyodide</a> project uses to compile Python packages containing Fortran code. They say that this <a href="https://pyodide.org/en/0.25.0/project/roadmap.html#find-a-better-way-to-compile-fortran">“does not work very well”</a>. The tool doesn’t work with modern Fortran code, and even after conversion the result still throws fatal errors and requires extensive patching.</p>
</section>
<section id="lfortran">
<h3 data-anchor-id="lfortran">LFortran</h3>
<p>The LFortran compiler has made great strides over the last few years. In 2020, it was <a href="https://gitlab.com/lfortran/lfortran/-/issues/121">missing a lot of features</a> and only supported a very small subset of Fortran. Now it now supports a much wider range of language features and can be used to compile a reasonable amount of Fortran code. It can even compile to WebAssembly out of the box!<a href="#fn8" id="fnref8" role="doc-noteref"><sup>8</sup></a></p>
<p><sup>8</sup>&nbsp;Check out the LFortran demo at <a href="https://dev.lfortran.org/">https://dev.lfortran.org</a>. While extremely impressive, note that the first thing I tried was changing <code>x ** 2</code> to <code>x ** 3</code> and saw that such a change is currently not supported by the code generator.</p><p>However, there are still some barriers that make using LFortran a little rough. The project is currently considered to be in alpha phase and the developers state that issues compiling real-world code are expected. While it can successfully compile some projects, such as <a href="https://github.com/fortran-lang/minpack">MINPACK</a>, the full Fortran specification is not yet supported and so many larger projects still cannot be compiled.</p>
<p>The LFortran developers are targeting full support for Fortran 2018, and its standout feature is an interactive Jupyter-like Fortran REPL. With a few more years of development, I expect that LFortran will be an excellent choice for compiling Fortran code for WebAssembly.</p>
</section>
<section id="dragonegg">
<h3 data-anchor-id="dragonegg">Dragonegg</h3>
<p><a href="https://dragonegg.llvm.org/">Dragonegg</a> is a plugin for GCC that uses the GNU compilers as a frontend and emits LLVM IR. With this, LLVM can be used as the backend to produce WebAssembly output. The technique works, and it was the original method that I used to compile Fortran sources for the <a href="https://github.com/r-wasm/webr">webR</a> project.</p>
<p>However, there are some pretty serious drawbacks to this approach. Dragonegg requires a very old version of GCC and LLVM<a href="#fn9" id="fnref9" role="doc-noteref"><sup>9</sup></a>. For most users, this means setting up a virtual machine or Docker container to provide the necessary environment. The LLVM IR emitted by Dragonegg also needs some fairly nasty post-processing before LLVM can produce WebAssembly output. Take a look at the <a href="https://github.com/r-wasm/webr/blob/v0.1.0/tools/dragonegg/emfc.in">script originally used by webR</a> to get an idea of the extra processing required.</p>
<p><sup>9</sup>&nbsp;The latest supported versions are <code>gcc-4.8</code> and <code>llvm-3.3</code></p><p>Nevertheless, in 2020 this was the only real way to compile Fortran code for WebAssembly.</p>
</section>
<section id="classic-flang">
<h3 data-anchor-id="classic-flang">Classic flang</h3>
<p><a href="https://github.com/flang-compiler/flang">“Classic” Flang</a><a href="#fn10" id="fnref10" role="doc-noteref"><sup>10</sup></a> is another Fortran compiler targeting LLVM, based on an open-sourced PGI/NVIDIA compiler <code>pgfortran</code>. Classic Flang never supported 32-bit output, so it is not an option for us since we’ll be using <code>wasm32</code> for our target architecture. This will likely be the case until browser support for 64-bit Wasm memory has improved<a href="#fn11" id="fnref11" role="doc-noteref"><sup>11</sup></a>.</p>
<div><p><sup>10</sup>&nbsp;Previously, Flang or Flang-7.</p><p><sup>11</sup>&nbsp;At the time of writing Firefox, Chrome and Node supports <code>wasm64</code>, but locked behind a feature flag.</p></div><p>Even so, the project documentation itself suggests that choosing to use Classic Flang for a new project today is probably not a great idea:</p>
<blockquote>
<p>Classic Flang […] continues to be maintained, but the plan is to replace Classic Flang with the new Flang in the future.</p>
</blockquote>
</section>
<section id="llvm-flang">
<h3 data-anchor-id="llvm-flang">LLVM Flang</h3>
<p><a href="https://flang.llvm.org/docs/">“LLVM Flang”</a><a href="#fn12" id="fnref12" role="doc-noteref"><sup>12</sup></a> is a full ground-up reimplementation of a Fortran frontend for LLVM. It was designed to replace Classic Flang, developed by much of the same team, and was accepted as part of the LLVM project as of LLVM 11. As such, the Flang sources can now be found in <a href="https://github.com/llvm/llvm-project/tree/main/flang">the official LLVM source tree</a>.</p>
<p><sup>12</sup>&nbsp;Also known as Flang, new Flang, or <code>flang-new</code>. Previously, F18.</p><p>Flang is not yet considered to be ready for production use, but its development is extremely active right now and pre-production versions of the <code>flang-new</code> compiler have been made available by the team. In recent years, the compiler has become very usable for compiling real-world Fortran code.</p>
<p>Currently, LLVM Flang cannot generate WebAssembly output out of the box. Despite this, we’ll soon see that with LLVM’s modular design it’s possible to use the Flang frontend with LLVM’s WebAssembly backend. With this, we can take advantage of all the development work put into the Flang frontend by the NVIDIA and PGI teams for our own purposes of compiling Fortran to WebAssembly.</p>
<p>This was also possible back in 2020, though it required larger patches to LLVM, injecting custom maths routines, and a multi-step compilation process. Now, due to the impressive development efforts in the <code>flang-new</code> frontend, creating a Fortran to WebAssembly compiler is possible with just a few small changes to LLVM’s source code.</p>
</section>
</section>
</section>
<section id="building-and-using-llvm-flang-for-webassembly">
<h2>Building and using LLVM Flang for WebAssembly</h2>
<p>If one were interested in trying out LLVM Flang, they might grab an LLVM release using their package manager of choice. However, following that route will disappoint us, as a <code>flang-new</code> binary is not included<a href="#fn13" id="fnref13" role="doc-noteref"><sup>13</sup></a>.</p>
<p><sup>13</sup>&nbsp;At least, not with LLVM v17.0.6 for macOS using <code>brew</code>.</p><div>
<p><span>[~/fortran]</span>brew install llvm</p>
<p><span>==&gt;</span> Downloading https://formulae.brew.sh/api/formula.jws.json</p>
<p>################################################################################ 100.0%</p>
<p><span>==&gt;</span> Downloading https://ghcr.io/v2/homebrew/core/llvm/manifests/17.0.6_1</p>
<p>################################################################################ 100.0%</p>
<p><span>==&gt;</span> Fetching llvm</p>
<p><span>==&gt;</span> Downloading https://ghcr.io/v2/homebrew/core/llvm/blobs/sha256:8d739bdfa4152</p>
<p>################################################################################ 100.0%</p>
<p><span>==&gt;</span> Installing llvm</p>
<p><span>==&gt;</span> Pouring llvm--17.0.6_1.arm64_sonoma.bottle.tar.gz</p>
<p><span>==&gt;</span> Summary</p>
<p>🍺  /opt/homebrew/Cellar/llvm/17.0.6_1: 7,207 files, 1.7GB</p>
<p><span>==&gt;</span> Checking for dependents of upgraded formulae...</p>
<p><span>==&gt;</span> No broken dependents to reinstall!</p>
<p><span>[~/fortran]</span>flang-new</p>
<p>zsh: command not found: flang-new</p>
</div>
<p>Since we will be modifying the LLVM Flang source in any case, we’ll have to compile from scratch. Let’s grab the LLVM v18.1.1 sources and start there instead. Feel free to follow along at home; I’ll try to provide all the commands and everything you need.<a href="#fn14" id="fnref14" role="doc-noteref"><sup>14</sup></a></p>
<p><sup>14</sup>&nbsp;I’m going to assume you’re familiar with <a href="https://emscripten.org/">Emscripten</a> and have a version of that toolchain on your path. If not, and you want to play along, start with <a href="https://github.com/emscripten-core/emsdk">emsdk</a> to setup Emscripten on your machine, get comfortable with compiling C code for WebAssembly, then return here to continue.</p><div>
<p><span>[~/fortran]</span>git clone --depth=1 --branch=llvmorg-18.1.1 https://github.com/llvm/llvm-project.git</p>
<p>Cloning into 'llvm-project'...</p>
<p>remote: Enumerating objects: 138937, done.</p>
<p>Receiving objects: 100% (138937/138937), 199.81 MiB | 11.36 MiB/s, done.</p>
<p>Note: switching to '6009708b4367171ccdbf4b5905cb6a803753fe18'.</p>
<p>Updating files: 100% (132077/132077), done.</p>
<p><span>[~/fortran]</span>cmake -G Ninja -S llvm-project/llvm -B build \</p>
<p>-DCMAKE_INSTALL_PREFIX=llvm-18.1.1 \</p>
<p>-DCMAKE_BUILD_TYPE=MinSizeRel \</p>
<p>-DLLVM_DEFAULT_TARGET_TRIPLE="wasm32-unknown-emscripten" \</p>
<p>-DLLVM_TARGETS_TO_BUILD="WebAssembly" \</p>
<p>-DLLVM_ENABLE_PROJECTS="clang;flang;mlir"</p>
<p>-- The C compiler identification is AppleClang 15.0.0.15000100</p>
<p>-- Found assembler: /Library/Developer/CommandLineTools/usr/bin/cc</p>
<p>-- Detecting C compiler ABI info - done</p>
<p>-- Performing Test HAVE_POSIX_REGEX -- success</p>
<p>-- Configuring done (29.0s)</p>
<p>-- Generating done (2.9s)</p>
<p>-- Build files have been written to: fortran/build</p>
<p><span>[~/fortran]</span>cmake --build build</p>
<p>...</p>
<p>[6136/6136] Linking CXX executable bin/obj2yaml</p>
</div>
<p>Grab a cuppa<a href="#fn15" id="fnref15" role="doc-noteref"><sup>15</sup></a>, this step uses a lot of resources and can take a <strong>very</strong> long time.</p>
<p><sup>15</sup>&nbsp;<strong>cuppa</strong> (/ˈkʌp.ə/): noun, informal, UK. A hot drink, usually tea or coffee.</p><section id="interlude-calling-fortran-subroutines-from-c">
<h2 data-anchor-id="interlude-calling-fortran-subroutines-from-c">Interlude — Calling Fortran subroutines from C</h2>
<p>While we wait for LLVM to build, start up a new terminal and we’ll remind ourselves how to compile and link a Fortran subroutine as part of a C program. The principles here will help us later when it comes to calling Fortran from JavaScript.</p>
<p>First, let’s write a simple subroutine that takes in three integer arguments: <code>x</code>, <code>y</code>, and <code>z</code>. It will set the value of <code>z</code> to the sum of <code>x</code> and <code>y</code>. Name our new subroutine <code>foo</code> and save the file containing your subroutine as <code>foo.f08</code>.</p>
<div id="cb1" data-filename="foo.f08"><pre><code><span id="cb1-1"><span>SUBROUTINE</span> foo(x, y, z)</span>
<span id="cb1-2">    <span>IMPLICIT</span> <span>NONE</span></span>
<span id="cb1-3">    <span>INTEGER</span>, <span>INTENT(IN)</span>  <span>::</span> x, y</span>
<span id="cb1-4">    <span>INTEGER</span>, <span>INTENT(OUT)</span> <span>::</span> z</span>
<span id="cb1-5">    z <span>=</span> x <span>+</span> y</span>
<span id="cb1-6"><span>END</span></span></code></pre></div>
<p>Notice how, generally, Fortran routines pass arguments by reference and we can declare how an argument will be used in the subroutine using <code>INTENT()</code>. Assuming you already have a traditional Fortran compiler like <code>gfortran</code> installed<a href="#fn16" id="fnref16" role="doc-noteref"><sup>16</sup></a>, compile the Fortran source into an object file.</p>
<p><sup>16</sup>&nbsp;You don’t <em>need</em> a native fortran compiler to follow along with the rest of the post, but if you’d like one you can get <code>gfortran</code> from your OS’s usual package manager as part of the GCC compiler suite. There’s also <a href="https://www.intel.com/content/www/us/en/developer/tools/oneapi/fortran-compiler.html"><code>ifort</code></a>, if you’re on an Intel CPU.</p><div>
<p><span>[~/fortran]</span>gfortran -c foo.f08 -o foo.o</p>
<p><span>[~/fortran]</span>file foo.o</p>
<p>foo.o: Mach-O 64-bit object arm64</p>
<p><span>[~/fortran]</span>nm foo.o</p>
<p>0000000000000038 s EH_frame1</p>
<p>0000000000000000 T _foo_</p>
<p>0000000000000000 t ltmp0</p>
<p>0000000000000038 s ltmp1</p>
</div>
<p>I’m on an M1 macOS machine, so my resulting object is a Mach object for ARM. If you’re a Linux user, you should see something like <code>ELF 64-bit LSB shared object, x86-64</code>. I’ve also run <code>nm</code> to take a look at the names of the symbols in the object that the compiler has built. Keep an eye on the symbol for our subroutine — on my machine it’s named <code>_foo_</code>. The leading underscore is fairly standard, but the trailing underscore differs from what is usual for C procedures.</p>
<p>Let’s write a C program that calls our Fortran subroutine<a href="#fn17" id="fnref17" role="doc-noteref"><sup>17</sup></a>. Notice again how we pass the arguments by reference to the external symbol. Also, if your Fortran compiler added the trailing underscore, we’ll need to include it when we declare the symbol name in C.</p>
<p><sup>17</sup>&nbsp;Modern Fortran standards provide a Fortran module <a href="https://fortranwiki.org/fortran/show/iso_c_binding"><code>iso_c_binding</code></a> and a C header file <code>ISO_Fortran_binding.h</code> to improve C interoperability, but our code is going to be simple enough that we can do without those today.</p><div id="cb2" data-filename="main.c"><pre><code><span id="cb2-1"><span>#include </span><span>&lt;stdio.h&gt;</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span>extern</span> <span>void</span> foo_<span>(</span><span>int</span><span>*,</span> <span>int</span><span>*,</span> <span>int</span><span>*);</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span>int</span> main<span>()</span> <span>{</span></span>
<span id="cb2-6">    <span>int</span> x <span>=</span> <span>1</span><span>,</span> y <span>=</span> <span>1</span><span>,</span> z<span>;</span></span>
<span id="cb2-7">    foo_<span>(&amp;</span>x<span>,</span> <span>&amp;</span>y<span>,</span> <span>&amp;</span>z<span>);</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">    printf<span>(</span><span>"</span><span>%d</span><span> + </span><span>%d</span><span> = </span><span>%d\n</span><span>"</span><span>,</span> x<span>,</span> y<span>,</span> z<span>);</span></span>
<span id="cb2-10">    <span>return</span> <span>0</span><span>;</span></span>
<span id="cb2-11"><span>}</span></span></code></pre></div>
<p>Compile the C source using <code>gcc</code> or equivalent, and then run the resulting binary to observe a truly staggering level of numerical computation.</p>
<div>
<p><span>[~/fortran]</span>gcc main.c foo.o -o main</p>
<p><span>[~/fortran]</span>./main</p>
<p>1 + 1 = 2</p>
</div>
</section>
<section id="returning-to-llvm-flang">
<h2 data-anchor-id="returning-to-llvm-flang">Returning to LLVM Flang</h2>
<p>Once LLVM has finished compiling, the <code>flang-new</code> binary should be available in the directory <code>build/bin</code>. We can now run it and confirm that it has been set up to produce binaries for <code>wasm32</code> and Emscripten.</p>
<div>
<p><span>[~/fortran]</span>./build/bin/flang-new --version</p>
<p>flang-new version 18.1.1 (https://github.com/llvm/llvm-project.git dba2a75e9c7ef81fe84774ba5eee5e67e01d801a)</p>
<p>Target: wasm32-unknown-emscripten</p>
<p>Thread model: posix</p>
<p>InstalledDir: .../fortran/build/bin</p>
</div>
<p>Great! Let’s try compiling our Fortran subroutine using our freshly built compiler.</p>
<div>
<p><span>[~/fortran]</span>./build/bin/flang-new -c foo.f08 -o foo.o</p>
<p>error: fortran/llvm-project/flang/lib/Optimizer/CodeGen/Target.cpp:1162:</p>
<p>not yet implemented: target not implemented</p>
<p>LLVM ERROR: aborting</p>
</div>
<p>Ah, not so great. The <code>wasm32-unknown-emscripten</code> target triple unfortunately hasn’t been implemented yet in the <code>flang-new</code> compiler.</p>
<p>And so here comes our first patch to LLVM. We will implement the target by extending Flang’s list of known target specifics. The required changes, shown below as a diff, can be mostly deduced by looking at the other targets implemented in the file <code>flang/lib/Optimizer/CodeGen/Target.cpp</code>.</p>
<div id="cb3"><pre><code><span id="cb3-1"><span>diff --git a/flang/lib/Optimizer/CodeGen/Target.cpp b/flang/lib/Optimizer/CodeGen/Target.cpp</span></span>
<span id="cb3-2">index 83e7fa9b440b..49e73ec48e0a 100644</span>
<span id="cb3-3"><span>--- a/flang/lib/Optimizer/CodeGen/Target.cpp</span></span>
<span id="cb3-4"><span>+++ b/flang/lib/Optimizer/CodeGen/Target.cpp</span></span>
<span id="cb3-5"><span>@@ -1109,6 +1109,44 @@ struct TargetLoongArch64 : public GenericTarget&lt;TargetLoongArch64&gt; {</span></span>
<span id="cb3-6"> };</span>
<span id="cb3-7"> } // namespace</span>
<span id="cb3-8"> </span>
<span id="cb3-9"><span>+//===----------------------------------------------------------------------===//</span></span>
<span id="cb3-10"><span>+// WebAssembly (wasm32) target specifics.</span></span>
<span id="cb3-11"><span>+//===----------------------------------------------------------------------===//</span></span>
<span id="cb3-12"><span>+</span></span>
<span id="cb3-13"><span>+namespace {</span></span>
<span id="cb3-14"><span>+struct TargetWasm32 : public GenericTarget&lt;TargetWasm32&gt; {</span></span>
<span id="cb3-15"><span>+  using GenericTarget::GenericTarget;</span></span>
<span id="cb3-16"><span>+</span></span>
<span id="cb3-17"><span>+  static constexpr int defaultWidth = 32;</span></span>
<span id="cb3-18"><span>+</span></span>
<span id="cb3-19"><span>+  CodeGenSpecifics::Marshalling</span></span>
<span id="cb3-20"><span>+  complexArgumentType(mlir::Location, mlir::Type eleTy) const override {</span></span>
<span id="cb3-21"><span>+    assert(fir::isa_real(eleTy));</span></span>
<span id="cb3-22"><span>+    CodeGenSpecifics::Marshalling marshal;</span></span>
<span id="cb3-23"><span>+    // Use a type that will be translated into LLVM as:</span></span>
<span id="cb3-24"><span>+    // { t, t }   struct of 2 eleTy, byval, align 4</span></span>
<span id="cb3-25"><span>+    auto structTy =</span></span>
<span id="cb3-26"><span>+        mlir::TupleType::get(eleTy.getContext(), mlir::TypeRange{eleTy, eleTy});</span></span>
<span id="cb3-27"><span>+    marshal.emplace_back(fir::ReferenceType::get(structTy),</span></span>
<span id="cb3-28"><span>+                         AT{/*alignment=*/4, /*byval=*/true});</span></span>
<span id="cb3-29"><span>+    return marshal;</span></span>
<span id="cb3-30"><span>+  }</span></span>
<span id="cb3-31"><span>+</span></span>
<span id="cb3-32"><span>+  CodeGenSpecifics::Marshalling</span></span>
<span id="cb3-33"><span>+  complexReturnType(mlir::Location loc, mlir::Type eleTy) const override {</span></span>
<span id="cb3-34"><span>+    assert(fir::isa_real(eleTy));</span></span>
<span id="cb3-35"><span>+    CodeGenSpecifics::Marshalling marshal;</span></span>
<span id="cb3-36"><span>+    // Use a type that will be translated into LLVM as:</span></span>
<span id="cb3-37"><span>+    // { t, t }   struct of 2 eleTy, sret, align 4</span></span>
<span id="cb3-38"><span>+    auto structTy = mlir::TupleType::get(eleTy.getContext(),</span></span>
<span id="cb3-39"><span>+                                          mlir::TypeRange{eleTy, eleTy});</span></span>
<span id="cb3-40"><span>+    marshal.emplace_back(fir::ReferenceType::get(structTy),</span></span>
<span id="cb3-41"><span>+                          AT{/*alignment=*/4, /*byval=*/false, /*sret=*/true});</span></span>
<span id="cb3-42"><span>+    return marshal;</span></span>
<span id="cb3-43"><span>+  }</span></span>
<span id="cb3-44"><span>+};</span></span>
<span id="cb3-45"><span>+} // namespace</span></span>
<span id="cb3-46"><span>+</span></span>
<span id="cb3-47"> // Instantiate the overloaded target instance based on the triple value.</span>
<span id="cb3-48"> // TODO: Add other targets to this file as needed.</span>
<span id="cb3-49"> std::unique_ptr&lt;fir::CodeGenSpecifics&gt;</span>
<span id="cb3-50"><span>@@ -1158,6 +1196,9 @@ fir::CodeGenSpecifics::get(mlir::MLIRContext *ctx, llvm::Triple &amp;&amp;trp,</span></span>
<span id="cb3-51">   case llvm::Triple::ArchType::loongarch64:</span>
<span id="cb3-52">     return std::make_unique&lt;TargetLoongArch64&gt;(ctx, std::move(trp),</span>
<span id="cb3-53">                                                std::move(kindMap), dl);</span>
<span id="cb3-54"><span>+  case llvm::Triple::ArchType::wasm32:</span></span>
<span id="cb3-55"><span>+    return std::make_unique&lt;TargetWasm32&gt;(ctx, std::move(trp),</span></span>
<span id="cb3-56"><span>+                                               std::move(kindMap), dl);</span></span>
<span id="cb3-57">   }</span>
<span id="cb3-58">   TODO(mlir::UnknownLoc::get(ctx), "target not implemented");</span>
<span id="cb3-59"> }</span></code></pre></div>
<p>Save the contents of the above diff as the file <code>add-wasm32-target.diff</code>, and then apply it to the <code>llvm-project</code> directory using <code>git</code> or the <code>patch</code> utility. Then, rebuild LLVM Flang. It should be quicker to build the second time, as most generated objects are unaffected by the change.</p>
<div>
<p><span>[~/fortran]</span>patch -p1 -d llvm-project &lt; add-wasm32-target.diff</p>
<p><span>[~/fortran]</span>cmake --build build</p>
<p>...</p>
<p>[180/180] Generating ../../../../include/flang/ieee_arithmetic.mod</p>
</div>
<p>Once LLVM has been recompiled, try compiling our Fortran source once again.</p>
<div>
<p><span>[~/fortran]</span>./build/bin/flang-new -c foo.f08 -o foo.o</p>
<p><span>[~/fortran]</span>file foo.o</p>
<p>foo.o: WebAssembly (wasm) binary module version 0x1 (MVP)</p>
<p><span>[~/fortran]</span>llvm-nm foo.o</p>
<p>00000001 T foo_</p>
</div>
<p>Success! We can confirm this is a real WebAssembly object using the <code>file</code> utility, and <code>llvm-nm</code><a href="#fn18" id="fnref18" role="doc-noteref"><sup>18</sup></a> can see the <code>foo</code> symbol within, corresponding to our Fortran subroutine.</p>
<div><p><sup>18</sup>&nbsp;You might need to use a WebAssembly aware version of this tool from Emscripten. If you’re using <a href="https://github.com/emscripten-core/emsdk">emsdk</a>, ensure that <code>.../emsdk/upstream/bin/</code> is on your <code>$PATH</code>.</p><p><sup>19</sup>&nbsp;Here I’m using Node v18, but I think anything newer than Node v16 should work. Emscripten is bundled with a version of Node, but I like using <a href="https://github.com/nvm-sh/nvm">nvm</a> to manage my Node installations.</p></div><p>Let’s continue compiling our C function for WebAssembly using Emscripten and running it using Node<a href="#fn19" id="fnref19" role="doc-noteref"><sup>19</sup></a>. We should see the same output as with our native binary.</p>
<div>
<p><span>[~/fortran]</span>emcc main.c foo.o -o main.js</p>
<p><span>[~/fortran]</span>node main.js</p>
<p>1 + 1 = 2</p>
</div>
</section>
<section id="interlude-calling-a-fortran-routine-from-javascript">
<h2 data-anchor-id="interlude-calling-a-fortran-routine-from-javascript">Interlude — Calling a Fortran routine from JavaScript</h2>
<p>In the previous section we used a C program to call Fortran code, but we don’t technically need to do that. If we tell Emscripten about the Fortran subroutine, we can call it directly from JavaScript without writing any C code.</p>
<p>First, let’s link our Fortran object with Emscripten, producing a script that loads our WebAssembly binary into memory but does not execute any routines. In addition to our symbol <code>_foo_</code>, we’ll also export <code>_malloc</code> and <code>_free</code> so that we can use them from JavaScript<a href="#fn20" id="fnref20" role="doc-noteref"><sup>20</sup></a>.</p>
<p><sup>20</sup>&nbsp;See the <a href="https://emscripten.org/docs/tools_reference/settings_reference.html">Emscripten documentation</a> for more details about <code>emcc</code> command line options. By the way, if you’ve not used Emscripten much before you might see extra <code>cache:INFO</code> lines emitted during various steps in this post. They are nothing to worry about and can be ignored.</p><div>
<p><span>[~/fortran]</span>emcc foo.o -sEXPORTED_FUNCTIONS=_foo_,_malloc,_free -o foo.js</p>
<p>cache:INFO: generating system asset: symbol_lists/ae47d07bfa3321ac4dde96bd87821b4aa93f9a19.json... (this will be cached in ".../emsdk/upstream/emscripten/cache/symbol_lists/ae47d07bfa3321ac4dde96bd87821b4aa93f9a19.json" for subsequent builds)</p>
<p>cache:INFO:  - ok</p>
<p><span>[~/fortran]</span>node foo.js</p>
<p><span>[~/fortran]</span></p>
</div>
<p>Notice that when we run the script <code>foo.js</code> directly… nothing happens.</p>
<p>Next, we’ll write a JavaScript file that loads <code>foo.js</code> and then calls our Fortran subroutine. We’ll need to allocate some memory to hold our integers <code>x</code>, <code>y</code> and <code>z</code> using the exported <code>_malloc()</code> function. We’ll also need to set our input arguments <code>x</code> and <code>y</code> to some integer values, and we can do that by setting values in the allocated WebAssembly memory through <code>Module.HEAPU32</code><a href="#fn21" id="fnref21" role="doc-noteref"><sup>21</sup></a>.</p>
<div id="cb4" data-filename="standalone.js"><pre><code><span id="cb4-1"><span>var</span> Module <span>=</span> <span>require</span>(<span>'./foo.js'</span>)<span>;</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span>setTimeout</span>(() <span>=&gt;</span> {</span>
<span id="cb4-4">  <span>const</span> x <span>=</span> Module<span>.</span><span>_malloc</span>(<span>4</span>)<span>;</span></span>
<span id="cb4-5">  <span>const</span> y <span>=</span> Module<span>.</span><span>_malloc</span>(<span>4</span>)<span>;</span></span>
<span id="cb4-6">  <span>const</span> z <span>=</span> Module<span>.</span><span>_malloc</span>(<span>4</span>)<span>;</span></span>
<span id="cb4-7">  Module<span>.</span><span>HEAPU32</span>[x <span>/</span> <span>4</span>] <span>=</span> <span>123</span><span>;</span></span>
<span id="cb4-8">  Module<span>.</span><span>HEAPU32</span>[y <span>/</span> <span>4</span>] <span>=</span> <span>456</span><span>;</span></span>
<span id="cb4-9"></span>
<span id="cb4-10">  Module<span>.</span><span>_foo_</span>(x<span>,</span> y<span>,</span> z)<span>;</span></span>
<span id="cb4-11"></span>
<span id="cb4-12">  <span>console</span><span>.</span><span>log</span>(<span>"x = "</span><span>,</span> Module<span>.</span><span>HEAP32</span>[x <span>/</span> <span>4</span>])<span>;</span></span>
<span id="cb4-13">  <span>console</span><span>.</span><span>log</span>(<span>"y = "</span><span>,</span> Module<span>.</span><span>HEAP32</span>[y <span>/</span> <span>4</span>])<span>;</span></span>
<span id="cb4-14">  <span>console</span><span>.</span><span>log</span>(<span>"x + y = "</span><span>,</span> Module<span>.</span><span>HEAP32</span>[z <span>/</span> <span>4</span>])<span>;</span></span>
<span id="cb4-15"></span>
<span id="cb4-16">  Module<span>.</span><span>_free</span>(x)<span>;</span></span>
<span id="cb4-17">  Module<span>.</span><span>_free</span>(y)<span>;</span></span>
<span id="cb4-18">  Module<span>.</span><span>_free</span>(z)<span>;</span></span>
<span id="cb4-19">}<span>,</span> <span>100</span>)<span>;</span></span></code></pre></div>
<div>
<p><span>[~/fortran]</span>node standalone.js</p>
<p>x =  123</p>
<p>y =  456</p>
<p>x + y =  579</p>
</div>
<p>You should also be able to run the resulting WebAssembly binary in a web browser. Remove the line <code><span>var</span> Module <span>=</span> <span>require</span>(<span>'./foo.js'</span>)<span>;</span></code> from <code>standalone.js</code>, and instead load the script <code>foo.js</code> in your HTML.</p>
<div id="cb5" data-filename="index.html"><pre><code><span id="cb5-1"><span>&lt;</span><span>html</span><span>&gt;</span></span>
<span id="cb5-2">  <span>&lt;</span><span>head</span><span>&gt;</span></span>
<span id="cb5-3">    <span>&lt;</span><span>title</span><span>&gt;</span>Fortran Demo<span>&lt;/</span><span>title</span><span>&gt;</span></span>
<span id="cb5-4">  <span>&lt;/</span><span>head</span><span>&gt;</span></span>
<span id="cb5-5">  <span>&lt;</span><span>body</span><span>&gt;</span></span>
<span id="cb5-6">    <span>&lt;</span><span>script</span><span> src</span><span>=</span><span>"foo.js"</span><span>&gt;&lt;/</span><span>script</span><span>&gt;</span></span>
<span id="cb5-7">    <span>&lt;</span><span>script</span><span> src</span><span>=</span><span>"standalone.js"</span><span>&gt;&lt;/</span><span>script</span><span>&gt;</span></span>
<span id="cb5-8">  <span>&lt;/</span><span>body</span><span>&gt;</span></span>
<span id="cb5-9"><span>&lt;/</span><span>html</span><span>&gt;</span></span></code></pre></div>
<p>Spin up a local web server<a href="#fn22" id="fnref22" role="doc-noteref"><sup>22</sup></a>, visit the page, and the same output should be seen in the browser’s JavaScript console.</p>
<p><sup>22</sup>&nbsp;Something like <code>Rscript -e 'httpuv::runStaticServer()'</code> or <code>python3 -m http.server</code> should work well.</p></section>
<section id="the-fortran-runtime-library-a-journey-to-hello-world">
<h2 data-anchor-id="the-fortran-runtime-library-a-journey-to-hello-world">The Fortran runtime library: A journey to “Hello, World!”</h2>
<p>The ubiquitous “Hello, World!” test program is the usual way to introduce a programming language, but I didn’t introduce Fortran using such a program above. As you’ll see, that was for a good reason. Let’s see what happens when we try to build a “Hello, World!” subroutine in Fortran and call it from C. As before, we’ll compile the Fortran object using <code>flang-new</code> and use Emscripten to compile and link the C code.</p>
<div id="cb6" data-filename="hello.f08"><pre><code><span id="cb6-1"><span>SUBROUTINE</span> hello()</span>
<span id="cb6-2">    <span>IMPLICIT</span> <span>NONE</span></span>
<span id="cb6-3">    <span>PRINT</span> <span>*</span>, <span>"Hello, World!"</span></span>
<span id="cb6-4"><span>END</span></span></code></pre></div>
<div id="cb7" data-filename="hello.c"><pre><code><span id="cb7-1"><span>extern</span> <span>void</span> hello_<span>();</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span>int</span> main<span>()</span> <span>{</span></span>
<span id="cb7-4">    hello_<span>();</span></span>
<span id="cb7-5">    <span>return</span> <span>0</span><span>;</span></span>
<span id="cb7-6"><span>}</span></span></code></pre></div>
<div>
<p><span>[~/fortran]</span>./build/bin/flang-new -c hello.f08 -o hello.o</p>
<p><span>[~/fortran]</span>emcc hello.c hello.o -o hello.js</p>
<p>wasm-ld: error: hello.o: undefined symbol: _FortranAioBeginExternalListOutput</p>
<p>wasm-ld: error: hello.o: undefined symbol: _FortranAioOutputAscii</p>
<p>wasm-ld: error: hello.o: undefined symbol: _FortranAioEndIoStatement</p>
<p>emcc: error: 'wasm-ld -o hello.wasm [...] --no-entry --stack-first --table-base=1' failed (returned 1)</p>
</div>
<p>The build failed due to some missing symbols. This is a consequence of a more general issue in that we have not yet compiled the LLVM Fortran runtime library for WebAssembly. There are a bunch of library symbols that we’re currently missing, including some functions that are required to print output!<a href="#fn23" id="fnref23" role="doc-noteref"><sup>23</sup></a></p>
<p><sup>23</sup>&nbsp;See <a href="https://flang.llvm.org/docs/IORuntimeInternals.html">LLVM Flang’s documentation</a> for the nuts and bolts of the Fortran IO runtime library implementation.</p><p>Luckily, the runtime library is written in C++ as part of the LLVM source tree at <code>llvm-project/flang/runtime</code>. So, in principle, all we need to do is build the library using Emscripten’s <code>em++</code> compiler and then link to it whenever we’re using Fortran code in our WebAssembly program.</p>
<p>Here is a <code>Makefile</code> designed to make this step easy. Save it<a href="#fn24" id="fnref24" role="doc-noteref"><sup>24</sup></a> in the current directory and then run <code>make</code>. It should go ahead and use the version of Emscripten on your path to build a static Fortran runtime library at <code>build/flang/runtime/libFortranRuntime.a</code>.</p>
<p><sup>24</sup>&nbsp;Be sure to indent the rules in this file using tabs, not spaces.</p><div id="cb8" data-filename="Makefile"><pre><code><span id="cb8-1"><span>ROOT</span> <span>=</span><span> </span><span>$(</span><span>abspath</span><span> .</span><span>)</span></span>
<span id="cb8-2"><span>SOURCE</span> <span>=</span><span> </span><span>$(</span><span>ROOT</span><span>)</span><span>/llvm-project</span></span>
<span id="cb8-3"><span>BUILD</span> <span>=</span><span> </span><span>$(</span><span>ROOT</span><span>)</span><span>/build</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span>RUNTIME_SOURCES</span> <span>:=</span><span> </span><span>$(</span><span>wildcard</span><span> </span><span>$(</span><span>SOURCE</span><span>)</span><span>/flang/runtime/*.cpp</span><span>)</span></span>
<span id="cb8-6"><span>RUNTIME_SOURCES</span> <span>+=</span><span> </span><span>$(</span><span>SOURCE</span><span>)</span><span>/flang/lib/Decimal/decimal-to-binary.cpp</span></span>
<span id="cb8-7"><span>RUNTIME_SOURCES</span> <span>+=</span><span> </span><span>$(</span><span>SOURCE</span><span>)</span><span>/flang/lib/Decimal/binary-to-decimal.cpp</span></span>
<span id="cb8-8"><span>RUNTIME_OBJECTS</span> <span>=</span><span> </span><span>$(</span><span>patsubst</span><span> </span><span>$(</span><span>SOURCE</span><span>)</span><span>/%</span><span>,</span><span>$(</span><span>BUILD</span><span>)</span><span>/%</span><span>,</span><span>$(</span><span>RUNTIME_SOURCES</span><span>:</span><span>.cpp</span><span>=</span><span>.o</span><span>))</span></span>
<span id="cb8-9"></span>
<span id="cb8-10"><span>RUNTIME_CXXFLAGS</span> <span>+=</span><span> -I</span><span>$(</span><span>BUILD</span><span>)</span><span>/include -I</span><span>$(</span><span>BUILD</span><span>)</span><span>/tools/flang/runtime</span></span>
<span id="cb8-11"><span>RUNTIME_CXXFLAGS</span> <span>+=</span><span> -I</span><span>$(</span><span>SOURCE</span><span>)</span><span>/flang/include -I</span><span>$(</span><span>SOURCE</span><span>)</span><span>/llvm/include</span></span>
<span id="cb8-12"><span>RUNTIME_CXXFLAGS</span> <span>+=</span><span> -DFLANG_LITTLE_ENDIAN</span></span>
<span id="cb8-13"><span>RUNTIME_CXXFLAGS</span> <span>+=</span><span> -fPIC -Wno-c++11-narrowing -fvisibility=hidden</span></span>
<span id="cb8-14"><span>RUNTIME_CXXFLAGS</span> <span>+=</span><span> -DFE_UNDERFLOW=0 -DFE_OVERFLOW=0 -DFE_INEXACT=0</span></span>
<span id="cb8-15"><span>RUNTIME_CXXFLAGS</span> <span>+=</span><span> -DFE_INVALID=0 -DFE_DIVBYZERO=0 -DFE_ALL_EXCEPT=0</span></span>
<span id="cb8-16"></span>
<span id="cb8-17"><span>$(BUILD)/flang/runtime/libFortranRuntime.a:</span><span> </span><span>$(</span><span>RUNTIME_OBJECTS</span><span>)</span></span>
<span id="cb8-18"><span>    </span><span>@</span><span>rm -f </span><span>$@</span></span>
<span id="cb8-19">    emar -rcs <span>$@</span> <span>$^</span></span>
<span id="cb8-20"></span>
<span id="cb8-21"><span>$(BUILD)%.o :</span><span> </span><span>$(</span><span>SOURCE</span><span>)</span><span>%.cpp</span></span>
<span id="cb8-22"><span>    </span><span>@</span><span>mkdir -p </span><span>$(</span><span>@D</span><span>)</span></span>
<span id="cb8-23">    em++ <span>$(</span><span>RUNTIME_CXXFLAGS</span><span>)</span> -o <span>$@</span> -c <span>$&lt;</span></span>
<span id="cb8-24"></span>
<span id="cb8-25"><span>.PHONY:</span><span> clean</span></span>
<span id="cb8-26"><span>clean:</span></span>
<span id="cb8-27"><span>    </span><span>@</span><span>rm </span><span>$(</span><span>RUNTIME_OBJECTS</span><span>)</span><span> </span><span>$(</span><span>BUILD</span><span>)</span><span>/flang/runtime/libFortranRuntime.a</span></span></code></pre></div>
<div>
<p><span>[~/fortran]</span>make</p>
<p>em++ .../ISO_Fortran_binding.o -c .../ISO_Fortran_binding.cpp</p>
<p>em++ .../allocatable.o -c .../allocatable.cpp</p>
<p>em++ .../array-constructor.o -c .../array-constructor.cpp</p>
<p>...</p>
<p>emar -rcs build/flang/runtime/libFortranRuntime.a .../binary-to-decimal.o</p>
<p><span>[~/fortran]</span>file build/flang/runtime/libFortranRuntime.a</p>
<p>build/flang/runtime/libFortranRuntime.a: current ar archive</p>
</div>
<p>Let’s try again, linking in our shiny new library as part of the Emscripten build step.</p>
<div>
<p><span>[~/fortran]</span>./build/bin/flang-new -c hello.f08 -o hello.o</p>
<p><span>[~/fortran]</span>emcc hello.c hello.o build/flang/runtime/libFortranRuntime.a -o hello.js</p>
<p>wasm-ld: <span>warning:</span> function signature mismatch: _FortranAioOutputAscii</p>
<p>&gt;&gt;&gt; defined as (i32, i32, i64) -&gt; i32 in hello.o</p>
<p>&gt;&gt;&gt; defined as (i32, i32, i32) -&gt; i32 in build/flang/runtime/libFortranRuntime.a(io-api.o)</p>
</div>
<p>Success? Not quite. A warning is issued, letting us know about a signature mismatch. Emscripten has compiled the symbol <code>_FortranAioOutputAscii</code> to take three <code>i32</code> arguments<a href="#fn25" id="fnref25" role="doc-noteref"><sup>25</sup></a>. However, <code>flang-new</code> has compiled <code>hello.f08</code> with the expectation that the symbol takes two <code>i32</code> arguments and a single <code>i64</code> argument.</p>
<div><p><sup>25</sup>&nbsp;This is <a href="https://llvm.org/docs/LangRef.html#integer-type">LLVM IR notation</a>, meaning an integer of size 32 bits.</p><p><sup>26</sup>&nbsp;This continues to crop up when compiling R packages for webR. Package authors or vendored libraries may have used tools such as <code>f2c</code> that declare a Fortran <code>SUBROUTINE</code> to return an <code>int</code>, while other libraries might declare a Fortran <code>SUBROUTINE</code> to return <code>void</code>. Who is right? I’m not sure, as I understand it early Fortran did not have a standard interface to C. Personally, I think returning <code>void</code> makes most sense.</p></div><p>This is unfortunate. Despite being emitted as just a warning, if you try running the emitted program using Node you will see that the problem is catastrophic. WebAssembly, unlike a lot of target systems, absolutely requires that symbols defined over multiple compilation units have consistent function signatures, both in argument and return type<a href="#fn26" id="fnref26" role="doc-noteref"><sup>26</sup></a>.</p>
<div>
<p><span>[~/fortran]</span>node hello.js</p>
<p>.../fortran/hello.js:128</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;throw ex;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;^</p>
<p>RuntimeError: unreachable</p>
<p>&nbsp;&nbsp;at wasm://wasm/001a0366:wasm-function[20]:0x15d9</p>
<p>&nbsp;&nbsp;at removeRunDependency (/Users/georgestagg/fortran/hello.js:630:7)</p>

<p>Node.js v18.18.0</p>
</div>
<p>Rather than going over the debugging process that eventually leads us to what is going on here, let me point you directly to the cause of the problem. Take a look at this comment from the LLVM source:</p>
<div>
<div>
<pre><strong>flang/include/flang/Optimizer/Builder/Runtime/RTBuilder.h</strong></pre>
</div>
<div id="cb9" data-filename="flang/include/flang/Optimizer/Builder/Runtime/RTBuilder.h"><pre><code><span id="cb9-1"><span>//===----------------------------------------------------------------------===//</span></span>
<span id="cb9-2"><span>// Type builder models</span></span>
<span id="cb9-3"><span>//===----------------------------------------------------------------------===//</span></span>
<span id="cb9-4"></span>
<span id="cb9-5"><span>// </span><span>TODO</span><span>: all usages of sizeof in this file assume build ==  host == target.</span></span>
<span id="cb9-6"><span>// This will need to be re-visited for cross compilation.</span></span>
<span id="cb9-7"></span>
<span id="cb9-8"><span>/// Return a function that returns the type signature model for the type `T`</span></span>
<span id="cb9-9"><span>/// when provided an MLIRContext*. This allows one to translate C(++) function</span></span>
<span id="cb9-10"><span>/// signatures from runtime header files to MLIR signatures into a static table</span></span>
<span id="cb9-11"><span>/// at compile-time.</span></span>
<span id="cb9-12"><span>///</span></span>
<span id="cb9-13"><span>/// For example, when `T` is `int`, return a function that returns the MLIR</span></span>
<span id="cb9-14"><span>/// standard type `i32` when `sizeof(int)` is 4.</span></span></code></pre></div>
</div>
<p>And therein lies the problem. For us, the host is different to the target, breaking assumptions in the LLVM source code. Surprisingly, this does not cause as much chaos as you might expect. From what I can tell, this machinery is used only to make the Fortran runtime library functions, written in C++, available to Fortran. There is a compile-time calculation using <code>sizeof()</code>, and since most of the sizes match anyway<a href="#fn27" id="fnref27" role="doc-noteref"><sup>27</sup></a> it mostly works fine.</p>
<p><sup>27</sup>&nbsp;The <a href="https://en.wikipedia.org/wiki/64-bit_computing#64-bit_data_models">C data model</a> for the host and target defines how many bits certain fundamental C types are represented with. The specific sizes can differ based on the hardware architecture and your OS.</p><p>Unfortunately for us, assuming you’re following along on a modern 64-bit Unix-like system such as Linux or macOS, the sizes don’t match for the <code>long</code> data type. The result of <code>sizeof(long)</code> on our compiler’s host platform is 8 bytes (<code>i64</code>), but for the target platform of <code>wasm32-unknown-emscripten</code> the returned value should be 4 bytes (<code>i32</code>).</p>
<p>When we compile the Fortran runtime library C++ code using Emscripten, things are fine. The resulting symbols are compiled with signatures such that <code>long</code> arguments are <code>i32</code>. However, when we compile our Fortran code with <code>flang-new</code> the external library symbols are declared such that <code>long</code> arguments are <code>i64</code>. This difference leads to the inconsistent function signature warning and runtime failure.</p>
<p>Why did using <code>PRINT()</code> in our “Hello, World!” program invoke a function that takes an argument of type <code>long</code>? Well, in some implementations of Fortran there are so-called “hidden” arguments that are added whenever you pass a Fortran <code>CHARACTER</code> type to a function or subroutine. These extra arguments pass in the length of the strings. In the Fortran runtime library the hidden arguments are declared with type <code>size_t</code> which, following a chain of <code>typedef</code>s, ends up being the same as <code>unsigned long</code>. This hidden implicit argument is the one with inconsistent size.</p>
</section>
<section id="hacking-around-the-issue">
<h2 data-anchor-id="hacking-around-the-issue">Hacking around the issue</h2>
<p>Unfortunately, I don’t know enough about the LLVM or Flang internals to implement a real solution to this problem. Ideally, <code>flang-new</code> would emit the correct use of <code>i32</code> or <code>i64</code> for the target architecture and data model when cross-compiling, no matter the host architecture the compiler is running on.</p>
<p>Since I can’t solve this today, let’s hack around it for now. We’ll build a version of <code>flang-new</code> with the size of a <code>long</code> hard-coded to what we need for <code>wasm32</code> and Emscripten. We’ll also make some changes so that calls to <code>malloc()</code> from Fortran are emitted with an <code>i32</code> argument<a href="#fn28" id="fnref28" role="doc-noteref"><sup>28</sup></a>.</p>
<p><sup>28</sup>&nbsp;This additionally fixes dynamic allocation with <code>ALLOCATE()</code>, a feature introduced in Fortran 90.</p><p>The required patches are again shown as a diff below. If you’re following along, save it as a file named <code>force-4-byte-values.diff</code> and apply it to the <code>llvm-project</code> directory using <code>git</code> or the <code>patch</code> utility. Finally, recompile <code>flang-new</code> once more.</p>
<div id="cb10" data-filename="force-4-byte-values.diff"><pre><code><span id="cb10-1"><span>diff --git a/flang/include/flang/Optimizer/Builder/Runtime/RTBuilder.h b/flang/include/flang/Optimizer/Builder/Runtime/RTBuilder.h</span></span>
<span id="cb10-2">index b3fe52f4b..c3c7326da 100644</span>
<span id="cb10-3"><span>--- a/flang/include/flang/Optimizer/Builder/Runtime/RTBuilder.h</span></span>
<span id="cb10-4"><span>+++ b/flang/include/flang/Optimizer/Builder/Runtime/RTBuilder.h</span></span>
<span id="cb10-5"><span>@@ -146,7 +146,7 @@ constexpr TypeBuilderFunc getModel&lt;void **&gt;() {</span></span>
<span id="cb10-6"> template &lt;&gt;</span>
<span id="cb10-7"> constexpr TypeBuilderFunc getModel&lt;long&gt;() {</span>
<span id="cb10-8">   return [](mlir::MLIRContext *context) -&gt; mlir::Type {</span>
<span id="cb10-9"><span>-    return mlir::IntegerType::get(context, 8 * sizeof(long));</span></span>
<span id="cb10-10"><span>+    return mlir::IntegerType::get(context, 8 * 4);</span></span>
<span id="cb10-11">   };</span>
<span id="cb10-12"> }</span>
<span id="cb10-13"> template &lt;&gt;</span>
<span id="cb10-14"><span>@@ -187,7 +187,7 @@ constexpr TypeBuilderFunc getModel&lt;long long *&gt;() {</span></span>
<span id="cb10-15"> template &lt;&gt;</span>
<span id="cb10-16"> constexpr TypeBuilderFunc getModel&lt;unsigned long&gt;() {</span>
<span id="cb10-17">   return [](mlir::MLIRContext *context) -&gt; mlir::Type {</span>
<span id="cb10-18"><span>-    return mlir::IntegerType::get(context, 8 * sizeof(unsigned long));</span></span>
<span id="cb10-19"><span>+    return mlir::IntegerType::get(context, 8 * 4);</span></span>
<span id="cb10-20">   };</span>
<span id="cb10-21"> }</span>
<span id="cb10-22"> template &lt;&gt;</span>
<span id="cb10-23"><span>diff --git a/flang/lib/Optimizer/CodeGen/CodeGen.cpp b/flang/lib/Optimizer/CodeGen/CodeGen.cpp</span></span>
<span id="cb10-24">index ba5946415..2931753a8 100644</span>
<span id="cb10-25"><span>--- a/flang/lib/Optimizer/CodeGen/CodeGen.cpp</span></span>
<span id="cb10-26"><span>+++ b/flang/lib/Optimizer/CodeGen/CodeGen.cpp</span></span>
<span id="cb10-27"><span>@@ -1225,7 +1225,7 @@ getMalloc(fir::AllocMemOp op, mlir::ConversionPatternRewriter &amp;rewriter) {</span></span>
<span id="cb10-28">     return mlir::SymbolRefAttr::get(userMalloc);</span>
<span id="cb10-29">   mlir::OpBuilder moduleBuilder(</span>
<span id="cb10-30">       op-&gt;getParentOfType&lt;mlir::ModuleOp&gt;().getBodyRegion());</span>
<span id="cb10-31"><span>-  auto indexType = mlir::IntegerType::get(op.getContext(), 64);</span></span>
<span id="cb10-32"><span>+  auto indexType = mlir::IntegerType::get(op.getContext(), 32);</span></span>
<span id="cb10-33">   auto mallocDecl = moduleBuilder.create&lt;mlir::LLVM::LLVMFuncOp&gt;(</span>
<span id="cb10-34">       op.getLoc(), mallocName,</span>
<span id="cb10-35">       mlir::LLVM::LLVMFunctionType::get(getLlvmPtrType(op.getContext()),</span>
<span id="cb10-36"><span>@@ -1281,6 +1281,7 @@ struct AllocMemOpConversion : public FIROpConversion&lt;fir::AllocMemOp&gt; {</span></span>
<span id="cb10-37">     mlir::Type heapTy = heap.getType();</span>
<span id="cb10-38">     mlir::Location loc = heap.getLoc();</span>
<span id="cb10-39">     auto ity = lowerTy().indexType();</span>
<span id="cb10-40"><span>+    auto i32ty = mlir::IntegerType::get(rewriter.getContext(), 32);</span></span>
<span id="cb10-41">     mlir::Type dataTy = fir::unwrapRefType(heapTy);</span>
<span id="cb10-42">     mlir::Type llvmObjectTy = convertObjectType(dataTy);</span>
<span id="cb10-43">     if (fir::isRecordWithTypeParameters(fir::unwrapSequenceType(dataTy)))</span>
<span id="cb10-44"><span>@@ -1291,9 +1292,10 @@ struct AllocMemOpConversion : public FIROpConversion&lt;fir::AllocMemOp&gt; {</span></span>
<span id="cb10-45">     for (mlir::Value opnd : adaptor.getOperands())</span>
<span id="cb10-46">       size = rewriter.create&lt;mlir::LLVM::MulOp&gt;(</span>
<span id="cb10-47">           loc, ity, size, integerCast(loc, rewriter, ity, opnd));</span>
<span id="cb10-48"><span>+    auto size_i32 = integerCast(loc, rewriter, i32ty, size);</span></span>
<span id="cb10-49">     heap-&gt;setAttr("callee", getMalloc(heap, rewriter));</span>
<span id="cb10-50">     rewriter.replaceOpWithNewOp&lt;mlir::LLVM::CallOp&gt;(</span>
<span id="cb10-51"><span>-        heap, ::getLlvmPtrType(heap.getContext()), size, heap-&gt;getAttrs());</span></span>
<span id="cb10-52"><span>+        heap, ::getLlvmPtrType(heap.getContext()), size_i32, heap-&gt;getAttrs());</span></span>
<span id="cb10-53">     return mlir::success();</span>
<span id="cb10-54">   }</span></code></pre></div>
<div>
<p><span>[~/fortran]</span>patch -p1 -d llvm-project &lt; force-4-byte-values.diff</p>
<p><span>[~/fortran]</span>cmake --build build</p>
<p>[0/60] Building CXX object tools/flang/lib/Lower/Runtime.cpp.o</p>
<p>...</p>
<p>[49/49] Generating ../../../../include/flang/ieee_arithmetic.f18.mod</p>
</div>
<p>Once LLVM has been rebuilt, try compiling our program once again. This time, it should compile without any warnings and successfully run under Node:</p>
<div>
<p><span>[~/fortran]</span>./build/bin/flang-new -c hello.f08 -o hello.o</p>
<p><span>[~/fortran]</span>emcc hello.c hello.o build/flang/runtime/libFortranRuntime.a -o hello.js</p><p><span>[~/fortran]</span>node hello.js</p>
<p> Hello, World!</p>
</div>
</section>
</section>
<section id="compiling-blas-and-lapack-for-webassembly">
<h2>Compiling BLAS and LAPACK for WebAssembly</h2>
<p>Now that we have a Fortran compiler that can output WebAssembly objects, let’s build some Fortran projects. <a href="https://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms">BLAS</a> (Basic Linear Algebra Subprograms) is a set of low-level routines that perform many common operations in linear algebra, including tools for matrix and vector multiplication. They are a de facto standard in numerical computation, with several different implementations of the BLAS routines available. Some implementations have been tuned for use on certain hardware<a href="#fn29" id="fnref29" role="doc-noteref"><sup>29</sup></a>, others have been well optimised on account of being around for a long time — the original BLAS routines were released in 1979!</p>
<p>Let’s grab a copy of the latest release of the so-called “reference implementation” of BLAS<a href="#fn30" id="fnref30" role="doc-noteref"><sup>30</sup></a>, written in Fortran 90, and compile it using the patched LLVM we built above.</p>
<div>
<p><span>[~/fortran]</span>curl -L https://www.netlib.org/blas/blas-3.12.0.tgz &gt; blas-3.12.0.tgz</p>
<p>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</p>
<p>                                 Dload  Upload   Total   Spent    Left  Speed</p>
<p>100  323k  100  323k    0     0   317k      0  0:00:01  0:00:01 --:--:--  317k</p>
<p><span>[~/fortran]</span>tar xzf blas-3.12.0.tgz</p>
</div>
<p>We’ll need to modify <code>BLAS-3.12.0/make.inc</code> to tell it about our version of <code>flang-new</code> and the Emscripten tools. Modify the following settings, leaving the other lines in that file as they are, then build BLAS using <code>make</code>.</p>
<div id="cb11" data-filename="BLAS-3.12.0/make.inc"><pre><code><span id="cb11-1"><span>FC</span> <span>=</span><span> ../build/bin/flang-new</span></span>
<span id="cb11-2"><span>FFLAGS</span> <span>=</span><span> -O2</span></span>
<span id="cb11-3"><span>FFLAGS_NOOPT</span> <span>=</span><span> -O0</span></span>
<span id="cb11-4"></span>
<span id="cb11-5"><span>AR</span> <span>=</span><span> emar</span></span>
<span id="cb11-6"><span>RANLIB</span> <span>=</span><span> emranlib</span></span></code></pre></div>
<div>
<p><span>[~/fortran]</span>cd BLAS-3.12.0</p>
<p><span>[~/fortran/BLAS-3.12.0]</span>make</p>
<p>../build/bin/flang-new -O2  -c -o isamax.o isamax.f</p>
<p>../build/bin/flang-new -O2  -c -o sasum.o sasum.f</p>
<p>...</p>
<p>emar cr blas_LINUX.a isamax.o ... xerbla_array.o</p>
<p>emranlib blas_LINUX.a</p>
<p><span>[~/fortran/BLAS-3.12.0]</span>cd ..</p>
<p><span>[~/fortran]</span></p>
</div>
<p>That went pretty well! Let’s try using it in a Fortran subroutine compiled for WebAssembly. For fun, we’ll try working with double precision complex numbers. We’ll use the BLAS level 2 routine <a href="https://netlib.org/lapack/explore-html-3.6.1/dc/dc1/group__complex16__blas__level2_gafaeb2abd9fffa7442b938dc384aeaf47.html#gafaeb2abd9fffa7442b938dc384aeaf47"><code>ZGEMV()</code></a>, which performs the matrix-vector operation</p>
<p><span>\[\begin{equation}
\mathbf{y} \leftarrow \alpha\mathbf{A}\mathbf{x} + \beta\mathbf{y},
\end{equation}\]</span></p>
<p>where <span>\(\alpha\)</span> and <span>\(\beta\)</span> are scalar constants, <span>\(\mathbf{x}\)</span> and <span>\(\mathbf{y}\)</span> are vectors, and <span>\(\mathbf{A}\)</span> is a matrix. Our Fortran routine will take in <code>alpha</code>, <code>beta</code>, <code>A</code>, <code>X</code>, and <code>Y</code>, with a fixed parameter <code>N</code> so that <span>\(\mathbf{A}\)</span> is a square matrix with three rows and columns. The result is written back into <span>\(\mathbf{y}\)</span>, so we declare that <code>Y</code> is of intent <code>INOUT</code>.</p>
<div id="cb12" data-filename="bar.f08"><pre><code><span id="cb12-1"><span>SUBROUTINE</span> bar(alpha, A, X, beta, Y)</span>
<span id="cb12-2">    <span>IMPLICIT</span> <span>NONE</span></span>
<span id="cb12-3">    <span>INTEGER</span>, <span>PARAMETER</span> <span>::</span> N <span>=</span> <span>3</span></span>
<span id="cb12-4">    <span>COMPLEX(KIND=8)</span>, <span>INTENT(IN)</span> <span>::</span> alpha, beta, A(N,N), X(N)</span>
<span id="cb12-5">    <span>COMPLEX(KIND=8)</span>, <span>INTENT(INOUT)</span> <span>::</span> Y(N)</span>
<span id="cb12-6">    <span>EXTERNAL</span> zgemv</span>
<span id="cb12-7"></span>
<span id="cb12-8">    <span>CALL</span> zgemv(<span>'N'</span>, N, N, alpha, A, N, X, <span>1</span>, beta, Y, <span>1</span>)</span>
<span id="cb12-9"><span>END</span></span></code></pre></div>
<p>Notice how with some BLAS routines, <code>CHARACTER</code> strings of length one control configuration settings. Here, we pass <code>'N'</code> as the first argument. It is one of the reasons we spent time and care above building a version of <code>flang-new</code> that can deal with <code>CHARACTER</code> arguments and their hidden implicit length arguments for the <code>wasm32</code> target.</p>
<p>Next, we’ll write a C program to create some complex variables, send them to Fortran and BLAS for processing, and print the result. This will let us know both that passing double precision complex numbers to Fortran and calling BLAS routines works as expected.</p>
<div id="cb13" data-filename="bar.c"><pre><code><span id="cb13-1"><span>#include </span><span>&lt;stdio.h&gt;</span></span>
<span id="cb13-2"><span>#include </span><span>&lt;complex.h&gt;</span></span>
<span id="cb13-3"></span>
<span id="cb13-4"><span>extern</span> <span>void</span> bar_<span>(</span><span>double</span> <span>complex</span><span>*,</span> <span>double</span> <span>complex</span><span>*,</span> <span>double</span> <span>complex</span><span>*,</span></span>
<span id="cb13-5">                 <span>double</span> <span>complex</span><span>*,</span> <span>double</span> <span>complex</span><span>*);</span></span>
<span id="cb13-6"></span>
<span id="cb13-7"><span>int</span> main<span>()</span> <span>{</span></span>
<span id="cb13-8">  <span>double</span> <span>complex</span> alpha <span>=</span> <span>1.</span><span>;</span></span>
<span id="cb13-9">  <span>double</span> <span>complex</span> beta <span>=</span> <span>2.</span><span>*</span>I<span>;</span></span>
<span id="cb13-10">  <span>double</span> <span>complex</span> A<span>[]</span> <span>=</span> <span>{</span></span>
<span id="cb13-11">    <span>1.</span><span>*</span>I<span>,</span> <span>4.</span>  <span>,</span> <span>5.</span><span>,</span></span>
<span id="cb13-12">    <span>7.</span>  <span>,</span> <span>2.</span><span>*</span>I<span>,</span> <span>6.</span><span>,</span></span>
<span id="cb13-13">    <span>8.</span>  <span>,</span> <span>9.</span>  <span>,</span> <span>3.</span><span>*</span>I</span>
<span id="cb13-14">  <span>};</span></span>
<span id="cb13-15">  <span>double</span> <span>complex</span> X<span>[]</span> <span>=</span> <span>{</span> <span>0.</span><span>,</span> <span>1.</span><span>,</span> <span>2.</span> <span>};</span></span>
<span id="cb13-16">  <span>double</span> <span>complex</span> Y<span>[]</span> <span>=</span> <span>{</span> <span>3.</span><span>,</span> <span>4.</span><span>,</span> <span>5.</span> <span>};</span></span>
<span id="cb13-17"></span>
<span id="cb13-18">  bar_<span>(&amp;</span>alpha<span>,</span> A<span>,</span> X<span>,</span> <span>&amp;</span>beta<span>,</span> Y<span>);</span></span>
<span id="cb13-19"></span>
<span id="cb13-20">  printf<span>(</span><span>"Y[0]: </span><span>%f</span><span> + </span><span>%f</span><span>i, Y[1]: </span><span>%f</span><span> + </span><span>%f</span><span>i, Y[2]: </span><span>%f</span><span> + </span><span>%f</span><span>i</span><span>\n</span><span>"</span><span>,</span></span>
<span id="cb13-21">         creal<span>(</span>Y<span>[</span><span>0</span><span>]),</span> cimag<span>(</span>Y<span>[</span><span>0</span><span>]),</span></span>
<span id="cb13-22">         creal<span>(</span>Y<span>[</span><span>1</span><span>]),</span> cimag<span>(</span>Y<span>[</span><span>1</span><span>]),</span></span>
<span id="cb13-23">         creal<span>(</span>Y<span>[</span><span>2</span><span>]),</span> cimag<span>(</span>Y<span>[</span><span>2</span><span>]));</span></span>
<span id="cb13-24">  <span>return</span> <span>0</span><span>;</span></span>
<span id="cb13-25"><span>}</span></span></code></pre></div>
<div>
<p><span>[~/fortran]</span>./build/bin/flang-new -c bar.f08 -o bar.o</p>
<p><span>[~/fortran]</span>emcc bar.c bar.o build/flang/runtime/libFortranRuntime.a BLAS-3.12.0/blas_LINUX.a -o bar.js</p>
<p><span>[~/fortran]</span>node bar.js</p>
<p>Y[0]: 23.000000 + 6.000000i, Y[1]: 18.000000 + 10.000000i, Y[2]: 6.000000 + 16.000000i</p>
</div>
<p>And there we have it: BLAS compiled from Fortran 90 sources and running under WebAssembly! To finish up, let’s confirm for ourselves that this output is correct<a href="#fn31" id="fnref31" role="doc-noteref"><sup>31</sup></a>,</p>
<p><sup>31</sup>&nbsp;Keeping in mind Fortran’s column-major array layout.</p><p><span>\[\begin{equation}
\begin{split}
\alpha\mathbf{A}\mathbf{x} &amp; + \beta\mathbf{y} \\[0.5em]
&amp; =
\begin{pmatrix}
  i &amp; 7 &amp; 8\\
  4 &amp; 2i &amp; 9\\
  5 &amp; 6 &amp; 3i
\end{pmatrix}
\cdot
\begin{pmatrix}
  0\\1\\2
\end{pmatrix}
+ 2i
\begin{pmatrix}
  3\\4\\5
\end{pmatrix}\\[0.5em]
&amp; =
\begin{pmatrix}
  23+6i\\18+10i\\6+16i
\end{pmatrix}.
\end{split}
\end{equation}\]</span></p>
<section id="mnist">
<h2 data-anchor-id="mnist">Example: A handwritten digit classifier</h2>
<p>The following demo uses a <a href="https://en.wikipedia.org/wiki/Multilayer_perceptron">multi-layer perceptron (MLP)</a> artificial neural network to classify hand-drawn digits. Try it out with your mouse or touchscreen! Just draw a digit from 0-9 in the box, and the classifier will try to label what digit you wrote. The relative probabilities according to the network are shown in a plot on the right.</p>

<p>It’s not a perfect model, but it works fairly well for me! The weights powering the model have been pre-trained using Python, but the classification is performed at runtime using JavaScript and WebAssembly, running in your browser right now.</p>
<p>With an MLP network, the classification process is essentially a repeated application of matrix-vector addition and multiplication. In this demo the heavy lifting is done by a single Fortran subroutine making use of the BLAS level 2 routine <a href="https://netlib.org/lapack/explore-html-3.6.1/d7/d15/group__double__blas__level2_gadd421a107a488d524859b4a64c1901a9.html"><code>DGEMV()</code></a>.</p>
</section>
<section id="building-lapack">
<h2 data-anchor-id="building-lapack">Building LAPACK</h2>
<p><a href="https://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms">LAPACK</a> (Linear Algebra Package) is a software library for solving linear algebra problems numerically. It’s built upon BLAS and has similarly become a standard with many reimplementations designed for specific hardware or systems.</p>
<p>Let’s finish this post by also building the “reference implementation” of LAPACK<a href="#fn32" id="fnref32" role="doc-noteref"><sup>32</sup></a>.</p>
<p><sup>32</sup>&nbsp;Also available from <a href="https://www.netlib.org/lapack/">netlib</a>, released under a modified BSD licence.</p><div>
<p><span>[~/fortran]</span>curl -L https://github.com/Reference-LAPACK/lapack/archive/refs/tags/v3.12.0.tar.gz &gt; lapack-3.12.0.tgz</p>
<p>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</p>
<p>                                 Dload  Upload   Total   Spent    Left  Speed</p>
<p>100 7747k    0 7747k    0     0  4117k      0 --:--:--  0:00:01 --:--:-- 6655k</p>
<p><span>[~/fortran]</span>tar xzf lapack-3.12.0.tgz</p>
</div>
<p>Similar to BLAS, we need to modify some configuration options to let LAPACK know about Emscripten and <code>flang-new</code>. Copy the file <code>lapack-3.12.0/make.inc.example</code> to <code>lapack-3.12.0/make.inc</code>, then make the following modifications. Be sure to replace <code>[...]</code> with the full path to the build directory on your machine<a href="#fn33" id="fnref33" role="doc-noteref"><sup>33</sup></a>, and leave the other options in the file as they are.</p>
<p><sup>33</sup>&nbsp;A relative path doesn’t work here. Alternatively, simply set the option to read <code>flang-new</code> and make it available on your <code>$PATH</code>.</p><div id="cb14" data-filename="lapack-3.12.0/make.inc"><pre><code><span id="cb14-1"><span>FC</span> <span>=</span><span> [...]/build/bin/flang-new</span></span>
<span id="cb14-2"><span>FFLAGS</span> <span>=</span><span> -O2</span></span>
<span id="cb14-3"><span>FFLAGS_DRV</span> <span>=</span><span> </span><span>$(</span><span>FFLAGS</span><span>)</span></span>
<span id="cb14-4"><span>FFLAGS_NOOPT</span> <span>=</span><span> -O0</span></span>
<span id="cb14-5"></span>
<span id="cb14-6"><span>AR</span> <span>=</span><span> emar</span></span>
<span id="cb14-7"><span>RANLIB</span> <span>=</span><span> emranlib</span></span>
<span id="cb14-8"></span>
<span id="cb14-9"><span>TIMER</span> <span>=</span><span> INT_CPU_TIME</span></span></code></pre></div>
<p>Then, build LAPACK using the <code>make lib</code> command to create the WebAssembly static library <code>liblapack.a</code>.</p>
<div>
<p><span>[~/fortran]</span>cd lapack-3.12.0</p>
<p><span>[~/fortran/lapack-3.12.0]</span>make lib</p>
<p>make -C SRC</p>
<p>.../build/bin/flang-new -O2  -c -o sbdsvdx.o sbdsvdx.f</p>
<p>...</p>
<p>emar cr ../../libtmglib.a slatms.o ... dlarnd.o</p>
<p>emranlib ../../libtmglib.a</p>
<p><span>[~/fortran/lapack-3.12.0]</span>cd ..</p>
<p><span>[~/fortran]</span></p>
<p><span>[~/fortran]</span>file lapack-3.12.0/liblapack.a</p>
<p>lapack-3.12.0/liblapack.a: current ar archive</p>
</div>
<p>With this, LAPACK routines can be called in a similar way to the BLAS routine example in the previous section.</p>
</section>
<section id="example-polynomial-interpolation-with-linear-algebra">
<h2 data-anchor-id="example-polynomial-interpolation-with-linear-algebra">Example: Polynomial Interpolation with Linear Algebra</h2>
<p>The following demo finds interpolating polynomials for a set of points, demonstrating LAPACK routines running in your web browser.</p>
<p>Click the plot to add new points. An interpolating polynomial will be found to pass through all the points using <a href="https://en.wikipedia.org/wiki/Vandermonde_matrix">Vandermonde’s method</a><a href="#fn34" id="fnref34" role="doc-noteref"><sup>34</sup></a>. The linear algebra equation given by this method is then solved numerically in LAPACK using the <a href="https://netlib.org/lapack/explore-html-3.6.1/d7/d3b/group__double_g_esolve_ga1df516c81d3e902cca1fc79a7220b9cb.html#ga1df516c81d3e902cca1fc79a7220b9cb"><code>DGELS()</code></a> routine.</p>
<p><sup>34</sup>&nbsp; It is always possible to find an <span>\(n-1\)</span> degree polynomial containing <span>\(n\)</span> data points exactly. However, when <span>\(n\)</span> is large the polynomial fluctuates wildly between successive data points. This problem is known as <a href="https://en.wikipedia.org/wiki/Runge%27s_phenomenon">Runge’s phenomenon</a> and can be avoided by using <a href="https://en.wikipedia.org/wiki/Spline_interpolation">spline interpolation</a>.</p>
</section>
</section>
<section id="final-thoughts">
<h2>Final thoughts</h2>
<p>If you followed along at home, you now have a version of LLVM Flang that can compile modern Fortran code into WebAsembly objects. As I mentioned earlier, while it’s always been possible to build numerical algorithms for the web using JavaScript, to me the beauty of this approach is it allows you to use powerful Fortran tools and libraries that already exist, avoiding time and effort rewriting large collections of numerical routines for the web.</p>
<p>It would be wonderful if WebAssembly could be officially supported by the <code>flang-new</code> compiler. It would certainly lessen the burden of maintaining a fork of LLVM for <a href="https://github.com/r-wasm/webr">webR</a> and its R packages. However, without some help and support from a more experienced compiler developer, we will need to continue using a patched version for now.</p>
<p>If you’re familiar with LLVM Flang and know a better route to fixing the issues described above in a way that works for all targets with cross-compilation, feel free to <a href="mailto:george@stagg.phd">email me</a>. I’d be very interested to hear.</p>
<p>If you’d like to experiment with compiling Fortran code for WebAssembly but can’t or don’t want to build LLVM Flang from scratch, we provide a Docker container with <a href="https://github.com/r-wasm/flang-wasm/pkgs/container/flang-wasm">a binary version of our patched LLVM Flang</a> in the GitHub container registry.</p>


</section>


</main> <!-- /main -->

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Deep sea mining could be worse for the climate than land ores (105 pts)]]></title>
            <link>https://planet-tracker.org/deep-sea-mining-could-be-worse-for-the-climate-than-land-ores/</link>
            <guid>39942902</guid>
            <pubDate>Fri, 05 Apr 2024 14:35:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://planet-tracker.org/deep-sea-mining-could-be-worse-for-the-climate-than-land-ores/">https://planet-tracker.org/deep-sea-mining-could-be-worse-for-the-climate-than-land-ores/</a>, See on <a href="https://news.ycombinator.com/item?id=39942902">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main role="main" itemscope="itemscope" itemtype="https://schema.org/Blog"><div><div>


<section itemscope="itemscope" itemtype="https://schema.org/BlogPosting" itemprop="blogPost"><p>Deep Sea Mining, Greenwashing
</p></section></div>






<div itemprop="blogPost" itemscope="itemscope" itemtype="https://schema.org/BlogPosting"><p><strong>London 5 December: </strong>As decisions over the future viability of deep sea mining are under review, Planet Tracker’s latest report ‘<a href="https://planet-tracker.org/wp-content/uploads/2023/12/The-Climate-Myth-of-Deep-Sea-Mining.pdf" data-wpel-link="internal">The Climate Myth of Deep Sea Mining</a>’ examines deep sea mining companies’ claim that mining polymetallic nodules could be a low carbon alternative to mining on land.</p>
<p>There are only three academic lifecycle assessment studies evaluating the ‘nodule-to-commodity’ climate impact of copper, cobalt, nickel and ferromanganese produced from polymetallic nodules and land ores.</p>
<p>Two of the three studies were funded by, and conducted in collaboration with, deep sea mining companies: one by The Metals Company (formerly DeepGreen Metals) and one by Global Sea Mineral Resources. The third paper, published by Fritz et al. in 2023, had no support from the deep sea mining industry.</p>
<p>Comparing these three studies underlines the huge variance in the estimated climate impacts of nodules and land ores. Depending on the choice of methodology, background data, software and assumptions and parameters used, deep sea nodules could have 28% higher or 76% lower climate impact than land ores. Planet Tracker believes that such a marked variation in results is not a good enough basis for making decisions about the future of deep sea mining.</p>
<p>Over 70% of greenhouse gas emissions for both land ores and deep sea nodules come from metallurgical processing, the energy- and fossil fuel-intensive processes that turn nodules and land ores into metal products. This means that climate impact is less dependent on whether metals come from the deep sea or from land and is more dependent on the properties of processing: mainly the sources of fuel and electricity used, process efficiency and processing technique.</p>
<p>Deep sea mining could have a long-term impact on ocean carbon stocks and sequestration services. Marine sediments are an important part of the global carbon cycle and make up the largest pool of sediment or soil carbon stocks in the world. While the rate of carbon sequestration is relatively slow at the deep seabed, ocean sediments can store carbon for millions of years if left undisturbed.</p>
<p>Planet Tracker estimates that deep sea mining vehicles kicking up sediment plumes could disturb 172.5 tonnes of carbon each year for every km<sup>2</sup> mined. For context, only 13.9 kg of carbon per km<sup>2</sup> is sequestered every year in the Clarion-Clipperton Zone where deep sea mining licenses have been granted.</p>
<p>Sediment plumes from deep sea mining machinery could impact carbon sequestration taking place in ocean waters by blocking sunlight and reducing photosynthesis. Carbon sequestration carried out by plants living on the nodules being mined would also be stopped completely. These impacts haven’t yet been calculated but considering that nodules take tens of millions of years to form, some of this damage would essentially be permanent.</p>
<p>“Through this research we really want to stress that deep sea mining could be a significant greenhouse gas emissions and contribute to climate change, which exposes financial institutions to policy, regulatory and reputational risks”, says Emma Amadi, Investment Analyst at Planet Tracker and one of the report’s authors.</p>
<p>“We want to encourage financial institutions to support a moratorium on deep sea mining&nbsp; and we’d also encourage them to support the decarbonization of terrestrial mining and metals production, for example supporting the electrification of mining with renewable energy sources and supporting the development and scaling of low-carbon metal processing routes like hydrometallurgy which reduce or remove the need for fossil fuels”.</p>
<p><strong>The Climate Myth of Deep Sea Mining can be downloaded &nbsp;</strong><a href="https://planet-tracker.org/wp-content/uploads/2023/12/The-Climate-Myth-of-Deep-Sea-Mining.pdf" data-wpel-link="internal"><strong>here</strong></a><strong>.</strong></p>
<p><strong>ENDS</strong></p>


<p><strong>For more information please contact:</strong></p>
<p>Dominic Lyle, Planet Tracker | t: +44 7484 654 941</p>
<p><a href="mailto:dominic@planet-tracker.org">dominic@planet-tracker.org</a></p>
</div>
</div></main><!-- close content main element --> <!-- section close by builder template -->		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[M 4.7 Earthquake 7 km N of Whitehouse Station, New Jersey – USGS (439 pts)]]></title>
            <link>https://earthquake.usgs.gov/earthquakes/eventpage/at00sbh3yv/executive</link>
            <guid>39942880</guid>
            <pubDate>Fri, 05 Apr 2024 14:34:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://earthquake.usgs.gov/earthquakes/eventpage/at00sbh3yv/executive">https://earthquake.usgs.gov/earthquakes/eventpage/at00sbh3yv/executive</a>, See on <a href="https://news.ycombinator.com/item?id=39942880">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <p>
            The Earthquake Event Page application supports most recent browsers,
            <a href="https://angular.io/guide/browser-support">view supported browsers</a>. Or, try our
            <a href="https://earthquake.usgs.gov/earthquakes/feed/">Real-time Notifications, Feeds, and Web Services</a>.
          </p>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: What is the most useless project you have worked on? (435 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=39942397</link>
            <guid>39942397</guid>
            <pubDate>Fri, 05 Apr 2024 13:53:10 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=39942397">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="39946804"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946804" href="https://news.ycombinator.com/vote?id=39946804&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I once worked on an in-house ERP system which had been developed over about 15 years by various developers. It was the engine of the entire company, everything passed through it. The CFO and some senior leadership erroneously blamed it for their shortcomings/used it as a scapegoat. When new management took charge, an initiative was started to replace the system with an industry standard solution. Both myself and the CTO (my boss) made it clear that we strongly felt this would not only go way over budget, but ultimately fail as a project.<p>Having no understanding as to the technicalities involved, the project was given the go ahead by the directors after several meetings with a vendor. After the CTO and I expressed our concerns about the scale of the project and the sheer amount of functionality involved, the vendor gleefully assured us that they were experienced with "migrations of this scale" and were more than prepared, which was music to the ears of the CFO.</p><p>Daily 2-3 hour meetings followed (for many months) to define the scope of the project. Within each meeting I sort of zoned out because it became very obvious that no only did the vendor not understand the scale of the work involved, but had started cutting corners everywhere/leaving out crucial functionality, and this was just the scoping stage, no development had even started yet.</p><p>I eventually departed the company but kept in contact with the CTO and learned that after 5 years (project was scoped for 2), the migration was abandoned costing multiple millions of dollars with nothing to show for it.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946964"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946964" href="https://news.ycombinator.com/vote?id=39946964&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>&gt; the vendor gleefully assured us that they were experienced with "migrations of this scale"<p>Sales is mostly just lying to collect a commission check.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39947111"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39947111" href="https://news.ycombinator.com/vote?id=39947111&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Quite the opposite, they are experienced with those endless migrations.<p>French poet Paul Valery once said: "A poem is never finished, only abandoned".</p><p>It is the same for those projects. You just gotta keep paying forever.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39947003"><td></td></tr>
                        <tr id="39946918"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946918" href="https://news.ycombinator.com/vote?id=39946918&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>After the first lecture of my first programming course in college, I went to the Professor Tewksbury and started to tell him about a simulator I was writing to help other students check their work.<p>He holds up his hand to stop me speaking, says “you have an A. Don’t come to class anymore.”</p><p>So, I never went to class or did any of the assigned work, instead working on the simulator in my dormroom. At the end of the term I got a failing mark. I went to Tewksbury, and he had no recollection of having told me that I shouldn’t come to class. I tried explaining myself about the simulator, and showed him. He grudgingly agreed to change my mark, seeming suspicious.</p><p>Despite my attempts to work with the dept, the simulator never got used.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39947102"><td></td></tr>
            <tr id="39946978"><td></td></tr>
                <tr id="39947130"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39947130" href="https://news.ycombinator.com/vote?id=39947130&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>The concept seems weird to me. I have never been given a mark by a teacher that matters. Exams were administered by independent bodies.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="39946501"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946501" href="https://news.ycombinator.com/vote?id=39946501&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I built the best site out there for playing magic the gathering online. It's way better than any other available option.<p>I've never shared it with the magic community because I think wizards of the coast would just send me a cease and desist, so three years of work is just sitting idle.</p><p>I'm still not sure how I feel about it.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39947135"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39947135" href="https://news.ycombinator.com/vote?id=39947135&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>OK listen up dude.<p>&gt; I built the best site out there for playing magic the gathering online.</p><p>No you didn't! You built the best site out there for playing <i>trading card games</i>. It just so happens that it's very easy to point to your own local card/rule sets, share them with peers, and play together online. And if the cards/rules being used by the clients happen to be MTG cards/rules, oh well! That's out of your hands.</p><p>Seriously, if you want to release this you only need to make it a) generic out of the box, and b) completely customizable at the client level. Of course this would never support true competitive play since you can <i>never trust the client</i>, but it would still be super fun for playing against people you trust. And as a bonus you could support user-created cards and rules.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946646"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946646" href="https://news.ycombinator.com/vote?id=39946646&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Go out with a bang. Release it, enjoy your 15 minutes in the spotlight, and when the lawyers come a-knocking, shut it down. Or make it open source and let the community take the wheel and the responsibility.<p>You never know what opportunities this adventure might bring, but certainly more than just keeping it on your hard drive. Go for it mate.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39947122"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39947122" href="https://news.ycombinator.com/vote?id=39947122&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I may indeed do this. There is an outstanding issue I have to address that I've never quite worked up the motivation to deal with:<p>Heroku restarts their servers once every 24 hours with only thirty seconds' warning. Since the games are in-memory, this of course kicks everyone out of whatever games they may be in the middle of.</p><p>I guess the solution is to have the games be on Redis instead of in-memory? I'm a bit more front-end oriented so I was bewildered to learn this was how it worked in the first place and I'm not 100% confident in my solution.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39946720"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946720" href="https://news.ycombinator.com/vote?id=39946720&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Off topic, but I recently looked in to playing MtG again because my son expressed interest. But, I was a bit taken aback by how different the environment is. I last played when they still had numbered "base sets", e.g., "9th Edition", and then rotating "blocks" of three smaller-but-more-advanced sets.<p>I was assuming I would go in and buy a couple of starter decks from the most recent numbered "edition" to start teaching him, but it appears that they don't do this anymore, and everything I saw was focused around the "Commander" format, which has even more mechanics and rules. The game was <i>already</i> complex enough that I was worried about teaching it to someone new (Plus, the commander mechanic didn't appeal to me, personally, anyway).</p><p>Is there no longer the concept of a "simple base set" with just the basic mechanics? Or is everything just theme-heavy sets now?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39947016"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39947016" href="https://news.ycombinator.com/vote?id=39947016&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>They still do core sets (every Summer, IIRC) that fulfill those basic edition sets.  Lately, they've been set in external intellectual properties.  Last year's was Lord of the Rings.  Might sound bad, but the D&amp;D set rekindled magic in my game group.<p>They had a Jumpstart product, where you could buy two half-decks and mix them together.  But it looks like the last printing of that was 2022.</p><p>If you don't mind spending the time, you could just craft a starter deck on paper or find a list online, and then order the individual cards from a website.  As long as you avoid the must-have cards for competitive players, it'll be cheap.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946969"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39946969" href="https://news.ycombinator.com/vote?id=39946969&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I’ve been playing with my son, but using my shoebox full of old cards, many with an “IV” logo so must have been around 4e that I was playing back in the day.<p>The game is complex, but a good intellectual challenge for a bright 6yo reader.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39947056"><td></td></tr>
                        <tr id="39946629"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946629" href="https://news.ycombinator.com/vote?id=39946629&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>At least make them send you the C&amp;D!  And you can get some attention for your hard work in the weeks/months before they do.  Who knows what it will lead to?</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39946971"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946971" href="https://news.ycombinator.com/vote?id=39946971&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>Just brainstorming, but would it be possible to pull out the MTG-specific portions and make it just an online card game framework where people can make their own cards and rules? If people choose to use it to copy MTG that's on them (see Tabletop Simulator, for example) but they might also use it to create their own new games.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39946582"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946582" href="https://news.ycombinator.com/vote?id=39946582&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>I started building a Magic based data science tool for 6 months before coming to the same inevitable conclusion. It sits in a Github private repo rotting away.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39946748"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946748" href="https://news.ycombinator.com/vote?id=39946748&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>Better to go for it then completely shelve it would think.  You could also r skin it in some fashion, like make it more generic and have users provide their own decks (which happen to be MTG) etc</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39947086"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39947086" href="https://news.ycombinator.com/vote?id=39947086&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>There's probably someone out there with a great card game that is just lacking a site...<p>Could you adapt the thing to suit another card game?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946586"><td></td></tr>
                <tr id="39946624"><td></td></tr>
                <tr id="39946863"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39946863" href="https://news.ycombinator.com/vote?id=39946863&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>At best they will bully anyone who made anything to hand it over to them (for free "or else"), and then scavenge on it in case they see anything they like for future 'features'.</span></p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="39946640"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946640" href="https://news.ycombinator.com/vote?id=39946640&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Working for big tech, our Director wanted to add "ML" to one of our workflows no matter what. He identified a "problematic step" and a team of scientist spent 1 year coming up with a ML model to replace this step. I was asked to deploy this solution in production.<p>When we tested the model (which somehow hadn't happened before) we found that the workflow was 5% quicker, but the results were more than 10% worse, and was more expensive to run. Everyone hated the idea, but the director kept pushing to do it, "or I'll find someone else to do it". I ran away and never looked back.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39947044"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39947044" href="https://news.ycombinator.com/vote?id=39947044&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>Kiosk Banking.  Back in the 1990's, just before the web became a thing, it was an idea to bring banking to consumers without the bank buildking, which they called "brickless banking".  Kiosks would be placed in public locations like malls.  Customers would enter the kiosk, close the curtain or door, then connect via video-call with one of the agent in the call centres.  Depending what product the customer wanted (mortgage, credit card, etc), the kiosk would print the necessary forms for the customer to sign then deposit into a secure mailbox in the kiosk.  Millions of investment $$$ were planned for this ... then it was suddenly cancelled when the bank realized what this "web" thing might eventually become.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39947078"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39947078" href="https://news.ycombinator.com/vote?id=39947078&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I am writing a solution manual to this textbook, by solving EVERY DAMN exercise and writing it up in latex.<p>It is EXTREMELY time consuming.</p><p>The actual solution manual is already available online.</p><p>I might gain an understanding of this field, but I doubt I will ever get an interesting job because of this effort.</p><p>Unless I revise this stuff, I will forget most of it in a few years.</p><p>Why am I doing this? Idk. Vanity perhaps?</p><p>Somebody stop me....
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946530"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946530" href="https://news.ycombinator.com/vote?id=39946530&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Worked for a client via freelancing. Built 3 projects, all failed. He likes to follow the trends, first SaaS, then crypto/blockchain, and now AI. He apparently raises money, pays himself and builds bullshit projects. That's it. But while doing so, he does everything to look like a legit startup.<p>Ngl, he was my first major client with whom I gained a lot of experience, but it doesn't change the fact that he is a hype chaser.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39947125"><td></td></tr>
                  <tr id="39947038"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39947038" href="https://news.ycombinator.com/vote?id=39947038&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Some years ago, a colleague literally spent all night in the office, on the 31st of March, implementing clippy for another third party commercial application (not MS Office) that was heavily used by the company and across that industry.<p>He inspired me to take April Fool's seriously. I've since changed industries but last year I jumped on the AI bandwagon with <a href="https://chatellite.space/" rel="nofollow">https://chatellite.space</a> and this year a nod to a popular mobile game <a href="https://flappysat.space/" rel="nofollow">https://flappysat.space</a> .</p><p>Functionally completely useless but they taught me a lot and made a lot of people laugh.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39947116"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39947116" href="https://news.ycombinator.com/vote?id=39947116&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>My last job had me updating a legacy service in a totally different language to what i was hired for a technology that was gonna get replaced in one month - hence rendering one months effort as useless.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39946713"><td></td></tr>
                <tr id="39946885"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946885" href="https://news.ycombinator.com/vote?id=39946885&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>? I don’t get it, isn’t the person installing critical safety features in an automobile performing a valuable social function?</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39946909"><td></td></tr>
                  <tr id="39946820"><td></td></tr>
            <tr id="39946898"><td></td></tr>
            <tr id="39946875"><td></td></tr>
                  <tr id="39946302"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946302" href="https://news.ycombinator.com/vote?id=39946302&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Oh I thought this was gonna be that like the entire product / company / idea was useless, not just like a small number of weeks' worth of work.<p>I've probably created a hundred or more proofs of concept for things that turned out to be a bad idea. Say these averaged out to a week or so of work each, and that's about two full years of useless work.</p><p>And that's ok! Most stuff you work on will get thrown away before you leave a company, and the rest will get thrown away not long after that.</p><p>This doesn't really bum me out, but I can certainly understand why people experience it that way.</p><p>Honestly though, I think it's worse when things I've created <i>do</i> persist for a long time. They're never nearly good enough and I hate to think that they still exist nonetheless.</p><p>I guess my point is: try not to sweat this stuff; it will drive you crazy.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39947010"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39947010" href="https://news.ycombinator.com/vote?id=39947010&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>It was at Amazon and I don't remember exactly what the service was called, I think it was AdSomething. It was while I worked on the Kindle Special Offers (taking advantage of the "off" screen of an e-ink Kindle to show ads) project. I find that to be one of the less offensive forms of advertising, so I was generally pretty happy on that team for a time.<p>But there was a service, AdWhatever, which let users go onto a sub-site of Amazon.com and just casually? recreationally? vote between two ads. You would be presented with two B&amp;W images and click the one you liked more. I don't know that there was any incentive to do this, but I think it was a Bezos idea.</p><p>I didn't develop it, but all the routine maintenance tasks that came along (remove this deprecated library, migrate to new hardware, update your pipeline) needed to be done for AdWhatever too. That stupid service lingered for years after it was clear nobody used it, but we had to keep maintaining it until we got the go-ahead to tear it down.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39942965"><td></td></tr>
                <tr id="39946819"><td></td></tr>
            <tr id="39946913"><td></td></tr>
            <tr id="39943171"><td></td></tr>
                <tr id="39945603"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39945603" href="https://news.ycombinator.com/vote?id=39945603&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I program because I could do nothing else. I do it because it is the thing I most want to do with any given moment. The fact they pay me to do it is fortunate otherwise I would be homeless and programming in a shelter somewhere. I over think work simply because the aspect of “work” is entirely incidental to what I do out of passion.<p>That said, I also never believe anything I do is useful and that also isn’t why I do what I do.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946609"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39946609" href="https://news.ycombinator.com/vote?id=39946609&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>I do the programming for free.  Taking the annual leadership impact and cybersecurity training survey is what they pay me for.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39943489"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39943489" href="https://news.ycombinator.com/vote?id=39943489&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>This is the right attitude. Unless you own the business, you have no moral responsibility to ensure the projects you work on have a purpose. You can, of course, optionally choose to not work on projects you believe have a <i>bad</i> or <i>evil</i> purpose. I've quit jobs where I though the project was evil.<p>You're writing the code, or producing the documentation, managing the project, performing QA, or whatever else your role is, and in exchange your company is paying you money. That's the bottom line. If you think it's a useless project, then you should be even doubly grateful that a company exists that will pay you your (presumably good) salary to create something useless! I worked on a totally useless project in the past, a lot like some of the comments here describe, and I went into work every day thanking the stars that my company was stupid enough to pay me to do this!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946634"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39946634" href="https://news.ycombinator.com/vote?id=39946634&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>Lucky for you to have the privilege to protest quit from moral outrage. Not everyone is so lucky (in fact, most people aren’t).</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39946762"><td></td></tr>
                        <tr id="39944863"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39944863" href="https://news.ycombinator.com/vote?id=39944863&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>I don’t think there’s anything wrong with also wanting the work you do to have a positive impact in the world. Whether it helps people, entertains them, or saves them time it feels great to get paid and also make a difference. Some may not be happy with just wanting a paycheque and that’s OK too.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39946468"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39946468" href="https://news.ycombinator.com/vote?id=39946468&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>The only reason to give a damn about what you're working on is to make sure you're accumulating good bullet points for your resume.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39946627"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39946627" href="https://news.ycombinator.com/vote?id=39946627&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>There are actually companies to work for where you can get involved and develop ownership over things, and where how well you do relates to the success of the business. If you have a good relationship with your coworkers, you may even want to do a good job to try to maximize the likelihood that not just you keep putting bread on the table but they do, too! Crazier things have happened.</span></p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="39942944"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39942944" href="https://news.ycombinator.com/vote?id=39942944&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Friend of mine worked through 400 pages of specifications for a big pharma software (lots of Java, CRUD, microservices). The project started late, it took longer than expected and by middle of the project they learned the client already migrated to another software.<p>So the team had continue for several months to fulfill the catalogue of specifications, pass (external) QA and already knew the software will never be used.</p><p>He said it was all custom and exclusive and couldn't be reused or sold to another client.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39945326"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39945326" href="https://news.ycombinator.com/vote?id=39945326&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I was hired to implement and operate a specific product for a specific customer who paid for four years of onsite support. I do other things too, but that's my one contractually obligated responsibility and my primary one.<p>Turns out the customer didn't read the (enormously expensive) SOW. They don't want the product, can't ingest its output, don't want to do the work necessary to implement it, and on a recent roadmap review listed its function as their absolute last priority. I am not sure whether there's been a change in management, or some salesperson talked really fast, or what.</p><p>I am trying to appreciate this as 'salary for nothing' and use the time to study for other things but it turns out that for me this is an anxiety-inducing and unhappy experience.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946504"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946504" href="https://news.ycombinator.com/vote?id=39946504&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Get another job or use the money for counselling / therapy, your mental health is more important than the job.<p>Hell, maybe try work two jobs if you can!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946892"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946892" href="https://news.ycombinator.com/vote?id=39946892&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>&gt; for me this is an anxiety-inducing and unhappy experience.<p>Don't measure yourself by goofy corporate politics.  It's not your fault (and ignore their political blame games).  You can make the world a better place by the pay you are receiving.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39946889"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946889" href="https://news.ycombinator.com/vote?id=39946889&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>I work at a well known German company and I am employed a little less than half time as a working student to singlehandedly plan, manage and implement a project that is shown every now and then at technology conferences and demonstrations as one of two demonstrations.
I am not able to decide anything on my own, since almost everything has to go through some superior to be bought/allowed.
Despite this PR Desaster waiting to happen, no one else in the team gives any serious time to this project, but whenever the deadline of conference X comes around, I am the one being pressured to get things done. 
There are red flags on the project all around and I know it is not going to work since there has never even been a clear project vision from the start, and every month or so my direct supervisor comes along with a new turn, a new feature to be implemented despite it not working at all with whatever has been there before let alone as a complete concept. I have to actively un-implement certain features to make the next new thing work.
Thank god I have a limited contract and I am out of there at the end of the month.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39946916"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946916" href="https://news.ycombinator.com/vote?id=39946916&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>For a very large software and hardware company's local office in NZ in 2001<p>What they asked for: Refreshing their suit of unit tests, 10,000 of them, that had gone stale (that applied to their widely used C++ telephony library)</p><p>Budget NZ$1,000,000</p><p>(Don't ask what, why, really?)</p><p>I joined half way through</p><p>Half the budget spent, nothing to show, mission mysteriously changed to producing a deep packet inspection tool. (What happened to the unit tests you ask? Be quiet! Take the money)</p><p>My job was to reach deep into their system and bring the data to the surface, roughly speaking</p><p>Thing is nobody that worked on the library wanted, needed, or asked for any aspect of what were doing</p><p>The design for it was written on a whiteboard by the project lead before I joined</p><p>Then the whiteboard was cleaned.</p><p>So the design was in one man's head</p><p>That man, the project lead, quit 3 weeks before delivery</p><p>On handover day  I was a bit afraid, I had taken care to keep good records of my obeying (increasingly unhinged) instructions,  so I was confident I could not be blamed (I was younger and naive-not part of the story)</p><p>But I fully expected an unpleasant "you did what with our money? What were you thinking?" type of unpleasant meeting</p><p>Instead the corporate types sat around a table gushing how wonderful everything was, what a brilliant job we'd all done...</p><p>I was stunned.  I understand now, I learnt that day, that it was in no-one's interest to acknowledge the waste of a million bucks</p><p>Coming from academia, as I was more or less, this was a valuable lesson.</p><p>But utterly worthless software for a million dollars</p><p>I still use some of the furniture I bought with the money....
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946876"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946876" href="https://news.ycombinator.com/vote?id=39946876&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>"Revela Preço" (Price Reveal), a smartphone app for comparing prices across establishments.<p>In Brazil, all businesses must issue an invoice or a fiscal receipt. The latter includes purchase details and a QR code with a URL that directs the consumer to the respective state's SEFAZ (Department of Finance). This allows consumers to view their purchase receipt online and print a second copy if needed.</p><p>However, each SEFAZ operates differently, if they function at all. This hindered the app's progress, as the constant unavailability of state services led to numerous user complaints.</p><p>The project is currently on hold until the receipt consultation process is centralized within the Federal Revenue Service, similar to how invoices are handled currently.</p><p>The project's goal is to allow users to compare recent prices from those who have purchased and scanned their receipts, enabling them to create shopping lists in advance and know where they can save money.</p><p>Relying on each state's government to keep their systems operational has become the project's biggest obstacle.</p><p>I consider it "useless" because of the time spent on it and the inability to continue due to our government's inefficiency.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946894"><td></td></tr>
            <tr id="39946467"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946467" href="https://news.ycombinator.com/vote?id=39946467&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>It was allegedly a front end for configuring traffic signals, allegedly to be used by the kind of Engineer (uppercase E) with licensure from the state.<p>It was actually just a Front. You'd buy it and then our support people (without said licensure), instead of supporting the software, would go out into the field and configure the things for you.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946815"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946815" href="https://news.ycombinator.com/vote?id=39946815&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Not a project, and a second hand story that I'm sure a lot of people can recognize.<p>But I knew a sysadmin at a large european educational institution whose only job it was to hit up-arrow and enter a few times a day when a server crashed.</p><p>They knew how to fix this too, they just didn't care. And nobody else had enough experience to understand.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943011"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943011" href="https://news.ycombinator.com/vote?id=39943011&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>My very first full-time job was to adapt a COTS ATM protocol stack to run on embedded devices to power a truck &amp; satellite network.  The deadline was 1 year to get the stack running on the hardware, and would be the first of 4 annual milestones related to the project.  After about 6 months, I was mostly done the work when I found out that the project was moving to a single release at the 4 year mark.<p>Ok, not so bad, except that the scope of my task remained the same.  The project and my role was funded by the customer for the 4 years, but my deliverable remained the same.  My job was to literally do nothing while being available to debug things if needed.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946985"><td></td></tr>
                  <tr id="39946712"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946712" href="https://news.ycombinator.com/vote?id=39946712&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>&gt; The thing is, after I finished the adjustments, my pull requests are not getting approved due to adjustments meticulously requested by this guy in my team. Adjustments to make the pipeline automation even more resilient in complete unlikely scenarios.<p>IMO only this part is useless. I have been through this and it feels horrible. sometimes its waste of time arguing with people so I just do what the reviewer says even though it doesn't make any sense.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946418"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946418" href="https://news.ycombinator.com/vote?id=39946418&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I don't think your work is entirely useless here, under the assumption that the tool is deprecated but nobody has discontinued using it yet. Even deprecated tools need some maintenance from time to time, and in a big organization there's lots of legacy stuff that's kept around for a long time because replacing it is a lower priority than other roadmap items.<p>For a useless/meaningless project I did once, I wrote the read and announce portions of a userspace BLE stack against the BlueZ sockets in Linux because it was quicker and easier than figuring out how to use the DBus interface. It also turned out to be about 10 times faster latency wise. We needed it to do a proof of concept for something which later didn't pan out in the market. The code still lives in our repository and gets compiled into our products but nobody plugs the Bluetooth dongle that triggers its activation into any fielded product.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943083"><td></td></tr>
                <tr id="39943739"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39943739" href="https://news.ycombinator.com/vote?id=39943739&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I appreciate how making useless stuff is fun as a hobby, and enjoying that play is important.  Even crows enjoy their sleds [0], that’s how important play is.<p>Needing to complete a project for the sake of your continued survival/paycheck, while adhering to specific criteria, is very much the opposite experience.  A study done where _people were paid to put together Lego sets_ put together less of them when they had to watch the researcher take them apart immediately afterwards, despite intrinsically enjoying Legos [1].</p><p>[0] <a href="https://m.youtube.com/watch?v=mRnI4dhZZxQ" rel="nofollow">https://m.youtube.com/watch?v=mRnI4dhZZxQ</a>
[1] <a href="https://www.sciencedirect.com/science/article/abs/pii/S0167268108000127" rel="nofollow">https://www.sciencedirect.com/science/article/abs/pii/S01672...</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943649"><td></td></tr>
                <tr id="39944789"><td></td></tr>
                        <tr id="39943373"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943373" href="https://news.ycombinator.com/vote?id=39943373&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>You need to support services that are getting deprecated until the very last user leaves. And believe ne, sometimes it might take several years more than the company would like to. As long as someone is using it, you're contributing to its stability, and it's not useless. See yourself as the orchestra on the titanic, playing to the best of their craft until the ship goes under.<p>I worked for a full year on a service who was used by exactly 0 people. Then had to do all the consequent security updates and such. It took another 2y until we were finally shutting everything down. That was useless.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39943609"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39943609" href="https://news.ycombinator.com/vote?id=39943609&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>This is indeed something my opinion shifted in the last 2 years. Some of my superiors hate it, but they are kinda getting it after some patience.<p>The thing is: Slowly deprecating a service doesn't work. At least on my patience level, which is measured in years. I don't have decade level patience available.</p><p>If you announce that a service is being decommissioned, the good teams leave across some time. This time can be a month, a year but they leave. It will take longer than expected, but the good teams move and scurry and make it work. Those are the good teams, they cooperate constructively and the migrations work.</p><p>But the other teams just don't.</p><p>And there is nothing else to say about it. They don't. And you can't take it away because there's C-Level support behind those bad teams. So you can't take it away, or else high management comes around asking questions and being pushy.</p><p>To me it seems like you either invest the necessary amount of energy to maintain a service, or you invest energy to actively kill that service. There is no tolerating, there is no "low-effort maintenance". Tell the next CVE &gt; 8 in that service it's "low effort maintenance" and kindly ask the attackers to not attack that service because it's "maintenance".</p><p>Either this is a service we offer, or we actively work on migrating things off of it.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946456"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39946456" href="https://news.ycombinator.com/vote?id=39946456&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>"Change Adoption Curve" - search for some images.<p>I talked with a few infra-ish people at Facebook once upon a time, and they described effectively a "Service Assassination Team".  ImageResizer1.0, ImageResizer9000, they were an actual funded team to hunt down and destroy (and presumably help migrate) people using ImageResizer1.0 (or whatever).</p><p>It seemed that was a very forward-thinking way of looking at things to prevent an eventual "big-ball-of-mud" pile of services.</p><p>Either that, or Bezos's insight that internal teams should have an API-charge, and each team had a budget for requests between systems.  If you're on ImageResizer1.0, and the costs go up 10x or 1000x, you're instantly motivated to go and search for the recommended new alternative, or eat the increased API cost (which can then be directed to the "Service Assassination Team...")
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39946344"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946344" href="https://news.ycombinator.com/vote?id=39946344&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>Yep, focusing on automation and reliability for this being-deprecated thing seems useful. The goal is to increase the likelihood that it will keep running until people actually stop using it, without anybody needing to work on it. That's useful!</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39942758"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39942758" href="https://news.ycombinator.com/vote?id=39942758&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Maybe 13 years ago when I was a fresh and inexperienced dev in my first job, I was once asked to work on a C# side project at work where people could run common dev workflows (think running database migrations, deployments etc) by specifying them as XML instead of scripts.<p>I had fun, eventually they wanted things like conditional workflows which I had to think how to model in XML.</p><p>To anyone with even a bit of experience, they can tell that it wasn't long until this not-invented-here-driven-monstrosity of an idea was abandoned as it's not something you can do as a couple of hours per week side project and have it be massively useful in a short timeframe.</p><p>So it was a useless effort for the company, but as a very inexperienced dev, it was the first project where afterwards explanations of how things like lisp worked started to make sense to me intuitively considering how backwards I was in my naive attempts.</p><p>Even the project you're describing, learn to be ok with looking back on parts of your career and being thankful that only your employers money was being burned on "useless" things while you were taking forward the valuable lessons.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946577"><td></td></tr>
                <tr id="39946603"><td></td></tr>
                <tr id="39946890"><td></td></tr>
                  <tr id="39946788"><td></td></tr>
                  <tr id="39946847"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946847" href="https://news.ycombinator.com/vote?id=39946847&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Last year I spent way too much time wiring up a janky contraption using a raspberry Pico wireless board and couple of optocouplers, so I could simulate a button press on a USB switch used as a KVM between my work notebook and personal PCs.  So I could then call the pico board via http from a button push on an Elgato streamdeck.<p>While it worked, it was still a bit slower than me simply pressing a button on the little wired remote that came with the USB switch.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946937"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946937" href="https://news.ycombinator.com/vote?id=39946937&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>The most useless thing I worked on was as a working student. The whole org was developing on one specific product (around 200 people) for around 4 years.
Our company did a strategic acquisition and the acquired company made the same kind of product our org was doing. Their product was already in use, so they disassembled our org overnight and moved the affected teams to different projects.<p>The software architect of my team was heartbroken because of this. He was fully committed and it was exactly his dream to work on such a product. The last 4 years he was working his ass off and everything went to waste. I still feel bad for him.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39944231"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39944231" href="https://news.ycombinator.com/vote?id=39944231&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I was a new hire at a game development company. My first task was to optimize a function that was consuming more cycles than all the other ones. The function was responsible for dispatching Objective-C++ method calls.<p>After a quick debug session, the problem was clear: the methods to call was being searched using a linear search. I changed the search to use a hashtable and the function disappeared from the list of most CPU consuming functions.</p><p>After running both implementations for a couple of weeks to make sure my implementation was right, I made a PR, which wasn't approved. The manager said my change was too risky to go to production, even though the implementation was simple and I spent two weeks making sure it was ok. They're probably still using the linear search.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946507"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946507" href="https://news.ycombinator.com/vote?id=39946507&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>I hope you ran away from that company. Your change was too disruptive, because it made other people look stupid, like they didn't grok basic data structures. I think everyone overlooks obvious solutions to everyday problems every now and then, but the way they reacted speaks volumes...</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39946925"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946925" href="https://news.ycombinator.com/vote?id=39946925&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Oh wow, I had a virtually identical experience.<p>I was a junior programmer helping out with a Java applet game that ran in the browser.
It had performance issues, which I narrowed down to a “ticker tape” text animations. The position of the text in pixels was being updated by a background thread, and that thread would leak each time when the user switched screens. If you clicked around enough there would be hundreds of threads all updating the same shared variable.</p><p>I replaced a thousand lines of that nonsense with a single line of code:</p><pre><code>    return getTicks() * velocity % tickerWidth;
</code></pre>
It looked identical except that now there weren’t any threads used and the animation was silky smooth.<p>I got in trouble for “making a mess”. The developer responsible for the previous code had been busy (for weeks!) “fixing” this code and couldn’t merge his change. So it got reverted and they spent another month tuning the threaded code for better performance.</p><p>I waited until they got distracted and gave up, then re-merged my one-liner. They were convinced they had “fixed it” and never looked at that code again.</p><p>The responsible coder got a pat on the back for his hard work and I got a disciplinary meeting to discuss my “behaviour”.</p><p>This was at a startup that burned through ten million dollars and then was shuttered because the software was basically garbage and couldn’t be sold to anyone.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39946953"><td></td></tr>
            <tr id="39943143"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943143" href="https://news.ycombinator.com/vote?id=39943143&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I'm trying to teach myself how to sniff and interact with i2c hardware on consumer products. I'm doing this by attempting to connect my standing desk to the internet. Literally the whole goal is to have a "make desk go up" and "make desk go down" button in my Home Assistant.<p>The real goal is learning to sniff i2c though.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39943245"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39943245" href="https://news.ycombinator.com/vote?id=39943245&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>That's far from useless though. There have been times where I've wished that I had an I2C expert so I could say "this thing is acting weird. Here's a bus analyzer and there's the code. Go fix it."</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39943548"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39943548" href="https://news.ycombinator.com/vote?id=39943548&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>There's definitely a difference between the utility of the final project/product and the utility to you personally based on what you learned/had fun with/got paid for along the way.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39946341"><td></td></tr>
                  <tr id="39944183"><td></td></tr>
                  <tr id="39943238"><td></td></tr>
            <tr id="39943237"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39943237" href="https://news.ycombinator.com/vote?id=39943237&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>This is actually the most useful thing I’ve read in this whole comment section so far.<p>Thank you for reverse-engineering proprietary hardware and writing integration drivers for it. The world needs people like you.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39943291"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943291" href="https://news.ycombinator.com/vote?id=39943291&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>It doesn’t take long for the left hand to not know what the right hand is doing, or even that there is another hand out there doing hand things. It’s hard to completely not care, but detaching from it to a reasonable degree is the only way to keep going in this career for the long haul, because you will repeatedly be asked to do seemingly dumb things. It’s on someone else’s dollar, if they want dumb thing give them dumb thing, and sleep soundly at night knowing that you were paid pretty well to do it.<p>Sometimes you have a voice in the room to prevent dumb things from being done. Use it if you have it, by all means. If you don’t get heard it’s a waste of time and mental health.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943197"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943197" href="https://news.ycombinator.com/vote?id=39943197&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>&gt; So why am I being allocated to work on in such waste of time like it?<p>When this happens, look at the money. Who is paying for it, how are they paying for it, and can the money be used for other projects/programs.</p><p>I've been in similar situations where work had to be done on X even though there was little work to do or no point, but there was money. Y had more value, if we could work on it. It was funded from a different source which didn't have money (or did, but not enough to bring us over) and we couldn't use money from X to support Y.</p><p>It's a very frustrating situation, fortunately not one I'm in anymore.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39943446"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39943446" href="https://news.ycombinator.com/vote?id=39943446&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Definitely look at money, but also look at social power. Humans are primates, and primates have meticulously maintained status hierarchies. Actions driven by that may not "make sense". "Sense" came way later and it's still trying to catch up.<p>And one general rule I love here is POSIWID: <a href="https://en.wikipedia.org/wiki/The_purpose_of_a_system_is_what_it_does" rel="nofollow">https://en.wikipedia.org/wiki/The_purpose_of_a_system_is_wha...</a></p><p>If you can set aside the nominal purpose of the system for a bit, you can start to see a lot of the machinery underneath.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39942797"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39942797" href="https://news.ycombinator.com/vote?id=39942797&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I (as well as a few others on the team) spent six months working on a new web app that my company had decided would be the future of the department (my boss said those exact words to me), and that they'd sell to two different major clients (one was a major pharmacy and another was a major health insurance company. You've almost certainly heard of them).<p>We already had them as clients for other services we provided, this was just something new that the higher ups were sure they'd go for (I think it solved a real need of theirs, their call center people were doing a lot of looking things up manually across like 60 excel spreadsheets during calls, IIRC, and part of what this did was combine all that data into a central area that's easily searchable, plus some other nice-to-have call center features like being to schedule appointments or something, I think).</p><p>We got a nearly production-ready MVP in front of them and demo'd it, they seemed interested but we could never get them to sign a contract, for months. One of them eventually decided to recreate something similar in-house and actually had the gall to request that we send them all the business logic we came up with while doing it (for free), the other just never signed a contract.</p><p>Well anyway, after failing to get those two clients, the execs must have decided that it was no longer the future of the department, and was quietly shelved.</p><p>I might as well not have done anything that six months. Although I did get a bit more comfortable with using Angular at the time, thanks to that project.</p><p>That company did that multiple times, btw. Because of the nature of the health industry, and how often they drag their heels for contracts, they often decided they had to start work without a contract in place or else wouldn't have it ready by the annual health insurance open enrollment period, which is when health insurance companies were busiest and where companies that offered services to those companies (our company) made all of their money (think of it kind of like how game companies don't want to miss the holiday season for their new releases). But it resulted in them doing work and not getting paid for it. I wasn't surprised to find out the department was eventually shut down a few years after I quit.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943296"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943296" href="https://news.ycombinator.com/vote?id=39943296&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>As an analyst, I've worked on my fair share of projects that have never seen the light of day, and essentially just ended up in a black hole.<p>A scenario like that typically goes like this:</p><p>- Client orders an analysis of something. They want all corners covered, and because they'll use it as evidence/argument/pitch or whatever, you're likely working on a tight deadline.</p><p>- You (and others) work tirelessly through the nights, pour hundreds of hours into the analysis, do get it finished before deadline. Everything needs to be perfect and bullet-proof.</p><p>- Client is presented with the delivery, skims through it, and thanks you for the work.</p><p>- The client changes their mind / abandons it all-together.</p><p>Those projects rarely feel rewarding, as you're mostly just fighting the clock, and doing lots of boring routine work. And when it turns out that you and your team are the only ones that will ever read the analysis, that kind of just makes it feel useless.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946988"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946988" href="https://news.ycombinator.com/vote?id=39946988&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>As a manager, when this happens I tell my staff that the sleeping firefighter performs valuable work.<p>Sometimes management decides it’s worth it to spend staff time on something even though there’s a non-zero probability it will never be used. If there’s no fire during the firefighter’s shift, we don’t conclude her time was wasted and that we should never have had the firefighter.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943370"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39943370" href="https://news.ycombinator.com/vote?id=39943370&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I once spent months working on an expert witness report for a high profile tech industry trial--one of 10 or so written for "our" side. Never got used because of some things that happened in the course of the lawsuit.<p>It was a nice change of pace, paid well, and was able to reuse snippets of material here and there over the years, so not totally useless but never got used for its intended purpose.</p><p>Of course, I've also been on projects that were just canceled.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39944768"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39944768" href="https://news.ycombinator.com/vote?id=39944768&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>One of my major tricks is to just wait before doing things. And ask If doing this should be done instead of that.<p>this helps to eliminate greatly this scenario.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39947031"><td></td></tr>
                        <tr id="39946653"><td></td></tr>
            <tr id="39946262"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946262" href="https://news.ycombinator.com/vote?id=39946262&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>A product for the NHS that never got used.<p>The software for an exascale EU Horizon 2020 supercomputer that never got built.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946355"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946355" href="https://news.ycombinator.com/vote?id=39946355&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>That's a really difficult question, since a cancelled/abandoned project made any usefulness zero.<p>I guess if you learn something at least it wasn't entirely useless, but then how do you exact;y measure uselessness?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946195"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946195" href="https://news.ycombinator.com/vote?id=39946195&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>The silver lining is that now you don't have to maintain it. Maintenance is hell.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39946232"><td></td></tr>
                  <tr id="39946780"><td></td></tr>
            <tr id="39943428"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943428" href="https://news.ycombinator.com/vote?id=39943428&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I worked at a place for a few months where they had this very complicated K8s, Argo Workflows architecture for processing some Bioinformatics data. Felt cool when I joined, but it clearly was way over-engineered.<p>I started with a proposal on how to simplify it and went about developing a POC. However, a couple of months in, I realized that the company actually had NO customers for this. And multiple engineers had worked multiple years to get this to the stage it was. I had 0 motivation to do anything after this, and left soon afterwards. I think they are still working on it!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946520"><td></td></tr>
                  <tr id="39942618"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39942618" href="https://news.ycombinator.com/vote?id=39942618&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>It's never useless. You'll not be dumber afterwards. See as additional skill and it looks good on your resume "did that, got this"<p>It's all a matter of selling it with perspective :)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946565"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946565" href="https://news.ycombinator.com/vote?id=39946565&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>If it’s at all possible to get moved to work on sometthing that is not “useless” then I would push for that. Would your TL be open to it?<p>Not only for job satisfaction but, given the current market and the propensity for layoffs, working on something useful will give you a little more job security
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946593"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946593" href="https://news.ycombinator.com/vote?id=39946593&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>But to answer the original question: I worked on a huge, year+ refactor with zero user impact. Hated it and felt very insecure in my job during it</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39943430"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943430" href="https://news.ycombinator.com/vote?id=39943430&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I worked for a company that used to resell a single-board computer used for control applications. The vendor was getting antsy because we were always late paying our bills.<p>Our company owner didn't like their complaints, so I was told to design one that was "better than theirs." That's it. That was the <i>entire</i> spec. OK, I was also told that customer X would like a board that they can program in C (current board had a built-in BASIC interpreter).</p><p>I pointed out that I didn't think it would be helpful, since every customer was happy with what we had, and no one was coming close to its limits. It was a small company: I took most of the customer tech support calls, so I was plugged into what they were doing.</p><p>I was told to go do it anyway, "we're not going to be held hostage by those guys."</p><p>So, I did. I picked a cool new 16-bit Hitachi (now Renesas) chip that had a nice C cross-compiler available and set off on my pet project. My design had more RAM and more storage and a much faster clock. I wrote a simple text-based serial monitor for debugging and uploading code. It was really nice.</p><p>As I predicted, however, it didn't sell a single unit. No one cared about all the stuff I added since the existing board already had far more capability than anyone needed anyway and this one, along with the necessary compiler, cost more than 5x the old one.</p><p>They showed it to customer X, who said "it's cool, but why would you think we need this?"
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39944201"><td></td></tr>
                <tr id="39946334"><td></td></tr>
                        <tr id="39944208"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39944208" href="https://news.ycombinator.com/vote?id=39944208&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I along with tens of other consultants were flown from around the US to the bay area and back once a week and put up in a hotel and given a rental car - to work on a project for 3 months. It turns out, the project was canceled before my first day, the leadership just didn't tell anyone because they feared backlash from users that were promised the new features.<p>The project itself was a mess. There were GUID-named Visual Studio solutions for every combination of values of three variables; hundreds of solutions that grew every month. The output of these projects was a spreadsheet that was then <i>manually</i> compared to the previous months' output.</p><p>This was all lead and managed by one of the top consulting firms in the US.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39947046"><td></td></tr>
            <tr id="39946587"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946587" href="https://news.ycombinator.com/vote?id=39946587&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I have a hard time calling this "useless" or saying I saw "no sense in doing [it] at all".  It originally actually did seem like a great idea.  But ultimately all our work was for nothing, so I think it maybe does qualify as useless.<p>It's 2009.  After spending 5 years at my first job, I got the opportunity to work for a small (15-person), new (around 6 months old) startup.  I jumped at the chance.  While I was grateful for my first job (the mentorship and experience turned out to be incredibly valuable), I wasn't really excited about it anymore.</p><p>The new gig was going to change higher education.  No longer would students carry around several tens of pounds of textbooks.  Instead they'd carry around our tablet (we planned to sell a one-screen and two-screen, foldable version).  It was fairly large, and supported touch and pen input, so students could highlight and take notes directly in the textbooks.  The iPad didn't exist yet, and the idea of pervasive touch screens was still new but exciting.</p><p>We all worked so hard on it: 12+ hour days, 5, 6, and sometimes 7 days a week.  I would roll into the office around 10am, and on the worst days drive home at 2am, sleep for 5 or 6 hours, and start it all again.  I was tech lead for the team that built the middle layers: the UI framework, graphics, and parts of the input stack.</p><p>A year passes, and the company has grown to over 200 people.  The product is shaping up: there are bugs, of course, and a lot of missing features, but things are going well.  We'd been getting a lot of press and had done talks and demos at tech conferences.</p><p>And then we (the rank and file) learn that the company can't get digital rights for any useful amount of textbooks ("come back in three years when we renegotiate contracts", the publishers had been telling us), something it's clear to us that the founders knew for a while, but hadn't told us.  The first iPad had been released out nine months ago, and after initial skepticism, people were starting to realize how versatile and useful it could be.  To top things off, despite the iPad's smaller size and lack of pen input, it cost less than what our tablet (even our one-screen version) would need to cost to just break even.</p><p>So that was it.  The company laid off half the staff (mostly on the hardware side), pivoted to making iPad apps, and sold off the hardware IP for pennies on the dollar.  I lasted a couple more months before I quit, disappointed and disillusioned.</p><p>In total it was about 15 months of 70+ hour work weeks, completely useless.  I'm sure a lot of people have failed startup stories, but this was the only one that I (in hindsight, perhaps foolishly and naively) poured my heart and soul and time into.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943289"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943289" href="https://news.ycombinator.com/vote?id=39943289&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Did an internship once where they had me dig through a massive shared drive and map it out in an attempt to trim unused bits. Doubt it was ever used.<p>Also wrote some Visual Basic Code that I’m 100% dead certain was never used. Which was probably for the better
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946566"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946566" href="https://news.ycombinator.com/vote?id=39946566&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>TL is lining you up for PIP/termination. The other guy on the team is likely his buddy. Come review time, you will be shown as an IC that struggles to deliver, and the other guy will get all the credit.<p>Been there, seen that. Start looking for other teams internally ASAP.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946967"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946967" href="https://news.ycombinator.com/vote?id=39946967&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>I've been the other guy in this scenario before.. because it's a deprecated tool, this is a low risk way to demonstrate some reliability improvements, and a way for the TL to 'scratch the itch' of reducing risk. The other guy's improvements will be built into the new tool.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39944694"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39944694" href="https://news.ycombinator.com/vote?id=39944694&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Worked on a video licensing project for a cable company for six months, canceled after a merger. Worked on a tool for consulting companies to track their engineers expertise, canceled after I left. Worked on a voice assistant, canceled after ChatGPT came out.<p>There are a lot of dead ends in software. You get over it after awhile, just keep coding.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943280"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943280" href="https://news.ycombinator.com/vote?id=39943280&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>About 10 years ago I worked under a video game project that was ongoing for 2-3 years before I joined. It is still in progress as far as I know. So more than a decade of development if you add the time I worked there<p>It is a very successful gaming company and released a couple games that sold very well. But the game project I was working on was basically a side-gig that no one (other than the owner of the company) cares about. It was like it was his hobby project and he was paying us to develop it. I think it was a good game and could have been successful but it was horribly mismanaged
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943485"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943485" href="https://news.ycombinator.com/vote?id=39943485&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Don't stress about it. This is how this industry works. If your work isn't immediately useless, it will be soon enough when it is abandoned in favor of the next programming language or framework that is the new hotness.<p>Or, a new manager or exec somewhere up the chain decides to change a business process while you're still working on implementing support for the previous process. It happens all the time.</p><p>I would guess that 90% of the code I've ever written isn't used at all today, if it ever was. And that's being generous.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943287"><td></td></tr>
            <tr id="39943020"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943020" href="https://news.ycombinator.com/vote?id=39943020&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>In a previous career as a hardware engineer, I spent two and a half years leading three different projects that ended up being cancelled because marketing realized that they couldn't sell them. These were line cards for an early (2002) racked IP-based DSLAM.<p>Memory is hazy, and I may get some of this wrong because I left the industry a while back.</p><p>One was a multi-port T1/E1 interface card that provided -48V line power to downstream repeaters or CPE. Think PoE but over T1/E1 interfaces at telco voltages and ruggedized to sit in an outdoor metal cabinet with no fans. All components were rated -40C to +85C. I am glad it was cancelled. It was going to be a safety and regulatory certification nightmare.</p><p>Another was a multi-port DS3 interface card that did circuit emulation over Ethernet. There were no off-the-shelf ICs that could do everything they wanted. So, we ended up with 4 very expensive FPGAs on the board. This one went into second prototype stage before being cancelled. I'd guess, $200k spent just on prototype hardware.</p><p>I can't remember the third project. At that stage I was jokingly known as some sort of project killer.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39943068"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39943068" href="https://news.ycombinator.com/vote?id=39943068&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>i imagine 200k was peanuts compared to the cost of design and implementation. People are expensive!</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39944846"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39944846" href="https://news.ycombinator.com/vote?id=39944846&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>During an internship almost ten years ago, I was working on a component of the ESA Exomars 2020 mission. After leaving the company, I occasionally checked the progress of the project. First, there was a delay for the launch of two years. Later,  Russia invaded Ucraine. As ESA was cooperating with the Russian space agency, the project was stopped. It has since been rescheduled to 2028. 
It was a great learning experience, but I’m still not sure whether the stuff that I worked on at that time will ever be used.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39946396"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946396" href="https://news.ycombinator.com/vote?id=39946396&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Sometimes, I wonder how many of the LOC's that I have written are executed every day.<p>I honestly don't know.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943897"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943897" href="https://news.ycombinator.com/vote?id=39943897&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I’m a programmer. All my work is ultimately, at best, useless.<p>That’s one of the most important lessons any good programmer learns at some point. We aren’t building monuments in software, everything we do is disposable and will eventually be someone else’s curse in the future.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946750"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946750" href="https://news.ycombinator.com/vote?id=39946750&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>Our work products are disposable, but there's still a difference in what our projects do over the course of their life. They could be a net positive, neutral, or harmful to society, or they might just be dead on arrival and never see the light of day after months of work.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39943213"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943213" href="https://news.ycombinator.com/vote?id=39943213&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>How much other work does your team have to do? Is it possible that things are slow, so you've been assigned to something so your TL or manager can show what you're working on instead of saying "panqueca is just sitting around doing nothing right now?"</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39942906"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39942906" href="https://news.ycombinator.com/vote?id=39942906&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>The big question is: have you clearly pointed out to your team lead that the business value of you working on this project is actually negative given the opportunity cost? Or did you just accept being assigned the ticket without providing any push-back?</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39943409"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943409" href="https://news.ycombinator.com/vote?id=39943409&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I developed a small bankroll/gambling simulator in Golang.<p>Ended up thinking I "figured out" roulette and I'm down about 2k. This isn't a lot of money for me, but I think I'm done with gambling for a while.</p><p>Ultimately just take whatever you feel like gambling, bet it on black and leave regardless of the outcome. That'll yield you better results than any system.</p><p>I'm not open sourcing the code since I don't want someone else to lose money using it.</p><p>It was really fun to learn Golang though. I also had some fun with setting up a build pipeline for the mobile app. I guess I really spent 2k to learn Golang...
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39943423"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39943423" href="https://news.ycombinator.com/vote?id=39943423&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Unless you're calculating your actuals vs expected variance you don't know if you're right or just unlucky.<p>I've known pro poker players who were down $80k and new from their hands they were just unlucky and to keep going. Eventually made more as a player than many FAANG SWEs do.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39946926"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946926" href="https://news.ycombinator.com/vote?id=39946926&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>Put on a instant meeting product that was "top priority".  4 months of good work with an understaffed team, come to find out they had another team in another office doing same thing, who knew about us, but not us them...  We were naively doing demos while management knew this was throwaway.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39946506"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946506" href="https://news.ycombinator.com/vote?id=39946506&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>pretty sure i'm cursed, after 7 years in the business i would say only half of what i worked on lasted more than 2 years</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39946581"><td></td></tr>
            <tr id="39943358"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943358" href="https://news.ycombinator.com/vote?id=39943358&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I always have situations like these in the back of my mind when people try to justify their salaries, their self worth, by arguing they bring value to the world and those who make less don't.<p>(Not saying everyone doesn't genuinely contribute to the world, but moreso a propagation of a toxic, externally-based-worth mindset.)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39945145"><td></td></tr>
            <tr id="39946636"><td></td></tr>
            <tr id="39942888"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39942888" href="https://news.ycombinator.com/vote?id=39942888&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Trying to find the coolest print-in-place 3d printed toys.<p>Last year I gave customized fidget cubes for christmas, they were so popular I ended up getting requests for them.</p><p>Looking for something similar, the tri-color filaments make me want to re-do everything to see how it appears differently.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946954"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946954" href="https://news.ycombinator.com/vote?id=39946954&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>In 2013 I helped make an AI powered dashboard creator tool called Watson Analytics.<p>In 2023 I helped make an AI powered internal tool for Meta. 
...</p><p>The IBM one works better still.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943413"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943413" href="https://news.ycombinator.com/vote?id=39943413&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>The 3rd rewrite of the same application because someone above me in the chain decided we needed to have AppX but on PlatformY , with just slightly changed requirements such that we cannot simply copy and paste it over.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39943174"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943174" href="https://news.ycombinator.com/vote?id=39943174&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>At prevJob when we were in early stage I remember building a ton of features from the ground up which were useful to our end users.<p>Post IPO all the late stage jokers from companies like MSFT and AMZN started coming in and I remember the torturous bike shedding and endless documentation for doing simple stupid shit like adding a single attribute to a data model or changing border radius on a button for the design system.</p><p>Added literally no value for the users.</p><p>Actual user issues were deemed “not important” because they were a bit complex or some PM with the right credentials but none of the empathy would think it’s low priority.</p><p>Not to mention the endless self patting on the back and “psychological safety” type people who showed up that spent more time doing everything but the work.</p><p>Meanwhile our poor users would suffer in their already difficult  jobs and get an unwanted UX redesign instead.</p><p>Honestly made me lose respect for FANG crowd. I’ll rather work at startups or my own company than work at some late stage place. What a nightmare.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39942950"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39942950" href="https://news.ycombinator.com/vote?id=39942950&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I have spent sixteen years working on a note keeping app that only I use.<p>I even took the registration page down after GDPR out of an abundance of caution.</p><p>I use it every day and really like it, but every time I have shown it to a friend they just shrug
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39943017"><td></td></tr>
                <tr id="39943189"><td></td></tr>
                        <tr id="39942879"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39942879" href="https://news.ycombinator.com/vote?id=39942879&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>This is hilariously written, thank you.<p>I’m still under the mistaken impression that I’m useful so I can’t provide any examples.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39946247"><td></td></tr>
            <tr id="39946175"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39946175" href="https://news.ycombinator.com/vote?id=39946175&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>Every time I'm asked to do "sales engineering" (a term I hate). What I mean is the sales people are going to demo the product to a prospect and they know there is a feature gap that this particular prospect will depend on. So exec asks us to design a build a bullshit feature that will never actually be launched, as quickly as possible. Nine times out of ten the prospect never eventuates and the effort is wasted.<p>I understand the need to put your best foot forward for a sales opportunity, but there's nothing I hate more than being asked to build something in the lowest-quality way possible in order to throw it away later. I hate hate hate it.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39946696"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39946696" href="https://news.ycombinator.com/vote?id=39946696&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>It could have been worse. You could have been told to then merge it and support it. "It already works, almost, so why do you need extra time on it? Now for the next feature,..."</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39943656"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943656" href="https://news.ycombinator.com/vote?id=39943656&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>A few years back, I worked at a startup that got a contract with a major software company.<p>Our job was to implement a crypto storage system for an OSS database where each user only had access to data based on their own authentication keys. Only minimal changes to the DB allowed, so we made our own PAM module to handle the authentication and key management.</p><p>We implemented a POSIX layer that intercepted file ops and backing-stored and encrypted the blocks into S3 containers. Files/blocks that got purged would automatically pull from S3.</p><p>One month into the project the major software company decided they didn’t want it. But we still had the contract and had to fulfill it for six more months.</p><p>So yeah, six months of code in the trash.  But I learned a lot of S3, AWS and wrote a toy compiler with the spare time. Since nobody cared I was able to try a lot of new solutions, test out different languages and tools. Basically experimented with everything out there.</p><p>Delivered my code on the day of the deadline.  Tested, worked, archived.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39942960"><td></td></tr>
            <tr id="39942959"><td></td></tr>
                <tr id="39943803"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39943803" href="https://news.ycombinator.com/vote?id=39943803&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>The Parkinson's Law aphorism departs a bit from his original point though both are totally valid. It's pretty amazing how applicable so many of his essays still are. They mostly don't seem dated at all. See bikeshedding.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39943538"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943538" href="https://news.ycombinator.com/vote?id=39943538&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>I've been in the exact same scenario twice and what I've learned is that internal tools (especially in big companies) only get "deprecated" but it's hard to abandon them completely.<p>I've found the decision to "deprecate" tools, especially long established ones, comes along with political shenanigans and especially so when the tool is used by multiple teams with competing interests. One team usually can yell louder than all the other teams and force the new tool to be very specific to their workflow, but because other teams have different workflows the new tool won't work for them. So you're in this limbo of supporting both forever until everyone can agree to switch to the new tool or someone important enough decides to completely turn off the deprecated tool.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943242"><td></td></tr>
            <tr id="39943901"><td></td></tr>
            <tr id="39943689"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943689" href="https://news.ycombinator.com/vote?id=39943689&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>A document management system running on CDC mainframes. In 1991. It had a fixed schema. The officially approved extension language was Fortran. It did not have record locking.<p>I was doing some user interface app. Absolutely hopeless. Burning money after blowing your nose in it.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943439"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943439" href="https://news.ycombinator.com/vote?id=39943439&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>At one point I was working for a large international ag company helping them expand their mobile offering in other countries. We had working native apps in the US that were well tested and well received by customers. So the obvious choice was to take the steps needed to internationalize that code so it could be deployed in more regions. Instead we had to run with the fully custom implementation that the other country's team had already started building. And by started building I mean they had a few Ionic pages created that didn't even have full functionality. Everyone agreed that scrapping that project and just leveraging the existing code base was the right way to go. Yet that's not what we did. We continued to build on the much worse app for months knowing it was just going to be replaced anyway. One of the most depressing roles I've been in.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39943339"><td></td></tr>
            <tr id="39943316"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943316" href="https://news.ycombinator.com/vote?id=39943316&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>The work required to improve it now is much, much less than the work required to improve it later. Let's say it is 50x easier now.<p>We know that old tools get reused sometimes. Let's say it is 1/3 of the time.</p><p>It's a very good expenditure of resources to update this tool now, especially since no pipelines will blow up in real time if errors are made.</p><p>It is also possible your boss is testing you. Deciding this is a easte of your time is a good way to get fired.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39943244"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943244" href="https://news.ycombinator.com/vote?id=39943244&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><br><div>
                  <p><span>Anything you can learn from it? Anything you'd like to try, now that there's no consequences? Can you spin it for LinkedIn karma?</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39943025"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39943025" href="https://news.ycombinator.com/vote?id=39943025&amp;how=up&amp;goto=item%3Fid%3D39942397"></a></center>    </td><td><p><span>&gt; Adjustments to make the pipeline automation even more resilient in complete unlikely scenarios.<p>Hmmm. I don't know the details here but I have seen some junior devs say "that's never going to happen" as a way of justifying fragile code. And sure, maybe <i>that</i> thing is never going to happen. But if you carry on like that you'll end up with 1000 things that are "never going to happen", and then you'll realise that this guy was actually right.</p><p>&gt; So why am I being allocated to work on in such waste of time like it?</p><p>Maybe ask your boss instead of us...
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[So you wanna de-bog yourself (319 pts)]]></title>
            <link>https://www.experimental-history.com/p/so-you-wanna-de-bog-yourself</link>
            <guid>39942288</guid>
            <pubDate>Fri, 05 Apr 2024 13:43:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.experimental-history.com/p/so-you-wanna-de-bog-yourself">https://www.experimental-history.com/p/so-you-wanna-de-bog-yourself</a>, See on <a href="https://news.ycombinator.com/item?id=39942288">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg" width="594" height="421.8379120879121" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1034,&quot;width&quot;:1456,&quot;resizeWidth&quot;:594,&quot;bytes&quot;:359033,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e291074-3499-4db2-9bf9-95886db0a438_1725x1225.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption>Photo cred: my dad</figcaption></figure></div><p>Strangers sometimes ask me for advice, which is both flattering and alarming, because I only know about the things I write here, and sometimes not even those. </p><p>For instance, someone recently asked me if I had any advice about how to teach people to fly planes, which makes me wonder: who’s running the pilot education system?? Now, whenever I get on a plane, I scrutinize the captain to see if they have that “A blogger taught me how to fly” kind of look.</p><p><span>I often don't know how to respond to such questions, on account of my general incompetence. But I've realized that most of these folks have something in common: they're </span><em>stuck</em><span>. They’re looking for advice less in the sense of “any good restaurants around here?” and more in the sense of “everything kinda sucks right now and I’d like to change that but I don’t know how?”</span></p><p><span>Being stuck is the psychological equivalent of standing knee-deep in a fetid bog, bog in every direction, bog as far as the eye can see. You go wading in search of dry land and only find more bog. Nothing works, no options seem good, it’s all bleh and meh and ho hum and no thanks and </span><em>more bog</em><span>. This is the kind of dire situation that drives people to do crazy things like ask a blogger for advice.</span></p><p>Fortunately, I’ve spent much of my life in that very bog. Some say I was born in it, a beautiful bouncing baby bog boy. And I've learned that no matter how you ended up there—your marriage has stalled, you're falling behind in your classes, your trainee pilots keep flying into the side of a mountain—the forces that keep you in the bog are always the same. There are, in fact, only three, although they each come in a variety of foul flavors.</p><p><span>It's a new year, the annual Great De-bogging, when we all attempt to heave ourselves out of the muck and into a better life. So here, to aid you, is my compendium of bog phenomena, the myriad ways I get myself stuck, because unsticking myself always seems to be a matter of finding a name for the thing happening to me.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-140270094" href="https://www.experimental-history.com/p/so-you-wanna-de-bog-yourself#footnote-1-140270094" target="_self" rel="">1</a></span><span> May this catalog serve you well, and may your planes always be flown by people who never learned anything from me. </span></p><p>Most of my attempts to get unstuck look, from the outside, like I'm doing nothing at all. I'm standing motionless in the bog, crying, “THIS IS ME TRYING!” That means I've got insufficient activation energy—I can't muster the brief but extraordinary output of effort it takes to escape the bog, so I stay right where I am.</p><p>There are few different ways to end up here. </p><p>People will sometimes approach me with projects I don't really want to do. But if I do them, those people will smile and shake my hand and go, “We feel positive emotions, and it's because of you!” and that will feel good. So I often end up signing on to these projects, feeling resentful the whole time, cursing myself for choosing—freely!—to work hard on things I don't care about.</p><p><span>This is </span><em>gutterballing</em><span>: excelling, but in slightly the wrong direction. For most of its journey, after all, the gutterball is getting closer to the pins. It's only at the end that it barely, but dramatically, misses.</span></p><p>Gutterballing is a guaranteed way to stay stuck in the bog because people will love you for it. “You're doing the right thing!” they'll shout as you sink into the swamp. “We approve of this!”</p><p><span>Sometimes when I'm stuck, someone will be like, “Why don't you do [reasonable option]?” and I'll go, “Hold on there, buddy! Don't you see this option has </span><em>downsides</em><span>? Find me one with only upsides, and then we'll talk!”</span></p><p><span>I'm </span><em>waiting for jackpot</em><span>, refusing to do anything until an option arises that dominates all other options on all dimensions. Strangely, this never seems to happen. </span></p><p>Often, I'm waiting for the biggest jackpot of all: the spontaneous remission of all my problems without any effort required on my part. Someone suggests a way out of my predicament and I go, “Hmm, I dunno, do you have any solutions that involve me doing everything 100% exactly like I'm doing it right now, and getting better outcomes?”</p><p><span>Okay, this is a version of </span><em>waiting for jackpot</em><span>, but it's so common that it deserves its own entry. </span></p><p>Sometimes I'll know exactly what I need to do in order to leave the bog, but I'm too afraid to do it. I'm afraid to tell the truth, or make someone mad, or take a risk. And so I dither, hoping that the future will not require me to be brave. </p><p><span>Everybody thinks this is a bad strategy because it merely prolongs my suffering, but that's not why it's a dumb thing to do. Yes, every moment I dither is a moment I suffer. But when I finally do the brave thing, that's not the climax of my suffering—that moment is the </span><em>opposite </em><span>of suffering. Being brave feels good. I mean, have you ever stood up to a bully, or conquered stage fright, or finally stopped being embarrassed about what you love? It's the most wonderful feeling in the world. Whenever you chicken out, you don't just feel the pain of cowardice; you miss out on the pleasure of courage.</span></p><p><span>Medieval knights used to wander around hoping for honorable adventures to pop up so that they could demonstrate their bravery. They were </span><em>desperate</em><span> for big, scary dragons to appear. When I put off doing the brave thing, I am </span><em>declining the dragon</em><span>: missing an opportunity to do something that might be scary in the moment but would ultimately make me feel great.</span></p><p><span>About half of my friends </span><em>kind of </em><span>hate their jobs, so they're moderately unhappy most of the time, but never unhappy enough to leave. This is the </span><em>mediocrity trap</em><span>: situations that are bad-but-not-too-bad keep you forever in their orbit because they never inspire the frustration it takes to achieve escape velocity.</span></p><p>The mediocrity trap is a nasty way to end up in the bog. Terrible situations, once exited, often become funny stories or proud memories. Mediocre situations, long languished in, simply become Lost Years—boring to both live through and talk about, like you're sitting in a waiting room with no cell reception, no wifi, and no good magazines, waiting for someone to come in and tell you it's time to start living.</p><p><span>(I have previously written about this phenomenon as an </span><a href="https://www.experimental-history.com/p/underrated-ideas-in-psychology" rel="">underrated idea in psychology</a><span>.)</span></p><p>I spend a lot of time thinking about my problems, but it usually looks like this:</p><p><span>“Oh boy, what a problem! A real whopper, I'd say. Massive, even. Get a load of this problem, would ya! Wowzers!” I can spend </span><em>days </em><span>doing this. “How big would you say that problem is? Large? Huge? And that's just its size! Don't get me started on its depth.”</span></p><p><span>This isn't solving the problem; this is </span><em>stroking </em><span>the problem. It looks like a good use of time, but it's just a form of </span><a href="https://www.experimental-history.com/p/socially-acceptable-anxiety-is-still" rel="">socially acceptable anxiety</a><span>, a way to continue your suffering indefinitely by becoming obsessed with it.</span></p><p>Even if you've worked up a big enough head of steam to launch yourself out of the bog, you still have to aim properly. (“I’m doing it! I'm doing it!” I shout as I crash land onto my launch pad.)</p><p>Here are a few of my recurring bad escape plans:</p><p><span>I played a lot of </span><em>Call of Duty </em><span>in high school, and I used to roll with a gang of bad boys who would battle other gangs online.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-140270094" href="https://www.experimental-history.com/p/so-you-wanna-de-bog-yourself#footnote-2-140270094" target="_self" rel="">2</a></span></p><p>We weren't very good. Whenever we lost the first round, which was almost always, we would regroup in the pregame lobby—basically the online locker room—and decide what we really need to do in the next round is “try harder.” As if the reason we had all just been shot in the head 25 times in a row was that we were not sufficiently dedicated to avoiding getting shot in the head. Armed with the most dimwit plan of all time, we would march into battle once more and lose just as badly. As our virtual corpses piled up, we'd yell at each other, “Guys, stop dying!”</p><p><span>This is the </span><em>try harder fallacy</em><span>. I behold my situation and conclude that, somehow, I will improve it in the future by just sort of wishing it to be different, and then I get indignant that nothing happens. Like, “Um, excuse me! I've been doing all of this very diligent </span><em>desiring </em><span>for things to be different, and yet they remain the same, could someone please look into this?”</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-3-140270094" href="https://www.experimental-history.com/p/so-you-wanna-de-bog-yourself#footnote-3-140270094" target="_self" rel="">3</a></span></p><p><span>The </span><em>try harder fallacy </em><span>has a cousin called the</span><em> infinite effort illusion</em><span>, which is the idea that you have this secret unused stock of effort that you can deploy in the future to get yourself unstuck. I'm always a week late responding to emails? No problem, I'll simply uncork my Strategic Effort Reserve and clear my correspondence debt.</span></p><p>This never works because there is no Strategic Effort Reserve. All of my effort is currently accounted for somewhere. If I want to spend more of it on something, I have to spend less of it on something else. If I’m consistently not getting something done, it’s probably because I don’t want to—at least, not enough to cannibalize that time from something else—and I haven’t admitted that to myself yet. </p><p>I spend a lot of stints in the bog wailing about how I don’t have enough time. “Oh, if there were only 25 hours in the day,” I lament, “the things I would accomplish!”</p><p>But here’s a stupid question: what am I mad about, exactly? That I don't have a time-turner? That I can’t find a little eddy in the spacetime continuum where I can hide out while I cross a few more things off my to-do list? Do I really believe that the way to get unstuck is to ruminate on how unfair it is that time marches ever forward at one second per second?</p><p><span>This is </span><em>blaming God</em><span>: pinning the responsibility for my current predicament on something utterly unchangeable. And while many religions teach that God intervenes in human affairs, none of them, as far as I know, believe that he responds to whining. (Would </span><em>you </em><span>worship a god who does miracles if you just annoy him enough?)</span></p><p><span>Some problems are like getting a diploma: you work at it for a while, and then you're done forever. Learning how to ride a bike is a classic </span><em>diploma problem</em><span>. </span></p><p><span>But most problems aren’t like that. They’re more like </span><em>toothbrushing problems</em><span>: you have to work at them forever until you die. You can’t, as far as I know, just brush your teeth really really well and then let ‘em ride forever.</span></p><p><span>When I had a </span><a href="https://www.experimental-history.com/p/its-very-weird-to-have-a-skull-full" rel="">skull full of poison</a><span>, I assumed feeling good again was a diploma problem. I just had to find the right lever to pull and—yoink!—back to the good times forever. People warned me it wasn't going to be like this and I didn't believe them; I assumed they had simply failed to earn their diplomas.</span></p><p>I only started making progress when I realized I was facing a toothbrushing problem: feeling normal again would probably require me to do stuff every day for the rest of my life. I might get better at doing that stuff, just like when you first start brushing your teeth as a kid you get toothpaste everywhere and end up swallowing half of it, and eventually you learn not to do that. But even when you're a toothbrushing expert, it still takes you a couple minutes every day. You could be mad about that, but it won’t make your teeth any cleaner. </p><p>Here’s one of my favorite bad escape plans: I’ll just be a different person in the future. Like, “I know I hate working out, but in the future I will overcome this by not being such a baby about it.” Or, “I find quantum physics boring, so I’ll just learn about it later, when I find it more interesting.”</p><p><span>These are </span><em>fantastical metamorphoses</em><span>. I have not, so far, woken up one day and found myself different in all the ways that would make my life easier. I do hope this happens, but I’ve stopped betting on it. </span></p><p>People are always causing me problems by doing foolish things like trying to drive on highways while I'm also trying to drive on them, or expecting me to pay rent every month, or not realizing my genius and putting me in charge of things. In these cases, it feels like the only solution is to get other people to act differently. I'm only stuck because other people are unreasonable!</p><p><span>A good word for this is </span><em>puppeteering</em><span>: trying to solve your problems by controlling the actions of other humans. Puppeteering often looks attractive because other people's actions seem silly and therefore easily changeable. Funnily enough, it doesn't feel that way to them. They have lifetimes of backstory that lead them to act the way that they do, and their actions are, on average, only as changeable as yours. So unless you think of yourself as being easily redirected with a few tugs of your strings, puppeteering is probably not going to get you out of the bog.</span></p><p><span>A confession: most of my bogs are imaginary. The world doesn’t stick me there; </span><em>I </em><span>stick me there. These are, paradoxically, the most difficult bogs to escape, because it requires realizing that my perception of reality is not reality, and a lot of the mind is dedicated to preventing that exact thought.</span></p><p>Every kid learns to play the “floor is lava” game, where you pretend that you'll get incinerated if you touch the carpet. Even toddlers can pick it up, which reveals something profound: very early on, we acquire the ability to pretend that fake problems are real. We then spend the rest of our lives doing exactly that.</p><p><span>Often, when I’m stuck, it’s because I've made up a game for myself and decided that I’m losing at it. I haven’t achieved enough. I am not working hard enough and I am also, somehow, not having enough fun. These games have elaborate rules, like “I have to be as successful as my most successful friend, but everything I've done so far doesn't count,” and I’m supposed to feel very bad if I break them. It’s like playing the absolute dumbest version of </span><em>the floor is lava</em><span>.</span></p><p><span>Did I create these games by thinking really hard about how to live a good life? No! I pulled them out of my butt. Or someone else pulled them out of </span><em>their </em><span>butt, and I said, “Ooh, can I have some of that?”</span></p><p>During the Trump administration, I took on a part time job: keeping up with all the outrages. Every twenty minutes or so I would have to check my phone in case any new outrages had occurred, so that I could...collect them? Make them into a scrapbook? I'm not sure. </p><p><span>I now think of this as </span><em>super surveillance</em><span>, tracking every problem in the world as if they were all somehow, ultimately, my problems. Super surveillance is an express ticket to the bog, because the world is full of problems and you'd be lucky to solve even a single one.</span></p><p><span>I know some people think that super surveillance is virtuous, but they mainly seem to spend their time looking at screens and feeling bad, and this doesn't seem to solve any of the problems that they're monitoring. To them, I suppose, the most saintly life possible is one spent sitting in front of a hundred screens, eyelids held open with surgical instruments, </span><em>A Clockwork Orange</em><span>-style, bearing witness to all human suffering simultaneously. I, uh, feel differently.</span></p><p><span>(See also: </span><a href="https://www.experimental-history.com/p/reading-the-news-is-the-new-smoking" rel="">Reading the news is the new smoking</a><span>.)</span></p><p>Sometimes I get this feeling like, “Nothing will ever work out for me, I will always be unhappy, the rest of my life will be a sort of wandering twilight punctuated with periods of misery.”</p><p>And my wife will go, “You're hungry.”</p><p>And I'll go, “No, no, this is true unhappiness, it comes to me unadulterated from hell itself, it lives inside my bones, I am persecuted by God, you could not possibly know what it's like to be me.”</p><p>And then I'll eat a burrito and be like, “Never mind I'm fine!”</p><p><span>This is </span><em>hedgehogging</em><span>: refusing to be influenced by others, even when you should. </span></p><p>You know how, when you go up in a tall building and look down at the street, everybody looks not just small, but kind of silly? Like, “Aww, look at those tiny little guys, walking around in their suits like they're people! They don't even know they're so small!”</p><p><span>This is how other people's problems</span><em> </em><span>look to me. A friend will tell me, “I'm stressed!” and I'll go, “Aww, what a silly little problem, walking around like it's real! Just don't be stressed, and then you won't be stressed!”</span></p><p><em>My </em><span>problems, on the other hand, are like 50-foot-tall moody teenagers. They're so big and so real and so complicated! They cannot possibly be solved! I can only flee from them, hide among the rubble, and peek out at them with horror!</span></p><p><span>Such is the result of the </span><em>personal problems growth ray</em><span>, which makes all of your own problems seem larger than life, while other people's stay actual size. This makes reasonable solutions look unreasonable—the actions that solved </span><em>your</em><span> human-sized problems could never solve </span><em>my</em><span> giganto-problems; they can only be addressed with either a lifetime of cowering or a tactical nuke.</span></p><p>In graduate school, I made the terrible mistake of signing up for a professional development seminar. We would convene every week for 90 minutes of discussions like “OH NO WE'LL NEVER GET PROFESSOR JOBS WE'RE ALL SCREWED” and “THE WORLD IS TOO MUCH AND I AM TOO SMALL” and “HELP HELP HELP”.</p><p>One week, we spent half the session arguing about whether you should print your name in bold when listing your publications on your CV. Like:</p><blockquote><p><span>Tweedledum, M.R. &amp; Mastroianni, A.M.,&nbsp; (2024). Please give me a job I will do anything, including publishing this terrible paper. </span><em>The Journal of Desperation, 4</em><span>(12), 122-137.</span></p></blockquote><p>vs.</p><blockquote><p><span>Tweedledum, M.R. &amp; </span><strong>Mastroianni, A.M.</strong><span>, (2024). Please give me a job I will do anything, including publishing this terrible paper. </span><em>The Journal of Desperation, 4</em><span>(12), 122-137.</span></p></blockquote><p><span>Some people thought bolding your name helps time-pressed hiring committees quickly assess your academic output. Other people objected that bolding your name looks presumptuous. A debate ensued. I forget who won—oh yes, it was </span><em>none of us </em><span>because this is a stupid thing to care about. </span></p><p><span>This is </span><em>obsessing over tiny predictors</em><span>. It's scary to admit that you can't control the future; it's a lot easier to distract yourself by trying to optimize every decision, no matter how insignificant. </span></p><p>(If you're at the point where you're spending 45 minutes debating the use of bold letters on your CV, perhaps you should consider pulling up a list of every god and praying to all of them in turn, in case one of them is real and decides to help you.)</p><p><span>Parents who want to get their kids into elite colleges have perfected the art of obsessing over tiny predictors. When I gave campus tours, I would run into them all the time: “Should my kid play the timpani or the oboe?” “How many semicolons can you use in the personal essay?” “Can we include dental records to demonstrate a history of good brushing?” The joke was on them, of course: stressing about all those tiny things only makes you anxious, and even if your kid gets into a fancy school, they could still end up as a </span><em>blogger</em><span>.</span></p><p><span>Sometimes people will be like, “Well, whatcha gonna do, life is suffering,” and I’ll be like, “Haha sure is,” waiting for them to laugh too, but they won’t laugh, and I’ll realize, to my horror, that </span><em>they’re not joking</em><span>. Some people think the bog is </span><em>life</em><span>!</span></p><p><span>I get why you might think this if you’ve experienced lots of misfortune. If you, say, </span><a href="https://en.wikipedia.org/wiki/Tsutomu_Yamaguchi" rel="">survived</a><span> the atomic bombing of Hiroshima and then took the train to Nagasaki just in time for the atomic bombing of that city, too, you'd probably have a gloomy outlook on life.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-4-140270094" href="https://www.experimental-history.com/p/so-you-wanna-de-bog-yourself#footnote-4-140270094" target="_self" rel="">4</a></span></p><p><span>But most of the people I know who feel this way haven’t survived any atomic bombings at all. They’re usually people with lots of education and high-paying jobs and supportive relationships and a normal amount of tragedies, people who have all the raw materials for a good life but can’t seem to make one for themselves. Their problem is they believe that </span><em>satisfaction is impossible</em><span>. Like they’re standing in a kitchen full of eggs, flour, oil, sugar, butter, baking powder, a mixer, and an oven, and they throw their hands up and say, “I can’t make a cake! Cakes don’t even exist!”</span></p><p>In the big scheme of things, I haven't been alive for all that long. So there are probably lots of ways into the bog I haven't discovered yet. But I've been down there enough times to see the same patterns repeat, and sometimes I can even interrupt them. </p><p>That's why having goofy names for them matters so much, because it reminds me not to believe the biggest bog lie of all: that I'm stuck in a situation unlike any I, or anyone else, has ever seen before. If you believe that, it's no wonder you'd suffer from insufficient activation energy, or bad escape plans, or self-bogging: you have no idea what to do, because you don't think anything you've learned, or anything anyone else has learned, can help you at all. Whenever I feel that way, whenever I think I'm in a bespoke bog, created just for me by a universe that hates me, if I can think to myself, “Oh, I'm gutterballing right now,” I can feel my foot hit solid ground, and I can start hoisting myself onto dry land.</p><p><span>So, best of luck in 2024, and all the years to come after that. May you only spend as much time in the bog as is necessary to learn the lessons it has to teach you. And for goodness sake, if you see the side of a mountain coming toward you, </span><em>pull up</em><span>.</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Top Israeli spy chief exposes his true identity in online security lapse (265 pts)]]></title>
            <link>https://www.theguardian.com/world/2024/apr/05/top-israeli-spy-chief-exposes-his-true-identity-in-online-security-lapse</link>
            <guid>39942122</guid>
            <pubDate>Fri, 05 Apr 2024 13:28:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/world/2024/apr/05/top-israeli-spy-chief-exposes-his-true-identity-in-online-security-lapse">https://www.theguardian.com/world/2024/apr/05/top-israeli-spy-chief-exposes-his-true-identity-in-online-security-lapse</a>, See on <a href="https://news.ycombinator.com/item?id=39942122">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p>The identity of the commander of Israel’s Unit 8200 is a closely guarded secret. He occupies one of the most sensitive roles in the military, leading one of the world’s most powerful surveillance agencies, comparable<strong> </strong>to the US National Security Agency.</p><p>Yet after spending more than two decades operating in the shadows, the Guardian can reveal how the controversial spy chief – whose name is Yossi Sariel – has left his identity exposed online.</p><p>The embarrassing security lapse is linked to a book he published on Amazon, which left a digital trail to a private Google account created in his name, along with his unique ID and links to the account’s maps and calendar profiles.</p><p>The Guardian has confirmed with multiple sources that Sariel is the secret author of The Human Machine Team, a book in which he offers a radical vision for how artificial intelligence can transform the relationship between military personnel and machines.</p><p>Published in 2021 using a pen name composed of his initials, Brigadier General YS, it provides a blueprint for the advanced AI-powered systems that the Israel Defense Forces (IDF) have been pioneering during the six-month war in <a href="https://www.theguardian.com/world/gaza" data-link-name="in body link" data-component="auto-linked-tag">Gaza</a>.</p><p>An electronic version of the book included an anonymous email address that can easily be traced to Sariel’s name and Google account. Contacted by the Guardian, an IDF spokesperson said the email address was not Sariel’s personal one, but “dedicated specifically for issues to do with the book itself”.</p><gu-island name="InteractiveBlockComponent" priority="critical" deferuntil="idle" props="{&quot;url&quot;:&quot;https://interactive.guim.co.uk/embed/from-tool/generic/index.html?vertical=News&amp;opinion-tint=false&amp;title=Get%20in%20touch&amp;description=Do%20you%20have%20information%20about%20this%20story%3F%20Email%20%3Ca%20style%3D%22color%3A%23ab0613%22%20href%3D%22mailto%3Aharry.davies%40theguardian.com%22%3Eharry.davies%40theguardian.com%3C%2Fa%3E%2C%20or%20(using%20a%20non-work%20phone)%20use%20%3Ca%20style%3D%22color%3A%23ab0613%22%20href%3D%22https%3A%2F%2Fsignal.me%2F%23p%2F%2B447721857348%22%3ESignal%3C%2Fa%3E%20or%20%3Ca%20style%3D%22color%3A%23ab0613%22%20href%3D%22https%3A%2F%2Fapi.whatsapp.com%2Fsend%3Fphone%3D447721857348%22%3EWhatsApp%3C%2Fa%3E%20to%20message%20%2B44%207721%20857348.%20For%20the%20most%20secure%20communications%2C%20use%20%3Ca%20style%3D%22color%3A%23ab0613%22%20href%3D%22https%3A%2F%2Fwww.theguardian.com%2Fsecuredrop%22%3ESecureDrop%3C%2Fa%3E%20or%20see%20%3Ca%20style%3D%22color%3A%23ab0613%22%20href%3D%22https%3A%2F%2Fwww.theguardian.com%2Fhelp%2Fng-interactive%2F2017%2Fmar%2F17%2Fcontact-the-guardian-securely%22%3Eour%20guide%3C%2Fa%3E.&amp;link=false&quot;,&quot;scriptUrl&quot;:&quot;https://interactive.guim.co.uk/embed/iframe-wrapper/0.1/boot.js&quot;,&quot;alt&quot;:&quot;Do you have information about this story? Email harry.davies@theguardian.com, or (using a non-work phone) use Signal or WhatsApp to message +44 7721 857348.&quot;,&quot;format&quot;:{&quot;display&quot;:0,&quot;theme&quot;:0,&quot;design&quot;:0},&quot;elementId&quot;:&quot;af82107b-9f03-4ad8-9e96-5fdc485038ae&quot;,&quot;isMainMedia&quot;:false}" config="{&quot;renderingTarget&quot;:&quot;Web&quot;,&quot;darkModeAvailable&quot;:false}"><figure id="af82107b-9f03-4ad8-9e96-5fdc485038ae" data-alt="Do you have information about this story? Email harry.davies@theguardian.com, or (using a non-work phone) use Signal or WhatsApp to message +44 7721 857348." data-testid="interactive-element-Do%20you%20have%20information%20about%20this%20story?%20Email%20harry.davies@theguardian.com,%20or%20(using%20a%20non-work%20phone)%20use%20Signal%20or%20WhatsApp%20to%20message%20+44%207721%20857348." data-spacefinder-role="inline"><a data-name="placeholder" href="https://interactive.guim.co.uk/embed/from-tool/generic/index.html?vertical=News&amp;opinion-tint=false&amp;title=Get%20in%20touch&amp;description=Do%20you%20have%20information%20about%20this%20story%3F%20Email%20%3Ca%20style%3D%22color%3A%23ab0613%22%20href%3D%22mailto%3Aharry.davies%40theguardian.com%22%3Eharry.davies%40theguardian.com%3C%2Fa%3E%2C%20or%20(using%20a%20non-work%20phone)%20use%20%3Ca%20style%3D%22color%3A%23ab0613%22%20href%3D%22https%3A%2F%2Fsignal.me%2F%23p%2F%2B447721857348%22%3ESignal%3C%2Fa%3E%20or%20%3Ca%20style%3D%22color%3A%23ab0613%22%20href%3D%22https%3A%2F%2Fapi.whatsapp.com%2Fsend%3Fphone%3D447721857348%22%3EWhatsApp%3C%2Fa%3E%20to%20message%20%2B44%207721%20857348.%20For%20the%20most%20secure%20communications%2C%20use%20%3Ca%20style%3D%22color%3A%23ab0613%22%20href%3D%22https%3A%2F%2Fwww.theguardian.com%2Fsecuredrop%22%3ESecureDrop%3C%2Fa%3E%20or%20see%20%3Ca%20style%3D%22color%3A%23ab0613%22%20href%3D%22https%3A%2F%2Fwww.theguardian.com%2Fhelp%2Fng-interactive%2F2017%2Fmar%2F17%2Fcontact-the-guardian-securely%22%3Eour%20guide%3C%2Fa%3E.&amp;link=false">Do you have information about this story? Email harry.davies@theguardian.com, or (using a non-work phone) use Signal or WhatsApp to message +44 7721 857348.</a></figure></gu-island><p>The security blunder is likely to place further pressure on Sariel, who is said to “live and breathe” intelligence but whose tenure running the IDF’s elite cyber intelligence division has become mired in controversy.</p><p>Unit 8200, once revered within Israel and beyond for intelligence capabilities that rivalled those of the UK’s GCHQ, is thought to have built a vast surveillance apparatus to closely monitor the <a href="https://www.theguardian.com/world/palestinian-territories" data-link-name="in body link" data-component="auto-linked-tag">Palestinian territories</a>.</p><p>However, it has been criticised over its failure to foresee and prevent Hamas’s deadly 7 October assault last year on southern Israel, in which Palestinian militants killed nearly 1,200 Israelis and kidnapped about 240 people.</p><p>Since the Hamas-led attacks, there have been accusations that Unit 8200’s “technological hubris” came at the expense of more conventional intelligence-gathering techniques.</p><p>In its war in Gaza, the IDF appears to have fully embraced Sariel’s vision of the future, in which military technology represents a new frontier where AI is being used to fulfil increasingly complex tasks on the battlefield.</p><figure id="d40a9427-66eb-4f33-8ae5-ac2a73e09213" data-spacefinder-role="showcase" data-spacefinder-type="model.dotcomrendering.pageElements.ImageBlockElement"><div id="img-2"><picture><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=880&amp;dpr=2&amp;s=none" media="(min-width: 1300px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 1300px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=880&amp;dpr=1&amp;s=none" media="(min-width: 1300px)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=800&amp;dpr=2&amp;s=none" media="(min-width: 1140px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 1140px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=800&amp;dpr=1&amp;s=none" media="(min-width: 1140px)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=640&amp;dpr=2&amp;s=none" media="(min-width: 980px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 980px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=640&amp;dpr=1&amp;s=none" media="(min-width: 980px)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=620&amp;dpr=2&amp;s=none" media="(min-width: 660px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 660px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=620&amp;dpr=1&amp;s=none" media="(min-width: 660px)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=605&amp;dpr=2&amp;s=none" media="(min-width: 480px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 480px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=605&amp;dpr=1&amp;s=none" media="(min-width: 480px)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=445&amp;dpr=2&amp;s=none" media="(min-width: 320px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 320px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=445&amp;dpr=1&amp;s=none" media="(min-width: 320px)"><img alt="Debris among trees and Israeli officer" src="https://i.guim.co.uk/img/media/f9c3ded3c6dabea6c0aaf7257ce69d90eeeb39f5/0_165_4937_2962/master/4937.jpg?width=445&amp;dpr=1&amp;s=none" width="445" height="266.981972858011" loading="lazy"></picture></div><figcaption><span><svg width="18" height="13" viewBox="0 0 18 13"><path d="M18 3.5v8l-1.5 1.5h-15l-1.5-1.5v-8l1.5-1.5h3.5l2-2h4l2 2h3.5l1.5 1.5zm-9 7.5c1.9 0 3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5-3.5 1.6-3.5 3.5 1.6 3.5 3.5 3.5z"></path></svg></span><span>The aftermath of the 7 October attacks at the Supernova music festival. Some have blamed Unit 8200’s ‘technological hubris’ for the intelligence failure.</span> Photograph: Manuel de Almeida/EPA</figcaption></figure><p>Sariel argued in the published book three years ago that his ideas about using machine learning to transform modern warfare should become mainstream. “We just need to take them from the periphery and deliver them to the centre of the stage,” he wrote.</p><p>One section of the book heralds the concept of an AI-powered “targets machine”, descriptions of which closely resemble the target recommendation systems the IDF is now known have been <a href="https://www.theguardian.com/world/2024/apr/03/israel-gaza-ai-database-hamas-airstrikes" data-link-name="in body link">relying upon in its bombardment of Gaza</a>.</p><p>Over the last six months, the IDF has deployed multiple AI-powered decision support systems that have been rapidly developed and refined by Unit 8200 under Sariel’s leadership.</p><p>They include <a href="https://www.theguardian.com/world/2023/dec/01/the-gospel-how-israel-uses-ai-to-select-bombing-targets" data-link-name="in body link">the Gospel</a> and <a href="https://www.theguardian.com/world/2024/apr/03/israel-gaza-ai-database-hamas-airstrikes" data-link-name="in body link">Lavender</a>, two target recommendation systems that have been revealed in reports by the Israeli-Palestinian publication <a href="https://www.972mag.com/lavender-ai-israeli-army-gaza/" data-link-name="in body link">+972 magazine</a>, its Hebrew-language outlet Local Call and the Guardian.</p><p>The IDF says its AI systems are intended to assist human intelligence officers, who are required to verify that military suspects are legitimate targets under international law. A spokesperson said the military used “various types of tools and methods”, adding: “Evidently, there are tools that exist in order to benefit intelligence researchers that are based on artificial intelligence.”</p><h2 id="targets-machine"><strong>Targets machine</strong></h2><p>On Wednesday, +972 and Local Call placed the spotlight on the link between Unit 8200 and the book authored by <a href="https://www.972mag.com/lavender-ai-israeli-army-gaza/" data-link-name="in body link">a mysteriously named Brigadier General YS</a>.</p><p>Sariel is understood to have written the book with the IDF’s permission after a year as a visiting researcher at the US National Defense University in Washington DC, where he made the case for using AI to transform modern warfare.</p><p>Aimed at high-ranking military commanders and security officials, the book articulates a “human-machine teaming” concept that seeks to achieve synergy between humans and AI, rather than constructing fully autonomous systems.</p><p>It reflects Sariel’s ambition to become a “thought leader”, according to one former intelligence official. In the 2000s, he was a leading member of a group of academically minded spies known as “the Choir”, which agitated for an overhaul of Israeli intelligence practices.</p><figure id="cf9d0f0e-4e8e-4b28-9f6b-ae965fdee7bb" data-spacefinder-role="showcase" data-spacefinder-type="model.dotcomrendering.pageElements.ImageBlockElement"><div id="img-3"><picture><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=880&amp;dpr=2&amp;s=none" media="(min-width: 1300px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 1300px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=880&amp;dpr=1&amp;s=none" media="(min-width: 1300px)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=800&amp;dpr=2&amp;s=none" media="(min-width: 1140px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 1140px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=800&amp;dpr=1&amp;s=none" media="(min-width: 1140px)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=640&amp;dpr=2&amp;s=none" media="(min-width: 980px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 980px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=640&amp;dpr=1&amp;s=none" media="(min-width: 980px)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=620&amp;dpr=2&amp;s=none" media="(min-width: 660px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 660px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=620&amp;dpr=1&amp;s=none" media="(min-width: 660px)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=605&amp;dpr=2&amp;s=none" media="(min-width: 480px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 480px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=605&amp;dpr=1&amp;s=none" media="(min-width: 480px)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=445&amp;dpr=2&amp;s=none" media="(min-width: 320px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 320px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=445&amp;dpr=1&amp;s=none" media="(min-width: 320px)"><img alt="Destruction near al-Shifa hospital in Gaza  " src="https://i.guim.co.uk/img/media/95300b36426b0d87b569f18ee8cae9ea9942e884/0_360_4032_2419/master/4032.jpg?width=445&amp;dpr=1&amp;s=none" width="445" height="266.9779265873016" loading="lazy"></picture></div><figcaption><span><svg width="18" height="13" viewBox="0 0 18 13"><path d="M18 3.5v8l-1.5 1.5h-15l-1.5-1.5v-8l1.5-1.5h3.5l2-2h4l2 2h3.5l1.5 1.5zm-9 7.5c1.9 0 3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5-3.5 1.6-3.5 3.5 1.6 3.5 3.5 3.5z"></path></svg></span><span>Destruction near al-Shifa hospital in Gaza on 1 April. The book argues that using AI to create military targets can be more efficient.</span> Photograph: Anadolu/Getty Images</figcaption></figure><p>An Israeli press report suggests that by 2017 he was head of intelligence for the IDF’s central command. His subsequent elevation to commander of Unit 8200 amounted to an endorsement by the military establishment of his technological vision for the future.</p><p>Sariel refers in the book to “a revolution” in recent years within the IDF, which has “developed a new concept of intelligence centric warfare to connect intelligence to the fighters in the field”. He advocates going further still, fully merging intelligence and warfare, in particular when conducting lethal targeting operations.</p><p>In one chapter of the book, he provides a template for how to construct an effective targets machine drawing on “big data” that a human brain could not process. “The machine needs enough data regarding the battlefield, the population, visual information, cellular data, social media connections, pictures, cellphone contacts,” he writes. “The more data and the more varied it is, the better.”</p><p>Such a targets machine, he said, would draw on complex models that make predictions built “on lots of small, diverse features”, listing examples such as “people who are with a Hezbollah member in a WhatsApp group, people who get new cellphones every few months, those who change their addresses frequently”.</p><p>He argues that using AI to create potential military targets can be more efficient and avoid “bottlenecks” created by intelligence officials or soldiers. “There is a human bottleneck for both locating the new targets and decision-making to approve the targets. There is also the bottleneck of how to process a great amount of data. Then there is the bottleneck of connecting the intelligence to the fire.” He adds: “A team consisting of machines and investigators can blast the bottleneck wide open.”</p><h2 id="intelligence-divide"><strong>Intelligence divide</strong></h2><p>Disclosure of Sariel’s security lapse comes at a difficult time for the intelligence boss. In February, he came under public scrutiny in Israel when the Israeli newspaper Maariv published <a href="https://www.maariv.co.il/journalists/Article-1078519" data-link-name="in body link">an account</a> of recriminations within Unit 8200 after the 7 October attacks.</p><p>Sariel was not named in the article, which referred to Unit 8200’s commander only as “Y”. However, the rare public criticism brought into focus a divide within Israel’s intelligence community over its biggest failure in a generation.</p><p>Sariel’s critics, the report said, believe Unit 8200’s prioritisation of “addictive and exciting” technology over more old-fashioned intelligence methods had led to the disaster. One veteran official told the newspaper the unit under Sariel had “followed the new intelligence bubble”.</p><p>For his part, Sariel is quoted as telling colleagues that 7 October will “haunt him” until his last day. “I accept responsibility for what happened in the most profound sense of the word,” he said. “We were defeated. I was defeated.”</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Big Tech's underground race to buy AI training data (146 pts)]]></title>
            <link>https://www.reuters.com/technology/inside-big-techs-underground-race-buy-ai-training-data-2024-04-05/</link>
            <guid>39942104</guid>
            <pubDate>Fri, 05 Apr 2024 13:27:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/technology/inside-big-techs-underground-race-buy-ai-training-data-2024-04-05/">https://www.reuters.com/technology/inside-big-techs-underground-race-buy-ai-training-data-2024-04-05/</a>, See on <a href="https://news.ycombinator.com/item?id=39942104">Hacker News</a></p>
Couldn't get https://www.reuters.com/technology/inside-big-techs-underground-race-buy-ai-training-data-2024-04-05/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Cloudflare acquires PartyKit to allow developers to build real-time multi-user (187 pts)]]></title>
            <link>https://blog.cloudflare.com/cloudflare-acquires-partykit</link>
            <guid>39941859</guid>
            <pubDate>Fri, 05 Apr 2024 13:03:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.cloudflare.com/cloudflare-acquires-partykit">https://blog.cloudflare.com/cloudflare-acquires-partykit</a>, See on <a href="https://news.ycombinator.com/item?id=39941859">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post"><article><p>04/05/2024</p><section><p>4 min read</p><div><figure><img src="https://blog.cloudflare.com/content/images/2024/04/PartyKit-and-Cloudflare.png" alt="Cloudflare acquires PartyKit to allow developers to build real-time multi-user applications" loading="lazy" width="2400" height="1350"></figure><p>We're thrilled to announce that PartyKit, an open source platform for deploying real-time, collaborative, multiplayer applications, is now a part of Cloudflare. This acquisition marks a significant milestone in our journey to redefine the boundaries of serverless computing, making it more dynamic, interactive, and, importantly, stateful.</p><h3 id="defining-the-future-of-serverless-compute-around-state">Defining the future of serverless compute around state</h3><p>Building real-time applications on the web have always been difficult. Not only is it a distributed systems problem, but you need to provision and manage infrastructure, databases, and other services to maintain state across multiple clients. This complexity has traditionally been a barrier to entry for many developers, especially those who are just starting out.</p><p><a href="https://blog.cloudflare.com/introducing-workers-durable-objects">We announced Durable Objects in 2020</a> as a way of building synchronized real time experiences for the web. Unlike regular serverless functions that are ephemeral and stateless, Durable Objects are stateful, allowing developers to build applications that maintain state across requests. They also act as an ideal synchronization point for building real-time applications that need to maintain state across multiple clients. Combined with WebSockets, Durable Objects can be used to build a wide range of applications, from multiplayer games to collaborative drawing tools.</p><p>In 2022, PartyKit began as a project to further explore the capabilities of Durable Objects and make them more accessible to developers by exposing them through familiar components. In seconds, you could create a project that configured behavior for these objects, and deploy it to Cloudflare. By integrating with popular libraries such as <a href="https://github.com/yjs/yjs">Yjs</a> (the gold standard in collaborative editing) and React, PartyKit made it possible for developers to build a wide range of use cases, from multiplayer games to collaborative drawing tools, into their applications.</p><p>Building experiences with real-time components was previously only accessible to multi-billion dollar companies, but new computing primitives like Durable Objects on the edge make this accessible to regular developers and teams. With PartyKit now under our roof, we're doubling down on our commitment to this future — a future where serverless is stateful.</p><p>We’re excited to give you a preview into our shared vision for applications, and the use cases we’re excited to simplify together.</p><h3 id="making-state-for-serverless-easy">Making state for serverless easy</h3><p>Unlike conventional approaches that rely on external databases to maintain state, thereby complicating scalability and increasing costs, PartyKit leverages Cloudflare's Durable Objects to offer a seamless model where stateful serverless functions can operate as if they were running on a single machine, maintaining state across requests. This innovation not only simplifies development but also opens up a broader range of use cases, including real-time computing, collaborative editing, and multiplayer gaming, by allowing thousands of these "machines" to be spun up globally, each maintaining its own state. PartyKit aims to be a complement to traditional serverless computing, providing a more intuitive and efficient method for developing applications that require stateful behavior, thereby marking the "next evolution" of serverless computing.</p><h3 id="simplifying-websockets-for-real-time-interaction">Simplifying WebSockets for Real-Time Interaction</h3><p>WebSockets have revolutionized how we think about bidirectional communication on the web. Yet, the challenge has always been about scaling these interactions to millions without a hitch. Cloudflare Workers step in as the hero, providing a serverless framework that makes real-time applications like chat services, multiplayer games, and collaborative tools not just possible but scalable and efficient.</p><h3 id="powering-games-and-multiplayer-applications-without-limits">Powering Games and Multiplayer Applications Without Limits</h3><p>Imagine building multiplayer platforms where the game never lags, the collaboration is seamless, and video conferences are crystal clear. Cloudflare's Durable Objects morph the stateless serverless landscape into a realm where persistent connections thrive. PartyKit's integration into this ecosystem means developers now have a powerhouse toolkit to bring ambitious multiplayer visions to life, without the traditional overheads.</p><p>This is especially critical in gaming — there are few areas where low-latency and real-time interaction matter more. Every millisecond, every lag, every delay defines the entire experience. With PartyKit's capabilities integrated into Cloudflare, developers will be able to leverage our combined technologies to create gaming experiences that are not just about playing but living the game, thanks to scalable, immersive, and interactive platforms.</p><h3 id="the-toolkit-for-building-local-first-applications">The toolkit for building Local-First applications</h3><p>The Internet is great, and increasingly always available, but there are still a few situations where we are forced to disconnect — whether on a plane, a train, or a beach.</p><p>The premise of local-first applications is that work doesn't stop when the Internet does. Wherever you left off in your doc, you can keep working on it, assuming the state will be restored when you come back online. By storing data on the client and syncing when back online, these applications offer resilience and responsiveness that's unmatched. Cloudflare's vision, enhanced by PartyKit's technology, aims to make local-first not just an option but the standard for application development.</p><h3 id="whats-next-for-partykit-users">What's next for PartyKit users?</h3><p>Users can expect their existing projects to continue working as expected. We will be adding more features to the platform, including the ability to create and use PartyKit projects inside existing Workers and Pages projects. There will be no extra charges to use PartyKit for commercial purposes, other than the standard usage charges for Cloudflare Workers and other services. Further, we're going to expand the roadmap to begin working on integrations with popular frameworks and libraries, such as React, Vue, and Angular. We're deeply committed to executing on the PartyKit vision and roadmap, and we're excited to see what you build with it.</p><h3 id="the-beginning-of-a-new-chapter">The Beginning of a New Chapter</h3><p>The acquisition of PartyKit by Cloudflare isn't just a milestone for our two teams; it's a leap forward for developers everywhere. Together, we're not just building tools; we're crafting the foundation for the next generation of Internet applications. The future of serverless is stateful, and with PartyKit's expertise now part of our arsenal, we're more ready than ever to make that future a reality.</p><p>Welcome to the Cloudflare team, PartyKit. Look forward to building something remarkable together.</p></div></section><div><p>We protect <a target="_blank" href="https://www.cloudflare.com/network-services/" rel="noreferrer">entire corporate networks</a>, help customers build <a target="_blank" href="https://workers.cloudflare.com/" rel="noreferrer">Internet-scale applications efficiently</a>, accelerate any <a target="_blank" href="https://www.cloudflare.com/performance/accelerate-internet-applications/" rel="noreferrer">website or Internet application</a>, <a target="_blank" href="https://www.cloudflare.com/ddos/" rel="noreferrer">ward off DDoS attacks</a>, keep <a target="_blank" href="https://www.cloudflare.com/application-security/" rel="noreferrer">hackers at bay</a>, and can help you on <a target="_blank" href="https://www.cloudflare.com/products/zero-trust/" rel="noreferrer">your journey to Zero Trust</a>.</p><p>Visit <a target="_blank" href="https://one.one.one.one/" rel="noreferrer">1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.</p><p>To learn more about our mission to help build a better Internet, <a target="_blank" href="https://www.cloudflare.com/learning/what-is-cloudflare/" rel="noreferrer">start here</a>. If you're looking for a new career direction, check out <a target="_blank" href="https://www.cloudflare.com/careers" rel="noreferrer">our open positions</a>.</p></div><a href="https://blog.cloudflare.com/tag/developer-week">Developer Week</a><a href="https://blog.cloudflare.com/tag/acquisitions">Acquisitions</a><a href="https://blog.cloudflare.com/tag/workers">Cloudflare Workers</a><a href="https://blog.cloudflare.com/tag/ai">AI</a><a href="https://blog.cloudflare.com/tag/durable-objects">Durable Objects</a></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Kyoo – Self-hosted media browser (Jellyfin/Plex alternative) (194 pts)]]></title>
            <link>https://github.com/zoriya/Kyoo</link>
            <guid>39941232</guid>
            <pubDate>Fri, 05 Apr 2024 11:49:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/zoriya/Kyoo">https://github.com/zoriya/Kyoo</a>, See on <a href="https://news.ycombinator.com/item?id=39941232">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto"><h2 tabindex="-1" dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/zoriya/Kyoo/blob/master/icons/icon-256x256.png"><img width="24px" src="https://github.com/zoriya/Kyoo/raw/master/icons/icon-256x256.png" alt=""></a> Kyoo</h2><a id="user-content--kyoo" aria-label="Permalink:  Kyoo" href="#-kyoo"></a></div>
<p dir="auto">Welcome to Kyoo, the next-generation open-source media browser that redefines your streaming experience. Designed from the ground up, Kyoo stands out as a powerful alternative to Plex and Jellyfin. Unleash the full potential of your media library with cutting-edge features and a commitment to being free and open-source.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zoriya/kyoo/screens/home.png"><img src="https://raw.githubusercontent.com/zoriya/kyoo/screens/home.png" alt="Kyoo in Action"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🌐 Getting Started</h2><a id="user-content--getting-started" aria-label="Permalink: 🌐 Getting Started" href="#-getting-started"></a></p>
<ul dir="auto">
<li><strong><a href="https://github.com/zoriya/Kyoo/blob/master/INSTALLING.md">Installation</a>:</strong> Set up Kyoo effortlessly to enjoy seamless streaming of your favorite movies, TV shows, or anime.</li>
<li><strong><a href="https://discord.gg/E6Apw3aFaA" rel="nofollow">Join the discord</a>:</strong> Join our Discord community for discussions and support</li>
<li><strong><a href="https://kyoo.zoriya.dev/api/doc" rel="nofollow">API Documentation</a>:</strong> Dive into our comprehensive API documentation to explore advanced functionalities.</li>
<li><strong><a href="https://github.com/zoriya/Kyoo/blob/master/CONTRIBUTING.md">Contributing</a>:</strong> Feel free to open issues, submit pull requests, and contribute to making Kyoo even better.</li>
</ul>
<p dir="auto"><a href="https://discord.gg/zpA74Qpvj5" rel="nofollow"><img src="https://camo.githubusercontent.com/b7ebd2a862d19dc3dd33acf2f2a3c12b5752bf579d2397893df7ef3b299ccc3f/68747470733a2f2f646973636f72642e636f6d2f6170692f6775696c64732f313231363436303839383133393633353735332f7769646765742e706e673f7374796c653d62616e6e657232" alt="" data-canonical-src="https://discord.com/api/guilds/1216460898139635753/widget.png?style=banner2"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 Features</h2><a id="user-content--features" aria-label="Permalink: 🚀 Features" href="#-features"></a></p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Dynamic Transcoding:</strong> Transcode your media to any quality, change on the fly with auto quality, and seek effortlessly without waiting for the transcoder.</p>
</li>
<li>
<p dir="auto"><strong>Auto Watch History:</strong> Enjoy automatic watch history with continue watching, allowing you to quickly resume your series or discover new episodes.</p>
</li>
<li>
<p dir="auto"><strong>Intelligent Metadata Retrieval:</strong> Experience smart metadata retrieval, even for oddly named files, thanks to the power of guessit and themoviedb. It even uses thexem for enhanced anime handling.</p>
</li>
<li>
<p dir="auto"><strong>Cross-Platform Access:</strong> Access Kyoo on Android and web clients, ensuring your media is at your fingertips wherever you go.</p>
</li>
<li>
<p dir="auto"><strong>Meilisearch-Powered Search:</strong> Utilize our advanced, typo-resilient search system powered by Meilisearch for lightning-fast results.</p>
</li>
<li>
<p dir="auto"><strong>Fast Scrubbing Support:</strong> Navigate your media effortlessly with fast scrubbing support, enhancing your control over playback.</p>
</li>
<li>
<p dir="auto"><strong>Download and Offline Support:</strong> Enjoy the freedom to download and watch offline, with the watch history seamlessly updating when you reconnect.</p>
</li>
<li>
<p dir="auto"><strong>Enhanced Subtitle Support:</strong> Kyoo goes beyond the basics with enhanced subtitle support, including SSA/ASS formats and customizable fonts.</p>
</li>
<li>
<p dir="auto"><strong>OIDC and Scrubbing Support:</strong> Login with your favorites services (Google, Discord or any OIDC compliant service) and automatically mark episodes as watched on linked services (SIMKL and soon others).</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🌟 Philosophy: Setup Once, Enjoy Forever</h2><a id="user-content--philosophy-setup-once-enjoy-forever" aria-label="Permalink: 🌟 Philosophy: Setup Once, Enjoy Forever" href="#-philosophy-setup-once-enjoy-forever"></a></p>
<p dir="auto">Kyoo's philosophy revolves around simplicity. Set it up once, forget about configuration hassles. Once installed, your library undergoes automatic scanning, adding new episodes or movies as soon as they're moved into your library's folder. No need for a specific file structure or meticulously renamed files – Kyoo does the right thing™.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">📜 Why another media-browser?</h2><a id="user-content--why-another-media-browser" aria-label="Permalink: 📜 Why another media-browser?" href="#-why-another-media-browser"></a></p>
<p dir="auto">From a technical standpoint, both Jellyfin and Plex lean on SQLite and confine everything within a single container, Kyoo takes a different route. We're not afraid to bring in additional containers when it makes sense – whether for specialized features like Meilisearch powering our search system or for scalability, as seen with our transcoder.</p>
<p dir="auto">Kyoo embraces the "setup once, forget about it" philosophy. Unlike Plex and Jellyfin, we don't burden you with manual file renaming or specific folder structures. Kyoo seamlessly works with files straight from your download directory, minimizing the maintenance headache for server admins.</p>
<p dir="auto">Kyoo narrows its focus to movies, TV shows, and anime streaming. No music, ebooks, or games – just pure cinematic delight.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔗 Live Demo</h2><a id="user-content--live-demo" aria-label="Permalink: 🔗 Live Demo" href="#-live-demo"></a></p>
<p dir="auto">Curious to see Kyoo in action? Check out our live demo featuring copyright-free movies at <a href="https://kyoo.zoriya.dev/" rel="nofollow">kyoo.zoriya.dev</a>. Special thanks to the Blender Studio for providing open-source movies available for all.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">👀 Screens</h2><a id="user-content--screens" aria-label="Permalink: 👀 Screens" href="#-screens"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zoriya/kyoo/screens/show-details.png"><img src="https://raw.githubusercontent.com/zoriya/kyoo/screens/show-details.png" alt="Web Show"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zoriya/kyoo/screens/hover-scrubber.png"><img src="https://raw.githubusercontent.com/zoriya/kyoo/screens/hover-scrubber.png" alt="Desktop Scrubber"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zoriya/kyoo/screens/bottom-scrubber.png"><img src="https://raw.githubusercontent.com/zoriya/kyoo/screens/bottom-scrubber.png" alt="Touch Scrubber"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zoriya/kyoo/screens/collection.png"><img src="https://raw.githubusercontent.com/zoriya/kyoo/screens/collection.png" alt="Collection"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zoriya/kyoo/screens/list.png"><img src="https://raw.githubusercontent.com/zoriya/kyoo/screens/list.png" alt="List"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zoriya/kyoo/screens/android-movie.png"><img src="https://raw.githubusercontent.com/zoriya/kyoo/screens/android-movie.png" alt="Android Movie" width="350"></a></p>
<p dir="auto">Ready to elevate your streaming experience? Dive into Kyoo now! 🎬🎉</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[An IRC client in your motherboard (261 pts)]]></title>
            <link>https://axleos.com/an-irc-client-in-your-motherboard/</link>
            <guid>39940975</guid>
            <pubDate>Fri, 05 Apr 2024 11:13:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://axleos.com/an-irc-client-in-your-motherboard/">https://axleos.com/an-irc-client-in-your-motherboard/</a>, See on <a href="https://news.ycombinator.com/item?id=39940975">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main-blog-post-content-container">
<content>

<img src="https://axleos.com/an-irc-client-in-your-motherboard/images/maslow.png">
<p>I made a graphical IRC client that runs in UEFI. It’s written in Rust and leverages the <a href="https://www.youtube.com/watch?v=OAGuoKa1Gm8">GUI toolkit</a> and <a href="https://axleos.com/writing-a-truetype-font-renderer/">TrueType renderer</a> that I wrote for axle’s userspace. I was able to develop it thanks to the <a href="https://axleos.com/adding-vmnet-support-to-qemu/"><code>vmnet</code> network backend</a> that I implemented for QEMU. I’ve published the code <a href="https://github.com/codyd51/uefirc">here</a>.</p>
<img src="https://axleos.com/an-irc-client-in-your-motherboard/images/qemu_screenshot.png">
<p>You can connect to an IRC server, chat and read messages, all from the comfort of your motherboard’s pre-boot environment.</p>
<p>“Why”? What kind of question is “why”?</p>
<h2 id="a-quick-refresher-on-uefi">A quick refresher on UEFI</h2>
<p>The bootloader for any OS is <em>itself</em> loaded with the help of firmware that’s stored on the motherboard’s ROM. Back in the Bad Old Days, this motherboard firmware was a <a href="https://en.wikipedia.org/wiki/BIOS">BIOS</a> implementation. This pre-boot environment is often thought of as the first major step to the computer starting up.</p>
<p>BIOS imposed a bunch of annoying limitations<span><sup><i>✱</i></sup></span>, so an industry consortium came up with a new standard to replace it, <a href="https://en.wikipedia.org/wiki/UEFI">UEFI</a>.</p>

<div>

<p>For example, BIOS mandates that the bootloader starts off in 16-bit mode, <a href="https://axleos.com/blog/running-axle-on-multiple-cpus/">as all APs ostensibly do</a>. It also imposes weird and legacy requirements on the bootloader, such as mandating that the bootloader must have a self-contained first stage loader program that fits in 512 bytes.</p>

</div>
<p>Just like the BIOS, a UEFI implementation is shipped on each motherboard in ROM. This UEFI firmware provides an environment for the operating system’s bootloader to run in<span><sup><i>✱</i></sup></span>, and provides various APIs that the bootloader can leverage to do its thing.</p>


<p>UEFI is a massive step forwards from BIOS! The bootloader is dropped into a 64-bit environment from the get-go, and UEFI provides tons of helpful APIs for switching VESA display resolutions, allocating memory, and interacting with the <a href="https://en.wikipedia.org/wiki/EFI_system_partition">EFI filesystem</a>.</p>
<p>UEFI is also somewhat maligned for being over-engineered.</p>
<h2 id="network-boot">Network boot</h2>
<p>One use case that’s kind of fun is that some bootloaders allow the operating system to be loaded over the network, instead of being loaded from a stored installation on a local block device. This can be useful in some corporate environments.</p>
<p>Supporting this use case means that the UEFI firmware ships a network stack, complete with NIC drivers and a TCP implementation, and exposes APIs to interact with this stack directly to any applications running in the pre-boot environment.</p>
<p>Of course, there’s no obligation for the bootloader to actually load an operating system. Behold, social media!</p>
<h2 id="rust-networking-in-uefi">Rust networking in UEFI</h2>
<p>The most finicky part of this project by far was implementing a client for UEFI’s TCP protocol in Rust. Making this all work with its scatter-gather buffers was quite tricky.</p>
<p>The nuts and bolts of actually using UEFI’s TCP protocol can be fairly wacky, especially when trying to explain the lifetimes and data interactions to Rust. UEFI’s TCP protocol design enforces the use of global state and re-entrant callbacks, scatter-gather buffers, and an involved set of concepts (events, tokens, handles, protocols, oh my!).</p>
<p>I spent a number of days carefully testing my Rust code to make sure I wasn’t leaking memory, and to squash TCP receive buffer UAFs.</p>
<p>As an example of how the UEFI programming model can be somewhat obtuse, how do you think this UEFI API is meant to be used<span><sup><i>✱</i></sup></span>?</p>

<div>

<p>I’ve Rustified the syntax and simplified the API for readability. <a href="https://uefi.org/specs/UEFI/2.10/07_Services_Boot_Services.html?highlight=efi_wait_for_event#efi-boot-services-createevent">Here’s</a> part of the UEFI API in question.</p>

</div>
<div><pre tabindex="0"><code data-lang="rust"><span><span><span>enum</span> <span>ListenMode</span><span> </span><span>{</span><span>
</span></span></span><span><span><span>    </span><span>NOTIFY_SIGNAL</span><span> </span><span>=</span><span> </span><span>0</span><span>,</span><span>
</span></span></span><span><span><span>    </span><span>NOTIFY_WAIT</span><span> </span><span>=</span><span> </span><span>1</span><span>,</span><span>
</span></span></span><span><span><span></span><span>}</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span></span><span>fn</span> <span>set_up_listen_handle</span><span>(</span><span>
</span></span></span><span><span><span>    </span><span>listen_mode</span>: <span>ListenMode</span><span>,</span><span>
</span></span></span><span><span><span>    </span><span>callback</span>: <span>Func</span><span>,</span><span>
</span></span></span><span><span><span></span><span>)</span><span> </span>-&gt; <span>ListenHandle</span><span>;</span><span>
</span></span></span><span><span><span>
</span></span></span><span><span><span></span><span>fn</span> <span>wait</span><span>(</span><span>event_type</span>: <span>EventType</span><span>,</span><span> </span><span>handle</span>: <span>ListenHandle</span><span>)</span><span> </span>-&gt; <span>None</span><span>;</span></span></span></code></pre></div>
<p>If you gave this to me on a paper napkin, the behavior I’d expect is pretty straightforward:</p>
<ol>
<li>Specifying <code>NOTIFY_SIGNAL</code> will invoke my callback when an event occurs.</li>
<li>Specifying <code>NOTIFY_WAIT</code>, then calling <code>wait()</code>, will block until an event occurs, invoke my callback, then continue execution.</li>
</ol>
<p>This is not at all what UEFI does! Here’s how it really works:</p>
<ol>
<li>If you specify <code>NOTIFY_SIGNAL</code>, UEFI will invoke the callback when the event occurs. Using <code>wait()</code> will raise an error.</li>
<li>If you specify <code>NOTIFY_WAIT</code>, then call <code>wait()</code>, UEFI will <em>invoke your callback whenever it feels like it</em>, multiple times, until the event occurs. Then, the <code>wait()</code> call will unblock.</li>
</ol>
<p>This is quite confusing, because the callback<span><sup><i>✱</i></sup></span> has completely different semantics depending on which listening mode you use.</p>

<div>

<p>The UEFI C API uses the typical pattern of accepting a function pointer and an opaque context pointer to manage callbacks. I used <a href="http://blog.sagetheprogrammer.com/neat-rust-tricks-passing-rust-closures-to-c">Sage Griffin’s</a> excellent trick to neatly trigger Rust closures as UEFI callbacks <a href="https://github.com/codyd51/uefirc/blob/main/src/event.rs#L32-L33">here</a>.</p>

</div>
<p>According to the UEFI specifiers, when using <code>NOTIFY_SIGNAL</code>, the callback’s world-model should be “The event has occurred, it’s time to do the next thing!”</p>
<p>When using <code>NOTIFY_WAIT</code>, the callback’s world-model should be “The event still hasn’t happened, I should poke or prod something to move things along.”</p>
<p>In other words, UEFI allows you to flip a switch to vacillate between two completely different callback paradigms, one of which is quite nontraditional, and neither of which provide the ‘block until ready’ behavior that both their names sort of imply.</p>
<p>The name on the tin is literally <code>NOTIFY_WAIT</code>, but if you expect it to <em>notify you after the <code>wait()</code> completes</em>, you’ll be in for a bout of confusion.</p>
<p>The actual behavior <em>is</em> spelled out in the docs, but you need to read the <code>WaitForEvent</code> docstring quite closely<span><sup><i>✱</i></sup></span>.</p>

<div><p>It was a huge pain to successfully set things up such that I could asynchronously buffer received packet data.</p>
<p>One sensible way to structure this would be to set up a <code>NOTIFY_SIGNAL</code> callback that appends to a buffer each time it’s triggered. Unfortunately, due to Rust’s borrowing rules, this was painful to get working.</p>
<p>I ended up with a <code>NOTIFY_WAIT</code> loop that also includes a short timeout timer. Each event loop pass, this will either trip the timer and time out, or receive some packet data and append it to the buffer. If the timer tripped, we don’t remove the previous RX transfer handle as the underlying UEFI implementation didn’t like that.</p>
</div>
<h2 id="cursor-support">Cursor support</h2>
<p>While a mouse isn’t a strict requirement for an IRC client, having one makes the whole app feel more interactive. I used UEFI’s <a href="https://uefi.org/specs/UEFI/2.9_A/12_Protocols_Console_Support.html#simple-pointer-protocol">Simple Pointer Protocol</a> to read mouse movement and button presses, and included visual feedback on the cursor’s current position in the GUI<span><sup><i>✱</i></sup></span>.</p>

<div>

<p>Unfortunately, the Simple Pointer Protocol doesn’t support scroll wheels. To scroll in UEFIRC, you can either use the arrow keys, or drag the scroll bar with the cursor.</p>

</div>
<p>If you try to use the Simple Pointer Protocol with the OVMF UEFI firmware, you won’t manage to get any mouse events, and you won’t get many helpful errors from the API<span><sup><i>✱</i></sup></span>.</p>

<div>

<p><a href="https://forum.osdev.org/viewtopic.php?f=1&amp;t=31572">Here’s an example</a> from the OSDev forums in which someone notices that the Simple Pointer Protocol is unusable with the standard OVMF build.</p>

</div>
<p>I compiled a custom UEFI firmware build that had all the right drivers and protocols compiled in (paticularly <code>UsbMouseDxe</code>), which allowed me to get on with it. To facilitate others to try out UEFIRC in QEMU, <a href="https://github.com/codyd51/uefirc/releases/">I’ve also uploaded my UEFI firmware to the repo</a>.</p>
<p>Mouse drivers report a <em>change</em> in the mouse’s position. A naive way to code up a mouse cursor might be something like:</p>
<div><pre tabindex="0"><code data-lang="rust"><span><span><span>fn</span> <span>handle_mouse_event</span><span>(</span><span>delta_x</span>: <span>isize</span><span>,</span><span> </span><span>delta_y</span>: <span>isize</span><span>)</span><span> </span><span>{</span><span>
</span></span></span><span><span><span>    </span><span>// 'Linear' mouse scaling
</span></span></span><span><span><span></span><span>    </span><span>current_cursor_pos</span><span>.</span><span>x</span><span> </span><span>+=</span><span> </span><span>delta_x</span><span>;</span><span>
</span></span></span><span><span><span>    </span><span>current_cursor_pos</span><span>.</span><span>y</span><span> </span><span>+=</span><span> </span><span>delta_y</span><span>;</span><span>
</span></span></span><span><span><span></span><span>}</span></span></span></code></pre></div>
<p>As it turns out, this ends up feeling quite sluggish. Operating systems tend to use an approach more like this:</p>
<div><pre tabindex="0"><code data-lang="rust"><span><span><span>fn</span> <span>handle_mouse_event</span><span>(</span><span>delta_x</span>: <span>isize</span><span>,</span><span> </span><span>delta_y</span>: <span>isize</span><span>)</span><span> </span><span>{</span><span>
</span></span></span><span><span><span>    </span><span>// 'Log2' mouse scaling
</span></span></span><span><span><span></span><span>    </span><span>let</span><span> </span><span>scale</span><span> </span><span>=</span><span> </span><span>(</span><span>delta_x</span><span>.</span><span>abs</span><span>()</span><span> </span><span>+</span><span> </span><span>delta_y</span><span>.</span><span>abs</span><span>()).</span><span>log2</span><span>();</span><span>
</span></span></span><span><span><span>    </span><span>current_cursor_pos</span><span>.</span><span>x</span><span> </span><span>+=</span><span> </span><span>delta_x</span><span> </span><span>*</span><span> </span><span>scale</span><span>;</span><span>
</span></span></span><span><span><span>    </span><span>current_cursor_pos</span><span>.</span><span>y</span><span> </span><span>+=</span><span> </span><span>delta_y</span><span> </span><span>*</span><span> </span><span>scale</span><span>;</span><span>
</span></span></span><span><span><span></span><span>}</span></span></span></code></pre></div>
<p>Get a feel for the difference:</p>

<p>People tend to like log2 scaling because you can get where you’re going quicker: drag with confidence, and the mouse will fly across the screen, while still allowing for fine adjustments when honing in on an area more slowly. It’s also just what most people are used to. When presented with a linear movement scaling cursor, people tend to perceive the whole environment as slow and unresponsive.</p>
<h2 id="modelling-irc-messages">Modelling IRC messages</h2>
<p>Modelling the IRC messages was straightforward and pleasant. IRC uses a textual, line-based format that’s easy to parse, though it’s clearly encumbered by decades of slow expansion, only some of which is standardized.</p>
<img src="https://axleos.com/an-irc-client-in-your-motherboard/images/message_format2.png">
<h2 id="using-libgui-in-uefi">Using libgui in UEFI</h2>
<p>It wasn’t too bad to get my GUI toolkit running in UEFI, as I’ve already done most of the heavy lifting to make axle’s Rust GUI toolkit available in contexts other than axle itself. The first bulk of work here was providing an <a href="https://github.com/codyd51/axle/commit/cee2b7dd01639df7719104d3dfb9a263e246161c">implementation</a> of <code>AwmWindow</code> that can be used from within UEFI. After that, most of libgui comes for free, including event management, font rendering, layer compositing, view decorations, and tricky components like scroll views.</p>

<p>axle’s Rust-based libgui toolkit came after axle’s C-based libgui toolkit, and the C toolkit still boasts a few features that I haven’t caught up to in the Rust version yet.</p>
<p>For example, the C toolkit displays these nice scroll bars on scroll views.</p>
<img src="https://axleos.com/an-irc-client-in-your-motherboard/images/scroll_views.png">
<p>Since UEFIRC’s primary interaction takes place in a scrolling view filled with text, I couldn’t do without this for any longer. I reimplemented scroll bar functionality in the Rust libgui, with the famous ’tuck-in’ behavior at the top and bottom of the viewport that has made axle the OS of choice for the hip and fashionable the world over.</p>
<img src="https://axleos.com/an-irc-client-in-your-motherboard/images/rust_scroll_view.gif">
<h2 id="text-rendering-on-scroll-views">Text rendering on scroll views</h2>
<p>To make UEFIRC usable, I had to make some minor, but notable, changes to how text gets rendered to scrolling views. To see why, let’s first take a look at a simpler case of representing and manipulating pixels.</p>
<p>Representing pixel data is easy if all you have to worry about is a fixed-size rectangle of content. Imagine a buffer with <code>width * height</code> elements, containing RGB data.</p>

<p>When we need to render this rectangle of content somewhere, it’s straightforward to conceptualize copying the buffer corresponding to the desired rectangular region.</p>

<p>Views that allow scrolling their content are much more difficult.</p>
<p>With a fixed-size rectangle, we never need to think twice about how much memory we’ll need to allocate for the pixel buffer. With a scroll view, however, all of a sudden we have an infinitely extensible canvas to think about. Should we impose a ‘maximum size’ on the scroll view and allocate a huge buffer upfront? Should we resize a backing buffer that grows as we draw more content into it?</p>
<p>The approach for scroll views that I went with in axle’s Rust GUI toolkit is based on ’tiles’ of content. Each tile is a square pixel buffer, a few hundred pixels wide, and is the fundamental unit for scroll views.</p>
<p>Each time we draw a bit of graphical content to a scroll view, we first allocate the tiles necessary to display the corresponding visual area.</p>

<p>When rendering a scroll view to another layer, the visible tiles are computed and stitched together into a final image.</p>

<p>This allows the scroll view to expand without bound, and ensures that the scroll view only allocates pixel buffer area that actually contains rendered content, instead of allocating pixel buffer memory for any empty space that the user could scroll to.</p>
<p>This is all to say: it’s a lot more expensive to plot pixels to scrolling views than to fixed-size views, because we have to do more work to maintain the representation.</p>
<p>Drawing graphics primitives to scroll views isn’t too bad, because the scroll view can pre-determine which tiles it’ll need to populate upfront. For example, if a caller asks to draw a circle at a given origin and radius:</p>
<div><pre tabindex="0"><code data-lang="rust"><span><span>1</span><span><span>fn</span> <span>draw_circle</span><span>(</span><span>&amp;</span><span>self</span><span>,</span><span> </span><span>circle</span>: <span>Circle</span><span>,</span><span> </span><span>color</span>: <span>Color</span><span>,</span><span> </span><span>thickness</span>: <span>StrokeThickness</span><span>)</span><span> </span><span>{</span><span>
</span></span></span><span><span>2</span><span><span>    </span><span>// Pre-populate the tiles needed to cover the draw area
</span></span></span><span><span>3</span><span><span></span><span>    </span><span>let</span><span> </span><span>bounding_box</span><span> </span><span>=</span><span> </span><span>circle</span><span>.</span><span>bounding_box</span><span>();</span><span>
</span></span></span><span><span>4</span><span><span>    </span><span>self</span><span>.</span><span>allocate_tiles_to_cover_bounding_box</span><span>(</span><span>bounding_box</span><span>);</span><span>
</span></span></span><span><span>5</span><span><span>    </span><span>// Plot the pixels...
</span></span></span><span><span>6</span><span><span></span><span>}</span></span></span></code></pre></div>
<p>The call to <code>allocate_tiles_to_cover_bounding_box()</code> is fairly expensive, but we only have to pay it once for the entire shape. The absolute pathological worst case is <code>putpixel()</code>:</p>
<div><pre tabindex="0"><code data-lang="rust"><span><span>1</span><span><span>fn</span> <span>putpixel</span><span>(</span><span>&amp;</span><span>self</span><span>,</span><span> </span><span>pos</span>: <span>Point</span><span>,</span><span> </span><span>color</span>: <span>Color</span><span>)</span><span> </span><span>{</span><span>
</span></span></span><span><span>2</span><span><span>    </span><span>// We have no information available about what's being drawn!
</span></span></span><span><span>3</span><span><span></span><span>    </span><span>// We'll need to do lots of computational work to find out 
</span></span></span><span><span>4</span><span><span></span><span>    </span><span>// whether this pixel area is covered by any of our existing tiles.
</span></span></span><span><span>5</span><span><span></span><span>    </span><span>// If the caller is plotting multiple pixels in a row, this is
</span></span></span><span><span>6</span><span><span></span><span>    </span><span>// very wasteful.
</span></span></span><span><span>7</span><span><span></span><span>    </span><span>self</span><span>.</span><span>allocate_tiles_to_cover_bounding_box</span><span>(</span><span>Rect</span>::<span>new</span><span>(</span><span>pos</span><span>.</span><span>x</span><span>,</span><span> </span><span>pos</span><span>.</span><span>y</span><span>,</span><span> </span><span>1</span><span>,</span><span> </span><span>1</span><span>));</span><span>
</span></span></span><span><span>8</span><span><span>    </span><span>// Plot the pixel...
</span></span></span><span><span>9</span><span><span></span><span>}</span></span></span></code></pre></div>
<p>Now, let’s look at how the TrueType renderer draws glyphs:</p>
<div><pre tabindex="0"><code data-lang="rust"><span><span>1</span><span><span>for</span><span> </span><span>polygon</span><span> </span><span>in</span><span> </span><span>glyph</span><span>.</span><span>polygon_stack</span><span> </span><span>{</span><span>
</span></span></span><span><span>2</span><span><span>    </span><span>for</span><span> </span><span>px</span><span> </span><span>in</span><span> </span><span>polygon</span><span>.</span><span>pixels</span><span>()</span><span> </span><span>{</span><span>
</span></span></span><span><span>3</span><span><span>        </span><span>layer</span><span>.</span><span>putpixel</span><span>(</span><span>px</span><span>,</span><span> </span><span>draw_color</span><span>);</span><span>
</span></span></span><span><span>4</span><span><span>    </span><span>}</span><span>
</span></span></span><span><span>5</span><span><span></span><span>}</span></span></span></code></pre></div>
<p>Uh oh! The TrueType renderer is making a ludicrous number of calls to <code>putpixel()</code>, and the underlying scrolling view doesn’t have the opportunity to understand the wider context of how much area the renderer is going to draw to.</p>
<p>To resolve this, <a href="https://github.com/codyd51/axle/commit/83a83d4406e045bb10979539f46801870e8798cc">I added polygon stacks</a> as one of the ‘fundamental things’ that all view buffer implementations need to know how to draw, alongside primitives like lines, circles and rectangles. This gives the scroll view <a href="https://github.com/codyd51/axle/commit/f30eab1693048f10f975264173438f5442e1f1a7#diff-ffa116cf6e7dec60698c136aeb0e3e2931bf0f14e649dc53e04bea877d11cdd8R81">an opportunity</a> to say “Ah ha, we’re drawing a big polygon! I can allocate all the tiles upfront!”, which is much quicker than the alternative. I don’t love having this as a fundamental primitive<span><sup><i>✱</i></sup></span>, as filling arbitrary polygons conceptually seems quite a bit heftier than rasterizing simpler shapes, but it’s practical and works well.</p>

<div>

<p>Another option that I weighed for this API design was to let clients ask a graphics layer to “get this area ready for drawing”, explicitly priming the layer for a bunch of draw calls in one region. I didn’t love this either.</p>

</div>
<h2 id="improving-libgui">Improving libgui</h2>
<p>Every time I implement a new graphical application against my stack, I come up against little limitations or papercuts that I’ve never run into before. These could be in the GUI toolkit, IPC, driver interface, kernel features, etc. This gives me an opportunity to just-in-time improve the system and APIs to facilitate whatever I’m building at the moment. It’s the fun of OS development! When building out UEFIRC, I made a few notable tweaks and fixes to libgui:</p>
<ul>
<li><a href="https://github.com/codyd51/axle/commit/d5d04fd68a0e9fa21d7bcc073bd68ba3fa075b3e">libgui provides left-click-up events.</a></li>
<li><a href="https://github.com/codyd51/axle/commit/e4688ae376159a919ba337ae5bf75be38a7650ad">Labels can be dynamically resized.</a></li>
<li><a href="https://github.com/codyd51/axle/commit/087ed729d1b99937b27f48cd69b42400bfb9f712">Labels render TrueType fonts instead of the old bitmap font.</a></li>
<li><a href="https://github.com/codyd51/axle/commit/072e9d5580105558be169829e8917df45f2ee721">Buttons render TrueType fonts instead of the old bitmap font.</a></li>
<li><a href="https://github.com/codyd51/axle/commit/520fc3a5a12914958b19d3e30d66ba1717cba356">TrueType renderer provides more layout information when rendering a glyph.</a></li>
<li><a href="https://github.com/codyd51/axle/commit/2d8b1fdddc60c3e3e2992cf1ba71804439f36609">TrueType parser models and exposes more metrics from the font.</a></li>
<li><a href="https://github.com/codyd51/axle/commit/c3361139d74ba0f774abc6f9baddb16b2c257548">Fix subtle layout</a> <a href="https://github.com/codyd51/axle/commit/5f9f063404db84bee6d56901fb617e45d73aec0d">and spacing bugs</a> <a href="https://github.com/codyd51/axle/commit/e287d9506097d1bb2dba7ace87adc39ca51632c5">in TrueType renderer.</a></li>
<li><a href="https://github.com/codyd51/axle/commit/8847e63d4e74968ab7c480526bc197b10c8e74f1">TextInputView supports user-provided keypress callbacks.</a></li>
</ul>
<h2 id="completely-unnecessary">Completely unnecessary</h2>
<p>The IRC client itself, as a client, isn’t that usable because this project is an elaborate joke<span><sup><i>✱</i></sup></span>.</p>

<div>

<p>I told a friend I was making a joke project, then explained it. She said she wasn’t sure when to laugh. I’m not so sure either.</p>

</div>
<p>However, if you’re ever feeling mad about UEFI’s TCP/IP stack, I know <em>just</em> the tool to complain about it with.</p>
<p>As a final tip of the hat, I joined the UEFI <code>#edk2</code> development IRC channel <em>from</em> UEFI and bid good tidings.</p>
<img src="https://axleos.com/an-irc-client-in-your-motherboard/images/uefi_channel3.png">
<p>Here’s a demo showing UEFIRC in action.</p>
<p>
<iframe width="80%" height="390px" src="https://www.youtube.com/embed/Fb6I5j608QA?si=_jTPFGlHfdJYKFds" title="YouTube video player" frameborder="0" allow="autoplay; encrypted-media; picture-in-picture;" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
</p>
</content>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Lego Model of Financial Capitalism (174 pts)]]></title>
            <link>https://www.asomo.co/p/a-lego-model-of-financial-capitalism</link>
            <guid>39940959</guid>
            <pubDate>Fri, 05 Apr 2024 11:10:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.asomo.co/p/a-lego-model-of-financial-capitalism">https://www.asomo.co/p/a-lego-model-of-financial-capitalism</a>, See on <a href="https://news.ycombinator.com/item?id=39940959">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg" width="1200" height="712.0879120879121" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:864,&quot;width&quot;:1456,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:371843,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F830555aa-1fcf-482c-a7ad-6b33254f3649_1895x1125.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><em><strong><span>Dear readers: this piece builds upon my </span><a href="https://www.asomo.co/p/a-lego-model-of-corporate-capitalism" rel="">Lego Model of Corporate Capitalism</a></strong></em></p><p><span>Our economies are held together by money, and - most of the time - we hand it over in exchange for goods or labour. Occasionally, however, we hand it over in exchange for </span><em>future money</em><span>. For example, if you buy a share on the stock-market, you’re handing over money for a contract promising you a cut of the future profits of a company.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png" width="533" height="274" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:274,&quot;width&quot;:533,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:83060,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7dd44d74-b89c-43f1-9232-ada295da63ed_533x274.png 1456w" sizes="100vw"></picture></div></a></figure></div><p><span>This type of exchange, in which we exchange money for promises-for-future-money, is called </span><em>financial exchange</em><span>, and the </span><em>financial markets </em><span>are where it happens. Like many markets, the financial markets have a retail side - the smaller players like you and me - and a </span><em>wholesale</em><span> side, the mega players like funds, commercial banks and investment banks. The latter players cluster in big cities like London, New York, Singapore and Hong Kong, and in </span><a href="https://www.asomo.co/p/a-lego-model-of-corporate-capitalism" rel="">A Lego Model of Corporate Capitalism</a><span> I showed them taking the lead on </span><em>capitalizing</em><span> international corporations. They ‘charge up’ corporate entities with money in exchange for financial contracts like shares and bonds, after which the corporates can blast that out to mobilize workers and suppliers to produce stuff…</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg" width="1200" height="720.3296703296703" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/bbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:874,&quot;width&quot;:1456,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:555716,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbbfe80ea-7c93-4f35-b0e2-7c78fc08158a_2000x1200.jpeg 1456w" sizes="100vw"></picture></div></a><figcaption></figcaption></figure></div><p>That stuff is then is sold to customers, and the revenues are refracted out as bonuses to management, interest to creditors, taxes to governments and dividends to shareholders.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg" width="1200" height="720.3296703296703" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:874,&quot;width&quot;:1456,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:503120,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dd8cba3-e233-4c82-bc3f-26709959db44_2000x1200.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>The company shown above is some kind of industrial corporation, but let’s start from scratch in a different sector. Let’s say you’re actually a wealthy property developer who wants to build a luxury office complex for startups in down-town Manhattan. You envision a 6-storey building with open-plan workspaces, a meditation den, a fitness spa, and even sound-proofed booths for therapeutic screaming when the existential emptiness of yuppie life kicks in. Here’s the vision:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg" width="1456" height="941" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:941,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:131089,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe18e5b3a-4b04-4cd7-a8bb-0c06f1473352_1559x1008.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>Above I said ‘you want to build’, but that’s just a colloquial figure of speech. It’s not like you’re going to turn up with a spade and trowel to lay foundations for this building. No, what you </span><em>actually </em><span>want is for a thousand builders with specialist skills, equipment and materials to turn this vision into a reality. You nevertheless want to claim </span><em>ownership</em><span> of what they build, so to make sure they have no ownership rights, you need to approach them as </span><em>suppliers</em><span> selling goods and services in the open markets. That’s going to cost you about $100 million.</span></p><p><span>The way to obtain that money is through </span><em>financial exchange</em><span>: you need investors to give it to you in exchange for promises-for-future-money. Investment banks are specialists in convincing big investors to do this, but this is a small-ish project and you don’t want a massive investment bank like Goldman Sachs. Instead, you want a small boutique investment bank. You find one called BlueGate Partners. On their website they describe themselves as follows:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg" width="879" height="287" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:287,&quot;width&quot;:879,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:44205,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F93017e57-f41d-4b12-961d-9fc8267b8550_879x287.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>That phrase ‘debt and equity capital’ is finance slang for creditors and shareholders who will put in money for different promises-for-future-money. ‘Equity investors’ are shareholders: they put in money in exchange for shares of ownership that will entitle them to a morphing stream of future money (dividends). ‘Debt investors’ are creditors: they put in money in exchange for a promise for an fixed amount of future money (interest and principle). The promise given to equity investors is </span><em>relative </em><span>- the returns depend on how well things turn out - while the promise given to creditors is </span><em>absolute </em><span>- the amounts remains the same regardless of circumstances. From a legal perspective, absolute promises tend to be </span><em>senior</em><span>: they get dealt with first if everything goes to shit (which becomes particularly important in bankruptcy proceedings).</span></p><p><span>Equity and debt investors will </span><em>jointly capitalize</em><span> projects or companies alongside each other. That said, the specific balance of power between them - and between the relative and absolute promises they’ve extracted - can create some interesting properties. One of these is </span><em>leverage</em><span>, the phenomenon by which debt investors amplify the returns of equity investors in exchange for protection (equity investors agree to absorb the first losses in a project, but also get to claim amplified gains). Leverage increases as the ratio between debt investors and equity investors increases, so the first thing you and BlueGate will work on is the optimal mix of equity and debt. BlueGate suggests a ratio of 1:4, with 20% equity and 80% debt.</span></p><p>Phase 1 is to deal with the equity chunk, which will be $20 million in total. BlueGate and your laywers set up a new legal entity, which you name Bloks Inc. You’re going to be the lead investor, and will put in $5 million of your own money for 25% of the shares. BlueGate assures you that they are experts in ‘equity placement’, and can find a home for the remaining 75% of the shares. They have many friends at funds who can be convinced to put up the other $15 million.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png" width="1200" height="750.8241758241758" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:911,&quot;width&quot;:1456,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:803681,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" title="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9901d3cd-eee5-42d4-9715-f00e0a5a8ca0_1594x997.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>After a few weeks, and a range of meetings, BlueGate’s team secures pledges for $5 million from a ‘family office’ that runs money for the super-rich, $5 million from an offshore fund, and $5 million from a local property investment fund. The $20 million equity chunk is now ready, but it will only be enough to cover the planning, permits, foundations and ground floor. </p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg" width="728" height="470.5" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;normal&quot;,&quot;height&quot;:941,&quot;width&quot;:1456,&quot;resizeWidth&quot;:728,&quot;bytes&quot;:134548,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F360688ba-3a53-4b91-878e-9416b89a3e5a_1559x1008.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>So, Phase 2 of the plan is to raise $80 million in debt financing. Again, BlueGate showcases their extensive ties to the super-rich and the super-big:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png" width="1200" height="1200" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:1456,&quot;width&quot;:1456,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:1371859,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1595bc23-536f-4551-8f52-daa7e4cd26d0_1465x1465.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>They want to create a blend of different debt investors (creditors), so their first step is to approach two commercial banks. They get each of them to grant you $20 million in credit (incidentally, this will involve those banks </span><a href="https://www.asomo.co/p/the-deposit-myth" rel="">creating new money</a><span>). This $40 million can probably scrape you another three floors…</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg" width="1456" height="941" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:941,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:128105,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2072459b-ddcb-43ea-a5a6-9c3201e66e93_1559x1008.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>There’s still one more normal floor and a fancy roof level to be financed, plus all the trimmings, so BlueGate now approaches a range of specialist funds and high-net-worth individuals to convince them to buy bonds. ‘Buying a bond’ is just the act of lending money in exchange for a fixed-promise-for-future-money encoded into a tradeable contract (‘bond’).</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg" width="1456" height="941" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:941,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:132738,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3714a80f-86b2-491e-bb23-a7d1738c1ccb_1559x1008.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Now that both the equity and debt financing is in place, let’s zoom out and see our Bloks Inc. corporate circuit in action. Imagine the money from the creditors (debt investors) and shareholders (equity investors) charging Bloks up like a battery. That money is then blasted out to mobilize a small army of contractors, suppliers and construction workers who will make the building emerge out of the ground as the money runs down.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg" width="1200" height="720.3296703296703" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:874,&quot;width&quot;:1456,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:506856,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fe6e012-ffeb-4c60-9fc7-c85394dd1176_2000x1200.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p data-attrs="{&quot;url&quot;:&quot;https://www.asomo.co/p/a-lego-model-of-financial-capitalism?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:&quot;button-wrapper&quot;}" data-component-name="ButtonCreateButton"><a href="https://www.asomo.co/p/a-lego-model-of-financial-capitalism?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p><p>As the workers leave, you’re left with part ownership of a completed building, alongside a bunch of other financiers who also want a cut. To realize that cut, however, you need to make a profit, but where’s that going to come from? You need a customer…</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg" width="1456" height="874" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:874,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:436184,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F64fc2c49-79bb-40c3-9247-4d88b108fd21_2000x1200.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>You consider trying to manage the property yourself, finding renters who will pay. In this case your customers would be startups buying access to the building. Alternatively, you can just try flip the building by selling the whole thing to some much bigger property holder. You decide to go with this latter strategy, and BlueGate even has a bespoke service to help you find a buyer for the thing they helped finance. They introduce you to a major real estate investment trust (REIT), that has a pre-existing portfolio of buildings that they own and rent out. </p><p><span>From the perspective of this REIT, Blok Inc. appears in their world as a new potential </span><em>supplier</em><span> trying to flog them a new asset to add to their existing portfolio. The REIT boss instructs his analyst workers to do an assessment of your building…</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg" width="1200" height="720.3296703296703" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:874,&quot;width&quot;:1456,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:512514,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd7f5f437-6657-42b3-8951-d3676c95680b_2000x1200.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>Let’s assume that the REIT decides to buy the building. This is where leverage can get fun. If the rental market is solid, the analysts might suggest a price of $120 million for the building. From the </span><em>combined perpective</em><span> of the equity and debt investors in your project, that’s a 20% profit relative to how much the building cost to build. Nevertheless, given that the debt investors’ cut is absolute - it stays fixed - none of that relative increase goes to them. The entire increase accrues to the equity investors, which means - relative to their opening stake - their money just </span><em>doubled</em><span> from $20 million to $40 million (with your personal stake going from $5 to $10 million). That’s leverage for you. It’s sometimes called ‘gearing’, because just like a gear might amplify the affect of a foot pressing down on a bicycle pedal, leverage transmits an amplified positive return to the equity stake. Here’s a simplified representation (</span><em>it’s simplified because the amounts shown don’t account for interest owed to debt investors, but let’s just ignore that</em><span>):</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg" width="1456" height="1133" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1133,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:153267,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fce60e2b7-57b4-4ea4-be6c-6c07197bcad3_1559x1213.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Unfortunately for you, gearing works both ways. If, for example, the building gets completed just as a global pandemic hits and demand for office space plummets among tech startup workers, the analyst valuation of the building might crash to $90 million. This hits the equity investors first. In this case, a 10% loss relative to building costs crushes the equity by 50%. You get an amplified version of the loss. The debt investors take their absolute share and leave. BlueGate mourns your loss, after which they take their advisory fee - which might significantly eat into that remaining slice you have - and leave.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg" width="1456" height="958" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:958,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:121354,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2e47a8fb-4902-468f-8ee7-0a9bb28c33c8_1559x1026.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><em>Calling all lecturers and professors: Next week I have the pleasure of presenting my Lego models to students at Stony Brook University in New York. If you’d like me to talk to your students, drop me a line!</em></p><p><span>What I’ve shown above is pretty basic finance, and there are two things to say about basic finance. Firstly, it’s built upon a much deeper and richer foundational layer of ecological systems, human beings, politics and - eventually - monetary systems, all of which I cover in my </span><a href="https://www.asomo.co/s/econ-life-101" rel="">Intro to Economic Life</a><span> course. </span></p><p>Secondly, basic finance can be massively complexified. There are many exciting, and increasingly dodgy, things you can do to play a more advanced finance game, such as:</p><ol><li><p><strong>Offshore finance</strong><span>: build complex legal structures, like a shell company that owns a shell company that lends to a shell company that is also owned by you, so that it can buy the shares</span></p></li><li><p><strong>Financial engineering</strong><span>: create new and weird combos and hybrids of debt and equity (e.g. Silicon Valley thrives on ‘convertible notes’, debt instruments with inbuilt options that can convert them to equity)</span></p></li><li><p><strong>Finance your financing</strong><span>: In our original scenario above, you were required to put in $5 million, but you could borrow $4.5 million of that from another bank (or other debt investors), which means you could put in $500k to get a 25% equity stake, which means you’re now </span><em>leveraging your leverage!</em><span> (something that hedge funds are notorious for doing)</span></p></li><li><p><strong>Securitization</strong><span>: the original banks involved might take their stakes and place them in a new offshore vehicle, alongside 1000 other loan contracts they’ve harvested, after which they can ‘tranche’ that package into different equity and debt slices that can be sold off. Now the combined interest that accrues to the pool of loan contracts can get refracted out like a monetary rainbow to a whole range of new investors, some of whom might insanely leveraged</span></p></li><li><p><strong>Derivatives</strong><span>: you might make bets on the side to protect yourself against changes in the average price of properties (e.g. property index derivatives), while the banks might be using interest rate derivatives to manage various aspects of their exposure. Perhaps your bond-holders might pay away some of their interest into a credit default swap (CDS) offered by an investment bank, in exchange for compensation in the event of your bankruptcy</span></p></li><li><p><strong>Mix it all up</strong><span>! Perhaps that investment bank can take the other side of that credit default swap, and place it - alongside other CDS contracts - into a new offshore vehicle. Now they can sell the tranches of that new </span><a href="https://en.wikipedia.org/wiki/Synthetic_CDO" rel="">SYNTHETIC CDO</a><span>! This is highly recommended if you wish to trigger a global financial crisis.</span></p></li></ol><p data-attrs="{&quot;url&quot;:&quot;https://www.asomo.co/p/a-lego-model-of-financial-capitalism/comments&quot;,&quot;text&quot;:&quot;Leave a comment&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://www.asomo.co/p/a-lego-model-of-financial-capitalism/comments" rel=""><span>Leave a comment</span></a></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Almost no one cares if your site is not on social media (127 pts)]]></title>
            <link>https://notes.ghed.in/posts/2024/no-one-cares-site-on-social-media/</link>
            <guid>39940922</guid>
            <pubDate>Fri, 05 Apr 2024 11:04:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://notes.ghed.in/posts/2024/no-one-cares-site-on-social-media/">https://notes.ghed.in/posts/2024/no-one-cares-site-on-social-media/</a>, See on <a href="https://news.ycombinator.com/item?id=39940922">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>


<p>5/4/2024</p>




<p>In March 2024, I ran an experiment in my Portuguese-written blog: I stopped distributing its content on social media (Mastodon, mostly) and messaging apps (Telegram and WhatsApp channels). It has a small following in a few places — ~2,9k on Telegram, ~450 on WhatsApp and three Mastodon profiles (two with autopost) that sums ~5k followers.</p>

<p>The result was that… little has changed.</p>

<p>The blog got ~107k unique visitors who viewed ~172k pages. Compared to the average of the previous six months, the March figures were 33.7% and 30.3% higher, respectively.</p>

<p>The reason for this increase, however, was an uncontrollable external player: Google. On March 27<sup>th</sup>, I posted a link in our readers forum of a Brazilian viral anonymous Google spreadsheet with reports of bad companies to work for. Google, for any inexplicable reason, put this link in front of many pairs of eyes, and almost 38k people arrived at my blog in the few days remaining in March.</p>

<p>(This created tragicomic situations, such as people posting anonymous reports of toxic companies in the comments of the blog and one that threatened to sue me if I didn’t take down the spreadsheet.)</p>

<!--break-->
<p>Without this little crazy viral, the audience in March would have been 13.7% and 28.8% lower than the average of the previous six months. What makes more sense, but I don’t know if it’s fair to take viral out of the equation.</p>

<p>In February, for instance, Google aimed its cannon of people at a report I wrote about using Kindle without an Amazon account. Why? Who knows! In that month, this single text accounted for 27.7% of unique visitors and 18.5% of page views.</p>

<p>Like any authoritarian entity, Google punishes and graces without clear criteria. Today you get free traffic from a meaningless viral, tomorrow… Maybe my next experiment is to take my blog off the Google Search.</p>

<p><code>***</code></p>

<p>Social media, those I was absent from in March, give no web traffic at all — and that’s not news. Even for this reason I have unfolded my work in them in two ways: either by automating the distribution of the site’s content, or by replicating it in full. In both, I don’t have the expectation of increasing access/traffic to my blog.</p>

<p>There is a manifest unwillingness, in some cases, of social platforms with external websites and links. And it’s general. It’s rare for me to believe in something that comes out of the mouth of a big tech C-level, but Adam Mosseri, from Meta, <a href="https://www.threads.net/@mosseri/post/CuZ3LjhNl0m">is right</a> regarding this: the headache that these companies get when supporting journalism does not compensate for the tiny return they have, because these companies don’t care about the subjectivity and nuances of complex or hard subjects and, in fact, they do not earn anything by sending users out of their domains.</p>

<p>If my operation depended on traffic, I would worry more about all these numbers and presence on social media. (And Google, on whom modern journalism <a href="https://retrododo.com/google-is-killing-retro-dodo/">is dependent and/or hostage</a>, depending on how you face the situation.) That’s not my case.</p>

<p>And, because that’s not the case, raw numbers don’t tell the whole story of my March social media blackout. Some readers missed seeing updates on Mastodon, Telegram, even LinkedIn. Not that there is a lack of ways to follow what I post, but it’s that, like it or not, online life happens in these places and visiting sites directly, following them by RSS or even by the newsletter are practices out of fashion.</p>

<p><code>***</code></p>

<p>That said, how do we continue from now on? I don’t share the optimism of colleagues who participated in the last <a href="https://reutersinstitute.politics.ox.ac.uk/journalism-media-and-technology-trends-and-predictions-2024">Reuters Institute annual survey of trends and predictions</a>, that WhatsApp and Threads will be spaces to leverage reach. They are both Meta platforms, after all.</p>

<p>Another popular trend, focusing on direct traffic, has already been a reality in my blog for a good few years. I will continue to invest in this and in decentralized platforms. Reader’s support, spreading the word and funding the project (there’s a <a href="https://manualdousuario.net/apoie/">paid subscription offer</a>), is essential.</p>

<p>Do you know those action movie traps, in which the characters are in a room and opposite walls are slowly approaching in order to crush them? I see the web there in the middle, squeezed between cheap social media platforms and stupid generative artificial intelligences.</p>

<p><code>***</code></p>

<p>The funniest thing about all this? There was little variation in the gain and loss (in the case of X/Twitter) of followers. I almost forget to mention this, for you to feel how I’m concerned with social media.</p>

<p>By the way, the audience stats of my Portuguese-written blog, object of this experiment, <a href="https://manualdousuario.net/?koko-analytics-dashboard=1">are open</a>.</p>




</article></div>]]></description>
        </item>
    </channel>
</rss>