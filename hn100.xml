<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 07 Apr 2024 23:00:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Xemu: Original Xbox Emulator (136 pts)]]></title>
            <link>https://xemu.app/</link>
            <guid>39962184</guid>
            <pubDate>Sun, 07 Apr 2024 17:18:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://xemu.app/">https://xemu.app/</a>, See on <a href="https://news.ycombinator.com/item?id=39962184">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main"><div><p><img id="xbox-logo" src="https://xemu.app/xbox_logo.png" width="450"></p><div><h2><canvas id="logo-canvas"></canvas> <img alt="xemu logo" id="logo-fallback" src="https://xemu.app/logo-green-jumbotron.svg"></h2><h4>Original Xbox Emulator</h4><p>A free and open-source application that emulates the original Microsoft Xbox game console, enabling people to play their original Xbox games on Windows, macOS, and Linux systems.</p><div><p>Version 0.7.120 (Mar 23, 2024) <br></p></div></div></div><div><p><img src="https://xemu.app/linux_title_bar_dark_2x.png"></p></div><div><div><h4><i></i>Open Source</h4><p>The source code for xemu is available on <a href="https://github.com/xemu-project/xemu">GitHub</a>. You are invited to help improve the project! Learn more <a href="https://xemu.app/docs/dev/">here</a>.</p></div><div><h4><i></i>Cross Platform</h4><p>xemu runs natively on Windows, macOS, and Linux platforms. Binaries are available for all platforms, or you can build from source if desired. Learn more <a href="https://xemu.app/docs/download/">here</a>.</p></div><div><h4><i></i>Low Level Emulation</h4><p>xemu emulates the hardware of the original Xbox, providing superior compatibility with kernels, titles, and homebrew applications.</p></div><div><h4><i></i>Controller Support</h4><p>Built on <a href="https://www.libsdl.org/">SDL2</a>, xemu supports virtually all controllers. Connect up to 4 controllers at any time, just like a real Xbox. Learn more <a href="https://xemu.app/docs/input/">here</a>.</p></div><div><h4><i></i>Snapshots (Save States)</h4><p>No need to wait for game checkpoints. xemu supports saving the current machine state and loading it back up at any time. Learn more <a href="https://xemu.app/docs/snapshots/">here</a>.</p></div><div><h4><i></i>Render Scaling</h4><p>Breathe new life into your original Xbox games by easily increasing the resolution that games render at, on the fly. Scale up from 480p to 1080p at the click of a button.</p></div><div><h4><i></i>Networking</h4><p>Connect to other instances of xemu and real Xboxes, locally or over the Internet. Supports tunneling services and Xbox Live recreation projects. Learn more <a href="https://xemu.app/docs/networking/">here</a>.</p></div><div><h4><i></i>Community</h4><p>xemu has a thriving online community of original Xbox fans. Set up multiplayer matches, get help running xemu, and more by joining our community on <a href="https://discord.gg/ayyjsuM">Discord</a>!</p></div></div><div><h2 id="compatibility">Compatibility</h2><div><p><b>Note:</b> Title compatibility status is provided by volunteer reporters in the community, as the reporter experienced the title in the current version of xemu on their computer at time of reporting. As the project evolves, reports may need to be updated. You are invited to help improve the project by submitting an updated compatibility report. Join the Discord server to learn how to contribute!</p></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Adventures Making Vegemite (126 pts)]]></title>
            <link>https://daveon.design/adventures-making-vegemite.html</link>
            <guid>39960788</guid>
            <pubDate>Sun, 07 Apr 2024 13:55:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://daveon.design/adventures-making-vegemite.html">https://daveon.design/adventures-making-vegemite.html</a>, See on <a href="https://news.ycombinator.com/item?id=39960788">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main-content">
<article><section>
<p><span><span>To non-Australians, Vegemite</span> is one of the strangest food products you’re likely to ever encounter.</span> <span>It’s a dark brown, almost black, shiny paste with a pungent scent, and a very strong, almost indescribable taste that is strongly umami and very salty.</span> </p><figure>
<img src="https://daveon.design/images/vegemite.webp">
</figure>
<p><span>It is a little like soy sauce in solid form.</span> </p><p><span>We tend to eat it on toast for breakfast.</span> <span><span></span> <span><span>The trick is not to spread it thickly like peanut butter; instead, you take about a quarter of a teaspoon’s worth and scrape it thinly over the entire slice.</span> <span>It also goes very nicely in a toasted cheese sandwich.</span> </span> <span></span> </span><span> </span></p><p><span>It sounds unique, but perhaps the strangest thing about it is that it is <em>not:</em> the <span>British have Marmite, which tastes similar but is runnier, Australians have a <em>second</em> yeast extract spread called <span>Promite,<span><span></span> <span><span>In my personal opinion, even better than Vegemite.</span> </span> <span></span> </span><span>  the <span>Germans and Swiss have Cenovits and Vitam-R,<span><span></span> <span><span>I haven’t tried either of these.</span> </span> <span></span> </span><span>  and a <span>Latvian friend once gave me a jar of a tan-coloured, honey-consistency thick liquid he told me was like Vegemite and I (sadly) found inedible.</span> </span></span></span></span></span></span></p><p><span>This leads to spirited debates about which is best and, like a true Australian, I mock Marmite to the British friend with whom I made Vegemite for this article,<span><span></span> <span><span>Marmite is the <em>inferior</em> product: it is not a solid paste but is runny, and has a slightly less strong taste.</span> </span> <span></span> </span><span>  even as he keeps <span>Marmite in his cupboard and would never touch Vegemite.</span> <span>Both of us quietly admit they’re very similar and I have many times bought Marmite when Vegemite was not available.</span> <span><span></span> <span><span>When you live overseas, you make do with what you can get.</span> <span>In Australia, you’d never admit to eating Marmite.</span> <span>But among fraternity of overseas Aussie citizens, there’s an unspoken knowledge that we’ve all lowered ourselves to Marmite from time to time.</span> </span> <span></span> </span><span> </span></span></span></p><p><span>But even if thick black pungent salted umami spreads are common, <strong>how are they made?</strong></span> <span>And <strong>what is such a strange spread really made of?</strong></span> </p><p><span>The jar claims to be a ‘yeast extract’, and Aussie rumour had it that it was made from leftovers from making beer.</span> <span>Very Australian.</span> <span>Since it was invented in the 1920s, I personally had a mental image of a specific strain of yeast fermenting to produce some precursor substance, <a href="https://worldbuilding.stackexchange.com/questions/56560/can-you-make-arbitrary-food-out-of-yeast"><span>Asimov-style</span></a>.</span> </p><p><span>Then my Marmite-loving British friend sent me <a href="https://www.youtube.com/watch?v=ukd3lg3Z_Pg">this video</a>,<span><span></span> <span><span>From the <a href="https://www.youtube.com/@HowToCookThat"><em><span>How To Cook That</span></em></a> <span>Youtube channel by Ann Reardon.</span> </span> <span></span> </span>  and one afternoon we made it.</span><span> <span><span></span> <span><span>By ‘we made it’, it’s more that I’d casually mentioned I’d like to try, and then at the pub the previous evening he said he had all the ingredients and would I like to join him the next afternoon?</span> <span>In other words: his effort, his ingredients, his kitchen, and I took photos.</span> </span> <span></span> </span><span> </span></span></span></p><figure>
<img src="https://daveon.design/images/vegemite-results-toast.webp"><span></span>
</figure>
<section><h2 id="ingredients">Ingredients</h2>
<p><span>A homebrewing friend provided:</span></p><figure>
<img src="https://daveon.design/images/vegemite-yeast-slurry.webp">
</figure>
<ul>
<li><span>The yeast slurry from the bottom of a batch of beer (from a plain lager)</span></li><li><span>A fermented malt wort made from dry malt mixed with water</span></li></ul>
<p><span>The malt was very liquid and we boiled it down to a thick syrup.</span> <span>You could likely use supermarket malt.</span> </p><figure>
<img src="https://daveon.design/images/vegemite-slurry-liquid-boiling.webp"><figcaption>Boiling the skimmed yeast slurry liquid.</figcaption><span></span>
</figure>
<p><span>The yeast slurry in Ann Reardon’s video was separated into yeast and liquids via a home-made washing-machine centrifuge.</span> <span>But our slurry had been sitting in my friend’s fridge for a few days, and he simply poured off the top.</span> <span>This liquid, a pale clear tan, we boiled down into a thick, dark brown syrup too.</span> <span>Initially, the kitchen smelled like hot beer, but it soon changed to smell like something recognisable as a Vegemite-like scent.</span> <span><span></span> <span><span>It was not unpleasant—if you like Vegemite—but it was strong, and at some point despite the winter outside every window in the apartment was opened.</span> </span> <span></span> </span><span> </span></p><figure>
<img src="https://daveon.design/images/vegemite-boiling-down.webp"><figcaption role="complementary "><span>Left: the malt reducing to a syrup; right: the slurry liquid also being boiled down.</span> </figcaption><span><span></span>
</span></figure><p><span>A good half-liter or more of yeast-slurry-liquid turned into only a couple of tablespoons of dense brown syrup.</span> <span>This is definitely a recipe where large starting volumes are needed, and you won’t get a large quantity result.</span> </p><figure>
<img src="https://daveon.design/images/vegemite-boiled-malt-and-slurry-liquid-2.webp"><figcaption role="complementary "><span>The resulting two syrups: on the left, heavily reduced malt wort to a very dark, sweet, flavourful syrup; on the right, the main Vegemite flavour comes from the boiled-down reduction from the yeast slurry.</span> <br><span>A good cooking blog would show these two dishes very clean, with no drip remnants, but all this stuff is thick, sticky, and messy.</span> </figcaption><span><span></span>
</span></figure><p><span>The final major ingredient is nutritional yeast.</span> <span>We mixed several tablespoons with warm water to make a light yellow sludge.</span> <span><span></span> <span><span>The names for the ingredients—slurries, sludges—are as appetizing as many non-Australians claim Vegemite to be.</span> </span> <span></span> </span><span> </span></p><h3 id="taste-testing">Taste Testing</h3>
<p><span>A taste test gave:</span></p><ul>
<li><span>Boiled slurry liquid: Vegemite or Marmite overtones, but surprisingly bitter (perhaps the result of hops?)</span> </li><li><span>Boiled, thick malt: unexpectedly, a strong ‘this taste is not Vegemite but is in Vegemite’ response.</span> <span><span></span> <span><span>Vegemite does not taste like malt, and you would never eat Vegemite and think of malt, yet boiled-down malt wort syrup distinctly resembles very sweet Vegemite.</span> </span> <span></span> </span><span> </span></li></ul>
</section><section><h2 id="mixing">Mixing</h2><span></span>
<div>
<p><img src="https://daveon.design/images/vegemite-mixing-1.webp">
</p>
<p><img src="https://daveon.design/images/vegemite-mixing-2.webp">
<br>Drag ⇢ 
</p></div>
<p><span>The Youtube video has no proportions, and even with large quantities of starting liquids we had only teaspoons of boiled-down results.</span> <span>Taking the entire boiled-down yeast slurry runoff liquid, perhaps three teaspoons or a little more, we added about half a teaspoon of malt, a generous dash of salt<span><span></span> <span><span>Vegemite is very salty.</span> </span> <span></span> </span><span>  and about a teaspoon of nutritional yeast sludge.</span> <span>Some vigorous mixing, some adjustment (a tiny bit more malt, plus a bit more salt)<span><span></span> <span><span>Vegemite is <em>very</em> salty.</span> </span> <span></span> </span><span>  and we deemed it done.</span> </span></span></p><figure>
<img src="https://daveon.design/images/vegemite-result.webp"><figcaption role="complementary "><span>The appetizingly-coloured result!</span> </figcaption><span><span></span>
</span></figure><p><span>It was not the right colour.</span> <span>Nor did it taste exactly like Vegemite, though it was very close.</span> <span>But the taste was <em>exactly</em> like <span>Marmite!</span> </span></p></section><section><h2 id="taste-tests">Taste Tests</h2>
<p><span>British friend:</span></p><blockquote>
<span>Bang on.</span> <span>Yeah.</span> <span>Feels like you should make it with beer that’s not very hoppy.</span> </blockquote>
<p><span>Friend’s partner:</span></p><blockquote>
<span>Really really close.</span> <span>A little more bitter maybe.</span> </blockquote>
<p><span>My wife:</span></p><blockquote>
<span>It’s softer, and more bitter, than Marmite.</span> <span>Marmite is very sticky, and this lacks the stickiness of Marmite.</span> <span>But it still tastes like Marmite.</span> </blockquote>
<p><span>To me: There was a strong hit of salt and then it fades into distinct Marmite flavour.</span> <span>Then a slight unwanted bitter note.</span> <span>The aftertaste is just like Vegemite.</span> <span>The next day, cold from the fridge, it seemed more sharp in flavour than the previous day.</span> <span>Overall, very in the Vegemite/Marmite family.</span> </p></section></section><section><h2 id="variations">Variations</h2>
<p><span><span>In the same taste-test,</span> we also tried a variant made by our Czech friend who supplied the beer slurry.</span> <span>He was not interested in recreating Vegemite <em>per se,</em> but in creating an umami stock he could use for cooking.</span> <span>So he’d boiled it down with stock cubes and a lot more malt: the colour was right (very dark due to the malt) but it was sweet and very much not Vegemite.</span> </p><p><span>For ours, the main consensus is that there is a hint more bitterness in our Mite than in Vegemite.</span> <span>This may be due to the beer that provided the slurry: it came from a well-hopped lager.</span> <span>Perhaps we need to add more malt to offset the bitterness; it’s a strong flavour though and risks overpowering the key Vegemite notes that come from the boiled-down beer slurry.</span> <span>I’d like to try again using slurry from making a stout or one of the sweeter porters, which may have fewer hops, a darker colour from the roasted grains, and could give a less bitter starting point.</span> </p><p><span>The majority of Australian beer is lager, and if Vegemite uses the most widely available beer remnants, it likely comes from some kind of light, hopped beer.</span> <span>I am curious how they get such a dark colour.</span> </p><p><span>Finally, Wikipedia claims Vegemite is made with celery and onion extracts.</span> <span>I’d like to try again using a stout/sweet porter as basis, and add celery salt and onion powder.</span> </p></section><section><h2 id="making-vegemite">Making Vegemite</h2>
<p><span><span>What did I get for an afternoon’s</span> worth of watching beery liquids boil down in my friend’s kitchen?</span> <span>I came home with three quarters of a teaspoon of brown runny goop… and somewhat of a fascination for <a href="https://en.wikipedia.org/wiki/Justus_von_Liebig#Marmite">how people invented this stuff in the first place</a>.</span> </p><figure>
<img src="https://daveon.design/images/vegemite-results-toast.webp"><figcaption role="complementary "><span>Left to right: Marmite, our spread, our Czech friend’s umami stock spread, and some nutritional yeast paste to round out the last slice of toast.</span> </figcaption><span><span></span>
</span></figure></section></article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mixture-of-Depths: Dynamically allocating compute in transformers (174 pts)]]></title>
            <link>https://arxiv.org/abs/2404.02258</link>
            <guid>39960717</guid>
            <pubDate>Sun, 07 Apr 2024 13:42:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2404.02258">https://arxiv.org/abs/2404.02258</a>, See on <a href="https://news.ycombinator.com/item?id=39960717">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2404.02258">View PDF</a>
    <a href="https://arxiv.org/html/2404.02258v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>Transformer-based language models spread FLOPs uniformly across input sequences. In this work we demonstrate that transformers can instead learn to dynamically allocate FLOPs (or compute) to specific positions in a sequence, optimising the allocation along the sequence for different layers across the model depth. Our method enforces a total compute budget by capping the number of tokens ($k$) that can participate in the self-attention and MLP computations at a given layer. The tokens to be processed are determined by the network using a top-$k$ routing mechanism. Since $k$ is defined a priori, this simple procedure uses a static computation graph with known tensor sizes, unlike other conditional computation techniques. Nevertheless, since the identities of the $k$ tokens are fluid, this method can expend FLOPs non-uniformly across the time and model depth dimensions. Thus, compute expenditure is entirely predictable in sum total, but dynamic and context-sensitive at the token-level. Not only do models trained in this way learn to dynamically allocate compute, they do so efficiently. These models match baseline performance for equivalent FLOPS and wall-clock times to train, but require a fraction of the FLOPs per forward pass, and can be upwards of 50\% faster to step during post-training sampling.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Adam Santoro [<a href="https://arxiv.org/show-email/7e3a6283/2404.02258">view email</a>]      <br>    <strong>[v1]</strong>
        Tue, 2 Apr 2024 19:28:11 UTC (1,763 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Blog posts, sorted by sleep (126 pts)]]></title>
            <link>https://breckyunits.com/sleepWriting.html</link>
            <guid>39960645</guid>
            <pubDate>Sun, 07 Apr 2024 13:32:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://breckyunits.com/sleepWriting.html">https://breckyunits.com/sleepWriting.html</a>, See on <a href="https://news.ycombinator.com/item?id=39960645">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p><span>April 5, 2024 — </span>Have you ever examined the correlation between your writing behavior and sleep?</p>
<p>I've written some things in my life that make me cringe. I might cringe because I see some past writing was naive, mistaken, locked-in, overconfident, unkind, insensitive, aggressive, or grandiose.</p>
<p>I now have a pretty big dataset to identify my secret trick to write more cringe: less sleep.</p>
<p>For this post I combined 2,500 nights of sleep data with 58 blog posts. A 7 year experiment to see how sleep affects my writing.</p>
<figure><a href="https://breckyunits.com/less-sleeping-less-thinking.png" target="_blank"><img src="https://breckyunits.com/less-sleeping-less-thinking.png" width="1240" height="942" loading="lazy"></a><figcaption><p><a href="https://www.datawrapper.de/_/YsKWU/">Interactive version.</a></p></figcaption></figure>
<div><h2>~7 Hours is the Cutoff</h2>
<p>Most posts above 7 hours of sleep do not need a sleep disclaimer. Most posts below 7 hours do. Not to say there is no value in the posts made with under 7 hours of sleep, it's just less rigorous writing (and thinking). On the plus side, writing with little sleep can be more concise at times. It might exaggerate the key ideas, but nevertheless identify them fearlessly and concisely.</p>
</div>

<figure><a href="https://breckyunits.com/sleeping-less-is-slightly-correlated-with-posting-more.png" target="_blank"><img src="https://breckyunits.com/sleeping-less-is-slightly-correlated-with-posting-more.png" width="1240" height="1006" loading="lazy"></a></figure>
<div><h2>More Posts. Similar Word Counts. Higher Scatteredness. Similar IQ. Higher Confidence.</h2>
<p>I actually post slightly more when I sleep less (Pearson correlation coefficient of -.14), but fewer words per post, which is indicative of a more "scattered" thinking state. I was surprised to see that I don't generally generate a whole lot more words in deprived sleep states. I <em>perceive</em> my writing to be smarter during those times, but looking back it's clearly not.</p>
</div>
<div><h2>Other Social Media</h2>
<p>Besides this blog, I have long written and posted content to HackerNews, Reddit, other discussion forums, and at times Twitter, Instagram, Facebook, YouTube, and LinkedIn. I haven't done the data grunt work, but if my memory serves me correctly I am confident my publishing behavior on those platforms mirrors the same patterns as my blogging behavior, with regards to sleep.</p>
</div>
<div><h2>Public vs Private Writing</h2>
<p>There have been stretches where I published little publicly but was generating a similar amount of tokens, just in private groups. My writing patterns in private groups also mirrors my patterns on this blog, with regards to sleep.</p>
</div>
<p>Tangent: when I've been lucky to be a part of brainiac private organizations (such as Microsoft, YCombinator, Our World in Data, academia, and so on), I got to read so much brilliant writing by people who rarely post publicly, and every time I think about that I am humbled. There is so much well written content on the public web, and to think it is <em>only a fraction</em> of the great content ever written, is humbling.</p>
<div><h2>Sleep Disclaimers</h2>
<p>I realize I already have an unofficial "sleep disclaimer" policy. I have de-indexed (but kept published) at least a couple of sleep-deprived posts, and added a disclaimer/correction to at least 2 others. Now with this dataset I am sure I will append a few more sleep disclaimers.</p>
</div>
<p>With sleep disclaimers, I can say, "hey, might be interesting ideas here, but don't train too heavily on this".</p>
<div><h2>Grateful for Git</h2>
<p>I am happy with my decision to use git for this blog so that I always keep an honest history, while still being free to down weight sleep deprived content and try and keep my more thought-out out ideas front and center.</p>
</div>
<div><h2>Benefits of Peer Review</h2>
<p>I don't have a column for it (yet), but it does seem my better posts often were the ones where I took the time to get friends and/or colleagues to review, IRL. Sleep deprived posts I would generally blast out without talking to anyone.</p>
</div>
<p>Peer review is a great filter, and a great forcing function to put more effort in.</p>
<p>On the other hand, because the importance of ideas varies by so many orders of magnitude (there are "black swan" ideas), you could make an argument that spending too much time in one area of ideas isn't the optimal strategy, and publishing things as you go, improving them later, is an approach with merit.</p>
<div><h2>Writing data reflects the current phenomena in your brain</h2>
<p>It seems when I sleep less, my brain is in more of a pleasure seeking state, has a bias to action ("don't think, just do"), and feels less pain than in a more rested state. Less sleep means less critical thinking. Less sleep seems to make me less willing to invest the time in rewiring my brain to correct mistaken thought habits. </p>
</div>
<div><h2>Grateful for FitBit</h2>
<p>I started wearing a Microsoft Band when it first came out in November 2014. Then a Band 2, then FitBit Charge, Ionic, Versa, and now Sense 2. I am grateful for all the people involved with creating these things. I think continued progress in the wearable sensor field is the best bet for improving human health.</p>
</div>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I open-sourced the in-memory PostgreSQL I built at work for E2E tests (137 pts)]]></title>
            <link>https://github.com/stackframe-projects/pgmock</link>
            <guid>39960537</guid>
            <pubDate>Sun, 07 Apr 2024 13:13:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/stackframe-projects/pgmock">https://github.com/stackframe-projects/pgmock</a>, See on <a href="https://news.ycombinator.com/item?id=39960537">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">pgmock</h2><a id="user-content-pgmock" aria-label="Permalink: pgmock" href="#pgmock"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">
  <a href="https://stackframe-projects.github.io/pgmock" rel="nofollow">Demo</a> —
  <a href="https://discord.gg/pD4nyYyKrb" rel="nofollow">Discord</a>
</h3><a id="user-content---demo---discord" aria-label="Permalink: Demo —
  Discord" href="#--demo---discord"></a></p>
<p dir="auto"><code>pgmock</code> is an in-memory PostgreSQL mock server for unit and E2E tests. It requires no external dependencies and runs entirely within WebAssembly on both Node.js and the browser.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>

<p dir="auto">If you'd like to run <code>pgmock</code> in a browser, see the <a href="#browser-support">Browser support</a> section for detailed instructions.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting started" href="#getting-started"></a></p>
<p dir="auto">You can run an in-memory server like so:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import { PostgresMock } from &quot;pgmock&quot;;

const mock = await PostgresMock.create();
const connectionString = await mock.listen(5432);"><pre><span>import</span> <span>{</span> <span>PostgresMock</span> <span>}</span> <span>from</span> <span>"pgmock"</span><span>;</span>

<span>const</span> <span>mock</span> <span>=</span> <span>await</span> <span>PostgresMock</span><span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
<span>const</span> <span>connectionString</span> <span>=</span> <span>await</span> <span>mock</span><span>.</span><span>listen</span><span>(</span><span>5432</span><span>)</span><span>;</span></pre></div>
<p dir="auto">Recommended: If you use <code>node-postgres</code> (<code>pg</code> on npm), <code>pgmock</code> provides you with a configuration object that doesn't require you to serve on a port (and also works in the browser):</p>
<div dir="auto" data-snippet-clipboard-copy-content="import * as pg from &quot;pg&quot;;

const mock = await PostgresMock.create();
const client = new pg.Client(mock.getNodePostgresConfig());

await client.connect();
console.log(await client.query('SELECT $1::text as message', ['Hello world!']));"><pre><span>import</span> <span>*</span> <span>as</span> <span>pg</span> <span>from</span> <span>"pg"</span><span>;</span>

<span>const</span> <span>mock</span> <span>=</span> <span>await</span> <span>PostgresMock</span><span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
<span>const</span> <span>client</span> <span>=</span> <span>new</span> <span>pg</span><span>.</span><span>Client</span><span>(</span><span>mock</span><span>.</span><span>getNodePostgresConfig</span><span>(</span><span>)</span><span>)</span><span>;</span>

<span>await</span> <span>client</span><span>.</span><span>connect</span><span>(</span><span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span><span>await</span> <span>client</span><span>.</span><span>query</span><span>(</span><span>'SELECT $1::text as message'</span><span>,</span> <span>[</span><span>'Hello world!'</span><span>]</span><span>)</span><span>)</span><span>;</span></pre></div>
<p dir="auto">It is considered good practice to destroy the mock server after you are done with it to free up resources:</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Documentation</h2><a id="user-content-documentation" aria-label="Permalink: Documentation" href="#documentation"></a></p>
<p dir="auto">Check the <a href="https://github.com/stackframe-projects/pgmock/blob/main/src/postgres-mock.ts">PostgresMock source file</a> for a list of all available methods and their documentation.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Browser support</h2><a id="user-content-browser-support" aria-label="Permalink: Browser support" href="#browser-support"></a></p>
<p dir="auto"><code>pgmock</code> fully supports browser environments. While webapps can't listen to TCP ports, you can still use <code>PostgresMock.createSocket</code> and the <code>node-postgres</code> configuration. However, if your bundler statically analyzes imports, the default configuration may show a warning because of missing (optional) Node.js modules. Check <code>examples/web-demo/next.config.mjs</code> for an example on how to configure Webpack for bundling.</p>
<p dir="auto">If you're only looking to run a database in the browser, you might want to consider <a href="https://github.com/electric-sql/pglite">pglite</a> instead. It is more performant and lightweight, but only has a limited feature set. <code>pgmock</code> is designed for feature parity with production PostgreSQL environments, as you would want in a testing environment.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How does it work?</h2><a id="user-content-how-does-it-work" aria-label="Permalink: How does it work?" href="#how-does-it-work"></a></p>
<p dir="auto">There are two approaches to run Postgres in WebAssembly; by <a href="https://github.com/electric-sql/postgres-wasm">forking it to support WASM natively</a> or by <a href="https://supabase.com/blog/postgres-wasm" rel="nofollow">emulating the Postgres server in an x86 emulator</a>. The former is more performant and uses considerably less memory, but only supports single-user mode (no connections), and no extensions.</p>
<p dir="auto">To prevent discrepancies between testing and production, and because performance is not usually a concern in tests, <code>pgmock</code> currently uses the latter approach. In the mid-term future, once native Postgres WASM forks mature, we plan to make both options available, and eventually, switch to native WASM as default. We don't expect there to be many breaking changes besides the APIs inside <code>PostgresMock.subtle</code>.</p>
<p dir="auto"><code>pgmock</code> differs from previous Postgres-in-the-browser projects by providing full feature-compatibility entirely inside the JavaScript runtime, without depending on a network proxy for communication. We did this by simulating a network stack in JavaScript that behaves like a real network, that can simulate TCP connections even on platforms that do not allow raw socket access.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Wanna contribute?</h2><a id="user-content-wanna-contribute" aria-label="Permalink: Wanna contribute?" href="#wanna-contribute"></a></p>
<p dir="auto">Great! We have a <a href="https://discord.gg/pD4nyYyKrb" rel="nofollow">Discord server</a> where you can talk to us.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Can this run other Docker images or databases?</h2><a id="user-content-can-this-run-other-docker-images-or-databases" aria-label="Permalink: Can this run other Docker images or databases?" href="#can-this-run-other-docker-images-or-databases"></a></p>
<p dir="auto">In theory, yes. I just haven't tested them. Ping me on our <a href="https://discord.gg/pD4nyYyKrb" rel="nofollow">Discord server</a> if you're interested.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Acknowledgements</h2><a id="user-content-acknowledgements" aria-label="Permalink: Acknowledgements" href="#acknowledgements"></a></p>
<ul dir="auto">
<li><a href="https://github.com/copy/v86">v86</a>, the x86 emulator which makes this possible</li>
<li><a href="https://supabase.com/blog/postgres-wasm" rel="nofollow">Supabase &amp; Snaplet</a> for building their own approach of running Postgres inside WebAssembly, which this is based on</li>
<li><a href="https://stackframe.co/" rel="nofollow">Stackframe</a> for keeping me on a payroll while I was building <code>pgmock</code></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google Public DNS's approach to fight against cache poisoning attacks (139 pts)]]></title>
            <link>https://security.googleblog.com/2024/03/google-public-dnss-approach-to-fight.html</link>
            <guid>39960125</guid>
            <pubDate>Sun, 07 Apr 2024 11:46:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://security.googleblog.com/2024/03/google-public-dnss-approach-to-fight.html">https://security.googleblog.com/2024/03/google-public-dnss-approach-to-fight.html</a>, See on <a href="https://news.ycombinator.com/item?id=39960125">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-version="1" id="header">
<div>
<p><a href="https://security.googleblog.com/">
<img height="50" src="https://www.gstatic.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png">
</a></p><a href="https://security.googleblog.com/">
<h2>
            Security Blog
          </h2>
</a>
</div>
<p>
The latest news and insights from Google on security and safety on the Internet
</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Command Injection and Backdoor Account in D-Link NAS Devices (187 pts)]]></title>
            <link>https://github.com/netsecfish/dlink</link>
            <guid>39960107</guid>
            <pubDate>Sun, 07 Apr 2024 11:39:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/netsecfish/dlink">https://github.com/netsecfish/dlink</a>, See on <a href="https://news.ycombinator.com/item?id=39960107">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Command Injection and Backdoor Account in D-Link NAS Devices</h2><a id="user-content-command-injection-and-backdoor-account-in-d-link-nas-devices" aria-label="Permalink: Command Injection and Backdoor Account in D-Link NAS Devices" href="#command-injection-and-backdoor-account-in-d-link-nas-devices"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto"><strong>Vulnerability Summary:</strong></h2><a id="user-content-vulnerability-summary" aria-label="Permalink: Vulnerability Summary:" href="#vulnerability-summary"></a></p>
<p dir="auto">The described vulnerability affects multiple D-Link NAS devices, including models DNS-340L, DNS-320L, DNS-327L, and DNS-325, among others. The vulnerability lies within the <strong><code>nas_sharing.cgi</code></strong> uri, which is vulnerable due to two main issues: a backdoor facilitated by hardcoded credentials, and a command injection vulnerability via the <strong><code>system</code></strong> parameter. This exploitation could lead to arbitrary command execution on the affected D-Link NAS devices, granting attackers potential access to sensitive information, system configuration alteration, or denial of service, by specifying a command,affecting over 92,000 devices on the Internet.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/netsecfish/dlink/blob/main/fofa-result.png"><img src="https://github.com/netsecfish/dlink/raw/main/fofa-result.png" alt="Untitled"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Corresponding CWE</h2><a id="user-content-corresponding-cwe" aria-label="Permalink: Corresponding CWE" href="#corresponding-cwe"></a></p>
<p dir="auto">CWE-77 (Command Injection) and CWE-798 (Use of Hard-coded Credentials).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Affected Devices:</h2><a id="user-content-affected-devices" aria-label="Permalink: Affected Devices:" href="#affected-devices"></a></p>
<ul dir="auto">
<li>DNS-320L Version 1.11, Version 1.03.0904.2013, Version 1.01.0702.2013</li>
<li>DNS-325 Version 1.01</li>
<li>DNS-327L Version 1.09, Version 1.00.0409.2013</li>
<li>DNS-340L Version 1.08</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Vulnerability Details:</h2><a id="user-content-vulnerability-details" aria-label="Permalink: Vulnerability Details:" href="#vulnerability-details"></a></p>
<p dir="auto">The vulnerability exists in the <code>nas_sharing.cgi</code> CGI script, which leads to:</p>
<ol dir="auto">
<li><strong>Backdoor through Username and Password Exposure</strong>: The request includes parameters for a username (<strong><code>user=messagebus</code></strong>) and an empty password field (<strong><code>passwd=</code></strong>). This indicates a backdoor allowing unauthorized access without proper authentication.</li>
<li><strong>Command Injection through the System Parameter</strong>: The <strong><code>system</code></strong> parameter within the request carries a base64 encoded value that, when decoded, appears to be a command.</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Exploitation:</h2><a id="user-content-exploitation" aria-label="Permalink: Exploitation:" href="#exploitation"></a></p>
<p dir="auto">Craft Malicious HTTP Request: Prepare an HTTP GET request targeting the <code>/cgi-bin/nas_sharing.cgi</code> endpoint.</p>
<div data-snippet-clipboard-copy-content="GET /cgi-bin/nas_sharing.cgi?user=messagebus&amp;passwd=&amp;cmd=15&amp;system=<BASE64_ENCODED_COMMAND_TO_BE_EXECUTED>"><pre><code>GET /cgi-bin/nas_sharing.cgi?user=messagebus&amp;passwd=&amp;cmd=15&amp;system=&lt;BASE64_ENCODED_COMMAND_TO_BE_EXECUTED&gt;
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto"><strong>Actual Result</strong></h2><a id="user-content-actual-result" aria-label="Permalink: Actual Result" href="#actual-result"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/netsecfish/dlink/blob/main/dns-320.jpg"><img src="https://github.com/netsecfish/dlink/raw/main/dns-320.jpg" alt="Untitled"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Impact:</h2><a id="user-content-impact" aria-label="Permalink: Impact:" href="#impact"></a></p>
<p dir="auto">Successful exploitation of this vulnerability could allow an attacker to execute arbitrary commands on the system, potentially leading to unauthorized access to sensitive information, modification of system configurations, or denial of service conditions.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto"><strong>Fix Recommendation:</strong></h2><a id="user-content-fix-recommendation" aria-label="Permalink: Fix Recommendation:" href="#fix-recommendation"></a></p>
<ul dir="auto">
<li>Apply available patches and updates from the device manufacturer.</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Court approves 3M multi-billion dollar settlement over PFAS in drinking water (182 pts)]]></title>
            <link>https://www.cbsnews.com/minnesota/news/3m-pfas-drinking-water-settlement/</link>
            <guid>39960069</guid>
            <pubDate>Sun, 07 Apr 2024 11:26:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cbsnews.com/minnesota/news/3m-pfas-drinking-water-settlement/">https://www.cbsnews.com/minnesota/news/3m-pfas-drinking-water-settlement/</a>, See on <a href="https://news.ycombinator.com/item?id=39960069">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    
                                                                
                                                        
<article id="article-0" data-index="0" data-path="/minnesota/news/3m-pfas-drinking-water-settlement/">

  <div id="article-header" data-sort-time="1712029688000" data-update-time="1712029688000">
    <header>

      
      <div>

        <!-- show SVG here -->
                            <p><a href="https://www.cbsnews.com/minnesota/" data-invalid-url-rewritten-http="">
            <img width="60" height="60" alt="minnesota" src="https://www.cbsnews.com/assets/show/minnesota/logo-square-32.svg" loading="lazy"></a></p><!-- end show SVG -->

              <p>
    By
                        
              , 
                              
              <span>The Associated Press</span>
              </p>
  
          

        <p>
          <time datetime="2024-04-01T22:48:08-0500">Updated on:  April 1, 2024 / 10:48 PM CDT</time>
          / CBS/AP
        </p>
        


</div>

          </header></div>

      




  
  
      
        
  <figure data-ads="{&quot;extraWordCount&quot;:50}"><div>
      
      
                      



  <svg xmlns="http://www.w3.org/2000/svg" style="position:absolute;width:0;height:0"><defs><symbol id="player-icon-pause" viewBox="0 0 32 32"><path d="M4 4h10v24h-10zM18 4h10v24h-10z"></path></symbol><symbol id="player-icon-play" viewBox="0 0 32 32"><path d="M6 4l20 12-20 12z"></path></symbol><symbol id="player-icon-close" viewBox="0 0 32 32"><line stroke-width="6" x1="3" y1="3" x2="29" y2="29"></line><line stroke-width="6" x1="29" y1="3" x2="3" y2="29"></line></symbol><symbol id="player-icon-fullscreen" viewBox="0 0 32 32"><path d="M32 0h-13l5 5-6 6 3 3 6-6 5 5z"></path><path d="M32 32v-13l-5 5-6-6-3 3 6 6-5 5z"></path><path d="M0 32h13l-5-5 6-6-3-3-6 6-5-5z"></path><path d="M0 0v13l5-5 6 6 3-3-6-6 5-5z"></path></symbol><symbol id="player-icon-drag" viewBox="0 0 40 55"><g fill="#f5f5f5"><circle cx="5" cy="5" r="5"></circle><circle cx="20" cy="5" r="5"></circle><circle cx="35" cy="5" r="5"></circle><circle cx="5" cy="20" r="5"></circle><circle cx="20" cy="20" r="5"></circle><circle cx="35" cy="20" r="5"></circle><circle cx="5" cy="35" r="5"></circle><circle cx="20" cy="35" r="5"></circle><circle cx="35" cy="35" r="5"></circle><circle cx="5" cy="50" r="5"></circle><circle cx="20" cy="50" r="5"></circle><circle cx="35" cy="50" r="5"></circle></g></symbol></defs></svg><div data-theme="default" data-component="viewability" data-viewability-options="true">
                  <svg><use xlink:href="#player-icon-drag"></use></svg><p><span>Report finds some water filters can reduce PFAS from tap water </span>
        
        

      </p></div>
          </div>
          <figcaption><a href="https://www.cbsnews.com/minnesota/video/report-finds-some-water-filters-can-reduce-pfas-from-tap-water/" data-invalid-url-rewritten-http="">
          
          <span>
            </span>

          <span>Report finds some water filters can reduce PFAS from tap water</span>

          <span>01:54</span>

                      </a>
                  
        
        
              </figcaption></figure><section><p><strong>MINNEAPOLIS —</strong> Minnesota-based chemical manufacturer 3M will begin payments this summer to many U.S. public drinking water systems as part of a multi-billion-dollar settlement over contamination with potentially dangerous chemicals, the company said.</p><p>Communities in the east metro are especially impacted by the contamination.</p><p>3M announced Monday that last year's lawsuit settlement received final approval from the U.S. District Court in Charleston, South Carolina.</p><p>The agreement called for payouts through 2036. Depending on what additional contamination is found, the amount paid out will range from $10.5 billion to $12.5 billion.</p><p><strong>RELATED:&nbsp;</strong><span><a href="https://www.cbsnews.com/minnesota/news/minnesota-pfas-forever-chemicals-drinking-water/" target="_blank" data-invalid-url-rewritten-http=""><strong>Despite historic 3M PFAS payout, Minnesota communities need millions more for cleanup</strong></a></span></p>

    

<p>"This is yet another important step forward for 3M as we continue to deliver on our priorities. The final approval of this settlement and continued progress toward exiting all PFAS manufacturing by the end of 2025 will further our efforts to reduce risk and uncertainty as we move forward," 3M's chairman and CEO, Mike Roman, said in a news release.</p><p>Six years ago, 3M settled with the state for $850 million for disposing the chemicals and contaminating drinking water and our environment —&nbsp;<span><a href="https://www.cbsnews.com/minnesota/news/3m-agrees-to-10-3-billion-in-pfas-settlement/" target="_blank" data-invalid-url-rewritten-http="">one of the largest settlements of its kind in the country</a></span>.</p><p>The deal compensates water providers for pollution with per- and polyfluorinated substances, known collectively as PFAS — a broad class of chemicals used in nonstick, water- and grease-resistant products such as clothing and cookware.</p><p>PFAS have been described as "forever chemicals" because they don't degrade naturally in the environment. They've been linked to a variety of health problems, including liver and immune-system damage and some cancers.</p>

    
    

<p>The compounds have been detected at varying levels in drinking water nationwide. The Environmental Protection Agency in March 2023 proposed strict limits on two common types, PFOA and PFOS, and said it wanted to regulate four others. Water providers would be responsible for monitoring their systems for the chemicals.</p><p><strong>RELATED:&nbsp;<span><a href="https://www.cbsnews.com/minnesota/news/pfas-in-minnesota-how-forever-chemicals-changed-the-state-of-water/" target="_blank" data-invalid-url-rewritten-http="">PFAS in Minnesota: How "forever chemicals" changed the state of water</a></span></strong></p><p><span><a href="https://www.cbsnews.com/minnesota/news/minnesota-house-approves-environment-package-that-includes-ban-on-forever-chemicals-pfas/" target="_blank" data-invalid-url-rewritten-http="">A new state law passed last year</a></span>&nbsp;will ban PFAS in some consumer products starting in 2025 with a full ban in 2032. But prevention is only one part of the solution. Some communities like Woodbury and St. Louis County also want lawmakers to approve funding for PFAS mitigation in their infrastructure package this year.</p><p>The <span><a href="https://www.cbsnews.com/minnesota/news/3m-agrees-to-10-3-billion-in-pfas-settlement/" target="_blank" data-invalid-url-rewritten-http="">3M settlement first announced in June</a></span> came in a lawsuit by Stuart, Florida, one of about 300 communities that had filed similar suits against companies that produced firefighting foam or the PFAS it contained. The payment will help cover the costs of filtering PFAS from systems.</p><p>Some of the settlement money will help additional water systems test for contamination from PFAS, said Scott Summy, one of the lead attorneys for those suing 3M and other manufacturers. They have until June 2026 to apply for compensation if contamination is found. </p><p>"That's great news for American citizens who drink from that water," Summy said. "It'll help rid our public drinking water systems of PFAS, and that's the most important thing about the settlement."</p><p>3M&nbsp;<span><a href="https://www.cbsnews.com/minnesota/news/3m-plans-to-end-manufacturing-and-use-of-pfas-by-end-of-2025/" target="_blank" data-invalid-url-rewritten-http="">pledged</a></span>&nbsp;in late 2022 that the company would stop manufacturing and using PFAS by the end of 2025.</p>
                  
        
      
                  
    <!-- data-recirc-source="queryly" -->

    <!-- tags --><ul>In:
          <li><a href="https://www.cbsnews.com/minnesota/tag/health/">Health</a></li>
          <li><a href="https://www.cbsnews.com/minnesota/tag/charleston/">Charleston</a></li>
          <li><a href="https://www.cbsnews.com/minnesota/tag/lawsuit/">Lawsuit</a></li>
      </ul><div>
      <p><a href="https://www.cbsnews.com/minnesota/search/author/wcco-staff/" data-invalid-url-rewritten-http="">WCCO Staff</a></p><div>
                  <p><a href="https://www.cbsnews.com/minnesota/search/author/wcco-staff/" data-invalid-url-rewritten-http="">
              <span><img src="https://www.cbsnews.com/minnesota/news/3m-pfas-drinking-water-settlement/512-appicon-minnesota.png" alt="512-appicon-minnesota.png " height="80" width="80" data-srcset="https://assets3.cbsnewsstatic.com/hub/i/r/2023/04/14/3f903c1c-7834-4b45-9e2a-d1e23d837478/thumbnail/80x80/e370a104780595f243857bf615c869d6/512-appicon-minnesota.png?v=95af720165ffeea582866d60dd9b1b18 1x" srcset="data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2080%2080'%2F%3E"></span>
            </a>
          </p>
                  <div>
            <p>The WCCO Staff is a group of experienced journalists who bring you the content on WCCO.com.</p>
                          <p>
                                                                                              <a href="https://twitter.com/wcco" rel="nofollow noopener">
                      
                      Twitter
                    </a>
                
                                                                        
                  <a href="https://facebook.com/CBSMinnesota" rel="nofollow noopener">
                    
                    Facebook
                  </a>
                
                
                                                                
                <a href="https://instagram.com/wcco" rel="nofollow noopener">
                  
                  Instagram
                </a>
                        </p>
                </div>
      </div>
    </div>
      </section>
  </article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Did any processor implement an integer square root instruction? (185 pts)]]></title>
            <link>https://retrocomputing.stackexchange.com/questions/29787/did-any-processor-implement-an-integer-square-root-instruction</link>
            <guid>39959946</guid>
            <pubDate>Sun, 07 Apr 2024 10:55:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://retrocomputing.stackexchange.com/questions/29787/did-any-processor-implement-an-integer-square-root-instruction">https://retrocomputing.stackexchange.com/questions/29787/did-any-processor-implement-an-integer-square-root-instruction</a>, See on <a href="https://news.ycombinator.com/item?id=39959946">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text">
<p><strong>It's not that easy.</strong></p>
<p>The most efficient method to calculate square root is to calculate inverse/reciprocal of the square root using Newton-Raphson iterations, and then multiply it with the original.</p>
<p>This is best known as the <a href="https://thatonegamedev.com/math/fast-square-root-quake-iii/" rel="noreferrer">"Quake method"</a> (see also <a href="https://retrocomputing.stackexchange.com/q/4615/79">Where did Fast InvSqrt() come from?</a>). The more modern version used by contemporary CPU and GPUs are generalized into two instructions, one for estimating the initial guess (e.g. <a href="https://developer.arm.com/documentation/ddi0602/2022-03/SIMD-FP-Instructions/FRSQRTE--Floating-point-Reciprocal-Square-Root-Estimate-?lang=en" rel="noreferrer">frsqrte of ARMv8</a>), another to run the following iterations (e.g. <a href="https://developer.arm.com/documentation/ddi0602/2022-03/SIMD-FP-Instructions/FRSQRTS--Floating-point-Reciprocal-Square-Root-Step-?lang=en" rel="noreferrer">frsqrts of ARMv8</a>). Single-instruction version of sqrt is a micro-coded or pseudo-instruction version of these two instructions.</p>
<p><strong>The prerequisite for all of this is a multiplier.</strong></p>
<p>If you want to calculate FP (i)sqrt, then you need a (fast) FP multiplier, which all FPUs have.</p>
<p>If you want to calculate integer (i)sqrt, then you need a (fast) integer multiplier, which most CPUs <strong>don't</strong> have (historically). Otherwise it would be called a <strong>DSP</strong>.</p>
<p>To make it better, you need a (fast) multiplier that is twice the width of your input to have sufficient precision, which most CPUs definitely don't have until "relatively" recently (relative to RetroComputing).</p>
<p><strong>And precision matters, or not?</strong></p>
<p>If you look at the "Quake method" closely, you notice that one of the iterations was commented out.</p>
<p>There are a lot of use cases where the extreme precision isn't necessary and it'll be better to leave the choice of precision/speed trade off to programmers. <code>isqrt</code> was intentionally separated into <code>fsqrte</code> and <code>fsqrts</code> on ARMv8 exactly for this reason: so that the programmer can adjust the number of <code>fsqrts</code> for the desired speed and accuracy tradeoff.</p>
<p>So I don't quite agree to the statement that single instruction sqrt is very common. It's there because the IEEEE754 and the C stand math library requires it (for the flag bits and exceptions), but that doesn't mean it's frequently used.</p>
<p><strong>Further reading</strong></p>
<ul>
<li><a href="https://www.ti.com/tool/SPRC542" rel="noreferrer">SPRC542</a> TI's math library for C64x DSP (8-issue VLIW CPU with two 32x32=64 multipliers). In this library <code>_iq _IQisqrt</code> is implemented using Newton-Raphson iterations and <code>_iq _IQsqrt</code> is calculated by multiplying the original with the isqrt. The source code is available on request.</li>
<li><a href="https://www.ti.com/lit/ug/sprugg9/sprugg9.pdf" rel="noreferrer">SPRUGG9</a> TMS320C64x+ IQmath Library User's Guide.The user guide for SPRC542.</li>
<li>My implementation of square root using binary search, that doesn't depend on a multiplier. Only basic ALU instructions are used. It is vigorously undocumented. I have no idea what I wrote but it seems to work.</li>
</ul>
<p>.</p>
<pre><code>unsigned int usqrt(unsigned int x){
    unsigned int a=0;
    unsigned int masksq=0,mask=0;
    unsigned int mask_shift=15;
    for(masksq=1u&lt;&lt;(mask_shift&lt;&lt;1),mask=1u&lt;&lt;(mask_shift);
        mask!=0;
        masksq=masksq&gt;&gt;2,mask=mask&gt;&gt;1,mask_shift--){
        if(x&gt;=masksq){
            a=mask;
            break;
        }
    }
    x-=masksq;//masksq==a*a;
    mask=mask&gt;&gt;1;
    mask_shift--;
    while(mask&gt;0){
        unsigned int step=(mask&lt;&lt;mask_shift)+(a&lt;&lt;(mask_shift+1));
        if(x&gt;=step){
            a|=mask;
            x-=step;
        }
        mask=mask&gt;&gt;1;
        mask_shift--;
    }
    return a;
}
</code></pre>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SentenceTransformers: Python framework for sentence, text and image embeddings (149 pts)]]></title>
            <link>https://www.sbert.net/index.html</link>
            <guid>39959790</guid>
            <pubDate>Sun, 07 Apr 2024 10:23:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sbert.net/index.html">https://www.sbert.net/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=39959790">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
    <nav data-toggle="wy-nav-shift">
      
    </nav>

    <section data-toggle="wy-nav-shift">

      
      <nav aria-label="top navigation">
        
          <i data-toggle="wy-nav-top"></i>
          <a href="#">Sentence-Transformers</a>
        
      </nav>


      <div itemprop="articleBody" role="main" itemscope="itemscope" itemtype="http://schema.org/Article">
            
  
<div id="installation">
<h2>Installation<a href="#installation" title="Permalink to this headline">¶</a></h2>
<p>You can install it using pip:</p>
<div><pre><span></span><span>pip</span> <span>install</span> <span>-</span><span>U</span> <span>sentence</span><span>-</span><span>transformers</span>
</pre></div>
<p>We recommend <strong>Python 3.8</strong> or higher, and at least <strong>PyTorch 1.11.0</strong>. See <a href="https://www.sbert.net/docs/installation.html">installation</a> for further installation options, especially if you want to use a GPU.</p>
</div>
<div id="usage">
<h2>Usage<a href="#usage" title="Permalink to this headline">¶</a></h2>
<p>The usage is as simple as:</p>
<div><pre><span></span><span>from</span> <span>sentence_transformers</span> <span>import</span> <span>SentenceTransformer</span>
<span>model</span> <span>=</span> <span>SentenceTransformer</span><span>(</span><span>"all-MiniLM-L6-v2"</span><span>)</span>

<span># Our sentences to encode</span>
<span>sentences</span> <span>=</span> <span>[</span>
    <span>"This framework generates embeddings for each input sentence"</span><span>,</span>
    <span>"Sentences are passed as a list of string."</span><span>,</span>
    <span>"The quick brown fox jumps over the lazy dog."</span>
<span>]</span>

<span># Sentences are encoded by calling model.encode()</span>
<span>embeddings</span> <span>=</span> <span>model</span><span>.</span><span>encode</span><span>(</span><span>sentences</span><span>)</span>

<span># Print the embeddings</span>
<span>for</span> <span>sentence</span><span>,</span> <span>embedding</span> <span>in</span> <span>zip</span><span>(</span><span>sentences</span><span>,</span> <span>embeddings</span><span>):</span>
    <span>print</span><span>(</span><span>"Sentence:"</span><span>,</span> <span>sentence</span><span>)</span>
    <span>print</span><span>(</span><span>"Embedding:"</span><span>,</span> <span>embedding</span><span>)</span>
    <span>print</span><span>(</span><span>""</span><span>)</span>
</pre></div>
</div>
<div id="performance">
<h2>Performance<a href="#performance" title="Permalink to this headline">¶</a></h2>
<p>Our models are evaluated extensively and achieve state-of-the-art performance on various tasks. Further, the code is tuned to provide the highest possible speed. Have a look at <a href="https://www.sbert.net/docs/pretrained_models.html">Pre-Trained Models</a> for an overview of available models and the respective performance on different tasks.</p>
</div>

<div id="citing-authors">
<h2>Citing &amp; Authors<a href="#citing-authors" title="Permalink to this headline">¶</a></h2>
<p>If you find this repository helpful, feel free to cite our publication <a href="https://arxiv.org/abs/1908.10084">Sentence-BERT: Sentence Embeddings using Siamese BERT-Networks</a>:</p>
<blockquote>
<div><pre><span></span><span>@inproceedings</span><span>{</span><span>reimers-2019-sentence-bert</span><span>,</span>
<span>  </span><span>title</span><span> </span><span>=</span><span> </span><span>"Sentence-BERT: Sentence Embeddings using Siamese BERT-Networks"</span><span>,</span>
<span>  </span><span>author</span><span> </span><span>=</span><span> </span><span>"Reimers, Nils and Gurevych, Iryna"</span><span>,</span>
<span>  </span><span>booktitle</span><span> </span><span>=</span><span> </span><span>"Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing"</span><span>,</span>
<span>  </span><span>month</span><span> </span><span>=</span><span> </span><span>"11"</span><span>,</span>
<span>  </span><span>year</span><span> </span><span>=</span><span> </span><span>"2019"</span><span>,</span>
<span>  </span><span>publisher</span><span> </span><span>=</span><span> </span><span>"Association for Computational Linguistics"</span><span>,</span>
<span>  </span><span>url</span><span> </span><span>=</span><span> </span><span>"https://arxiv.org/abs/1908.10084"</span><span>,</span>
<span>}</span>
</pre></div></blockquote>
<p>If you use one of the multilingual models, feel free to cite our publication <a href="https://arxiv.org/abs/2004.09813">Making Monolingual Sentence Embeddings Multilingual using Knowledge Distillation</a>:</p>
<blockquote>
<div><pre><span></span><span>@inproceedings</span><span>{</span><span>reimers-2020-multilingual-sentence-bert</span><span>,</span>
<span>  </span><span>title</span><span> </span><span>=</span><span> </span><span>"Making Monolingual Sentence Embeddings Multilingual using Knowledge Distillation"</span><span>,</span>
<span>  </span><span>author</span><span> </span><span>=</span><span> </span><span>"Reimers, Nils and Gurevych, Iryna"</span><span>,</span>
<span>  </span><span>booktitle</span><span> </span><span>=</span><span> </span><span>"Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing"</span><span>,</span>
<span>  </span><span>month</span><span> </span><span>=</span><span> </span><span>"11"</span><span>,</span>
<span>  </span><span>year</span><span> </span><span>=</span><span> </span><span>"2020"</span><span>,</span>
<span>  </span><span>publisher</span><span> </span><span>=</span><span> </span><span>"Association for Computational Linguistics"</span><span>,</span>
<span>  </span><span>url</span><span> </span><span>=</span><span> </span><span>"https://arxiv.org/abs/2004.09813"</span><span>,</span>
<span>}</span>
</pre></div></blockquote>
<p>If you use the code for <a href="https://github.com/UKPLab/sentence-transformers/tree/master/examples/training/data_augmentation">data augmentation</a>, feel free to cite our publication <a href="https://arxiv.org/abs/2010.08240">Augmented SBERT: Data Augmentation Method for Improving Bi-Encoders for Pairwise Sentence Scoring Tasks</a>:</p>
<blockquote>
<div><pre><span></span><span>@inproceedings</span><span>{</span><span>thakur-2020-AugSBERT</span><span>,</span>
<span>  </span><span>title</span><span> </span><span>=</span><span> </span><span>"Augmented {SBERT}: Data Augmentation Method for Improving Bi-Encoders for Pairwise Sentence Scoring Tasks"</span><span>,</span>
<span>  </span><span>author</span><span> </span><span>=</span><span> </span><span>"Thakur, Nandan and Reimers, Nils and Daxenberger, Johannes  and Gurevych, Iryna"</span><span>,</span>
<span>  </span><span>booktitle</span><span> </span><span>=</span><span> </span><span>"Proceedings of the 2021 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies"</span><span>,</span>
<span>  </span><span>month</span><span> </span><span>=</span><span> </span><span>jun</span><span>,</span>
<span>  </span><span>year</span><span> </span><span>=</span><span> </span><span>"2021"</span><span>,</span>
<span>  </span><span>address</span><span> </span><span>=</span><span> </span><span>"Online"</span><span>,</span>
<span>  </span><span>publisher</span><span> </span><span>=</span><span> </span><span>"Association for Computational Linguistics"</span><span>,</span>
<span>  </span><span>url</span><span> </span><span>=</span><span> </span><span>"https://www.aclweb.org/anthology/2021.naacl-main.28"</span><span>,</span>
<span>  </span><span>pages</span><span> </span><span>=</span><span> </span><span>"296--310"</span><span>,</span>
<span>}</span>
</pre></div></blockquote>
<div>
<p><span>Overview</span></p>
<ul>
<li><a href="https://www.sbert.net/docs/installation.html">Installation</a><ul>
<li><a href="https://www.sbert.net/docs/installation.html#install-sentencetransformers">Install SentenceTransformers</a></li>
<li><a href="https://www.sbert.net/docs/installation.html#install-pytorch-with-cuda-support">Install PyTorch with CUDA support</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/docs/quickstart.html">Quickstart</a><ul>
<li><a href="https://www.sbert.net/docs/quickstart.html#comparing-sentence-similarities">Comparing Sentence Similarities</a></li>
<li><a href="https://www.sbert.net/docs/quickstart.html#pre-trained-models">Pre-Trained Models</a></li>
<li><a href="https://www.sbert.net/docs/quickstart.html#training-your-own-embeddings">Training your own Embeddings</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/docs/pretrained_models.html">Pretrained Models</a><ul>
<li><a href="https://www.sbert.net/docs/pretrained_models.html#model-overview">Model Overview</a></li>
<li><a href="https://www.sbert.net/docs/pretrained_models.html#semantic-search">Semantic Search</a></li>
<li><a href="https://www.sbert.net/docs/pretrained_models.html#multi-lingual-models">Multi-Lingual Models</a></li>
<li><a href="https://www.sbert.net/docs/pretrained_models.html#image-text-models">Image &amp; Text-Models</a></li>
<li><a href="https://www.sbert.net/docs/pretrained_models.html#other-models">Other Models</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/docs/pretrained_cross-encoders.html">Pretrained Cross-Encoders</a><ul>
<li><a href="https://www.sbert.net/docs/pretrained_cross-encoders.html#ms-marco">MS MARCO</a></li>
<li><a href="https://www.sbert.net/docs/pretrained_cross-encoders.html#squad-qnli">SQuAD (QNLI)</a></li>
<li><a href="https://www.sbert.net/docs/pretrained_cross-encoders.html#stsbenchmark">STSbenchmark</a></li>
<li><a href="https://www.sbert.net/docs/pretrained_cross-encoders.html#quora-duplicate-questions">Quora Duplicate Questions</a></li>
<li><a href="https://www.sbert.net/docs/pretrained_cross-encoders.html#nli">NLI</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/docs/publications.html">Publications</a></li>
<li><a href="https://www.sbert.net/docs/hugging_face.html">Hugging Face 🤗</a><ul>
<li><a href="https://www.sbert.net/docs/hugging_face.html#the-hugging-face-hub">The Hugging Face Hub</a></li>
<li><a href="https://www.sbert.net/docs/hugging_face.html#using-hugging-face-models">Using Hugging Face models</a></li>
<li><a href="https://www.sbert.net/docs/hugging_face.html#sharing-your-models">Sharing your models</a></li>
<li><a href="https://www.sbert.net/docs/hugging_face.html#sharing-your-embeddings">Sharing your embeddings</a></li>
<li><a href="https://www.sbert.net/docs/hugging_face.html#additional-resources">Additional resources</a></li>
</ul>
</li>
</ul>
</div>
<div>
<p><span>Usage</span></p>
<ul>
<li><a href="https://www.sbert.net/examples/applications/computing-embeddings/README.html">Computing Sentence Embeddings</a><ul>
<li><a href="https://www.sbert.net/examples/applications/computing-embeddings/README.html#prompt-templates">Prompt Templates</a></li>
<li><a href="https://www.sbert.net/examples/applications/computing-embeddings/README.html#input-sequence-length">Input Sequence Length</a></li>
<li><a href="https://www.sbert.net/examples/applications/computing-embeddings/README.html#storing-loading-embeddings">Storing &amp; Loading Embeddings</a></li>
<li><a href="https://www.sbert.net/examples/applications/computing-embeddings/README.html#multi-process-multi-gpu-encoding">Multi-Process / Multi-GPU Encoding</a></li>
<li><a href="https://www.sbert.net/examples/applications/computing-embeddings/README.html#sentence-embeddings-with-transformers">Sentence Embeddings with Transformers</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/docs/usage/semantic_textual_similarity.html">Semantic Textual Similarity</a></li>
<li><a href="https://www.sbert.net/examples/applications/embedding-quantization/README.html">Embedding Quantization</a><ul>
<li><a href="https://www.sbert.net/examples/applications/embedding-quantization/README.html#binary-quantization">Binary Quantization</a></li>
<li><a href="https://www.sbert.net/examples/applications/embedding-quantization/README.html#scalar-int8-quantization">Scalar (int8) Quantization</a></li>
<li><a href="https://www.sbert.net/examples/applications/embedding-quantization/README.html#additional-extensions">Additional extensions</a></li>
<li><a href="https://www.sbert.net/examples/applications/embedding-quantization/README.html#demo">Demo</a></li>
<li><a href="https://www.sbert.net/examples/applications/embedding-quantization/README.html#try-it-yourself">Try it yourself</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/applications/semantic-search/README.html">Semantic Search</a><ul>
<li><a href="https://www.sbert.net/examples/applications/semantic-search/README.html#background">Background</a></li>
<li><a href="https://www.sbert.net/examples/applications/semantic-search/README.html#symmetric-vs-asymmetric-semantic-search">Symmetric vs. Asymmetric Semantic Search</a></li>
<li><a href="https://www.sbert.net/examples/applications/semantic-search/README.html#python">Python</a></li>
<li><a href="https://www.sbert.net/examples/applications/semantic-search/README.html#util-semantic-search">util.semantic_search</a></li>
<li><a href="https://www.sbert.net/examples/applications/semantic-search/README.html#speed-optimization">Speed Optimization</a></li>
<li><a href="https://www.sbert.net/examples/applications/semantic-search/README.html#elasticsearch">Elasticsearch</a></li>
<li><a href="https://www.sbert.net/examples/applications/semantic-search/README.html#approximate-nearest-neighbor">Approximate Nearest Neighbor</a></li>
<li><a href="https://www.sbert.net/examples/applications/semantic-search/README.html#retrieve-re-rank">Retrieve &amp; Re-Rank</a></li>
<li><a href="https://www.sbert.net/examples/applications/semantic-search/README.html#examples">Examples</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/applications/retrieve_rerank/README.html">Retrieve &amp; Re-Rank</a><ul>
<li><a href="https://www.sbert.net/examples/applications/retrieve_rerank/README.html#retrieve-re-rank-pipeline">Retrieve &amp; Re-Rank Pipeline</a></li>
<li><a href="https://www.sbert.net/examples/applications/retrieve_rerank/README.html#retrieval-bi-encoder">Retrieval: Bi-Encoder</a></li>
<li><a href="https://www.sbert.net/examples/applications/retrieve_rerank/README.html#re-ranker-cross-encoder">Re-Ranker: Cross-Encoder</a></li>
<li><a href="https://www.sbert.net/examples/applications/retrieve_rerank/README.html#example-scripts">Example Scripts</a></li>
<li><a href="https://www.sbert.net/examples/applications/retrieve_rerank/README.html#pre-trained-bi-encoders-retrieval">Pre-trained Bi-Encoders (Retrieval)</a></li>
<li><a href="https://www.sbert.net/examples/applications/retrieve_rerank/README.html#pre-trained-cross-encoders-re-ranker">Pre-trained Cross-Encoders (Re-Ranker)</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/applications/clustering/README.html">Clustering</a><ul>
<li><a href="https://www.sbert.net/examples/applications/clustering/README.html#k-means">k-Means</a></li>
<li><a href="https://www.sbert.net/examples/applications/clustering/README.html#agglomerative-clustering">Agglomerative Clustering</a></li>
<li><a href="https://www.sbert.net/examples/applications/clustering/README.html#fast-clustering">Fast Clustering</a></li>
<li><a href="https://www.sbert.net/examples/applications/clustering/README.html#topic-modeling">Topic Modeling</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/applications/paraphrase-mining/README.html">Paraphrase Mining</a></li>
<li><a href="https://www.sbert.net/examples/applications/parallel-sentence-mining/README.html">Translated Sentence Mining</a><ul>
<li><a href="https://www.sbert.net/examples/applications/parallel-sentence-mining/README.html#marging-based-mining">Marging Based Mining</a></li>
<li><a href="https://www.sbert.net/examples/applications/parallel-sentence-mining/README.html#examples">Examples</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/applications/cross-encoder/README.html">Cross-Encoders</a><ul>
<li><a href="https://www.sbert.net/examples/applications/cross-encoder/README.html#bi-encoder-vs-cross-encoder">Bi-Encoder vs. Cross-Encoder</a></li>
<li><a href="https://www.sbert.net/examples/applications/cross-encoder/README.html#when-to-use-cross-bi-encoders">When to use Cross- / Bi-Encoders?</a></li>
<li><a href="https://www.sbert.net/examples/applications/cross-encoder/README.html#cross-encoders-usage">Cross-Encoders Usage</a></li>
<li><a href="https://www.sbert.net/examples/applications/cross-encoder/README.html#combining-bi-and-cross-encoders">Combining Bi- and Cross-Encoders</a></li>
<li><a href="https://www.sbert.net/examples/applications/cross-encoder/README.html#training-cross-encoders">Training Cross-Encoders</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/applications/image-search/README.html">Image Search</a><ul>
<li><a href="https://www.sbert.net/examples/applications/image-search/README.html#installation">Installation</a></li>
<li><a href="https://www.sbert.net/examples/applications/image-search/README.html#usage">Usage</a></li>
<li><a href="https://www.sbert.net/examples/applications/image-search/README.html#examples">Examples</a></li>
</ul>
</li>
</ul>
</div>
<div>
<p><span>Training</span></p>
<ul>
<li><a href="https://www.sbert.net/docs/training/overview.html">Training Overview</a><ul>
<li><a href="https://www.sbert.net/docs/training/overview.html#network-architecture">Network Architecture</a></li>
<li><a href="https://www.sbert.net/docs/training/overview.html#creating-networks-from-scratch">Creating Networks from Scratch</a></li>
<li><a href="https://www.sbert.net/docs/training/overview.html#training-data">Training Data</a></li>
<li><a href="https://www.sbert.net/docs/training/overview.html#loss-functions">Loss Functions</a></li>
<li><a href="https://www.sbert.net/docs/training/overview.html#evaluators">Evaluators</a></li>
<li><a href="https://www.sbert.net/docs/training/overview.html#loading-custom-sentencetransformer-models">Loading Custom SentenceTransformer Models</a></li>
<li><a href="https://www.sbert.net/docs/training/overview.html#multitask-training">Multitask Training</a></li>
<li><a href="https://www.sbert.net/docs/training/overview.html#adding-special-tokens">Adding Special Tokens</a></li>
<li><a href="https://www.sbert.net/docs/training/overview.html#best-transformer-model">Best Transformer Model</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/docs/training/loss_overview.html">Loss Overview</a><ul>
<li><a href="https://www.sbert.net/docs/training/loss_overview.html#loss-modifiers">Loss modifiers</a></li>
<li><a href="https://www.sbert.net/docs/training/loss_overview.html#distillation">Distillation</a></li>
<li><a href="https://www.sbert.net/docs/training/loss_overview.html#commonly-used-loss-functions">Commonly used Loss Functions</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/matryoshka/README.html">Matryoshka Embeddings</a><ul>
<li><a href="https://www.sbert.net/examples/training/matryoshka/README.html#use-cases">Use Cases</a></li>
<li><a href="https://www.sbert.net/examples/training/matryoshka/README.html#results">Results</a></li>
<li><a href="https://www.sbert.net/examples/training/matryoshka/README.html#training">Training</a></li>
<li><a href="https://www.sbert.net/examples/training/matryoshka/README.html#inference">Inference</a></li>
<li><a href="https://www.sbert.net/examples/training/matryoshka/README.html#code-examples">Code Examples</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/adaptive_layer/README.html">Adaptive Layers</a><ul>
<li><a href="https://www.sbert.net/examples/training/adaptive_layer/README.html#use-cases">Use Cases</a></li>
<li><a href="https://www.sbert.net/examples/training/adaptive_layer/README.html#results">Results</a></li>
<li><a href="https://www.sbert.net/examples/training/adaptive_layer/README.html#training">Training</a></li>
<li><a href="https://www.sbert.net/examples/training/adaptive_layer/README.html#inference">Inference</a></li>
<li><a href="https://www.sbert.net/examples/training/adaptive_layer/README.html#code-examples">Code Examples</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html">Multilingual-Models</a><ul>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html#available-pre-trained-models">Available Pre-trained Models</a></li>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html#usage">Usage</a></li>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html#performance">Performance</a></li>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html#extend-your-own-models">Extend your own models</a></li>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html#training">Training</a></li>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html#data-format">Data Format</a></li>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html#loading-training-datasets">Loading Training Datasets</a></li>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html#sources-for-training-data">Sources for Training Data</a></li>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html#evaluation">Evaluation</a></li>
<li><a href="https://www.sbert.net/examples/training/multilingual/README.html#citation">Citation</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/distillation/README.html">Model Distillation</a><ul>
<li><a href="https://www.sbert.net/examples/training/distillation/README.html#knowledge-distillation">Knowledge Distillation</a></li>
<li><a href="https://www.sbert.net/examples/training/distillation/README.html#speed-performance-trade-off">Speed - Performance Trade-Off</a></li>
<li><a href="https://www.sbert.net/examples/training/distillation/README.html#dimensionality-reduction">Dimensionality Reduction</a></li>
<li><a href="https://www.sbert.net/examples/training/distillation/README.html#quantization">Quantization</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/cross-encoder/README.html">Cross-Encoders</a><ul>
<li><a href="https://www.sbert.net/examples/training/cross-encoder/README.html#examples">Examples</a></li>
<li><a href="https://www.sbert.net/examples/training/cross-encoder/README.html#training-crossencoders">Training CrossEncoders</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/data_augmentation/README.html">Augmented SBERT</a><ul>
<li><a href="https://www.sbert.net/examples/training/data_augmentation/README.html#motivation">Motivation</a></li>
<li><a href="https://www.sbert.net/examples/training/data_augmentation/README.html#extend-to-your-own-datasets">Extend to your own datasets</a></li>
<li><a href="https://www.sbert.net/examples/training/data_augmentation/README.html#methodology">Methodology</a></li>
<li><a href="https://www.sbert.net/examples/training/data_augmentation/README.html#scenario-1-limited-or-small-annotated-datasets-few-labeled-sentence-pairs">Scenario 1: Limited or small annotated datasets (few labeled sentence-pairs)</a></li>
<li><a href="https://www.sbert.net/examples/training/data_augmentation/README.html#scenario-2-no-annotated-datasets-only-unlabeled-sentence-pairs">Scenario 2: No annotated datasets (Only unlabeled sentence-pairs)</a></li>
<li><a href="https://www.sbert.net/examples/training/data_augmentation/README.html#training">Training</a></li>
<li><a href="https://www.sbert.net/examples/training/data_augmentation/README.html#citation">Citation</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/datasets/README.html">Training Datasets</a><ul>
<li><a href="https://www.sbert.net/examples/training/datasets/README.html#datasets-on-the-hugging-face-hub">Datasets on the Hugging Face Hub</a></li>
</ul>
</li>
</ul>
</div>
<div>
<p><span>Training Examples</span></p>
<ul>
<li><a href="https://www.sbert.net/examples/training/sts/README.html">Semantic Textual Similarity</a><ul>
<li><a href="https://www.sbert.net/examples/training/sts/README.html#training-data">Training data</a></li>
<li><a href="https://www.sbert.net/examples/training/sts/README.html#loss-function">Loss Function</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/nli/README.html">Natural Language Inference</a><ul>
<li><a href="https://www.sbert.net/examples/training/nli/README.html#data">Data</a></li>
<li><a href="https://www.sbert.net/examples/training/nli/README.html#softmaxloss">SoftmaxLoss</a></li>
<li><a href="https://www.sbert.net/examples/training/nli/README.html#multiplenegativesrankingloss">MultipleNegativesRankingLoss</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/paraphrases/README.html">Paraphrase Data</a><ul>
<li><a href="https://www.sbert.net/examples/training/paraphrases/README.html#datasets">Datasets</a></li>
<li><a href="https://www.sbert.net/examples/training/paraphrases/README.html#training">Training</a></li>
<li><a href="https://www.sbert.net/examples/training/paraphrases/README.html#pre-trained-models">Pre-Trained Models</a></li>
<li><a href="https://www.sbert.net/examples/training/paraphrases/README.html#work-in-progress">Work in Progress</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/quora_duplicate_questions/README.html">Quora Duplicate Questions</a><ul>
<li><a href="https://www.sbert.net/examples/training/quora_duplicate_questions/README.html#pretrained-models">Pretrained Models</a></li>
<li><a href="https://www.sbert.net/examples/training/quora_duplicate_questions/README.html#dataset">Dataset</a></li>
<li><a href="https://www.sbert.net/examples/training/quora_duplicate_questions/README.html#usage">Usage</a></li>
<li><a href="https://www.sbert.net/examples/training/quora_duplicate_questions/README.html#training">Training</a></li>
<li><a href="https://www.sbert.net/examples/training/quora_duplicate_questions/README.html#multiplenegativesrankingloss">MultipleNegativesRankingLoss</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/training/ms_marco/README.html">MS MARCO</a><ul>
<li><a href="https://www.sbert.net/examples/training/ms_marco/README.html#bi-encoder">Bi-Encoder</a></li>
<li><a href="https://www.sbert.net/examples/training/ms_marco/README.html#cross-encoder">Cross-Encoder</a></li>
<li><a href="https://www.sbert.net/examples/training/ms_marco/README.html#cross-encoder-knowledge-distillation">Cross-Encoder Knowledge Distillation</a></li>
</ul>
</li>
</ul>
</div>
<div>
<p><span>Unsupervised Learning</span></p>
<ul>
<li><a href="https://www.sbert.net/examples/unsupervised_learning/README.html">Unsupervised Learning</a><ul>
<li><a href="https://www.sbert.net/examples/unsupervised_learning/README.html#tsdae">TSDAE</a></li>
<li><a href="https://www.sbert.net/examples/unsupervised_learning/README.html#simcse">SimCSE</a></li>
<li><a href="https://www.sbert.net/examples/unsupervised_learning/README.html#ct">CT</a></li>
<li><a href="https://www.sbert.net/examples/unsupervised_learning/README.html#ct-in-batch-negative-sampling">CT (In-Batch Negative Sampling)</a></li>
<li><a href="https://www.sbert.net/examples/unsupervised_learning/README.html#masked-language-model-mlm">Masked Language Model (MLM)</a></li>
<li><a href="https://www.sbert.net/examples/unsupervised_learning/README.html#genq">GenQ</a></li>
<li><a href="https://www.sbert.net/examples/unsupervised_learning/README.html#gpl">GPL</a></li>
<li><a href="https://www.sbert.net/examples/unsupervised_learning/README.html#performance-comparison">Performance Comparison</a></li>
</ul>
</li>
<li><a href="https://www.sbert.net/examples/domain_adaptation/README.html">Domain Adaptation</a><ul>
<li><a href="https://www.sbert.net/examples/domain_adaptation/README.html#domain-adaptation-vs-unsupervised-learning">Domain Adaptation vs. Unsupervised Learning</a></li>
<li><a href="https://www.sbert.net/examples/domain_adaptation/README.html#adaptive-pre-training">Adaptive Pre-Training</a></li>
<li><a href="https://www.sbert.net/examples/domain_adaptation/README.html#gpl-generative-pseudo-labeling">GPL: Generative Pseudo-Labeling</a></li>
</ul>
</li>
</ul>
</div>

</div>


           </div>

    </section>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to found a company in Germany: 14 "easy" steps and lots of pain (174 pts)]]></title>
            <link>https://eidel.io/how-to-found-a-company-in-germany-14-easy-steps-and-lots-of-pain/</link>
            <guid>39959368</guid>
            <pubDate>Sun, 07 Apr 2024 08:51:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eidel.io/how-to-found-a-company-in-germany-14-easy-steps-and-lots-of-pain/">https://eidel.io/how-to-found-a-company-in-germany-14-easy-steps-and-lots-of-pain/</a>, See on <a href="https://news.ycombinator.com/item?id=39959368">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>While Estonia has famously introduced its e-residency which enables future founders to incorporate their company in minutes, things are still quite different here in Good Old Germany.</p>



<p>Germany has a reputation for precision and adhering to rules.</p>



<p>I’m not sure how any of these aspects apply to the founding of companies though. It’s just damn slow, painful and sometimes borderline broken.</p>



<p>Regardless, I have performed this feat successfully in the past (twice!), so I thought I’d share my experience with you and hopefully save you a huge chunk of time. Also, the top-ranked Google search results for this topic are usually semi – content marketing posts of bookkeeping software or lawyers, and I thought a more rant-focused post was <em>exactly</em> the thing which the world needs right now.</p>



<p>The usual disclaimer applies: I’m a doctor, not a tax advisor. If in doubt, search out a real tax advisor (and/or doctor).</p>



<h2 id="step-0-reminding-yourself-that-you-can-do-it-15-minutes">Step 0: Reminding Yourself That You Can Do It (15 minutes)</h2>



<p>I was scared of founding a company for a very long time because I thought I didn’t know enough about it. Here’s what changed my mind and gave me self-confidence: I ate a Kebab in Berlin. While eating it and staring at people, I looked at the Kebab store and its owner dude. That made me realize that, yes, also this Kebab store owner dude seems to have gone through this process successfully. And with great success, too! Because he had customers (me) and was making revenue (my money).</p>



<p>So if a Kebab owner dude can navigate the painful bureaucratic system in Germany&nbsp;<em>while working grueling hours behind a Kebab grill</em>, I might be able to do so, too, sitting in my comfy home office while constantly overthinking things.</p>



<p>As a side note, probably another data point that migrants might be better entrepreneurs.</p>



<p>So! Step 0: Remember that you can do this, and everyone started out clueless. This is learning by doing.</p>



<h2 id="step-1-do-you-really-need-a-company">Step 1: Do You Really Need a Company?</h2>



<p>In simplified terms (I like those), you have two options if you want to launch a business in Germany: A sole proprietorship (Einzelunternehmen), or a limited liability company (GmbH).</p>



<p>In even more simplified terms, here’s a super-simplified “flowchart” of how to decide what to choose:</p>



<ul>
<li>You want to hire people right now, or you’re in a super risky industry where people get constantly sued: Choose a GmbH.</li>



<li>Everything else: Choose an Einzelunternehmen</li>
</ul>



<p>If you need more details, here’s a quick comparison table. I won’t go into much detail here though (let me know if you’re interested) because this article is about founding the GmbH. If the GmbH is not for you, you can congratulate yourself an avoiding a lot of complexity (good job!) and stop reading here.</p>



<figure><table><thead><tr><th>&nbsp;</th><th>Einzelunternehmen</th><th>GmbH</th></tr></thead><tbody><tr><td>Initial share capital required</td><td>0€</td><td>12.5k€</td></tr><tr><td>Founding costs</td><td>Nearly free</td><td>~900€</td></tr><tr><td>Yearly bookkeeping costs</td><td>Nearly free</td><td>1.000€ – 2.500€</td></tr><tr><td>Monthly bookkeeping costs</td><td>0-100€</td><td>100€ – 400€</td></tr><tr><td>Liability</td><td>You are personally liable</td><td>Liability limited to company</td></tr><tr><td>Yearly profits taxed at</td><td>Your tax rate (up to 45%)</td><td>Corporate tax rate (30%)</td></tr><tr><td>General complexity and pain</td><td>Low</td><td>High</td></tr></tbody></table></figure>



<p>Now, assuming you&nbsp;<em>still</em>&nbsp;want to move forward with the GmbH, let’s start (finally)!</p>



<h2 id="step-1-choose-a-name-but-dont-consult-the-only-people-youre-allowed-to-consult">Step 1: Choose a Name, But Don’t Consult The Only People You’re Allowed To Consult</h2>



<p>You might think that choosing a name for your company would be trivial. This might be true in startup-friendly and digitalized countries. Germany is neither.</p>



<p>The first and somewhat obvious aspect is that you can’t choose a name which already exists – so if someone else has founded Magic Software GmbH, you can’t choose that name. Look it up in the&nbsp;<a href="https://www.handelsregister.de/">company registry (Handelsregister) here</a>&nbsp;(be warned: Windows 95 vibes, and the website is down sometimes).</p>



<p>The second and much more confusing aspect is that, theoretically, your company name shouldn’t consist of words which are commonly used. I noticed this when I attempted to found OpenRegulatory GmbH – the fact that “Open” and “Regulatory” are both commonly used words makes this an invalid company name.</p>



<p>Yes, seriously!</p>



<p>So the obvious question is “what are commonly used words”. The answer is simple, pretty much any word in a dictionary. Yeah, great.</p>



<p>So, if you want to name your company Magic Software GmbH, that’s technically not possible, because “magic” and “software” are entries in a dictionary. However, if you name it Magic42 Software GmbH, that’s totally fine, because “magic42” is not in the dictionary.</p>



<p>And now the next obvious question is “why does this apparently not apply to other people”, because there are lots of companies with “invalid” names which apparently exist: ResearchGate GmbH, Delivery Hero GmbH, GetYourGuide Deutschland GmbH.</p>



<p>The answer is that the enforcement of this rule is very random, and it literally depends on whoever is in charge of entering your company name into the registry. Different people have different interpretations of this rule, apparently.</p>



<p>So can you get some sort of consultation whether your planned company name is okay? Yes, you can! There’s one institution, called the IHK, which offers this service.</p>



<p>Every company (includes yours in the future) has to become a member of the IHK and pay its fees, there’s no way to opt out. If you think this sounds really shady, you might be on to something! The IHK prides itself on supporting businesses etc., but then again, you can’t opt out, so I guess you just have to accept that they exist and do mostly-average-sometimes-very-mediocre work. The likelihood that you’ll ever get in touch with them and benefit from their work is around 1%.</p>



<p>.. And that 1% is right now, because the IHK is the only institution which has the authority to tell you whether your planned company name might be acceptable.</p>



<p>But – stop right there – don’t ask them, because their interpretation will be the most unpragmatic interpretation you can imagine. Here’s my abbreviated dialogue with them when attempting to found OpenRegulatory GmbH:</p>



<p><strong>Oliver:</strong>&nbsp;I want to found a company called OpenRegulatory GmbH. Does that work?<br><strong>IHK:</strong>&nbsp;No. Because the name consists of common words.<br><strong>O:</strong>&nbsp;But what about ToolTime GmbH, JustWatch GmbH, RIDE GmbH, BioWink GmbH, etc.?<br><strong>IHK:</strong>&nbsp;That would depend on whoever entered it into the registry that, it’s subjective. You could add a number or a phantasy word (yes, seriously) to your name.<br><strong>O:</strong>&nbsp;What about spaces? OpenRegulatory123 vs. OpenRegulatory 123?<br><strong>IHK:</strong>&nbsp;Spaces don’t matter.<br><strong>O:</strong>&nbsp;How about OpenRegulatory.com GmbH?<br><strong>IHK:</strong>&nbsp;Domains are not allowed.</p>



<p>And that, dear reader, is the story how I settled on “OpenReg GmbH”. A daily and painful reminder of arbitrary German bureaucracy.</p>



<p>Don’t ask the IHK about approval for your company name. Just go for it.</p>



<p>By the way, what happens if the person who enters it in the registry declines to enter your chosen company name? Then you have to repeat step 2 again and you’ll lose a few more weeks, see below.</p>



<h2 id="step-2-find-a-notary-public-who-picks-up-the-phone">Step 2: Find a Notary Public Who Picks Up The Phone</h2>



<p>Your next step is to actually incorporate your company. You might think there’s an online form for that. No, not in Germany. You have to make an in-person appointment with a notary public – that’s a person who reads out documents for a living and ensures it’s actually you who appears at their place, not e.g. a con artist who secretly incorporates companies under other people’s names (beware).</p>



<p>So time to pick up your phone, open Google Maps and search for a notary public (Notar) close to you.</p>



<p>I’ve collected some criteria how to select a suitable Notar:</p>



<ul>
<li>They pick up the phone.</li>



<li>They actually are willing to give you an appointment and are not booked out.</li>
</ul>



<p>High, expectations, I know. Once you’ve found a suitable Notar, they might send you an email with one of those crappy PDF forms to fill out (yeah, those without text fields). You’ll enter your address, company name (how you chose a good one), articles of association and share capital. Talking about those two things..</p>



<h3 id="step-2a-articles-of-association-use-the-musterprotokoll">Step 2a: Articles of Association: Use The Musterprotokoll</h3>



<p>Your articles of association (Gesellschaftervertrag) contain the rules of your company, e.g. who owns how many shares and who can make decisions.</p>



<p>You don’t have to draft one yourself though: You can use the official German template (Musterprotokoll) which covers the most simple cases, e.g. if you’re a solo founder.</p>



<p>In all other cases, e.g. if you have Venture Capital investors (ugh), you might have to use whatever your investors want and/or engage a lawyer to draft one for you which opens yet another gigantic can of worms. I’ll just skip that possibility here.</p>



<p>Instead, the magic word is Musterprotokoll.</p>







<p>I skipped over this before in the spirit of simplification, but will have to give you a brief summary on share capital now. In short, a GmbH needs 25k€ initial share capital, so that’s the sum you’ll be paying into the company bank account from your private savings. Luckily, the money doesn’t disappear – you can use it within the GmbH to pay bills (most likely the ~1k€ notary and incorporation costs which will become due soon!). But you can’t use the 25k€ privately privately anymore as it’s part of the company now.</p>



<p>There are two small hacks here which I’ll just briefly mention:</p>



<ul>
<li>You could either only pay in half of it (12.5k€) and transfer the other 12.5k€ some time later;</li>



<li>Or, you could&nbsp;<em>not</em>&nbsp;found a GmbH but a UG instead which can have a share capital of less than 25k€, e.g. 4k€ (choose a sum which is above the initial incorporation costs because otherwise your company will be bankrupt after a few days – not a good idea).</li>
</ul>



<p>For simplicity’s sake, I assume you’re rich and have 25k€ lying around which you’ll use to found your GmbH. I did found a UG in the past, too, with 4k€, so that’s your alternative.</p>



<h2 id="step-3-go-to-the-notary-public-notar">Step 3: Finally Go To The Notary Public (Notar)</h2>



<p>Now, let’s hope that you get an appointment at the Notar within the next two weeks or so. Let’s also hope you spent the time in a productive manner and not just sitting around and watching YouTube videos like I did.</p>



<p>Go to the Notar. Don’t forget your ID or passport because that’s their foolproof way of identifying you and ensuring you are you and not a mysterious con man setting up companies in your name.</p>



<p>The Notar will read out your company’s articles of association to you. Yes, they will read it out even though both of you already know it. And yes, even if you use the official German template, they will read it out.</p>



<p>It might seem ridiculous, two grown-up people sitting in a room and reading out a company incorporation template provided by the state. If you’re currently learning German, you can treat it like a listening exercise (a very expensive one).</p>



<p>After that’s done, you will sign various documents.</p>



<p>And that’s it! Your company is incorporated.. kind of. But you are not done at all and many days still lie ahead on your journey, young hobbit. On to the next step.</p>



<h2 id="step-4-receive-documents-from-notar">Step 4: Receive Documents From Notar</h2>



<p>The Notar will now finalize the documents you just signed and send them to you. If they’re super digital, they’ll send you scans of the paper sheets you signed via email. And if they’re super fast, they’ll send them on the same day. Remember: These are the documents you just signed, so the critical path here is about one of the Notar assistants putting your just-signed documents in a scanner and sending them to you via email.</p>



<p>They might forget about it though, or they might only send it via snail mail.</p>



<h2 id="step-5-find-a-bank-account">Step 5: Find a Bank Account</h2>



<p>Your company is now in the weird situation of being partially incorporated. This is resembled by the fact that you refer to your company now as “Magic Software GmbH i.G.” where the i.G. means it’s currently being incorporated (in Gründung). In theory, you could now sign contracts and send out invoices with this weird name, but no one does that, because it seems a bit awkward.</p>



<p>What you should do instead is set up a bank account, because you now have a chicken-and-egg situation:</p>



<p><strong>Situation:</strong> Your Notar needs proof that your company has a bank account and the share capital (25k€) has been paid in to finish the official company registration in the Handelsregister (= the Windows 95 website).</p>



<p><strong>Problem:</strong> To open a bank account, your company needs to be in the Handelsregister.</p>



<p>The easy solution to this is that most German banks allow you to open a company bank account <em>even though you’re not in the Handelsregister yet</em>. Just be sure to keep the “i.G.” thing behind your company name for the time being.</p>



<p>Two important points on how to save time here!</p>



<ol>
<li>International “startup” banks like Wise generally don’t support this, so don’t even try! You’ll lose multiple days going back and forth with their support, like I did. You can open a Wise bank account later when you’re properly incorporated.</li>



<li>All the old-school banks in Germany (those with brick-and-mortar branches) generally are super slow and will take multiple weeks to open your bank account.</li>
</ol>



<p>Instead, choose a startup bank which openly supports German companies which are currently being founded. In the past, I used Penta for that but they got bought by Qonto. From what I hear, the same should now be possible with Qonto.</p>



<p>If they’re fast, you can get all of this done in a day (including the awkward KYC video call with a friendly person in an Eastern European country).</p>







<p>The next step, for a change, doesn’t involve waiting for a slow institution and is instead completely up to you: Pay in your share capital – those are the 25k€ I mentioned earlier. Your notary might have given you some hints on which text they’d like to see in the transaction description, e.g. “Stammeinlage Gesellschafter &lt;your name&gt;”.</p>



<h2 id="step-7-forward-bank-account-paperwork-to-notary">Step 7: Forward Bank Account Paperwork To Notary</h2>



<p>Once that’s done and the share capital has arrived in your fresh new company bank account, you need two confirmations which you’ll send to your notary:</p>



<ul>
<li>A confirmation that your company now has a bank account at whatever bank you chose earlier.</li>



<li>The most recent account statement which shows that you paid in the share capital of 25k€.</li>
</ul>



<p>Send those PDFs to your notary via email.</p>



<h2 id="step-8-waiting-for-the-notary-and-registration-in-the-commercial-registry-handelsregister">Step 8: Waiting For The Notary And Registration In The Commercial Registry (Handelsregister)</h2>



<p>With that confirmation in hand, your notary will now begin a highly sophisticated digital manoeuvre: They will perform an “XML upload” (yes) to the German commercial registry (Handelsregister) to finalize your company registration. Ah, and they will charge you for that, too, adding to your total incorporation costs of approximately 1k€ (remember your listening exercise?).</p>



<p>Now begins another waiting period, because this upload has to be manually approved by those famous people who approve company names (remember?. Not the IHK people (phew), but the actual people who work at the registry. As noted above, these people have highly subjective and varying ideas about company names, so the big question now is whether your name gets rejected if you used commonly-used words.</p>



<p>This usually takes another 1-2 weeks, but it might take longer based on how busy or understaffed the commercial registry is.</p>



<p>Two possible outcomes:</p>



<ul>
<li>Your name gets rejected. Sad dog face. Move back to step 2 and lose multiple weeks. Yes, seriously.</li>



<li>Your name gets approved. You will receive a “preliminary invoice” from the commercial registry.</li>
</ul>



<h2>Step 9: Pay Preliminary Invoice</h2>



<p>The Handelsregister will send you a preliminary invoice (150€ for me at the time). You have to pay it so that your registration moves forward.</p>



<p>You can use your company bank account (with the 25k€ in it) for that, because these are, well, company-operational costs.</p>



<p>If you want to save a few days, you can in theory go there in person and pay in cash (yes, seriously). Not sure if it’s worth it though.</p>



<h2 id="step-9-download-confirmation-from-commercial-registry">Step 10: Download Confirmation From Commercial Registry</h2>



<p>The waiting game now entails to check the&nbsp;<a href="https://www.handelsregister.de/">Handelsregister</a>&nbsp;daily by entering your company name as a search term. After 1-2 weeks, it should be listed and you can download a PDF confirmation of its listing which is your official proof that your company exists!</p>



<p>Your notary will likely also be checking this and they’ll also send you a confirmation at some stage.</p>



<p>So are you done? Can you write invoices now? No. You still need your tax ID – to be exact, two tax IDs. But before we get those, an important word of warning.</p>



<h2>Step 11: Danger: Brace For Handelsregister Spam</h2>



<p>This is crazy and might make you feel like you’re in a developing country. In short, there are very shady organizations which monitor new entries in the Handelsregister, and they will send your company invoices which <em>look</em> like invoices of the Handelsregister, but they are not (remember, you already paid the 150€). They call these services “registry services” or so and attempt to exploit the confusion of founders like you (can’t blame you, the whole process is confusing).</p>



<p>Ignore them and don’t pay them.</p>



<p>Onwards to the two tax IDs.</p>



<h2 id="step-10-filling-out-the-fragebogen-zur-steuerlichen-erfassung">Step 12: Filling Out The Fragebogen Zur Steuerlichen Erfassung</h2>



<p>Take a deep breath, because this is just painful. Yes, your company is incorporated, but until now, the tax authorities don’t know much about it. Wait, you thought that your data was transmitted there automatically? Think again.</p>



<p>It’s now up to you to fix that by filling out a form called “Fragebogen zur steuerlichen Erfassung”. It can best be translated as “questionnaire for tax registration”.</p>



<p>It is 10 pages long. Yes, 10 pages! Even I as a German thought some of the questions were quite tricky because they were written in bureaucratic German. Here’s an example:</p>



<blockquote>
<p>Die Gesellschaft ist in nur einem EU-Mitgliedsstaat ansässig und der Gesamtbetrag – ohne Umsatzsteuer – der oben bezeichneten Umsätze an in anderen EU-Mitgliedstaaten außerhalb des Ansässigkeitsstaats ansässige Nichtunternehmer überschreitet im laufenden Kalenderjahr nicht 10.000 € und hat dies auch im vorangegangenen Kalenderjahr nicht getan.</p>
</blockquote>



<p>DeepL translation attempt:</p>



<blockquote>
<p>The company is domiciled in only one EU Member State and the total amount – excluding VAT – of the above-mentioned sales to non-entrepreneurs domiciled in other EU Member States outside the country of domicile does not exceed € 10,000 in the current calendar year and did not do so in the previous calendar year.</p>
</blockquote>



<p>Good luck. Here are some quick pointers:</p>



<ul>
<li>Most important: Tick the checkbox to request a EU VAT ID – you’ll need that for registering with online payment processors (Stripe, Paddle, etc.), and for writing invoices for customers in the EU (outside of Germany).</li>



<li>Estimate your revenue at 0€ for now unless you have real reason to believe otherwise (do you have paying customers lined up already? probably not). That way, you only have to pay corporate tax at the end of the year based on your actual profit (vs. having to prepay tax every quarter).</li>



<li>Tick “Bargründung” – you founded your company by paying in 25k€ in cash, not by putting in random items (e.g. property).</li>



<li>Tick “Sollversteuerung” which means you pay taxes based on the&nbsp;<em>invoices</em>&nbsp;you send and receive, not based on&nbsp;<em>money</em>&nbsp;you actually send and receive (requirement for GmbH, I think).</li>
</ul>



<p>Still, the form is a pain. Good luck. The good news is that if you screw it up, your tax advisor can likely talk to the authorities and fix it. Talking about tax advisors..</p>



<h2 id="step-10a-finding-a-tax-advisor-and-bookkeeper">Step 12a: Finding a Tax Advisor And Bookkeeper</h2>



<p>If you haven’t noticed yet, dealing with the financial and tax authorities in Germany is a huge pain – not because they’re evil people (they’re often actually really nice!), but because of all the clunky systems and processes around it. Communication with them is often via physical snail mail. Some forms can be submitted electronically, others can not.</p>



<p>Additionally, your company is required to do monthly bookkeeping to, among other things, calculate the total VAT you charged your customers and transferring that to the authorities. I still haven’t fully gotten into how the hell all of this bookkeeping works, and neither should you – you have better things to do, like running your company and generating revenue.</p>



<p>So my somewhat unfortunate recommendation is to look for a tax advisor who also offers bookkeeping and outsource everything to them. Unfortunate, because I feel like this creates yet another middleman who profits from the complexity of the system.</p>



<p>The benefit is that you only have to upload your invoice PDFs every month to whatever broken web portal your tax advisor offers, and they’ll take care of the rest, including handling questions of the tax authorities if they come up.</p>



<p>The costs for this differ, but a good rule is to select a tax advisor who charges you a flat fee based on your company revenue. Other tax advisors charge 100-150€ / hr based on the hours they spend, not recommended.</p>



<p>As a side note, I’m currently re-evaluating this – some “new generation” tax advisors offer more innovative approaches of enabling you to do your own bookkeeping in fancy SaaS software, while they only review it.</p>



<h2 id="step-11-receiving-your-tax-id">Step 13: Receiving Your Tax ID</h2>



<p>After your tax form (step 10) has been processed, you should receive your company’s German tax ID in the snail mail. This tax ID will finally enable you to write invoices. It usually has the format of xx/xxx/xxxxx where x is a number. Add those to your invoices (“Steuernummer: xx/xxx/xxxxx”) and you’re now ready to create invoices!</p>



<p>Don’t confuse this with the EU VAT ID though which usually arrives slightly later.</p>



<h2 id="step-12-receiving-your-vat-id">Step 14: Receiving Your VAT ID</h2>



<p>A few days later, your EU VAT ID should arrive, also via snail mail. Its format is usually DEXXXXXXXXX where X is a number. You should add it to all invoices because it’s required for non-German EU customers. It’s also required to sign up for payment processors like Stripe and Paddle.</p>



<h2 id="done">Done!</h2>



<p>You’re done already! Only 12 steps and around 6 weeks in total, and your German GmbH is set up.</p>



<p>Now you’re ready for business! Hopefully your prospective customers haven’t disappeared while you were busy setting up your GmbH.</p>



<h2 id="optional-steps">Optional Optimizations</h2>



<p>Here are a few optional ideas about what to do next:</p>



<h3>Switch Banks?</h3>



<p>You could move to a bank which is better and/or cheaper than your current bank, because now your search is no longer limited to banks which allow partially-incorporated companies. I use Wise as their offering is pretty good. That being said, they have a weird habit of automatically deactivating accounts from time to time and their support is sometimes ridiculously bad, so I can’t fully recommend them.</p>



<p>In a very ironic turn of events, you could even consider moving to a brick-and-mortar bank now! You’re no longer in a rush as your company is already incorporated and has a bank account, and the benefit of brick-and-mortar banks is that they usually don’t lock you out of your account randomly every now and then. If you’re undecided, that’s also fine, because a company can have multiple bank accounts. Why not have both?</p>



<h3>Liquidity Planning</h3>



<p><strong>Liquidity (money) planning:</strong>&nbsp;You’ve got 25k€ in your bank account, but that might not last you very long. At the very least, all the fees including the notary will reduce that by around 1k€, and if you pay yourself a salary or hire someone, money will disappear fast – an average software engineer in Germany can easily cost you 6-8k€ / month. You could transfer more money to your company by giving it a loan – make sure to create all the paperwork for that though, i.e. create a loan contract (yes, with yourself) before you transfer the money.</p>



<h2 id="tax-considerations">Tax Considerations</h2>



<p>Some quick thoughts about taxes.</p>



<h3>Corporate Taxes &amp; VAT In Germany</h3>



<p><strong>Germany taxes company profits at approximately 30%.</strong>&nbsp;In simplified terms this means that, at the end of the year, whatever money is left over, gets taxed at 30% – so make sure to not spend it (nervous chuckle). Here’s an example: You receive 200k€ in money over the course of a year (revenue) and you spend 100k€ on costs like salaries and hardware. Your profit at the end of the year is 100k€ which gets taxed at 30%, so you have to pay 30k€ in taxes and only keep the remaining 70k€. Quite a lot of taxes here.</p>



<p><strong>You charge your customers VAT and pay it at the end of the month:</strong>&nbsp;On your invoices, you add VAT, e.g. when selling to German customers (19% currently). You don’t get to keep that though. Instead, you transfer the total VAT of each month to the tax authorities – so make sure you don’t spend it.<br>Things get more complex if you sell stuff to customers within the EU, but outside of Germany. I’ll skip that complexity here and maybe write about it another time.</p>



<h2>Holding Company?</h2>



<p>Talking about taxes, there’s one rather huge optimization you can do: Instead of owning your company yourself, you can create <em>another</em> company first which holds it.</p>



<p>So, specifically, the first setup I described above would look like this, let’s call it <strong>Scenario 1 (direct ownership)</strong>:</p>



<p>You (private person) own 100% of shares of Magic Software GmbH.</p>



<p>Instead, you could do this holding thing, let’s call it <strong>Scenario 2 (holding)</strong>:</p>



<p>You (private person) own 100% of shares of Magic Holding GmbH, and Magic Holding GmbH owns 100% of shares of Magic Software GmbH.</p>



<p>What’s the benefit? Let’s look at how things are taxed with the 100k€ profit I mentioned earlier.</p>



<h3>Scenario 1: Direct Ownership</h3>



<p>Magic Software GmbH makes 100k€ in profits. Those get taxed at 30%, so 70k€ remain. If you want to pay out these profits to yourself (as you own 100% of the company), you’ll have to pay an <em>additional </em>~26% capital gains tax on the 70k€, so you end up with around 51k€.</p>



<h3>Scenario 2: Holding</h3>



<p>Magic Software GmbH makes 100k€ in profits. Those get taxed at 30%, so 70k€ remain. If you want to pay those out, the first step is now to pay it out to Magic Holding GmbH, because <em>that</em> company is the owner of Magic Software GmbH, not you.</p>



<p>And here’s the benefit: In simplified terms, you don’t pay taxes then. So you take 70k€ out of Magic Software GmbH and pay it out into Magic Holding GmbH and still have 70k€.</p>



<p>In the Magic Holding GmbH, you could e.g. invest it in ETFs and leave it there until you really need it.</p>



<p>And then, if you pay it out from Magic Holding GmbH to you personally, then yes, you pay ~26% capital gains tax – but the huge benefit here is that it could accrue investment returns in the meantime!</p>



<p>There are also some pretty huge other optimizations here – e.g. you couldn’t even take it out of your holding company and instead <em>buy stuff within your holding company</em>, like property or airplanes (yes, seriously) and then <em>rent that stuff out to you as a person</em>. But this, dear reader, is pretty much exactly where my knowledge ends.</p>



<p>I did end up going for the holding thing because the benefits really are great, and if you haven’t noticed by now, if there’s one thing Germans love, it’s optimizing their taxes. The drawback of holding construct is that you have to found your holding company <em>first</em>, so you have to go through all of this twice.</p>



<p>Hope I saved you some time. Good luck!</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[It's not what the world needs right now (144 pts)]]></title>
            <link>https://thebaffler.com/odds-and-ends/its-not-what-the-world-needs-right-now-norman-wilson</link>
            <guid>39959069</guid>
            <pubDate>Sun, 07 Apr 2024 07:56:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thebaffler.com/odds-and-ends/its-not-what-the-world-needs-right-now-norman-wilson">https://thebaffler.com/odds-and-ends/its-not-what-the-world-needs-right-now-norman-wilson</a>, See on <a href="https://news.ycombinator.com/item?id=39959069">Hacker News</a></p>
<div id="readability-page-1" class="page"><div aria-label="Article Text">
            <p>It’s 2016. I’m a contemporary artist and have been living off of Medicaid, food stamps, and $20k annually since graduating from art school five years ago. I see the return policies offered by Bezos and the Waltons as loan agreements; I lend them $1,500, and the interest they pay is my use of a new hard drive. While TurboTaxing I hallucinate a DJ software skin and use the expense estimate sliders as fraud modulators. I accept unpaid exhibition offers from salaried curators and gallerists in far-flung cities and tack on lecture stops at $150 a pop, spending as much time as possible as a guest in circulation so as to avoid paying rent anywhere.</p>
<p>This hustle will continue for five more years, but right now I feel like I’m going blue-chip because I’m about to show new videos in four different biennials. One of these new videos—<em>Ode to Seekers 2012</em>—is a loose adaptation of Keats’s “Ode on a Grecian Urn” and depicts 3D animated mosquitos, syringes, and oil pumps sucking and fucking a surface that looks, alternately, like human skin under a microscope, desert salt flats, or potato casserole. Set to a remix I had made of Icona Pop’s “I Love It,” the video is celebratory in tone, freeing me from what I’ve begun to call the “cottage industry of critical art,” <a href="#footnote1" id="anchor1">[1]</a> an echo chamber/conference room in which overeducated tryhards attempt to outperform each other with the most perfect politics possible. The video doesn’t have a point; it’s more like a knot.</p>
<p>These biennials will ultimately amount to a deficit due to their meager production budgets, but FedEx loses my <em>Robin Williams Window Shade</em> sculpture, and I collect $9,000 in insurance value. New York increasingly feels like a sexy jail or a 9/11-themed Sbarro, so I use the money to buy a 2000 Volvo S70 with 250,000 miles on it for $500 from my dad, who likes to fix up totaled jalopies with his friend. The AC’s cooked, but the summer is my window of opportunity, so I head west in late June to become an “LA Artist,” which to me is an indicator that one has achieved adequate exposure and now needs time and space to focus on commissions to come.</p>
<p>In LA I realize it’s impossible to get a lease when your income is an insurance money bonanza and three €150 checks from European art schools. But I also realize that if I answer, “How are you?” with “Fine . . . I’m looking for a place to stay,” everyone knows someone who needs a plant sitter. Rather than seeing the crust punk through the Lacoste or realizing that my storage unit is my car trunk, people seem to think I’m a rich kid with a Volvo quirk. Looking like gay Abe Lincoln probably helps.</p>

<figure id="attachment_49968" aria-describedby="caption-attachment-49968"><a href="https://thebaffler.com/wp-content/uploads/2024/04/artsy-1.jpg"><img fetchpriority="high" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/artsy-1.jpg" alt="A portrait of the author." width="800" height="1200" srcset="https://thebaffler.com/wp-content/uploads/2024/04/artsy-1.jpg 800w, https://thebaffler.com/wp-content/uploads/2024/04/artsy-1-700x1050.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/artsy-1-350x525.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/artsy-1-450x675.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/artsy-1-500x750.jpg 500w" sizes="(max-width: 800px) 100vw, 800px"></a><figcaption id="caption-attachment-49968">Artsy portrait aboard the <em>Queen Mary</em>, 2016, by Emily Berl</figcaption></figure>

<figure id="attachment_49990" aria-describedby="caption-attachment-49990"><a href="https://thebaffler.com/wp-content/uploads/2024/04/Wilson-Mosquito-CU.jpg"><img decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/Wilson-Mosquito-CU.jpg" alt="A zoomed in still of a mosquito penetrating dry skin." width="1800" height="1013" srcset="https://thebaffler.com/wp-content/uploads/2024/04/Wilson-Mosquito-CU.jpg 1800w, https://thebaffler.com/wp-content/uploads/2024/04/Wilson-Mosquito-CU-700x394.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/Wilson-Mosquito-CU-350x197.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/Wilson-Mosquito-CU-450x253.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/Wilson-Mosquito-CU-500x281.jpg 500w" sizes="(max-width: 1800px) 100vw, 1800px"></a><figcaption id="caption-attachment-49990">Andrew Norman Wilson,&nbsp;<em>Ode to Seekers 2012</em>, 2016</figcaption></figure>

<p>In September I go to South Korea to show <em>Ode to Seekers 2012</em> at the Gwangju Biennial. The beast mode I typically find myself in during the install-to-opening phase intensifies into a full-blown mania. At the press preview, I take too much Adderall and start crying when asked what art is, tears that imply the inability of language to account for the sublime. I watch my piece over and over and decide my next project will be a 3D animated Humpty Dumpty video drawing from Lewis Carroll and James Joyce.</p>
<p>Back in LA I’m confronted with the reality that there will be no champagne receptions, boutique hotel rooms, or complimentary car service for the foreseeable future. Instead, I live in a four bedroom on the far east side with five to nine other artists. A former student visits and introduces me to his wife and baby. I introduce him to a few of my twenty-three-year-old roommates and two guys who slept in the shed last night.</p>
<p>I work on my laptop in my bedroom, so when the online art brokerage platform Artsy asks to photograph me in my studio for a “Top Emerging Artists of 2016” listicle, I lie and say that I have Emirati collector-patrons who let me live and work in their long-term rental on the RMS <em>Queen Mary</em>, the retired British ocean liner-turned-hotel in the port of Long Beach. I rent a suite for the day of the shoot. The photographer is very curious about my live/work situation, which unbeknownst to her, I’ve only had for two hours. I tell her my patron’s daughter Abitha is still asleep in my room, and the whole family will get upset if we disturb her, so we should just take photos of me on the deck.</p>

<figure id="attachment_49959" aria-describedby="caption-attachment-49959"><a href="https://thebaffler.com/wp-content/uploads/2024/04/UnthinkableBygone1-1.jpg"><img decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/UnthinkableBygone1-1.jpg" alt="A photo of the bisected body of a dinosaur costume." width="1800" height="1013" srcset="https://thebaffler.com/wp-content/uploads/2024/04/UnthinkableBygone1-1.jpg 1800w, https://thebaffler.com/wp-content/uploads/2024/04/UnthinkableBygone1-1-700x394.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/UnthinkableBygone1-1-350x197.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/UnthinkableBygone1-1-450x253.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/UnthinkableBygone1-1-500x281.jpg 500w" sizes="(max-width: 1800px) 100vw, 1800px"></a><figcaption id="caption-attachment-49959">Andrew Norman Wilson, <em>The Unthinkable Bygone</em>, 2016</figcaption></figure>

<figure id="attachment_49971" aria-describedby="caption-attachment-49971"><a href="https://thebaffler.com/wp-content/uploads/2024/04/Frag_ANW_3895-1.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/Frag_ANW_3895-1.jpg" alt="A portrait of the artist." width="2560" height="1707" srcset="https://thebaffler.com/wp-content/uploads/2024/04/Frag_ANW_3895-1.jpg 2560w, https://thebaffler.com/wp-content/uploads/2024/04/Frag_ANW_3895-1-700x467.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/Frag_ANW_3895-1-350x233.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/Frag_ANW_3895-1-450x300.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/Frag_ANW_3895-1-500x333.jpg 500w" sizes="(max-width: 2560px) 100vw, 2560px"></a><figcaption id="caption-attachment-49971">Barneys New York portrait at Grandma’s house in Pasadena, CA, 2017, by Christopher Fragapane</figcaption></figure>

<p>It’s 2017. A friend of a friend offers me a room in his grandmother’s mansion for $900 a month, which includes a private balcony over the pool. Grandma lives in a nursing home, so it’s just me and this married couple living with her massive art collection. I feel like I’ve won a WASP LARPer lottery. Someone tips off Barneys New York about the boho-chic lifestyle I’ve assumed at Grandma’s, and they reach out to interview and photograph me for their fall catalog. I ask a model what they would get paid for a shoot and propose $2,000 to Barney’s. They reject my proposal and offer a $1,000 gift card. I discover a website that will turn the encrypted plastic into $940 cash and accept.</p>
<p>I line all four walls of my studio with pictures of Barney the dinosaur impersonators and tell the interviewer that I’m working on a new project as a follow-up to my 2016 video <em>The Unthinkable Bygone</em>, in which a 3D model of Baby Sinclair from Jim Henson’s animatronic puppet TV series <em>Dinosaurs</em> (1991–1994) is subjected to simulation, dissection, reflection, and endoscopy. I say I’m interested in pop cultural representations of the surfaces of dinosaurs, and how we hollow out the earth to find dinosaur bones, and then use those bones, along with our knowledge of current species, to literally flesh out vivid caricatures about our unthinkable earthly predecessors. That bit doesn’t run in the interview, but every photo he takes is full of bootleg Barneys.</p>
<p>To others my new life seems like it’s all fun and games, but in actuality I’m miserable. The maxim “money doesn’t buy happiness” starts to ring in my head. Not because I actually have money, but because I’m living with the material comforts of someone who does, and it doesn’t seem to make me feel any better. I have the ugly feeling that an <em>Artforum</em> feature, institutional acquisitions, and another lap around the art world circuit would cure this sense of lack.</p>
<p>But Trump is in office, and my work is deemed less “urgent”—“irresponsible,” even. A curator who selected me for an Art Basel commission ghosts me. A gallerist who wants to work with me says she can’t add a white man to her roster. An esteemed curator from the Middle East tells me I should probably get a day job for a while because my career outlook in the art world is bleak. It becomes trendy to believe that images within contemporary art contexts can directly achieve the goals of political struggle. The proliferation of bad faith gestures toward political change and the aestheticized consumption of other people’s suffering sickens me, especially when these expressions still play into the financial objectives of oil barons, arms dealers, and other vampires.</p>

<figure id="attachment_49981" aria-describedby="caption-attachment-49981"><a href="https://thebaffler.com/wp-content/uploads/2024/04/Kodak-Still-1.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/Kodak-Still-1.jpg" alt="A digital illustration with purple background and an upset, gray figure of a woman’s head standing in front of gray fields." width="1000" height="560" srcset="https://thebaffler.com/wp-content/uploads/2024/04/Kodak-Still-1.jpg 1000w, https://thebaffler.com/wp-content/uploads/2024/04/Kodak-Still-1-700x392.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/Kodak-Still-1-350x196.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/Kodak-Still-1-450x252.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/Kodak-Still-1-500x280.jpg 500w" sizes="(max-width: 1000px) 100vw, 1000px"></a><figcaption id="caption-attachment-49981">Andrew Norman Wilson, <em>Kodak</em>, 2018</figcaption></figure>

<figure id="attachment_49979" aria-describedby="caption-attachment-49979"><a href="https://thebaffler.com/wp-content/uploads/2024/04/IMG_7934-1-scaled.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/IMG_7934-1-scaled.jpg" alt="A cavern with holes that form the shape of a face. Greenish blue water sits beneath." width="1920" height="2560" srcset="https://thebaffler.com/wp-content/uploads/2024/04/IMG_7934-1-scaled.jpg 1920w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_7934-1-700x933.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_7934-1-350x467.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_7934-1-450x600.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_7934-1-500x667.jpg 500w" sizes="(max-width: 1920px) 100vw, 1920px"></a><figcaption id="caption-attachment-49979">Rock face on Isla Espíritu Santo in La Paz, Mexico, 2018</figcaption></figure>

<p>It’s 2018. I’m in Hasselt, Belgium. Everything I eat is off-white, including a <em>Koninginnehapje</em>, a puffed pastry tower filled with boiled chicken balls and cream. I’m there to install a video at an institution called KRIEG? about my father’s thirty-three-year career as a Kodak technician. Last year a respected curator convinced me to make the work, citing “emergent image regimes,” “immaterial labor,” and other terms she probably pulled from PDFs she read in grad school. I took the bait for funding’s sake and spent the next year toiling in Adobe Creative Suite. I should have stood my barren ground and made something from the heart.</p>
<p>I decide I need a vision quest. I google “best beaches in the world” and look for one that I can convince KRIEG? to fly me to on my way back to Los Angeles. I settle on Balandra Beach in La Paz, Mexico, find a subletter for my room at Grandma’s, and book an apartment for a month of <em>fuego pálido</em>.</p>
<p>I take a snorkeling excursion in the Gulf of California to Isla Espíritu Santo, which is inhabited by thousands of sea lions. As I track a manta ray fifty feet below me, something nudges my elbow. I turn to find a sea lion pup swimming alongside me. We make eye contact. He winks, then accelerates past me toward an underwater arch. I follow him through the opening, and when I surface for air, I find myself surrounded by adult sea lions. They gaze at me, motionless. I have a feeling I might die. I’ve found what I was looking for on this island. Something that feels like the opposite of scrutinizing a nondescript object in a white room and then having to read a citation-heavy press release to find out that the object is the product of prison labor, and prison labor is bad.</p>

<figure id="attachment_49970" aria-describedby="caption-attachment-49970"><a href="https://thebaffler.com/wp-content/uploads/2024/04/fake-friends-poster-Norm_color-1-scaled.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/fake-friends-poster-Norm_color-1-scaled.jpg" alt="A flier for an event titled “Fake Friends: A Symposium on Art History and Comparison.” The images include a person in a dog costume walking a doc on a leash, and a portrait of a baby." width="1690" height="2560" srcset="https://thebaffler.com/wp-content/uploads/2024/04/fake-friends-poster-Norm_color-1-scaled.jpg 1690w, https://thebaffler.com/wp-content/uploads/2024/04/fake-friends-poster-Norm_color-1-700x1061.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/fake-friends-poster-Norm_color-1-350x530.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/fake-friends-poster-Norm_color-1-450x682.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/fake-friends-poster-Norm_color-1-500x758.jpg 500w" sizes="(max-width: 1690px) 100vw, 1690px"></a><figcaption id="caption-attachment-49970">Fake Friends flier, Andrew Norman Wilson, 2018</figcaption></figure>

<figure id="attachment_49988" aria-describedby="caption-attachment-49988"><a href="https://thebaffler.com/wp-content/uploads/2024/04/B73-Wilson-09-Dec-16-Screenshot-from-Mail.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/B73-Wilson-09-Dec-16-Screenshot-from-Mail.jpg" alt="An upscale water feature in a hotel lobby" width="1800" height="1009" srcset="https://thebaffler.com/wp-content/uploads/2024/04/B73-Wilson-09-Dec-16-Screenshot-from-Mail.jpg 1800w, https://thebaffler.com/wp-content/uploads/2024/04/B73-Wilson-09-Dec-16-Screenshot-from-Mail-700x392.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/B73-Wilson-09-Dec-16-Screenshot-from-Mail-350x196.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/B73-Wilson-09-Dec-16-Screenshot-from-Mail-450x252.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/B73-Wilson-09-Dec-16-Screenshot-from-Mail-500x280.jpg 500w" sizes="(max-width: 1800px) 100vw, 1800px"></a><figcaption id="caption-attachment-49988">Hyatt Regency mezzanine waterfall in Princeton, NJ, 2018</figcaption></figure>

<p>At Princeton that fall I’m the token artist at an art history symposium. Delirious and jet-lagged, I quietly observe the graduate students as they grovel for the academic superstars they’ve flown in to present papers on the “Limits of Analogy in the Wake of the Social Turn in Art” and “Predicated Internationalism.” Instead of the pseudoacademic presentation I prepared, I spew raw accounts of my artistic process into the room. The superstars eat it up like seabirds.</p>
<p>Suddenly I’m the star. I get overconfident and pound shots with a Penn professor, then snort powders with a grad student. I’m quickly too far gone and take an Uber back to my hotel alone. When the receptionist checked me into the Hyatt Regency earlier that day, I was told the general manager used to be a production designer. The brass penguins stoically wading around the sandstone and marble mezzanine waterfall suggest <em>Inception</em> meets <em>Lost in Translation</em> meets <em>Happy Feet</em>. One of them sits loosely on its mount, so I pick it up and start walking.</p>
<p>A hotel employee approaches me and asks about the penguin. I don’t know what I’m doing. I tell her that, and she calls her supervisor. By the time the supervisor arrives, a thought emerges: I’m dissociating. But something about the way I address that thought out loud gets the supervisor going on about the police. The adrenaline hits, and I start to remember I have some cards to play. I’ve been teaching as an adjunct at UCLA, so I can say I’m a professor. I’m in town for a conference at Princeton. I’m jet-lagged from a site visit to a German Kunstverein. I hand her the brass penguin and plead insanity. She wants me to pack my bags and leave the premises, but I have no money and nowhere else to go. She doesn’t buy that a professor can’t afford a hotel room in New Jersey and tells me I can choose to sleep in jail or a mental hospital. I choose the latter.</p>
<p>In the morning, a psychiatrist tells me I’m not insane but sends me back to LA with a set of goals. I’m going to slow down. Drink less. Start therapy. Get serious about meditation. When I return home, the married couple tells me I have to move out of Grandma’s mansion because they no longer want a roommate.</p>

<figure id="attachment_49973" aria-describedby="caption-attachment-49973"><a href="https://thebaffler.com/wp-content/uploads/2024/04/IMG_3325-1-scaled.jpeg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/IMG_3325-1-scaled.jpeg" alt="A papier-mâché Pikachu is buckled into the passenger seat of a car." width="1920" height="2560" srcset="https://thebaffler.com/wp-content/uploads/2024/04/IMG_3325-1-scaled.jpeg 1920w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_3325-1-700x933.jpeg 700w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_3325-1-350x467.jpeg 350w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_3325-1-450x600.jpeg 450w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_3325-1-500x667.jpeg 500w" sizes="(max-width: 1920px) 100vw, 1920px"></a><figcaption id="caption-attachment-49973">Andrew Norman Wilson, <em>Papier-mâché Pikachu</em>, 2019</figcaption></figure>

<figure id="attachment_49963" aria-describedby="caption-attachment-49963"><a href="https://thebaffler.com/wp-content/uploads/2024/04/15A7E73D-FE13-434F-8BA0-FA7C6160B027_1_105_c-1.jpeg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/15A7E73D-FE13-434F-8BA0-FA7C6160B027_1_105_c-1.jpeg" alt="A TV screen mounted above four washing machines depicts a scene from a movie." width="1024" height="768" srcset="https://thebaffler.com/wp-content/uploads/2024/04/15A7E73D-FE13-434F-8BA0-FA7C6160B027_1_105_c-1.jpeg 1024w, https://thebaffler.com/wp-content/uploads/2024/04/15A7E73D-FE13-434F-8BA0-FA7C6160B027_1_105_c-1-700x525.jpeg 700w, https://thebaffler.com/wp-content/uploads/2024/04/15A7E73D-FE13-434F-8BA0-FA7C6160B027_1_105_c-1-350x263.jpeg 350w, https://thebaffler.com/wp-content/uploads/2024/04/15A7E73D-FE13-434F-8BA0-FA7C6160B027_1_105_c-1-450x338.jpeg 450w, https://thebaffler.com/wp-content/uploads/2024/04/15A7E73D-FE13-434F-8BA0-FA7C6160B027_1_105_c-1-500x375.jpeg 500w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption id="caption-attachment-49963"><em>Lawnmower Man</em> screening in the laundry room of Combo hostel, Milan, Italy, 2019</figcaption></figure>

<p>It’s 2019. A clan of Italian businessmen who collect video art offers me $8,000 to make a new video for an important institutional solo show. At $4,000 less than the going rate for my .movs, this is a raw deal, but I don’t have better offers. The Princeton psychiatrist’s instructions prove unfeasible as I burn through housesits. In Koreatown, the papillon I’m taking care of sprains her ankle doing zoomies. In Los Feliz, rats eat through my Volvo’s fuel sensor wiring. For two weeks, I ride an old mountain bike around like a repeat DUI offender to demeaning little gigs like cleaning the floor of an art gallery. An opportunity to catsit my friend Dena’s Scottish Fold in Chinatown opens up, so I escape to New York. Back in sexy jail, I’m so poor that I toy with the idea of posting my banking login info as a publicity stunt: having $0 isn’t going to make life that much harder than having $11. When hunger strikes around noon some days, I order a coffee at a posh restaurant and pay immediately; when another diner leaves leftovers, I bag them and scurry out.</p>
<p>I fly Spirit to Chicago, where all my friends are too busy buying property or accepting professorships to try the ketamine a guy gave me for letting him suck my dick. I catsit for my friend Eli, who is set for life thanks to his role as the brains behind Cards Against Humanity. The cat mauls the papier-mâché Pikachu I made for the video. I’m on the verge of a nervous breakdown preparing for the shoot, where I’ll play producer, director, art director, prop master, PA, and driver. But the labor proves fruitful when I realize <em>Z = |Z/Z•Z-1 mod 2|-1</em> is a work of almost palpable infinity—which is to say, one of the best things I’ve ever made. When it’s time to exhibit the work, I don’t have any budget left over to pay for housing in Milan. A curator arranges for a residency at an art hostel called Combo in Navigli under the condition that I curate a program of films, which I present in the laundry room. After the show opens, I wander around town listening to Fiona Apple through noise-canceling headphones and look at luxury clothing I can’t afford. Four art magazines publish reviews that read like whispers of a secret society speaking in code.</p>

<figure id="attachment_49966" aria-describedby="caption-attachment-49966"><a href="https://thebaffler.com/wp-content/uploads/2024/04/andrew_norman_wilson5-1.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/andrew_norman_wilson5-1.jpg" alt="A video still shows a jet flying through the air at dawn or dusk, with exhaust trailing behind." width="1500" height="1000" srcset="https://thebaffler.com/wp-content/uploads/2024/04/andrew_norman_wilson5-1.jpg 1500w, https://thebaffler.com/wp-content/uploads/2024/04/andrew_norman_wilson5-1-700x467.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/andrew_norman_wilson5-1-350x233.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/andrew_norman_wilson5-1-450x300.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/andrew_norman_wilson5-1-500x333.jpg 500w" sizes="(max-width: 1500px) 100vw, 1500px"></a><figcaption id="caption-attachment-49966">Andrew Norman Wilson, <em>In the Air Tonight</em>, 2020</figcaption></figure>

<figure id="attachment_49960" aria-describedby="caption-attachment-49960"><a href="https://thebaffler.com/wp-content/uploads/2024/04/6D1AF346-426B-46B9-886F-A64805168EAA-1.jpg"><img src="https://thebaffler.com/wp-content/uploads/2024/04/6D1AF346-426B-46B9-886F-A64805168EAA-1.jpg" alt="A screenshot of a multiple choice question on a website that says, “Does your project engage social justice themes?” Reply options are “Yes” or “No.”" width="912" height="1621" srcset="https://thebaffler.com/wp-content/uploads/2024/04/6D1AF346-426B-46B9-886F-A64805168EAA-1.jpg 912w, https://thebaffler.com/wp-content/uploads/2024/04/6D1AF346-426B-46B9-886F-A64805168EAA-1-700x1244.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/6D1AF346-426B-46B9-886F-A64805168EAA-1-350x622.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/6D1AF346-426B-46B9-886F-A64805168EAA-1-450x800.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/6D1AF346-426B-46B9-886F-A64805168EAA-1-500x889.jpg 500w" sizes="(max-width: 912px) 100vw, 912px"></a><figcaption id="caption-attachment-49960">A funding application, 2020</figcaption></figure>

<p>It’s 2020. I’ve moved to New York to teach at Cooper Union. I tumble through three short-term sublets and then stick the landing: a $1,400 1.5 bedroom a block away from Cooper Square. Everyone’s stealing from Barneys New York. The department store is going out of business and has replaced their staff with indifferent temp employees. I put on a shimmering $4,000 Prada suit in the dressing room, pull my regular clothes over it, and walk out of the store.</p>
<p>I’m selected as a finalist for a professorship at the State Academy of Fine Arts in Stuttgart, Germany, though the call for applications listed a preference for female candidates. German teaching jobs are the golden ticket of the academic art world. I would start at $90k per year even though it’s effectively part-time—so part-time I wouldn’t have to live in Stuttgart—and I’d have the same pension plan as Angela Merkel. I arrive on campus in my shimmering suit to compete with the other two finalists. After my talk three faculty pick me apart: I don’t live in Germany, my exhibition schedule is too busy to devote sufficient time to my students, and I’m male. While it’s easy to rebut the first two accusations, there’s not much I can say about the third.</p>
<p>Back in New York, a global pandemic takes hold. My rentier cancels his cross-<br>country bike trip and kicks me out of his apartment. I fly back to LA and finish teaching remotely from a housesit in Echo Park. None of my students seem to be able to make art anymore. Meanwhile, I compulsively spend at least twelve hours a day stitching together clips from commercial cinema of the eighties and nineties to make a narrative video about the urban legend behind Phil Collins’s “In the Air Tonight.” The budget amounts to $400 total to pay the narrator. My mom says it’s the best thing I’ve ever done. The curators I send it to mostly respond with politely veiled indifference; one even says it’s “not what the world needs right now.” I release it on the Phil Collins subreddit.</p>

<figure id="attachment_49967" aria-describedby="caption-attachment-49967"><a href="https://thebaffler.com/wp-content/uploads/2024/04/Art-Director_Page-3-1.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/Art-Director_Page-3-1.jpg" alt="A series of square images show various shots of sculptural store signs on sunny days with clear blue skies." width="1584" height="1224" srcset="https://thebaffler.com/wp-content/uploads/2024/04/Art-Director_Page-3-1.jpg 1584w, https://thebaffler.com/wp-content/uploads/2024/04/Art-Director_Page-3-1-700x541.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/Art-Director_Page-3-1-350x270.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/Art-Director_Page-3-1-450x348.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/Art-Director_Page-3-1-500x386.jpg 500w" sizes="(max-width: 1584px) 100vw, 1584px"></a><figcaption id="caption-attachment-49967">A locations page from the <em>Art Director</em> deck, 2020</figcaption></figure>

<figure id="attachment_49956" aria-describedby="caption-attachment-49956"><a href="https://thebaffler.com/wp-content/uploads/2024/04/Screen-Shot-2023-12-16-at-2.44.19-PM-EDIT-1.png"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/Screen-Shot-2023-12-16-at-2.44.19-PM-EDIT-1.png" alt="A screenshot of text with various images of floating merchandise, like sunglasses, a shower curtain, and a tote bag." width="2404" height="1862" srcset="https://thebaffler.com/wp-content/uploads/2024/04/Screen-Shot-2023-12-16-at-2.44.19-PM-EDIT-1.png 2404w, https://thebaffler.com/wp-content/uploads/2024/04/Screen-Shot-2023-12-16-at-2.44.19-PM-EDIT-1-700x542.png 700w, https://thebaffler.com/wp-content/uploads/2024/04/Screen-Shot-2023-12-16-at-2.44.19-PM-EDIT-1-350x271.png 350w, https://thebaffler.com/wp-content/uploads/2024/04/Screen-Shot-2023-12-16-at-2.44.19-PM-EDIT-1-450x349.png 450w, https://thebaffler.com/wp-content/uploads/2024/04/Screen-Shot-2023-12-16-at-2.44.19-PM-EDIT-1-500x387.png 500w" sizes="(max-width: 2404px) 100vw, 2404px"></a><figcaption id="caption-attachment-49956">A shot description page from the Balenciaga campaign deck, 2020</figcaption></figure>

<p>I’m awarded an artist residency at La Becque on Lake Geneva. Switzerland grants me a business travelers’ permit based on the (false) premise that I would shoot a film with a Swiss cast and crew. In actuality, I have no money, and no idea what I’ll make. The week before leaving I start a sequel to <em>Z = |Z/Z•Z-1 mod 2|-1</em> called <em>Art Director</em> and spend every hour of daylight documenting how Hollywood fantasies are made material throughout LA—as if the residents desire to live amid set constructions and movie characters. I shoot Bavarian shopping plazas, an animatronic dinosaur car wash, and a “Native American”-themed Taiwanese restaurant.</p>
<p>While at La Becque, I secure €20,000 from an obscure Czech arts organization for <em>Art Director</em>. A curator at the Centre Pompidou informs me that the project will be proposed as a grant-funded exhibition at an upcoming meeting. I start assembling a team. We’ll shoot from a Jeep Wrangler with a camera mounted in the back like a gatling gun. Suddenly the visual director of Balenciaga reaches out and asks if I want to direct their next series of campaign videos. The team essentially wants to pay me $100k to remake <em>Z = |Z/Z•Z-1 mod 2|-1</em> with Balenciaga products.</p>
<p>A week before we’re about to shoot, Europe goes into its second lockdown, and the campaign is postponed until March. I decide I’ll shoot <em>Art Director</em> when I return to LA in January, then go back to Europe in March for Balenciaga. Days later, I get an email informing me that the Czech program has been Covid-canceled. Then I hear back from the curator at the Pompidou. Apparently two (American) committee members vetoed the project because it didn’t address LA’s homeless population. I’ll be homeless in LA if I return, so I extend my stay in Switzerland.</p>

<figure id="attachment_49530" aria-describedby="caption-attachment-49530"><a href="https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit8.png"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit8.png" alt="A portrait of the artist submerged in a large mass of water with snow-laced mountains in the background. The artist is giving two thumbs up, with cheeks full of air, while he wears goggles and a saggy yellow swim cap." width="1800" height="2247" srcset="https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit8.png 1800w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit8-700x874.png 700w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit8-350x437.png 350w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit8-450x562.png 450w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit8-500x624.png 500w" sizes="(max-width: 1800px) 100vw, 1800px"></a><figcaption id="caption-attachment-49530">Swimming in Lake Geneva, Switzerland, 2020</figcaption></figure>

<p>I had gotten into high-intensity interval training early on in the pandemic because it seemed like I could get canceled for jogging outside. On a cold November day, while writhing around on the floor for a move called “cross-lateral bicycle kicks,” I feel a sharp pain in my abdomen and an immediate wave of crippling nausea. I crawl into bed and remain there for the next two days. When I emerge, the nausea persists, and I can no longer digest food properly.</p>
<p>For as long as I can remember, one of my floating ribs has protruded out of my abdomen like a baby finger. Though it points in the opposite direction of my innards, it’s rather mobile, and I suspect it could have pinched my intestines. A Swiss doctor says he’ll have to run a bunch of tests and I should wait to begin my “medical adventure” once I’m back home.</p>
<p>I try to frame the rest of my time in Switzerland as convalescence. Swimming in the thirty-five-degree water offers me an hour of relief, but the holidays are approaching, and it’s offensive to refuse all the fondue and white wine. I suffer through protracted dinners as residents suggest diseases I’ve never thought about: Crohn’s, peptic ulcers, diverticulitis, celiac disease. While googling them one evening, a Sundance programmer calls me. He says they want to show <em>In the Air Tonight</em> at next year’s festival. “Get your pitch decks ready,” he says. When I send the deck for <em>Art Director</em>, the team tells me the project is “beyond arthouse” and that I should come up with an idea for a narrative short.</p>

<figure id="attachment_49958" aria-describedby="caption-attachment-49958"><a href="https://thebaffler.com/wp-content/uploads/2024/04/SundanceFilmParty-1.png"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/SundanceFilmParty-1.png" alt="A tiny animated avatar, like one from a roleplaying video game, stands before a rough digital illustration of a fancy room with maroon carpets and a tree growing in the middle of it." width="3556" height="1601" srcset="https://thebaffler.com/wp-content/uploads/2024/04/SundanceFilmParty-1.png 3556w, https://thebaffler.com/wp-content/uploads/2024/04/SundanceFilmParty-1-700x315.png 700w, https://thebaffler.com/wp-content/uploads/2024/04/SundanceFilmParty-1-350x158.png 350w, https://thebaffler.com/wp-content/uploads/2024/04/SundanceFilmParty-1-450x203.png 450w, https://thebaffler.com/wp-content/uploads/2024/04/SundanceFilmParty-1-500x225.png 500w" sizes="(max-width: 3556px) 100vw, 3556px"></a><figcaption id="caption-attachment-49958">My avatar at the Sundance Film Festival Film Party, 2021</figcaption></figure>

<figure id="attachment_49977" aria-describedby="caption-attachment-49977"><a href="https://thebaffler.com/wp-content/uploads/2024/04/IMG_6179-1.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/IMG_6179-1.jpg" alt="A portrait of the author holding a sword." width="2000" height="1500" srcset="https://thebaffler.com/wp-content/uploads/2024/04/IMG_6179-1.jpg 2000w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_6179-1-700x525.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_6179-1-350x263.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_6179-1-450x338.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_6179-1-500x375.jpg 500w" sizes="(max-width: 2000px) 100vw, 2000px"></a><figcaption id="caption-attachment-49977">My medieval-themed Airbnb/Peerspace in Burbank, CA, 2021</figcaption></figure>

<p>It’s 2021. I rent a medieval-themed Airbnb/Peerspace in Burbank at a fraction of its usual cost because LA is currently the global epicenter of Covid. I get my food holes inspected at a shadowy Medicaid-accepted facility called the Airport Endoscopy Center. The Capitol is stormed, so I watch a lot of cable television as I wait for Balenciaga, Sundance, and MyChart results. I see Ariel Pink strung out at Tierra Mia in Highland Park and then on TV getting interviewed by Tucker Carlson.</p>
<p>A January chill besets LA, so I start wearing the winter attire included in the Sundance swag bag alongside an Oculus Rift. The image of me sporting an IMDb beanie and a Canada Goose jacket in a medieval-themed sharing economy rental is lost at the virtual industry events, where my body is rendered as a Sundance-branded 3D figure with a 2D image of my face in place of a head. Everyone else’s avatars meet up with friends from film school, previous shoots, and past networking events. I dawdle in the floating space lounge by myself, thinking, <em>They don’t know I was just diagnosed with irritable bowel syndrome</em>.</p>
<p>Other festivals reach out about my “Sundance film,” as do companies like Searchlight and A24. One of the <em>Nomadland</em> producers calls me; instead of saying hello, he yells, “WHO is this Andrew Norman Wilson everyone’s talking about?” My pitches of my short film idea <em>Impersonator</em>—about a Hollywood Boulevard character impersonator who drifts deeper into the fantasy of their character—are deemed feral.</p>
<p>I wander around on foot to prepare the short because driving my Volvo makes me nauseous. I meet a Stormtrooper impersonator on the boulevard named Dante Valentine who plays in a hair metal band and founded what he describes as a “life coaching program” for “Asian businessmen” who want to become pickup artists. While walking around the LA River, I meet a man named Tony who makes a living fixing bikes and trading them to other people who live on the streets. In a past life he worked in McMansion construction, was wrongfully accused of a crime, spent years in prison, and upon release, fell into debt. I find an affinity with both of them; Dante because of his parasitic relationship to financial elites, Tony because I may be trading him Volvo parts for a bike soon.</p>

<figure id="attachment_49978" aria-describedby="caption-attachment-49978"><a href="https://thebaffler.com/wp-content/uploads/2024/04/IMG_7579-0002-1.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/IMG_7579-0002-1.jpg" alt="A turtle mounts another turtle on a manicured lawn, near a concrete fence." width="1800" height="1013" srcset="https://thebaffler.com/wp-content/uploads/2024/04/IMG_7579-0002-1.jpg 1800w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_7579-0002-1-700x394.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_7579-0002-1-350x197.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_7579-0002-1-450x253.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_7579-0002-1-500x281.jpg 500w" sizes="(max-width: 1800px) 100vw, 1800px"></a><figcaption id="caption-attachment-49978">Hollywood mounting Blaze in Laurel Canyon, CA, 2021</figcaption></figure>

<figure id="attachment_49980" aria-describedby="caption-attachment-49980"><a href="https://thebaffler.com/wp-content/uploads/2024/04/IMG_8419-1-scaled.jpeg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/IMG_8419-1-scaled.jpeg" alt="A turtle is laid in a hole dug in the soil, near a jade tree bush." width="1920" height="2560" srcset="https://thebaffler.com/wp-content/uploads/2024/04/IMG_8419-1-scaled.jpeg 1920w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_8419-1-700x933.jpeg 700w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_8419-1-350x467.jpeg 350w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_8419-1-450x600.jpeg 450w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_8419-1-500x667.jpeg 500w" sizes="(max-width: 1920px) 100vw, 1920px"></a><figcaption id="caption-attachment-49980">Hollywood dead in his grave in Laurel Canyon, CA, 2021</figcaption></figure>

<p>I’m forced to make way for another tenant at the medieval-themed Airbnb and end up tortoise/turtle/iguana/dove/koi-sitting in Laurel Canyon for a German commercial director. Every morning, I wake up and hurl $20 worth of vegetables around the property for the pets before spending eighteen hours preparing my short film. I fly my parents out to help me because it’s cheaper than hiring PAs. I can’t think straight due to the chronic nausea, and it seems like I’m spending $50 per second on set. At the end of the shoot, I’m $40k in debt and severely constipated.</p>
<p>I have a bunch of cops’ phone numbers, both to research their procedures and because I had to hire real cops to make sure the fake cops in the movie weren’t frisking actual citizens or pulling them over in the LAPD truck we rented. I have never engaged with the world so deeply as an artist.</p>

<figure id="attachment_49535" aria-describedby="caption-attachment-49535"><a href="https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit11.png"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit11.png" alt="A video still shows a person wearing sporty white armor, with all black clothes underneath from head to waist." width="1800" height="2247" srcset="https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit11.png 1800w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit11-700x874.png 700w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit11-350x437.png 350w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit11-450x562.png 450w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit11-500x624.png 500w" sizes="(max-width: 1800px) 100vw, 1800px"></a><figcaption id="caption-attachment-49535">Andrew Norman Wilson, <em>Impersonator</em>, 2021. Production still by Kyle Devan.</figcaption></figure>

<p>Back in the canyon, one of the tortoises I’m watching—Hollywood—is unconscious. I flip him over and find that he’s bleeding from his penis. Animal control asks if Hollywood lives with a female tortoise. I tell them her name is Blaze. “Is she bigger than him?” they ask. “Yes,” I say. “Are they sexually active?” Hollywood spends every waking moment trying to fuck the living daylights out of her. There’s the explanation: Blaze broke Hollywood’s dick off, and now he’s dead.</p>
<p>I call the German commercial director. He’s devastated and needs time to think. Awaiting further instruction, I put Hollywood’s corpse in a black trash bag and leave him in the shade. Three days later the German returns. We bury Hollywood in a massive hole in the ground, and I move out.</p>

<figure id="attachment_49974" aria-describedby="caption-attachment-49974"><a href="https://thebaffler.com/wp-content/uploads/2024/04/IMG_5407-1-scaled.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/IMG_5407-1-scaled.jpg" alt="A hand holds a baseball card with a man in a wheelchair holding a baseball, and another man standing next to him." width="1920" height="2560" srcset="https://thebaffler.com/wp-content/uploads/2024/04/IMG_5407-1-scaled.jpg 1920w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5407-1-700x933.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5407-1-350x467.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5407-1-450x600.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5407-1-500x667.jpg 500w" sizes="(max-width: 1920px) 100vw, 1920px"></a><figcaption id="caption-attachment-49974">My George H.W. Bush baseball card, 2021</figcaption></figure>

<figure id="attachment_49964" aria-describedby="caption-attachment-49964"><a href="https://thebaffler.com/wp-content/uploads/2024/04/20211114_095735-1.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/20211114_095735-1.jpg" alt="A photo of a long haired rabbit wearing round, gold spectacles." width="1816" height="2270" srcset="https://thebaffler.com/wp-content/uploads/2024/04/20211114_095735-1.jpg 1816w, https://thebaffler.com/wp-content/uploads/2024/04/20211114_095735-1-700x875.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/20211114_095735-1-350x438.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/20211114_095735-1-450x563.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/20211114_095735-1-500x625.jpg 500w" sizes="(max-width: 1816px) 100vw, 1816px"></a><figcaption id="caption-attachment-49964">Ziggles the bunny in Durham, NC, 2021</figcaption></figure>

<p>Too sick to hustle for housesits like I used to, I decide to move into my parent’s two-bedroom ranch house in North Carolina, where I file for disability and set up a whole new stable of doctors to administer obscure tests. I consume radioactive eggs from a paper cup for a gastric emptying study so they can shoot gamma rays at my intestines to track the movement of the egg down my chute. I buy a George H. W. Bush baseball card that depicts him at age ninety-one throwing out the first pitch at an Astros game. I tell my mom and dad that he’s my spirit animal. My mom says her friend’s daughter said white people can’t have spirit animals. My dad, who voted for Bush twice, asks where my wife is.</p>
<p>The only being I’m really vibing with in the house is my mom’s rabbit, Ziggles. He approaches me with a gentle curiosity whenever I enter the sunroom. He lets me style him with tiny sunglasses and sit him upright like a little man to watch the subtitled films my parents complain about. Nine months pass down there. I start writing a feature-length script based on <em>Impersonator</em>. Logline: a fugitive hacker hiding as a Hollywood Boulevard impersonator is recruited by a rogue FBI agent for a black-ops mission to steal millions from a debauched doomsday prepper’s desert compound.</p>

<figure id="attachment_49962" aria-describedby="caption-attachment-49962"><a href="https://thebaffler.com/wp-content/uploads/2024/04/9A285384-81F0-49FC-964F-F4357EAA5DBB-1.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/9A285384-81F0-49FC-964F-F4357EAA5DBB-1.jpg" alt="A screenshot of a text from the author’s mother reads, “Just sayin’ Pop art icon Jeff Koons sold a sculpture of a rabbit at a record price for a living artist: $91 million." width="1024" height="1820" srcset="https://thebaffler.com/wp-content/uploads/2024/04/9A285384-81F0-49FC-964F-F4357EAA5DBB-1.jpg 1024w, https://thebaffler.com/wp-content/uploads/2024/04/9A285384-81F0-49FC-964F-F4357EAA5DBB-1-700x1244.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/9A285384-81F0-49FC-964F-F4357EAA5DBB-1-350x622.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/9A285384-81F0-49FC-964F-F4357EAA5DBB-1-450x800.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/9A285384-81F0-49FC-964F-F4357EAA5DBB-1-500x889.jpg 500w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption id="caption-attachment-49962">Text from my mother, 2022</figcaption></figure>

<figure id="attachment_49957" aria-describedby="caption-attachment-49957"><a href="https://thebaffler.com/wp-content/uploads/2024/04/Screenshot-2024-01-18-at-5.06.09%E2%80%AFPM-1.png"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/Screenshot-2024-01-18-at-5.06.09%E2%80%AFPM-1.png" alt="A screenshot of a loan balance of $106,216.12." width="806" height="736" srcset="https://thebaffler.com/wp-content/uploads/2024/04/Screenshot-2024-01-18-at-5.06.09 https://thebaffler.com/odds-and-ends/PM-1.png 806w, https://thebaffler.com/wp-content/uploads/2024/04/Screenshot-2024-01-18-at-5.06.09 https://thebaffler.com/odds-and-ends/PM-1-700x639.png 700w, https://thebaffler.com/wp-content/uploads/2024/04/Screenshot-2024-01-18-at-5.06.09 https://thebaffler.com/odds-and-ends/PM-1-350x320.png 350w, https://thebaffler.com/wp-content/uploads/2024/04/Screenshot-2024-01-18-at-5.06.09 https://thebaffler.com/odds-and-ends/PM-1-450x411.png 450w, https://thebaffler.com/wp-content/uploads/2024/04/Screenshot-2024-01-18-at-5.06.09 https://thebaffler.com/odds-and-ends/PM-1-500x457.png 500w" sizes="(max-width: 806px) 100vw, 806px"></a><figcaption id="caption-attachment-49957">One of my debt accounts, 2022</figcaption></figure>

<p>It’s 2022. My therapist suggests I take a trip to see friends because I keep calling myself an incel. I have a feeling she’s sick of watching a grown man cry about how hard it is to poop and wants new material. I accept a designer cat-sitting gig in Brooklyn and find that the affection of old friends distracts me from my condition. But city life becomes untenable as winter turns to spring. A close friend in the throes of baby panic seduces me into a relationship and then berates me for two months because of the glaring reality that I’m unfit to be a dad. I take three editing gigs with fixed fees that factor out to less than $10 per hour in the end. I can’t take the train or look at my phone while walking without becoming nauseous for twenty-four hours, can’t drink alcohol or stay up past nine, and can’t follow through on half of the plans I make. Meeting the film producers, creative directors, and agents I need to know feels impossible. I start to compose a suicide note and procure twenty Xanax from a friend.</p>
<p>Then, an electric signal jolts me out of the murk. I receive an invitation to a director’s lab called Oxbelly run by a powerful film producer and held at a Greek resort. I fly out with my <em>Impersonator</em> script for a week of meetings, workshops, and production exercises. All the other fellows have film school pasts and industry experience, rendering me a bit of an enigma. A famous actor who I call the Green Goblin seems to like this. He accidentally pulls up a picture of his wife’s breasts when he’s trying to show me a picture of his goat. I return home motivated to start a new script based on a love triangle set in Switzerland.</p>

<figure id="attachment_49975" aria-describedby="caption-attachment-49975"><a href="https://thebaffler.com/wp-content/uploads/2024/04/IMG_5605-1.jpeg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/IMG_5605-1.jpeg" alt="An x-ray of a ribcage with red and blue outlines on it." width="1800" height="1349" srcset="https://thebaffler.com/wp-content/uploads/2024/04/IMG_5605-1.jpeg 1800w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5605-1-700x525.jpeg 700w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5605-1-350x262.jpeg 350w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5605-1-450x337.jpeg 450w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5605-1-500x375.jpeg 500w" sizes="(max-width: 1800px) 100vw, 1800px"></a><figcaption id="caption-attachment-49975">My floating rib (red) and the position it should be in (blue), 2022</figcaption></figure>

<figure id="attachment_49976" aria-describedby="caption-attachment-49976"><a href="https://thebaffler.com/wp-content/uploads/2024/04/IMG_5888-1-scaled.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/IMG_5888-1-scaled.jpg" alt="A three or four inch piece of ribcage rests in the palm of a hand." width="1920" height="2560" srcset="https://thebaffler.com/wp-content/uploads/2024/04/IMG_5888-1-scaled.jpg 1920w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5888-1-700x933.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5888-1-350x467.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5888-1-450x600.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/IMG_5888-1-500x667.jpg 500w" sizes="(max-width: 1920px) 100vw, 1920px"></a><figcaption id="caption-attachment-49976">My rib, 2022</figcaption></figure>

<p>Googling medical conditions, I find something I’ve never heard of before: Slipping rib syndrome. There’s a Facebook advocacy group with six thousand members, and everyone seems to be talking about three surgeons. Medicaid will cover the one in Connecticut. Three months later, I go in for surgery to sew the “hypermobile floating rib” to my ribcage to keep it from poking my intestines. When I wake up from the anesthesia, the surgeon says the rib popped out and pointed forward when he opened me up, so he decided instead to saw off three inches. I request the bone. The surgeon refuses. “It’s a biohazard,” he says. I ask every nurse and PA I see, and they say taking body parts home is illegal.</p>
<p>Two days later, I return to the hospital to sort out an issue with my OxyContin prescription. The surgeon says he’ll come meet me. When he arrives at my table in the cafeteria, he puts a urine sample container in front of me. Inside it is my rib, with meat still attached to the bone, sitting in hydrogen peroxide. He tells me to leave it in there for a week until the meat dissolves.</p>
<p>My digestive issues improve, and I have a new lease on life. No one wants to listen to an artist describe their work, but everyone wants to be told my rib story. I tell them God will use the bone to create a third gender. Even if it doesn’t work out between this new being and me, I’m able to autofellate. I now have half an hourglass figure and, naturally, am starting an OnlyFans. I will work my angles, pay off my medical debt, and pivot to directing Hollywood blockbusters.</p>

<figure id="attachment_49539" aria-describedby="caption-attachment-49539"><a href="https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit15.jpg"><img loading="lazy" decoding="async" src="https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit15.jpg" alt="Two musicians performing live. One wears a gas mask while bending and kneeling over the edge of a stage to hold a hair dryer to a mic. The other stands with a guitar, outfitted with unknown contraptions, and one knee propped up on the stage." width="1800" height="2224" srcset="https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit15.jpg 1800w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit15-700x865.jpg 700w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit15-350x432.jpg 350w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit15-450x556.jpg 450w, https://thebaffler.com/wp-content/uploads/2024/04/b73-exhibit15-500x618.jpg 500w" sizes="(max-width: 1800px) 100vw, 1800px"></a><figcaption id="caption-attachment-49539">Oneohtrix Point Never, <em>Nightmare Paint</em>, 2023. Production still by Jeannie Sui Wonders.</figcaption></figure>

<p>It’s 2023. Crapping is easy now; sometimes too easy. While the same can’t be said for making money, I haven’t been this liquid for quite some time. I shoot a skincare advertisement featuring Hailey Bieber draped across a giant pink bean; a music video for U2 at an abandoned housing development of over seven hundred cheap French chateau replicas in rural Turkey; and two music videos for Oneohtrix Point Never that feel more like my work than promotional content.</p>
<p>Meanwhile, I feel like a retired contemporary artist. My .mov files are entombed in the collections of institutions such as MoMA, the Getty, and the Pompidou, but I haven’t had a studio visit in years. I’ve given up on trying to get projects such as <em>Art Director</em> and <em>Humpty Dumpty</em> funded or looking for teaching jobs. I avoid openings and even gallery exhibitions altogether.</p>
<p>I used to think being an artist would allow me to step beyond reason toward what ought to be, to disturb the seemingly natural order of things and unwind our counterfeit intuitions. But I’m fairly certain that the art world—caught as it is between the demands of yacht owners and delusional incompetents with advanced deskilling degrees—won’t let me do so. Instead, I’ll defect and let others get bullied into making evangelical pablum, financial instruments, interior decor, identity flags, conceptual contracts, tech demos, checked boxes, “research,” encrypted Marxism, postcolonial apologia, excuses, complaints . . .</p>

<p>It’s 2024. I’m getting close to shooting that romantic thriller in Switzerland. Logline: in the Swiss town of Interlaken, a love triangle forms between an avalanche survivor, a newly broke oil industrialist’s son, and a mysterious influencer who might be a spy. The fate of humanity hangs in the balance.</p>
<p>I write this series of vignettes as part of my attempt to achieve escape velocity from the predicament described herein. The compensation exceeds any fee I’ve received for an exhibition. Its audience will be larger, and it will always be available to them. This magazine famously ran a piece decrying the nonfiction-to-film pipeline, <a href="#footnote2" id="anchor2">[2]</a> but I wouldn’t mind it if this was optioned, so any curious scouts should reach out: <a href="https://thebaffler.com/cdn-cgi/l/email-protection" data-cfemail="c7a6a9a3b5a2b0a9a8b5aaa6a9b0aeabb4a8a987a0aaa6aeabe9a4a8aa">[email&nbsp;protected]</a>.</p>

<p><a href="#anchor1" id="footnote1">[1]</a> Andrew Norman Wilson, “The Artist Leaving the Googleplex,” <em>e-flux</em>, June 2016</p>
<p><a href="#anchor2" id="footnote2">[2]</a> James Pogue, “They Made a Movie Out of It,” <em>The Baffler</em> no. 49, January 2020</p>

        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ElephantSQL Is Shutting Down (146 pts)]]></title>
            <link>https://www.elephantsql.com/blog/end-of-life-announcement.html</link>
            <guid>39958701</guid>
            <pubDate>Sun, 07 Apr 2024 06:42:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.elephantsql.com/blog/end-of-life-announcement.html">https://www.elephantsql.com/blog/end-of-life-announcement.html</a>, See on <a href="https://news.ycombinator.com/item?id=39958701">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<article>
<p>
Important announcement: ElephantSQL will discontinue its services. The product will reach its End of Life on January 27, 2025.
</p>
<p>
<strong>
Are you a customer?
</strong>
Learn more about practical information, important dates, migration options and contact information to our support at
<a href="https://www.elephantsql.com/eol.html">
End of Life - Customer Information
</a>
</p>
<h2>
Epilog
</h2>
<p>
Back in 2013 we launched ElephantSQL as one of the first services out there to offer hosted PostgreSQL.
Since then we’ve assisted many customers building all kinds of applications on the platform.
</p>
<p>
In the spirit of keeping our company agile, we’ve made the strategic decision to focus on something else: the AMQP protocol via CloudAMQP.
We're noticing significant growth and interest in both RabbitMQ and LavinMQ (our high performance AMQP broker), where we continue as market leaders.
As such, we plan to invest more in these areas with the full attention from the company.
</p>
<p>
We want to express our gratitude to our customers and partners who have been with us throughout this time.
Though this chapter may be ending, our commitment to supporting you remains. We're here to help you
until you continue your PostgreSQL journey elsewhere.
</p>
<h2>
Service Shutdown Schedule
</h2>
<p>
Existing customers will have complete access to the service until its discontinuation on January 27, 2025.
After May 1, 2024, we will cease to accept new users. Comprehensive information regarding our shutdown
process is available under
<a href="https://www.elephantsql.com/eol.html">
End of Life - Customer Information
</a>
</p>
<h2>
Customer Information and Action Plan
</h2>
<p>
Our top priority is ensuring a smooth transition for our current customers.
For this reason, we have compiled all necessary information, including contact and
support details as well as migration options here.
</p>

<h2>
The next chapter for our team
</h2>
<p>
As we navigate through this transition, our team is not saying goodbye but rather stepping
into a new chapter. The expertise, dedication, and passion that powered ElephantSQL are now
joining forces with our colleagues at CloudAMQP and LavinMQ. This strategic shift allows us
to focus our collective efforts on advancing our service offerings in Message Queuing and
Message Streaming solutions.
</p>
<p>
For more details on our journey ahead and what this means for our team and services, we invite you to read our
announcement:
<a href="https://www.84codes.com/blog/next-chapter-for-84codes">
Next Chapter for 84codes
</a>
</p>

</article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Is the frequency domain a real place? (205 pts)]]></title>
            <link>https://lcamtuf.substack.com/p/is-the-frequency-domain-a-real-place</link>
            <guid>39958260</guid>
            <pubDate>Sun, 07 Apr 2024 04:52:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lcamtuf.substack.com/p/is-the-frequency-domain-a-real-place">https://lcamtuf.substack.com/p/is-the-frequency-domain-a-real-place</a>, See on <a href="https://news.ycombinator.com/item?id=39958260">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><span>In an </span><a href="https://lcamtuf.substack.com/p/not-so-fast-mr-fourier" rel="">earlier article on the Fourier transform</a><span>, I talked about the </span><em>frequency domain</em><span> — a wondrous mathematical place where complex signals are transmuted into the amplitudes and phases of sine waveforms. The frequency domain allows us to perform all kinds of signal processing tricks that seem nearly impossible to pull off when we stare at the data in its most straightforward form — that is, in the time domain.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png" width="1456" height="907" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:907,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:2090763,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc1af683c-c39b-4998-9a67-3cf0ebed8971_1879x1171.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption><em><span>A waveform (top) and a frequency view (bottom) of “</span><a href="https://www.youtube.com/watch?v=hZPrKy2WgAo" rel="">Girl in Blue</a><span>”.</span></em></figcaption></figure></div><p><span>At the end of that deep dive, I left one question unanswered: how </span><em>real</em><span> is this frequency place, anyway? The discrete Fourier transform (DFT) plays a central role in communications and signal processing — but does it reveal some deeper, unseen truth about the universe? For example, do square waves exist at all? After all, the transform turns them into </span><a href="https://lcamtuf.substack.com/p/square-waves-or-non-elephant-biology" rel="">a series of odd-numbered sine harmonics</a><span> — and this model somehow predicts the behavior of electronic circuits in real life.</span></p><p>Today, I’d like to knock the Fourier transform off the pedestal. To be sure, sine waves are ubiquitous in nature and they are well-suited for a number of tasks as an analytical tool. That said, it’s eminently possible to construct other well-behaved frequency domains that play by different rules — including one where only square waves are real, and everything else is just harmonics. </p><p>To get started, let’s circle back to discrete cosine transform — a simplified, real-numbers-only version of DFT. From the earlier article, you might recall the following DCT-II formula:</p><div data-component-name="Latex"><p><span>\(F_k = \sum\limits_{n=0}^{N-1} s_n \cdot cos ( \pi k { n + \frac12 \over N} )\)</span></p></div><p><span>The construct at the heart of this algorithm is the </span><em>cos()</em><span> expression that generates a sine wave with a frequency corresponding to the number of the current DCT bin (</span><em><span>F</span><sub>k</sub></em><span>). This is known as the </span><em>basis function</em><span>; we can abstract it away and rewrite the formula as:</span></p><div data-component-name="Latex"><p><span>\(F_k = \sum\limits_{n=0}^{N-1} s_n \cdot B(k,n)\)</span></p></div><p><span>In this generalized notation for a frequency-domain transform, </span><em>B(k, n) </em><span>returns </span><em>some sort of a</em><span> </span><em>multiplier</em><span> based on the values of </span><em>k</em><span> and </span><em>n</em><span>.</span><em> </em><span>Software engineers might find it intuitive to think about </span><em>B(k, n)</em><span> as a lookup array. In fact, let’s calculate that array — a </span><em>matrix</em><span> in the math parlance — for </span><em>N=16</em><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png" width="1456" height="1455" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1455,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:246323,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5b23bb5e-657a-44c7-a6fb-7f08f7a4b093_1801x1800.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>DCT-II basis function plot for N=16.</em></figcaption></figure></div><p><span>If you remember the operation of DCT, this visual should be easy to parse. The first row </span><em>(k=0) </em><span>corresponds to the DC component — i.e., a cosine “running” at 0 Hz. The next row contains a cosine completing one half of a cycle, followed by twice the speed at </span><em>k=2</em><span>, and so on.</span></p><p>So, how does one go about building a basis function that splits signals not into sine frequencies, but into square waves? The answer appears almost ridiculously simple:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png" width="1456" height="1455" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1455,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:71893,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89e8c70c-9d4f-44fd-ab76-768bbf9e5e7c_1801x1800.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>The Walsh matrix for N=16.</em></figcaption></figure></div><p>This is known as the Walsh matrix. And yes: every multiplier is just a +1 or a -1, so the computation boils down to flipping some signs in the input data and then summing the results.</p><p><span>Although the matrix looks simple, its design is fairly ingenious. To capture all frequency and phase information, the rows have increasing </span><em>sequency</em><span> — that is, each next row has one more sign flip than the one before. Further, the pattern is carefully engineered to ensure </span><em>orthogonality</em><span> — that is, the fragile input-output symmetry that allows seamless conversions back and forth between the frequency representation and the original time-series data. </span></p><p><span>Curiously, the most intuitive way to construct the Walsh matrix is to start with something known as the Hadamard matrix, and then to shuffle it around. For </span><em>N=16</em><span>, this “proxy” matrix looks the following way:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png" width="1456" height="1455" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1455,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:72153,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3c8127c8-ef44-4cf4-8064-e4d3fdda894f_1801x1800.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>The Hadamard matrix for N=16. Huh?</em></figcaption></figure></div><p>At a glance, the plot looks chaotic, but it’s simply a reordering of the Walsh matrix. For example, row #1 in the Walsh matrix ends up in row #8 above. But its main perk is that unlike the Walsh matrix, it’s pretty easy to construct.</p><p>To get the ball rolling, we start with the following trivial 1×1 array:</p><div data-component-name="Latex"><p><span>\(H_0 = \begin{bmatrix}
+1
\end{bmatrix}\)</span></p></div><p><span>From there, we iteratively extend it by taking the array generated in the previous step (</span><em><span>H</span><sub>n-1</sub></em><span>) and tiling four copies of it on a grid with twice the original dimensions. The first three copies are verbatim, and the final one — bottom right — has all the signs flipped. The mathematical notation for this extension is:</span></p><div data-component-name="Latex"><p><span>\(H_{n} = N_{n-1} \otimes \begin{bmatrix}
+1 &amp; +1 \\
+1 &amp; -1
\end{bmatrix}\)</span></p></div><p><span>The fancy operator (⊗) is known as the </span><em>Kronecker product</em><span>, but it really just glorified copy-and-paste. The first extension is:</span></p><div data-component-name="Latex"><p><span>\(H_1 = \begin{bmatrix}
\begin{array}{c | c }
+1 &amp; +1 \\
\hline
+1 &amp; -1
\end{array}\end{bmatrix}
\)</span></p></div><p>Another iteration gives us:</p><div data-component-name="Latex"><p><span>\(H_2 = \begin{bmatrix}
\begin{array}{c c | c c}
+1 &amp; +1 &amp; +1 &amp; +1 \\
+1 &amp; -1 &amp; +1 &amp; -1 \\
\hline
+1 &amp; +1 &amp; -1 &amp; -1 \\
+1 &amp; -1 &amp; -1 &amp; +1
\end{array}
\end{bmatrix}\)</span></p></div><p>…and so on.</p><p><span>On a computer, the matrix can be computed by following this tiling algorithm, but there’s a cute bitwise arithmetic trick we can employ instead: as it turns out, the value of the Hadamard function at a particular cell can be divined by calculating </span><em>x &amp; y</em><span> and then checking if the number of bits set in the result is even or odd. The following C code does just that, and then displays an 8×8 Hadamard matrix on the screen:</span></p><blockquote><pre><code>#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;

#define HD_LEN 8

int8_t hadamard(uint32_t x, uint32_t y) {  
  return (__builtin_popcount(x &amp; y) % 2) ? -1 : 1;
}

int main() {
  for (uint32_t y = 0; y &lt; HD_LEN; y++) {
    for (uint32_t x = 0; x &lt; HD_LEN; x++) printf("%+d ", hadamard(x, y));
    putchar('\n');
  }
}</code></pre></blockquote><p>In principle, the Hadamard matrix is sufficient to construct a frequency-domain transform. That said, its ordering of the frequency bins is unintuitive, so we could use some help from that Walsh guy we mentioned before.</p><p>To turn the Hadamard matrix in the nicely-ordered flavor showcased earlier, we need to sort the rows based on their sequency. I’m not aware of an algorithm more elegant than counting the number of zero crossings, but in any case, this implementation is pretty fast — and prints a sorted 8×8 array on the screen:</p><blockquote><pre><code><code>#include &lt;stdint.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

#define HD_LEN 8

int8_t hadamard(uint32_t x, uint32_t y) {  
  return (__builtin_popcount(x &amp; y) % 2) ? -1 : 1;
}

int8_t walsh_array[HD_LEN][HD_LEN];

void precompute_walsh() {
  int8_t tmp[HD_LEN];

  for (uint32_t y = 0; y &lt; HD_LEN; y++) {
    uint32_t sign_cnt = 0;
    int8_t prev_val = 1;
    for (int x = 0; x &lt; HD_LEN; x++) {
      tmp[x] = hadamard(x, y);
      if (tmp[x] != prev_val) { sign_cnt++; prev_val = tmp[x]; }
    }
    memcpy(walsh_array[sign_cnt], tmp, HD_LEN);
  }
}

int main() {
  precompute_walsh();
  for (uint32_t y = 0; y &lt; HD_LEN; y++) {
    for (uint32_t  x = 0; x &lt; HD_LEN; x++) printf("%+d ", walsh_array[y][x]);
    putchar('\n');
  }
}</code></code></pre></blockquote><p>Equipped with this, we can gut the DCT implementation and make a “discrete square transform” and its inverse:</p><blockquote><pre><code>void sqft(double* out_buf, double* in_buf, uint32_t len) {

  for (uint32_t bin_no = 0; bin_no &lt; len; bin_no++) {
    double sum = 0;
    for (uint32_t s_no = 0; s_no &lt; len; s_no++)
      sum += in_buf[s_no] * walsh_array[s_no][bin_no];
    out_buf[bin_no] = sum;
  }

}

void isqft(double* out_buf, double* in_buf, uint32_t len) {

  for (int s_no = 0; s_no &lt; len; s_no++) {
    double sum = 0;
    for (int bin_no = 0; bin_no &lt; len; bin_no++)
      sum += in_buf[bin_no] * walsh_array[bin_no][s_no];
    out_buf[s_no] = sum / len;
  }

}</code></pre></blockquote><p><span>Technically, this is called the </span><em>Walsh–Hadamard transform</em><span>, but never mind. Let’s confirm that it works:</span></p><blockquote><pre><code>...previous code here...

void print_buf(const char* prefix, double* buf, uint32_t len) {
  printf("%s", prefix);
  for (uint32_t i = 0; i &lt; len; i++) printf("%+.2f ", buf[i]);
  putchar('\n');
}

int main() {

  double in[HD_LEN] = { 1, 1, 1, 1, 5, 5, 5, 5 };
  double sq_freq[HD_LEN], out[HD_LEN];

  precompute_walsh();
  sqft(sq_freq, in, HD_LEN);
  isqft(out, sq_freq, HD_LEN);

  print_buf("Input : ", in, HD_LEN);
  print_buf("SQFT  : ", sq_freq, HD_LEN);
  print_buf("ISQFT : ", out, HD_LEN);

  return 0;
}</code></pre></blockquote><p>The input is a square-wave-ish sequence of numbers: 1 1 1 1 5 5 5 5. The output from DFT or DCT would be a bunch of harmonics across multiple frequency bins:</p><blockquote><pre><code><code>DCT   : +24.00 -10.25 -0.00 +3.60 +0.00 -2.41 -0.00 +2.04</code></code></pre></blockquote><p><span>In contrast, the frequency-domain representation generated by the program shows non-zero components only in F</span><sub>0</sub><span> (DC) and F</span><sub>1</sub><span>, confirming that we have an algorithm that deconstructs the signal into pure square waves:</span></p><blockquote><pre><code><code>SQFT  : +24.00 -16.00 +0.00 +0.00 +0.00 +0.00 +0.00 +0.00</code></code></pre></blockquote><p><span>Finally, we can verify that the inverse function — </span><em>isqft() —</em><span> transforms the frequency domain back to what we started with:</span></p><blockquote><pre><code>ISQFT : +1.00 +1.00 +1.00 +1.00 +5.00 +5.00 +5.00 +5.00</code></pre></blockquote><p>The Walsh-Hadamard transform, being computationally efficient and well-suited for certain types of data, finds uses here and there. The point isn’t that it needs to be used more; it’s just that discrete Fourier doesn’t have a monopoly on truth.</p><p><em><span>For more articles on electronics, click </span><a href="https://lcamtuf.coredump.cx/offsite.shtml" rel="">here</a><span>.</span></em></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Glory is only 11MB/sec away (2023) (225 pts)]]></title>
            <link>https://thmsmlr.com/cheap-infra</link>
            <guid>39957902</guid>
            <pubDate>Sun, 07 Apr 2024 03:20:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thmsmlr.com/cheap-infra">https://thmsmlr.com/cheap-infra</a>, See on <a href="https://news.ycombinator.com/item?id=39957902">Hacker News</a></p>
Couldn't get https://thmsmlr.com/cheap-infra: Error: Request failed with status code 500]]></description>
        </item>
        <item>
            <title><![CDATA[What makes housing so expensive? (105 pts)]]></title>
            <link>https://www.construction-physics.com/p/what-makes-housing-so-expensive</link>
            <guid>39957811</guid>
            <pubDate>Sun, 07 Apr 2024 03:03:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.construction-physics.com/p/what-makes-housing-so-expensive">https://www.construction-physics.com/p/what-makes-housing-so-expensive</a>, See on <a href="https://news.ycombinator.com/item?id=39957811">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p><span>Buying a home is by far the largest purchase most of us will make, and paying the rent or mortgage will be our largest monthly expense. In the post-pandemic home-buying boom, the median sale price of a new home peaked at almost </span><a href="https://fred.stlouisfed.org/series/MSPNHSUS" rel="">$500,000 dollars</a><span>, just under </span><a href="https://www.census.gov/content/dam/Census/library/publications/2023/demo/p60-279.pdf" rel="">seven times</a><span> the median household annual income that year (though it has since fallen). Most new homebuyers will pay around </span><a href="https://www.urban.org/urban-wire/typical-2022-homebuyer-spent-least-30-percent-their-monthly-income-their-mortgage#:~:text=Mortgage%20%7C%20Urban%20Institute-,The%20Typical%202022%20Homebuyer%20Spent%20At%20Least%2030%20Percent,Monthly%20Income%20on%20Their%20Mortgage&amp;text=We%20corrected%20the%20figure%20for,estimate%20applies%20to%20all%20homeowners." rel="">30% of their income</a><span> on their mortgage, and the median renter in the bottom quintile of income spends </span><a href="https://www.census.gov/library/stories/2023/03/low-income-renters-spent-larger-share-of-income-on-rent.html" rel="">60% of their income</a><span> on rent.</span></p><p>Because of the enormous costs of housing, it's worth understanding where, specifically, those costs come from, and what sort of interventions would be needed to reduce these costs. Discussions of housing policy often focus on issues of zoning, regulation, and other supply restrictions which manifest as increased land prices, but for most American housing, the largest cost comes from building the physical structure itself. However, in dense urban areas — the places where building new housing is arguably most important — this changes, and high land prices driven by regulatory restrictions become the dominant factor.&nbsp;</p><p>People concerned about building more housing are right to pay attention to zoning and land use rules: over 100 million Americans live in places where most of the cost of residential property comes from the land itself. But they should not neglect the physical costs of building homes, which are overall more important. Unfortunately, as we’ll see, reducing these physical costs is far from straightforward.</p><p><span>We’ll look at housing costs chiefly through the lens of single-family homes, for a few reasons. </span><a href="https://www.construction-physics.com/p/every-building-in-america-an-analysis" rel="">Most housing in the US consists of single-family homes</a><span>, so the costs of building them largely map to US housing costs generally. There’s also a large amount of data available on single-family home construction that doesn’t exist (or is much less accessible) for other types of housing. And most multi-family apartment buildings in the US will be built using the same basic technology, light-framed wood, used to build single-family homes, so much of what we learn about single-family costs, particularly on the construction side, will apply to multi-family apartments as well.</span></p><p><span>We can start by looking at the National Association of Home Builders (NAHB) </span><a href="https://www.nahb.org/-/media/NAHB/news-and-economics/docs/housing-economics-plus/special-studies/2023/special-study-cost-of-constructing-a-home-2022-february-2023.pdf" rel="">construction cost survey</a><span>. This survey is periodically sent out by the NAHB to several thousand home builders. It divides home building into several dozen separate activities (framing, plumbing fixtures, drywall, etc.) and asks home builders about their typical costs for each task. Note that while the survey is based on the average costs of thousands of different home builders, it does not represent the costs of an average home. Because every home builder gets equal weight in the survey, it overweighs the costs from boutique, luxury home builders (who might build just a few homes a year) and underweighs larger volume economy builders (who might build hundreds or thousands of homes a year). The “average” home cost given by the survey is almost $100,000 higher than the average home cost indicated by the Census. But while absolute costs won’t necessarily be representative, I expect the relative proportions devoted to each task to vary less between the low and high ends of the market (and we’ll do a bit of checking to be sure this is the case).</span></p><p>We can divide the costs of a new home into roughly three buckets: “hard costs” (physically constructing the home), “soft costs” (design, administration, marketing, and other non-physical construction costs), and the costs of land. Per the NAHB, on average hard costs are about 56% of the total costs, soft costs (including builder profits) are about 25%, and land costs are about 18%.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png" width="574" height="123" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:123,&quot;width&quot;:574,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fad40511f-bc60-45a7-b29e-95277d87b88f_574x123.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption>Via NAHB</figcaption></figure></div><p>Let’s take a deeper look at each one of these items.</p><p><span>Hard costs are inherent to constructing the building itself: digging and pouring the foundations, building the framing, installing the HVAC system, and so on. Hard costs make up the majority of the costs of a new home, which is why I spend so much time thinking and writing about construction productivity. The NAHB survey breaks hard costs further down into the specific tasks they’re associated with, shown below:</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-143167718" href="https://www.construction-physics.com/p/what-makes-housing-so-expensive#footnote-1-143167718" target="_self" rel="">1</a></span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png" width="1456" height="1412" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1412,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:630208,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5aa3e3df-d731-44ac-9783-9461b5dc6587_3139x3044.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Via NAHB</figcaption></figure></div><p><span>The above graph is color-coded: green is the structural framing, blue is exterior finishes (including doors and windows), orange is services (electrical, HVAC, etc.), red is interior finishes and appliances, dark gray is foundations and light gray is outdoor work and landscaping. And if we look at a similar breakdown of tasks given by the </span><a href="https://craftsman-book.com/national-construction-estimator-book-4" rel="">Craftsman Construction Estimator</a><span>, we see a broadly similar division.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-143167718" href="https://www.construction-physics.com/p/what-makes-housing-so-expensive#footnote-2-143167718" target="_self" rel="">2</a></span></p><p><span>A few things stand out here. One, outside of a few large line items (the framing and the foundations, which together are almost 30% of the cost), in general no single cost dominates. Construction consists of many separate tasks done by separate trades, each making up a relatively small fraction of the overall cost.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-3-143167718" href="https://www.construction-physics.com/p/what-makes-housing-so-expensive#footnote-3-143167718" target="_self" rel="">3</a></span></p><p><span>This isn’t unique to construction: we could construct a similar cost breakdown for manufacturing </span><a href="https://www.researchgate.net/figure/4-Car-Manufacturing-Cost_fig17_2405100" rel="">a car</a><span>. And neither is subcontracting the work out to many separate trades. Ford uses more than 1,400 Tier 1 suppliers to supply parts and components. What is different about construction is the level of coordination that takes place: whereas in a car everything is carefully designed to tightly integrate together, in housing construction the work can be done (and often is) with surprisingly little coordination between the various trades. Even something as seemingly basic as getting subcontractors together at the beginning of the design process to come up with a coordinated design is a </span><a href="https://www.construction-physics.com/p/book-review-building-an-affordable" rel="">very unusual practice in home construction</a><span>. This style of work organization reduces upfront cost required, and allows homes to be built with an unusually inexpensive design process compared to other products, but it also means that </span><a href="https://www.construction-physics.com/p/why-its-hard-to-innovate-in-construction" rel="">innovation is risky</a><span>, and new products </span><a href="https://www.construction-physics.com/p/what-construction-innovation-uptake" rel="">tend to be evolutionary</a><span> ones that don’t change the overall construction process.</span></p><p>But this doesn’t mean that innovation doesn’t take place. For each of these tasks there is constant industry effort to try and improve them. In some cases, those efforts are successful, as with PEX piping replacing copper piping. In other cases, industry hasn’t made great strides. Framing technology, for instance, has changed comparatively little, despite many attempts to develop alternative framing systems.</p><p><span>Something else that stands out is the relatively large fraction of tasks that have an aesthetic component. Interior and exterior finishes combined — trim, drywall, exterior finishes, and so on — make up more than a third of the hard costs of a new home. These costs can also be difficult to reduce, because people’s preferences about how various parts of the house look or feel can be surprisingly strong, and constrain the use of new systems. Luxury vinyl tile or synthetic stone bathroom panels are probably superior to hardwood floors and ceramic tile from the perspective of functionality, but people’s preferences for more “natural” materials are hard to displace. Similarly, the flimsiness and visible joints of </span><a href="https://www.construction-physics.com/p/comparing-process-improvement-in" rel="">inexpensive drywall substitutes</a><span> like vinyl on gypsum makes it hard to replace drywall outside of the low end of the market.</span></p><p>We can further break down the hard costs of construction by separating tasks into the cost of materials and the cost of labor. NAHB doesn’t provide this data, but Craftsman’s National Construction Estimator does:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F56422219-ed29-4650-bddb-b85aad3c222f_826x627.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F56422219-ed29-4650-bddb-b85aad3c222f_826x627.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F56422219-ed29-4650-bddb-b85aad3c222f_826x627.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F56422219-ed29-4650-bddb-b85aad3c222f_826x627.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F56422219-ed29-4650-bddb-b85aad3c222f_826x627.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F56422219-ed29-4650-bddb-b85aad3c222f_826x627.png" width="826" height="627" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/56422219-ed29-4650-bddb-b85aad3c222f_826x627.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:627,&quot;width&quot;:826,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F56422219-ed29-4650-bddb-b85aad3c222f_826x627.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F56422219-ed29-4650-bddb-b85aad3c222f_826x627.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F56422219-ed29-4650-bddb-b85aad3c222f_826x627.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F56422219-ed29-4650-bddb-b85aad3c222f_826x627.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Construction cost breakdown for a new single-family home in 2022, via Craftsman. </figcaption></figure></div><p><span>We see that hard costs are roughly 50/50 split between materials and labor (and we saw something similar when we looked at how the </span><a href="https://www.construction-physics.com/p/which-construction-tasks-have-gotten" rel="">cost of individual construction tasks has changed over time</a><span>). This is yet another thing that makes reducing construction costs difficult. A large fraction of hard costs are due to the cost of materials, and there’s no obvious path for making these cheaper. Bulk building materials are already mass-produced in factories, and are among the cheapest materials civilization is capable of producing. As we’ve noted previously, </span><a href="https://www.construction-physics.com/p/how-valuable-are-building-methods" rel="">modern buildings are fairly materially efficient</a><span>, and there’s no obvious path for using substantially fewer materials that doesn’t come with significant tradeoffs.</span></p><p><span>One final thing worth noting about hard costs is that they can vary significantly from place to place. The </span><a href="https://www.turnerandtownsend.com/en/perspectives/international-construction-market-survey-2023/" rel="">Turner International Construction Market Survey</a><span> gives a wide range of costs for things such as electrical work or structural steel in various US cities. An electrician that costs $78 per hour to hire in Houston might cost almost $170 to hire in New York City. Similarly, construction estimating company RSMeans gives a “</span><a href="https://www.rsmeans.com/media/wysiwyg/quarterly_updates/2021-CCI-LocationFactors-V2.pdf" rel="">city cost index</a><span>” to adjust costs for local conditions, which can shift “average” labor costs by plus or minus 50% or more.</span></p><p>So overall, the hard costs of construction — the costs associated with putting up the actual, physical building — are the largest and most important cost of a new home. But they’re also the hardest things to improve, and there’s no simple or obvious path for doing so.</p><p>Soft costs, as we’ve noted, include financing, permits, inspections, design work, and other administrative tasks not directly associated with building the physical home. According to the NAHB survey, soft costs make up the second largest portion of costs of a new home.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png" width="426" height="229" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:229,&quot;width&quot;:426,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:18531,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6662fad2-845d-4c66-8c2a-eca3de66b195_426x229.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Via NAHB</figcaption></figure></div><p><span>Looking at a line item breakdown once again shows the difficulty of reducing costs, and the lack of straightforward paths for improvement. For instance, a common complaint about construction (and one I’ve </span><a href="https://www.construction-physics.com/p/when-did-new-york-start-building" rel="">made elsewhere</a><span>) is the amount of time it takes to build a building, and how construction seems to be getting slower over time. Because of this, people are often optimistic about technologies like prefabrication that allow for faster construction, and the potential money such rapid construction would save.&nbsp;</span></p><p><span>But per the NAHB survey, construction financing cost, one of the main avenues of potential savings from accelerated construction, is fairly low, just 1.9% of the total cost of a new home.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-4-143167718" href="https://www.construction-physics.com/p/what-makes-housing-so-expensive#footnote-4-143167718" target="_self" rel="">4</a></span><span> Depending on the technology chosen, speeding up construction might have surprisingly little impact on this. Prefabrication, for instance, can reduce on-site construction time, but using prefabrication often requires the fabricator to begin work months beforehand. If you need to make a downpayment to the fabricator before they start work, you might not have reduced your financing costs at all, merely shifted when they take place.</span></p><p><span>Likewise, soft costs like design work, permits, and inspections are fairly small proportions of overall costs. (</span><a href="https://www.construction-physics.com/p/on-klein-on-construction" rel="">We also found</a><span> fairly small costs associated with things like OSHA regulations.) Builders profit is somewhat high (above 10% of the costs of a new home according to the NAHB), but this is probably in part skewed by the sample, which overweights smaller, luxury builders. The National Construction Estimator (whose estimates are roughly in line with Census cost data, and thus probably a good average) suggests a much more modest 5% builders profit. Sales commission is also on the higher side, though this may be on the cusp of being reduced. While real estate startups like Zillow, Redfin and Trulia have not managed to dislodge realtors from the homebuying process, a recent court ruling is expected to </span><a href="https://www.cnn.com/2024/03/15/economy/nar-realtor-commissions-settlement/index.html#:~:text=In%20a%20sweeping%20move%20expected,and%20eliminating%20rules%20on%20commissions." rel="">greatly reduce realtor fees</a><span>.</span></p><p>As with hard costs, so with soft costs: No one dominant item, and few obvious paths for cost reduction.</p><p>The third major cost of building a new house is the cost of the land itself. Given how prominent regulatory restrictions on housing are in online discourse (zoning, NIMBY vs YIMBY, and so on), I think many people would be surprised that land only makes up around 20% of the cost of a new home. But we can confirm this with Census data, which shows that over the last 30 years, the fraction of the price of a new single-family home that’s due to the cost of land has remained remarkably steady, generally hovering between 20 and 25% of the total cost. (“20% of your costs should be for the property itself” is also a common rule of thumb among homebuilders.) Partly this is due to selection effects: we’ll tend to see houses built where land is more easily built on, and in those places land will be cheaper. If it was harder to build on it, the land would be more expensive. Nevertheless, for most new housing built in the US, land is not the major cost determinant.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png" width="653" height="438" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:438,&quot;width&quot;:653,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc16ad424-e7ef-4d90-b2d2-07366c322b1e_653x438.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Via Census</figcaption></figure></div><p>This, of course, is for new homes. For existing homes, we can expect the land to be a larger fraction of the total cost of a home, if for no other reason than because the value of the physical home itself will depreciate as it ages. What do we know about the land fractions of existing homes?</p><p><span>At a high level, we can estimate the fraction of housing cost associated with land by using the Federal Reserve’s </span><a href="https://www.federalreserve.gov/releases/z1/" rel="">household balance sheet report</a><span>. Per the Fed, the total value of all real estate held by households is $44.8 trillion, while the replacement cost of the structures themselves (which will include both hard and soft costs) is $27.2 trillion. This gives $17.6 trillion dollars as the value of householder land, or almost 40% of the price of all homes nationally. Though this seems high, it actually seems to be roughly the average value for the </span><a href="https://www.nar.realtor/blogs/economists-outlook/land-sales-rose-2-in-2019-with-steady-growth-in-2020-according-to-rli-nar-survey" rel="">past 30 years</a><span> (though historically land fractions were much lower).</span></p><p><span>We can try to calculate this another way by using American Housing Survey data. Per the 2021 AHS, the average size of a US detached single family home was about 2,200 square feet, which at then-current median construction costs would cost $293,000 to replace. Using 1.1% annual depreciation (roughly the depreciation rate </span><a href="https://apps.bea.gov/national/pdf/BEA_depreciation_rates.pdf" rel="">used by the BEA</a><span> for single family homes), and a median home age of 40 years, this gets us a median replacement value of around $188,000 for US homes. Per the Census, the median homeowner during that period </span><a href="https://www.census.gov/quickfacts/fact/table/US/HSG495222#HSG495222" rel="">valued their home around $282,000</a><span>. Taking into account that homeowners systematically overvalue their homes by around 7%, this gives a median home value of around $262,000.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-5-143167718" href="https://www.construction-physics.com/p/what-makes-housing-so-expensive#footnote-5-143167718" target="_self" rel="">5</a></span><span> This means that for the median US home, 72% of the value is from the structure itself, leaving 28% for the land. This is less than the Federal Reserve estimate of an average 40% land fraction nationally, but still higher than the roughly 20% value from new construction. So while for new housing, land is about 20-25% of the cost of a home, for existing housing this is closer to 30-40%.</span></p><p><span>But this is a national average. Land fractions will be higher, often much higher, in dense urban areas. </span><a href="https://www.aei.org/housing/land-price-indicators/" rel="">This site</a><span> from AEI gives zip code level estimates for the fraction of home prices due to land for the 100 largest metro areas in the US. We can see that for many zip codes, over 70% of the value of the house is due to the cost of the land on which it sits.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png" width="999" height="477" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:477,&quot;width&quot;:999,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F53e2e9a7-01b1-4678-8783-0411d9b138fb_999x477.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Land share of home values in San Francisco, via AEI</figcaption></figure></div><p>We can get a better sense of how much this matters by combining this data with zip code-level population estimates from the Census. Using this, we get that over 125 million people live in a zip code where the land share of residential property is greater than 50%, and more than 16 million people live in a place where the land share is greater than 70%.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png" width="1456" height="901" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/bc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:901,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:53318,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbc8b7e45-612c-4794-b34b-189a1fefab4f_2623x1624.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>To understand what's driving the high cost of land, we can divide the price of land into two separate buckets. The first is the “hedonic” value of the land, the value people get from being able to enjoy the space itself. The second is the “permission slip” — the right to build a certain amount of housing that comes attached to the plot of land. As we’ve </span><a href="https://www.construction-physics.com/p/how-much-do-construction-costs-matter" rel="">noted previously</a><span>, empirically people do not particularly value having additional land all that much. It’s the “permission slip” that makes up the majority of the value of most residential land parcels:&nbsp;</span></p><blockquote><p><em>…when Ed Glaeser calculated [the hedonic value of land] for 21 metro areas in early 2000 (by analyzing home price sales and estimating how much a larger lot added to the home’s value), he found that in 16 of them, the hedonic value was less than (inflation adjusted) $1.50 per square foot, or less than $12,000 dollars for the median lot size of ~8,000 square feet…By comparison, the median new home in 2020 sold for around $330,000.</em></p><p><em>A similar study of single family homes in Boston found that the hedonic value of land for the average lot was just $11,200, compared to an average house cost of $450,000.</em></p><p><em>The permission slip, by contrast, is often incredibly valuable, especially if the permitting body limits how many of them it gives out. For instance, in the previous study Glaeser calculated the hedonic value of land for single family homes in San Francisco at $4.10 per square foot (the highest out of any metro examined), or about $10,000 for the average lot size at that time. The ‘zoning tax’ portion, by contrast (the portion of the cost due to various building and supply restrictions), was priced at around $220,000 - in other words, over 95% of the land’s value (and over half the price of the house), was due from being allowed to build on it.</em></p><p><em>Similarly, multifamily developers have told me that they will generally value land in terms of how many housing units they’re allowed to build on it. Increase the number of housing units you’re allowed to build (say, by getting it rezoned), and you greatly increase the value of the land. This is a lever developers have to work with when putting together a development deal - they might decide to take a risk and buy a cheaper piece of land that’s zoned for a relatively small number of units, in the hopes of getting permission to build more on it than is currently allowed.</em><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-6-143167718" href="https://www.construction-physics.com/p/what-makes-housing-so-expensive#footnote-6-143167718" target="_self" rel="">6</a></span></p></blockquote><p>So while the price of a lot is not a particularly large fraction of the cost of new housing, it's a much larger proportion of the cost of existing housing. And in dense metro areas (the places that need housing the most), it can be even higher, exceeding 70% of the cost of a home. This high cost of land, in turn, isn’t because people value having lots of space for their kids to play on — it's because of regulatory and zoning restrictions that limit how much housing can be built on a given parcel or in a given place.</p><p>The cost of housing comes from a variety of sources. In most cases, for both new construction and existing housing, the largest line item is the cost of constructing the home itself. For new construction this is on average 80% of the cost of a home (including hard and soft costs), while for existing construction it's still in the neighborhood of 60-70%.&nbsp;</p><p>It’s only in dense urban areas that the cost of land begins to dominate the cost of new housing, driven by regulatory and zoning restrictions that limit how much housing can be built in a given area. Another way of looking at it is that in the areas that we need housing the most, zoning and regulatory factors are responsible for the lion’s share of housing costs.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Lago, Open-Source Stripe Alternative, banks $22M in funding (221 pts)]]></title>
            <link>https://techcrunch.com/2024/03/14/lago-a-paris-based-open-source-billing-platform-banks-22m/</link>
            <guid>39957607</guid>
            <pubDate>Sun, 07 Apr 2024 02:19:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://techcrunch.com/2024/03/14/lago-a-paris-based-open-source-billing-platform-banks-22m/">https://techcrunch.com/2024/03/14/lago-a-paris-based-open-source-billing-platform-banks-22m/</a>, See on <a href="https://news.ycombinator.com/item?id=39957607">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				<p id="speakable-summary">A startup out of Paris that began life building marketing tools has raised $22 million after making a successful pivot into billing — a space it discovered was even more broken among potential customers. <a href="https://www.getlago.com/" target="_blank" rel="noopener">Lago</a>, developer of an open source billing platform, has picked up the funding across two rounds of funding it’s revealing to coincide with its official launch.</p>
<p>It’s launching today, but it has been in business in closed beta for some time, during which it’s picked up a number of notable startups such as Mistral.ai, Together.ai and Juni as early customers. The company’s focus on open source is very intentional, said CEO Anh-Tho Chuong: It’s targeting developers who are looking for solutions to tailor their billing to fit whatever cutting-edge, creative new services they are cooking up, a gap in the market that Lago believes is not being addressed well enough by incumbents, and which Lago is betting might best be addressed through an open source approach.</p>
<p>“We’re a partner to developers,” she said in an interview. “We honor [their] abstraction, and we use data to meter usage, to help companies handle subscriptions [or other] pricing plans in an easy way.”</p>
<p>A strong list of investors have taken note: The latest Series A of $15 million was led by FirstMark; the previous seed of $7 million was led by SignalFire, Chuong said. Other backers include Y Combinator, New Wave, and Script, as well as a number of individuals whose participation underscores the segment of the market Lago is targeting. They include MongoDB monetization head Meghan Gill; Romain Huet (previously of Stripe, now in developer relations at OpenAI); and Hugging Face CEO Clément Delangue.</p>
<p>We understand from sources that its valuation is now around $100 million.</p>
<p>The Lago doing business today as a billing platform got its start in a very classical startup way: It had no idea that it would be a billing platform.</p>
<p>Chuong and her co-founder Raffi Sarkissian were both working at business banking startup Qonto when they decided to strike out on their own and build a new startup. They applied to Y Combinator and got into the Summer 2021 cohort on the strength of their backgrounds. “But we went to YC without a product,” she said.</p>
<p>They settled while there on marketing, specifically around the idea of building a “Zapier for marketing teams.”</p>
<p>“We honestly thought this was going to be a big one,” she recalled. “It was okay.” Okay was just not going to cut it though. Marketing tech is very crowded, the company was picking up almost no traction for its product.</p>
<p>In a moment of trying to growth hack their way into an audience, Sarkissian decided to write a post for Hacker News in which he lamented the <a href="https://news.ycombinator.com/item?id=31424450" target="_blank" rel="noopener">problems with billing for developers</a>.</p>
<p>It had a catchy title: “Billing systems are a nightmare for engineers,” and it was written with the kind of freedom you might only be able to capture as a creator when you are really writing from the heart. That was because it was something he and Chuong knew well, since their time at Qonto was spent building a product to address that very issue.</p>
<p>Chuong said this was really not the point. The impetus for posting on this was to pick something they knew well so that they could monitor engagement and possibly use that to pivot attention to Lago, the “Zapier for marketing teams.”</p>
<p>But the post struck a nerve, and to their surprise a lot of people began to speak up about their own billing issues. Lago had its “a-ha” moment: If what they really wanted to do was build something to solve a problem for developers, here was a problem they actually could solve, and they knew they could do it well. Cue the pivot to billing and the startup taking off.</p>
<p>Taking off not just with users, but also investors.</p>
<p>“We first spotted Lago via HackerNews in early 2023: They had so much traction, for a seemingly solved or trivial topic, that it seemed obvious people had been waiting for an open source solution like theirs. We then reached out to their stargazers on GitHub and the feedback was nothing but stellar,” said Oana Olteanu, a partner at SignalFire, in a statement.</p>
<p>If you think marketing is a competitive market, billing is more crowded than Billingsgate Fish Market on a Friday morning. Larger tech companies like Stripe, Adyen, Salesforce, Zoho, Paddle and many more offer billing solutions. There are even a number of providers already pursuing an open source approach, including FOSSBilling, ChargeBee, Kill Bill, AppDirect’s jBilling and the imaginatively named “Open Source Billing.” (Why beat around the bush?)</p>
<p>Chuong believes that there is still very much an opportunity, however, for a focus on extensibility and tailored solutions for startups trying to push the boundaries in their own competitive spaces.</p>
<p>The AI sector is a strong example of that, in her view. Companies building AI-based products are still working out what the viable business models will be, and in the meantime we are seeing a lot of examples of companies considering hybrid approaches, mixing elements of flat-rate subscriptions with consumption-based pricing. All of this is tricky to manage and relies on tools that can integrate with whatever developers are building, with the ability to discern and apply their usage data.</p>
<p>“If you have very simple pricing and billing, there are a lot of those solutions around for that, but for complex billing, there has been no solution,” she said. That leads to many companies (as Qonto did) building their own solutions. “But engineers hate it. And it’s very expensive to hire engineers for that, obviously. So it’s still an unsolved problem.” In Lago’s view, offering open source tools is that best solution to meet a variety of needs and ideas.</p>
<p>For some of those users, the open source ethos also lines up with what they are hoping to espouse themselves as businesses.</p>
<p>“We chose Lago as our billing provider because we believe in the open-source ecosystem,” Timothée Lacroix, co-founder and CTO at Mistral.ai, said in a statement. “They have been able to follow the pace of our releases and have allowed us to focus on what we do best.” Yes, some will argue that open source might be getting stretched a lot as a concept right now, and may well be exactly the opposite of what many so-called open source companies are building.</p>
<p>The company’s aim is to continue building out its existing business but also to start considering what more it might add next. One obvious area is to dip back into Lago’s original thoughts about marketing, and to provide more data analytics to customers about what people are consuming and paying for, and the patterns of their payments. Another is to explore the other side of the billing coin: payments.</p>
<p>Lago is unlikely to build a payments stack; however, she added: The focus is almost certainly going to be on payments orchestration, giving users control over what they use but make sure that it integrates well with their billing platform (one that is, ideally, going to be covered by Lago of course).</p>
<p><em>Updated to remove the name of an investor that confirmed it is not involved in the funding.</em></p>
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A canonical Hamiltonian formulation of the Navier–Stokes problem (151 pts)]]></title>
            <link>https://www.cambridge.org/core/journals/journal-of-fluid-mechanics/article/canonical-hamiltonian-formulation-of-the-navierstokes-problem/B3EB9389AE700867A6A3EA63A45E69C6</link>
            <guid>39957107</guid>
            <pubDate>Sun, 07 Apr 2024 00:46:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cambridge.org/core/journals/journal-of-fluid-mechanics/article/canonical-hamiltonian-formulation-of-the-navierstokes-problem/B3EB9389AE700867A6A3EA63A45E69C6">https://www.cambridge.org/core/journals/journal-of-fluid-mechanics/article/canonical-hamiltonian-formulation-of-the-navierstokes-problem/B3EB9389AE700867A6A3EA63A45E69C6</a>, See on <a href="https://news.ycombinator.com/item?id=39957107">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<div data-magellan-destination="sec1" id="sec1">
<h2><span>1.</span> Introduction</h2>
<p> Given the title of this paper, it is incumbent on the authors to assure the reader that we do not claim to have done the impossible. A viscous fluid is, after all, a non-Hamiltonian system (Millikan <a href="#ref72"><span>Reference Millikan</span>1929</a>; Finlayson <a href="#ref33"><span>Reference Finlayson</span>1972<em>a</em></a>,<a href="#ref34"><span>Reference Finlayson</span><em>b</em></a>). There is no action integral for which Hamilton's principle (Hamilton <a href="#ref48"><span>Reference Hamilton</span>1833</a>, <a href="#ref49"><span>Reference Hamilton</span>1834</a>, <a href="#ref50"><span>Reference Hamilton</span>1835</a>) yields the Navier–Stokes equations (Stokes <a href="#ref98"><span>Reference Stokes</span>1845</a>; Anderson, Tannehill &amp; Pletcher <a href="#ref2"><span>Reference Anderson, Tannehill and Pletcher</span>1984</a>; Anderson <a href="#ref1"><span>Reference Anderson</span>1995</a>; Batchelor <a href="#ref8"><span>Reference Batchelor</span>2000</a>; White <a href="#ref116"><span>Reference White</span>2006</a>; Pozrikidis <a href="#ref81"><span>Reference Pozrikidis</span>2009</a>; Cengel &amp; Cimbala <a href="#ref22"><span>Reference Cengel and Cimbala</span>2018</a>) in their usual form (Millikan <a href="#ref72"><span>Reference Millikan</span>1929</a>; Finlayson <a href="#ref33"><span>Reference Finlayson</span>1972<em>a</em></a>,<a href="#ref34"><span>Reference Finlayson</span><em>b</em></a>), and we do not claim otherwise. Remarkably, however, a Hamiltonian formulation can still be found by considering a mathematically equivalent higher-order problem, as we will now demonstrate via simple example.</p>
<div data-magellan-destination="sec1-1" id="sec1-1">
<h3><span>1.1.</span> A motivating example</h3>
<p> Consider the first-order initial-value problem
</p><p><span>(1.1<em>a</em>,<em>b</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn1.png?pub-status=live" width="149" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn1.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn1.png"><span data-mathjax-type="texmath"><span>\begin{equation} \dot{v}={-}v, \quad v(0)=1, \end{equation}</span></span></span></p><p>
with unique solution <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline9.png?pub-status=live" width="79" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline9.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline9.png"><span data-mathjax-type="texmath"><span>$v(t)={\rm e}^{-t}$</span></span></span></span>. Here, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline10.png?pub-status=live" width="30" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline10.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline10.png"><span data-mathjax-type="texmath"><span>$v(t)$</span></span></span></span> can be interpreted as the velocity of a lumped mass moving in a viscous medium in one dimension with linear damping. Like the traditional Navier–Stokes equations (Stokes <a href="#ref98"><span>Reference Stokes</span>1845</a>; Anderson <em>et&nbsp;al.</em> <a href="#ref2"><span>Reference Anderson, Tannehill and Pletcher</span>1984</a>; Anderson <a href="#ref1"><span>Reference Anderson</span>1995</a>; Batchelor <a href="#ref8"><span>Reference Batchelor</span>2000</a>; White <a href="#ref116"><span>Reference White</span>2006</a>; Pozrikidis <a href="#ref81"><span>Reference Pozrikidis</span>2009</a>; Cengel &amp; Cimbala <a href="#ref22"><span>Reference Cengel and Cimbala</span>2018</a>), this too is an intrinsically non-Hamiltonian problem, in that there is no action <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline11.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline11.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline11.png"><span data-mathjax-type="texmath"><span>$\mathcal {S}$</span></span></span></span> for which Hamilton's principle (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline12.png?pub-status=live" width="55" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline12.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline12.png"><span data-mathjax-type="texmath"><span>$\delta \mathcal {S}=0$</span></span></span></span>) yields the governing equation <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline13.png?pub-status=live" width="57" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline13.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline13.png"><span data-mathjax-type="texmath"><span>$\dot {v}=-v$</span></span></span></span>. Yet, if we simply differentiate both sides of the equation (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline14.png?pub-status=live" width="57" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline14.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline14.png"><span data-mathjax-type="texmath"><span>$\ddot {v}=-\dot {v}$</span></span></span></span>), use the original equation to write <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline15.png?pub-status=live" width="57" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline15.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline15.png"><span data-mathjax-type="texmath"><span>$\dot {v}=-v$</span></span></span></span> and apply the additional initial condition <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline16.png?pub-status=live" width="146" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline16.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline16.png"><span data-mathjax-type="texmath"><span>$\dot {v}(0)=-v(0)=-1$</span></span></span></span>, we arrive at the mathematically equivalent second-order problem
</p><p><span>(1.2<em>a</em>–<em>c</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn2.png?pub-status=live" width="237" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn2.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn2.png"><span data-mathjax-type="texmath"><span>\begin{equation} \ddot{v}=v, \quad v(0)=1, \quad \dot{v}(0)={-}1, \end{equation}</span></span></span></p><p>
which has the same unique solution <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline17.png?pub-status=live" width="79" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline17.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline17.png"><span data-mathjax-type="texmath"><span>$v(t)={\rm e}^{-t}$</span></span></span></span> but which is Hamiltonian – not in the sense that the total mechanical energy is conserved, but in the sense that it has mathematically Hamiltonian structure.</p>
<p> As first observed by Sanders (<a href="#ref88"><span>Reference Sanders</span>2021</a>, <a href="#ref89"><span>Reference Sanders</span>2022</a>, <a href="#ref90"><span>Reference Sanders</span>2023<em>a</em></a>,<a href="#ref91"><span>Reference Sanders</span><em>b</em></a>) and Sanders &amp; Inman (<a href="#ref92"><span>Reference Sanders and Inman</span>2023</a>), the associated action can be obtained by writing the original equation in standard form (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline18.png?pub-status=live" width="112" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline18.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline18.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}\equiv \dot {v}+v=0$</span></span></span></span>), squaring the residual <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline19.png?pub-status=live" width="18" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline19.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline19.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}$</span></span></span></span> and integrating over time
</p><p><span>(1.3)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn3.png?pub-status=live" width="512" height="42" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn3.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn3.png">
<span data-mathjax-type="texmath"><span>\begin{align}
\mathcal{S}^{*}[v]=\int\text{d}t\big(\tfrac{1}{2}\mathcal{R}^{2}\big)=\int
\text{d}t\big[\tfrac{1}{2}\big(\dot{v}^{2}+2v\dot{v}+v^{2}\big)\big]
\sim\int\text{d}t\big[\tfrac{1}{2}\big(\dot{v}^{2}+v^{2}\big)\big],
\end{align}</span></span></span></p><p>
where we have used the fact that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline20.png?pub-status=live" width="117" height="23" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline20.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline20.png"><span data-mathjax-type="texmath"><span>$2v\dot {v}=\text {d}(v^{2})/\text {d}t$</span></span></span></span> is a total time derivative and can therefore be excluded from the action without changing the resulting Euler–Lagrange equation (Lanczos <a href="#ref63"><span>Reference Lanczos</span>1970</a>). This is the so-called ‘time-averaged principle of least squares’ (Sanders <a href="#ref88"><span>Reference Sanders</span>2021</a>, <a href="#ref89"><span>Reference Sanders</span>2022</a>, <a href="#ref90"><span>Reference Sanders</span>2023<em>a</em></a>,<a href="#ref91"><span>Reference Sanders</span><em>b</em></a>; Sanders &amp; Inman <a href="#ref92"><span>Reference Sanders and Inman</span>2023</a>): since <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline21.png?pub-status=live" width="49" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline21.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline21.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}=0$</span></span></span></span> is a local minimum of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline22.png?pub-status=live" width="24" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline22.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline22.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}^{2}$</span></span></span></span>, it is also a local minimum of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline23.png?pub-status=live" width="67" height="24" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline23.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline23.png"><span data-mathjax-type="texmath"><span>$\int \text {d}t(\mathcal {R}^{2})$</span></span></span></span>. Varying <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline24.png?pub-status=live" width="12" height="12" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline24.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline24.png"><span data-mathjax-type="texmath"><span>$v$</span></span></span></span>, the first variation of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline25.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline25.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline25.png"><span data-mathjax-type="texmath"><span>$\mathcal {S}^{*}$</span></span></span></span> is
</p><p><span>(1.4)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn4.png?pub-status=live" width="408" height="42" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn4.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn4.png"><span data-mathjax-type="texmath"><span>\begin{equation} \delta\mathcal{S}^{*}=\int\text{d}t\left[\dot{v}\delta\dot{v}+v\delta v\right]=\int\text{d}t\left[(-\ddot{v}+v)\delta v\right]+\left[\dot{v}\delta v\right]_{t_{1}}^{t_{2}}, \end{equation}</span></span></span></p><p>
yielding the second-order equation <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline26.png?pub-status=live" width="44" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline26.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline26.png"><span data-mathjax-type="texmath"><span>$\ddot {v}=v$</span></span></span></span> and revealing the canonically conjugate ‘momentum’ <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline27.png?pub-status=live" width="46" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline27.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline27.png"><span data-mathjax-type="texmath"><span>${\rm \pi} \equiv \dot {v}$</span></span></span></span>. Here, and in what follows, we will use the symbol <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline28.png?pub-status=live" width="13" height="12" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline28.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline28.png"><span data-mathjax-type="texmath"><span>${\rm \pi}$</span></span></span></span> for canonically conjugate momenta, as is customary in Hamiltonian field theory, in order to avoid later confusion with the pressure field <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline29.png?pub-status=live" width="13" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline29.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline29.png"><span data-mathjax-type="texmath"><span>$p$</span></span></span></span>. Since the mathematical constant <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline30.png?pub-status=live" width="82" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline30.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline30.png"><span data-mathjax-type="texmath"><span>$3.14159\ldots$</span></span></span></span> does not appear in the present work, there will be no ambiguity.</p>
<p> The corresponding Hamiltonian is obtained via the Legendre transform
</p><p><span>(1.5)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn5.png?pub-status=live" width="322" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn5.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn5.png">
<span data-mathjax-type="texmath"><span>\begin{equation}
H^{*}[v,{\rm \pi}]={\rm \pi}\dot{v}-\tfrac{1}{2}\big(\dot{v}^{2}+v^{2}\big)=\tfrac{1}{2}\big({\rm \pi}^{2}-v^{2}\big).
\end{equation}</span></span></span></p><p>
Notably, this Hamiltonian has nothing to do with the total mechanical energy of the system, although it is a conserved quantity. In fact, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline31.png?pub-status=live" width="58" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline31.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline31.png"><span data-mathjax-type="texmath"><span>$H^{*}=0$</span></span></span></span> for the actual motion satisfying <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline32.png?pub-status=live" width="91" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline32.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline32.png"><span data-mathjax-type="texmath"><span>${\rm \pi} \equiv \dot {v}=-v$</span></span></span></span>. We note in passing that Liouville's theorem is satisfied, as the motion occurs along the line <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline33.png?pub-status=live" width="59" height="12" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline33.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline33.png"><span data-mathjax-type="texmath"><span>${\rm \pi} =-v$</span></span></span></span>, so that the phase-space volume, being always zero, is conserved. Hamilton's equations
</p><p><span>(1.6<em>a</em>,<em>b</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn6.png?pub-status=live" width="188" height="40" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn6.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn6.png"><span data-mathjax-type="texmath"><span>\begin{equation} \dot{v}=\frac{\partial H^{*}}{\partial{\rm \pi}}, \quad \dot{\rm \pi}={-}\frac{\partial H^{*}}{\partial v}, \end{equation}</span></span></span></p><p>
are mathematically equivalent to the second-order problem <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline34.png?pub-status=live" width="44" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline34.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline34.png"><span data-mathjax-type="texmath"><span>$\ddot {v}=v$</span></span></span></span> and therefore also mathematically equivalent to the original, first-order problem.</p>
<p> The associated Hamilton–Jacobi equation (Hamilton <a href="#ref48"><span>Reference Hamilton</span>1833</a>, <a href="#ref49"><span>Reference Hamilton</span>1834</a>, <a href="#ref50"><span>Reference Hamilton</span>1835</a>; Jacobi <a href="#ref54"><span>Reference Jacobi</span>1837</a>, <a href="#ref55"><span>Reference Jacobi</span>1842–1843</a>; Whittaker <a href="#ref117"><span>Reference Whittaker</span>1904</a>; Lanczos <a href="#ref63"><span>Reference Lanczos</span>1970</a>) is
</p><p><span>(1.7)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn7.png?pub-status=live" width="226" height="49" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn7.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn7.png"><span data-mathjax-type="texmath"><span>\begin{equation} \frac{1}{2}\left(\frac{\partial{S}^{*}}{\partial v}\right)^{2}-\frac{1}{2}v^{2}+\frac{\partial{S}^{*}}{\partial t}=0, \end{equation}</span></span></span></p><p>
where Hamilton's principal function <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline35.png?pub-status=live" width="100" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline35.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline35.png"><span data-mathjax-type="texmath"><span>${S}^{*}={S}^{*}(v,t)$</span></span></span></span> serves as the generating function for a canonical transformation to a new coordinate <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline36.png?pub-status=live" width="13" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline36.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline36.png"><span data-mathjax-type="texmath"><span>$\phi$</span></span></span></span> which is constant and equal to its initial value. Although this is almost identical to the Hamilton–Jacobi equation for the simple harmonic oscillator – the only difference being the sign in front of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline37.png?pub-status=live" width="57" height="23" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline37.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline37.png"><span data-mathjax-type="texmath"><span>$(1/2)v^{2}$</span></span></span></span> – the usual separable solution of the form <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline38.png?pub-status=live" width="175" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline38.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline38.png"><span data-mathjax-type="texmath"><span>${S}^{*}(v,t)=W(v)+T(t)$</span></span></span></span>, where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline38a.png?pub-status=live" width="42" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline38a.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline38a.png"><span data-mathjax-type="texmath"><span>$W(v)$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline38b.png?pub-status=live" width="34" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline38b.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline38b.png"><span data-mathjax-type="texmath"><span>$T(t)$</span></span></span></span> are functions of <em>v</em> and <em>t</em> (respectively), does not work, as the reader may check.</p>
<p> Instead, let us use a trial solution of the form
</p><p><span>(1.8)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn8.png?pub-status=live" width="228" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn8.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn8.png"><span data-mathjax-type="texmath"><span>\begin{equation} {S}^{*}(v,t)=F(t)v+\tfrac{1}{2}v^{2}+f(t), \end{equation}</span></span></span></p><p>
where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline39.png?pub-status=live" width="35" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline39.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline39.png"><span data-mathjax-type="texmath"><span>$F(t)$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline40.png?pub-status=live" width="31" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline40.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline40.png"><span data-mathjax-type="texmath"><span>$f(t)$</span></span></span></span> are as yet undetermined functions of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline41.png?pub-status=live" width="9" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline41.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline41.png"><span data-mathjax-type="texmath"><span>$t$</span></span></span></span>. This trial solution was chosen to cancel the term <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline42.png?pub-status=live" width="57" height="23" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline42.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline42.png"><span data-mathjax-type="texmath"><span>$(1/2)v^{2}$</span></span></span></span> from the equation. Substituting our trial solution into the Hamilton–Jacobi equation, we find that
</p><p><span>(1.9)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn9.png?pub-status=live" width="287" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn9.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn9.png"><span data-mathjax-type="texmath"><span>\begin{equation} \tfrac{1}{2}[F(t)]^{2}+[F(t)+F'(t)]v+f'(t)=0. \end{equation}</span></span></span></p><p>
In order for this equation to hold for all <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline43.png?pub-status=live" width="12" height="12" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline43.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline43.png"><span data-mathjax-type="texmath"><span>$v$</span></span></span></span>, we must have the following:
</p><p><span>(1.10)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn10.png?pub-status=live" width="284" height="23" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn10.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn10.png"><span data-mathjax-type="texmath"><span>\begin{equation} F(t)+F'(t)=0 \quad \Rightarrow \quad F(t)=\alpha {\rm e}^{{-}t}, \end{equation}</span></span></span></p><p>
where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline44.png?pub-status=live" width="14" height="12" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline44.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline44.png"><span data-mathjax-type="texmath"><span>$\alpha$</span></span></span></span> is a constant of integration which will be used to transform to the new coordinate, and
</p><p><span>(1.11)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn11.png?pub-status=live" width="362" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn11.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn11.png"><span data-mathjax-type="texmath"><span>\begin{equation} \tfrac{1}{2}[F(t)]^{2}+f'(t)=0 \quad \Rightarrow \quad f(t)=\tfrac{1}{4}\alpha^{2}{\rm e}^{{-}2t}+\gamma, \end{equation}</span></span></span></p><p>
where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline45.png?pub-status=live" width="13" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline45.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline45.png"><span data-mathjax-type="texmath"><span>$\gamma$</span></span></span></span> is another constant of integration which is simply additive and can therefore be discarded.</p>
<p> In this way, we have that
</p><p><span>(1.12)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn12.png?pub-status=live" width="280" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn12.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn12.png"><span data-mathjax-type="texmath"><span>\begin{equation} {S}^{*}(v,t;\alpha)=\alpha {\rm e}^{{-}t}v+\tfrac{1}{2}v^{2}+\tfrac{1}{4}\alpha^{2}{\rm e}^{{-}2t}. \end{equation}</span></span></span></p><p>
With one constant of integration (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline46.png?pub-status=live" width="14" height="12" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline46.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline46.png"><span data-mathjax-type="texmath"><span>$\alpha$</span></span></span></span>) to match the single degree of freedom (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline47.png?pub-status=live" width="12" height="12" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline47.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline47.png"><span data-mathjax-type="texmath"><span>$v$</span></span></span></span>), this is a complete solution to the Hamilton–Jacobi equation. The new coordinate <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline48.png?pub-status=live" width="13" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline48.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline48.png"><span data-mathjax-type="texmath"><span>$\phi$</span></span></span></span> (which is constant and equal to its initial value) is obtained via the canonical transformation
</p><p><span>(1.13)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn13.png?pub-status=live" width="207" height="40" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn13.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn13.png"><span data-mathjax-type="texmath"><span>\begin{equation} \phi=\frac{\partial{S}^{*}}{\partial\alpha}={\rm e}^{{-}t}v+\frac{1}{2}\alpha {\rm e}^{{-}2t}. \end{equation}</span></span></span></p><p>
The numerical value of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline49.png?pub-status=live" width="14" height="12" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline49.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline49.png"><span data-mathjax-type="texmath"><span>$\alpha$</span></span></span></span> is in turn obtained via the canonical relation
</p><p><span>(1.14)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn14.png?pub-status=live" width="164" height="40" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn14.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn14.png"><span data-mathjax-type="texmath"><span>\begin{equation} {\rm \pi}=\frac{\partial{S}^{*}}{\partial v}=\alpha {\rm e}^{{-}t}+v, \end{equation}</span></span></span></p><p>
which, evaluated at <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline50.png?pub-status=live" width="41" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline50.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline50.png"><span data-mathjax-type="texmath"><span>$t=0$</span></span></span></span>, gives <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline51.png?pub-status=live" width="59" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline51.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline51.png"><span data-mathjax-type="texmath"><span>$\alpha =-2$</span></span></span></span> (recall that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline52.png?pub-status=live" width="46" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline52.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline52.png"><span data-mathjax-type="texmath"><span>${\rm \pi} =\dot {v}$</span></span></span></span>, and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline53.png?pub-status=live" width="146" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline53.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline53.png"><span data-mathjax-type="texmath"><span>$\dot {v}(0)=-v(0)=-1$</span></span></span></span>). Using the fact that the new coordinate <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline54.png?pub-status=live" width="13" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline54.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline54.png"><span data-mathjax-type="texmath"><span>$\phi$</span></span></span></span> is equal to its initial value, we have that
</p><p><span>(1.15)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn15.png?pub-status=live" width="209" height="23" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn15.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn15.png"><span data-mathjax-type="texmath"><span>\begin{equation} {\rm e}^{{-}t}v-{\rm e}^{{-}2t}=v(0)-1=0, \end{equation}</span></span></span></p><p>
giving the correct solution <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline55.png?pub-status=live" width="79" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline55.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline55.png"><span data-mathjax-type="texmath"><span>$v(t)={\rm e}^{-t}$</span></span></span></span>.</p>
<p> In summary, by doubling the order of the governing equation and supplying additional auxiliary conditions, we made a non-Hamiltonian problem into a Hamiltonian one (Sanders <a href="#ref88"><span>Reference Sanders</span>2021</a>, <a href="#ref89"><span>Reference Sanders</span>2022</a>, <a href="#ref90"><span>Reference Sanders</span>2023<em>a</em></a>,<a href="#ref91"><span>Reference Sanders</span><em>b</em></a>; Sanders &amp; Inman <a href="#ref92"><span>Reference Sanders and Inman</span>2023</a>). Furthermore, this simple example demonstrates that the method correctly gives the solution to the original, non-Hamiltonian problem. Indeed, it would appear that every non-Hamiltonian problem belongs to an equivalence class of problems with the same solution, and within each such equivalence class there are Hamiltonian variants. The remainder of this paper applies that concept to the isotropic Navier–Stokes problem (Stokes <a href="#ref98"><span>Reference Stokes</span>1845</a>; Anderson <em>et&nbsp;al.</em> <a href="#ref2"><span>Reference Anderson, Tannehill and Pletcher</span>1984</a>; Anderson <a href="#ref1"><span>Reference Anderson</span>1995</a>; Batchelor <a href="#ref8"><span>Reference Batchelor</span>2000</a>; White <a href="#ref116"><span>Reference White</span>2006</a>; Pozrikidis <a href="#ref81"><span>Reference Pozrikidis</span>2009</a>; Cengel &amp; Cimbala <a href="#ref22"><span>Reference Cengel and Cimbala</span>2018</a>).</p>
</div>
<div data-magellan-destination="sec1-2" id="sec1-2">
<h3><span>1.2.</span> The Navier–Stokes problem</h3>
<p> The incompressible Navier–Stokes equations (Stokes <a href="#ref98"><span>Reference Stokes</span>1845</a>; Anderson <em>et&nbsp;al.</em> <a href="#ref2"><span>Reference Anderson, Tannehill and Pletcher</span>1984</a>; Anderson <a href="#ref1"><span>Reference Anderson</span>1995</a>; Batchelor <a href="#ref8"><span>Reference Batchelor</span>2000</a>; White <a href="#ref116"><span>Reference White</span>2006</a>; Pozrikidis <a href="#ref81"><span>Reference Pozrikidis</span>2009</a>; Cengel &amp; Cimbala <a href="#ref22"><span>Reference Cengel and Cimbala</span>2018</a>) are given by
</p><p><span>(1.16)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn16.png?pub-status=live" width="284" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn16.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn16.png"><span data-mathjax-type="texmath"><span>$$\begin{gather} \rho \dot{u}_{i} + \rho u_{i,j}u_{j} + p_{,i} - \mu u_{i,jj} - \rho b_{i} = 0, \end{gather}$$</span></span></span></p>
<p><span>(1.17)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn17.png?pub-status=live" width="63" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn17.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn17.png"><span data-mathjax-type="texmath"><span>$$\begin{gather}u_{i,i} = 0, \end{gather}$$</span></span></span></p><p>
where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline56.png?pub-status=live" width="12" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline56.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline56.png"><span data-mathjax-type="texmath"><span>$\rho$</span></span></span></span> is the constant and uniform density, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline57.png?pub-status=live" width="101" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline57.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline57.png"><span data-mathjax-type="texmath"><span>$u_{i}=u_{i}(x_{j},t)$</span></span></span></span> is the velocity field, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline58.png?pub-status=live" width="88" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline58.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline58.png"><span data-mathjax-type="texmath"><span>$p=p(x_{j},t)$</span></span></span></span> is the pressure field, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline59.png?pub-status=live" width="96" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline59.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline59.png"><span data-mathjax-type="texmath"><span>$b_{i}=b_{i}(x_{j},t)$</span></span></span></span> is the body force field, subscript Roman indices label Euclidean tensor components (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline60.png?pub-status=live" width="89" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline60.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline60.png"><span data-mathjax-type="texmath"><span>$i,j=1,2,3$</span></span></span></span>), the <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline61.png?pub-status=live" width="19" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline61.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline61.png"><span data-mathjax-type="texmath"><span>$x_{j}$</span></span></span></span> are Eulerian spatial coordinates, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline62.png?pub-status=live" width="9" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline62.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline62.png"><span data-mathjax-type="texmath"><span>$t$</span></span></span></span> is time, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline63.png?pub-status=live" width="14" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline63.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline63.png"><span data-mathjax-type="texmath"><span>$\mu$</span></span></span></span> is the dynamic viscosity, a dot over a symbol denotes a partial time derivative (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline64.png?pub-status=live" width="93" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline64.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline64.png"><span data-mathjax-type="texmath"><span>$\dot {u}_{i}=\partial {u}_{i}/\partial t$</span></span></span></span>), a comma in a subscript indicates a spatial gradient (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline65.png?pub-status=live" width="98" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline65.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline65.png"><span data-mathjax-type="texmath"><span>$p_{,i}=\partial p/\partial x_{i}$</span></span></span></span>) and we employ the Einstein summation convention on repeated subscript indices. To be clear, the notation <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline66.png?pub-status=live" width="62" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline66.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline66.png"><span data-mathjax-type="texmath"><span>$u_{i}(x_{j},t)$</span></span></span></span> signifies that each component of the velocity field is a function of all three spatial coordinates <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline67.png?pub-status=live" width="82" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline67.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline67.png"><span data-mathjax-type="texmath"><span>$(x_{1},x_{2},x_{3})$</span></span></span></span> and time <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline68.png?pub-status=live" width="9" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline68.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline68.png"><span data-mathjax-type="texmath"><span>$t$</span></span></span></span>. It has the same meaning as other common notations, such as <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline69.png?pub-status=live" width="56" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline69.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline69.png"><span data-mathjax-type="texmath"><span>$u_{i}(\boldsymbol {x},t)$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline70.png?pub-status=live" width="53" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline70.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline70.png"><span data-mathjax-type="texmath"><span>$\boldsymbol {u}(\boldsymbol {x},t)$</span></span></span></span>. Likewise for all other field quantities. In the case of a uniform gravitational field, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline71.png?pub-status=live" width="52" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline71.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline71.png"><span data-mathjax-type="texmath"><span>$b_{i}=g_{i}$</span></span></span></span> coincides with the local acceleration due to gravity; however, in what follows, we make no assumptions about the functional form of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline72.png?pub-status=live" width="59" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline72.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline72.png"><span data-mathjax-type="texmath"><span>$b_{i}(x_{j},t)$</span></span></span></span>: it is completely arbitrary. There are four unknown field quantities: <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline73.png?pub-status=live" width="62" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline73.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline73.png"><span data-mathjax-type="texmath"><span>$u_{i}(x_{j},t)$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline74.png?pub-status=live" width="56" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline74.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline74.png"><span data-mathjax-type="texmath"><span>$p(x_{j},t)$</span></span></span></span>.</p>
<p> We seek, ultimately, a functional
</p><p><span>(1.18)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn18.png?pub-status=live" width="186" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn18.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn18.png"><span data-mathjax-type="texmath"><span>\begin{equation} H^{*}=H^{*}[u_{i},p,{\rm \pi}_{j},{\rm \pi}_{4};t], \end{equation}</span></span></span></p><p>
where (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline75.png?pub-status=live" width="46" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline75.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline75.png"><span data-mathjax-type="texmath"><span>${\rm \pi} _{i},{\rm \pi} _{4}$</span></span></span></span>) are suitable ‘momenta’ conjugate to the field quantities (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline76.png?pub-status=live" width="36" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline76.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline76.png"><span data-mathjax-type="texmath"><span>$u_{i},p$</span></span></span></span>), such that Hamilton's canonical equations
</p><p><span>(1.19<em>a</em>,<em>b</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn19.png?pub-status=live" width="175" height="42" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn19.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn19.png"><span data-mathjax-type="texmath"><span>$$\begin{gather} \dot{u}_{i}=\frac{\delta H^{*}}{\delta{\rm \pi}_{i}}, \quad\dot{p}=\frac{\delta H^{*}}{\delta{\rm \pi}_{4}}, \end{gather}$$</span></span></span></p>
<p><span>(1.20<em>a</em>,<em>b</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn20.png?pub-status=live" width="214" height="43" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn20.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn20.png"><span data-mathjax-type="texmath"><span>$$\begin{gather}\dot{\rm \pi}_{i}={-}\frac{\delta H^{*}}{\delta u_{i}}, \quad\dot{\rm \pi}_{4}={-}\frac{\delta H^{*}}{\delta p}, \end{gather}$$</span></span></span></p><p>
constitute a mathematically equivalent second-order formulation of the problem, where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline77.png?pub-status=live" width="67" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline77.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline77.png"><span data-mathjax-type="texmath"><span>$\delta H^{*}/\delta u_{i}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline78.png?pub-status=live" width="61" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline78.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline78.png"><span data-mathjax-type="texmath"><span>$\delta H^{*}/\delta p$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline79.png?pub-status=live" width="68" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline79.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline79.png"><span data-mathjax-type="texmath"><span>$\delta H^{*}/\delta {\rm \pi}_{i}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline80.png?pub-status=live" width="70" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline80.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline80.png"><span data-mathjax-type="texmath"><span>$\delta H^{*}/\delta {\rm \pi}_{4}$</span></span></span></span> are the Volterra (<a href="#ref114"><span>Reference Volterra</span>1930</a>) functional derivatives of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline81.png?pub-status=live" width="25" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline81.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline81.png"><span data-mathjax-type="texmath"><span>$H^{*}$</span></span></span></span> with respect to the field quantities and the conjugate momenta. We will find that this is generally possible for a compressible fluid. For an incompressible fluid, the equation <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline82.png?pub-status=live" width="104" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline82.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline82.png"><span data-mathjax-type="texmath"><span>$\dot {p}=\delta H^{*}/\delta {\rm \pi}_{4}$</span></span></span></span> will need to be replaced by the incompressibility condition <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline83.png?pub-status=live" width="59" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline83.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline83.png"><span data-mathjax-type="texmath"><span>$u_{i,i}=0$</span></span></span></span>, consistent with the well-known result that the pressure usually serves as a Lagrange multiplier for the incompressibility constraint (Lanczos <a href="#ref63"><span>Reference Lanczos</span>1970</a>; Badin &amp; Crisciani <a href="#ref6"><span>Reference Badin and Crisciani</span>2018</a>) (refer to p.&nbsp;361 of Lanczos (<a href="#ref63"><span>Reference Lanczos</span>1970</a>) and pp.&nbsp;137 and 141 of Badin &amp; Crisciani <a href="#ref6"><span>Reference Badin and Crisciani</span>2018</a>).</p>
<p> The remainder of this paper is organized as follows. Section <a href="#sec2">2</a> gives a comprehensive overview of the relevant literature to date. Sections&nbsp;<a href="#sec3">3</a> and <a href="#sec4">4</a> contain the main results of the present work, culminating in a conserved Hamiltonian functional <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline84.png?pub-status=live" width="25" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline84.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline84.png"><span data-mathjax-type="texmath"><span>$H^{*}$</span></span></span></span> satisfying Hamilton's equations (<a href="#eqn19">1.19<em>a</em>,<em>b</em></a>) and (<a href="#eqn20">1.20<em>a</em>,<em>b</em></a>) for the mathematically equivalent second-order problem, along with the accompanying Hamilton–Jacobi equation (Hamilton <a href="#ref48"><span>Reference Hamilton</span>1833</a>, <a href="#ref49"><span>Reference Hamilton</span>1834</a>, <a href="#ref50"><span>Reference Hamilton</span>1835</a>; Jacobi <a href="#ref54"><span>Reference Jacobi</span>1837</a>, <a href="#ref55"><span>Reference Jacobi</span>1842–1843</a>; Whittaker <a href="#ref117"><span>Reference Whittaker</span>1904</a>; Lanczos <a href="#ref63"><span>Reference Lanczos</span>1970</a>). Section <a href="#sec5">5</a> contains a discussion of the physical interpretation of the second-order formulation. Section <a href="#sec6">6</a> presents a brief case study in the form of one-dimensional flow over an infinite, flat plate. Finally, §&nbsp;<a href="#sec7">7</a> concludes the paper with a few closing remarks and an outline of how the present formulation can aid in resolving the question of existence and uniqueness of solutions to the Navier–Stokes problem.</p>
<p> By the end of the paper, we will have achieved precisely what the title promises: a canonical Hamiltonian formulation of the problem, opening new avenues toward resolution of one of the most famous unsolved problems in mathematics.</p>
</div>
</div>
<div data-magellan-destination="sec2" id="sec2">
<h2><span>2.</span> Literature review</h2>
<p> The field of analytical mechanics, with foundations planted in Hamilton's principle of stationary action (Hamilton <a href="#ref48"><span>Reference Hamilton</span>1833</a>, <a href="#ref49"><span>Reference Hamilton</span>1834</a>, <a href="#ref50"><span>Reference Hamilton</span>1835</a>) or d'Alembert's principle of virtual work (d'Alembert <a href="#ref25"><span>Reference d'Alembert</span>1743</a>), has been vital to the development of both classical and quantum physics since the eighteenth century. This approach is versatile and helpful to the physical understanding of the problem in question, and the foundation, structure and utility of Hamiltonian formalism is well documented (Becker <a href="#ref9"><span>Reference Becker</span>1954</a>; Taylor <a href="#ref106"><span>Reference Taylor</span>2005</a>; Hamill <a href="#ref47"><span>Reference Hamill</span>2014</a>; Bohn <a href="#ref20"><span>Reference Bohn</span>2018</a>; Cline <a href="#ref24"><span>Reference Cline</span>2023</a>; Fowler <a href="#ref35"><span>Reference Fowler</span>2023</a>). The supporting mathematics of the calculus of variations as well as symplectic and differential geometry can also be found in many excellent sources (Arnold <a href="#ref4"><span>Reference Arnold</span>1989</a>; Berndt <a href="#ref16"><span>Reference Berndt</span>2001</a>; Hall <a href="#ref46"><span>Reference Hall</span>2003</a>; Boas <a href="#ref19"><span>Reference Boas</span>2006</a>; Stone &amp; Goldbart <a href="#ref100"><span>Reference Stone and Goldbart</span>2009</a>; Gelfand &amp; Fomin <a href="#ref42"><span>Reference Gelfand and Fomin</span>2012</a>; Arfken <a href="#ref3"><span>Reference Arfken</span>2013</a>; Needham <a href="#ref77"><span>Reference Needham</span>2021</a>). It is therefore no surprise that researchers have been applying analytical formalism to classical fluids dating back to the time of Lagrange (Lagrange <a href="#ref62"><span>Reference Lagrange</span>1811</a>; Lichtenstein <a href="#ref67"><span>Reference Lichtenstein</span>1929</a>; Morrison <a href="#ref73"><span>Reference Morrison</span>1998</a>, <a href="#ref74"><span>Reference Morrison</span>2006</a>; Berdichevsky <a href="#ref14"><span>Reference Berdichevsky</span>2009<em>a</em></a>,<a href="#ref15"><span>Reference Berdichevsky</span><em>b</em></a>; dell'Isola &amp; Gavrilyuk <a href="#ref27"><span>Reference dell'Isola and Gavrilyuk</span>2011</a>; Badin &amp; Crisciani <a href="#ref6"><span>Reference Badin and Crisciani</span>2018</a>; Bedford <a href="#ref10"><span>Reference Bedford</span>2021</a>).</p>
<p> The task of obtaining solutions to the governing equations of fluid flow represents one of the most challenging problems in science and engineering. In most cases, the mathematical formulation is expressed as an initial-boundary-value problem: a set of coupled, nonlinear partial differential equations, which are to be solved subject to various initial and boundary conditions. The degree of complication of the governing equations depends on the type of the fluid. For a viscous fluid where the transport phenomena of friction and thermal conduction are included, the governing equations are called the Navier–Stokes equations (Stokes <a href="#ref98"><span>Reference Stokes</span>1845</a>; Anderson <em>et&nbsp;al.</em> <a href="#ref2"><span>Reference Anderson, Tannehill and Pletcher</span>1984</a>; Anderson <a href="#ref1"><span>Reference Anderson</span>1995</a>; Batchelor <a href="#ref8"><span>Reference Batchelor</span>2000</a>; White <a href="#ref116"><span>Reference White</span>2006</a>; Pozrikidis <a href="#ref81"><span>Reference Pozrikidis</span>2009</a>; Cengel &amp; Cimbala <a href="#ref22"><span>Reference Cengel and Cimbala</span>2018</a>). The Navier–Stokes equations are derived by applying fundamental physical principles – conservation of mass, conservation of momentum and conservation of energy – to a viscous fluid, and the derivation can be found in any fluid mechanics textbook (Anderson <em>et&nbsp;al.</em> <a href="#ref2"><span>Reference Anderson, Tannehill and Pletcher</span>1984</a>; Anderson <a href="#ref1"><span>Reference Anderson</span>1995</a>; Batchelor <a href="#ref8"><span>Reference Batchelor</span>2000</a>; White <a href="#ref116"><span>Reference White</span>2006</a>; Pozrikidis <a href="#ref81"><span>Reference Pozrikidis</span>2009</a>; Cengel &amp; Cimbala <a href="#ref22"><span>Reference Cengel and Cimbala</span>2018</a>). It is important to recognize that the Navier–Stokes equations as they are known today were not developed solely by Navier and Stokes; indeed, Poisson, Cauchy and others were also heavily involved in their development (Darrigol <a href="#ref26"><span>Reference Darrigol</span>2002</a>). As far as the present authors are aware, to date there is still no firm answer to the question of whether or not there always exist unique, smooth, non-singular solutions to the three-dimensional Navier–Stokes equations (Lemarie-Rieusset <a href="#ref65"><span>Reference Lemarie-Rieusset</span>2018</a>), and this constitutes one of the most famous unsolved problems in mathematics.</p>
<p> The application of analytical mechanics (Goldstein <a href="#ref44"><span>Reference Goldstein</span>1980</a>; Arnold <a href="#ref4"><span>Reference Arnold</span>1989</a>; Fetter &amp; Walecka <a href="#ref31"><span>Reference Fetter and Walecka</span>2003</a>; Gelfand &amp; Fomin <a href="#ref42"><span>Reference Gelfand and Fomin</span>2012</a>) to the field of fluid mechanics (Lanczos <a href="#ref63"><span>Reference Lanczos</span>1970</a>) has recently seen a resurgence in interest (Salmon <a href="#ref86"><span>Reference Salmon</span>1983</a>, <a href="#ref87"><span>Reference Salmon</span>1988</a>; Brenier <a href="#ref21"><span>Reference Brenier</span>2017</a>; Giga, Kirshtein &amp; Liu <a href="#ref43"><span>Reference Giga, Kirshtein and Liu</span>2018</a>; Mottaghi, Gabbai &amp; Benaroya <a href="#ref76"><span>Reference Mottaghi, Gabbai and Benaroya</span>2019</a>; Taroco, Blanco &amp; Feijoo <a href="#ref104"><span>Reference Taroco, Blanco and Feijoo</span>2020</a>; Bedford <a href="#ref10"><span>Reference Bedford</span>2021</a>; Mavroeidis &amp; Athanassoulis <a href="#ref70"><span>Reference Mavroeidis and Athanassoulis</span>2022</a>) after a long history. In the absence of non-conservative forces, an inviscid fluid is a Hamiltonian system, and so the classical Hamiltonian theory applies. Serrin (<a href="#ref95"><span>Reference Serrin</span>1959</a>), Benjamin (<a href="#ref12"><span>Reference Benjamin</span>1984</a>) and Holm, Marsden &amp; Ratiu (<a href="#ref53"><span>Reference Holm, Marsden and Ratiu</span>1986</a>) have all described variational and Hamiltonian formulations of incompressible, inviscid fluid flow. Roberts (<a href="#ref84"><span>Reference Roberts</span>1972</a>) presented a Hamiltonian dynamic for weakly interacting vortices. This research obtained the canonical equations of Hamiltonian dynamics for a set of two well-separated vortex rings by setting up a Hamiltonian to define the set. Olver (<a href="#ref78"><span>Reference Olver</span>1982</a>) showed that the Euler equations of inviscid and incompressible fluid flow can be put into Hamiltonian form. Benjamin &amp; Olver (<a href="#ref13"><span>Reference Benjamin and Olver</span>1982</a>) investigated the Hamiltonian structure of the water waves problem. They examined the symmetry groups of this problem, finding that Hamiltonian analysis enables the solution of conservative elements of the problem. However, the study also acknowledged that further study is needed to identify the physical significance of the mathematical results. Maddocks &amp; Pego (<a href="#ref68"><span>Reference Maddocks and Pego</span>1995</a>) presented a novel Hamiltonian formulation of ideal fluid flow expressed in material coordinates. Their Hamiltonian formulation arises from a general approach for constrained systems that is not restricted to problems in fluid mechanics. Rather, it is widely applicable for obtaining unconstrained Hamiltonian dynamical systems from Lagrangian field equations that are subject to pointwise constraints. More recently, Arnold (<a href="#ref5"><span>Reference Arnold</span>2014</a>) also studied the Hamiltonian nature of the ideal Euler equations.</p>
<p> Viscous forces are non-conservative, which presents a fundamental challenge when applying Hamilton's principle to viscous fluids (Millikan <a href="#ref72"><span>Reference Millikan</span>1929</a>; Finlayson <a href="#ref33"><span>Reference Finlayson</span>1972<em>a</em></a>,<a href="#ref34"><span>Reference Finlayson</span><em>b</em></a>; Lemarie-Rieusset <a href="#ref65"><span>Reference Lemarie-Rieusset</span>2018</a>). Indeed, it is a well-known theorem (first proven by Millikan <a href="#ref72"><span>Reference Millikan</span>1929</a>) that the Navier–Stokes equations in their usual form cannot be derived from a classical action principle (Millikan <a href="#ref72"><span>Reference Millikan</span>1929</a>; Finlayson <a href="#ref33"><span>Reference Finlayson</span>1972<em>a</em></a>,<a href="#ref34"><span>Reference Finlayson</span><em>b</em></a>). Millikan (<a href="#ref72"><span>Reference Millikan</span>1929</a>) summarizes his main result as follows:
</p><p> It is impossible to derive the equations of steady motion of a viscous, incompressible fluid from a variation principle involving as Lagrangian function an expression in the velocity components and their first-order space derivatives, unless conditions are imposed on these velocity components such that all of the terms <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline85.png?pub-status=live" width="33" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline85.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline85.png"><span data-mathjax-type="texmath"><span>$vu_{,2}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline86.png?pub-status=live" width="36" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline86.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline86.png"><span data-mathjax-type="texmath"><span>$wu_{,3}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline87.png?pub-status=live" width="35" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline87.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline87.png"><span data-mathjax-type="texmath"><span>$wv_{,3}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline88.png?pub-status=live" width="32" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline88.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline88.png"><span data-mathjax-type="texmath"><span>$uv_{,1}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline89.png?pub-status=live" width="36" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline89.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline89.png"><span data-mathjax-type="texmath"><span>$uw_{,1}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline90.png?pub-status=live" width="35" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline90.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline90.png"><span data-mathjax-type="texmath"><span>$vw_{,2}$</span></span></span></span> disappear from their positions in the Navier–Stokes equations (Millikan <a href="#ref72"><span>Reference Millikan</span>1929</a>).</p>
<p> (It should be noted that the six terms referred to above come from the convective acceleration <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline91.png?pub-status=live" width="45" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline91.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline91.png"><span data-mathjax-type="texmath"><span>$u_{i,j}u_{j}$</span></span></span></span>, and Millikan (<a href="#ref72"><span>Reference Millikan</span>1929</a>) uses the notation <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline92.png?pub-status=live" width="52" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline92.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline92.png"><span data-mathjax-type="texmath"><span>$u=u_{1}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline93.png?pub-status=live" width="52" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline93.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline93.png"><span data-mathjax-type="texmath"><span>$v=u_{2}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline94.png?pub-status=live" width="56" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline94.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline94.png"><span data-mathjax-type="texmath"><span>$w=u_{3}$</span></span></span></span>.) More generally, it has been shown that the existence of variational formulations is related to self-adjointness of the system with respect to a standard duality relation, a property that all non-conservative systems lack (Vainberg <a href="#ref112"><span>Reference Vainberg</span>1964</a>). Within the last 80 years, many alternative methods have been developed in an attempt to circumvent the non-self-adjointness of dissipative systems (Prigogine &amp; Glansdorff <a href="#ref82"><span>Reference Prigogine and Glansdorff</span>1965</a>; Biot <a href="#ref18"><span>Reference Biot</span>1970</a>; Finlayson <a href="#ref33"><span>Reference Finlayson</span>1972<em>a</em></a>; Lebon &amp; Lambermont <a href="#ref64"><span>Reference Lebon and Lambermont</span>1973</a>; Tonti <a href="#ref110"><span>Reference Tonti</span>1973</a>; Magri <a href="#ref69"><span>Reference Magri</span>1974</a>; Telega <a href="#ref107"><span>Reference Telega</span>1979</a>; Tonti <a href="#ref111"><span>Reference Tonti</span>1984</a>; Filippov <a href="#ref32"><span>Reference Filippov</span>1989</a>; Sieniutycz <a href="#ref96"><span>Reference Sieniutycz</span>2000</a>; Robinson <a href="#ref85"><span>Reference Robinson</span>2001</a>; Galley <a href="#ref37"><span>Reference Galley</span>2013</a>; Kim, Dargush &amp; Lee <a href="#ref60"><span>Reference Kim, Dargush and Lee</span>2016</a>; Mottaghi <em>et&nbsp;al.</em> <a href="#ref76"><span>Reference Mottaghi, Gabbai and Benaroya</span>2019</a>; Taroco <em>et&nbsp;al.</em> <a href="#ref104"><span>Reference Taroco, Blanco and Feijoo</span>2020</a>; Bersani &amp; Caressa <a href="#ref17"><span>Reference Bersani and Caressa</span>2021</a>; Junker &amp; Balzani <a href="#ref58"><span>Reference Junker and Balzani</span>2021</a>). The mathematical study of alternative variational methods as applied to the Navier–Stokes equations in particular remains an ongoing endeavour (Oseledets <a href="#ref79"><span>Reference Oseledets</span>1989</a>; Vujanovic &amp; Jones <a href="#ref115"><span>Reference Vujanovic and Jones</span>1989</a>; Doering &amp; Gibbon <a href="#ref29"><span>Reference Doering and Gibbon</span>1995</a>; Fukagawa &amp; Fujitani <a href="#ref36"><span>Reference Fukagawa and Fujitani</span>2012</a>; Jones <a href="#ref56"><span>Reference Jones</span>2015</a>; Gay-Balmaz &amp; Yoshimura <a href="#ref39"><span>Reference Gay-Balmaz and Yoshimura</span>2017</a>; Hieber, Robinson &amp; Shibata <a href="#ref51"><span>Reference Hieber, Robinson and Shibata</span>2017</a>; Hochgerner <a href="#ref52"><span>Reference Hochgerner</span>2018</a>; Gay-Balmaz &amp; Yoshimura <a href="#ref40"><span>Reference Gay-Balmaz and Yoshimura</span>2019<em>a</em></a>,<a href="#ref41"><span>Reference Gay-Balmaz and Yoshimura</span><em>b</em></a>; Rashad <em>et&nbsp;al.</em> <a href="#ref83"><span>Reference Rashad, Califano, Brugnoli, Schuller and Stramigioli</span>2021</a>; Gonzalez &amp; Taha <a href="#ref45"><span>Reference Gonzalez and Taha</span>2022</a>; Taha &amp; Gonzalez <a href="#ref102"><span>Reference Taha and Gonzalez</span>2022</a>; Sanders <a href="#ref91"><span>Reference Sanders</span>2023<em>b</em></a>).</p>
<p> Oseledets (<a href="#ref79"><span>Reference Oseledets</span>1989</a>) attempted to express the Navier–Stokes equations using Hamiltonian formalism. He was able to formalize the incompressible Euler equation but stated that his result is not valid for a compressible fluid. More recent attempts, such as Fukagawa &amp; Fujitani (<a href="#ref36"><span>Reference Fukagawa and Fujitani</span>2012</a>), Jones (<a href="#ref56"><span>Reference Jones</span>2015</a>) and Gay-Balmaz &amp; Yoshimura (<a href="#ref39"><span>Reference Gay-Balmaz and Yoshimura</span>2017</a>, <a href="#ref40"><span>Reference Gay-Balmaz and Yoshimura</span>2019<em>a</em></a>,<a href="#ref41"><span>Reference Gay-Balmaz and Yoshimura</span><em>b</em></a>), have enforced dissipation using a non-holonomic constraint on the entropy. Hochgerner (<a href="#ref52"><span>Reference Hochgerner</span>2018</a>) attempted to obtain a Hamiltonian interacting particle system that could accurately model the fluid dynamics. His research separated the dynamics into slow (deterministic) and fast (stochastic) components to capture fine-scale effects. The study was able to derive the Navier–Stokes equation from a stochastic Hamiltonian system but ignored the stress tensor, was unable to separate configuration and momentum variables and did not establish energy conservation or dissipation.</p>
<p> Rashad <em>et&nbsp;al.</em> (<a href="#ref83"><span>Reference Rashad, Califano, Brugnoli, Schuller and Stramigioli</span>2021</a>) modelled the incompressible Navier–Stokes equations in so-called ‘port-Hamiltonian’ framework rather than the standard Hamiltonian framework. Their model used vector calculus instead of exterior calculus to minimize the number of operators. While the main goal of this research was increasing the interest of computational researchers in using vector calculus, they also demonstrated that vector calculus can help in the formulation of individual subsystems of Navier–Stokes equations and boundary ports of the model.</p>
<p> Gonzalez &amp; Taha (<a href="#ref45"><span>Reference Gonzalez and Taha</span>2022</a>), Taha &amp; Gonzalez (<a href="#ref102"><span>Reference Taha and Gonzalez</span>2022</a>) and Taha, Gonzalez &amp; Shorbagy (<a href="#ref103"><span>Reference Taha, Gonzalez and Shorbagy</span>2023</a>) have recently applied Gauss's principle of least constraint (Gauss <a href="#ref38"><span>Reference Gauss</span>1829</a>) to the Navier–Stokes problem. Using Gauss's principle, Taha <em>et&nbsp;al.</em> (<a href="#ref103"><span>Reference Taha, Gonzalez and Shorbagy</span>2023</a>) have shown that, for an incompressible fluid, the magnitude of the pressure gradient is minimum over the domain, which they term the principle of minimum pressure gradient (PMPG). When applied to an inviscid fluid in two dimensions, the PMPG provides a closure condition based in first principles that could be considered a generalization of the Kutta condition to smooth geometries. It should be noted that Gauss's principle (Gauss <a href="#ref38"><span>Reference Gauss</span>1829</a>) is fundamentally different from Hamilton's principle (Hamilton <a href="#ref48"><span>Reference Hamilton</span>1833</a>, <a href="#ref49"><span>Reference Hamilton</span>1834</a>, <a href="#ref50"><span>Reference Hamilton</span>1835</a>). Whereas the Hamiltonian framework involves an invariant action integral and employs variations in the coordinates (or, in continuum mechanics, the field quantities), Gauss's principle employs variations in the accelerations. As a result, the framework of Gauss's principle does not lead to canonical transformations.</p>
<p> Particularly relevant to the present work, Sanders (<a href="#ref88"><span>Reference Sanders</span>2021</a>, <a href="#ref89"><span>Reference Sanders</span>2022</a>, <a href="#ref90"><span>Reference Sanders</span>2023<em>a</em></a>,<a href="#ref91"><span>Reference Sanders</span><em>b</em></a>) has shown that the higher-order dynamics are ‘intrinsically variational’, in the sense that higher-derivative versions of the classical equations of motion can be derived from a minimum-action principle even for dissipative systems, thus allowing inherently non-Hamiltonian problems to be treated as though they are Hamiltonian. This discovery has already led to two applications: the direct modal analysis of damped dynamical systems (Sanders <a href="#ref89"><span>Reference Sanders</span>2022</a>) and, subsequently, a new and more efficient algorithm for computing a damped system's resonant frequencies (Sanders &amp; Inman <a href="#ref92"><span>Reference Sanders and Inman</span>2023</a>). Higher-derivative theories had been studied before in the realm of quantum gravity physics (Pais &amp; Uhlenbeck <a href="#ref80"><span>Reference Pais and Uhlenbeck</span>1950</a>; Van den Berg &amp; VanderVorst <a href="#ref113"><span>Reference Van den Berg and VanderVorst</span>2002</a>; Kalies &amp; VanderVorst <a href="#ref59"><span>Reference Kalies and VanderVorst</span>2004</a>; Bender &amp; Mannheim <a href="#ref11"><span>Reference Bender and Mannheim</span>2008</a>; Smilga <a href="#ref97"><span>Reference Smilga</span>2009</a>; Mostafazadeh <a href="#ref75"><span>Reference Mostafazadeh</span>2010</a>; Baleanu <em>et&nbsp;al.</em> <a href="#ref7"><span>Reference Baleanu, Petras, Asad and Velasco</span>2012</a>; Chen <em>et&nbsp;al.</em> <a href="#ref23"><span>Reference Chen, Fasiello, Lim and Tolley</span>2013</a>) but until now they have not been applied to classical fluids. While the Navier–Stokes equations, in their standard form, may be unsuited to Hamiltonian formalism (Millikan <a href="#ref72"><span>Reference Millikan</span>1929</a>; Finlayson <a href="#ref33"><span>Reference Finlayson</span>1972<em>a</em></a>,<a href="#ref34"><span>Reference Finlayson</span><em>b</em></a>; Doering &amp; Gibbon <a href="#ref29"><span>Reference Doering and Gibbon</span>1995</a>; Hieber <em>et&nbsp;al.</em> <a href="#ref51"><span>Reference Hieber, Robinson and Shibata</span>2017</a>; Lemarie-Rieusset <a href="#ref65"><span>Reference Lemarie-Rieusset</span>2018</a>), it will be shown here that the higher-order dynamics can be used to restate the problem in a form consistent with Hamiltonian and Hamilton–Jacobi formalism.</p>
<p> In conclusion, although the body of research surrounding the Navier–Stokes equations is extensive, it would appear that no canonical Hamiltonian formulation of the Navier–Stokes problem has been found to date. That is what the present work aims to achieve.</p>
</div>
<div data-magellan-destination="sec3" id="sec3">
<h2><span>3.</span> Lagrangian formulation of the problem</h2>
<p> Although we are primarily interested in the incompressible form of the equations given by (<a href="#eqn16">1.16</a>) and (<a href="#eqn17">1.17</a>), here we will begin with the compressible form of the equations, with the understanding that we will eventually take the incompressible limit. For the compressible case, the linear momentum balance and continuity equations are given by
</p><p><span>(3.1)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn21.png?pub-status=live" width="536" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn21.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn21.png"><span data-mathjax-type="texmath"><span>$$\begin{gather} \mathcal{R}_{i}[u_{j},p,\rho;x_{k},t]\equiv \rho \dot{u}_{i} + \rho u_{i,j}u_{j} + p_{,i} - \mu u_{i,jj} - (\mu+\lambda)u_{j,ji} - \rho b_{i} = 0, \end{gather}$$</span></span></span></p>
<p><span>(3.2)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn22.png?pub-status=live" width="247" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn22.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn22.png"><span data-mathjax-type="texmath"><span>$$\begin{gather}\mathcal{R}_{4}[u_{j},\rho]\equiv \dot{\rho} + \rho_{,i}u_{i} + \rho u_{i,i} = 0, \end{gather}$$</span></span></span></p><p>
where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline95.png?pub-status=live" width="88" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline95.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline95.png"><span data-mathjax-type="texmath"><span>$\rho =\rho (x_{j},t)$</span></span></span></span> is the density field (now one of the unknown field quantities along with <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline96.png?pub-status=live" width="18" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline96.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline96.png"><span data-mathjax-type="texmath"><span>$u_{i}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline97.png?pub-status=live" width="13" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline97.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline97.png"><span data-mathjax-type="texmath"><span>$p$</span></span></span></span>), and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline98.png?pub-status=live" width="13" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline98.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline98.png"><span data-mathjax-type="texmath"><span>$\lambda$</span></span></span></span> is an additional viscosity coefficient which, under Stokes's (Stokes <a href="#ref98"><span>Reference Stokes</span>1845</a>) hypothesis, is related to <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline99.png?pub-status=live" width="14" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline99.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline99.png"><span data-mathjax-type="texmath"><span>$\mu$</span></span></span></span> as <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline100.png?pub-status=live" width="86" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline100.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline100.png"><span data-mathjax-type="texmath"><span>$\lambda =-2\mu /3$</span></span></span></span>, ensuring that the mechanical pressure agrees with the thermodynamic pressure. Henceforth, we will assume that all quantities have been suitably non-dimensionalized. The non-dimensional (constant) viscosities in (<a href="#eqn21">3.1</a>) and (<a href="#eqn22">3.2</a>) may be regarded as inverse Reynolds numbers, and the non-dimensional pressure may be considered to be normalized by the inertial scale <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline101.png?pub-status=live" width="40" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline101.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline101.png"><span data-mathjax-type="texmath"><span>$\rho _0 U^2$</span></span></span></span>, with <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline102.png?pub-status=live" width="19" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline102.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline102.png"><span data-mathjax-type="texmath"><span>$\rho _0$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline103.png?pub-status=live" width="16" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline103.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline103.png"><span data-mathjax-type="texmath"><span>$U$</span></span></span></span> appropriate density and velocity scales. As we will see later, starting from the compressible form of the equations will allow us to treat the pressure as a dynamical field variable alongside the velocities, rather than simply a Lagrange multiplier. Crucially, this will reveal in no uncertain terms what becomes of the momentum conjugate to the pressure (which will be identified later) in the incompressible limit.</p>
<p> In general, (<a href="#eqn21">3.1</a>) and (<a href="#eqn22">3.2</a>) would be appended with the energy equation, which introduces additional thermodynamic variables, such as temperature and enthalpy or entropy. Two of the thermodynamic variables are designated as ‘primary’, and equations of state are required to relate the remaining variables to the primary variables. Typically, pressure and temperature are chosen as the primary variables, and the equation of state for the density, for example, is expressed as <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline104.png?pub-status=live" width="86" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline104.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline104.png"><span data-mathjax-type="texmath"><span>$\rho =\rho (p,T)$</span></span></span></span>. The conservation equations along with the equation of state constitute six equations for the six unknowns fields <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline105.png?pub-status=live" width="82" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline105.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline105.png"><span data-mathjax-type="texmath"><span>$(u_i,p,T,\rho )$</span></span></span></span>. Henceforth in the present work, we will take the temperature to be constant, though we intend to consider variations in temperature in future work.</p>
<p> An incompressible flow is one for which the material derivative of the density vanishes, i.e. <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline106.png?pub-status=live" width="165" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline106.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline106.png"><span data-mathjax-type="texmath"><span>$\text {d}\rho /\text {d}t=\dot {\rho } + \rho _{,i}u_{i}=0$</span></span></span></span>, and this condition serves as an equation of state. It is usually also assumed, for the sake of simplicity, that the density is both constant and uniform, further reducing the equation of state <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline107.png?pub-status=live" width="86" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline107.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline107.png"><span data-mathjax-type="texmath"><span>$\rho =\rho (p,T)$</span></span></span></span> to specification of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline108.png?pub-status=live" width="51" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline108.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline108.png"><span data-mathjax-type="texmath"><span>$\rho =\rho _0$</span></span></span></span> as a system parameter. Consequently, (<a href="#eqn22">3.2</a>) reduces to <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline109.png?pub-status=live" width="68" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline109.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline109.png"><span data-mathjax-type="texmath"><span>$\rho u_{i,i}=0$</span></span></span></span> and the energy equation is decoupled from the system. Accordingly, in the incompressible limit there are only four unknown field quantities <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline110.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline110.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline110.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> and the momentum balance and continuity equations suffice for the governing field equations.</p>
<p> We pause here to remark that all four field equations (<a href="#eqn21">3.1</a>), (<a href="#eqn22">3.2</a>) are first order in time with respect to the field quantities <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline111.png?pub-status=live" width="18" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline111.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline111.png"><span data-mathjax-type="texmath"><span>$u_{i}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline112.png?pub-status=live" width="12" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline112.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline112.png"><span data-mathjax-type="texmath"><span>$\rho$</span></span></span></span>. This will be important shortly, when we double the order of the equations. It should also be noted, as mentioned previously, that the first-order problem described above is inherently non-Hamiltonian, in that there is no action <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline113.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline113.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline113.png"><span data-mathjax-type="texmath"><span>$\mathcal {S}$</span></span></span></span> for which Hamilton's principle (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline114.png?pub-status=live" width="55" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline114.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline114.png"><span data-mathjax-type="texmath"><span>$\delta \mathcal {S}=0$</span></span></span></span>) yields the first-order field equations (Millikan <a href="#ref72"><span>Reference Millikan</span>1929</a>; Finlayson <a href="#ref33"><span>Reference Finlayson</span>1972<em>a</em></a>,<a href="#ref34"><span>Reference Finlayson</span><em>b</em></a>). Finally, we note that in the incompressible limit, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline115.png?pub-status=live" width="25" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline115.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline115.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}$</span></span></span></span> becomes independent of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline116.png?pub-status=live" width="12" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline116.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline116.png"><span data-mathjax-type="texmath"><span>$\dot {\rho }$</span></span></span></span> and is no longer first order in time.</p>
<div data-magellan-destination="sec3-1" id="sec3-1">
<h3><span>3.1.</span> Second-order formulation</h3>
<p> Although the first-order formulation of the problem is intrinsically non-Hamiltonian (Millikan <a href="#ref72"><span>Reference Millikan</span>1929</a>; Finlayson <a href="#ref33"><span>Reference Finlayson</span>1972<em>a</em></a>,<a href="#ref34"><span>Reference Finlayson</span><em>b</em></a>), nevertheless a Hamiltonian for the system may be found by considering a second-order formulation. Following Sanders (<a href="#ref91"><span>Reference Sanders</span>2023<em>b</em></a>), we observe that the actual motion of the fluid corresponds to the particular fields <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline117.png?pub-status=live" width="63" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline117.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline117.png"><span data-mathjax-type="texmath"><span>$(u_{i},p,\rho )$</span></span></span></span> for which the following action achieves a local minimum:
</p><p><span>(3.3)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn23.png?pub-status=live" width="299" height="42" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn23.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn23.png"><span data-mathjax-type="texmath"><span>\begin{equation} \mathcal{S}^{*}[u_{j},p,\rho]=\int\text{d}^{4}x(\tfrac{1}{2}\mathcal{R}_{i}\mathcal{R}_{i}+\tfrac{1}{2}\mathcal{R}_{4}\mathcal{R}_{4}), \end{equation}</span></span></span></p><p>
where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline118.png?pub-status=live" width="163" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline118.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline118.png"><span data-mathjax-type="texmath"><span>$\text {d}^{4}x=\text {d}\kern 0.06em x_{1}\,\text {d}\kern 0.06em x_{2}\,\text {d}\kern 0.06em x_{3}\,\text {d}t$</span></span></span></span>, and the integral is carried out over both the control volume <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline119.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline119.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline119.png"><span data-mathjax-type="texmath"><span>$\mathcal {V}$</span></span></span></span> occupied by the fluid (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline120.png?pub-status=live" width="53" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline120.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline120.png"><span data-mathjax-type="texmath"><span>$x_{j}\in \mathcal {V}$</span></span></span></span>) and the time period of interest (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline121.png?pub-status=live" width="74" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline121.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline121.png"><span data-mathjax-type="texmath"><span>$t\in [t_{1},t_{2}]$</span></span></span></span>). It must be emphasized that this action contains no new physics. Again, this is simply the principle of least squares (Finlayson <a href="#ref34"><span>Reference Finlayson</span>1972<em>b</em></a>) averaged over the space–time occupied by the fluid. The entire physics of the problem are already contained in the residuals (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline122.png?pub-status=live" width="23" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline122.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline122.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline123.png?pub-status=live" width="25" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline123.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline123.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}$</span></span></span></span>).</p>
<p> Without an equation of state relating <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline124.png?pub-status=live" width="12" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline124.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline124.png"><span data-mathjax-type="texmath"><span>$\rho$</span></span></span></span> to <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline125.png?pub-status=live" width="13" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline125.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline125.png"><span data-mathjax-type="texmath"><span>$p$</span></span></span></span>, the problem is underconstrained with five unknown field quantities and only four dynamical field equations. Anticipating the case of incompressible flow, where the density is constant and the four field quantities are <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline126.png?pub-status=live" width="18" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline126.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline126.png"><span data-mathjax-type="texmath"><span>$u_{i}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline127.png?pub-status=live" width="13" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline127.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline127.png"><span data-mathjax-type="texmath"><span>$p$</span></span></span></span>, henceforth we will assume an equation of state of the form <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline128.png?pub-status=live" width="65" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline128.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline128.png"><span data-mathjax-type="texmath"><span>$\rho =\hat {\rho }(p)$</span></span></span></span>, with <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline129.png?pub-status=live" width="12" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline129.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline129.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }$</span></span></span></span> a known function determined either from first principles or empirically. In this way, the density field may be eliminated in favour of the pressure field, and the field equations assume the following form:
</p><p><span>(3.4)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn24.png?pub-status=live" width="519" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn24.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn24.png"><span data-mathjax-type="texmath"><span>$$\begin{gather} \mathcal{R}_{i}[u_{j},p;x_{k},t]\equiv \hat{\rho} \dot{u}_{i} + \hat{\rho} u_{i,j}u_{j} + p_{,i} - \mu u_{i,jj} - (\mu+\lambda)u_{j,ji} - \hat{\rho} b_{i} = 0, \end{gather}$$</span></span></span></p>
<p><span>(3.5)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn25.png?pub-status=live" width="274" height="23" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn25.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn25.png"><span data-mathjax-type="texmath"><span>$$\begin{gather}\mathcal{R}_{4}[u_{j},p]\equiv \hat{\rho}'\dot{p} + \hat{\rho}'p_{,i}u_{i} + \hat{\rho} u_{i,i} = 0, \end{gather}$$</span></span></span></p><p>
where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline130.png?pub-status=live" width="86" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline130.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline130.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }'=\text {d}\hat {\rho }/\text {d}p$</span></span></span></span>. We note that, under equilibrium conditions, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline131.png?pub-status=live" width="16" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline131.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline131.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }'$</span></span></span></span> is related to the speed of sound <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline132.png?pub-status=live" width="11" height="12" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline132.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline132.png"><span data-mathjax-type="texmath"><span>$c$</span></span></span></span> and the bulk modulus <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline133.png?pub-status=live" width="19" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline133.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline133.png"><span data-mathjax-type="texmath"><span>$K$</span></span></span></span> as <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline134.png?pub-status=live" width="129" height="23" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline134.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline134.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }'=1/c^{2}=\rho /K$</span></span></span></span> (for incompressible fluids, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline135.png?pub-status=live" width="48" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline135.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline135.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }'\equiv 0$</span></span></span></span> and the speed of sound and bulk modulus are both infinite). Having specified <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline136.png?pub-status=live" width="33" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline136.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline136.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }(p)$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline137.png?pub-status=live" width="14" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline137.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline137.png"><span data-mathjax-type="texmath"><span>$\mu$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline138.png?pub-status=live" width="13" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline138.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline138.png"><span data-mathjax-type="texmath"><span>$\lambda$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline139.png?pub-status=live" width="59" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline139.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline139.png"><span data-mathjax-type="texmath"><span>$b_{i}(x_{j},t)$</span></span></span></span>, and having prescribed appropriate auxiliary conditions (initial and boundary conditions), one seeks the four field quantities <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline140.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline140.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline140.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> satisfying the governing field equations and the auxiliary conditions. To recover the case of incompressible flow, we will eventually take <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline141.png?pub-status=live" width="48" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline141.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline141.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }'\equiv 0$</span></span></span></span>.</p>
<p> We pause here to note that, even though the residuals (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline142.png?pub-status=live" width="23" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline142.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline142.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline143.png?pub-status=live" width="25" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline143.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline143.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}$</span></span></span></span>) vanish for the actual motion, they are not trivially zero. That is, the residuals only vanish for the particular fields <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline144.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline144.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline144.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> which satisfy the first-order field equations (<a href="#eqn24">3.4</a>) and (<a href="#eqn25">3.5</a>); they do not vanish for every conceivable <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline145.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline145.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline145.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span>. Thus it is not appropriate to take <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline146.png?pub-status=live" width="55" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline146.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline146.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}\equiv 0$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline147.png?pub-status=live" width="57" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline147.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline147.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}\equiv 0$</span></span></span></span>. We will return to this point later when we discuss the Hamiltonian formulation of the problem.</p>
<p> For now, we note that the action <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline148.png?pub-status=live" width="106" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline148.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline148.png"><span data-mathjax-type="texmath"><span>$\mathcal {S}^{*}=\mathcal {S}^{*}[u_{i},p]$</span></span></span></span> defines a Lagrangian
</p><p><span>(3.6)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn26.png?pub-status=live" width="186" height="42" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn26.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn26.png"><span data-mathjax-type="texmath"><span>\begin{equation} L^{*}[u_{i},p;t]=\int \text{d}^{3}x(\mathcal{L}^{*}) , \end{equation}</span></span></span></p><p>
where the integral is carried out over the volume <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline149.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline149.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline149.png"><span data-mathjax-type="texmath"><span>$\mathcal {V}$</span></span></span></span> only (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline150.png?pub-status=live" width="143" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline150.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline150.png"><span data-mathjax-type="texmath"><span>$\text {d}^{3}x=\text {d}\kern 0.06em x_{1}\,\text {d}\kern 0.06em x_{2}\,\text {d}\kern 0.06em x_{3}$</span></span></span></span>), with Lagrangian density
</p><p><span>(3.7)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn27.png?pub-status=live" width="262" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn27.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn27.png"><span data-mathjax-type="texmath"><span>\begin{equation} \mathcal{L}^{*}[u_{j},p;x_{k},t]=\tfrac{1}{2}\mathcal{R}_{i}\mathcal{R}_{i}+\tfrac{1}{2}\mathcal{R}_{4}\mathcal{R}_{4}. \end{equation}</span></span></span></p><p>
Because the residuals (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline151.png?pub-status=live" width="53" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline151.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline151.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}, \mathcal {R}_{4}$</span></span></span></span>) have been non-dimensionalized, the Lagrangian density is also dimensionless. Once again, even though the Lagrangian vanishes for the actual motion, it is not trivially zero, and it is not appropriate to take <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline152.png?pub-status=live" width="54" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline152.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline152.png"><span data-mathjax-type="texmath"><span>$L^{*}\equiv 0$</span></span></span></span>.</p>
<p> As noted above, the actual motion of the fluid corresponds to the particular fields <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline153.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline153.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline153.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> for which <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline154.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline154.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline154.png"><span data-mathjax-type="texmath"><span>$\mathcal {S}^{*}$</span></span></span></span> achieves a local minimum. To obtain the Euler–Lagrange equations, the conjugate momenta and the natural auxiliary conditions, we insist that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline155.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline155.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline155.png"><span data-mathjax-type="texmath"><span>$\mathcal {S}^{*}$</span></span></span></span> not vary to first order (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline156.png?pub-status=live" width="63" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline156.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline156.png"><span data-mathjax-type="texmath"><span>$\delta \mathcal {S}^{*}=0$</span></span></span></span>) under small variations in the fields <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline157.png?pub-status=live" width="63" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline157.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline157.png"><span data-mathjax-type="texmath"><span>$(\delta u_{i},\delta p)$</span></span></span></span>. Evaluating <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline158.png?pub-status=live" width="29" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline158.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline158.png"><span data-mathjax-type="texmath"><span>$\delta \mathcal {S}^{*}$</span></span></span></span>, integrating by parts, and collecting like terms, we find that
</p><p><span>(3.8<em>a</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn28.png?pub-status=live" width="466" height="46" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn28.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn28.png"><span data-mathjax-type="texmath"><span>\begin{align} \delta\mathcal{S}^{*}&amp;=\int\text{d}^{4}x\left\{\left[-\frac{\partial}{\partial t} \left(\hat{\rho}\mathcal{R}_{i}\right) -\frac{\partial}{\partial x_{j}} \left(\hat{\rho} \mathcal{R}_{i}u_{j}\right)+ \hat{\rho} \mathcal{R}_{j}u_{j,i}- \mu \mathcal{R}_{i,jj} \right.\right. \end{align}</span></span></span></p>
<p><span>(3.8<em>b</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn29.png?pub-status=live" width="323" height="45" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn29.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn29.png"><span data-mathjax-type="texmath"><span>\begin{align} &amp;\quad - \left.(\mu+\lambda)\mathcal{R}_{j,ij}+ \hat{\rho}'\mathcal{R}_{4}p_{,i}-\frac{\partial}{\partial x_{i}}\left( \hat{\rho} \mathcal{R}_{4}\right)\right]\delta{u}_{i} \end{align}</span></span></span></p>
<p><span>(3.8<em>c</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn30.png?pub-status=live" width="367" height="45" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn30.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn30.png"><span data-mathjax-type="texmath"><span>\begin{align} &amp;\quad +\left[\vphantom{\frac{\partial}{\partial t}}\hat{\rho}'\mathcal{R}_{i} \dot{u}_{i}+ \hat{\rho}' \mathcal{R}_{i}u_{i,j}u_{j}- \mathcal{R}_{i,i}- \hat{\rho}' \mathcal{R}_{i}b_{i} + \hat{\rho}''\mathcal{R}_{4}\dot{p}\right. \end{align}</span></span></span></p>
<p><span>(3.8<em>d</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn31.png?pub-status=live" width="434" height="45" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn31.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn31.png"><span data-mathjax-type="texmath"><span>\begin{align} &amp;\quad -\left.\left.\frac{\partial}{\partial t}\left( \hat{\rho}'\mathcal{R}_{4}\right) + \hat{\rho}''\mathcal{R}_{4}p_{,i}u_{i} - \frac{\partial}{\partial x_{i}}\left( \hat{\rho}'\mathcal{R}_{4}u_{i}\right)+ \hat{\rho}' \mathcal{R}_{4}u_{i,i}\right] \delta p \right\} \end{align}</span></span></span></p>
<p><span>(3.8<em>e</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn32.png?pub-status=live" width="218" height="42" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn32.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn32.png"><span data-mathjax-type="texmath"><span>\begin{align} &amp;\quad +\int\text{d}^{3}x\left[\hat{\rho}\mathcal{R}_{i} \delta{u}_{i}+\hat{\rho}'\mathcal{R}_{4}\delta{p}\right]_{t_{1}}^ {t_{2}} \end{align}</span></span></span></p>
<p><span>(3.8<em>f</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn33.png?pub-status=live" width="470" height="42" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn33.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn33.png"><span data-mathjax-type="texmath"><span>\begin{align} &amp;\quad +\int\text{d}^{2}x\,\text{d}t\left\{\left[\hat{\rho} \mathcal{R}_{i}u_{j}n_{j}+\mu \mathcal{R}_{i,j}n_{j}+ (\mu+\lambda)\mathcal{R}_{j,i}n_{j}+\hat{\rho} \mathcal{R}_{4}n_{i}\right]\delta u_{i}\right. \end{align}</span></span></span></p>
<p><span>(3.8<em>g</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn34.png?pub-status=live" width="437" height="23" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn34.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn34.png"><span data-mathjax-type="texmath"><span>\begin{align} &amp;\quad +\left.\left[- \mu \mathcal{R}_{i}n_{j}- (\mu+\lambda)\mathcal{R}_{j}n_{i}\right]\delta u_{i,j}+\left[\mathcal{R}_{i}n_{i}+\hat{\rho}'\mathcal{R}_{4}u_{i}n_{i}\right]\delta p\right\}, \end{align}</span></span></span></p><p>
where the purely volumetric integral (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline159.png?pub-status=live" width="30" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline159.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline159.png"><span data-mathjax-type="texmath"><span>$\text {d}^{3}x$</span></span></span></span>) is carried out over <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline160.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline160.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline160.png"><span data-mathjax-type="texmath"><span>$\mathcal {V}$</span></span></span></span>, the surface integral (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline161.png?pub-status=live" width="30" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline161.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline161.png"><span data-mathjax-type="texmath"><span>$\text {d}^{2}x$</span></span></span></span>) is carried out over the boundary <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline162.png?pub-status=live" width="25" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline162.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline162.png"><span data-mathjax-type="texmath"><span>$\partial \mathcal {V}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline163.png?pub-status=live" width="18" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline163.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline163.png"><span data-mathjax-type="texmath"><span>$n_{i}$</span></span></span></span> is the unit outward normal vector to <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline164.png?pub-status=live" width="25" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline164.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline164.png"><span data-mathjax-type="texmath"><span>$\partial \mathcal {V}$</span></span></span></span>. Note that, because we are using Eulerian coordinates <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline165.png?pub-status=live" width="19" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline165.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline165.png"><span data-mathjax-type="texmath"><span>$x_{j}$</span></span></span></span>, the volume element <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline166.png?pub-status=live" width="30" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline166.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline166.png"><span data-mathjax-type="texmath"><span>$\text {d}^{3}x$</span></span></span></span> is not to be varied.</p>
<p> The Euler–Lagrange equations (which hold for all <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline167.png?pub-status=live" width="53" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline167.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline167.png"><span data-mathjax-type="texmath"><span>$x_{j}\in \mathcal {V}$</span></span></span></span>) may be read directly from the space–time (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline168.png?pub-status=live" width="30" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline168.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline168.png"><span data-mathjax-type="texmath"><span>$\text {d}^{4}x$</span></span></span></span>) integral
</p><p><span>(3.9)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn35.png?pub-status=live" width="393" height="90" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn35.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn35.png"><span data-mathjax-type="texmath"><span>\begin{align} \delta{u}_{i}: \quad &amp;{-}\frac{\partial}{\partial t} \left(\hat{\rho}\mathcal{R}_{i}\right) -\frac{\partial}{\partial x_{j}} \left(\hat{\rho} \mathcal{R}_{i}u_{j}\right)+ \hat{\rho} \mathcal{R}_{j}u_{j,i}- \mu \mathcal{R}_{i,jj} \nonumber\\ &amp;- (\mu+\lambda)\mathcal{R}_{j,ij}+ \hat{\rho}'\mathcal{R}_{4}p_{,i}-\frac{\partial}{\partial x_{i}}\left( \hat{\rho} \mathcal{R}_{4}\right)=0, \end{align}</span></span></span></p>
<p><span>(3.10)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn36.png?pub-status=live" width="474" height="69" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn36.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn36.png"><span data-mathjax-type="texmath"><span>\begin{align} \delta p:\quad &amp; \hat{\rho}'\mathcal{R}_{i} \dot{u}_{i}+ \hat{\rho}' \mathcal{R}_{i}u_{i,j}u_{j}- \mathcal{R}_{i,i}- \hat{\rho}' \mathcal{R}_{i}b_{i} + \hat{\rho}''\mathcal{R}_{4}\dot{p} \nonumber\\ &amp;-\frac{\partial}{\partial t}\left( \hat{\rho}'\mathcal{R}_{4}\right) + \hat{\rho}''\mathcal{R}_{4}p_{,i}u_{i} - \frac{\partial}{\partial x_{i}}\left(\hat{\rho}'\mathcal{R}_{4}u_{i}\right)+ \hat{\rho}' \mathcal{R}_{4}u_{i,i} =0. \end{align}</span></span></span></p><p>
It should be noted that all four Euler–Lagrange equations (<a href="#eqn35">3.9</a>), (<a href="#eqn36">3.10</a>) are second order in time, as they involve time derivatives of the residuals. By doubling the order of the equations, we have put the problem in Hamiltonian form, consistent with the general result of Sanders (<a href="#ref91"><span>Reference Sanders</span>2023<em>b</em></a>). We also note that all four Euler–Lagrange equations of the second-order formulation are automatically satisfied by the solution to the first-order formulation (i.e. the actual motion), for which <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline169.png?pub-status=live" width="55" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline169.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline169.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}=0$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline170.png?pub-status=live" width="57" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline170.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline170.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}=0$</span></span></span></span> everywhere and at all times.</p>
<p> Corresponding to each of the four field quantities is a canonically conjugate ‘momentum’ field, which can be read from (<a href="#eqn32">3.8<em>e</em></a>). The momenta conjugate to the velocities <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline171.png?pub-status=live" width="18" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline171.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline171.png"><span data-mathjax-type="texmath"><span>$u_{i}$</span></span></span></span> are
</p><p><span>(3.11)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn37.png?pub-status=live" width="76" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn37.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn37.png"><span data-mathjax-type="texmath"><span>\begin{equation} {\rm \pi}_{i}\equiv \hat{\rho}\mathcal{R}_{i}, \end{equation}</span></span></span></p><p>
and the momentum conjugate to the pressure <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline172.png?pub-status=live" width="13" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline172.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline172.png"><span data-mathjax-type="texmath"><span>$p$</span></span></span></span> is
</p><p><span>(3.12)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn38.png?pub-status=live" width="85" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn38.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn38.png"><span data-mathjax-type="texmath"><span>\begin{equation} {\rm \pi}_{4}\equiv \hat{\rho}'\mathcal{R}_{4}. \end{equation}</span></span></span></p><p>
In the forthcoming Hamiltonian formulation, the conjugate momenta will be used to eliminate the (partial) time derivatives <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline173.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline173.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline173.png"><span data-mathjax-type="texmath"><span>$(\dot {u}_{i},\dot {p})$</span></span></span></span> of the field quantities from the Hamiltonian. In general, Hamilton's principle would insist that the variations <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline174.png?pub-status=live" width="63" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline174.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline174.png"><span data-mathjax-type="texmath"><span>$(\delta u_{i},\delta p)$</span></span></span></span> vanish at the endpoints <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline175.png?pub-status=live" width="45" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline175.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline175.png"><span data-mathjax-type="texmath"><span>$t=t_{1}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline176.png?pub-status=live" width="45" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline176.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline176.png"><span data-mathjax-type="texmath"><span>$t=t_{2}$</span></span></span></span> to ensure that the purely volumetric integral (<a href="#eqn32">3.8<em>e</em></a>) vanishes identically. Interestingly, for the actual motion (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline177.png?pub-status=live" width="117" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline177.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline177.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}=0,\mathcal {R}_{4}=0$</span></span></span></span>), the volumetric integral (<a href="#eqn32">3.8<em>e</em></a>) already vanishes even without taking <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline178.png?pub-status=live" width="63" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline178.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline178.png"><span data-mathjax-type="texmath"><span>$(\delta u_{i},\delta p)$</span></span></span></span> to vanish at <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline179.png?pub-status=live" width="16" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline179.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline179.png"><span data-mathjax-type="texmath"><span>$t_{1}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline180.png?pub-status=live" width="16" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline180.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline180.png"><span data-mathjax-type="texmath"><span>$t_{2}$</span></span></span></span>. We interpret this to mean that the actual motion is the natural evolution of the second-order formulation (Sanders <a href="#ref91"><span>Reference Sanders</span>2023<em>b</em></a>).</p>
<p> Although the conjugate momenta (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline181.png?pub-status=live" width="19" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline181.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline181.png"><span data-mathjax-type="texmath"><span>${\rm \pi} _{i}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline182.png?pub-status=live" width="21" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline182.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline182.png"><span data-mathjax-type="texmath"><span>${\rm \pi} _{4}$</span></span></span></span>) do not coincide with conventional linear or angular momenta, there is nonetheless a curious mathematical connection between the conjugate momenta and the linear momentum density <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline183.png?pub-status=live" width="67" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline183.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline183.png"><span data-mathjax-type="texmath"><span>$P_{i}=\rho u_{i}$</span></span></span></span>, which we will see presently from the natural boundary conditions. These are read directly from the surface (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline184.png?pub-status=live" width="30" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline184.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline184.png"><span data-mathjax-type="texmath"><span>$\text {d}^{2}x$</span></span></span></span>) integral
</p><p><span>(3.13)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn39.png?pub-status=live" width="432" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn39.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn39.png"><span data-mathjax-type="texmath"><span>$$\begin{gather} \delta u_{i}:\quad \hat{\rho} \mathcal{R}_{i}u_{j}n_{j}+\mu \mathcal{R}_{i,j}n_{j}+ (\mu+\lambda)\mathcal{R}_{j,i}n_{j}+\hat{\rho} \mathcal{R}_{4}n_{i}=0, \end{gather}$$</span></span></span></p>
<p><span>(3.14)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn40.png?pub-status=live" width="281" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn40.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn40.png"><span data-mathjax-type="texmath"><span>$$\begin{gather}\delta u_{i,j}:\quad - \mu \mathcal{R}_{i}n_{j}- (\mu+\lambda)\mathcal{R}_{j}n_{i}=0, \end{gather}$$</span></span></span></p>
<p><span>(3.15)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn41.png?pub-status=live" width="213" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn41.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn41.png"><span data-mathjax-type="texmath"><span>$$\begin{gather}\delta p:\quad\mathcal{R}_{i}n_{i}+\hat{\rho}'\mathcal{R}_{4}u_{i}n_{i}=0. \end{gather}$$</span></span></span></p><p>
This last condition, (<a href="#eqn41">3.15</a>), establishes a connection between the new conjugate momenta and the conventional linear momenta. Multiplying (<a href="#eqn41">3.15</a>) by <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline185.png?pub-status=live" width="12" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline185.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline185.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }$</span></span></span></span>, and noting that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline186.png?pub-status=live" width="114" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline186.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline186.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }u_{i}=\rho u_{i}= P_{i}$</span></span></span></span>, we find that
</p><p><span>(3.16)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn42.png?pub-status=live" width="142" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn42.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn42.png"><span data-mathjax-type="texmath"><span>\begin{equation} ({\rm \pi}_{i}+{\rm \pi}_{4}P_{i})n_{i}=0. \end{equation}</span></span></span></p><p>
Evidently, boundary condition (<a href="#eqn41">3.15</a>) states that the flux of the vector <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline187.png?pub-status=live" width="120" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline187.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline187.png"><span data-mathjax-type="texmath"><span>$\varPi _{i}\equiv {\rm \pi}_{i}+{\rm \pi} _{4}P_{i}$</span></span></span></span> through the boundary <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline188.png?pub-status=live" width="25" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline188.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline188.png"><span data-mathjax-type="texmath"><span>$\partial \mathcal {V}$</span></span></span></span> should vanish. It is interesting that this new vector <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline189.png?pub-status=live" width="22" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline189.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline189.png"><span data-mathjax-type="texmath"><span>$\varPi _{i}$</span></span></span></span> contains both old and new momenta, with <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline190.png?pub-status=live" width="21" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline190.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline190.png"><span data-mathjax-type="texmath"><span>${\rm \pi} _{4}$</span></span></span></span> ‘carried’ (i.e. given direction) by <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline191.png?pub-status=live" width="19" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline191.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline191.png"><span data-mathjax-type="texmath"><span>$P_{i}$</span></span></span></span>. The actual physical meaning of these natural boundary conditions is less clear and may require further investigation.</p>
</div>
<div data-magellan-destination="sec3-2" id="sec3-2">
<h3><span>3.2.</span> Equivalence of the first- and second-order formulations</h3>
<p> The first- and second-order formulations are mathematically equivalent, in the sense that imposing identical auxiliary conditions on the two formulations will yield identical solutions <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline192.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline192.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline192.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span>. In other words, with identical auxiliary conditions, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline193.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline193.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline193.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> is a solution to the first-order formulation if and only if the same <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline194.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline194.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline194.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> is a solution to the second-order formulation.</p>
<p> The proof is straightforward. Consider the two formulations separately, and impose on the second-order formulation identical auxiliary conditions to those of the first-order formulation. In particular, just like the simple example given in §&nbsp;<a href="#sec1-1">1.1</a>, the second-order formulation requires additional auxiliary conditions over and above those applied to the first-order formulation. These include initial conditions making <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline195.png?pub-status=live" width="103" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline195.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline195.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}(x_{k},0)=0$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline196.png?pub-status=live" width="105" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline196.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline196.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}(x_{k},0)=0$</span></span></span></span> for all <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline197.png?pub-status=live" width="96" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline197.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline197.png"><span data-mathjax-type="texmath"><span>$x_{k}\in \mathcal {V}\cup \partial \mathcal {V}$</span></span></span></span>, along with boundary conditions making <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline198.png?pub-status=live" width="101" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline198.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline198.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}(x_{k},t)=0$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline199.png?pub-status=live" width="111" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline199.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline199.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i,j}(x_{k},t)=0$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline200.png?pub-status=live" width="103" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline200.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline200.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}(x_{k},t)=0$</span></span></span></span> for all <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline201.png?pub-status=live" width="65" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline201.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline201.png"><span data-mathjax-type="texmath"><span>$x_{k}\in \partial \mathcal {V}$</span></span></span></span> and all times <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline202.png?pub-status=live" width="9" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline202.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline202.png"><span data-mathjax-type="texmath"><span>$t$</span></span></span></span>. By supposition, the auxiliary conditions applied to the two formulations are identical, so it suffices to show that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline203.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline203.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline203.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> satisfies the governing field equations (<a href="#eqn24">3.4</a>), (<a href="#eqn25">3.5</a>) of the first-order formulation (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline204.png?pub-status=live" width="55" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline204.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline204.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}=0$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline205.png?pub-status=live" width="57" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline205.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline205.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}=0$</span></span></span></span>) everywhere in <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline206.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline206.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline206.png"><span data-mathjax-type="texmath"><span>$\mathcal {V}$</span></span></span></span> and at all times if and only if <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline207.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline207.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline207.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> satisfies the Euler–Lagrange equations (<a href="#eqn35">3.9</a>), (<a href="#eqn36">3.10</a>) of the second-order formulation everywhere in <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline208.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline208.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline208.png"><span data-mathjax-type="texmath"><span>$\mathcal {V}$</span></span></span></span> and at all times.</p>
<p> Suppose first that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline209.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline209.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline209.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> satisfies the governing field equations (<a href="#eqn24">3.4</a>), (<a href="#eqn25">3.5</a>) of the first-order formulation everywhere in <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline210.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline210.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline210.png"><span data-mathjax-type="texmath"><span>$\mathcal {V}$</span></span></span></span> and at all times. Then <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline211.png?pub-status=live" width="55" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline211.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline211.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}=0$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline212.png?pub-status=live" width="57" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline212.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline212.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}=0$</span></span></span></span>, and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline213.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline213.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline213.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> is a trivial solution to the Euler–Lagrange equations (<a href="#eqn35">3.9</a>), (<a href="#eqn36">3.10</a>) of the second-order formulation.</p>
<p> Conversely, suppose that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline214.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline214.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline214.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> satisfies the Euler–Lagrange equations (<a href="#eqn35">3.9</a>), (<a href="#eqn36">3.10</a>) of the second-order formulation everywhere in <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline215.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline215.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline215.png"><span data-mathjax-type="texmath"><span>$\mathcal {V}$</span></span></span></span> and at all times. We note that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline216.png?pub-status=live" width="128" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline216.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline216.png"><span data-mathjax-type="texmath"><span>$(\mathcal {R}_{i}=0,\mathcal {R}_{4}=0)$</span></span></span></span> constitutes an equilibrium solution of the Euler–Lagrange equations (<a href="#eqn35">3.9</a>), (<a href="#eqn36">3.10</a>). Thus, because the initial conditions are chosen such that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline217.png?pub-status=live" width="103" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline217.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline217.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}(x_{k},0)=0$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline218.png?pub-status=live" width="105" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline218.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline218.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}(x_{k},0)=0$</span></span></span></span> for all <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline219.png?pub-status=live" width="96" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline219.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline219.png"><span data-mathjax-type="texmath"><span>$x_{k}\in \mathcal {V}\cup \partial \mathcal {V}$</span></span></span></span>, and because the boundary conditions are chosen such that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline220.png?pub-status=live" width="101" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline220.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline220.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}(x_{k},t)=0$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline221.png?pub-status=live" width="111" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline221.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline221.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i,j}(x_{k},t)=0$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline222.png?pub-status=live" width="103" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline222.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline222.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}(x_{k},t)=0$</span></span></span></span> for all <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline223.png?pub-status=live" width="65" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline223.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline223.png"><span data-mathjax-type="texmath"><span>$x_{k}\in \partial \mathcal {V}$</span></span></span></span> and all times <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline224.png?pub-status=live" width="9" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline224.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline224.png"><span data-mathjax-type="texmath"><span>$t$</span></span></span></span>, then <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline225.png?pub-status=live" width="23" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline225.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline225.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline226.png?pub-status=live" width="25" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline226.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline226.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}$</span></span></span></span> will remain identically zero everywhere in <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline227.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline227.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline227.png"><span data-mathjax-type="texmath"><span>$\mathcal {V}$</span></span></span></span> for all future times. Thus, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline228.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline228.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline228.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> satisfies the governing field equations (<a href="#eqn24">3.4</a>), (<a href="#eqn25">3.5</a>) of the first-order formulation everywhere in <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline229.png?pub-status=live" width="15" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline229.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline229.png"><span data-mathjax-type="texmath"><span>$\mathcal {V}$</span></span></span></span> and at all times. This completes the proof, and we have established that the two formulations are equivalent.</p>
</div>
</div>
<div data-magellan-destination="sec4" id="sec4">
<h2><span>4.</span> Hamiltonian formulation of the problem</h2>
<p> We are now ready to proceed with the Hamiltonian formulation of the problem. The Lagrangian <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline230.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline230.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline230.png"><span data-mathjax-type="texmath"><span>$L^{*}$</span></span></span></span> has a corresponding Hamiltonian
</p><p><span>(4.1)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn43.png?pub-status=live" width="137" height="42" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn43.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn43.png"><span data-mathjax-type="texmath"><span>\begin{equation} H^{*}=\int \text{d}^{3}x(\mathcal{H}^{*}) , \end{equation}</span></span></span></p><p>
with the Hamiltonian density <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline231.png?pub-status=live" width="24" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline231.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline231.png"><span data-mathjax-type="texmath"><span>$\mathcal {H}^{*}$</span></span></span></span> obtained from the Lagrangian density <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline232.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline232.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline232.png"><span data-mathjax-type="texmath"><span>$\mathcal {L}^{*}$</span></span></span></span> via the Legendre transform
</p><p><span>(4.2)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn44.png?pub-status=live" width="431" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn44.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn44.png"><span data-mathjax-type="texmath"><span>\begin{equation} \mathcal{H}^{*}={\rm \pi}_{i}\dot{u}_{i}+{\rm \pi}_{4}\dot{p}-\mathcal{L}^{*}={\rm \pi}_{i}\dot{u}_{i}+{\rm \pi}_{4}\dot{p}-\tfrac{1}{2}\mathcal{R}_{i}\mathcal{R}_{i}-\tfrac{1}{2}\mathcal{R}_{4}\mathcal{R}_{4}. \end{equation}</span></span></span></p><p>
Again, this <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline233.png?pub-status=live" width="25" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline233.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline233.png"><span data-mathjax-type="texmath"><span>$H^{*}$</span></span></span></span> has nothing to do with the total mechanical energy of the system, although it is a conserved quantity, since <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline234.png?pub-status=live" width="58" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline234.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline234.png"><span data-mathjax-type="texmath"><span>$H^{*}=0$</span></span></span></span> for the actual motion – just as in the example of §&nbsp;<a href="#sec1-1">1.1</a>. In order to write down Hamilton's equations, we must express <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline235.png?pub-status=live" width="24" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline235.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline235.png"><span data-mathjax-type="texmath"><span>$\mathcal {H}^{*}$</span></span></span></span> in terms of the fields and the conjugate momenta, eliminating <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline236.png?pub-status=live" width="18" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline236.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline236.png"><span data-mathjax-type="texmath"><span>$\dot {u}_{i}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline237.png?pub-status=live" width="13" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline237.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline237.png"><span data-mathjax-type="texmath"><span>$\dot {p}$</span></span></span></span>.</p>
<p> Observe that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline238.png?pub-status=live" width="82" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline238.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline238.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i}={\rm \pi} _{i}/\hat {\rho }$</span></span></span></span>, and ignoring for the moment the incompressible limit, we may write <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline239.png?pub-status=live" width="90" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline239.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline239.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}={\rm \pi} _{4}/\hat {\rho }'$</span></span></span></span> (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline240.png?pub-status=live" width="48" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline240.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline240.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }'\neq 0$</span></span></span></span>). In this way, using the functional expressions for the residuals given by (<a href="#eqn24">3.4</a>) and (<a href="#eqn25">3.5</a>), we find that
</p><p><span>(4.3)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn45.png?pub-status=live" width="459" height="43" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn45.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn45.png"><span data-mathjax-type="texmath"><span>$$\begin{gather} \dot{u}_{i}=\frac{1}{(\hat{\rho})^{2}}{{\rm \pi}_{i}}-\frac{1}{\hat{\rho}}\left(\hat{\rho}u_{i,j}u_{j} +{ p_{,i} - \mu u_{i,jj} - (\mu+\lambda)u_{j,ji}} - \hat{\rho}b_{i}\right); \end{gather}$$</span></span></span></p>
<p><span>(4.4)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn46.png?pub-status=live" width="330" height="43" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn46.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn46.png"><span data-mathjax-type="texmath"><span>$$\begin{gather}\dot{p}=\frac{1}{(\hat{\rho}')^{2}}{{\rm \pi}_{4}}-\frac{1}{\hat{\rho}'}\left({\hat{\rho}'p_{,i}u_{i} + \hat{\rho}u_{i,i}}\right), \quad \hat{\rho}'\neq0; \end{gather}$$</span></span></span></p><p>
and
</p><p><span>(4.5)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn47.png?pub-status=live" width="638" height="89" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn47.png" data-zoomable="true" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn47.png"><span data-mathjax-type="texmath"><span>\begin{align} \mathcal{H}^{*}[u_{i},p,{\rm \pi}_{j},{\rm \pi}_{4};x_{k},t]&amp;=\frac{1}{2}\frac{1}{(\hat{\rho})^{2}}{{\rm \pi}_{i}{\rm \pi}_{i}}-\frac{1}{\hat{\rho}}(\hat{\rho}u_{i,j}u_{j} +{p_{,i} - \mu u_{i,jj} - (\mu+\lambda)u_{j,ji}} - \hat{\rho}b_{i}){\rm \pi}_{i}\nonumber\\ &amp;\quad +\frac{1}{2}\frac{1}{(\hat{\rho}')^{2}}{{\rm \pi}_{4}{\rm \pi}_{4}}-\frac{1}{\hat{\rho}'}({\hat{\rho}'p_{,i}u_{i} + \hat{\rho}u_{i,i}}){\rm \pi}_{4}, \quad \hat{\rho}'\neq0. \end{align}</span></span></span></p><p>
Hamilton's equations (Hamilton <a href="#ref49"><span>Reference Hamilton</span>1834</a>, <a href="#ref50"><span>Reference Hamilton</span>1835</a>) are as follows:
</p><p><span>(4.6<em>a</em>,<em>b</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn48.png?pub-status=live" width="175" height="42" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn48.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn48.png"><span data-mathjax-type="texmath"><span>$$\begin{gather} \dot{u}_{i}=\frac{\delta H^{*}}{\delta{\rm \pi}_{i}}, \quad\dot{p}=\frac{\delta H^{*}}{\delta{\rm \pi}_{4}}, \end{gather}$$</span></span></span></p>
<p><span>(4.7<em>a</em>,<em>b</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn49.png?pub-status=live" width="214" height="43" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn49.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn49.png"><span data-mathjax-type="texmath"><span>$$\begin{gather}\dot{\rm \pi}_{i}={-}\frac{\delta H^{*}}{\delta u_{i}}, \quad \dot{\rm \pi}_{4}={-}\frac{\delta H^{*}}{\delta p}, \end{gather}$$</span></span></span></p><p>
where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline241.png?pub-status=live" width="67" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline241.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline241.png"><span data-mathjax-type="texmath"><span>$\delta H^{*}/\delta u_{i}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline242.png?pub-status=live" width="61" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline242.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline242.png"><span data-mathjax-type="texmath"><span>$\delta H^{*}/\delta p$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline243.png?pub-status=live" width="68" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline243.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline243.png"><span data-mathjax-type="texmath"><span>$\delta H^{*}/\delta {\rm \pi}_{i}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline244.png?pub-status=live" width="70" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline244.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline244.png"><span data-mathjax-type="texmath"><span>$\delta H^{*}/\delta {\rm \pi}_{4}$</span></span></span></span> are the Volterra (Volterra <a href="#ref114"><span>Reference Volterra</span>1930</a>) functional derivatives of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline245.png?pub-status=live" width="25" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline245.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline245.png"><span data-mathjax-type="texmath"><span>$H^{*}$</span></span></span></span> with respect to the field quantities and the conjugate momenta. Equations (<a href="#eqn48">4.6<em>a</em>,<em>b</em></a>) reproduce (<a href="#eqn45">4.3</a>) and (<a href="#eqn46">4.4</a>), respectively. Equations (<a href="#eqn49">4.7<em>a</em>,<em>b</em></a>) in turn reproduce the Euler–Lagrange equations (<a href="#eqn35">3.9</a>), (<a href="#eqn36">3.10</a>) of the second-order formulation.</p>
<p> We return now to our previous observation concerning the vanishing of the residuals. While <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline246.png?pub-status=live" width="25" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline246.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline246.png"><span data-mathjax-type="texmath"><span>$H^{*}$</span></span></span></span> vanishes for the particular fields <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline247.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline247.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline247.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span> that satisfy the governing field equations (<a href="#eqn24">3.4</a>), (<a href="#eqn25">3.5</a>) of the first-order formulation, it does not vanish for every conceivable <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline248.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline248.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline248.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span>. The latter would imply, according to (<a href="#eqn48">4.6<em>a</em>,<em>b</em></a>), that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline249.png?pub-status=live" width="50" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline249.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline249.png"><span data-mathjax-type="texmath"><span>$\dot {u}_{i}\equiv 0$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline250.png?pub-status=live" width="44" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline250.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline250.png"><span data-mathjax-type="texmath"><span>$\dot {p}\equiv 0$</span></span></span></span>, which is not generally the case. This observation, and the fact that (<a href="#eqn49">4.7<em>a</em>,<em>b</em></a>) faithfully reproduce the Euler–Lagrange equations (<a href="#eqn35">3.9</a>), (<a href="#eqn36">3.10</a>) of the second-order formulation, confirm that the Hamiltonian formulation described above is, in fact, a legitimate reformulation of the problem. In the following section, we develop the Hamilton–Jacobi theory as it relates to the present formulation, the goal being to find a canonical transformation to a new set of fields (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline251.png?pub-status=live" width="44" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline251.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline251.png"><span data-mathjax-type="texmath"><span>$\phi _{i}, \phi _{4}$</span></span></span></span>) and conjugate momenta for which the Hamiltonian does vanish identically.</p>
<p> To obtain the Hamiltonian for incompressible flow, we set <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline252.png?pub-status=live" width="48" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline252.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline252.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }'\equiv 0$</span></span></span></span> from the beginning, in which case <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline253.png?pub-status=live" width="25" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline253.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline253.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}$</span></span></span></span> reduces to <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline254.png?pub-status=live" width="36" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline254.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline254.png"><span data-mathjax-type="texmath"><span>$\hat {\rho } u_{i,i}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline255.png?pub-status=live" width="21" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline255.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline255.png"><span data-mathjax-type="texmath"><span>${\rm \pi} _{4}$</span></span></span></span> vanishes identically, consistent with the fact that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline256.png?pub-status=live" width="25" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline256.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline256.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}$</span></span></span></span> becomes independent of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline257.png?pub-status=live" width="13" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline257.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline257.png"><span data-mathjax-type="texmath"><span>$\dot {p}$</span></span></span></span>. The Hamiltonian density in turn reduces to
</p><p><span>(4.8)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn50.png?pub-status=live" width="229" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn50.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn50.png"><span data-mathjax-type="texmath"><span>\begin{equation} \mathcal{H}^{*}={\rm \pi}_{i}\dot{u}_{i}-\tfrac{1}{2}\mathcal{R}_{i}\mathcal{R}_{i}, \quad \hat{\rho}'\equiv0, \end{equation}</span></span></span></p><p>
or, in terms of the conjugate momenta,
</p><p><span>(4.9)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn51.png?pub-status=live" width="565" height="43" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn51.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn51.png"><span data-mathjax-type="texmath"><span>\begin{equation} \mathcal{H}^{*}[u_{i},p,{\rm \pi}_{j};x_{k},t]=\frac{1}{2}\frac{1}{{\rho}^{2}}{{\rm \pi}_{i}{\rm \pi}_{i}}-\frac{1}{\rho}({\rho}u_{i,j}u_{j} + p_{,i} - \mu u_{i,jj} - {\rho}b_{i}){\rm \pi}_{i}, \quad \hat{\rho}'\equiv0,\end{equation}</span></span></span></p><p>
where the density <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline258.png?pub-status=live" width="44" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline258.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline258.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }=\rho$</span></span></span></span> is a constant and we have used the fact that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline259.png?pub-status=live" width="59" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline259.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline259.png"><span data-mathjax-type="texmath"><span>$u_{i,i}=0$</span></span></span></span>. Hamilton's equations <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline260.png?pub-status=live" width="108" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline260.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline260.png"><span data-mathjax-type="texmath"><span>$\dot {u}_{i}=\delta H^{*}/\delta {\rm \pi}_{i}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline261.png?pub-status=live" width="120" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline261.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline261.png"><span data-mathjax-type="texmath"><span>$\dot {{\rm \pi} }_{i}=-\delta H^{*}/\delta u_{i}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline262.png?pub-status=live" width="149" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline262.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline262.png"><span data-mathjax-type="texmath"><span>$0\equiv \dot {{\rm \pi} }_{4}=-\delta H^{*}/\delta p$</span></span></span></span> still apply (and reproduce the corresponding equations in the incompressible limit), but <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline263.png?pub-status=live" width="104" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline263.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline263.png"><span data-mathjax-type="texmath"><span>$\dot {p}=\delta H^{*}/\delta {\rm \pi}_{4}$</span></span></span></span> must be replaced by the constraint that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline264.png?pub-status=live" width="59" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline264.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline264.png"><span data-mathjax-type="texmath"><span>$u_{i,i}=0$</span></span></span></span>. That the incompressibility condition should take the place of the pressure equation <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline265.png?pub-status=live" width="104" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline265.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline265.png"><span data-mathjax-type="texmath"><span>$\dot {p}=\delta H^{*}/\delta {\rm \pi}_{4}$</span></span></span></span> is consistent with the well-known result that the pressure usually serves as the Lagrange multiplier for the incompressibility constraint (Lanczos <a href="#ref63"><span>Reference Lanczos</span>1970</a>; Badin &amp; Crisciani <a href="#ref6"><span>Reference Badin and Crisciani</span>2018</a>).</p>
<div data-magellan-destination="sec4-1" id="sec4-1">
<h3><span>4.1.</span> Hamilton–Jacobi equation</h3>
<p> One of the most significant aspects of the Hamiltonian formalism is that it leads to the transformation theory of Hamilton (<a href="#ref48"><span>Reference Hamilton</span>1833</a>, <a href="#ref49"><span>Reference Hamilton</span>1834</a>, <a href="#ref50"><span>Reference Hamilton</span>1835</a>) and Jacobi (<a href="#ref54"><span>Reference Jacobi</span>1837</a>, <a href="#ref55"><span>Reference Jacobi</span>1842–1843</a>) (see Whittaker (<a href="#ref117"><span>Reference Whittaker</span>1904</a>) and Lanczos (<a href="#ref63"><span>Reference Lanczos</span>1970</a>)), celebrated both for unifying particle mechanics with wave optics (Hamilton <a href="#ref48"><span>Reference Hamilton</span>1833</a>) and for its relationship to the Schrödinger equation of quantum mechanics (Schrödinger <a href="#ref93"><span>Reference Schrödinger</span>1926<em>a</em></a>,<a href="#ref94"><span>Reference Schrödinger</span><em>b</em></a>). Here, we will obtain a Hamilton–Jacobi equation representing the Navier–Stokes problem.</p>
<p> In the context of discrete mechanics, Hamilton's principal function is obtained as the solution to the Hamilton–Jacobi equation, which is in turn defined by the functional form of the Hamiltonian. Hamilton's principal function provides the generating function for a canonical transformation to a new set of generalized coordinates and conjugate momenta for which the Hamiltonian vanishes identically, in which case Hamilton's equations do, in fact, become trivial. The new coordinates and their conjugate momenta are simply equal to their initial values.</p>
<p> In the present context, the role of Hamilton's principal function is played by a characteristic functional <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline266.png?pub-status=live" width="119" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline266.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline266.png"><span data-mathjax-type="texmath"><span>${S}^{*}={S}^{*}[u_{i},p,t]$</span></span></span></span> (not to be confused with the action <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline267.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline267.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline267.png"><span data-mathjax-type="texmath"><span>$\mathcal {S}^{*}$</span></span></span></span>, although they are related; see <a href="#app1">Appendix&nbsp;A</a>), which is the solution to the following Hamilton–Jacobi equation:
</p><p><span>(4.10)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn52.png?pub-status=live" width="264" height="46" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn52.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn52.png"><span data-mathjax-type="texmath"><span>\begin{equation} {H}^{*}\left[u_{i},p,\frac{\delta {S}^{*}}{\delta u_{j}},\frac{\delta {S}^{*}}{\delta p};t\right]+\frac{\partial {S}^{*}}{\partial t}=0, \end{equation}</span></span></span></p><p>
where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline268.png?pub-status=live" width="63" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline268.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline268.png"><span data-mathjax-type="texmath"><span>$\delta {S}^{*}/\delta u_{i}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline269.png?pub-status=live" width="57" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline269.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline269.png"><span data-mathjax-type="texmath"><span>$\delta {S}^{*}/\delta p$</span></span></span></span> are the Volterra (Volterra <a href="#ref114"><span>Reference Volterra</span>1930</a>) functional derivatives of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline270.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline270.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline270.png"><span data-mathjax-type="texmath"><span>${S}^{*}$</span></span></span></span> with respect to the field quantities. Interested readers will find the derivation of (<a href="#eqn52">4.10</a>) in <a href="#app1">Appendix&nbsp;A</a>. Henceforth, we will refer to <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline271.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline271.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline271.png"><span data-mathjax-type="texmath"><span>${S}^{*}$</span></span></span></span> as ‘Hamilton's principal functional’. Substituting for the conjugate momenta in (<a href="#eqn47">4.5</a>), we obtain for the Hamilton–Jacobi equation
</p><p><span>(4.11)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn53.png?pub-status=live" width="565" height="93" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn53.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn53.png"><span data-mathjax-type="texmath"><span>\begin{align} &amp;\int \text{d}^{3}x\left[\frac{1}{2}\frac{1}{(\hat{\rho})^{2}}\frac{\delta {S}^{*}}{\delta u_{i}}\frac{\delta {S}^{*}}{\delta u_{i}}-\frac{1}{\hat{\rho}}\left(\hat{\rho}u_{i,j}u_{j} +{ p_{,i} - \mu u_{i,jj} - (\mu+\lambda)u_{j,ji}} - \hat{\rho}b_{i}\right)\frac{\delta {S}^{*}}{\delta u_{i}}\right. \nonumber\\ &amp;\quad \left.+\,\frac{1}{2}\frac{1}{(\hat{\rho}')^{2}}\frac{\delta {S}^{*}}{\delta p}\frac{\delta {S}^{*}}{\delta p}-\frac{1}{\hat{\rho}'}\left({\hat{\rho}'p_{,i}u_{i} + \hat{\rho}u_{i,i}}\right)\frac{\delta {S}^{*}}{\delta p}\right]+\frac{\partial {S}^{*}}{\partial t}=0, \quad \hat{\rho}'\neq0. \end{align}</span></span></span></p><p>
In contrast to the four original field equations – (<a href="#eqn21">3.1</a>) and (<a href="#eqn22">3.2</a>) – the Hamilton–Jacobi equation (<a href="#eqn53">4.11</a>) is a single equation in Hamilton's principal functional <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline272.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline272.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline272.png"><span data-mathjax-type="texmath"><span>${S}^{*}$</span></span></span></span>. This constitutes an equivalent formulation of the problem, as a complete and non-trivial solution to (<a href="#eqn53">4.11</a>) is tantamount to an integration of Hamilton's equations (<a href="#eqn48">4.6<em>a</em>,<em>b</em></a>) and (<a href="#eqn49">4.7<em>a</em>,<em>b</em></a>) (note that it is not appropriate to take <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline273.png?pub-status=live" width="54" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline273.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline273.png"><span data-mathjax-type="texmath"><span>${S}^{*}\equiv 0$</span></span></span></span> for the same reason that it is not appropriate to take <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline274.png?pub-status=live" width="58" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline274.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline274.png"><span data-mathjax-type="texmath"><span>$H^{*}\equiv 0$</span></span></span></span>). In this way, we have reduced the problem of finding four separate field quantities to that of finding a single functional in those field quantities. One need only deduce (or even guess) the general form of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline275.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline275.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline275.png"><span data-mathjax-type="texmath"><span>${S}^{*}$</span></span></span></span> in order to solve the problem. If an analytical expression for <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline276.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline276.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline276.png"><span data-mathjax-type="texmath"><span>${S}^{*}$</span></span></span></span> can be obtained, it will lead via canonical transformation to a new set of fields (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline277.png?pub-status=live" width="44" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline277.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline277.png"><span data-mathjax-type="texmath"><span>$\phi _{i}, \phi _{4}$</span></span></span></span>) and conjugate momenta which are simply equal to their initial values, giving analytical expressions for the four original fields <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline278.png?pub-status=live" width="46" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline278.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline278.png"><span data-mathjax-type="texmath"><span>$(u_{i},p)$</span></span></span></span>.</p>
<p> The case of incompressible flow requires care, as <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline279.png?pub-status=live" width="48" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline279.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline279.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }'\equiv 0$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline280.png?pub-status=live" width="16" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline280.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline280.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }'$</span></span></span></span> appears in the denominators of terms in (<a href="#eqn53">4.11</a>). Even so, the Hamiltonian formulation remains well posed in the incompressible limit. Recall that, with <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline281.png?pub-status=live" width="48" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline281.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline281.png"><span data-mathjax-type="texmath"><span>$\hat {\rho }'\equiv 0$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline282.png?pub-status=live" width="25" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline282.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline282.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{4}$</span></span></span></span> reduces to <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline283.png?pub-status=live" width="36" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline283.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline283.png"><span data-mathjax-type="texmath"><span>$\hat {\rho } u_{i,i}$</span></span></span></span>, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline284.png?pub-status=live" width="21" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline284.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline284.png"><span data-mathjax-type="texmath"><span>${\rm \pi} _{4}$</span></span></span></span> vanishes identically and the Hamiltonian density reduces to (<a href="#eqn51">4.9</a>). Substituting for the conjugate momenta <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline285.png?pub-status=live" width="19" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline285.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline285.png"><span data-mathjax-type="texmath"><span>${\rm \pi} _{i}$</span></span></span></span> in (<a href="#eqn51">4.9</a>), the corresponding Hamilton–Jacobi equation is
</p><p><span>(4.12)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn54.png?pub-status=live" width="609" height="45" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn54.png" data-zoomable="true" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn54.png"><span data-mathjax-type="texmath"><span>\begin{align} \int \text{d}^{3}x\left[\frac{1}{2}\frac{1}{{\rho}^{2}}\frac{\delta {S}^{*}}{\delta u_{i}}\frac{\delta {S}^{*}}{\delta u_{i}}-\frac{1}{\rho}({\rho}u_{i,j}u_{j} + p_{,i} - \mu u_{i,jj} - {\rho}b_{i})\frac{\delta {S}^{*}}{\delta u_{i}}\right]+\frac{\partial {S}^{*}}{\partial t}=0, \quad \hat{\rho}'\equiv0, \end{align}</span></span></span></p><p>
with <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline286.png?pub-status=live" width="88" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline286.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline286.png"><span data-mathjax-type="texmath"><span>$\delta {S}^{*}/\delta p=0$</span></span></span></span>, since again <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline287.png?pub-status=live" width="21" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline287.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline287.png"><span data-mathjax-type="texmath"><span>${\rm \pi} _{4}$</span></span></span></span> vanishes identically for incompressible flow. Here, the merit of starting from the compressible form of the equations becomes fully evident, as it would not necessarily have been clear that <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline288.png?pub-status=live" width="57" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline288.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline288.png"><span data-mathjax-type="texmath"><span>$\delta {S}^{*}/\delta p$</span></span></span></span> should vanish in the incompressible limit without knowing that in general <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline289.png?pub-status=live" width="80" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline289.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline289.png"><span data-mathjax-type="texmath"><span>${\rm \pi} _{4}=\hat {\rho }'\mathcal {R}_{4}$</span></span></span></span>. This is the form of the Hamilton–Jacobi equation as it relates to the traditional Navier–Stokes problem. In this case, the pressure is determined last of all, and is whatever it needs to be to enforce the incompressibility constraint <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline290.png?pub-status=live" width="59" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline290.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline290.png"><span data-mathjax-type="texmath"><span>$u_{i,i}=0$</span></span></span></span> (again consistent with the role of pressure as Lagrange multiplier Lanczos <a href="#ref63"><span>Reference Lanczos</span>1970</a>; Badin &amp; Crisciani <a href="#ref6"><span>Reference Badin and Crisciani</span>2018</a>).</p>
<p> It must be acknowledged that the Hamilton–Jacobi equation developed above (either (<a href="#eqn53">4.11</a>) for the compressible case or (<a href="#eqn54">4.12</a>) in the incompressible limit) contains Volterra (<a href="#ref114"><span>Reference Volterra</span>1930</a>) functional derivatives and is thus by no means trivial to solve. Indeed, it appears that solving such equations is itself a long-standing open problem in mathematics, which has received very little attention since the first half of the twentieth century (Michal <a href="#ref71"><span>Reference Michal</span>1926</a>; Jordan &amp; Pauli <a href="#ref57"><span>Reference Jordan and Pauli</span>1928</a>; Levy <a href="#ref66"><span>Reference Levy</span>1951</a>; Tatarskii <a href="#ref105"><span>Reference Tatarskii</span>1961</a>; Syavavko &amp; Mel'nichak <a href="#ref101"><span>Reference Syavavko and Mel'nichak</span>1974</a>; Dieudonne <a href="#ref28"><span>Reference Dieudonne</span>1981</a>; Koval'chik <a href="#ref61"><span>Reference Koval'chik</span>1993</a>). Nevertheless, if a rigorous theory of such equations can be developed, the present formulation of the Navier–Stokes problem might be solved as one special case. The present authors submit that such an endeavour is worthwhile and merits further study.</p>
<p> We conclude this section by remarking that, in the inviscid limit (<span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline291.png?pub-status=live" width="78" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline291.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline291.png"><span data-mathjax-type="texmath"><span>$\mu =\lambda =0$</span></span></span></span>), all of the preceding formalism remains perfectly well posed. In that limit, the present approach yields a mathematically equivalent second-order formulation of the inviscid Euler equations, as one would expect. Interested readers will find the full details in <a href="#app2">Appendix&nbsp;B</a>.</p>
</div>
</div>
<div data-magellan-destination="sec5" id="sec5">
<h2><span>5.</span> Discussion</h2>
<p> In this section we provide some qualitative interpretations of the developments of §&nbsp;<a href="#sec3">3</a>. More specifically, we investigate the incompressible form (via constant, uniform density) of the Euler–Lagrange equations (<a href="#eqn35">3.9</a>) and (<a href="#eqn36">3.10</a>) when the residuals <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline292.png?pub-status=live" width="23" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline292.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline292.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_i$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline293.png?pub-status=live" width="25" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline293.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline293.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_4$</span></span></span></span> are substituted.</p>
<p> Our motivation is again the simple example of §&nbsp;<a href="#sec1-1">1.1</a> for which the first-order non-Hamiltonian system <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline294.png?pub-status=live" width="57" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline294.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline294.png"><span data-mathjax-type="texmath"><span>$\dot {v}=-v$</span></span></span></span> was converted to the second-order Hamiltonian system <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline295.png?pub-status=live" width="44" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline295.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline295.png"><span data-mathjax-type="texmath"><span>$\ddot {v}=v$</span></span></span></span> by (manual) elimination of the non-conservative ‘damping’ term <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline296.png?pub-status=live" width="12" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline296.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline296.png"><span data-mathjax-type="texmath"><span>$\dot {v}$</span></span></span></span> (see Sanders (<a href="#ref89"><span>Reference Sanders</span>2022</a>) for a similar result for the damped harmonic oscillator converting from second-order to fourth-order dynamics). Sanders (<a href="#ref91"><span>Reference Sanders</span>2023<em>b</em></a>) showed that the elimination process is ‘automated’ by the definition of the action in the first integral of (<a href="#eqn3">1.3</a>), which is generalized to the action in (<a href="#eqn23">3.3</a>) for our current continuum dynamics problem containing fields.</p>
<p> First consider the pressure equation (<a href="#eqn36">3.10</a>) and corresponding natural boundary condition (<a href="#eqn41">3.15</a>), which take the following incompressible forms:
</p><p><span>(5.1)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn55.png?pub-status=live" width="432" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn55.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn55.png"><span data-mathjax-type="texmath"><span>\begin{equation} {-}\mathcal{R}_{i,i}=0 \quad \forall x_j\in\mathcal{V}, \quad\text{subject to}\quad \mathcal{R}_in_i = 0 \quad \forall x_j\in\partial\mathcal{V}. \end{equation}</span></span></span></p><p>
This higher-order field equation is simply the divergence of the residual <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline297.png?pub-status=live" width="23" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline297.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline297.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_i$</span></span></span></span>. Upon substituting for <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline298.png?pub-status=live" width="23" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline298.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline298.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_i$</span></span></span></span> from (<a href="#eqn21">3.1</a>) and subsequently imposing the incompressible continuity condition <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline299.png?pub-status=live" width="122" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline299.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline299.png"><span data-mathjax-type="texmath"><span>$u_{i,i}=\mathcal {R}_4/\rho =0$</span></span></span></span> from (<a href="#eqn22">3.2</a>), we obtain
</p><p><span>(5.2)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn56.png?pub-status=live" width="192" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn56.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn56.png"><span data-mathjax-type="texmath"><span>\begin{equation} p_{,ii} ={-}[\rho u_ju_{i,j}]_{,i} + \rho b_{i,i}, \end{equation}</span></span></span></p><p>
which is a Poisson equation for the pressure. The boundary condition is a Neumann type requiring the specification of the normal pressure gradient, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline300.png?pub-status=live" width="160" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline300.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline300.png"><span data-mathjax-type="texmath"><span>$n_ip_{,i} = p_{,n} \equiv f(x_j,t)$</span></span></span></span>, on the boundary, where
</p><p><span>(5.3)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn57.png?pub-status=live" width="329" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn57.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn57.png"><span data-mathjax-type="texmath"><span>\begin{equation} f(x_j,t) ={-}n_i[\rho\dot{u}_i+\rho u_ju_{i,j}-\mu u_{i,jj}-\rho b_i]. \end{equation}</span></span></span></p><p>
Equation (<a href="#eqn56">5.2</a>) and boundary condition (<a href="#eqn57">5.3</a>) evolve the pressure in a manner that ensures the velocity field is solenoidal. This is a well-known pressure–velocity-based formulation commonly used in the numerical solution of incompressible flows (e.g. Ferziger &amp; Peric <a href="#ref30"><span>Reference Ferziger and Peric</span>2002</a>; Pozrikidis <a href="#ref81"><span>Reference Pozrikidis</span>2009</a>).</p>
<p> Next, we consider the velocity equations (<a href="#eqn35">3.9</a>) which, at present, have a more elusive physical interpretation. Here, we instead begin with the natural boundary conditions (<a href="#eqn39">3.13</a>) and (<a href="#eqn40">3.14</a>), which are due to the <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline301.png?pub-status=live" width="26" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline301.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline301.png"><span data-mathjax-type="texmath"><span>$\delta u_i$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline302.png?pub-status=live" width="36" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline302.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline302.png"><span data-mathjax-type="texmath"><span>$\delta u_{i,j}$</span></span></span></span> variations. The incompressible versions of these equations are
</p><p><span>(5.4<em>a</em>,<em>b</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn58.png?pub-status=live" width="434" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn58.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn58.png"><span data-mathjax-type="texmath"><span>\begin{equation} \rho \mathcal{R}_{i}u_{j}n_{j}+\mu \mathcal{R}_{i,j}n_{j}=0 \quad\text{and}\quad - \mu \mathcal{R}_{i}n_{j}=0 \quad \forall x_j\in\partial\mathcal{V}. \end{equation}</span></span></span></p><p>
The boundary conditions involving the residual <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline303.png?pub-status=live" width="23" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline303.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline303.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_i$</span></span></span></span> are those compatible with the first-order Navier–Stokes equations, such as the no-slip and no-penetration conditions. Indeed, if we specify the velocity vector of the actual motion on the boundary, then <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline304.png?pub-status=live" width="55" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline304.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline304.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_i\equiv 0$</span></span></span></span> there. Note that the pressure of the actual motion on the boundary will be known from the simultaneous solution of (<a href="#eqn56">5.2</a>).</p>
<p> However, the gradient terms <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline305.png?pub-status=live" width="32" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline305.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline305.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_{i,j}$</span></span></span></span> will introduce up to third-order spatial derivatives that must be specified. These represent the additional boundary conditions that must accompany the higher-order governing equation, which will be seen shortly to be second order in time and fourth order in space. Again, recall the example of §&nbsp;<a href="#sec1">1</a>, whereby the system (<a href="#eqn2">1.2<em>a</em>–<em>c</em></a>) must be appended with a second (initial) condition specifying the (time) derivative of the coordinate <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline306.png?pub-status=live" width="30" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline306.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline306.png"><span data-mathjax-type="texmath"><span>$v(t)$</span></span></span></span>. In the present context, these boundary conditions are ostensibly tantamount to specification of the viscous stress on the boundary by way of velocity gradients.</p>
<p> In general, the conditions at a boundary require two transition relations (Batchelor <a href="#ref8"><span>Reference Batchelor</span>2000</a>; White <a href="#ref116"><span>Reference White</span>2006</a>) to ultimately describe the momentum transport. Mathematically speaking, these conditions are the jump in velocity (momentum intensity) and the jump in stress (momentum flux). Under ordinary physical circumstances the velocity and stress are assumed to be continuous. However, this is one particular form of the transition relations, and there are familiar examples to which they do not apply. For example, at a liquid–gas interface the stress relation is modified to account for a non-zero jump in the normal stress that is balanced by a force due to surface tension (the tangential stress component usually still taken to be continuous). Similarly, in the event that molecular slip occurs, the typical transition relation gives an expression for the slip velocity (e.g. Thompson &amp; Troian <a href="#ref109"><span>Reference Thompson and Troian</span>1997</a>; Thalakkottor &amp; Mohseni <a href="#ref108"><span>Reference Thalakkottor and Mohseni</span>2016</a>). In the case of energy transport, analogous conditions are needed regarding jumps in temperature (intensity) and heat flow (flux), which are recognized as the concept of thermal contact resistance.</p>
<p> We now turn our attention to the Euler–Lagrange equations (<a href="#eqn35">3.9</a>), which upon imposing incompressibility and expanding derivatives of product terms yields
</p><p><span>(5.5)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn59.png?pub-status=live" width="340" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn59.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn59.png"><span data-mathjax-type="texmath"><span>\begin{equation} \rho\dot{\mathcal{R}}_i + \rho u_j\mathcal{R}_{i,j} = \rho \mathcal{R}_{j}u_{j,i}- \mu \mathcal{R}_{i,jj} \quad \forall x_j\in\mathcal{V}. \end{equation}</span></span></span></p><p>
The left-hand side is the material derivative of the residual <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline307.png?pub-status=live" width="23" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline307.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline307.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_i$</span></span></span></span>. Our purpose here is to observe which terms from the first-order Navier–Stokes equation are ‘eliminated’ in the higher-order formulation. Specifically, we are interested in the non-conservative viscous terms; while the body force <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline308.png?pub-status=live" width="15" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline308.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline308.png"><span data-mathjax-type="texmath"><span>$b_i$</span></span></span></span> could also be non-conservative, we will not concern ourselves with this possibility. Direct substitution of <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline309.png?pub-status=live" width="23" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline309.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline309.png"><span data-mathjax-type="texmath"><span>$\mathcal {R}_i$</span></span></span></span> into (<a href="#eqn59">5.5</a>) generates many terms, but it is found that only one is cancelled: the viscous Laplacian of the (time derivative of the) velocity, namely <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline310.png?pub-status=live" width="45" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline310.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline310.png"><span data-mathjax-type="texmath"><span>$\mu \dot {u}_{i,jj}$</span></span></span></span>. This term mutually appears from the <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline311.png?pub-status=live" width="31" height="24" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline311.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline311.png"><span data-mathjax-type="texmath"><span>$\rho \dot {\mathcal {R}}_i$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline312.png?pub-status=live" width="62" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline312.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline312.png"><span data-mathjax-type="texmath"><span>$-\mu \mathcal {R}_{i,jj}$</span></span></span></span> terms in (<a href="#eqn59">5.5</a>). To maintain notional clarity, we write the residual as
</p><p><span>(5.6)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn60.png?pub-status=live" width="183" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn60.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn60.png"><span data-mathjax-type="texmath"><span>\begin{equation} \mathcal{R}_i = \rho\dot{u}_i - \mu u_{i,kk} + \tilde{\mathcal{R}}_i, \end{equation}</span></span></span></p><p>
where index <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline313.png?pub-status=live" width="12" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline313.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline313.png"><span data-mathjax-type="texmath"><span>$k$</span></span></span></span> has been used to avoid confusion with gradient operators in (<a href="#eqn59">5.5</a>) having index <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline314.png?pub-status=live" width="11" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline314.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline314.png"><span data-mathjax-type="texmath"><span>$j$</span></span></span></span>, and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline315.png?pub-status=live" width="144" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline315.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline315.png"><span data-mathjax-type="texmath"><span>$\tilde {\mathcal {R}}_i = \rho u_ku_{i,k}-\rho b_i$</span></span></span></span> are the remaining terms in the residual. Substituting the above into the first and last terms of (<a href="#eqn59">5.5</a>), cancelling the aforementioned <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline316.png?pub-status=live" width="45" height="20" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline316.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline316.png"><span data-mathjax-type="texmath"><span>$\mu \dot {u}_{i,jj}$</span></span></span></span> term and then dividing out by the density gives
</p><p><span>(5.7)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn61.png?pub-status=live" width="383" height="29" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn61.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn61.png"><span data-mathjax-type="texmath"><span>\begin{equation} \rho\ddot{u}_i+\dot{\tilde{\mathcal{R}}}_i+u_j\mathcal{R}_{i,j} = \mathcal{R}_ju_{j,i} - \nu[-\mu u_{i,kkjj} + \tilde{\mathcal{R}}_{i,jj} ], \end{equation}</span></span></span></p><p>
where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline317.png?pub-status=live" width="63" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline317.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline317.png"><span data-mathjax-type="texmath"><span>$\nu =\mu /\rho$</span></span></span></span> is the kinematic viscosity (recall that all variables are non-dimensional). We see that this equation is second order in time and fourth order in space. Viscous terms still appear in the equation including second- and third-order spatial derivatives. Nevertheless, the technique detailed by Sanders (<a href="#ref91"><span>Reference Sanders</span>2023<em>b</em></a>) and employed here evidently ensures that (<a href="#eqn61">5.7</a>) has a corresponding Hamiltonian structure.</p>
</div>
<div data-magellan-destination="sec6" id="sec6">
<h2><span>6.</span> Case study</h2>
<p> We can explore how this method can be applied by considering a simplified example with a known field solution. In looking at the variety of cases in which the Navier–Stokes equations have a known analytical solution, the simplest are those involving steady flows. While the Euler–Lagrange equations (<a href="#eqn35">3.9</a>), (<a href="#eqn36">3.10</a>) can be written for these cases, the corresponding Hamilton–Jacobi equation is trivial because for steady flows the fields are already equal to their initial values.</p>
<p> It is therefore worthwhile to examine the simplest unsteady flows, which should result in a non-trivial Hamilton–Jacobi equation. Indeed, there exists a class of flows for which the Navier–Stokes equations take the same simplified form: those in which the flow is incompressible and unidirectional (Batchelor <a href="#ref8"><span>Reference Batchelor</span>2000</a>). This class of problems include both of Stokes's flows (Stokes <a href="#ref99"><span>Reference Stokes</span>1851</a>), in which a semi-infinite fluid is influenced by a boundary moving in its own plane. In the first of these cases, the boundary is impulsively started and in the second, the boundary oscillates. We can also include developing flow in a channel or pipe. The only difference between these flows results from initial and boundary conditions, but the Navier–Stokes equations and therefore the present Hamilton–Jacobi equation take the same form.</p>
<p> Here we will examine the case in which there is motion only in the <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline318.png?pub-status=live" width="19" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline318.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline318.png"><span data-mathjax-type="texmath"><span>$x_1$</span></span></span></span> direction, and the velocities take the form <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline319.png?pub-status=live" width="170" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline319.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline319.png"><span data-mathjax-type="texmath"><span>$\{u_{i}\} = \{u_{1}(x_{2},t),0,0\}$</span></span></span></span>. In the absence of a body force, our pressure gradient in the <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline320.png?pub-status=live" width="19" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline320.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline320.png"><span data-mathjax-type="texmath"><span>$x_1$</span></span></span></span> direction is solely a function of time and the pressure gradients in the <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline321.png?pub-status=live" width="19" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline321.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline321.png"><span data-mathjax-type="texmath"><span>$x_2$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline322.png?pub-status=live" width="19" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline322.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline322.png"><span data-mathjax-type="texmath"><span>$x_3$</span></span></span></span> directions are zero. There are thus only two unknown field quantities: <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline323.png?pub-status=live" width="65" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline323.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline323.png"><span data-mathjax-type="texmath"><span>$u_{1}(x_{2},t)$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline324.png?pub-status=live" width="57" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline324.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline324.png"><span data-mathjax-type="texmath"><span>$p(x_{1},t)$</span></span></span></span>, where <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline325.png?pub-status=live" width="13" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline325.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline325.png"><span data-mathjax-type="texmath"><span>$p$</span></span></span></span> is linear in <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline326.png?pub-status=live" width="19" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline326.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline326.png"><span data-mathjax-type="texmath"><span>$x_{1}$</span></span></span></span>. The field equation of primary interest is
</p><p><span>(6.1)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn62.png?pub-status=live" width="220" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn62.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn62.png"><span data-mathjax-type="texmath"><span>\begin{equation} \mathcal{R}_{1} \equiv \rho \dot{u}_{1} + p_{,1} - \mu u_{1,22} = 0, \end{equation}</span></span></span></p><p>
and the remaining field equations are satisfied automatically by the assumed form of the fields. Following the procedure described above, the momenta conjugate to <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline327.png?pub-status=live" width="19" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline327.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline327.png"><span data-mathjax-type="texmath"><span>$u_{1}$</span></span></span></span> and <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline328.png?pub-status=live" width="13" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline328.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline328.png"><span data-mathjax-type="texmath"><span>$p$</span></span></span></span> are given by
</p><p><span>(6.2<em>a</em>,<em>b</em>)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn63.png?pub-status=live" width="156" height="19" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn63.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn63.png"><span data-mathjax-type="texmath"><span>\begin{equation} {\rm \pi}_{1}\equiv \rho\mathcal{R}_{1}, \quad {\rm \pi}_{4}\equiv0.\end{equation}</span></span></span></p><p>
This results in a Hamiltonian density given by
</p><p><span>(6.3)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn64.png?pub-status=live" width="280" height="43" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn64.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn64.png"><span data-mathjax-type="texmath"><span>\begin{equation} \mathcal{H}^{*}=\frac{1}{2}\frac{1}{{\rho}^{2}}{\rm \pi}_{1}{\rm \pi}_{1}-\frac{1}{\rho}(p_{,1}-\mu u_{1,22}){\rm \pi}_{1}. \end{equation}</span></span></span></p><p>
Hamilton's principal functional <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline329.png?pub-status=live" width="121" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline329.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline329.png"><span data-mathjax-type="texmath"><span>${S}^{*}={S}^{*}[u_{1},p,t]$</span></span></span></span> can be expressed as an integral over <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline330.png?pub-status=live" width="19" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline330.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline330.png"><span data-mathjax-type="texmath"><span>$x_{2}$</span></span></span></span> only, since the other spatial coordinates do not appear and may be integrated out. In this way, we may write the Hamilton–Jacobi equation as follows:
</p><p><span>(6.4)</span><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn65.png?pub-status=live" width="428" height="45" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn65.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_eqn65.png"><span data-mathjax-type="texmath"><span>\begin{equation} \int \text{d}\kern 0.06em x_2\left[\frac{1}{2}\frac{1}{{\rho}^{2}}\frac{\delta {S}^{*}}{\delta u_{1}}\frac{\delta {S}^{*}}{\delta u_{1}}-\frac{1}{\rho}(p_{,1}-\mu u_{1,22})\frac{\delta {S}^{*}}{\delta u_{1}}\right]+\frac{\partial {S}^{*}}{\partial t}=0, \end{equation}</span></span></span></p><p>
with <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline331.png?pub-status=live" width="88" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline331.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline331.png"><span data-mathjax-type="texmath"><span>$\delta {S}^{*}/\delta p=0$</span></span></span></span>. The solution to (<a href="#eqn65">6.4</a>) would provide a canonical transformation to a new set of coordinates, giving analytical expressions for <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline332.png?pub-status=live" width="48" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline332.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline332.png"><span data-mathjax-type="texmath"><span>$(u_{1},p)$</span></span></span></span>.</p>
<p> Despite knowing the analytical solution for these fields in this particular example, the present authors have not been able to solve this Hamilton–Jacobi equation, since again the solution of such equations is itself an open problem (Michal <a href="#ref71"><span>Reference Michal</span>1926</a>; Jordan &amp; Pauli <a href="#ref57"><span>Reference Jordan and Pauli</span>1928</a>; Levy <a href="#ref66"><span>Reference Levy</span>1951</a>; Tatarskii <a href="#ref105"><span>Reference Tatarskii</span>1961</a>; Syavavko &amp; Mel'nichak <a href="#ref101"><span>Reference Syavavko and Mel'nichak</span>1974</a>; Dieudonne <a href="#ref28"><span>Reference Dieudonne</span>1981</a>; Koval'chik <a href="#ref61"><span>Reference Koval'chik</span>1993</a>). This example therefore appears to be a good place to start for tackling the general problem. Another interesting example to consider might be a two-dimensional Taylor–Green vortex such as that considered by Wu, Ma &amp; Zhou (<a href="#ref118"><span>Reference Wu, Ma and Zhou</span>2006</a>).</p>
</div>
<div data-magellan-destination="sec7" id="sec7">
<h2><span>7.</span> Conclusion</h2>
<p> This paper has presented a novel Hamiltonian formulation of the isotropic Navier–Stokes problem for both compressible and incompressible fluids. This canonical formulation opens several previously unexplored avenues toward a final resolution of the problem, which we briefly describe below.</p>
<p> Perhaps the most obvious route would be to solve the Hamilton–Jacobi equation – either (<a href="#eqn53">4.11</a>) for the compressible case or (<a href="#eqn54">4.12</a>) for the incompressible case – for Hamilton's principal functional <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline333.png?pub-status=live" width="76" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline333.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline333.png"><span data-mathjax-type="texmath"><span>${S}^{*}[u_{i},p,t]$</span></span></span></span> directly. If a complete solution for <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline334.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline334.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline334.png"><span data-mathjax-type="texmath"><span>${S}^{*}$</span></span></span></span> can be found, it will lead via canonical transformation to a new set of fields which are equal to their initial values, thereby giving analytical expressions for the original velocity and pressure fields. Alternatively, if one can simply establish based on emerging analytical techniques that a complete solution to this Hamilton–Jacobi equation does (or does not) exist under the usual assumptions, that will also settle the question of existence of solutions.</p>
<p> An alternative strategy might be to investigate the corresponding Lagrangian formulation based on the action <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline335.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline335.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline335.png"><span data-mathjax-type="texmath"><span>$\mathcal {S}^{*}$</span></span></span></span> as given by (<a href="#eqn23">3.3</a>). Because the first- and second-order formulations are mathematically equivalent (recall the proof in §&nbsp;<a href="#sec3-2">3.2</a>), <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline336.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline336.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline336.png"><span data-mathjax-type="texmath"><span>$\mathcal {S}^{*}$</span></span></span></span> must have as many local minima as there are solutions to the traditional, first-order formulation. Intuitively, it seems as though it ought to be possible to determine – or at least to establish bounds on – the number of critical points an action has based on the form of the Lagrangian (Van den Berg &amp; VanderVorst <a href="#ref113"><span>Reference Van den Berg and VanderVorst</span>2002</a>; Kalies &amp; VanderVorst <a href="#ref59"><span>Reference Kalies and VanderVorst</span>2004</a>). If one can establish that, under the usual assumptions, <span data-mathjax-status="alt-graphic"><span><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline337.png?pub-status=live" width="21" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline337.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20240328184703666-0405:S0022112024002295:S0022112024002295_inline337.png"><span data-mathjax-type="texmath"><span>$\mathcal {S}^{*}$</span></span></span></span> always has exactly one local minimum, or else demonstrate that there are cases where it fails to achieve a local minimum, that too will resolve the question of existence and uniqueness.</p>
<p> By no means is either of the above programs trivial. As pointed out in §&nbsp;<a href="#sec4-1">4.1</a>, solving equations containing Volterra (<a href="#ref114"><span>Reference Volterra</span>1930</a>) functional derivatives is itself a long-standing open problem in mathematics, which has received very little attention since the first half of the twentieth century (Michal <a href="#ref71"><span>Reference Michal</span>1926</a>; Jordan &amp; Pauli <a href="#ref57"><span>Reference Jordan and Pauli</span>1928</a>; Levy <a href="#ref66"><span>Reference Levy</span>1951</a>; Tatarskii <a href="#ref105"><span>Reference Tatarskii</span>1961</a>; Syavavko &amp; Mel'nichak <a href="#ref101"><span>Reference Syavavko and Mel'nichak</span>1974</a>; Dieudonne <a href="#ref28"><span>Reference Dieudonne</span>1981</a>; Koval'chik <a href="#ref61"><span>Reference Koval'chik</span>1993</a>). One might even go so far as to call it a ‘forgotten’ open problem (as did one of the reviewers of the present paper, who generously drew our attention to Jordan &amp; Pauli <a href="#ref57"><span>Reference Jordan and Pauli</span>1928</a>; Levy <a href="#ref66"><span>Reference Levy</span>1951</a>; Tatarskii <a href="#ref105"><span>Reference Tatarskii</span>1961</a>; Syavavko &amp; Mel'nichak <a href="#ref101"><span>Reference Syavavko and Mel'nichak</span>1974</a>; Dieudonne <a href="#ref28"><span>Reference Dieudonne</span>1981</a>; Koval'chik <a href="#ref61"><span>Reference Koval'chik</span>1993</a>). We see the lack of work on such equations as a challenge, yes, but at the same time we also see it as a significant opportunity for advancing the field of analytical continuum mechanics. Perhaps, despite an apparent increase in complexity, a rigorous theory of such equations can be developed after all, in which case the present formulation of the Navier–Stokes problem might be solved as one example. We submit that, at the very least, such an endeavour merits further study, which we intend to continue in future work.</p>
<p> Finally, it is worth noting that the techniques employed here are by no means specific to the Navier–Stokes problem, nor are they restricted to the field of classical mechanics. The suitably averaged principle of least squares (Sanders <a href="#ref88"><span>Reference Sanders</span>2021</a>, <a href="#ref89"><span>Reference Sanders</span>2022</a>, <a href="#ref90"><span>Reference Sanders</span>2023<em>a</em></a>,<a href="#ref91"><span>Reference Sanders</span><em>b</em></a>; Sanders &amp; Inman <a href="#ref92"><span>Reference Sanders and Inman</span>2023</a>) can be applied to any traditionally non-Hamiltonian dynamical system in order to formulate a mathematically equivalent higher-order Hamiltonian system. It is believed that this fundamental result will also find uses in other branches of pure and applied mathematics.</p>
</div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dot – A standalone open source app meant for easy use of local LLMs and RAG (150 pts)]]></title>
            <link>https://github.com/alexpinel/Dot</link>
            <guid>39957081</guid>
            <pubDate>Sun, 07 Apr 2024 00:41:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/alexpinel/Dot">https://github.com/alexpinel/Dot</a>, See on <a href="https://news.ycombinator.com/item?id=39957081">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">HELLO!</h2><a id="user-content-hello" aria-label="Permalink: HELLO!" href="#hello"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/93524949/313763477-e5983c61-d59c-45ac-86f6-9d62cffaf37b.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTI1MDIzMDcsIm5iZiI6MTcxMjUwMjAwNywicGF0aCI6Ii85MzUyNDk0OS8zMTM3NjM0NzctZTU5ODNjNjEtZDU5Yy00NWFjLTg2ZjYtOWQ2MmNmZmFmMzdiLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDA3VDE1MDAwN1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWI3YTFhZjc4MDBjODdmMmI3YjVkYjk0NzI5NDE2MTU4ODdjMjI1NDdjYmY2Mjk5ODBkZDQ1OGE5MDQzNTdkZjMmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.9wtBpeIkSGlL7dNkErd2D-GPfD_oB2RViNpDDKWGNUQ"><img src="https://private-user-images.githubusercontent.com/93524949/313763477-e5983c61-d59c-45ac-86f6-9d62cffaf37b.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTI1MDIzMDcsIm5iZiI6MTcxMjUwMjAwNywicGF0aCI6Ii85MzUyNDk0OS8zMTM3NjM0NzctZTU5ODNjNjEtZDU5Yy00NWFjLTg2ZjYtOWQ2MmNmZmFmMzdiLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDA3VDE1MDAwN1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWI3YTFhZjc4MDBjODdmMmI3YjVkYjk0NzI5NDE2MTU4ODdjMjI1NDdjYmY2Mjk5ODBkZDQ1OGE5MDQzNTdkZjMmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.9wtBpeIkSGlL7dNkErd2D-GPfD_oB2RViNpDDKWGNUQ" alt="ezgif-4-b96c0b5548" data-animated-image=""></a></p>
<p dir="auto">This is Dot, a standalone open source app meant for easy use of local LLMs and RAG in particular to interact with documents and files similarly to Nvidia's Chat with RTX. Dot itself is completely standalone and is packaged with all dependencies including a copy of Mistral 7B, this is to ensure the app is as accessible as possible and no prior knowledge of programming or local LLMs is required to use it. You can install the app (available for Apple Silicon and Windows) here: <a href="https://dotapp.uk/" rel="nofollow">Dot website </a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">What does it do?</h3><a id="user-content-what-does-it-do" aria-label="Permalink: What does it do?" href="#what-does-it-do"></a></p>
<p dir="auto">Dot can be used to load multiple documents into an llm and interact with them in a fully local environment through Retrieval Augmented Generation (RAG), supported documents are: pdf, docx, pptx, xlsx, and markdown. Apart from RAG, users can also switch to Big Dot for any interactions unrelated to their documents similarly to ChatGPT.</p>
<details open="">
  <summary>
    
    <span aria-label="Video description Screen.Recording.2024-02-19.at.15.37.57.mov">Screen.Recording.2024-02-19.at.15.37.57.mov</span>
    <span></span>
  </summary>

  <video src="https://private-user-images.githubusercontent.com/93524949/320215432-807fb58c-40e0-407e-afb3-a3813477ce9e.mov?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTI1MDIzMDcsIm5iZiI6MTcxMjUwMjAwNywicGF0aCI6Ii85MzUyNDk0OS8zMjAyMTU0MzItODA3ZmI1OGMtNDBlMC00MDdlLWFmYjMtYTM4MTM0NzdjZTllLm1vdj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDA3VDE1MDAwN1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTA0OGRjM2U1YmM5ZjU2M2M5ZmRiMDA0ZDk2MzE0ODQyZGU3ODQwYWU3OTdhMDY5ODUzZGY5MWRmYTBiMzM0MDQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.vvAGb7V2EtmOEAUxjAJSjMTyBAzCerGob8xlpRgACek" data-canonical-src="https://private-user-images.githubusercontent.com/93524949/320215432-807fb58c-40e0-407e-afb3-a3813477ce9e.mov?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTI1MDIzMDcsIm5iZiI6MTcxMjUwMjAwNywicGF0aCI6Ii85MzUyNDk0OS8zMjAyMTU0MzItODA3ZmI1OGMtNDBlMC00MDdlLWFmYjMtYTM4MTM0NzdjZTllLm1vdj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDA3VDE1MDAwN1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTA0OGRjM2U1YmM5ZjU2M2M5ZmRiMDA0ZDk2MzE0ODQyZGU3ODQwYWU3OTdhMDY5ODUzZGY5MWRmYTBiMzM0MDQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.vvAGb7V2EtmOEAUxjAJSjMTyBAzCerGob8xlpRgACek" controls="controls" muted="muted">

  </video>
</details>

<p dir="auto"><h3 tabindex="-1" dir="auto">How does it work?</h3><a id="user-content-how-does-it-work" aria-label="Permalink: How does it work?" href="#how-does-it-work"></a></p>
<p dir="auto">Dot is built with Electron JS, but its main functionalities come from a bundled install of Python that contains all libraries and necessary files. A multitude of libraries are used to make everything work, but perhaps the most important to be aware of are: llama.cpp to run the LLM, FAISS to create local vector stores, and Langchain &amp; Huggingface to setup the conversation chains and embedding process.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Install</h3><a id="user-content-install" aria-label="Permalink: Install" href="#install"></a></p>
<p dir="auto">You can either install the packaged app in the <a href="https://dotapp.uk/" rel="nofollow">Dot website </a> or can set up the project for development, to do so follow these steps:</p>
<ul dir="auto">
<li>Clone the repository <code>$ https://github.com/alexpinel/Dot.git</code></li>
<li>Install Node js and then run <code>npm install</code> inside the project repository, you can run <code>npm install --force</code> if you face any issues at this stage</li>
</ul>
<p dir="auto">Now, it is time to add a full python bundle to the app. The purpose of this is to create a distributable environment with all necessary libraries, if you only plan on using Dot from the console you might not need to follow this particular step but then make sure to replace the python path locations specified in <code>src/index.js</code>. Creating the python bundle is covered in detail here: <a href="https://til.simonwillison.net/electron/python-inside-electron" rel="nofollow">https://til.simonwillison.net/electron/python-inside-electron</a> , the bundles can also be installed from here: <a href="https://github.com/indygreg/python-build-standalone/releases/tag/20240224">https://github.com/indygreg/python-build-standalone/releases/tag/20240224</a></p>
<p dir="auto">Having created the bundle, please rename it to 'python' and place it inside the <code>llm</code> directory. It is now time to get all necessary libraries, keep in mind that running a simple <code>pip install</code> will not work without specifying the actual path of the bundle so use this instead: <code>path/to/python/.bin/or/.exe -m pip install</code></p>
<p dir="auto">Required python libraries:</p>
<ul dir="auto">
<li>pytorch <a href="https://pytorch.org/get-started/locally/" rel="nofollow">link</a> (CPU version recommended as it is lighter than GPU)</li>
<li>langchain <a href="https://python.langchain.com/docs/get_started/quickstart" rel="nofollow">link</a></li>
<li>FAISS <a href="https://python.langchain.com/docs/integrations/vectorstores/faiss" rel="nofollow">link</a></li>
<li>HuggingFace <a href="https://python.langchain.com/docs/integrations/platforms/huggingface" rel="nofollow">link</a></li>
<li>llama.cpp <a href="https://github.com/abetlen/llama-cpp-python">link</a> (Use CUDA implementation if you have an Nvidia GPU!)</li>
<li>pypdf <a href="https://python.langchain.com/docs/modules/data_connection/document_loaders/pdf" rel="nofollow">link</a></li>
<li>docx2txt <a href="https://python.langchain.com/docs/integrations/document_loaders/microsoft_word" rel="nofollow">link</a></li>
<li>Unstructured <a href="https://github.com/Unstructured-IO/unstructured">link</a> (Use <code>pip install "unstructured[pptx, md, xlsx]</code> for the file formats)</li>
</ul>
<p dir="auto">Now python should be setup and running! However, there is still a few more steps left, now is the time to add the final magic to Dot! First, create a folder inside the <code>llm</code> directory and name it <code>mpnet</code>, there you will need to install sentence-transformers to use for the document embeddings, fetch all the files from the following link and place them inside the new folder: <a href="https://huggingface.co/sentence-transformers/all-mpnet-base-v2/tree/main" rel="nofollow">sentence-transformers/all-mpnet-base-v2</a></p>
<p dir="auto">Finally, download the Mistral 7B LLM from the following link and place it inside the <code>llm/scripts</code> directory alongside the python scripts used by Dot: <a href="https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.2-GGUF/blob/main/mistral-7b-instruct-v0.2.Q4_K_M.gguf" rel="nofollow">TheBloke/Mistral-7B-Instruct-v0.2-GGUF</a></p>
<p dir="auto">That's it! If you follow these steps you should be able to get it all running, please let me know if you are facing any issues :)</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Future features I'd like to add:</h3><a id="user-content-future-features-id-like-to-add" aria-label="Permalink: Future features I'd like to add:" href="#future-features-id-like-to-add"></a></p>
<ul dir="auto">
<li>Linux support</li>
<li>Ability to choose LLM</li>
<li>Image support would be cool</li>
<li>Increased awarnes of documents apart from merely their content</li>
<li>Loading individual files instead of selecting a folder  (This is really needed, some users get confused by this and I cannot blame them at all)</li>
<li>Increased security considerations, after all this is the whole point of using a local LLM</li>
<li>Support for more docs</li>
<li>Storing file databases, allowing users to quickly switch between groups of files without having to load them all again</li>
<li>idk, will find out along the way</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Want to help?</h2><a id="user-content-want-to-help" aria-label="Permalink: Want to help?" href="#want-to-help"></a></p>
<p dir="auto">Please do! I am a busy student working on this as a side project so help is more than welcome!</p>
</article></div></div>]]></description>
        </item>
    </channel>
</rss>