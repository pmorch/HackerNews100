<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 15 Nov 2024 10:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Relativty: An open-source VR headset for $200 (211 pts)]]></title>
            <link>https://www.relativty.com/</link>
            <guid>42143269</guid>
            <pubDate>Fri, 15 Nov 2024 01:55:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.relativty.com/">https://www.relativty.com/</a>, See on <a href="https://news.ycombinator.com/item?id=42143269">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>I’m Maxim Perumal (<a href="https://twitter.com/maxim_xyz" target="_blank">Maxim xyz</a>) and when my best friend Gabriel Combe and I were 15 years old we built our own VR headset because we couldn't afford to buy one. It became Relativty, one of the most popular open-source VR headset.</p></div><div><h2><strong>Make it for $200</strong></h2><p>Relativty is not a consumer product. We made Relativty in my bedroom with a soldering iron and a 3D printer and we expect you to do the same: build it yourself.</p></div><div><h2>Software</h2><div><div><p><img src="https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ad85ffae60ef35d946_front-700.jpg" loading="lazy" sizes="(max-width: 479px) 93vw, (max-width: 736px) 95vw, (max-width: 991px) 700px, 67vw" srcset="https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ad85ffae60ef35d946_front-700-p-500.jpeg 500w, https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ad85ffae60ef35d946_front-700.jpg 700w" alt=""></p><h2><strong>Full Steam VR support</strong></h2><p>We started Relativty because after watching Sword Art Online we wanted to make our own VR games. Thus Relativty supports SteamVR games and can be modified to add support for any DIY or off-the-shelf VR device.</p></div><div><p><img src="https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824adc6b5996113a3c997_open-700.jpg" loading="lazy" sizes="(max-width: 479px) 93vw, (max-width: 736px) 95vw, (max-width: 991px) 700px, 67vw" srcset="https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824adc6b5996113a3c997_open-700-p-500.jpeg 500w, https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824adc6b5996113a3c997_open-700.jpg 700w" alt=""></p><h2><strong>Experimental positional-scaling</strong></h2><p>The room-scaling AI can be used with any camera, it tracks your body based on video input. Precision and freedom of movement are still very far from dedicated sensors, however, we believe that the model can be trained and improved by orders of magnitude.</p></div></div></div><div><h2><strong>Motherboard</strong></h2><p>We designed an affordable motherboard that runs the Relativty Firmware, it is based on the Atmel SAM3X8E ARM Cortex-M3 processor and uses an MPU-6050 as it’s IMU. The naked PCB and the components to solder on, cost in total about 25 dollars.</p><p><img src="https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ad625ae2be44e0c54d_motherboard-700.jpg" loading="lazy" sizes="(max-width: 479px) 95vw, 40vw" srcset="https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ad625ae2be44e0c54d_motherboard-700-p-500.jpeg 500w, https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ad625ae2be44e0c54d_motherboard-700.jpg 700w" alt=""></p></div><div><h2>Firmware &amp; Display</h2><div><div><p><img src="https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ada869ad7028b53e79_card-700.jpg" loading="lazy" sizes="(max-width: 479px) 93vw, (max-width: 736px) 95vw, (max-width: 991px) 700px, 67vw" srcset="https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ada869ad7028b53e79_card-700-p-500.jpeg 500w, https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ada869ad7028b53e79_card-700.jpg 700w" alt=""></p><h2><strong>Relativty Firmware runs on any ARM sam</strong></h2><p>The Relativty firmware, which powers the actual physical device, is based on ArduinoCore-sam. So in addition to the Relativty Motherboard, it is compatible with Arduino Due or any other board equipped with a processor that supports the ArduinoCore.</p></div><div><p><img src="https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ad16a15523f9e5c980_display-700.jpg" loading="lazy" sizes="(max-width: 479px) 93vw, (max-width: 736px) 95vw, (max-width: 991px) 700px, 67vw" srcset="https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ad16a15523f9e5c980_display-700-p-500.jpeg 500w, https://uploads-ssl.webflow.com/5f57b1e7e28c685a1ffd2900/5f5824ad16a15523f9e5c980_display-700.jpg 700w" alt=""></p><h2><strong>120FPS at 2K or any display you want</strong></h2><p>Relativty headset runs a 2K dual-display at 120FPS. However, because of the open nature of Relativty you can use any display as long as your computer is able to handle it. From more affordable 90Hz 1080p screen to 4K panels.</p></div></div></div><div><h2>Getting started</h2><p>Relativty is entirely Open-source; we made it to be a testing ground for hackers and developer rather than a product. You can find the source code as well as the source for the electronics, hardware, and mechanical parts on our Github. The guide on how to build Relativty is available on our Github. You can download the latest release here.</p></div><div><h2><strong>Join our Discord server</strong></h2><p>To talk to other VR enthusiast, ask for help building the headset or provide experience to others!</p></div><div><h2>We are hiring</h2><p>We are starting a new company called <a href="https://www.unai.one/"><strong>Unai</strong></a>, building a new standalone VR headset from the ground-up and, alongside, the OS and Virtual World powering it. Our end goal is to solve immersiveness. This poses challenges in fields ranging from optics, computer vision, electrical design, low-level OS, game engine and many more.<br>‍<br>We are currently hiring people willing to help solve those challenges. If you are one of those people, please reach out at <strong>maxim@unai.one.<p>‍</p></strong>Please visit <a href="https://www.unai.one/"><strong>unai.one</strong></a> to learn more and <a href="https://www.unai.one/jobs"><strong>jobs</strong></a> see available positions.</p></div><!--[if lte IE 9]><script src="//cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]--></div>]]></description>
        </item>
        <item>
            <title><![CDATA[New Apple security feature reboots iPhones after 3 days, researchers confirm (242 pts)]]></title>
            <link>https://techcrunch.com/2024/11/14/new-apple-security-feature-reboots-iphones-after-3-days-researchers-confirm/</link>
            <guid>42143265</guid>
            <pubDate>Fri, 15 Nov 2024 01:55:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://techcrunch.com/2024/11/14/new-apple-security-feature-reboots-iphones-after-3-days-researchers-confirm/">https://techcrunch.com/2024/11/14/new-apple-security-feature-reboots-iphones-after-3-days-researchers-confirm/</a>, See on <a href="https://news.ycombinator.com/item?id=42143265">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p id="speakable-summary">Apple’s new iPhone software comes with a novel security feature that reboots the phone if it’s not unlocked for 72 hours, according to security researchers.</p>

<p>Last week, <a rel="nofollow" href="https://www.404media.co/police-freak-out-at-iphones-mysteriously-rebooting-themselves-locking-cops-out/">404 Media reported</a> that law enforcement officers and forensic experts were concerned that some iPhones were rebooting themselves under mysterious circumstances, which made it harder for them to get access to the devices and extract data. Citing security researchers, 404 Media <a href="https://www.404media.co/police-freak-out-at-iphones-mysteriously-rebooting-themselves-locking-cops-out/" target="_blank" rel="noreferrer noopener nofollow">later reported</a> that iOS 18 had a new “inactivity reboot” feature that forced the devices to restart.&nbsp;</p>







<p>Now we know exactly how long it takes for this feature to kick in.</p>

<p>On Wednesday, Jiska Classen, a researcher at the Hasso Plattner Institute and one of the first security experts to spot this new feature, <a href="https://x.com/naehrdine/status/1856802400897503487" target="_blank" rel="noreferrer noopener nofollow">published a video</a> demonstrating the “inactivity reboot” feature. The video shows that an iPhone left alone without being unlocked reboots itself after 72 hours.</p>

<figure><div>
<blockquote data-width="500" data-dnt="true"><div lang="en" dir="ltr"><p>See the latest iOS inactivity reboot in action!</p><p>iOS 18 comes with improved anti-theft measures. Three days w/o unlock, the iPhone will reboot, preventing thieves from getting your data. (1/4) <a rel="nofollow" href="https://t.co/H24Tfo1cSr">pic.twitter.com/H24Tfo1cSr</a></p></div>— Jiska (@naehrdine) <a rel="nofollow" href="https://twitter.com/naehrdine/status/1856802400897503487?ref_src=twsrc%5Etfw">November 13, 2024</a></blockquote>
</div></figure>

<p>Magnet Forensics, a company that provides digital forensic products including the iPhone and Android data extraction tool Graykey, <a href="https://www.magnetforensics.com/blog/understanding-the-security-impacts-of-ios-18s-inactivity-reboot/" target="_blank" rel="noreferrer noopener nofollow">also confirmed</a> that the timer for the feature is 72 hours.&nbsp;&nbsp;</p>

<p>“Inactivity reboot” effectively puts iPhones in a more secure state by locking the user’s encryption keys in the iPhone’s secure enclave chip.&nbsp;</p>

<p>“Even if thieves leave your iPhone powered on for a long time, they won’t be able to unlock it with cheaper, outdated forensic tooling,” Classen wrote on X. “While inactivity reboot makes it more challenging for law enforcement to get data from devices of criminals, this won’t lock them out completely. Three days is still plenty of time when coordinating steps with professional analysts.”</p>

<div>
			<h4>Contact Us</h4><p>
			Do you work for a mobile forensics company or law enforcement? We’d love to hear from you. From a non-work device, you can contact Lorenzo Franceschi-Bicchierai securely on Signal at +1 917 257 1382, or via Telegram and Keybase @lorenzofb, or <a href="mailto:lorenzo@techcrunch.com/">email</a><a href="mailto:lorenzo@techcrunch.com/">.</a> You also can contact TechCrunch via <a href="https://techcrunch.com/got-a-tip/">SecureDrop</a>.		</p></div>
		

<p>iPhones have two different states that can affect the ability of law enforcement, forensic experts, or hackers, to unlock them by brute-forcing the user’s passcode, or extracting data by exploiting security flaws in the iPhone software. These two states are “Before First Unlock,” or BFU, and “After First Unlock,” or AFU. </p>

<p>When the iPhone is in BFU state, the user’s data on their iPhone is fully encrypted and near-impossible to access, unless the person trying to get in knows the user’s passcode. In AFU state, on the other hand, certain data is unencrypted and may be easier to extract by some device forensic tools — even if the phone is locked.&nbsp;</p>

<p>An iPhone security researcher who goes by Tihmstar told TechCrunch that the iPhones in those two states are also referred to as “hot” or “cold” devices.&nbsp;</p>







<p>Tihmstar said that many forensic companies focus on “hot” devices in an AFU state, because at some point the user entered their correct passcode, which is stored in the memory of the iPhone’s secure enclave. By contrast, “cold” devices are far more difficult to compromise because their memory cannot be easily extracted once the phone restarts.</p>

<p>For years, Apple has added new security features that <a href="https://techcrunch.com/2020/05/22/the-fbi-is-mad-because-it-keeps-getting-into-locked-iphones-without-apples-help/">law enforcement have opposed and spoken out against</a>, arguing that they are making their job harder. In 2016, the <a href="https://techcrunch.com/2016/03/13/why-apple-is-right-to-resist-the-fbi/">FBI took Apple to court</a> in an effort to force the company to build a backdoor to unlock the iPhone of a mass-shooter. Eventually, the Australian startup Azimuth Security <a href="https://www.washingtonpost.com/technology/2021/04/14/azimuth-san-bernardino-apple-iphone-fbi/" target="_blank" rel="noreferrer noopener nofollow">helped the FBI</a> hack into the phone.&nbsp;</p>

<p>Apple did not respond to a request for comment.&nbsp;</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Matrix Client Tutorial (112 pts)]]></title>
            <link>https://uhoreg.gitlab.io/matrix-tutorial/index.html</link>
            <guid>42142790</guid>
            <pubDate>Fri, 15 Nov 2024 00:26:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://uhoreg.gitlab.io/matrix-tutorial/index.html">https://uhoreg.gitlab.io/matrix-tutorial/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=42142790">Hacker News</a></p>
<div id="readability-page-1" class="page"><article role="main">
<section id="matrix-client-tutorial">

<div>
<p>Warning</p>
<p>This book is a work in progress.  Most of the information that it contains
should be correct, but it is not complete.</p>
</div>
<p>Welcome to the Matrix.  <a href="https://matrix.org/" rel="nofollow noopener">Matrix</a> is an open protocol for
decentralised communication.  Matrix allows users on different servers to
communicate with each other, similar to how people on different email servers
can email each other.</p>
<p>This book is an introduction to creating a client using the <a href="https://spec.matrix.org/unstable/client-server-api/#" rel="nofollow noopener">Matrix
Client-Server API</a>.  It will show how to make HTTP
calls to a Matrix homeserver, and discuss issues that clients will need to
consider, such as reliability and security issues.  It does not attempt to be a
comprehensive guide to the entire Client-Server API, but will point you to the
relevant portions of spec for further details.</p>
<p>You should read this book if:</p>
<ul>
<li><p>you are creating a Matrix library/SDK,</p></li>
<li><p>you are writing a Matrix client without the use of a library/SDK, or</p></li>
<li><p>you want to get a better understanding of how Matrix works.</p></li>
</ul>
<p>If you are creating a Matrix client using a library/SDK, some of the
information in this book may still be useful, but some things will already be
handled by your library/SDK.</p>
<p>We assume that you have:</p>
<ul>
<li><p>an understanding of JSON encoding,</p></li>
<li><p>an understanding of HTTP requests, including HTTP status codes, headers, and
different types of requests (<code>GET</code>, <code>POST</code>, etc.),</p></li>
<li><p>experience writing asynchronous code in your preferred programming language.</p></li>
</ul>
<p>This book is written in a <a href="https://en.wikipedia.org/wiki/Literate_programming" rel="nofollow noopener">literate
programming</a> style, which
interleaves code blocks and text.  In short, code blocks are named, and can
reference other code blocks using the syntax <code>{{other code block name}}</code>, which
will insert the code blocks with the given name in place of the reference.
Multiple code blocks can have the same name, in which case they are inserted in
the order that they appear in the book (though in many cases, the order does
not matter).  This allows us to, for example, have a reference such as <code>{{class Foo methods}}</code>, and define the methods of the <code>Foo</code> class in multiple chunks.</p>
<p>The code output of this book will be a library that a Matrix client could use.
The actual user interface for a client is out of scope for this book, although
for some topics, there may be discussion on how clients may wish to display
things to the user.</p>
<p>The code is written in Python using <a href="https://docs.aiohttp.org/" rel="nofollow noopener"><code>aiohttp</code></a>, but
the rest of the content should apply any other programming languages and most
of the code should be easy to port to another language.</p>
<div>
<p>Note</p>
<p>The main purpose of the example code here is to illustrate how the Matrix
Client-Server API is used, rather than to develop a fully-featured library.
While the library generated should be usable for simple situations, it may make
some tradeoffs differently from what a “real” Matrix library would make.  These
tradeoffs will be discussed in the text where appropriate.</p>
</div>
<p>The source for this book, including the example code, is available at
<a href="https://gitlab.com/uhoreg/matrix-tutorial" rel="nofollow noopener">https://gitlab.com/uhoreg/matrix-tutorial</a>.  We will call our Matrix library
the very unimaginative name <code>matrixlib</code>.</p>
<div data-controller="code"><pre><code><span># {{copyright}}</span>

<span>"""Matrix client library example"""</span>
</code></pre></div>
<p>The main entry point for our library will be a <code>client</code> module.  It will
contain helper functions and a <a href="https://uhoreg.gitlab.io/matrix-tutorial/client.html"><span><code>Client</code> class</span></a>, representing a
client connection.</p>
<div data-controller="code"><pre><code><span># {{copyright}}</span>

<span>"""General Matrix client functionality"""</span>

<span>import</span> <span>aiohttp</span>
<span>import</span> <span>asyncio</span>
<span>import</span> <span>logging</span>
<span>import</span> <span>math</span>
<span>import</span> <span>os</span>
<span>import</span> <span>re</span>
<span>import</span> <span>sys</span>
<span>import</span> <span>time</span>
<span>import</span> <span>typing</span>
<span>from</span> <span>urllib.parse</span> <span>import</span> <span>quote</span> <span>as</span> <span>urlquote</span><span>,</span> <span>urljoin</span><span>,</span> <span>urlparse</span>

<span>from</span> <span>.</span> <span>import</span> <span>error</span>
<span>from</span> <span>.</span> <span>import</span> <span>events</span>
<span>from</span> <span>.</span> <span>import</span> <span>pubsub</span>
<span>from</span> <span>.</span> <span>import</span> <span>schema</span>


<span>{{</span><span>client</span> <span>module</span> <span>classes</span><span>}}</span>


<span>{{</span><span>client</span> <span>module</span> <span>functions</span><span>}}</span>
</code></pre></div>
<p>In the first chapter of this book, we will discover the basics of the Matrix
Client-Server API.  We will learn how to make requests to the homeserver, log
in and out, and send and receive messages.  Using this, we will create a simple
echo bot.</p>
<div>
<p role="heading"><span>The basics</span></p>
<ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/base.html">Base concepts</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/base.html#api-requests">API Requests</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/discovery.html">Discovery</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/discovery.html#example-discovery-script">Example: Discovery script</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/client.html">The Client class</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/client.html#publish-subscribe">Publish/Subscribe</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/login.html">Logging in</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/login.html#logging-in-with-a-password">Logging in with a password</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/login.html#single-sign-on">Single Sign-On</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/login.html#example-login-script">Example: login script</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/authentication.html">Authenticated requests</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/authentication.html#refresh-tokens">Refresh tokens</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/authentication.html#soft-logout">Soft logout</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/authentication.html#logging-out">Logging out</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/authentication.html#example-logout-script">Example: logout script</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/events.html">Events</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/events.html#message-events">Message events</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/events.html#state-events">State events</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/sending.html">Sending events to a room</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/sending.html#message-events">Message events</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/sending.html#example-send-a-message">Example: send a message</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/sending.html#state-events">State events</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/sync.html">Receiving events in a room: the sync loop</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/sync.html#receiving-room-events">Receiving room events</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/sync.html#example-echo-bot">Example: echo bot</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/sync.html#tracking-room-state">Tracking room state</a></li>
</ul>
</li>
</ul>
</div>
<p>In the second(?) chapter, we will look at how to perform end-to-end encryption
in Matrix.  We will extend the echo bot from the previous part so that it works
in encrypted rooms.  If you do not need encryption, you may skip this part.</p>
<div>
<p role="heading"><span>End-to-end encryption</span></p>
<ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/encryption.html">End-to-end encryption</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/encryption.html#a-brief-history-of-encryption">A brief history of encryption</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/encryption.html#usability-issues">Usability issues</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/encryption.html#handling-secure-data">Handling secure data</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/encryption.html#olm-and-megolm">Olm and Megolm</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/device_keys.html">Device keys and one-time keys</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/device_keys.html#uploading-device-keys">Uploading device keys</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/device_keys.html#signing-json">Signing JSON</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/device_keys.html#uploading-one-time-and-fallback-keys">Uploading one-time and fallback keys</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/device_tracking.html">Device Tracking</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/device_tracking.html#edge-cases">Edge cases</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/megolm.html">Encrypting with Megolm</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/megolm.html#getting-the-session-key-for-sending-to-recipients">Getting the session key for sending to recipients</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/megolm.html#encrypting">Encrypting</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/megolm.html#decrypting">Decrypting</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/olm.html">Encrypting with Olm</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/olm.html#initiating-a-channel">Initiating a channel</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/olm.html#encrypting">Encrypting</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/olm.html#decrypting">Decrypting</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/olm.html#loading-a-channel-from-storage">Loading a channel from storage</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/olm.html#claiming-one-time-keys">Claiming one-time keys</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/to_device.html">Sending and receiving to-device events</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/to_device.html#sending-events">Sending events</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/to_device.html#receiving-events">Receiving events</a></li>
</ul>
</li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/tying_together_megolm.html">Tying together the Olm/Megolm pieces</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/tying_together_megolm.html#decrypting-to-device-events">Decrypting to-device events</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/tying_together_megolm.html#decrypting-room-events">Decrypting room events</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/tying_together_megolm.html#checking-if-a-encryption-is-enabled">Checking if a encryption is enabled</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/tying_together_megolm.html#encrypting-to-device-events">Encrypting to-device events</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/tying_together_megolm.html#encrypting-room-events">Encrypting room events</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/tying_together_megolm.html#example-encrypted-echo-bot">Example: encrypted echo bot</a></li>
</ul>
</li>
</ul>
</div>
<div id="id1">
<p>Todo</p>
<p>more topics, e.g.</p>
<ul>
<li><p>media repo</p>
<ul>
<li><p>URL previews</p></li>
</ul>
</li>
<li><p>user management</p>
<ul>
<li><p>registering</p></li>
<li><p>device management</p></li>
<li><p>displayname, avatar</p></li>
<li><p>3PIDs</p></li>
</ul>
</li>
<li><p>interacting with rooms</p>
<ul>
<li><p>create room</p></li>
<li><p>room versions and upgrades</p></li>
<li><p>spaces</p></li>
<li><p>room tags</p></li>
<li><p>room directory</p></li>
<li><p>DMs</p></li>
<li><p>invites, knocking</p></li>
<li><p>security issues</p>
<ul>
<li><p>disambiguation, homographs</p></li>
</ul>
</li>
</ul>
</li>
<li><p>more messaging features</p>
<ul>
<li><p>reactions</p></li>
<li><p>edits</p></li>
<li><p>redactions</p></li>
<li><p>IM features (mentions, spoilers, etc)</p></li>
<li><p>typing notifications</p></li>
<li><p>read receipts</p></li>
<li><p>presence</p></li>
</ul>
</li>
<li><p>more on getting events</p>
<ul>
<li><p>navigating within rooms (backfilling, jumping to a message, how to handle having
multiple chunks of timeline)</p></li>
<li><p>sync filtering, lazy loading</p></li>
<li><p>push rules/notifications</p></li>
</ul>
</li>
<li><p>VoIP</p></li>
<li><p>widgets</p></li>
<li><p>how to test</p></li>
<li><p>what client authors need to understand about federation</p></li>
</ul>
</div>
<div>
<p role="heading"><span>Appendices</span></p>
<ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/module_doc.html">Module documentation</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/further_reading.html">Further reading</a><ul>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/further_reading.html#general">General</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/further_reading.html#security">Security</a></li>
<li><a href="https://uhoreg.gitlab.io/matrix-tutorial/further_reading.html#encryption">Encryption</a></li>
</ul>
</li>
</ul>
</div>
<div data-controller="code"><pre><code>Copyright Hubert Chathi &lt;hubert@uhoreg.ca&gt;

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
</code></pre></div>
<p>The theme used is based on <a href="https://sphinxawesome.xyz/" rel="nofollow noopener">Awesome Sphinx Theme</a>
by Kai Welke.  The main text is set in <a href="https://rsms.me/inter/" rel="nofollow noopener">Inter</a> by
Rasmus Andersson, with <a href="https://github.com/mozilla/Fira" rel="nofollow noopener">Fira Mono</a> by Erik
Spiekermann and Ralph du Carrois used for monospaced text.</p>
</section>
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Analysis of economic and productivity losses caused by cookie banners in Europe (254 pts)]]></title>
            <link>https://legiscope.com/blog/hidden-productivity-drain-cookie-banners.html</link>
            <guid>42141843</guid>
            <pubDate>Thu, 14 Nov 2024 22:23:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://legiscope.com/blog/hidden-productivity-drain-cookie-banners.html">https://legiscope.com/blog/hidden-productivity-drain-cookie-banners.html</a>, See on <a href="https://news.ycombinator.com/item?id=42141843">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Cookie banners have become a pervasive feature of the modern web, frustrating users who seek a seamless browsing experience. In Europe, consent banners are mandated by an old directive from 2002, the <a href="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=celex%3A32002L0058">ePrivacy Directive 2002/58</a>, which requires websites to obtain informed consent before storing or accessing information on users’ devices. While the intention behind these regulations is to enhance privacy protection, the actual impact on user privacy is insignificant, as most cookie banners are used to facilitate web analytics, understand user behavior, manage ad efficiency, or keyword traffic. Moreover, actively tracking a user beyond their visit to a website is difficult or borderline impossible for website owners, as it would require a court order.</p>
<p>Understanding the true cost of these consent prompts in the European economy is therefore necessary. Our calculations reveal that collectively, Europeans <strong>spend over 575 million hours annually on consent prompts</strong>. At a time when the European economy faces significant challenges in competitiveness compared to the US and China <a href="https://www.youtube.com/watch?v=Ias1Glgi5SE">as recently highlighted by President Macron</a>, it is crucial to examine the data and the legal framework that underpins these requirements.</p>
<h2>The Productivity Cost of Cookie Banners</h2>
<p>To grasp the profound impact of cookie banners on European productivity and the economy, we need to break down the calculations. Starting with the total population of the European Union in 2024, which is approximately <a href="https://ec.europa.eu/eurostat/web/products-eurostat-news/w/ddn-20240711-1">449.2 million people</a>, we assume an <a href="https://ec.europa.eu/eurostat/statistics-explained/index.php?title=Digital_society_statistics_at_regional_level&amp;oldid=630715#:~:text=In%202023%2C%20the%20share%20of,or%20in%20cities%20(94.9%25).">internet penetration rate of around 90%</a>, resulting in 404.28 million internet users.</p>
<p>On average, a user visits <a href="https://bloggingwizard.com/website-statistics/#:~:text=On%20average%20internet%20users%20in,pages%20on%20a%20daily%20basis.">about 100 websites per month</a>, totaling 1,200 websites per year. With about 85% of these websites displaying a cookie banner, a user will encounter about 1,020 cookie banners every year. Assuming it takes an average of 5 seconds per interaction with a cookie banner, this amounts to 5,100 seconds per year per user, or roughly 1.42 hours per year.</p>
<p>Multiplying this by the total number of internet users in the EU, we reach the following total time: 404.28 million users × 1.42 hours/year ≈ <strong>575 million hours/year</strong>.</p>
<p>Below is an estimated distribution based on population and internet usage rates:</p>
<table>
<thead>
<tr>
<th>Country</th>
<th>Population (millions)</th>
<th>Internet Users (millions)</th>
<th>Annual Hours Spent (millions)</th>
<th>Total Cost (€ Billion)</th>
</tr>
</thead>
<tbody>
<tr>
<td>Germany</td>
<td>84</td>
<td>75.6</td>
<td>107.35</td>
<td>2.68</td>
</tr>
<tr>
<td>France</td>
<td>68</td>
<td>61.2</td>
<td>86.85</td>
<td>2.17</td>
</tr>
<tr>
<td>Italy</td>
<td>59</td>
<td>53.1</td>
<td>75.37</td>
<td>1.88</td>
</tr>
<tr>
<td>Spain</td>
<td>47</td>
<td>42.3</td>
<td>60.04</td>
<td>1.50</td>
</tr>
<tr>
<td>Poland</td>
<td>38</td>
<td>34.2</td>
<td>48.57</td>
<td>1.21</td>
</tr>
<tr>
<td>Netherlands</td>
<td>17</td>
<td>15.3</td>
<td>21.73</td>
<td>0.54</td>
</tr>
<tr>
<td>Belgium</td>
<td>12</td>
<td>10.8</td>
<td>15.34</td>
<td>0.38</td>
</tr>
<tr>
<td>Sweden</td>
<td>11</td>
<td>9.9</td>
<td>14.07</td>
<td>0.35</td>
</tr>
<tr>
<td>Austria</td>
<td>9</td>
<td>8.1</td>
<td>11.50</td>
<td>0.29</td>
</tr>
<tr>
<td>Other Countries</td>
<td>104.2</td>
<td>93.78</td>
<td>134.18</td>
<td>3.35</td>
</tr>
<tr>
<td><strong>Total</strong></td>
<td><strong>449.2</strong></td>
<td><strong>404.28</strong></td>
<td><strong>575.0</strong></td>
<td><strong>14.35</strong></td>
</tr>
</tbody>
</table>
<p><em>Note: “Other Countries” encompass the remaining European Union nations.</em></p>
<p>To translate the lost time into economic terms, we can assign a monetary value to the hours spent on cookie banners. With an average hourly wage in Europe of €25, the total economic cost can be calculated as 575,000,000 hours × €25/hour = <strong>€14.375 billion</strong>. Considering the EU Annual GDP (2024) of approximately €15 trillion, the economic cost of cookie banners represents: (€14.375 billion ÷ €15 trillion) × 100 ≈ <strong>0.10% of total EU GDP</strong>.</p>
<p>To grasp the scale of the productivity loss, we can consider the number of full-time employees (FTEs) that represent the lost hours. Assuming a full-time worker dedicates approximately 2,000 hours annually, 575,000,000 hours ÷ 2,000 hours/FTE = <strong>287,500 FTEs</strong>. This means the <strong>overall cost of clicking on cookie banners is equivalent to a company of 287,500 employees spending an 8-hour workday clicking on cookie banners</strong>.</p>
<h2>Do Cookie Banners Really Improve Privacy?</h2>
<p>Contrary to popular belief, cookie banners were not introduced by the GDPR but by the <a href="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=celex%3A32002L0058">ePrivacy Directive 2002/58</a>, at a time when cookies were just becoming known to the public. In response to fears of global surveillance, regulators imposed a general principle of consent before any data could be stored on a user’s communication devices:</p>
<blockquote>
<p><em>“Art. 5.3: Member States shall ensure that the use of electronic communications networks to store information or to gain access to information stored in the terminal equipment of a subscriber or user is only allowed on condition that the subscriber or user concerned is provided with clear and comprehensive information in accordance with Directive 95/46/EC, inter alia about the purposes of the processing, and is offered the right to refuse such processing by the data controller.”</em></p>
</blockquote>
<p>The ePrivacy Directive was intended to be updated, but the project never materialized.</p>
<p>Today, most cookie banners are used by organizations to:</p>
<ul>
<li>Facilitate web analytics and understand user interactions with their websites.</li>
<li>Improve user experience by analyzing what content performs well or poorly.</li>
<li>Manage the performance of advertisements.</li>
</ul>
<p>For the most part, small businesses use cookies efficiently without precise user identification. Identifying users typically requires a court order to process IP addresses, which is rarely pursued. Therefore, cookie banners primarily serve to mitigate theoretical legal risks rather than enforce extensive user tracking.</p>
<p>It is not to say that some businesses do not use cookies to operate user tracking on a massive scale. Some companies relying exclusively on advertising do share user data with very large pools of partners—sometimes hundreds of ad partners. In that case, cookie banners do offer privacy protections for users.</p>
<p>However, looking at the general scale of the internet, only a very small fraction of websites use mass-scale partnerships as their main economic model.</p>
<p>For users, repeated interactions with cookie banners lead to significant frustration and complete loss of vigilance. The consent fatigue results in users mindlessly accepting terms without proper consideration, thereby undermining the very intent of the regulations. The constant barrage of consent prompts not only reduces productivity but diminishes user satisfaction and erodes trust in online platforms.</p>
<h2>Conclusion</h2>
<p>The realization that <strong>Europeans spend 575 million hours annually clicking on cookie banners</strong> highlights a significant, yet often overlooked, economic and productivity drain. These processes deliver minimal privacy benefits and little enhancement to business performance.</p>
<p>In contrast, regulations like the <a href="https://eur-lex.europa.eu/eli/reg/2016/679/oj">GDPR</a> impose IT security obligations that, while seen as burdensome, contribute to long-term business robustness by ensuring the security of IT systems.</p>
<p>This situation calls for an urgent revision of the ePrivacy Directive—potentially transforming it into a regulation to ensure swift adoption. Exemptions from cookie banners for small and medium-sized businesses (SMBs) using analytics, tracking user interactions on their websites, and managing basic advertising are imperative to mitigate unnecessary economic and productivity losses.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[In Memoriam: Thomas E. Kurtz, 1928–2024 (159 pts)]]></title>
            <link>https://computerhistory.org/blog/in-memoriam-thomas-e-kurtz-1928-2024/</link>
            <guid>42141761</guid>
            <pubDate>Thu, 14 Nov 2024 22:12:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://computerhistory.org/blog/in-memoriam-thomas-e-kurtz-1928-2024/">https://computerhistory.org/blog/in-memoriam-thomas-e-kurtz-1928-2024/</a>, See on <a href="https://news.ycombinator.com/item?id=42141761">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	<h2>2023 CHM Fellow</h2>
<p>With deep sadness, we say goodbye to computer pioneer Thomas Kurtz.</p>
<p>Thomas Eugene Kurtz (Feb. 22 1928–Nov. 12, 2024) was an American mathematician, computer scientist and co-inventor, with John Kemeny, of the BASIC programming language and Dartmouth Timesharing System.</p>
<p>In the early days of academic computing in the 1960s, there were no simple non-professional programming languages available for undergraduates. BASIC was aimed at this audience. To realize their vision, Kurtz and Kemeny concurrently developed the Dartmouth Timesharing System, allowing BASIC to be accessed by students around campus using Teletype terminals.</p>
<h2>Finding a Calling</h2>
<p>Born in Oak Park Illinois, Kurtz graduated from Knox College in 1950, and received his PhD in mathematics from Princeton University in 1956. In 1951, Kurtz was fortunate in obtaining rare experience on a computer—the pioneering SWAC machine created by the National Bureau of Standards and housed at UCLA. SWAC, the Standards Western Automatic Computer, was among the earliest electronic computers in the United States and was supervised by legendary computer pioneer and 2013 CHM Fellow Harry Huskey.</p>
<p>Kurtz began teaching at Dartmouth upon receiving his PhD. After a few years, he and fellow professor John Kemeny developed the original version of the Dartmouth Timesharing System (DTSS), a method of sharing computer access across a network and a requirement for allowing multiple students access to BASIC.</p>

<div id="attachment_31173"><p><img aria-describedby="caption-attachment-31173" src="https://computerhistory.org/wp-content/uploads/2024/11/500004056-03-01.jpg" alt="" width="600" height="416"></p><p id="caption-attachment-31173">John Kemeny (left) and Thomas Kurtz (right), ca. 1964. Courtesy of the Darmouth College Library</p></div>

<p>DTSS was the earliest successful, large-scale timesharing system, a remarkable achievement. General Electric, which had donated computers to Dartmouth, extended DTSS into the kernel of their online services, such as Genie. DTSS was unveiled on May 1, 1964, along with BASIC. By that fall, hundreds of students were exploring BASIC on the 20 terminals around campus.</p>

<div id="attachment_31174"><p><img aria-describedby="caption-attachment-31174" src="https://computerhistory.org/wp-content/uploads/2024/11/Dartmouth-timesharing-system-1024x669.jpg" alt="" width="1024" height="669"></p><p id="caption-attachment-31174">General Electric GE-225 mainframe computer, home to the Dartmouth Timesharing System, ca. 1967. Courtesy of the Dartmouth College Library</p></div>

<h2>Making an Impact</h2>
<p>Since its inception, the BASIC language has flourished across multiple generations of computers—from mainframes and minicomputers in the 1960s, to microcomputers in the 1970s and ‘80s to the credit-card sized Raspberry Pi computer of today. In 1978, Harvard students Bill Gates and Paul Allen wrote their first version of BASIC for a new hobbyist-oriented microcomputer, the MITS Altair 8800. Their version of BASIC turned the Altair from a blinking box with few capabilities into a useful computer, and BASIC’s popularity skyrocketed again during the personal computer era.</p>
<h2>A Storied Career</h2>
<p>From 1966 to 1975, Kurtz served as the director of the Kiewit Computation Center at Dartmouth and as director of the Office of Academic Computing from 1975 to 1978. In 1979, he and Stephen J. Garland organized a professional master's program in Computer and Information Systems, funded in part with a grant from IBM.</p>
<p>In 1983, Kurtz joined Kemeny and three former Dartmouth students in forming True BASIC, Inc., whose purpose was to develop quality educational software and a platform-independent BASIC compiler. Upon termination of the CIS program in 1988, Kurtz returned to teaching and retired from Dartmouth in 1993.</p>
<p>Kurtz served as council chairman and trustee of EDUCOM and on the so-called Pierce Panel of the President's Advisory Committee. He also served on the steering committee for two NSF- and ARPA-supported activities and was the chair of the first CCUC conference on instructional computing. He helped form American National Standards committee X3J2, which developed the ANSI standard for BASIC, serving as chair from 1974 to 1985. Kurtz was a member of the ISO committee SC22/WG8, concerned with the international standard for BASIC, and served as its convener from 1987 to 1993. In 1994, he was inducted as a Fellow of the ACM.</p>
<h2>Learn More</h2>
<p><a href="https://computerhistory.org/blog/2023-fellow-award-ceremony/" target="_blank" rel="noopener">2023 Fellow Award Ceremony</a></p>
<p>The development of the Dartmouth time-sharing system <a href="https://www.youtube.com/watch?v=Zqv5A1XR04g" target="_blank" rel="noopener">video</a>.</p>
<p>Thomas Kurtz's granddaughters shares his thoughts on developing the time-sharing system in this <a href="https://www.youtube.com/watch?v=n6SWF_9ILGI" target="_blank" rel="noopener">video</a>.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Visual Basic 6 IDE recreated in C# (277 pts)]]></title>
            <link>https://github.com/BAndysc/AvaloniaVisualBasic6</link>
            <guid>42141587</guid>
            <pubDate>Thu, 14 Nov 2024 21:47:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/BAndysc/AvaloniaVisualBasic6">https://github.com/BAndysc/AvaloniaVisualBasic6</a>, See on <a href="https://news.ycombinator.com/item?id=42141587">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Avalonia Visual Basic 6</h2><a id="user-content-avalonia-visual-basic-6" aria-label="Permalink: Avalonia Visual Basic 6" href="#avalonia-visual-basic-6"></a></p>
<p dir="auto">A recreation of the classic Visual Basic 6 IDE and language in C# using Avalonia.</p>
<p dir="auto">This is a fun, toy project with no commercial intent. All rights to the Visual Basic name, icons, and graphics belong to Microsoft Corporation.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><a href="https://bandysc.github.io/AvaloniaVisualBasic6/" rel="nofollow">&gt;&gt; Open the web version in your browser! &lt;&lt;</a></h3><a id="user-content--open-the-web-version-in-your-browser-" aria-label="Permalink: >> Open the web version in your browser! <<" href="#-open-the-web-version-in-your-browser-"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>Visual Designer</li>
<li>Save and load projects in VB6-compatible format</li>
<li>Run projects</li>
<li>VB6 language support (limited)</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/BAndysc/AvaloniaVisualBasic6/refs/heads/master/examples/img_vb6.gif"><img src="https://raw.githubusercontent.com/BAndysc/AvaloniaVisualBasic6/refs/heads/master/examples/img_vb6.gif" alt="Avalonia Visual Basic" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Building the Desktop Version</h2><a id="user-content-building-the-desktop-version" aria-label="Permalink: Building the Desktop Version" href="#building-the-desktop-version"></a></p>
<p dir="auto">You'll generally need <a href="https://dotnet.microsoft.com/en-us/download/dotnet/9.0" rel="nofollow">.NET 9.0</a>, though you can modify <code>Directory.Build.props</code> to use .NET 8.0 if preferred (version 9.0 is required for the browser version).</p>
<p dir="auto">To build, simply run:</p>
<div data-snippet-clipboard-copy-content="dotnet build AvaloniaVisualBasic/AvaloniaVisualBasic.Desktop.csproj"><pre><code>dotnet build AvaloniaVisualBasic/AvaloniaVisualBasic.Desktop.csproj
</code></pre></div>
<p dir="auto">If you encounter <a href="https://github.com/BAndysc/AvaloniaVisualBasic6/issues/2" data-hovercard-type="issue" data-hovercard-url="/BAndysc/AvaloniaVisualBasic6/issues/2/hovercard">Antlr4 errors</a>, this likely means the <code>Antlr4BuildTasks</code> library couldn't automatically download Java. Installing Java manually should resolve the issue.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Publishing the Desktop Version and Making <code>Make Publish</code> Work</h3><a id="user-content-publishing-the-desktop-version-and-making-make-publish-work" aria-label="Permalink: Publishing the Desktop Version and Making Make Publish Work" href="#publishing-the-desktop-version-and-making-make-publish-work"></a></p>
<p dir="auto">Publish both IDE project (AvaloniaVisualBasic.Desktop) and runtime (AvaloniaVisualBasic.Standalone):</p>
<div data-snippet-clipboard-copy-content="dotnet publish AvaloniaVisualBasic.Desktop -f net9.0 -o bin/
dotnet publish AvaloniaVisualBasic.Standalone -f net9.0 -o bin/standalone/"><pre><code>dotnet publish AvaloniaVisualBasic.Desktop -f net9.0 -o bin/
dotnet publish AvaloniaVisualBasic.Standalone -f net9.0 -o bin/standalone/
</code></pre></div>
<p dir="auto">Now you can run <code>./bin/AvaloniaVisualBasic.Desktop</code>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Thanks to</h2><a id="user-content-thanks-to" aria-label="Permalink: Thanks to" href="#thanks-to"></a></p>
<ul dir="auto">
<li><a href="https://github.com/AvaloniaUI/Avalonia">Avalonia</a></li>
<li><a href="https://github.com/wieslawsoltes/Dock">Dock by Wiesław Šoltés</a></li>
<li><a href="http://fontstruct.com/fontstructions/show/1384746/ms-sans-serif" rel="nofollow">Font by lou</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Old Vintage Computing Research: Dusting Off Dreamcast Linux (105 pts)]]></title>
            <link>http://oldvcr.blogspot.com/2023/02/dusting-off-dreamcast-linux.html</link>
            <guid>42140863</guid>
            <pubDate>Thu, 14 Nov 2024 20:31:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://oldvcr.blogspot.com/2023/02/dusting-off-dreamcast-linux.html">http://oldvcr.blogspot.com/2023/02/dusting-off-dreamcast-linux.html</a>, See on <a href="https://news.ycombinator.com/item?id=42140863">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-242369257611966470" itemprop="description articleBody"><p>
Yes, here at Old VCR we live in the past, when RISC Unix workstations still ruled the earth like large boxy tentaculous Cthulhus. Oh, sure, if you wanted a modern equivalent you could just buy a Raptor POWER9 like the one I'm typing on now. But around here even PowerPC is too pedestrian of an architecture. We need something <em>unique</em>.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhPKs1qSjUCJ-F313PmMKpr6jp88iQTq4jbzDeqEendFolit38GHJZPN3cNLaWpddTAIY-1t_0d0EQIPVEwYXwdk1dL865pp0FrR3y_egoezRb9wduHspOjOoCY59CNW_3vxWgtUFJLVp9GnauaxFkf55bYJ0r43ZTDLcrRgAsaNiU2OOK1aRzLEd5c/s4080/IMG_20230218_195431.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhPKs1qSjUCJ-F313PmMKpr6jp88iQTq4jbzDeqEendFolit38GHJZPN3cNLaWpddTAIY-1t_0d0EQIPVEwYXwdk1dL865pp0FrR3y_egoezRb9wduHspOjOoCY59CNW_3vxWgtUFJLVp9GnauaxFkf55bYJ0r43ZTDLcrRgAsaNiU2OOK1aRzLEd5c/s320/IMG_20230218_195431.jpg" width="320"></a></p><p>

That's more like it! A keyboard, mouse, a NIC, VGA output, 16MB of RAM and a whole gig (you wish) of read-only optical drive space with a 200MHz Hitachi SuperH SH-4 CPU faulting its paltry 8K of I-cache and 16K of D-cache non-stop. Now <a href="http://oldvcr.blogspot.com/2022/11/refurb-weekend-sega-dreamcast.html">freshly refurbished</a>, its cooling fan runs louder than my Power Mac Quad G5 at idle and the drive makes more disk seeking noise than when I can't find a lost floppy. And since the buzzword with Linux distros today is immutability, what could be more immutable than an ephemeral, desperately undersized RAM disk overlaid on a live CD?
</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgewFliegf76VBNRlqYWT88WTBYAqt2DQiFqjM1X8YFINkMUzYZZVH3-8OTcfH2TS9LWOaaMJ5YFhIfKx6B_Yjai60Yk2TXl2yK8XuXu3c03ytGjk7nLY2EBqlQkcCJ8dhinVkPSZAi80MTqcYOkx4YbpueW-CPLlMEvrTZoYWz5HAoLhjuD-OXtWmJ/s4080/IMG_20230218_211415.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgewFliegf76VBNRlqYWT88WTBYAqt2DQiFqjM1X8YFINkMUzYZZVH3-8OTcfH2TS9LWOaaMJ5YFhIfKx6B_Yjai60Yk2TXl2yK8XuXu3c03ytGjk7nLY2EBqlQkcCJ8dhinVkPSZAi80MTqcYOkx4YbpueW-CPLlMEvrTZoYWz5HAoLhjuD-OXtWmJ/s320/IMG_20230218_211415.jpg" width="320"></a></p><p>

Need portability? Well, just load the disc into our handy dandy greymarket clone Treamcast with its built-in LCD display and don't tell Sega. You can take your Unix on the go with the car power adapter: if you can read the screen, now you can live the dream.
</p><p>
But jokes aside, Dreamcast Linux has something to teach later Johnny-come-latelies with a distro surprisingly well-adapted to its target platform, support for many peripherals, and an all-in-one batteries-included philosophy. Plus, it was one of the earliest Un*xy things for game consoles <a href="http://web.archive.org/web/20060714170358/http://www.m17n.org/linux-sh/dreamcast/">circa 2001</a>, predating <a href="https://en.wikipedia.org/wiki/Linux_for_PlayStation_2">PlayStation 2 Linux</a> by about a year or so, though PS2 Linux was at least <a href="https://web.archive.org/web/20100524023205/http://playstation2-linux.com:80/">Sony-official</a>. (While <a href="https://github.com/CodeAsm/PS1Linux">at least one Linux</a> purports to run on an O.G. PlayStation, this was a slightly later development.)
</p><p>
So I think there's enough noteworthy about it to merit dusting DC Linux off for a new generation to experience. We'll add a couple quality of life pieces to smooth out a few rough edges, but we won't remove anything and largely eschew in-place upgrades such that the flavour of the original experience remains. After all, no one's running this as a home server (I think). If you like your vintage less aged there are <a href="https://github.com/andersevenrud/dreamcast-linux">newer attempts</a> to put Linux on the Dreamcast, and of course <a href="http://wiki.netbsd.org/ports/dreamcast/">it runs NetBSD</a>, but if you feel like running a refreshingly geriatric Linux kernel on a classic console then this is your blog post. We'll take a tour of the operating system and the way Linux used to be, talk about what's unique about the DC port and what's been added (and what's missing), and then step through how you can burn a disc to run in yours.
</p><p>
One of the best things about O.G. Dreamcast Linux is that it has very minimal system requirements: you just need a Dreamcast and keyboard. It <em>supports</em> much more than that, most notably the controllers, the Dreamcast mouse and the Dreamcast Broadband Adapter (and if you have the BBA, you might be able to get away without the keyboard by Telnetting in remotely), but pretty much anyone could run it. The first hit is always free.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjAJkdM1cY6WlseXT5-I_DYuU6TYICP6G8gO5Eb3qG4WeJubWc8AEtkrw9gQnsFa_An5fhmnbPDMa2_q0xroYaXLfB-NdwOYfOLhDZPbiqPet9riuMKibcCVAsQ5pS2xacywHhXTz12y4koosVGve-twu0xQjqKNGe8YqUk-TubTps9vyrvFNWvdhWL/s1920/vlcsnap-2023-02-18-09h57m22s091.png"><img alt="" data-original-height="1200" data-original-width="1920" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjAJkdM1cY6WlseXT5-I_DYuU6TYICP6G8gO5Eb3qG4WeJubWc8AEtkrw9gQnsFa_An5fhmnbPDMa2_q0xroYaXLfB-NdwOYfOLhDZPbiqPet9riuMKibcCVAsQ5pS2xacywHhXTz12y4koosVGve-twu0xQjqKNGe8YqUk-TubTps9vyrvFNWvdhWL/s320/vlcsnap-2023-02-18-09h57m22s091.png" width="320"></a></p><p>

This and the initial set of screenshots are taken with my INOGENI VGA2USB3 capture box connected to a clone DC VGA adapter. Normally I would crop from 16:9 to 4:3 but I'm leaving the full frame on to demonstrate any display irregularities are due to the system, not the capture device or an inartful trim.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgiqspRBpi01ATRUAVDTqBBikCeB0Bk2oOUmU4JkoRVCW5lRT39d7_WoiqMhOwyM5F69MPlLNB080q4qYy3EgEqm1J9tplUa46RMvNRxFTlco28viXFo4l5kCBDlqXyHbjp8vlr3QCJrBClE3qYde1i3kVYg0X7MSMKzWVWlcwnKCy1W94xG9iQwpj_/s1920/vlcsnap-2023-02-18-09h58m05s165.png"><img alt="" data-original-height="1200" data-original-width="1920" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgiqspRBpi01ATRUAVDTqBBikCeB0Bk2oOUmU4JkoRVCW5lRT39d7_WoiqMhOwyM5F69MPlLNB080q4qYy3EgEqm1J9tplUa46RMvNRxFTlco28viXFo4l5kCBDlqXyHbjp8vlr3QCJrBClE3qYde1i3kVYg0X7MSMKzWVWlcwnKCy1W94xG9iQwpj_/s320/vlcsnap-2023-02-18-09h58m05s165.png" width="320"></a></p><p>

Dreamcast Linux — or indeed any DC homebrew at all — might not have been possible were it not for Sega's ill-fated attempt at multimedia music CDs, called MIL-CD (Music Interactive Live CD). Recall that the Dreamcast's normal and preferred medium is the "Gigabyte Disc" GD-ROM, Yamaha's 1GB CD variant with closer pit spacing but using the same 780nm near-infrared laser. To broaden the third-party catalogue, Sega devised MIL-CD so that enhanced music CDs could feature menus, videos and Internet linkages, something like an <a href="https://en.wikipedia.org/wiki/Enhanced_CD">Enhanced CD</a> Bluebook format specific to the Dreamcast. Unfortunately for Sega, not only was MIL-CD very unsuccessful and only eight actual titles ultimately produced (let alone anything else that could play them), but it also allowed the Dreamcast to be booted from ordinary CD and CD-Rs instead of requiring all titles to be the more expensive GD-ROMs.
</p><p>
The key is the Dreamcast boot process. When the console detects a factory-pressed GD-ROM (GD-Rs officially require a boot disc), most likely from the presence of the special security ring between the low-density CD-readable inner ring and the high-density main section, it reads an boot sector executable conventionally named <tt>IP.BIN</tt> from the first 16 sectors and runs it. <a href="http://mc.pp.se/dc/ip.bin.html">Part of <tt>IP.BIN</tt>'s tasks</a> are to enforce region coding and to also display the Sega copyright message shown here, which on the Genesis became relevant in <a href="https://en.wikipedia.org/wiki/Sega_v._Accolade"><i>Sega v. Accolade</i></a>. It also provides a filename to the Dreamcast ROM (usually <tt>1ST_READ.BIN</tt>) that the DC loads and runs as the main program.
</p><p>
This process is exactly the same for booting MIL-CDs — with two crucial differences. When a MIL-CD starts up, the Dreamcast loads <tt>IP.BIN</tt> as usual, but the Dreamcast ROM will load the filename it provides into memory scrambled by a proprietary algorithm <em>and</em> disable the GD-ROM drive in software. If the second-stage executable were not pre-scrambled in a matching fashion, the result will be garbage, and the console will halt. Even if it could run, however, all it can do is play audio: the executable shouldn't have any further access to data from the drive.
</p><p>
Sega's tactical error was making the entire system's security dependent on these two lockouts despite the overwhelming weight of history. Independent developers noticed the different pathway and used it with their own software developed with the official Sega Katana SDK to provide the obfuscation; probably the first was the Datel GameShark CDX, first developed in early 2000, though Bleemcast! got to market faster using the same method until Sony sued them into grenade shrapnel. Both packages exploited an undocumented reset call to regain control of the GD-ROM drive, allowing them to start games from disc after they themselves had loaded. The notorious Utopia boot disc got around the obfuscation problem with a pirated Katana SDK and used the same reset technique, letting pirated software load by simply booting Utopia and switching discs when instructed. The Utopia crew flamed out quickly as they were stupid enough to put their photographs on the disc, leading to a knock on the door from German police, but the crack circulated widely and the damage was done. When the obfuscation algorithm was eventually cracked too, pirated games could simply boot directly, as could anything else.
</p><p>
Arguably the rampant piracy that resulted was one of the causes of the Dreamcast's decline, and Sega seemed to confirm this theory by introducing late model Dreamcasts that <a href="https://dreamcast.wiki/MIL-CD_compatibility">had MIL-CD support removed</a>, but in too tardy a fashion to make any difference. These units won't boot Dreamcast Linux either, but they aren't extremely common and obviously less desirable.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjv9MkBp6TYCw_fW74_pu4rGRFQkXqBo-it9Wuv1kMaGe-J-USbzk6oMn-6cGwqIomCd5ghJ2JftdU99LugUqRTKmh25JpkgmHarLJK61tpoBo9OUPTZyNhW6s36BnWOUPH3tAlDeaKgbXnl0-BjKkoEc6dRuXIGGXlf2nh9K36HnNPOsJp9L9fvrT_/s1920/vlcsnap-2023-02-18-09h58m32s817.png"><img alt="" data-original-height="1200" data-original-width="1920" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjv9MkBp6TYCw_fW74_pu4rGRFQkXqBo-it9Wuv1kMaGe-J-USbzk6oMn-6cGwqIomCd5ghJ2JftdU99LugUqRTKmh25JpkgmHarLJK61tpoBo9OUPTZyNhW6s36BnWOUPH3tAlDeaKgbXnl0-BjKkoEc6dRuXIGGXlf2nh9K36HnNPOsJp9L9fvrT_/s320/vlcsnap-2023-02-18-09h58m32s817.png" width="320"></a></p><p>

In our case, the second-stage executable is a pre-scrambled RedBoot bootloader from <a href="http://ecos.sourceware.org/">eCos</a>, a free open source real-time operating system originally developed at Cygnus Solutions in 1997. Red Hat bought Cygnus in 1999 and eventually terminated eCos as a product in 2002, making this 2001 build some of the last official Red Hat builds in use. Dreamcast Linux uniquely uses RedBoot to load the RAM disk image and kernel and start the operating system.
</p><p>
RedBoot listens on both the rear serial port (at 115200bps) and on port 9000 for commands. The IP settings are internal to the Dreamcast and are set by programs such as the Planet Web browser or Quake III Arena. If you connect to port 9000 while it's waiting, you get this prompt:
</p><div><pre>% telnet sadie 9000
Trying...
Connected to sadie.
Escape character is '^]'.
== Executing boot script in 8.-1612046094 seconds - enter ^C to abort
^C
RedBoot&gt; help
Manage machine caches
   cache [ON | OFF]
Change directory
   cd &lt;directory&gt;
Compute a 32bit checksum [POSIX algorithm] for a range of memory
   cksum -b &lt;location&gt; -l &lt;length&gt;
Print directory
   dir [&lt;directory&gt;]
Display (hex dump) a range of memory
   dump -b &lt;location&gt; [-l &lt;length&gt;]
Execute an image
   exec [-b &lt;parameter block addr&gt;]
        [-m &lt;mount rdonly flags&gt;]
        [-f &lt;ramdisk flags&gt;]
        [-r &lt;root device&gt;]
        [-l &lt;loader type&gt;]
        [-i &lt;initrd start addr&gt;]
        [-j &lt;initrd size&gt;]
        [-c "kernel command line"]
        [&lt;entry point&gt;]
Execute code at a location
   go [-w &lt;timeout&gt;] [entry]
Help about help?
   help [&lt;topic&gt;]
Load a file
   load [-r] [-v] [-h &lt;host&gt;] [-m {FILE | TFTP | xyzMODEM}]
        [-b &lt;base_address&gt;] &lt;file_name&gt;
Mount filesystem
   mount 
Network connectivity test
   ping [-v] [-n &lt;count&gt;] [-l &lt;length&gt;] [-t &lt;timeout&gt;] [-r &lt;rate&gt;]
        [-i &lt;IP_addr&gt;] -h &lt;IP_addr&gt;
Print current working directory
   pwd 
Reset the system
   reset 
Unmount filesystem
   umount 
Display RedBoot version information
   version 
RedBoot&gt; version

RedBoot(tm) bootstrap and debug environment - built 05:27:24, May 29 2001

Copyright (C) 2000, 2001, Red Hat, Inc.

RAM: 0x8c000000-0x8d000000, 0x8c034950-0x8d000000 available
</pre></div>
<p>
Control-C from a connected keyboard won't do it; while the Maple bus is USB-like, RedBoot doesn't speak it. If we wanted to boot with custom Linux command line arguments, this is how:
</p><div><pre>RedBoot&gt; mount
RedBoot&gt; load -v /boot/vmlinux
   Type     Offset   VirtAddr PhysAddr FileSiz  MemSiz   Flags    Align
00 00000001 00010000 8c210000 8c210000 000bdfd8 000ca420 00000007 00010000
Entry point is 0x8c210000
RedBoot&gt; load -v -r -b 0x8c400000 /boot/initrd.gz
\
Raw file loaded 0x8c400000-0x8c440725
</pre></div>
<p>
This mounts the Rock Ridge image and loads the kernel and compressed <tt>initrd</tt>. Then, to boot the kernel, we would enter these command line arguments by default, or as you like.
</p><div><pre>RedBoot&gt; exec -c "mem=16M init=/busybox /etc/profile"
Now booting linux kernel (entry 0x8c210000)
MOUNT_RDONLY  : 0x00000000
RAMDISK_FLAGS : 0x00000000
ORIG_ROOT_DEV : 0x00000100
LOADER_TYPE   : 0x00000001
INITRD_START  : 0x00400000
INITRD_SIZE   : 0x00400000
COMMAND LINE  : mem=16M init=/busybox /etc/profile
</pre></div>
<p>
The connection halts at this point since RedBoot's network connections are then terminated by the new kernel and the console remains on the Dreamcast locally (though a serial port boot should keep the console on the serial port).
</p><p>
The Dreamcast version of RedBoot is one of the components we lack source for. Although the <a href="http://ecos.sourceware.org/ecos/anoncvs.html">eCos CVS server</a> is still active, <a href="http://web.archive.org/web/20060714130044/http://www.m17n.org/linux-sh/dreamcast/ecos">there were apparently pieces</a> that were maintained out of tree, and it's not clear if the residual SuperH support still supports the Dreamcast BBA. Later versions of LinuxSH used SH-Boot, but remember that part of our brief here at Old VCR is historical preservation, so I've retained eCos RedBoot in this build.
</p><p>
The earliest kernel messages don't seem to go to the screen, though you can get them from <tt>dmesg</tt>, of course.
</p><div><pre>Linux version 2.4.5 (yaegashi@aragorn) (gcc version 3.1 20010501 (experimental)) #27 Thu May 31 07:06:51 JST 2001
SEGA Dreamcast support.
On node 0 totalpages: 4096
zone(0): 4096 pages.
zone(1): 0 pages.
zone(2): 0 pages.
Kernel command line: mem=16M init=/busybox /etc/profile
CPU clock: 200.00MHz
Bus clock: 100.00MHz
Module clock: 50.00MHz
Interval = 125000
Console: colour dummy device 80x25
Calibrating delay loop... 199.47 BogoMIPS
Memory: 10332k/16384k available (1173k kernel code, 6052k reserved, 132k data, 188k init)
Dentry-cache hash table entries: 2048 (order: 2, 16384 bytes)
Inode-cache hash table entries: 1024 (order: 1, 8192 bytes)
Buffer-cache hash table entries: 1024 (order: 0, 4096 bytes)
Page-cache hash table entries: 4096 (order: 2, 16384 bytes)
CPU: SH7750/SH7751
POSIX conformance testing by UNIFIX
PCI: MMIO fixup to Sega Corporation Broadband Adapter
Linux NET4.0 for Linux 2.4
Based upon Swansea University Computer Society NET3.039
Starting kswapd v1.8
devfs: v0.102 (20000622) Richard Gooch (rgooch@atnf.csiro.au)
devfs: boot_options: 0x0
</pre></div>
<p>
But the first visible messages (to feeble human eyes) are these:

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiinEyBZqCSNXua6iGeeveT8AQMcuw-cV7JQN5Gmphz75LWybumKHfqkAZNAlEQ8j_0cGvB8N7BWJVx-YQUdhCsV0K3NVYAki_NUrQAHcAVLtCFZMQk9RJeba1RsnwnCVB7sDpFvgsYS__O--LpNAkJsZrQLIXu2T6hlnGe5FvzXIs4HaNutaDTaMAz/s1920/vlcsnap-2023-02-18-10h45m56s059.png"><img alt="" data-original-height="1200" data-original-width="1920" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiinEyBZqCSNXua6iGeeveT8AQMcuw-cV7JQN5Gmphz75LWybumKHfqkAZNAlEQ8j_0cGvB8N7BWJVx-YQUdhCsV0K3NVYAki_NUrQAHcAVLtCFZMQk9RJeba1RsnwnCVB7sDpFvgsYS__O--LpNAkJsZrQLIXu2T6hlnGe5FvzXIs4HaNutaDTaMAz/s320/vlcsnap-2023-02-18-10h45m56s059.png" width="320"></a></p>

<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjAqgkOwbsh4mcjlOXJ0xHc4icfyfn1dmFI9GHvQrLe70kl22ShxK-Rj_qu0d-zC8gwyUDd67uEfzrzYp7BGck9XGV4t_FbD-o3mkxDcY3Phmpz8-PQS0DcD35v8eZyFYucJv4ETuUDrZvkyFiCKDpNq45zv4HYpZFvAvmrSnNcBsI8YSoho-5ros8k/s1920/vlcsnap-2023-02-18-09h58m39s700.png"><img alt="" data-original-height="1200" data-original-width="1920" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjAqgkOwbsh4mcjlOXJ0xHc4icfyfn1dmFI9GHvQrLe70kl22ShxK-Rj_qu0d-zC8gwyUDd67uEfzrzYp7BGck9XGV4t_FbD-o3mkxDcY3Phmpz8-PQS0DcD35v8eZyFYucJv4ETuUDrZvkyFiCKDpNq45zv4HYpZFvAvmrSnNcBsI8YSoho-5ros8k/s320/vlcsnap-2023-02-18-09h58m39s700.png" width="320"></a></p>

<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLMeIIYxsdLvljCm4j0AgJtAa3uK8KyGkDi-Nex8zdSpPfdJhlO0IfZUI_D6A_XHFD5ObY99dxzE0QsINLTAEkByM5-V7tXjkVeZUZ-aM9eXGflnwwZdjx4wtiFDReBiAEmrfANlUAn5-cCclPGbZfZ-d5LZiIDNPN6nizAJFK7Nrgx7vfD3hJIfWO/s1920/vlcsnap-2023-02-18-09h58m53s373.png"><img alt="" data-original-height="1200" data-original-width="1920" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLMeIIYxsdLvljCm4j0AgJtAa3uK8KyGkDi-Nex8zdSpPfdJhlO0IfZUI_D6A_XHFD5ObY99dxzE0QsINLTAEkByM5-V7tXjkVeZUZ-aM9eXGflnwwZdjx4wtiFDReBiAEmrfANlUAn5-cCclPGbZfZ-d5LZiIDNPN6nizAJFK7Nrgx7vfD3hJIfWO/s320/vlcsnap-2023-02-18-09h58m53s373.png" width="320"></a></p><p>

Notice the console framebuffer, the SCI(F) serial port support, Maple bus for input devices, the Realtek 8139-based Broadband Adaptor (connected over a PCI connection) and the GD-ROM. The framebuffer detects whether we're connected over VGA or NTSC. On my old school CRT TV set, I see </p><tt>fb0: Mode 640x480-32 pitch = 2560 cable: COMPOSITE video output: NTSC</tt><p> instead of </p><tt>cable: VGA video output: VGA</tt><p> (sorry, PAL users, you'll have to use VGA). The console's scroll window has been altered so that the Tux SuperH logo is not obliterated by incoming new messages. Although we booted with Busybox, </p><tt>/busybox</tt><p> does not provide the userland; it only serves as </p><tt>init</tt><p>.
</p><p>
With the kernel now booted, we can switch to pixel-precise grabs from the framebuffer for the remaining screenshots. I provide a pre-built copy of <a href="https://github.com/jwilk/fbcat"><tt>fbcat</tt></a> in <tt>/usr/bin</tt> which will read the Linux framebuffer and convert it to a Netpbm pixmap.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjCa7AjqjAAeTNgYyrb2L6Ia0blb_1vXaAbnEa4Wi5GSKqF_c4LuMpFZjf6_F9oa7bvgczWNksMGGmLRqXeAlIpXj3wAP5Sno5K9H7T6gObuBIsZNrcW9KyQRPKfH7y-XucdxMtXDYwz4X-PSIvUZrlMwnsl-F1uFtPE7_e0RDqi-4xgpYtOvi6-EzT/s640/startup.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjCa7AjqjAAeTNgYyrb2L6Ia0blb_1vXaAbnEa4Wi5GSKqF_c4LuMpFZjf6_F9oa7bvgczWNksMGGmLRqXeAlIpXj3wAP5Sno5K9H7T6gObuBIsZNrcW9KyQRPKfH7y-XucdxMtXDYwz4X-PSIvUZrlMwnsl-F1uFtPE7_e0RDqi-4xgpYtOvi6-EzT/s320/startup.ppm.png" width="320"></a></p><p>

Log in as </p><tt>root</tt><p>, no password. The machine listens on Telnet and FTP, and I added a small Gopher server demo. <b><em>Never put a console running DC Linux outside of a firewall: it is an intentionally insecure system. Any bot scanning your network will get <tt>root</tt> immediately.</em></b></p><p>
You'll notice in the messages that NTP started up using <a href="https://chrony.tuxfamily.org/"><tt>chrony</tt></a>. I'll talk about what we've added to O.G. 2K1 Dreamcast Linux as we go along, but first, let's discuss the framebuffer since we're sitting in front of it.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi6oaVPVOQ-EZ4ke5InvRb1Q38nhhofP58leY6j4qDHVLV4QIxXjTfkOPGmzgmcREO1Pj0MO696KUSKCSK5YUr5cno0F6AE1NWi5kr83PYDVF0WxFcc-iaOZUrSlx9oqgeOn0YpzGsAHw55NGooV2y5QwxjlA67vr5gAI2-XfEs9k_ROG_U7bh5_FRa/s4080/IMG_20230218_195700.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi6oaVPVOQ-EZ4ke5InvRb1Q38nhhofP58leY6j4qDHVLV4QIxXjTfkOPGmzgmcREO1Pj0MO696KUSKCSK5YUr5cno0F6AE1NWi5kr83PYDVF0WxFcc-iaOZUrSlx9oqgeOn0YpzGsAHw55NGooV2y5QwxjlA67vr5gAI2-XfEs9k_ROG_U7bh5_FRa/s320/IMG_20230218_195700.jpg" width="320"></a></p><p>

Logged into our VGA demonstration system, </p><tt>fbset</tt><p> reports a bog-standard 640x480 32bpp console display. That isn't totally true, though: a popular trick is to copy to and from the framebuffer device (here </p><tt>/dev/fb/0</tt><p> or </p><tt>/dev/fb0</tt><p>) using </p><tt>cp</tt><p> and </p><tt>cat</tt><p>. If you copy </p><tt>/dev/fb0</tt><p> to a file and copy it back, though, you don't exactly get on-screen what you started with:

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHUg-ivHcotuCG5wCOCMo7Ddb7c9LmlyGhdnOBuQtCAfT9WsdJsgRQN1rhGiVAToS2lflItTPghWyxFF6Y-ewKnomMkxkNNOZJMkC3D3R85oBMytPJfaXdORmGTGeAR859r8NXEbWqY1TYIgVDAJFXXz58NuqWfBHWmLPLXz_yHjz-w1dM9RSzhGt8/s640/oops.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHUg-ivHcotuCG5wCOCMo7Ddb7c9LmlyGhdnOBuQtCAfT9WsdJsgRQN1rhGiVAToS2lflItTPghWyxFF6Y-ewKnomMkxkNNOZJMkC3D3R85oBMytPJfaXdORmGTGeAR859r8NXEbWqY1TYIgVDAJFXXz58NuqWfBHWmLPLXz_yHjz-w1dM9RSzhGt8/s320/oops.ppm.png" width="320"></a></p><p>

This puzzled me to no end, because the framebuffer clearly works. I queried the </p><tt>ioctl</tt><p>s for the framebuffer and found a perfectly ordinary looking 32 bit per pixel layout, but writing zeroes or indeed any other kind of character data to the framebuffer device generated this sort of artifacting.
</p><p>
After a lot of pulled hair, I decided to look at how <tt>fbcat</tt> was accessing the framebuffer since it could clearly make sensible grabs. While it was using the same kinds of <tt>ioctl</tt>s, it was doing the actual reading by <tt>mmap()</tt>ing the buffer instead of file reads. I wrote a simple program to <tt>mmap()</tt> the screen like it did and added a <tt>memset()</tt> to zero out the screen — and that worked! I could even <tt>memcpy()</tt> stuff around, since it was all just bytes. But treating the screen as an array of <tt>unsigned char</tt> generated the same kind of frustrating artifacts when I did any sort of writing.
</p><p>
If you know anything about how <tt>memset()</tt> and friends are implemented, you've already guessed the answer: the access has to be by whole 32-bit word, which is what those functions do when they're dealing with quantities of sufficient size. When I changed the code to write entire words for pixels, the screen updated correctly. Since I rather like the Tux SuperH logo, I reconstructed the bitmap data from the framebuffer and created a little demonstration program that clears the Dreamcast framebuffer, paints Tux, and sets the Linux console back to scrolling under it. <tt>tuxclear</tt> is in <tt>/usr/bin</tt> and the source (along with a <tt>gzip</tt>ped header file containing the Tux bitmap data) is in <tt>/usr/src</tt>.
</p><p>
On our NTSC CRT TV set connected to the Dreamcast with a composite video cable, however, we have another little problem.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWAigJPwJttaY5aHREe7MVaBl5ZjXarno_n5qfM9TQcveoNGZKJUps77TU8HISBBmE6G3HOa6vNle9Cu_r2JtSip7KRV20zD9lVCTK7ADCTqz4_S6dFQlQNzgpan9OH-efoPhgaDF0PCj68hnOGNw5c1Y44w0ZjPMSjDVSiw4Cnw3Uw3ccBsGry4Uo/s4080/IMG_20230218_212701.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWAigJPwJttaY5aHREe7MVaBl5ZjXarno_n5qfM9TQcveoNGZKJUps77TU8HISBBmE6G3HOa6vNle9Cu_r2JtSip7KRV20zD9lVCTK7ADCTqz4_S6dFQlQNzgpan9OH-efoPhgaDF0PCj68hnOGNw5c1Y44w0ZjPMSjDVSiw4Cnw3Uw3ccBsGry4Uo/s320/IMG_20230218_212701.jpg" width="320"></a></p><p>

A old school CRT TV or composite display will not be able to display the full 640x480 display. The cutoff on the sides is tolerable but only about 80-85% of the vertical resolution will be visible depending on the exact TV or monitor in use. By default we can't even see the login prompt!

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgs-MhcSU3qvsvOr4mH5oKhL-WZzEL0IP6EwR_KEB1ocM7lYWso5ozdXGxBzwk4ubBxDV_0-0QFnia9nuGdmj-lamR4i3nqj7VamiDVzxZ7rp8KMcbBA9GjFCcYfwAV3UiO_Uc3QSXTLqfV8pArSL9o1yscZoAzt6LZnlQ7PvTmNdrWREsDSiZxGz4Y/s4080/IMG_20230218_212805.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgs-MhcSU3qvsvOr4mH5oKhL-WZzEL0IP6EwR_KEB1ocM7lYWso5ozdXGxBzwk4ubBxDV_0-0QFnia9nuGdmj-lamR4i3nqj7VamiDVzxZ7rp8KMcbBA9GjFCcYfwAV3UiO_Uc3QSXTLqfV8pArSL9o1yscZoAzt6LZnlQ7PvTmNdrWREsDSiZxGz4Y/s320/IMG_20230218_212805.jpg" width="320"></a></p><p>

To deal with this (after blindly logging in), I added a little shell script </p><tt>/usr/bin/tvclear</tt><p> that sets a different scroll window, and then looked at </p><tt>fbset</tt><p> again. This time we see two new fields, </p><tt>bcast true</tt><p> and </p><tt>laced true</tt><p>, indicating that the frame buffer is generating broadcast video timings (in this case NTSC, directly supported by the Dreamcast-specific kernel) and interlacing the display. You can use this as a hint to determine if the display you're connected to is progressive-scan VGA or not. Incidentally, this is also how </p><tt>fbset</tt><p> rats out the little Treamcast's LCD panel as connected via composite video, not VGA. However — and like modern TVs — there is no overscan region on the Treamcast's flat panel and the entire 640x480 display is visible. Unfortunately </p><tt>tvclear</tt><p>'s screen window settings are ignored by many programs, so we'll have to think of a better solution for that which won't regress modern displays.
</p><p>
If the reduced scroll window bothers you and you just want all 80x30 on the console, I wrote a replacement <tt>/usr/bin/clear</tt> shell script to reset the scroll window from the console (everywhere else it just stubs into <tt>/usr/bin/cls</tt>, which is what I renamed the old <tt>/usr/bin/clear</tt> binary to). This is probably also a good time to mention that the screen will conveniently turn off after a sufficient period of inactivity.
</p><p>
How did we manage to compile <tt>/usr/bin/tuxclear</tt>, by the way?

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjDfh1qIFzx5DWgM8aLmG75svJvhgJJ6xbdwpa_1kWj6hXxJSGAcBc4OA-OuC_pWYXx2ne-bkTuGWwJxr1J9MLtcZlJ5oY2U2LQRo8LfpDySrnim37aqgKz-CffowZllQjLlsQPdKuG7mXbJfYYLOWXvxYXO7gY_xeXe12Zp_5F1wdU55VAcKOQp28G/s640/dev.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjDfh1qIFzx5DWgM8aLmG75svJvhgJJ6xbdwpa_1kWj6hXxJSGAcBc4OA-OuC_pWYXx2ne-bkTuGWwJxr1J9MLtcZlJ5oY2U2LQRo8LfpDySrnim37aqgKz-CffowZllQjLlsQPdKuG7mXbJfYYLOWXvxYXO7gY_xeXe12Zp_5F1wdU55VAcKOQp28G/s320/dev.ppm.png" width="320"></a></p><p>

The kernel and everything else were apparently compiled with a cross-compiler on </p><tt>i386</tt><p>, which doesn't help me much since I don't run any Intel system normally (let alone a 32-bit one). However, we do have </p><tt>gcc</tt><p> and </p><tt>g++</tt><p> 3.1 as hosted compilers on the system itself (intriguingly marked </p><tt>experimental</tt><p>), along with period-correct Perl 5.6.0, </p><tt>awk</tt><p>, and no Python. GNU </p><tt>make</tt><p> 3.79 serves as your build system, but unfortunately compiling anything more than trivial small tools will not be possible with the limited space we have in the RAM disk.
</p><p>
The solution is NFS. On my NetBSD NFS server we have this line in <tt>/etc/exports</tt>:
</p><div><pre>/netfs -alldirs -mapall=censored:censored -noresvport -noresvmnt
</pre></div>
<p>
There's only one UID and GID that matter in DC Linux, i.e., <tt>root</tt>'s, so it's fine (even necessary) to squash everything to a single unprivileged UID on the server side. Back on the Dreamcast, I created a new <tt>/netfs</tt> mount point in its perilously overfull <tt>/boot/initrd.gz</tt> <tt>ext2</tt> image and then added two new entries to <tt>/etc/fstab</tt>:
</p><div><pre>nfs:/netfs/dreamcast/linux /netfs nfs rw,hard,intr,rsize=4096,wsize=4096 0 0
nfs:/netfs/dreamcast/linux/tmp /tmp nfs rw,hard,intr,rsize=4096,wsize=4096 0 0
</pre></div>
<p>
The upshot is that this revised spin of Dreamcast Linux will automatically try to mount these filesystems to <tt>/netfs</tt> and <tt>/tmp</tt> (because the GNU compiler will put its assembler and parse files here) if a host named <tt>nfs</tt> can be resolved and will answer. The beauty is, on a system without a BBA or a network where there is no NFS server that answers to that name, nothing will be mounted and those mount points will remain as provided by the <tt>initrd</tt>, and the system will still run standalone as before.
</p><p>
The other problem we need to solve is swap. Linux, or at least not this Linux, won't let you use a swapfile hosted over NFS; <tt>swapon</tt> will give you an illegal argument error and refuse to enable it. The workaround is to attach the swapfile to a loop device and have <tt>swapon</tt> use the loop device as swap. A minor complication here is that Linux 2.4 has a hard limit of eight loop devices but I don't think that'll be a major drawback compared to every other limitation we're currently dealing with!
</p><p>
For swap-over-NFS, create a file of suitable size (I chose 256MB) named <tt>swapfile</tt> on the NFS server in the mount providing <tt>/netfs</tt> and on the Dreamcast then do <tt>mkswap /netfs/swapfile</tt>. Then, whenever you want to start or stop swap-over-NFS, execute one of these:
</p><div><pre>/etc/init.d/nfsswap.sh start
/etc/init.d/nfsswap.sh stop
</pre></div>
<p>
This script handles the dance with the loop device and enabling the swapfile. If <tt>/netfs/swapfile</tt> isn't present, it won't do anything.
</p><p>
You'll notice the script I wrote lives in <tt>/etc/init.d</tt> (DC Linux predates <tt>systemd</tt>, which shall be considered a feature), and I was initially planning on making it facultatively autostart like NFS. However, let me be the first to point out the obvious that NFS can be slow, and swap-over-NFS can be <em>really</em> slow. The read and write sizes in <tt>/etc/fstab</tt> were selected after messing around with various values and seeing what performed best, but some <tt>configure</tt> scripts could take over an hour to execute (!), and some compilation jobs I just left to run overnight. This was a great stress test of the hardware and the buildchain, by the way. I had the Dreamcast running non-stop for days.
</p><p>
But what outright killed the idea of making swap-over-NFS default if available was that some really large packages still couldn't build. I would go to lunch with the Dreamcast chugging away, come back and find the console had seized up. Invariably on the console would be a whole string of these dreaded messages:
</p><div><pre>eth0: Too much work at interrupt, IntrStatus=0x0010.
</pre></div>
<p>
This message occurs because Linux 2.4.x's driver for the Realtek 8139 (in the BBA) looked like this:
</p><div><pre>static void rtl8139_interrupt (int irq, void *dev_instance,
                               struct pt_regs *regs)
{
        struct net_device *dev = (struct net_device *) dev_instance;
        struct rtl8139_private *tp = dev-&gt;priv;
        int boguscnt = max_interrupt_work;
        void *ioaddr = tp-&gt;mmio_addr;
        int ackstat, status;
        int link_changed = 0;

        (void)(&amp;tp-&gt;lock);

        do {
                status = readw (ioaddr + (IntrStatus));
                if (status == 0xFFFF)
                        break;
                if (status &amp; RxUnderrun)
                        link_changed = readw (ioaddr + (CSCR)) &amp; CSCR_LinkChangeBit;
                ackstat = status &amp; ~RxAckBits;
                writew ((ackstat), ioaddr + (IntrStatus));
                if ((status &amp;
                     (PCIErr | PCSTimeout | RxUnderrun | RxOverflow |
                      RxFIFOOver | TxErr | TxOK | RxErr | RxOK)) == 0)
                        break;
                if (netif_running (dev) &amp;&amp; (status &amp; RxAckBits))
                        rtl8139_rx_interrupt (dev, tp, ioaddr);
                if (status &amp; (PCIErr | PCSTimeout | RxUnderrun | RxOverflow |
                              RxFIFOOver | TxErr | RxErr))
                        rtl8139_weird_interrupt (dev, tp, ioaddr,
                                                 status, link_changed);
                if (netif_running (dev) &amp;&amp; (status &amp; (TxOK | TxErr)))
                        rtl8139_tx_interrupt (dev, tp, ioaddr);
                boguscnt--;
        } while (boguscnt &gt; 0);
        if (boguscnt &lt;= 0) {
                printk (KERN_WARNING "%s: Too much work at interrupt, "
                        "IntrStatus=0x%4.4x.\n", dev-&gt;name, status);
                writew ((0xffff), ioaddr + (IntrStatus));
        }
</pre></div>
<p>
By default the value of <tt>max_interrupt_work</tt> is 20, which means this interrupt routine will only permit itself to loop 20 times with back-to-back "work." If there's a lot of NFS traffic (like, oh, I dunno, a lot of swapping), then there'll be a lot of interrupts, and the driver will start dropping some. That means mangled writes, or if the victim operation happens to be a critical section of swap, the console will poop its pants. I tuned the NFS read and write sizes to reduce this as much as possible but I couldn't eliminate it completely. While I'm told this value can be increased as an option, I'm not sure what the ideal value is, and it would be better to get it to a later kernel where the driver is better written anyway (at least 2.5.something, preferably 2.6).
</p><p>
All this I/O activity also makes the Dreamcast's clock run slow, and the solution for that is once again <tt>chrony</tt> and NTP. I'll talk about that at the end of our tour.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj83jiEYDGxRuLLTean8W_y-kqF0V-tAwHrNTWENzhabus7tmoS5Ko8lNiD094C6ZIyoLDmlTFBCMT5kleouLg1_Z6kAlLW1HSHMe5_vkBS2Oq6p_FaN2dJ6hKosC09QTnPknh911h2_MzKDn5-GzbbG-yKt-kujdT4RmSh_KKrmY1pocXOiAARVxoJ/s640/games.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj83jiEYDGxRuLLTean8W_y-kqF0V-tAwHrNTWENzhabus7tmoS5Ko8lNiD094C6ZIyoLDmlTFBCMT5kleouLg1_Z6kAlLW1HSHMe5_vkBS2Oq6p_FaN2dJ6hKosC09QTnPknh911h2_MzKDn5-GzbbG-yKt-kujdT4RmSh_KKrmY1pocXOiAARVxoJ/s320/games.ppm.png" width="320"></a></p><p>

The other fun thing about Dreamcast Linux is that it recognizes it's running on a game console, for goodness' sake, so there have to be <em>games</em>. So there are some. The high scores don't save, of course, and most of these are text-based, but among others you've got Hack, Mille Bourne, Canfield, Adventure, Boggle, Tetris, Wumpus, Star Trek and ... PrBoom?

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhe3CwG0IPRRbNZ69p22xCVd58t96CF2Mu6ezynt2hJtQUS77qeiXiGROs_hmj3zHtePXSyhAAduojOiQsp0YR5R3rzqhZaihCe4nYs_NLsJrtdPi9bdkeFkEkFBkYYuPgPD9uXuA8rsqS2CTbMfgiEX1bPqnywtQz0kFYctoxFyGaVzqez9WBaexpx/s640/prboom.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhe3CwG0IPRRbNZ69p22xCVd58t96CF2Mu6ezynt2hJtQUS77qeiXiGROs_hmj3zHtePXSyhAAduojOiQsp0YR5R3rzqhZaihCe4nYs_NLsJrtdPi9bdkeFkEkFBkYYuPgPD9uXuA8rsqS2CTbMfgiEX1bPqnywtQz0kFYctoxFyGaVzqez9WBaexpx/s320/prboom.ppm.png" width="320"></a></p><p>

Conveniently, this version of PrBoom (2.2.0) uses SDL to render directly to the Dreamcast console framebuffer. The original documentation for Dreamcast Linux says you should </p><a href="http://web.archive.org/web/20060713154800/http://www.m17n.org/linux-sh/dreamcast/distribution">run it after <tt>fbset -depth 16</tt></a><p> (the default is 32). Frankly, it didn't seem to make any difference if the depth was 16, 32 or 8192: PrBoom started when it wanted to and bombed out when it didn't. Swap-over-NFS did seem to help, so maybe it was just a little short on memory, or maybe it was just placebo effect.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj6-S9hu9kqmInUBM2wSZwAJflumNDcxg7Lk24rX88yMi1FAqOS6xJsbFKv4xRdj0C-9i55JMktjLM-GFtIuuLkXTjrTMQtAZPtGtC7RMssUo7EKDKu6YOB7Z21PmiXdtsaHAy3B7doctuBsDbMhXvLnXpqJ4aACInhJfpFa3SFuJi7ilb8DYpbYXJ-/s640/prboom3.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj6-S9hu9kqmInUBM2wSZwAJflumNDcxg7Lk24rX88yMi1FAqOS6xJsbFKv4xRdj0C-9i55JMktjLM-GFtIuuLkXTjrTMQtAZPtGtC7RMssUo7EKDKu6YOB7Z21PmiXdtsaHAy3B7doctuBsDbMhXvLnXpqJ4aACInhJfpFa3SFuJi7ilb8DYpbYXJ-/s320/prboom3.ppm.png" width="320"></a></p>

<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEijfLFKAL0U1oVAm9miNh94rQz3ya1ij8jNyqzF4jvqGLk3UHlrFXPCDQNYLN7EFrRd5t7EaMmCYgA8Ijj3QfUwxCYgUCobnFeHxTSDMKjKwBhe6CQk7x_4y0IcOmspVBji9ELIVBQRhTV7e_Pid5j7IjBsEVZHiWhrwy7jgN8uMwhbf6A9QRnLlmSZ/s640/prboom4.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEijfLFKAL0U1oVAm9miNh94rQz3ya1ij8jNyqzF4jvqGLk3UHlrFXPCDQNYLN7EFrRd5t7EaMmCYgA8Ijj3QfUwxCYgUCobnFeHxTSDMKjKwBhe6CQk7x_4y0IcOmspVBji9ELIVBQRhTV7e_Pid5j7IjBsEVZHiWhrwy7jgN8uMwhbf6A9QRnLlmSZ/s320/prboom4.ppm.png" width="320"></a></p><p>

The artifact here is because the screen was moving while I was capturing, not because the game was defective. That said, performance isn't great because it's totally rendered in software (rendering at 640x480 doesn't help) and there's no support for the Dreamcast sound hardware either. It gets a little better with transparency off and at a smaller viewport. The Doom shareware WAD is helpfully included on disc.
</p><p>
The other included game engine is an older version of <tt>xmame</tt>. Try as I might, though, I couldn't get the SDL version to run on the local framebuffer, so that makes a good transition to talking about X support.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgLJPrHZAp0TAHkRGLLAkBh17ZOkyjS0w5bzxweZzCkRPPCSmMYEMLPosrWqax9zCITLZWcMFm5Xbvd9y0N0iehrkxDZdkE-vCBTovpoaBkWaEgA8UMLWaDYnJjBlUkJ6kGmONaVtxF8PzLG9PXq8a4thZ2LKOfpRLMi2ZkKxF-F5oIDSZCtWOy4Uly/s640/xfree86.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgLJPrHZAp0TAHkRGLLAkBh17ZOkyjS0w5bzxweZzCkRPPCSmMYEMLPosrWqax9zCITLZWcMFm5Xbvd9y0N0iehrkxDZdkE-vCBTovpoaBkWaEgA8UMLWaDYnJjBlUkJ6kGmONaVtxF8PzLG9PXq8a4thZ2LKOfpRLMi2ZkKxF-F5oIDSZCtWOy4Uly/s320/xfree86.ppm.png" width="320"></a></p><p>

Yes, you can run X in Dreamcast Linux (Wayland? ha ha ha). The included version is XFree86 3.3.6, interestingly reporting itself as running on </p><tt>i686</tt><p>, probably as a cross-compilation artifact. You'll definitely need the Dreamcast mouse for this and you really want swap-over-NFS running as well or the GD-ROM will really thrash (it works without it, but alarmingly slowly).

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhpKQXfdS1woDZlNU7_ZvlhHs88KAvYPblAVcIxsOyN0m9legxKxoPZpku4-stw5mUyF48YgrgT9eL9h5nQMAE8Ztd3dfAgtsuBWSGPGklOpbj4nwMfP03DWdmIgXQZXFdXwiLMdAX6uiGFN6_3ikEUKTw10YeTwo6tsI0oPLhRU0Go64zCRQeVWbr4/s640/xfree86b.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhpKQXfdS1woDZlNU7_ZvlhHs88KAvYPblAVcIxsOyN0m9legxKxoPZpku4-stw5mUyF48YgrgT9eL9h5nQMAE8Ztd3dfAgtsuBWSGPGklOpbj4nwMfP03DWdmIgXQZXFdXwiLMdAX6uiGFN6_3ikEUKTw10YeTwo6tsI0oPLhRU0Go64zCRQeVWbr4/s320/xfree86b.ppm.png" width="320"></a></p><p>

You get one resolution, though, and that resolution is 640x480.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg5JlyQa2wPh5cPIvOnM45FXcOSb2btj-1cjwn40wI1WXBmwW8bbeshznuWoRq1J67ERP4eotl6Gl-It1c7XmyDVRJtKwzqCDFuN26yJP0jXffceALByU-0z079W65dLTL3-osCileO3pAGSqoEO0IPXFUh2BsM0tOJNr7MWFAiYqBO-AXw21AEYwyr/s640/xstartup.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg5JlyQa2wPh5cPIvOnM45FXcOSb2btj-1cjwn40wI1WXBmwW8bbeshznuWoRq1J67ERP4eotl6Gl-It1c7XmyDVRJtKwzqCDFuN26yJP0jXffceALByU-0z079W65dLTL3-osCileO3pAGSqoEO0IPXFUh2BsM0tOJNr7MWFAiYqBO-AXw21AEYwyr/s320/xstartup.ppm.png" width="320"></a></p><p>

That stinks because the default session that opens (</p><tt>/root/.xsession</tt><p>) has windows that are clearly too big for the screen (but that's how it came, so I'm leaving it that way for now), and even worse on the TV set. Fortunately left clicking on the left window button will quickly minimize them. Don't close the login window, by the way, as that will end your X session.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiA27Tq2b_YvGQuSTYAhqKi_XzqhJ-nxsjysgoEjvwbhhRlWsuqPPHsVEFqsM2GoqI77YDKXDS2xkZz5zpVRGwu9InpNoXQOr_GWLHsf9HorCzLTf3y17Idyd7eUJJr_PEgdxiBFIBqLoIJzZ8YHiRUGOHcgQB2-Dj6KfMud8dTIsHThckWAML-UZIp/s640/xwm.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiA27Tq2b_YvGQuSTYAhqKi_XzqhJ-nxsjysgoEjvwbhhRlWsuqPPHsVEFqsM2GoqI77YDKXDS2xkZz5zpVRGwu9InpNoXQOr_GWLHsf9HorCzLTf3y17Idyd7eUJJr_PEgdxiBFIBqLoIJzZ8YHiRUGOHcgQB2-Dj6KfMud8dTIsHThckWAML-UZIp/s320/xwm.ppm.png" width="320"></a></p><p>

On the other hand, the nice big letters are definitely readable on a TV set or the little Treamcast LCD. The window manager is </p><tt>twm</tt><p>, a good choice for being low-impact.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjeon6ST2bvbUq2PB5lpRRDArQrujtXAWJMmRkhaAqUa67je7Rg68fXRYyTHf9i2YjLg03igNqG-LRHje5oy9rbudoC96HaZOGMj0CnhRuNTrsZTQviMGeO-22ipk3bkU4feQhy4r5arFCesZGgHAP7wjEgjbAnjw-3l6hFKXhBwbA98TCS0D4uCzXM/s640/mame.ppm.png"><img alt="" data-original-height="480" data-original-width="640" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjeon6ST2bvbUq2PB5lpRRDArQrujtXAWJMmRkhaAqUa67je7Rg68fXRYyTHf9i2YjLg03igNqG-LRHje5oy9rbudoC96HaZOGMj0CnhRuNTrsZTQviMGeO-22ipk3bkU4feQhy4r5arFCesZGgHAP7wjEgjbAnjw-3l6hFKXhBwbA98TCS0D4uCzXM/s320/mame.ppm.png" width="320"></a></p><p>

With </p><tt>login</tt><p> minimized and the </p><tt>xterm</tt><p> window shrunk to a more manageable size, we start </p><tt>xmame.x11</tt><p>. It's an old MAME, of course (0.37b15), and the default configuration in </p><tt>/usr/lib/xmame/xmamerc</tt><p> expects its ROMs in </p><tt>/var/lib/xmame</tt><p> which is naturally read-only. I solved this problem by making another NFS mount over that directly and loading ROMs there. This version of MAME plays Pac-Man by default, so I dug up a totally legal copy of the ROMs and renamed the components to the names it was expecting (you'll get some CRC warnings too, most likely).
</p><p>
With all that in place, there's no sound, but everything else seemed to work (legally). A really nice touch is that the Dreamcast controller D-pad is enabled as a joystick. Press Y for 1P credit and Start for 1P start.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJcpZVvay2BlstNl6MLkO0Jii-MnmdNGpAzc6bCe75ZXOTWyXBpNwttXOV7vrZi1tRAgrNEgdYQ6xJLIH_I3MxcpJnQ_tgk1OrKokAuD7pfELb008yUil-qTyxP0DTKt83LbPwbgleULzWl2og2iLLjB19rLzSpu--GVexoatq_HiWlg_hcGiCf48-/s4080/IMG_20230218_210338.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJcpZVvay2BlstNl6MLkO0Jii-MnmdNGpAzc6bCe75ZXOTWyXBpNwttXOV7vrZi1tRAgrNEgdYQ6xJLIH_I3MxcpJnQ_tgk1OrKokAuD7pfELb008yUil-qTyxP0DTKt83LbPwbgleULzWl2og2iLLjB19rLzSpu--GVexoatq_HiWlg_hcGiCf48-/s320/IMG_20230218_210338.jpg" width="320"></a></p><p>

There are no included graphical web browsers, and the build of X has some curious omissions like no Motif (possibly due to its licensing at the time) and no </p><tt>Xpm</tt><p> which would make doing so difficult, though there are Athena widgets and other basics (something like Chimera could potentially work in such an environment). However, both Lynx and </p><tt>w3m</tt><p> are included, and they seem to work fine for Gopher and Web access except of course for sites requiring TLS. In fact, there are no cryptography libraries on the system at all, and only a very old </p><tt>zlib</tt><p> (1.1.3).
</p><p>
So that brings us to what else I ended up adding. The first thing was to update <tt>zlib</tt>; the version on board is obviously way too old and also lacks header files, so it couldn't be compiled against for new software anyway. However, any update should also be done in such a way as to not upset programs linked against the older library since they would doubtlessly not be ABI-compatible. An exhaustive search of the entire filesystem found only three programs linked against the shipped <tt>/usr/lib/libz.so.1</tt>, namely CVS, Lynx and SDL MAME (but oddly not the X11 version). These were preserved by editing them in a hex editor to link them to <tt>/usr/lib/libz.so.0</tt> (note change in version number) and then symlinking that to the 1.1.3 shared library. With those programs preserved, I then built the current <tt>zlib</tt> 1.2.13 and added its header files and libraries.
</p><p>
The natural next step would be to build something like OpenSSL, but modern versions require later build tools (the build attempt turned into a big mess), and older versions don't support enough to make them worth the effort. Instead, I went the self-contained application route. We need HTTPS support with TLS, and fortunately yours truly maintains a self-contained TLS library for ancient hardware: <a href="http://oldvcr.blogspot.com/2022/07/crypto-ancienne-20-now-brings-tls-13-to.html">Crypto Ancienne</a>. The length of the one-file build really strained the Dreamcast building it, but I finally got it to stick with <tt>-O2</tt>, and <tt>carl</tt> works great on the Dreamcast as a substitute for <tt>curl</tt> for downloading over HTTP and HTTPS. For SSH I selected <a href="https://matt.ucc.asn.au/dropbear/dropbear.html">Dropbear <tt>ssh</tt></a>, a "relatively small" SSH client and server package that's also completely self-contained and intended for embedded systems. It supports public keys (guess you'll be storing those on NFS too) and X11 forwarding. It connected to all my local SSH servers just fine.
</p><p>
And since there's always a need for useful network tools, I also threw in builds of <a href="http://www.dest-unreach.org/socat/"><tt>socat</tt></a> (minus the crypto support), <a href="http://www.acme.com/software/micro_inetd/"><tt>micro_inetd</tt></a> and period-correct <tt>netcat</tt>. Patches for these, mostly because this version of <tt>gcc</tt> doesn't like directives inside of macros, are all in <tt>/usr/src</tt>. With <tt>micro_inetd</tt> in particular you can run <tt>carl</tt> in proxy mode (something like <tt>micro_inetd 8765 /usr/bin/carl -pt</tt>, which listens on port 8765), or anything else you don't want to/can't hack <tt>/etc/inetd.conf</tt> for.
</p><p>
Last but not least: the time. As I mentioned earlier, the clock tends to lose time with lots of I/O, and DC Linux doesn't support the Dreamcast's hardware clock (the one that's always asking you for the time <a href="http://oldvcr.blogspot.com/2022/11/refurb-weekend-sega-dreamcast.html">when the battery runs down</a>), so the best solution is NTP. Although I fashioned a tiny clone <tt>ntpdate</tt> out of <a href="https://github.com/lettier/ntpclient"><tt>ntpclient</tt></a> (source for my changes in <tt>/usr/src</tt>), this wasn't enough to avoid <tt>make</tt> complaining about clock skew all the time after long jobs, and the timezone data included with this version is of course 22 years out of date with respect to changes in timezones and daylight savings.
</p><p>
Updating the timezone data was simply a matter of copying files from this Fedora 37 workstation, but building David Mills' venerable reference NTP implementation was one of the big packages that made the Dreamcast consistently flip out. Fortunately, <a href="https://chrony.tuxfamily.org/"><tt>chrony</tt></a> compiled with minimal changes. Because the <tt>initrd</tt> was dangerously full, however, my initial attempt to put the configuration file in <tt>/etc/chrony.conf</tt> caused <tt>attempt to access beyond end of device</tt> errors when I restarted. This was solved by changing the configuration to use <tt>/usr/etc/chrony.conf</tt> instead, which has no such limitation. The configuration is very simple:
</p><div><pre>server ntp iburst
pool pool.ntp.org iburst
driftfile /var/lib/chrony/drift
makestep 1 3
</pre></div>
<p>
This causes <tt>chronyd</tt> to try consulting either a (presumably) local timesource named <tt>ntp</tt> or the North American NTP pool, and steps the clock for the first couple updates, slewing thereafter. Only one needs to be accessible (in fact, on my home test network which is not externally routable, only my local stratum-2 NTP timesource is available). The driftfile directive is obviously useless on a read-only filesystem, but it's there for future consideration. <tt>chronyd</tt> will automatically start with the system, and you can query its status with <tt>chronyc</tt>. Linux does not read or update the Dreamcast hardware clock.
</p><p>
Finally, how to set the local timezone? By default this is JST, the home timezone of DC Linux's original project leader, which I've preserved as an homage but certainly isn't <em>my</em> local timezone. Irritatingly, relinking <tt>/etc/localtime</tt> will run the risk of incurring the same problems with the <tt>initrd</tt>, but we have a simpler, more flexible way: I added hooks to <tt>/etc/profile</tt>, <tt>/etc/csh.cshrc</tt>, <tt>/etc/csh.login</tt> and <tt>/etc/csh.logout</tt> that, if they exist and are executable, will run <tt>/netfs/profile</tt>, <tt>/netfs/csh.cshrc</tt>, <tt>/netfs/csh.login</tt> and <tt>/netfs/csh.logout</tt> respectively. In the appropriate file just set the <tt>TZ</tt> environment variable to your timezone, which for me is <tt>PST8PDT</tt>. You can use this mechanism as well for things like changing your shell (I have <tt>exec /usr/bin/tcsh</tt> in <tt>/netfs/profile</tt> because I'm one of <em>those</em> people). There's also a hook during boot in <tt>init.d</tt> to run <tt>/netfs/startup.sh</tt> if it exists and is executable.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg9EcOzc64ybPPg8ibFI04jeff92vt1W4b6zE3967q6BZ-lPLlOkURzQBD2tMyC1kVp53nD_Pb9dQv7AZvLSo7Wz6yI6l8nZyYLGDQ2lK78CpzhIHOhfkuemoER7zu83yL9nOC-Fu8G-6wUa70msy5b8WjM049YbyEIW0EE1e_SpL57QszBzj7IrCdG/s4080/IMG_20230218_212621.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg9EcOzc64ybPPg8ibFI04jeff92vt1W4b6zE3967q6BZ-lPLlOkURzQBD2tMyC1kVp53nD_Pb9dQv7AZvLSo7Wz6yI6l8nZyYLGDQ2lK78CpzhIHOhfkuemoER7zu83yL9nOC-Fu8G-6wUa70msy5b8WjM049YbyEIW0EE1e_SpL57QszBzj7IrCdG/s320/IMG_20230218_212621.jpg" width="320"></a></p><p>

Total number of useless discs made during the creation of Dusted-off Dreamcast Linux: eight. Several Bothan CD-Rs died to bring you this update.
</p><p>
What's next? The obvious one is to try to update the kernel, since that should yield more features without (too much) churn to the userland experience, and should fix that obnoxious Realtek 8139 driver problem with dropped interrupts. <a href="https://sourceforge.net/projects/linuxsh/">The LinuxSH project</a> has kernels through at least 2.6, though the latest kernels are all marked as testing, and the source in CVS shows that the Dreamcast hardware was already marked as "attic" even then. We also don't know if any changes were made to build the userland binaries it comes with. Until I come up with a cross-compiling solution, though, we'd be largely limited to pre-built kernels and wouldn't be easily able to fix bugs in them.
</p><p>
On the userland side itself a few more games would be nice, as would expanding the available X libraries so that more substantial apps can be run, though the generally slow graphics and low resolution would be a practical limit on many things. And of course trying to set up the included Lynx forwarding through a local self-hosted Crypto Ancienne HTTPS-over-HTTP proxy will neatly solve the TLS problem, assuming this is one of the versions that can still be coerced into doing so (alternatively, building Chimera and its needed image libraries might also do). I should see how much <tt>w3m</tt> can be tricked into doing something similar.
</p><p>
In the meantime, get your Dreamcast out of the closet and feel free to play around. I've christened it Dusted-off Dreamcast Linux, or DODCL, which you pronounce "DOH-deckle" (a la Intellivision "decle"). <a href="https://github.com/classilla/dclinux">The components and burning instructions are on Github</a>.
</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Red Hat to contribute container tech (Podman, bootc, ComposeFS...) to CNCF (254 pts)]]></title>
            <link>https://www.redhat.com/en/blog/red-hat-contribute-comprehensive-container-tools-collection-cloud-native-computing-foundation</link>
            <guid>42139044</guid>
            <pubDate>Thu, 14 Nov 2024 17:59:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.redhat.com/en/blog/red-hat-contribute-comprehensive-container-tools-collection-cloud-native-computing-foundation">https://www.redhat.com/en/blog/red-hat-contribute-comprehensive-container-tools-collection-cloud-native-computing-foundation</a>, See on <a href="https://news.ycombinator.com/item?id=42139044">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p dir="ltr">The continued importance of cloud-native applications in an AI and hybrid cloud-centric world demands an open, more accessible ecosystem of development tools. Today, we’re pleased to help drive cloud-native evolution further into the next-generation of IT with our intent to contribute a comprehensive set of container tools to the Cloud Native Computing Foundation (CNCF), including&nbsp;<a href="https://containers.github.io/bootc/">bootc</a>,&nbsp;<a href="https://buildah.io/">Buildah</a>,&nbsp;<a href="https://github.com/containers/composefs">Composefs</a>,&nbsp;<a href="https://podman.io/">Podman</a>,&nbsp;<a href="https://podman-desktop.io/">Podman Desktop</a>&nbsp;and&nbsp;<a href="https://github.com/containers/skopeo">Skopeo</a>.</p><p dir="ltr">Upon acceptance by the CNCF, the contributed tools will become hosted projects – alongside technologies like Kubernetes, Prometheus, Helm and many more – and part of a vendor-neutral foundation aligned with the projects’ technical interests. The tools will start as Sandbox projects, allowing end-users to contribute, collaborate, grow the project communities and mature the technology.</p><p dir="ltr">While already popular tools with strong user bases - with Podman Desktop having been downloaded more than 1.5 million times and Podman having 23.6k GitHub Stars - we believe as CNCF-hosted projects, these tools will continue to meet the needs of developers today while paving the way for container technologies to grow organically and evolve to meet the dynamic needs of tomorrow.</p><h2 dir="ltr">End-to-end open innovation</h2><p dir="ltr">Artificial intelligence is exposing technological and operational gaps in the technology industry more than ever. To meet the changing needs of developers, Red Hat has been working to not only drive innovation at the workload level -- but also into core functions to better enable end-users to build and run these advanced and intelligent workloads.</p><p dir="ltr">Containers are a fundamental part of these workloads, existing at the center of today’s cloud-native infrastructure with Linux forming the core of each respective container. Through the contribution of these cloud-native container tools, users have better and more consistent access between Linux and Kubernetes. With Linux as the foundation, these tools provide users an end-to-end cloud-native stack to build, deploy and manage containers at scale across the hybrid cloud.</p><p dir="ltr">Customers who use&nbsp;<a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux">Red Hat Enterprise Linux (RHEL)</a> can utilize Podman, Buildah, Skopeo and more, knowing they are optimized for RHEL and RHEL supports them in production. The contributed container tools are the building blocks many cloud-native workloads rely on and Red Hat is committed to each project’s future as an open source technology, bringing flexibility, accessibility and enhanced security features to container development.</p><h2 dir="ltr">Guiding the next generation of cloud-native through collaboration</h2><p dir="ltr">Open source is at the heart of everything Red Hat does, and we believe making the code available is just the first step. It’s the collaboration that truly defines open source and leads to groundbreaking innovation. Newer workloads are forcing application developers to innovate in ways that open source is uniquely positioned to help guide.</p><p dir="ltr">Projects like Podman are at the center of this innovation for container technologies and&nbsp; Podman Desktop makes it accessible to the developers. That is why, while already a popular project, Podman is being submitted for contribution at the Sandbox level. Podman as a Sandbox project allows for the community to grow organically, fostering collaboration and growing the diversity of contributors and maintainers - ultimately making it a stronger technology. We believe the CNCF is the place to make this innovation happen in the open.</p><p dir="ltr">More information about these projects, including how to get involved, is below:</p><h3 dir="ltr">Podman, Buildah, &amp; Skopeo</h3><p dir="ltr">Source:&nbsp;<a href="https://github.com/containers/podman">https://github.com/containers/podman</a><br>Source:&nbsp;<a href="https://github.com/containers/buildah">https://github.com/containers/buildah</a><br>Source:&nbsp;<a href="https://github.com/containers/skopeo">https://github.com/containers/skopeo</a><br>Community:&nbsp;<a href="https://podman.io/community">https://podman.io/community</a>&nbsp;</p><h3 dir="ltr">Podman Desktop</h3><p dir="ltr">Source:&nbsp;<a href="https://github.com/podman-desktop/podman-desktop">https://github.com/podman-desktop/podman-desktop</a><br>Community:&nbsp;<a href="https://discord.com/invite/x5GzFF6QH4">https://discord.com/invite/x5GzFF6QH4</a></p><h3 dir="ltr">Bootc</h3><p dir="ltr">Source:&nbsp;<a href="https://github.com/containers/bootc">https://github.com/containers/bootc</a><br>Community:&nbsp;<a href="https://github.com/containers/bootc/discussions">https://github.com/containers/bootc/discussions</a><br>Matrix:&nbsp;<a href="https://matrix.to/#/#bootc:fedoraproject.org">https://matrix.to/#/#bootc:fedoraproject.org</a></p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Something weird is happening with LLMs and chess (333 pts)]]></title>
            <link>https://dynomight.substack.com/p/chess</link>
            <guid>42138289</guid>
            <pubDate>Thu, 14 Nov 2024 17:05:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dynomight.substack.com/p/chess">https://dynomight.substack.com/p/chess</a>, See on <a href="https://news.ycombinator.com/item?id=42138289">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><span>(This post might look better at </span><a href="https://dynomight.net/chess/" rel="">dynomight.net/chess</a><span>.)</span></p><p>A year ago, there was a lot of talk about large language models (LLMs) playing chess. Word was that if you trained a big enough model on enough text, then you could send it a partially played game, ask it to predict the next move, and it would play at the level of an advanced amateur.</p><p><span>This seemed important. These are “language” models, after all, designed to predict </span><em>language</em><span>.</span></p><p><span>Now, modern LLMs are trained on a sizeable fraction of all the text ever created. This surely includes many chess games. But they weren’t </span><em>designed</em><span> to be good at chess. And the games that are available are just </span><em>lists of moves</em><span>. Yet people found that LLMs could play all the way through to the end game, with never-before-seen boards.</span></p><p><span>Did the language models build up some kind of internal representation of board state? And how to construct that state from lists of moves in chess’s </span><a href="https://en.wikipedia.org/wiki/Portable_Game_Notation" rel="">extremely confusing notation</a><span>? And how valuable different pieces and positions are? And how to force checkmate in an end-game? And they did this all “by accident”, as part of their goal of predicting general text?</span></p><p>If language models can do all that for chess, then maybe it’s a hint of how they deal with other situations too.</p><p>So that was very exciting. A year ago.</p><p>Since then, there’s mostly been silence. So I decided to check in and see how things are going. Having done that, I can now report: Weirdly.</p><p>To make LLMs play chess, I sent them prompts like this:</p><pre><code><code>You are a chess grandmaster.
Please choose your next move.
Use standard algebraic notation, e.g. "e4" or "Rdf8" or "R1a3".
NEVER give a turn number.
NEVER explain your choice.
Here is a representation of the position:

[Event "Shamkir Chess"]
[White "Anand, Viswanathan"]
[Black "Topalov, Veselin"]
[Result "1-0"]
[WhiteElo "2779"]
[BlackElo "2740"]

1. e4 e6 2. d3 c5 3. Nf3 Nc6 4. g3 Nf6 5.
</code></code></pre><p>I used the output as a move. I always had the LLM play as white against Stockfish—a standard chess AI—on the lowest difficulty setting.</p><p><span>The first model I tried was </span><code>llama-3.2-3b</code><span>. This is a “base model”, meaning it is mostly trained to output text, not to chat with you or obey instructions. It’s quite small by modern standards, with only 3 billion parameters. For reference, GPT-2, released back in 2019, had 1.5 billion parameters, and GPT-4 is rumored to have around 1.8 </span><em>trillion.</em></p><p>I had it play 50 games, then had a chess engine score each board after each turn in “centipawns”. This is a measure where a pawn is 100 points, but there’s also accounting for position. If the game was over, I assigned a score of +1500 if the LLM won, 0 if there was a tie, and -1500 if it lost.</p><p>The results were:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:256537,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb52e61de-982c-46cd-8bbd-42af3497b52e_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/AAsQ2Ydi" rel="">Terrible</a><span>. (Click to see a game.)</span></p><p>In the above figure, there’s one line for each game, and the dark line shows the per-turn median. The LLM can play standard openings for a few moves but then quickly starts throwing away pieces. It lost every single game, even though Stockfish was on the lowest setting.</p><p><span>Maybe that model is too small? So I got </span><code>llama-3.1-70b</code><span>, which is a similar model but with 70 billion parameters instead of 3 billion. The results were:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/dbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:371772,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdbb29a51-e317-4c50-98de-48620db02e24_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/56nPlnP3" rel="">Terrible</a><span>.</span></p><p><span>A </span><em>little</em><span> better, but still extremely bad. Next I tried </span><code>llama-3.1-70b-instruct</code><span>, a similar model, except trained to be better at following instructions. The results were:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:321740,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2f19552-28b0-4940-b1ed-35a1878dd16d_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/uJu3RKRR" rel="">Terrible</a><span>.</span></p><p><span>Maybe there’s something wrong with the Llama models or datasets? So I tried </span><code>Qwen-2.5-72b</code><span>.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F343dab89-7711-4967-956d-55de05a35228_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F343dab89-7711-4967-956d-55de05a35228_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F343dab89-7711-4967-956d-55de05a35228_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F343dab89-7711-4967-956d-55de05a35228_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F343dab89-7711-4967-956d-55de05a35228_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F343dab89-7711-4967-956d-55de05a35228_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/343dab89-7711-4967-956d-55de05a35228_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:283225,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F343dab89-7711-4967-956d-55de05a35228_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F343dab89-7711-4967-956d-55de05a35228_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F343dab89-7711-4967-956d-55de05a35228_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F343dab89-7711-4967-956d-55de05a35228_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/5ZMxoM3T" rel="">Terrible.</a></p><p><span>Maybe Qwen is somehow defective too? So I tried </span><code>command-r-v01</code><span>, a 35 billion parameter model.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:291579,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e4a01c4-11e7-4e72-a762-b2e33c01514d_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/TrkfFSTA" rel="">Terrible.</a></p><p><span>And then I tried </span><code>gemma-2-27b</code><span>.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:314807,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc050c41-c775-43ab-999f-11885e837a9b_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/FeNVh8no" rel="">Terrrible.</a></p><p><span>And then I tried </span><code>gpt-3.5-turbo-instruct</code><span>. This is a closed OpenAI model, so details are very murky. I only ran 10 trials since AI companies have inexplicably neglected to send me free API keys and this was costing The </span><a href="https://dynomight.net/automated/" rel="">Automator</a><span> money. The results were:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:163309,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d17854c-cc7b-4919-aa54-8b9da073af61_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/4CCCdinZ" rel="">Excellent</a><span>. Very, </span><em>very</em><span>, good.</span></p><p>Even if you raise Stockfish’s level a few clicks, this model will still win every game.</p><p><span>Moving on… I next tried </span><code>gpt-3.5-turbo</code><span>, a model that’s similar, except tuned to be more chatty and conversational.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:137682,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69654b9f-a576-45d0-a0fa-8fa604e7913f_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/Q7QwEBcn" rel="">Terrible</a><span>.</span></p><p><span>And then I tried </span><code>gpt-4o-mini</code><span>, which is a newer chat model.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:166071,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8416e966-b379-4c0d-b856-6362514dcd15_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/z9PyJVSE" rel="">Terrible</a><span>.</span></p><p><span>And then I tried </span><code>gpt-4o</code><span>, a bigger chat model.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:174783,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F61f16877-5555-49e4-854f-a11f21f8546f_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/govbFo94" rel="">Terrible</a><span>.</span></p><p>It lost every single game, though it lost slightly slower.</p><p><span>Finally, I tried </span><code>o1-mini</code><span>, a model that’s supposed to be able to solve complex tasks. (I’m too poor for </span><code>o1</code><span>.)</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/fb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:147468,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffb2fd0fd-6d7e-4c6d-82c3-2717816eca6d_1800x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://lichess.org/d44jrD2E" rel="">Terrible</a><span>.</span></p><p>So, umm:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F509c4e04-b434-486a-982e-768c885f14a3_704x894.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F509c4e04-b434-486a-982e-768c885f14a3_704x894.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F509c4e04-b434-486a-982e-768c885f14a3_704x894.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F509c4e04-b434-486a-982e-768c885f14a3_704x894.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F509c4e04-b434-486a-982e-768c885f14a3_704x894.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F509c4e04-b434-486a-982e-768c885f14a3_704x894.png" width="356" height="452.07954545454544" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/509c4e04-b434-486a-982e-768c885f14a3_704x894.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:894,&quot;width&quot;:704,&quot;resizeWidth&quot;:356,&quot;bytes&quot;:95109,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F509c4e04-b434-486a-982e-768c885f14a3_704x894.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F509c4e04-b434-486a-982e-768c885f14a3_704x894.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F509c4e04-b434-486a-982e-768c885f14a3_704x894.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F509c4e04-b434-486a-982e-768c885f14a3_704x894.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>And, uh:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:284835,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6375525c-a5bc-4ee6-82a3-d64c8705a724_2100x1225.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Notice anything? Any patterns jump out at you?</p><p>There are lots of people on the internet who have tried to get LLMs to play chess. The history seems to go something like this:</p><ul><li><p><strong>Before September 2023</strong><span>: Wow, recent LLMs can sort of play chess! They fall apart after the early game, but they can do something! Amazing!</span></p></li><li><p><strong>September-October 2023</strong><span>: Wow! LLMs can now play chess at an advanced amateur level! Amazing!</span></p></li><li><p><strong>(Year of silence.)</strong></p></li><li><p><strong>Recently:</strong><span> Wow, recent LLMs can sort of play chess! They fall apart after the early game, but they can do something! Amazing!</span></p></li></ul><p><span>I can only assume that lots of other people are experimenting with recent models, getting terrible results, and then mostly not saying anything. I haven’t seen anyone say explicitly that only </span><code>gpt-3.5-turbo-instruct</code><span> is good at chess. No other LLM is remotely close.</span></p><p><span>To be fair, a year ago, many people did notice that </span><code>gpt-3.5-turbo-instruct</code><span> was much better than </span><code>gpt-3.5-turbo</code><span>. Many speculated at the time that this is because </span><code>gpt-3.5-turbo</code><span> was subject to additional tuning to be good at chatting.</span></p><p>That might be true. Here’s a comparison of three models where we have similar versions with or without additional chat tuning.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png" width="1456" height="849" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:198030,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa05fd0ba-78f5-4269-942f-c7ec12e45b0b_2100x1225.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>(Again, do not be confused by the name </span><code>gpt-3.5-turbo-instruct</code><span>. I stress that this is more like a base model than </span><code>gpt-3.5-turbo</code><span>. This is the opposite of the naming scheme everyone else uses where “</span><code>instruct</code><span>” or “</span><code>it</code><span>” means more tuning to be good at chatting.)</span></p><p>In all cases, additional instruction tuning makes the model worse. But the difference is very small in two cases, and enormous in the other.</p><p>I can think of four possible explanations.</p><p><strong>Theory 1: Base models </strong><em><strong>at sufficient scale</strong></em><strong> can play chess, but instruction tuning destroys it.</strong></p><p><span>This would be consistent with our data. But I did manage to get </span><code>llama-3.1-405b</code><span> to play a couple games. Despite being larger than </span><code>gpt-3.5-turbo</code><span>, it was still terrible.</span></p><p><strong>Theory 2: GPT-3.5-instruct was trained on more chess games.</strong></p><p><span>All models were clearly trained on a </span><em>lot</em><span> of chess games. But it’s hard to know exactly how many.</span></p><p><strong>Theory 3: There’s something particular about different transformer architectures.</strong></p><p>I doubt this, but it could be that for some reason, Llama type models are uniquely bad at chess.</p><p><strong>Theory 4: There’s “competition” between different types of data.</strong></p><p><span>We know that transformers trained specifically on chess games can be </span><a href="https://github.com/sgrvinod/chess-transformers" rel="">extremely good</a><span> at chess. Maybe </span><code>gpt-3.5-turbo-instruct</code><span> happens to have been trained on a higher </span><em>fraction</em><span> of chess games, so it decided to dedicate a larger fraction of its parameters to chess.</span></p><p><span>That is, maybe LLMs sort of have little “chess subnetworks” hidden inside of them, but the size of the subnetworks depends on the fraction of data that was chess. (If this theory were true, we should probably expect that </span><em>big enough</em><span> model should become good at chess, provided they are trained on enough chess games, even if the </span><em>fraction</em><span> of chess games is low.)</span></p><p>I did things this way (i.e. by working with standard algebraic notation) because this is how people got good results two years ago, and in preliminary experiments I also found it to work best.</p><p><span>If you want to know </span><em>exactly</em><span> how I did things, here are some words: I ran all the open models (anything </span><em>not</em><span> from OpenAI, meaning anything that doesn’t start with </span><code>gpt</code><span> or </span><code>o1</code><span>) myself using </span><code>Q5_K_M</code><span> quantization, whatever that is. For the open models I manually generated the set of legal moves and then used </span><a href="https://github.com/ggerganov/llama.cpp/blob/master/grammars/README.md" rel="">grammars</a><span> to constrain the models, so they always generated legal moves. Since OpenAI is lame and doesn’t support full grammars, for the closed (OpenAI) models I tried generating up to 10 times and if it still couldn’t come up with a legal move, I just chose one randomly. For the chat models </span><code>llama-3.1-70b-instruct</code><span>, </span><code>gpt-3.5-turbo</code><span>, </span><code>gpt-4o-mini</code><span>, and </span><code>gpt-4o</code><span> I changed the system prompt to “You are a chess grandmaster. You will be given a partially completed game. After seeing it, you should choose the next move.” It’s impossible to change the system prompt for </span><code>o1-mini</code><span>, so I didn’t. I used a temperature of 0.7 for all the open models and the default for the closed (OpenAI) models. The fact that OpenAI has “open” as part of their name sure made this paragraph hard to write.</span></p><p><span>One </span><em>extremely</em><span> strange thing I noticed was that if I gave a prompt like “</span><code>1. e4 e5 2. </code><span>” (with a space at the end), the open models would play much, </span><em>much</em><span> worse than if I gave a prompt like “</span><code>1 e4 e5 2.</code><span>” (without a space) and let the model generate the space itself. Huh?</span></p><p><span>After some confusion, I’m pretty sure this is because of the tokenizer. Look at how the </span><a href="https://belladoreai.github.io/llama-tokenizer-js/example-demo/build/" rel="">Llama tokenizer</a><span> breaks up a string of moves:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png" width="1095" height="70" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:70,&quot;width&quot;:1095,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:38204,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7c58f161-e555-44f2-b281-73f3f2bd9b6d_1095x70.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>After the “</span><code>1.</code><span>”, it generates “</span><code> e</code><span>” as a </span><em>single token</em><span>. That’s not the same as having a space followed by an </span><code>e</code><span>. So putting in the space and asking models to generate tokens presents the model with a confusing situation and lead to bad predictions.</span></p><p>The right way to deal with this is “token healing”—to delete the last token of the input and then do constrained generation over all strings that start with the deleted stuff. But I couldn’t figure out any easy way to do that. So, instead I left the space out and modified the grammar so that the model could generate a space (or not), then one of the current legal moves, and then another space (or not). Fun times!</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Something weird is happening with LLMs and Chess (126 pts)]]></title>
            <link>https://dynomight.net/chess/</link>
            <guid>42138276</guid>
            <pubDate>Thu, 14 Nov 2024 17:04:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dynomight.net/chess/">https://dynomight.net/chess/</a>, See on <a href="https://news.ycombinator.com/item?id=42138276">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
    <p>A year ago, there was a lot of talk about large language models (LLMs) playing chess. Word was that if you trained a big enough model on enough text, then you could send it a partially played game, ask it to predict the next move, and it would play at the level of an advanced amateur.</p>

<p>This seemed important. These are “language” models, after all, designed to predict <em>language</em>.</p>

<p>Now, modern LLMs are trained on a sizeable fraction of all the text ever created. This surely includes many chess games. But they weren’t <em>designed</em> to be good at chess. And the games that are available are just <em>lists of moves</em>. Yet people found that LLMs could play all the way through to the end game, with never-before-seen boards.</p>

<p>Did the language models build up some kind of internal representation of board state? And how to construct that state from lists of moves in chess’s <a href="https://en.wikipedia.org/wiki/Portable_Game_Notation">extremely confusing notation</a>? And how valuable different pieces and positions are? And how to force checkmate in an end-game? And they did this all “by accident”, as part of their goal of predicting general text?</p>

<p>If language models can do all that for chess, then maybe it’s a hint of how they deal with other situations too.</p>

<p>So that was very exciting. A year ago.</p>

<p>Since then, there’s mostly been silence. So I decided to check in and see how things are going. Having done that, I can now report: Weirdly.</p>

<h2 id="what-i-did">What I did</h2>

<p>To make LLMs play chess, I sent them prompts like this:</p>

<div><pre><code>You are a chess grandmaster.
Please choose your next move.
Use standard algebraic notation, e.g. "e4" or "Rdf8" or "R1a3".
NEVER give a turn number.
NEVER explain your choice.
Here is a representation of the position:

[Event "Shamkir Chess"]
[White "Anand, Viswanathan"]
[Black "Topalov, Veselin"]
[Result "1-0"]
[WhiteElo "2779"]
[BlackElo "2740"]

1. e4 e6 2. d3 c5 3. Nf3 Nc6 4. g3 Nf6 5.
</code></pre></div>

<p>I used the output as a move. I always had the LLM play as white against Stockfish—a standard chess AI—on the lowest difficulty setting.</p>

<p>The first model I tried was <a href="https://huggingface.co/meta-llama/Llama-3.2-3B"><code>llama-3.2-3b</code></a>. This is a “base model”, meaning it is mostly trained to output text, not to chat with you or obey instructions. It’s quite small by modern standards, with only 3 billion parameters. For reference, GPT-2, released back in 2019, had 1.5 billion parameters, and GPT-4 is rumored to have around 1.8 <em>trillion.</em></p>

<p>I had it play 50 games, then had a chess engine score each board after each turn in “centipawns”. This is a measure where a pawn is 100 points, but there’s also accounting for position. If the game was over, I assigned a score of +1500 if the LLM won, 0 if there was a tie, and -1500 if it lost.</p>

<p>The results were:</p>

<p><a href="https://dynomight.net/img/chess/llama-3.2-3b_stockfish.pdf"><img src="https://dynomight.net/img/chess/llama-3.2-3b_stockfish.svg" alt=""></a></p>

<p><a href="https://lichess.org/AAsQ2Ydi">Terrible</a>. (Click to see a game. Click the above image to zoom in.)</p>

<p>In the above figure, there’s one light line for each game, and the black line shows the per-turn median. The LLM can play standard openings for a few moves but then quickly starts throwing away pieces. It lost every single game, even though Stockfish was on the lowest setting.</p>

<p>Maybe that model is too small? So I got <a href="https://huggingface.co/meta-llama/Llama-3.1-70B"><code>llama-3.1-70b</code></a>, which is a similar model but with 70 billion parameters instead of 3 billion. The results were:</p>

<p><a href="https://dynomight.net/img/chess/llama-3.1-70b_stockfish.pdf"><img src="https://dynomight.net/img/chess/llama-3.1-70b_stockfish.svg" alt=""></a></p>

<p><a href="https://lichess.org/56nPlnP3">Terrible</a>. A <em>little</em> better, but still extremely bad.</p>

<p>Next I tried <code>llama-3.1-70b-instruct</code>, a similar model, except trained to be better at following instructions. The results were:</p>

<p><a href="https://dynomight.net/img/chess/llama-3.1-70b-instruct_stockfish.pdf"><img src="https://dynomight.net/img/chess/llama-3.1-70b-instruct_stockfish.svg" alt=""></a></p>

<p><a href="https://lichess.org/uJu3RKRR">Terrible</a>.</p>

<p>Maybe there’s something wrong with the Llama models or datasets? So I tried <a href="https://huggingface.co/Qwen/Qwen2.5-72B"><code>Qwen-2.5-72b</code></a>.</p>

<p><a href="https://dynomight.net/img/chess/qwen-2.5-72b_stockfish.pdf"><img src="https://dynomight.net/img/chess/qwen-2.5-72b_stockfish.svg" alt=""></a></p>

<p><a href="https://lichess.org/5ZMxoM3T">Terrible.</a></p>

<p>Maybe Qwen is somehow defective too? So I tried <a href="https://huggingface.co/CohereForAI/c4ai-command-r-v01"><code>command-r-v01</code></a>, a 35 billion parameter model.</p>

<p><a href="https://dynomight.net/img/chess/command-r-v01_stockfish.pdf"><img src="https://dynomight.net/img/chess/command-r-v01_stockfish.svg" alt=""></a></p>

<p><a href="https://lichess.org/TrkfFSTA">Terrible.</a></p>

<p>And then I tried <a href="https://huggingface.co/google/gemma-2-27b"><code>gemma-2-27b</code></a>.</p>

<p><a href="https://dynomight.net/img/chess/gemma-2-27b_stockfish.pdf"><img src="https://dynomight.net/img/chess/gemma-2-27b_stockfish.svg" alt=""></a></p>

<p><a href="https://lichess.org/FeNVh8no">Terrrible.</a></p>

<p>And then I tried <code>gpt-3.5-turbo-instruct</code>. This is a closed OpenAI model, so details are very murky. I only ran 10 trials since AI companies have inexplicable neglected to send me free API keys and this was costing <a href="https://dynomight.net/automated/">The Automator</a> money. The results were:</p>

<p><a href="https://dynomight.net/img/chess/gpt-3.5-turbo-instruct_stockfish.pdf"><img src="https://dynomight.net/img/chess/gpt-3.5-turbo-instruct_stockfish.svg" alt=""></a></p>

<p><a href="https://lichess.org/4CCCdinZ">Excellent</a>. Very, <em>very</em>, good.</p>

<p>Even if you raise Stockfish’s level a few clicks, this model will still win every game.</p>

<p>Moving on…  I next tried <code>gpt-3.5-turbo</code>, a model that’s similar, except tuned to be more chatty and conversational.</p>

<p><a href="https://dynomight.net/img/chess/gpt-3.5-turbo_stockfish.pdf"><img src="https://dynomight.net/img/chess/gpt-3.5-turbo_stockfish.svg" alt=""></a></p>

<p><a href="https://lichess.org/Q7QwEBcn">Terrible</a>.</p>

<p>And then I tried <code>gpt-4o-mini</code>, which is a newer chat model.</p>

<p><a href="https://dynomight.net/img/chess/gpt-4o-mini_stockfish.pdf"><img src="https://dynomight.net/img/chess/gpt-4o-mini_stockfish.svg" alt=""></a></p>

<p><a href="https://lichess.org/z9PyJVSE">Terrible</a>.</p>

<p>And then I tried <code>gpt-4o</code>, a bigger chat model.</p>

<p><a href="https://dynomight.net/img/chess/gpt-4o_stockfish.pdf"><img src="https://dynomight.net/img/chess/gpt-4o_stockfish.svg" alt="gpt-4o"></a></p>

<p><a href="https://lichess.org/govbFo94">Terrible</a>.</p>

<p>It lost every single game, though it lost slightly slower.</p>

<p>Finally, I tried <code>o1-mini</code>, a model that’s supposed to be able to solve complex tasks. (I’m too poor for <code>o1</code>.)</p>

<p><a href="https://dynomight.net/img/chess/o1-mini_stockfish.pdf"><img src="https://dynomight.net/img/chess/o1-mini_stockfish.svg" alt="o1-mini"></a></p>

<p><a href="https://lichess.org/d44jrD2E">Terrible</a>.</p>

<p>So, umm:</p>

<table>
  <thead>
    <tr>
      <th>Model</th>
      <th>Quality</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>Llama-3.2-3b</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>Llama-3.2-3b-instruct</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>Llama-3.1-70b</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>Llama-3.1-70b-instruct</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>Qwen-2.5</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>command-r-v01</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>gemma-2-27b</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>gemma-2-27b-it</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>gpt-3.5-turbo-instruct</code></td>
      <td>Excellent</td>
    </tr>
    <tr>
      <td><code>gpt-3.5-turbo</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>gpt-4o-mini</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>gpt-4o</code></td>
      <td>Terrible</td>
    </tr>
    <tr>
      <td><code>o1-mini</code></td>
      <td>Terrible</td>
    </tr>
  </tbody>
</table>

<p>And, uh:</p>

<p><a href="https://dynomight.net/img/chess/all_mean.pdf"><img src="https://dynomight.net/img/chess/all_mean.svg" alt="all"></a></p>

<p>Notice anything? Any patterns jump out at you?</p>

<h2 id="discussion">Discussion</h2>

<p>There are lots of people on the internet who have tried to get LLMs to play chess. The history seems to go something like this:</p>

<ul>
  <li>
    <p><strong>Before September 2023</strong>: Wow, recent LLMs can sort of play chess! They fall apart after the early game, but they can do something! Amazing!</p>
  </li>
  <li>
    <p><strong>September-October 2023</strong>: Wow! LLMs can now play chess at an advanced amateur level! Amazing!</p>
  </li>
  <li>
    <p><strong>(Year of silence.)</strong></p>
  </li>
  <li>
    <p><strong>Recently:</strong> Wow, recent LLMs can sort of play chess! They fall apart after the early game, but they can do something! Amazing!</p>
  </li>
</ul>

<p>I can only assume that lots of other people are experimenting with recent models, getting terrible results, and then mostly not saying anything. I haven’t seen anyone say explicitly that only <code>gpt-3.5-turbo-instruct</code> is good at chess. No other LLM is remotely close.</p>

<p>To be fair, a year ago, many people did notice that <code>gpt-3.5-turbo-instruct</code> was much better than <code>gpt-3.5-turbo</code>. Many speculated at the time that this is because <code>gpt-3.5-turbo</code> was subject to additional tuning to be good at chatting.</p>

<p>That might be true. Here’s a comparison of three models where we have similar versions with or without additional chat tuning.</p>

<p><a href="https://dynomight.net/img/chess/instruct_mean.pdf"><img src="https://dynomight.net/img/chess/instruct_mean.svg" alt="instruct comparison"></a></p>

<p>(Again, do not be confused by the name <code>gpt-3.5-turbo-instruct</code>. I stress that this is more like a base model than <code>gpt-3.5-turbo</code>. This is the opposite of the naming scheme everyone else uses where “<code>instruct</code>” or “<code>it</code>” means more tuning to be good at chatting.)</p>

<p>In all cases, additional instruction tuning makes the model worse. But the difference is very small in two cases, and enormous in the other.</p>

<h2 id="possible-theories">Possible theories</h2>

<p>I can think of four possible explanations.</p>

<p><strong>Theory 1: Base models <em>at sufficient scale</em> can play chess, but instruction tuning destroys it.</strong></p>

<p>This would be consistent with our data. But I did manage to get <a href="https://huggingface.co/meta-llama/Llama-3.1-405B"><code>llama-3.1-405b</code></a> to play a couple games. Despite being larger than <code>gpt-3.5-turbo</code>, it was still terrible.</p>

<p><strong>Theory 2: GPT-3.5-instruct was trained on more chess games.</strong></p>

<p>All models were clearly trained on a <em>lot</em> of chess games. But it’s hard to know exactly how many.</p>

<p><strong>Theory 3: There’s something particular about different transformer architectures.</strong></p>

<p>I doubt this, but it could be that for some reason, Llama type models are uniquely bad at chess.</p>

<p><strong>Theory 4: There’s “competition” between different types of data.</strong></p>

<p>We know that transformers trained specifically on chess games can be <a href="https://github.com/sgrvinod/chess-transformers">extremely good</a> at chess. Maybe <code>gpt-3.5-turbo-instruct</code> happens to have been trained on a higher <em>fraction</em> of chess games, so it decided to dedicate a larger fraction of its parameters to chess.</p>

<p>That is, maybe LLMs sort of have little “chess subnetworks” hidden inside of them, but the size of the subnetworks depends on the fraction of data that was chess. (If this theory were true, we should probably expect that <em>big enough</em> models should become good at chess, provided they are trained on enough chess games, even if the <em>fraction</em> of chess games is low.)</p>

<h2 id="details">Details</h2>

<p>I did things this way (i.e. by working with standard algebraic notation) because this is how people got good results two years ago, and in preliminary experiments I also found it to work best.</p>

<p>If you want to know <em>exactly</em> how I did things, here are some words: I ran all the open models (anything <em>not</em> from  OpenAI, meaning anything that doesn’t start with <code>gpt</code> or <code>o1</code>) myself using <code>Q5_K_M</code> quantization, whatever that is. For the open models I manually generated the set of legal moves and then used <a href="https://github.com/ggerganov/llama.cpp/blob/master/grammars/README.md">grammars</a> to constrain the models, so they always generated legal moves. Since OpenAI is lame and doesn’t support full grammars, for the closed (OpenAI) models I tried generating up to 10 times and if it still couldn’t come up with a legal move, I just chose one randomly. For the chat models <code>llama-3.1-70b-instruct</code>, <code>gpt-3.5-turbo</code>, <code>gpt-4o-mini</code>, and <code>gpt-4o</code> I changed the system prompt to “You are a chess grandmaster. You will be given a partially completed game. After seeing it, you should choose the next move.” It’s impossible to change the system prompt for <code>o1-mini</code>, so I didn’t. I used a temperature of 0.7 for all the open models and the default for the closed (OpenAI) models. The fact that OpenAI has “open” as part of their name sure made this paragraph hard to write.</p>

<h2 id="token-weirdness">Token weirdness</h2>

<p>One <em>extremely</em> strange thing I noticed was that if I gave a prompt like “<code>1. e4 e5 2. </code>” (with a space at the end), the open models would play much, <em>much</em> worse than if I gave a prompt like “<code>1 e4 e5 2.</code>” (without a space) and let the model generate the space itself. Huh?</p>

<p>After some confusion, I’m pretty sure this is because of the tokenizer. Look at how the <a href="https://belladoreai.github.io/llama-tokenizer-js/example-demo/build/">Llama tokenizer</a> breaks up a string of moves:</p>

<p><img src="https://dynomight.net/img/chess/tokens.png" alt="tokens"></p>

<p>After the “<code>1.</code>”, it generates “<code> e</code>” as a <em>single token</em>. That’s not the same as having a space followed by an <code>e</code>. So putting in the space and asking models to generate tokens presents the model with a confusing situation and lead to bad predictions.</p>

<p>The right way to deal with this is “token healing”—to delete the last token of the input and then do constrained generation over all strings that start with the deleted stuff. But I couldn’t figure out any easy way to do that. So, instead I left the space out and modified the grammar so that the model could generate a space (or not), then one of the current legal moves, and then another space (or not).</p>

<h2 id="ps">P.S.</h2>

<p>Some people have asked to see all the games from <code>gpt-3.5-turbo-instruct</code>. Behold: <a href="https://lichess.org/iwi02kUm">1</a> <a href="https://lichess.org/bfaDMlVm">2</a> <a href="https://lichess.org/lNE5mKPO">3</a> <a href="https://lichess.org/C3xV1uAz">4</a> <a href="https://lichess.org/YpzT2KQS">5</a> <a href="https://lichess.org/dy9m2DsU">6</a> <a href="https://lichess.org/4YDx633U">7</a> <a href="https://lichess.org/ZM9ZbDfo">8</a> <a href="https://lichess.org/59cTZSjs">9</a> <a href="https://lichess.org/DmeQQx7Y">10</a></p>

  </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[O2 unveils Daisy, the AI granny wasting scammers' time (615 pts)]]></title>
            <link>https://news.virginmediao2.co.uk/o2-unveils-daisy-the-ai-granny-wasting-scammers-time/</link>
            <guid>42138115</guid>
            <pubDate>Thu, 14 Nov 2024 16:52:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://news.virginmediao2.co.uk/o2-unveils-daisy-the-ai-granny-wasting-scammers-time/">https://news.virginmediao2.co.uk/o2-unveils-daisy-the-ai-granny-wasting-scammers-time/</a>, See on <a href="https://news.ycombinator.com/item?id=42138115">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				<p><em>It’s a bad day to be a phone scammer.</em></p>
<p><!--[if lt IE 9]><script>document.createElement('video');</script><![endif]-->
<video id="video-9293-1" width="1280" height="720" poster="https://news.virginmediao2.co.uk/wp-content/uploads/2024/11/AI-SCAMBAITERS-IMAGE-1.png" loop="1" preload="auto" controls="controls"><source type="video/mp4" src="https://news.virginmediao2.co.uk/wp-content/uploads/2024/11/vcc11391_pp_o2_scambaiters_batch_1_content_pr026-720p.mp4?_=1"><a href="https://news.virginmediao2.co.uk/wp-content/uploads/2024/11/vcc11391_pp_o2_scambaiters_batch_1_content_pr026-720p.mp4">https://news.virginmediao2.co.uk/wp-content/uploads/2024/11/vcc11391_pp_o2_scambaiters_batch_1_content_pr026-720p.mp4</a></video></p>

<ul>
<li>O2 has created human-like AI ‘Granny’ to answer calls in real time from fraudsters, keeping them on the phone and away from customers for as long as possible</li>
<li>Trained using cutting-edge technology and real scambaiter content, lifelike ‘Daisy’ is indistinguishable from a real person, fooling scammers into thinking they’ve found a perfect target when really, she’s beating them at their own horrible game</li>
<li>Former Love Islander and scam victim, Amy Hart, is working with ‘Daisy’ and has made a shocking new video to expose fraudsters’ crooked tactics and help O2 customers swerve the scammers</li>
<li>With Daisy revealing how you’re not always speaking to the person you think you are, O2 is urging customers to remain vigilant, leave ‘scambaiting’ to the AI experts and report suspected fraudulent calls and texts for free to <em>7726</em></li>
</ul>
<p><strong>O2 has today unveiled the newest member&nbsp;of its fraud prevention team, ‘Daisy’. As ‘Head of Scammer Relations’, this state-of-the-art AI Granny’s mission is to talk with fraudsters and waste as much of their time as possible with human-like rambling chat to keep them away from real people, while highlighting the need for consumers to stay vigilant as the UK faces a fraud epidemic.</strong></p>
<p>Created using a range of cutting-edge AI technology and trained with the help of one of YouTube’s best known scambaiters, Jim Browning, Daisy is a lifelike AI Granny completely indistinguishable from a real person. Able to interact with scammers in real time without any input from her creators, O2 has put Daisy to work around the clock answering dodgy calls.</p>
<p>Daisy combines various AI models which work together to listen and respond to fraudulent calls instantaneously and is so lifelike it has successfully kept numerous fraudsters on calls for 40 minutes at a time.</p>
<p>As part of Virgin Media O2’s ongoing “Swerve the Scammers” campaign, Scambaiter Daisy has been created in response to new research from O2 revealing 7 in 10 (71%) of Brits would like to get their own back against scammers that have tried to trick them or their loved ones. However, not wanting to waste their own time ranked as the top reason why the public wouldn’t bait scammers themselves (53%).</p>
<p>With more than two thirds of Brits (67%) concerned about being the target of fraud and one in five (22%) experiencing a fraud attempt every single week, O2 is fighting back.</p>
<p>After several weeks of taking calls in the run up to International Fraud Awareness Week (November 17-23), the AI Scambaiter has told frustrated scammers meandering stories of her family, talked at length about her passion for knitting and provided exasperated callers with false personal information including made-up bank details. By tricking the criminals into thinking they were defrauding a real person and playing on scammers biases about older people, Daisy has prevented them from targeting real victims and, most importantly, has exposed the common tactics used so customers can better protect themselves</p>
<p><strong>Influencer and reality TV star, Amy Hart,</strong> has worked with Daisy to produce a shocking video to show how she’s taking on phoney fraudsters like the one who targeted her. After receiving a call from someone who said they were calling from her bank on the morning of her friend’s wedding, Amy fell victim to a scam which saw more than £5,000 drained from her bank account in a matter of minutes.</p>
<p>The harrowing experience has left Amy passionate about spreading the word on scams and exposing their tactics to help keep others safe. Watch the video <a href="https://www.youtube.com/watch?v=RV_SdCfZ-0s">here</a>.</p>
<p><strong><em>Amy Hart said </em></strong><em>“I know first-hand just how sophisticated nasty fraudsters can be, that’s why I’ve teamed up with O2 and AI Scambaiter Daisy to take the fight back to them, keeping them busy with calls going nowhere. </em></p>
<p><em>“But whilst I love a wind up, it’s scary to see the lengths scammers go to steal everything from passwords to bank details regardless of who they’re speaking to. Whether you’re young or old, anyone can be a victim of a scam that’s why we can never be too careful when it comes to unexpected calls or texts. </em></p>
<p><em>“If you have even the tiniest doubt about who you’re speaking to, the best thing to do is to hang up the phone and call back on a trusted number.”</em></p>
<p><strong>Murray Mackenzie, Director of Fraud at Virgin Media O2, said: </strong><em>“We’re committed to playing our part in stopping the scammers, investing in everything from firewall technology to block out scam texts to AI-powered spam call detection to keep our customers safe.</em></p>
<p><em>“The newest member of our fraud-prevention team, Daisy, is turning the tables on scammers – outsmarting and outmanoeuvring them at their own cruel game simply by keeping them on the line. </em></p>
<p><em>“But crucially, Daisy is also a reminder that no matter how persuasive someone on the other end of the phone may be, they aren’t always who you think they are. With scammers operating fulltime call centres specifically to target Brits, we’re urging everyone to remain vigilant and help play their part in stopping fraud by forwarding on dodgy calls and texts to 7726 for free.”</em></p>
<p><strong>Swerve the Scammers </strong></p>
<p>O2 has invested heavily in the fight against fraud, rolling out AI-powered spam fighting tools and new caller identification services free to all mobile customers to help protect them. The operator also blocks millions of fraudulent texts and calls from reaching customers phones every month.</p>
<p>However, with scammers constantly evolving their processes and using increasingly sophisticated methods, the business is encouraging Brits to leave scambaiting to the AI experts. Instead, the public can help block scammers by forwarding suspected scam calls and text messages to <em>7726</em>.</p>
<p>By reporting dodgy calls and messages, the telecoms company is able to investigate and block the mobile numbers used by fraudsters and can also use scam texts to help refine its blocking services, making it easier to identify and stop new trends faster in future. Last year alone, Virgin Media O2 blocked 89 million texts, in part thanks to 7726.</p>
<p>To help make life easier for customers, O2 has pulled together a new webpage offering tips, tricks and advice so they know what to look out for. <a href="https://news.virginmediao2.co.uk/fraud/">Head to our Swerve the Scammers page for more information.</a></p>
<p><strong>Virgin Media O2 is calling for wider action to prevent fraud</strong></p>
<p>The company recently exposed the scale of the UK’s fraud problem after finding that nearly seven in ten Brits (69%)<sup>1</sup> reported that they’ve been targeted by scammers. Last year alone, Virgin Media O2 intercepted and blocked over £250 million in suspected fraudulent transactions — equivalent to stopping one every two minutes.</p>
<p>Warning that not enough is being done to protect consumers, Virgin Media O2 is calling on the government to take accountability for stopping fraud at its source by appointing a dedicated fraud minister and creating a single centralised, specialised and properly resourced national policing body responsible for investigating all instances of fraud.</p>
<p><u>Notes to Eds</u></p>
<p><strong>About Daisy</strong></p>
<p>Daisy is a human-like AI that has been developed to hold autonomous conversations with scam callers and keep them on the line for as long as possible. The custom-built AI scambaiter has been answering calls from scammers and having lifelike but meandering conversations with no input required from her creators.</p>
<p>Daisy combines various AI models which work together to first listen to the caller and transcribe their voice into text. Appropriate responses are then generated through a custom large language model complete with a character ‘personality’ layer, and then fed back through a custom AI text-to-speech model to generate a voice answer. This takes place in real time, allowing the tool to hold a human-like conversation with a caller.</p>
<p><strong>O2’s top tips to stay safe from fraudsters</strong></p>
<p>O2 has pulled together three simple steps on what to do when called by a scammer or upon receiving a suspicious message:</p>
<p><strong>STOP:</strong>&nbsp;If&nbsp;you receive a call out of the blue for someone claiming to be from O2, think about what you’re being asked to do. Does it feel right? Are you being asked for personal data or a code over the phone? If you have any suspicion that you might be speaking to a scammer, the best thing to do is hang up and call us back by dialling 202 from your O2 phone.</p>
<p><strong>SEND to 7726:&nbsp;</strong>Worked out you might have spoken to or received a text from a scammer? Don’t just ignore it, take a few seconds to forward on to&nbsp;<strong>7726</strong>. It spells SPAM on your phone’s keypad and is the free number to use to report to us so we can investigate. It helps keep you safe and allows us to block fraudsters numbers and prevent or shut down similar scams faster in future.</p>
<p><strong>SPEAK OUT:</strong>&nbsp;Let your friends and family know about the scam. By telling others, you can help keep them safe and ensure they’re never caught off guard.</p>
<p>Read more about Virgin Media O2’s call for structural reform to address the UK’s fraud epidemic <a href="https://news.virginmediao2.co.uk/virgin-media-o2-calls-on-new-government-to-make-fraud-a-priority-and-empower-the-police/#:~:text=Targeted%20by%20criminals%20looking%20to,blocking%20a%20suspected%20fraud%20transaction">here</a>.</p>
<p>Strand Partners’ specialist research team conducted an online survey of 5,247 members of the UK public between 07.06.24 – 19.06.24. The sample is representative by gender, age and NUTs 1 region, education, and income against the most recent ONS census data.</p>
							</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The letter ℘: name and origin? (2017) (227 pts)]]></title>
            <link>https://mathoverflow.net/questions/278130/the-letter-wp-name-origin</link>
            <guid>42137818</guid>
            <pubDate>Thu, 14 Nov 2024 16:28:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mathoverflow.net/questions/278130/the-letter-wp-name-origin">https://mathoverflow.net/questions/278130/the-letter-wp-name-origin</a>, See on <a href="https://news.ycombinator.com/item?id=42137818">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text">
<p>My own answer, about the name of the letter $\wp$. Mostly in <em>computing</em>, with little math. (Lengthy)</p>

<h2>Summary</h2>

<p>In computing, the letter $\wp$ has been plagued with a plethora of inappropriate names. I guess "Weierstrass p" is one of such  names that some standard created, and has been copied without much scrutiny. I suspect that ISO-8879 in 1986 was the root of all evil.</p>

<p>Names and references that survive in latest standards are:</p>

<ul>
<li><code>\wp</code>: TeX</li>
<li><code>script capital p</code> (wrong) and <code>weierstrass elliptic function</code> (alias): Unicode</li>
<li><code>&amp;weierp;</code>: HTML (and XML?)</li>
</ul>

<h2>Unicode</h2>

<p>Unicode is not directly related to my question, but it is important behind the scenes, so a good point to start.</p>

<h3>Basics</h3>

<p>In Unicode the letter $\wp$ is given the codepoint U+2118 in the block "letterlike symbols", named "script capital p". But in fact it's lowercase. There's also an official alias "weierstrass elliptic function".</p>

<p><a href="http://www.unicode.org/notes/tn27/" rel="noreferrer">Unicode Technical Note #27</a> regrets this misnomer:</p>

<blockquote>
  <p>Should have been called <em>calligraphic small p</em> or <em>Weierstrass elliptic function symbol</em>, which is what it is used for. It is not a capital "P" at all. A formal alias correcting this to WEIERSTRASS ELLIPTIC FUNCTION has been defined.</p>
</blockquote>

<p><a href="http://www.unicode.org/notes/tn27/tn27-1.html" rel="noreferrer">The first version</a> of Technical Note #27 in 2006 was a bit more emphatic</p>

<blockquote>
  <p>Should have been called <em>calligraphic small p</em> or <strong>perhaps even</strong> <em>Weierstrass elliptic function symbol</em>, which is what it is used for. It's not a capital "P" at all.</p>
</blockquote>

<p>(Boldification is done by me.)</p>

<h3>Unicode 1.0 (1991)</h3>

<p>Unicode 1.0 (1991) defined the letter, and the <a href="http://www.unicode.org/Public/reconstructed/1.0.0/UnicodeData.txt" rel="noreferrer">name was</a> "script p". It was also called "weierstrass elliptic function". (See Footnote)</p>

<h3>Unicode 2 (1996) screwed it up</h3>

<p>They gave wrong names. <em>As seen later, this change matters for us.</em> From the file <a href="http://www.unicode.org/Public/2.0-Update/NamesList-1.txt" rel="noreferrer">Nameslist</a>:</p>

<pre><code>2118  SCRIPT CAPITAL P
      = per
      = power set
      = Weierstrass elliptic function
</code></pre>

<p>(All of them were legitimate names. See also the file <a href="http://www.unicode.org/Public/2.0-Update/Index-1.txt" rel="noreferrer">index</a>.) <br>
Alas, power set; $\wp$ is <em>lowercase</em>. (But what's "per"? According to Wiktionary's entry "<a href="https://en.wiktionary.org/wiki/per#Synonyms" rel="noreferrer">per</a>" the preposition "per" used to be written sometimes with a script letter "p". An example can be found in 1911 Encyclopædia Britannica. See <a href="https://en.wikisource.org/wiki/1911_Encyclop%C3%A6dia_Britannica/Abbreviation#per" rel="noreferrer">Wikisource</a> or <a href="https://archive.org/stream/EncyclopaediaBritannicaDict.a.s.l.g.i.11thed.chisholm.1910-1911-1922.33vols/01.EncycBrit.11th.1910.v.1.A-AND.#page/n66/mode/1up" rel="noreferrer">archive.org</a>)</p>

<p>Teminology note: The file "NamesList" maps from the codepoint (letter itself) to their names, the main one and aliases, if any. "Index" is the inverse mapping.</p>

<p>(Paranoiac detail: In Unicode 2.1, they changed its writing direction from "Other neutral" to "Left-to-right" See <a href="http://www.unicode.org/Public/2.1-Update2/diff212v214.txt" rel="noreferrer">here</a>. For writing directionos see <a href="http://www.unicode.org/Public/2.1-Update2/diff212v214.txt." rel="noreferrer">this</a>.</p>

<h3>Unicode 3.0 (1999)</h3>

<p>In 3.0, two wrong names "per" and "power set" can't be seen in <a href="http://www.unicode.org/Public/3.0-Update/NamesList-3.0.0.txt" rel="noreferrer">Nameslist</a>, but they still exist in <a href="http://www.unicode.org/Public/3.0-Update/Index-3.0.0.txt" rel="noreferrer">Index</a>. Wow. They still remained in <a href="http://www.unicode.org/Public/3.2-Update/" rel="noreferrer">3.2 Index</a></p>

<p>But not sure if this removal was officially announced</p>

<p>Unicode never changes the main names once they are given, so "script capital p" will stay for ever.</p>

<h3>Unicode 4.0 (2003)</h3>

<p>In Unicode <a href="http://www.unicode.org/Public/4.0-Update/" rel="noreferrer">4.0</a>, it seems the index file was abolished. So it's finally settled to be "script capital p" and "weierstrass elliptic function".</p>

<h3>Unicode 6.1 (2012)</h3>

<p>Finally in Unicode <a href="http://www.unicode.org/versions/Unicode6.1.0/" rel="noreferrer">6.1</a>, the meaning of aliases were clarified. "weierstrass elliptic function" of U+2118 was <a href="http://www.unicode.org/Public/6.1.0/ucd/NameAliases.txt" rel="noreferrer">defined</a> to be "correction".</p>

<h2>Knuth's book (1986)</h2>

<p><em>Computer Modern Typeface</em> <a href="https://books.google.com/books?id=CwdUAAAAMAAJ&amp;q=weierstrass+isbn:0201134462&amp;dq=weierstrass+isbn:0201134462&amp;hl=en&amp;sa=X&amp;" rel="noreferrer">(google books link)</a> by Don Knuth was published in 1986.</p>

<p>In p 26, there's a line <em>there are special symbols like Weierstrass's ‘p’ (℘)</em>. However, in the index in p 580, there's only the entry "Weierstrass, Karl Theodor Wilhelm", pointing to pp 26, 233 and 235, and the entry "Weierstrass'p" is not there. So I guess Knuth did <strong>not</strong> mean that "Weierstrass'p" was the name of the symbol.</p>

<h2>Old ISO, MathML, XML... true culprit?</h2>

<p>Section summary: "Weierstrass p" was introduced sometime, but not sure exactly when. It has becoming obsolete, but not completely yet.</p>

<p>In HTML, you can write $\wp$ by escaping as <code>&amp;weierp;</code>. Dunno other markup languages.</p>

<p>In <a href="https://www.w3.org/TR/REC-MathML/toc.html" rel="noreferrer">MathML 1.01 specification</a> (1998), $\wp$ is given the name "weierp", of which description is <strong>"Weierstrass p"</strong> and the alias "wp". <a href="https://www.w3.org/TR/REC-MathML/chap6/ISOAMSOe1.html" rel="noreferrer">See here</a>. The letter derived from "ISOamso", but I can't be sure if the name came from ISOamso, too. The status of the latest MathML, 3.0, will be stated at the end of this section.</p>

<p>ISOamso ("Added Math Symbols: Ordinary", has nothing to do with AMS :)
is a part of <a href="https://en.wikipedia.org/wiki/ISO_8879" rel="noreferrer">SGML = ISO 8879:1986</a> in 1986, according to <a href="https://www.w3.org/2003/entities/2007/isoamso.ent" rel="noreferrer">this</a>.
When the first MathML was under construction, ISO 10646 (roughly speaking Unicode itself, but its counterpart in ISO) were apparently not there. <a href="https://www.w3.org/TR/REC-MathML/chapter6.html#sec6.2.2" rel="noreferrer">See this</a>. They had to gather letters from various standards.</p>

<p>HTML is worse: I couldn't find any entity specification about $\wp$ in HTML 1 - 3. (In very rough translation, entity = letter. See <a href="http://www.landofcode.com/html-tutorials/html-entities.php" rel="noreferrer">this intro</a>) In HTML4 (1999), it is <a href="https://www.w3.org/TR/html4/sgml/entities.html#h-24.3" rel="noreferrer">defined as</a></p>

<blockquote>
  <p>&lt;!ENTITY weierp   CDATA "&amp;#8472;" -- script capital P = power set = Weierstrass p, U+2118 ISOamso --&gt;</p>
</blockquote>

<p>Because HTML4 has been used so long (it's still in use), this wrong sepcification has spreaded widely. See below.</p>

<p>In HTML5 (2014), the word "entity" was abolished. "Character entity references" was change to "Character references", and the term "Named entities" was replaced with "Named character references". <a href="https://www.w3.org/TR/html5-pubnotes/" rel="noreferrer">See this</a>. "Weierp" seems to have lost peculiarity up to HTML4; it's simply U+2118, and that's all. <a href="https://www.w3.org/TR/html5/syntax.html#character-references" rel="noreferrer">See this</a> (Work on HTML5 started back in 2004, but it took long time until final publication.)</p>

<p>There's also "XML entity definitions". Although XML is rather old, the official  specification of entities seems to have had been lacking for long.
In its latest version <a href="http://www.w3.org/TR/2014/REC-xml-entity-names-20140410/" rel="noreferrer">(2nd ed)</a> in 2014, $\wp$ is <a href="http://www.w3.org/2003/entities/2007/htmlmathml-f.ent" rel="noreferrer">nothing but "weierp"</a>. See <a href="https://www.w3.org/TR/2014/REC-xml-entity-names-20140410/#sets" rel="noreferrer">chap 2</a>. ISOamso is now <a href="https://www.w3.org/TR/2014/REC-xml-entity-names-20140410/#legacysets" rel="noreferrer">one of legacy entity sets</a>.  In its <a href="https://www.w3.org/TR/2010/REC-xml-entity-names-20100401/" rel="noreferrer">first version</a> in 2010 however, it's classified as <a href="https://www.w3.org/TR/2010/REC-xml-entity-names-20100401/isoamso.html" rel="noreferrer">ISOamso</a></p>

<p>Anyway in ISOamso pages (<a href="https://www.w3.org/TR/2014/REC-xml-entity-names-20140410/isoamso.html" rel="noreferrer">ver 2</a> and <a href="https://www.w3.org/TR/2010/REC-xml-entity-names-20100401/isoamso.html" rel="noreferrer">ver 1</a>) its description is "/wp - Weierstrass p", with the alias "wp". It seems the slash in "/wp" corresponds to LaTex <em>backslash</em>. (Cf. /hbar, /ell, /Re etc)</p>

<p>Unfortunately in MathML 3.0, (the latest, released in 2010) it still depends on XML's "legacy" entity sets, and it <a href="https://www.w3.org/TR/2010/REC-MathML3-20101021/chapter7.html" rel="noreferrer">refers to</a> ISOamso. "Weierstrass'p" is not yet dead.</p>

<h2>"Weierstrass-p" spreaded</h2>

<p>The word "Weierstrass p" appears in e.g. <a href="https://www.google.co.jp/search?tbm=bks&amp;hl=ja&amp;q=isbn%3A9780895886286+%22Weierstrass+p%22" rel="noreferrer">Encyclopedia Machintosh</a> (1990), <a href="https://books.google.com/books?id=nIVVAAAAMAAJ&amp;q=%22weierstrass+p%22+letter&amp;dq=%22weierstrass+p%22+letter&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiexquyr7rVAhXI7hoKHbBWCH04HhDoAQglMAA" rel="noreferrer">MacUser magazine</a> (1992)</p>

<p>I <a href="https://www.google.com/search?q=%22weierstrass%27s+p%22+-%22weierstrass%27s+p-function%22&amp;source=lnt&amp;tbs=cdr%3A1%2Ccd_min%3A%2Ccd_max%3A1%2F1%2F1986&amp;tbm=" rel="noreferrer">googled for</a> <code>"weierstrass's p" - "weierstrass's p function"</code> limiting to pre-1986 instances. There had not been any to mean the symbol $\wp$. The result of dropping "'s" is similar. Date limitation in Google search is not so reliable thus it does not prove anything.</p>

<p>Wrong HTML4's specification is now popular. Microsoft's document <a href="https://msdn.microsoft.com/en-us/library/office/aa212305(v=office.11).aspx" rel="noreferrer">HTML Character sets</a> reads "Office 2003", although its exact date and scope are not clear. It says $\wp$ is: "script capital P, =power set, =Weierstrass p, U2118 ISOamso". <a href="https://books.google.com/books?id=V4o9Tcf2YRoC&amp;pg=PA544&amp;dq=%22Script+capital+P,+power+set,+Weierstrass+p%22&amp;hl=en&amp;sa=X&amp;redir_esc=y#v=onepage&amp;q=%22Script%20capital%20P%2C%20power%20set%2C%20Weierstrass%20p%22&amp;f=false" rel="noreferrer">XML in a Nutshell</a> (2002) and <a href="https://books.google.hu/books?id=vOZLwYJHymQC&amp;pg=PA760&amp;lpg=PA760&amp;dq=Weierstrass+p&amp;source=bl&amp;ots=WtbhJZ9sV2&amp;&amp;hl=en&amp;sa=X&amp;redir_esc=y#v=onepage&amp;q=weierstrass&amp;f=false" rel="noreferrer">Beginning HTML, XHTML, CSS, and JavaScript</a> (2011) say Weierp is "Script capital P, power set, Weierstrass p"</p>

<h2>Acknowledgments</h2>

<p>The books "Encyclopedia Machintosh", "MacUser magazine", "Computer Modern Typeface" and "XML in a Nutshell" were pointed out in Wikipedia Users <a href="https://en.wikipedia.org/wiki/Talk:Weierstrass_p#Cleanup" rel="noreferrer">Momotaro</a> and <a href="https://en.wikipedia.org/wiki/User_talk:The_Man_in_Question" rel="noreferrer">The Man in Question</a>. I thank them.</p>

<h2>Footnote</h2>

<p>In Unicode 1.0.0 (1991), it was <strong>NOT</strong> "script capital p", the current name. In <a href="http://www.unicode.org/versions/Unicode1.0.0/Index1.pdf" rel="noreferrer">Unicode Name Index</a> (pdf), names  "script p" and "weierstrass elliptic function"  are found. See pdf pages 22 and 27. This did not change in Unicode 1.0.1 (1992).<br>
Unicode 1.0 implicitly, but clearly meant it was capital. All lowercase letters were named "small".</p>

<p>It seems that in Unicode 1.1 (1993) the name was changed to "script <em>capital</em> p" See <a href="http://www.unicode.org/Public/1.1-Update/UnicodeData-1.1.5.txt" rel="noreferrer">UnicodeData-1.1.5</a></p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AI Makes Tech Debt More Expensive (424 pts)]]></title>
            <link>https://www.gauge.sh/blog/ai-makes-tech-debt-more-expensive</link>
            <guid>42137527</guid>
            <pubDate>Thu, 14 Nov 2024 16:01:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gauge.sh/blog/ai-makes-tech-debt-more-expensive">https://www.gauge.sh/blog/ai-makes-tech-debt-more-expensive</a>, See on <a href="https://news.ycombinator.com/item?id=42137527">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-w-id="5b8e0128-dfc2-fd07-77df-30819f5d5004"><p>There is an emerging belief that AI will make tech debt <strong>less relevant</strong>. Since it’s getting easier to write code, and easier to clean up code, wouldn’t it make sense that the typical company can handle a little more debt?</p><p>The opposite is true - AI has significantly increased the real cost of carrying tech debt. The key impact to notice is that generative AI <strong>dramatically widens the gap in velocity </strong>between ‘low-debt’ coding and ‘high-debt’ coding.</p><p>Companies with relatively young, high-quality codebases benefit the most from generative AI tools, while companies with gnarly, legacy codebases will struggle to adopt them. In other words, the penalty for having a ‘high-debt’ codebase is now larger than ever.</p><figure><p><img src="https://cdn.prod.website-files.com/665a5f120c4c63df1944d627/673529427e9a3f24440903f2_673529288758869858b0a9d2_Screenshot%2520from%25202024-11-13%252014-32-42.png" loading="lazy" alt=""></p><figcaption>Model of AI&nbsp;Tools' Impact; Large Velocity Gain on Low-Debt Code</figcaption></figure><h3>GenAI can’t handle High Complexity</h3><p>If you’ve tried tools like <a href="https://cursor.com/">Cursor</a> or <a href="https://aider.chat/">Aider</a> for professional coding, you know that their performance is highly sensitive to the complexity of the code you’re working on. They provide a dramatic speedup when applying pre-existing patterns, and when making use of existing interfaces or module relationships. However, in ‘high-debt’ environments with subtle control flow, long-range dependencies, and unexpected patterns, they struggle to generate a useful response.</p><p>Not only does a complex codebase make it harder for the model to generate a coherent response, it also makes it harder for the developer to formulate a coherent request.</p><p>This experience has lead most developers to “watch and wait” for the tools to improve until they can handle ‘production-level’ complexity in software. While genAI is improving dramatically in some sense (multi-modal, faster, smaller, cheaper), this barrier has so far proven more stubborn, with o1 seeing relatively low adoption and multi-agent frameworks failing to significantly scale reasoning capabilities.</p><h3>Make Your Tools Work for You</h3><p>Instead of trying to force genAI tools to tackle thorny issues in legacy codebases, human experts should do the work of refactoring legacy code until genAI can operate on it smoothly. When direct refactoring is still too risky, teams can adjust their development strategy with approaches like <a href="https://martinfowler.com/bliki/StranglerFigApplication.html">strangler fig</a> to build greenfield modules which can benefit immediately from genAI tooling.</p><p>This implies a shift to a higher level of abstraction for a modern development team. A product should be owned by a lean team of experts, focused primarily on the architecture of their code rather than the implementation details.</p><h3>AI-Friendly Approaches</h3><p>In essence, the goal should be to unblock your AI tools as much as possible. One reliable way to do this is to spend time breaking your system down into cohesive and coherent modules, each interacting through an explicit interface.</p><p>A useful heuristic for evaluating a set of modules is to use them to explain your core features and data flows in natural language. You should be able to concisely describe current and planned functionality. You might also want to set up <a href="https://github.com/gauge-sh/tach">visibility and enforcement</a> to make progress toward your desired architecture.</p><p>A modern development team should work to maintain and evolve a system of well-defined modules which robustly model the needs of their domain. Day-to-day feature work should then be done on top of this foundation with maximum leverage from generative AI tooling.</p><p>‍</p><h3>Quality Leads to Speed</h3><p>It’s now more valuable than ever to have a high-quality codebase. Investment into modular architecture lets teams take full advantage of generative AI tools, achieving rapid feature development while simultaneously building higher quality software.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[On Building Git for Lawyers (145 pts)]]></title>
            <link>https://jordanbryan.substack.com/p/on-building-git-for-lawyers</link>
            <guid>42137391</guid>
            <pubDate>Thu, 14 Nov 2024 15:48:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jordanbryan.substack.com/p/on-building-git-for-lawyers">https://jordanbryan.substack.com/p/on-building-git-for-lawyers</a>, See on <a href="https://news.ycombinator.com/item?id=42137391">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><span>Over this past weekend, </span><a href="https://x.com/allgarbled/status/1855675925104664684?s=46" rel="nofollow ugc noopener">Twitter discovered</a><span> the problem that I have dedicated </span><a href="http://versionstory.com/" rel="nofollow ugc noopener">the past four years of my life to solving</a><span>. Why don't lawyers and other non-coders use git?</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png" width="603" height="196" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:196,&quot;width&quot;:603,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8b0d9bc8-a8e3-47ac-8ec7-bd17dfba3c3e_603x196.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption></figcaption></figure></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff80751db-a125-47df-bc11-6e065f92e4f1_591x333.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff80751db-a125-47df-bc11-6e065f92e4f1_591x333.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff80751db-a125-47df-bc11-6e065f92e4f1_591x333.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff80751db-a125-47df-bc11-6e065f92e4f1_591x333.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff80751db-a125-47df-bc11-6e065f92e4f1_591x333.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff80751db-a125-47df-bc11-6e065f92e4f1_591x333.png" width="591" height="333" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f80751db-a125-47df-bc11-6e065f92e4f1_591x333.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:333,&quot;width&quot;:591,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff80751db-a125-47df-bc11-6e065f92e4f1_591x333.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff80751db-a125-47df-bc11-6e065f92e4f1_591x333.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff80751db-a125-47df-bc11-6e065f92e4f1_591x333.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff80751db-a125-47df-bc11-6e065f92e4f1_591x333.png 1456w" sizes="100vw"></picture></div></a><figcaption></figcaption></figure></div><p>This is an important question. The legal system is the essential bedrock upon which all else in society is built. The protection of civil rights, peaceful conflict resolution, access to due process, enforceable contracts — all these depend on a well functioning legal system.</p><p>The professionals who operate this system are equipped with inadequate tooling. Absent git-like version control, they rely on inefficient and error-prone manual “version control” processing.</p><p><span>In many cases, manual version control processes (e.g. git diff, merge, and rebase but by hand) take</span><strong> more than an hour of lawyer time per contract version while resulting in errors!</strong></p><p>Note: this problem is not specific to the law. Finance professionals, academic researchers, legislators, among many other professionals encounter similar version control issues. We are currently focused on law because of our domain expertise and because the problem is particularly pronounced in the law.</p><p>As many have observed, lawyers face the same fundamental set of problems that coders do when collaborating. They have multiple collaborators contributing changes to a project concurrently. They need to receive approval from their colleagues prior to committing their changes. When a colleague commits new changes, they must update their current work to account for them.</p><p>Absent a concurrent version control system like git, lawyers rely on a process called "redlining" to solve these problems. A "redline" is the equivalent of a diff in git. It is a document showing the insertions and deletions between two versions of a document.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png" width="703" height="285" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:285,&quot;width&quot;:703,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9a053cf-fa94-4f5e-9bcc-e1d50a140b2d_703x285.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>A portion of a redline showing insertions underlined in blue and deletions struck-through in red</figcaption></figure></div><p>Unlike git, redlining leaves many of these problems unsolved. The following is an example of the basic steps of redlining a stock purchase agreement in the big-law context. Different practices of law might have different variations of the following process, but most follow similar general principles.&nbsp;</p><p>In this example, our law firm represents the buyer in an M&amp;A deal. The seller’s counsel just sent the first draft of an agreement, V1. To turn the second draft of the agreement, V2, the firm needs input from specialists on the tax team, the IP team, and the employment team.</p><ol><li><p><span>Kicking off this process, an M&amp;A partner instructs a junior associate lawyer to circulate V1 to the three specialist teams to receive their redlines. Upon receiving these redlines, the M&amp;A associate should reconcile the changes and submit those changes as the new version on their document management system.</span><br></p></li><li><p><span>M&amp;A lawyer emails specialist teams asking for their contributions to the agreement.</span><br></p></li><li><div><p><span>The specialist teams each modify V1 of the agreement with their respective changes. They send the modified documents to the M&amp;A lawyer.</span></p><p><span>Note: I’m simplifying the process a bit. The specialist’s team undergoes its own redlining process between the partner and associates on the team before returning a draft to M&amp;A.</span></p></div></li><li><p>M&amp;A lawyer redlines the specialist version to the original via a redlining product. Associate saves that redline to their local file system as well as the "clean" version that was sent by the specialist.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif" width="800" height="450" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:450,&quot;width&quot;:800,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2cde7faa-245e-4d0b-baf9-8363900d6b8b_800x450.gif 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Comparing&nbsp; documents using Microsoft Word’s built in “compare documents” feature. Most redlining tools have similar user interfaces.</figcaption></figure></div></li><li><p>M&amp;A lawyer manually merges the three specialists’ drafts. They do this by opening a copy of V1 of the contract in Microsoft Word on the left side of their screen. On the right side of their screen, they open one of the specialist’s redlines. Change-by-change, they modify the new document to reflect the changes in the redline. Upon adding all of the changes, the associate opens the next specialist redline and repeats the process. They continue this until all changes are integrated into the new document. This document is V2 of the agreement.</p></li></ol><blockquote><p><span>Below is a screen recording of an </span><em><strong>actual lawyer</strong></em><span> merging specialist changes into an agreement. It took them over an hour to do what our system did in under a minute. This process resulted in three mistakes.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif" width="800" height="254" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:254,&quot;width&quot;:800,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:4473357,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/gif&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F764826aa-d289-4fac-b0fb-6534d3c88937_800x254.gif 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div></blockquote><ol start="6"><li><p>Associate redlines the consolidated V2 against V1, and sends V2 along with the redline to the M&amp;A partner. They also save V2 to their document management system, which serves as the source of truth for committed versions of the contract.&nbsp;</p></li></ol><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png" width="472" height="336" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:336,&quot;width&quot;:472,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:73762,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F227d8afa-fcb6-4436-bea4-00321ea10bff_472x336.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Lawyers rely on file names to make sense of their version ordering. This is challenging because different lawyers maintain different conventions for version naming. Actual matters often have 10x+ as many versions as this.</figcaption></figure></div><p>The above process has several issues — the most obvious of which is that it's tremendously inefficient. It can take an associate lawyer several hours to integrate changes of a 100+ page contract such as a stock purchase agreement. Equally important, however, is that it’s error prone. If two specialists introduce conflicting changes, there is no way for the specialist to know without manually reading the redlines side-by-side. It's a huge problem if an associate incorrectly reconciles a merge conflict, &nbsp;especially if they overwrite the changes made by a more senior colleague since those changes could become permanent legal obligations worth millions of dollars.</p><p>As any coder knows, git is designed to solve exactly the sorts of problems that the lawyer is tasked with above. When I tell coders about Version Story, they often ask me, "why don't lawyers just use git?"</p><p>While git is an excellent tool for coding, there are two reasons why it will never see adoption amongst legal professionals.</p><ol><li><p><strong>Docx</strong><span>. Every lawyer uses Microsoft Word. They're trained with it early in their career and regularly take advantage of idiosyncratic formatting features. Every legal contract and precedent created in the past 25 years currently is in docx (or its predecessor doc). The information underpinning the entire US legal system (and every other legal system) is in docx. Docx is as much the standard for legal drafting as JavaScript is for client-side web programming.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png" width="696" height="132.79727427597956" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:112,&quot;width&quot;:587,&quot;resizeWidth&quot;:696,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F95bf99da-6f08-46c5-9e9c-28fdb75cd15c_587x112.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Good luck making this happen</figcaption></figure></div><p><span>Git works with plain text files, not docx files. While it is technically possible for lawyers to draft in a git-compatible markdown language, the legal industry departing from the docx standard is about as likely as web browsers discontinuing support for JavaScript. It's not going to happen. (Note: you should be deeply skeptical of any startup that claims they intend to replace Microsoft Word or docx in a lawyer's workflow).</span><br></p></li><li><div><p><strong>UI/UX</strong><span>. I started coding when I was 14, have a four year degree in computer science, and have worked professionally as a software engineer for over 7 years. It wasn't until I was several years into my career that I achieved mastery with git. It has a notoriously steep learning curve and is a complete non-starter for non-technical professionals.</span></p><p><span>Lawyers have high standards. A simple and intuitive user interface is essential for gaining widespread adoption within the industry.</span></p></div></li></ol><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png" width="1253" height="682" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:682,&quot;width&quot;:1253,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd83567d5-f6c7-4818-9bc8-31d1c10aea0f_1253x682.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Solving this problem requires both an understanding of git and its capabilities as well as the intricacies of the legal drafting and redlining process. The set of people capable of solving it is limited to those who have both worked professionally as lawyers and also are proficient coders.</p><p>My co-founder Kevin is such a person. Prior to founding Version Story, he worked both as an M&amp;A lawyer at Simpson Thacher and as a software engineer at LinkedIn. I can confidently say I would not be able to build a product fit to the needs of lawyers without his first-hand experience guiding our design.</p><p>Over the years, several startups have attempted to solve this problem. None of them have had domain experience in the legal field. Because of that, they are unaware of the two constraints necessary to break into legal workflows — docx and UX. To sidestep the immense technical challenges of handling docx, they build in-browser text editors thinking they can get lawyers to draft in their application instead of in Microsoft Word. In their UX, they use terminology like “pull”, “push”, “rebase”,&nbsp; and “HEAD” forgetting how inscrutable this terminology is to the uninitiated.</p><p>Any product that seeks to bring the functionality of git to a mass audience must handle docx and mustn’t be afraid to rethink the user experience from the ground up.</p><p><span>Building a solution to this problem was hard. The technical problems of comparing and rendering docx files and the UX problem of making git-like functionality intuitive required a substantial amount of creativity, determination, and patience on both parts. Beyond that, establishing credibility in the legal industry such that top law firms could entrust us with their confidential documents presented its own set of challenges. Thankfully we had the </span><a href="https://paulgraham.com/schlep.html" rel="nofollow ugc noopener">benefit of ignorance prior to embarking on these schleps</a><span>.</span></p><p>When we started Version Story, we intended to leverage third party APIs for our document processing while focusing our energy on solving the UX challenges of reimagining git. Docx has been the standard file format for word processing since 2007 — surely there should be reliable APIs for comparing them and converting them to html and pdf.</p><p><span>We were wrong and, believe me, we tried not to be. While APIs exist which purport to do what we need them to, they are nowhere near adequate for legal use cases. They would work fine in demos with simple test documents, but as soon as an actual lawyer attempted to compare a 500+ page prospectus with complex tables, custom formatting, and embedded images, they would fail. </span><strong>Not even Microsoft Word's internal compare tool is adequate for such cases.</strong><span> We had to build our own custom comparison engine.</span></p><p><span>Comparing plain text is a solved problem. Since 1986, Myers Diff has been the standard algorithm for text comparison. There are plenty of</span><a href="https://blog.jcoglan.com/2017/02/12/the-myers-diff-algorithm-part-1" rel="nofollow ugc noopener"> helpful online resources</a><span> for learning the algorithm.</span></p><p>Comparing documents is not a solved problem. Docx is an open file format which implements the OpenXml specification of XML. Under the hood, a docx file is a zipped set of XML documents. OpenXML is similar enough to html to be legible to those who have written html but with far fewer SDKs for interfacing with it. If you imagine how you would represent things like formatting, tables, links, etc. with HTML, that's essentially how it's represented in OpenXML.</p><p>A document comparison system requires,</p><ul><li><p>Decomposing the document into well-designed data structures.</p></li><li><p>Comparing text that can be arbitrarily nested in any set of different containers such as tables, text boxes, and shapes.</p></li><li><p><span>Defining an </span><a href="https://www.wilfred.me.uk/blog/2022/09/06/difftastic-the-fantastic-diff/#:~:text=Diff%20algorithms%20are%20described%20in,file%20into%20the%20output%20file." rel="nofollow ugc noopener">edit script</a><span> format that can express both textual changes and structural changes (modifying formatting, changing table dimensions, etc).&nbsp;</span></p></li><li><p>Using that edit script to rebuild the document while pulling in the correct formatting from both the original and modified documents.</p></li></ul><p>Additionally, several elements of this system required novel algorithm designs. Unlike comparing plain text, there is no standard algorithm for comparing tables. How do we know which rows from the original document match with which rows of the modified? The same goes for columns. Furthermore, how can we determine if a row or column has been modified or if it's been wholly inserted or deleted? How do we know if we're even comparing the correct tables against each other in the first place?</p><p>Beyond the elegant world of theory and algorithms, we had to work through the long tail of edge cases. Docx is an enormous file standard with countless features you’ve never heard of. After building the initial version of our system, it took debugging hundreds of edge cases to get it to a point where it’s consistently reliable. Since the files we compare are generated outside of our system, it was impossible to anticipate all of the edge cases in advance. The only way to do so is to work through them when they arise in production.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F418f2320-b211-4a46-b7b2-3498da663572_604x318.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F418f2320-b211-4a46-b7b2-3498da663572_604x318.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F418f2320-b211-4a46-b7b2-3498da663572_604x318.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F418f2320-b211-4a46-b7b2-3498da663572_604x318.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F418f2320-b211-4a46-b7b2-3498da663572_604x318.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F418f2320-b211-4a46-b7b2-3498da663572_604x318.png" width="604" height="318" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/418f2320-b211-4a46-b7b2-3498da663572_604x318.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:318,&quot;width&quot;:604,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:50229,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F418f2320-b211-4a46-b7b2-3498da663572_604x318.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F418f2320-b211-4a46-b7b2-3498da663572_604x318.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F418f2320-b211-4a46-b7b2-3498da663572_604x318.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F418f2320-b211-4a46-b7b2-3498da663572_604x318.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Once again, good luck to anyone who tries this.</figcaption></figure></div><p>Finally, supporting such a system presents some thorny system-level problems. Comparing a 1000+ page document (not uncommon in the legal industry) can require 30+ minutes of execution time and 20+ gb of memory. Building robust support for these documents while not causing timeouts in the various parts of the system awaiting the completion of these operations was challenging. In hindsight, however, this has been an advantage for us because documents like these crash incumbent redline products which can only run on Windows laptops.</p><p>Replacing git’s technical language with a visual one was our critical unlock to making git-like version control accessible to non-coders. Intuitive visual actions allow users to perform the core operations of git without requiring them to memorize any confusing commands or vocabulary.</p><p>The following illustrates the stock purchase agreement process described above within the context of Version Story:</p><ol><li><p>M&amp;A lawyer adds V1 of the agreement to Version Story. The version is represented by a tile on the canvas.</p></li></ol><blockquote><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif" width="800" height="450" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:450,&quot;width&quot;:800,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22d250ce-7906-4dff-81c3-c86856d9cd6b_800x450.gif 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div></blockquote><ol start="2"><li><p>M&amp;A lawyer invites specialist colleagues to Version Story.</p></li></ol><blockquote><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif" width="800" height="450" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:450,&quot;width&quot;:800,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75c38ec7-665e-4d3f-b279-a4df777b5e29_800x450.gif 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div></blockquote><ol start="3"><li><p>Specialist lawyers upload their changes. They generate a redline by drawing a line from V1 to their changes.</p></li></ol><blockquote><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif" width="800" height="450" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:450,&quot;width&quot;:800,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_lossy/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4d5d6f20-758b-455c-9258-0383df119ecd_800x450.gif 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div></blockquote><ol start="4"><li><p>M&amp;A lawyer merges these changes into a consolidated redline. They download a track changes version of this redline and resolve conflicts in Microsoft Word.</p></li></ol><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif" width="800" height="450" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:450,&quot;width&quot;:800,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:3692286,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/gif&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac1d8634-24c1-4b68-ae19-4cf46cb705ce_800x450.gif 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png" width="370" height="401.1214953271028" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:348,&quot;width&quot;:321,&quot;resizeWidth&quot;:370,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4107c4dd-f003-460f-b38a-7fd48ae6c54f_321x348.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Version Story alerts users to merge conflicts</figcaption></figure></div><p>Our product does not yet comprehensively demonstrate the full functionality of git. We still have work to do to accomplish our full vision! What we’ve achieved, however, is a critical step in the direction of moving non-coders to a git-like version control system. We have validated our core hypothesis of representing git functionality with a visual canvas and now have lawyers performing git-like functions they never had access to before.</p><p>The following is a set of unsolicited comments from our users:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png" width="480" height="513.8211382113822" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/fddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:790,&quot;width&quot;:738,&quot;resizeWidth&quot;:480,&quot;bytes&quot;:135609,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffddaa16d-e7ab-4ee3-ac6d-1e722b6728ee_738x790.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc545522-b184-413d-b878-fb6db09d4376_941x145.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc545522-b184-413d-b878-fb6db09d4376_941x145.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc545522-b184-413d-b878-fb6db09d4376_941x145.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc545522-b184-413d-b878-fb6db09d4376_941x145.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc545522-b184-413d-b878-fb6db09d4376_941x145.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc545522-b184-413d-b878-fb6db09d4376_941x145.png" width="941" height="145" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cc545522-b184-413d-b878-fb6db09d4376_941x145.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:145,&quot;width&quot;:941,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc545522-b184-413d-b878-fb6db09d4376_941x145.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc545522-b184-413d-b878-fb6db09d4376_941x145.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc545522-b184-413d-b878-fb6db09d4376_941x145.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcc545522-b184-413d-b878-fb6db09d4376_941x145.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png" width="1456" height="732" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:732,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8c02f488-2480-45db-9dc4-acabe4ef81c5_1600x804.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>An exchange one of our users had with their colleague after sharing Version Story.</figcaption></figure></div><p>Legal documents aren't just text on a page – they're the operating system of society. When lawyers draft and revise contracts, regulations, and legislation, they're writing the rules that govern how our world works. The stakes couldn't be higher:</p><ul><li><p>A missed change in a merger agreement could cost clients millions of dollars</p></li><li><p>An overlooked revision in a regulatory filing could expose companies to legal liability</p></li><li><p>Conflicting changes in contract terms could lead to years of litigation</p></li><li><p>The inability to trace how legal language evolved can hamper future interpretation</p></li></ul><p><span>In a 2022 article of</span><a href="https://newsletterhunt.com/emails/40489" rel="nofollow ugc noopener"> Money Stuff titled “Brightline redline”</a><span>, Matt Levine illustrates an example of these stakes, describing how Certares and Knighthead found themselves in litigation with Morgan Stanley and Brightline over a $25,000,000 credit agreement where the two sides couldn't even agree on which version was signed. "If there is a dispute about what the contract says," Levine explains, "you have to go back through the email chain to pick out which attachment everyone thought they were signing off on." The dispute centered on critical language about loan prepayments worth millions of dollars – language that one side claims was never agreed to.</span></p><p>The next generation of legal collaboration will not be plagued by issues like these. It will be faster, better, safer, and easier with a concurrent version control system like Version Story.</p><p>We've kept our heads down the past four years relentlessly building a solution to this problem and credibility in the legal industry. We now have a differentiated product that users love and sell to top legal teams like those of Dentons, Addleshaw Goddard, Mishcon de Reya, Barings, and Pantera Capital.</p><p>Over the coming months, we will launch to the public. In the meantime if you’d like to try Version Story for yourself, feel free to email me and I’ll add you to our whitelist! jordan@versionstory.com</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We can all be AI engineers – and we can do it with open source models (218 pts)]]></title>
            <link>https://blog.helix.ml/p/we-can-all-be-ai-engineers</link>
            <guid>42136711</guid>
            <pubDate>Thu, 14 Nov 2024 14:56:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.helix.ml/p/we-can-all-be-ai-engineers">https://blog.helix.ml/p/we-can-all-be-ai-engineers</a>, See on <a href="https://news.ycombinator.com/item?id=42136711">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp" width="1344" height="768" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:768,&quot;width&quot;:1344,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:65622,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/webp&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b127cec-2c23-4484-997e-120a7f35f435_1344x768.webp 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>A couple of weeks ago, I gave a talk at </span><a href="https://www.linkedin.com/in/hannah-foxwell/" rel="">Hannah Foxwell’s</a><span> amazing AI for the Rest of Us conference about something that's been brewing in my mind after years of working in DevOps, MLOps, and now GenAI: the barriers to AI engineering are crumbling fast. The tools have gotten good enough that if you can handle an IDE and push some YAML to git, you're already qualified.</span></p><div id="youtube2-XR2DicY1zEM" data-attrs="{&quot;videoId&quot;:&quot;XR2DicY1zEM&quot;,&quot;startTime&quot;:null,&quot;endTime&quot;:null}" data-component-name="Youtube2ToDOM"><p><iframe src="https://www.youtube-nocookie.com/embed/XR2DicY1zEM?rel=0&amp;autoplay=0&amp;showinfo=0&amp;enablejsapi=0" frameborder="0" loading="lazy" gesture="media" allow="autoplay; fullscreen" allowautoplay="true" allowfullscreen="true" width="728" height="409"></iframe></p></div><p>Having lived through the evolution from DevOps (ClusterHQ) to MLOps (Dotscience) and now diving deep into GenAI with HelixML, I keep seeing the same pattern: complex tools get simpler, workflows get standardized, and suddenly what seemed like rocket science becomes just... more engineering.</p><p>Building an AI application comes down to six building blocks:</p><ol><li><p><strong>Models</strong><span>: Just mathematical functions. Complex ones, sure, but at their core, they're just turning words into numbers and back again.</span></p></li><li><p><strong>Prompts</strong><span>: Telling the model what to do in plain English. Sometimes you need to be really explicit - like talking to a toddler.</span></p></li><li><p><strong>Knowledge</strong><span>: Your AI's personal knowledge base. Documents, websites, whatever you need it to learn from.</span></p></li><li><p><strong>Integrations</strong><span>: This is where it gets interesting - connecting your AI to real business systems through APIs.</span></p></li><li><p><strong>Tests</strong><span>: Because nobody wants their AI going sideways in production. Yes, you can test AI apps, and you absolutely should.</span></p></li><li><p><strong>Deployment</strong><span>: Running it on a server. For example, versioning the entire app above in a yaml file and </span><a href="https://blog.helix.ml/p/announcing-helix-14-cicd-for-cloud" rel="">using Flux to manage deployment to K8s and Helix</a><span>.</span></p></li></ol><p>Here's where my DevOps background kicks in. You know all those tools you're already using? Git? CI/CD pipelines? They work for AI apps too. I demonstrated this live in the talk by building a Jira integration that could write code based on ticket descriptions.</p><p><span>The secret sauce? Something we're calling an "</span><a href="https://aispec.org/" rel="">AISpec</a><span>" - a YAML file that pulls all these pieces together in a way that feels natural to anyone who's worked with modern infrastructure tools.</span></p><p>This bit's important: when you use open source models, your data stays yours. It doesn't end up training someone else's model. For companies worried about GDPR or other national, regional or corporate regulation, this is crucial. You can run everything locally, in your own infrastructure, with your data staying right where your legal team wants it.</p><p><span>If you're reading this thinking "show me the code," I've got you covered. Here’s a complete reference architecture you can set up to do this stuff yourself: </span><strong><a href="https://github.com/helixml/genai-cicd-ref" rel="">https://github.com/helixml/genai-cicd-ref</a></strong></p><p>And here’s a complete tutorial of using and setting up the reference architecture:</p><div id="youtube2-noilYeBqNUA" data-attrs="{&quot;videoId&quot;:&quot;noilYeBqNUA&quot;,&quot;startTime&quot;:null,&quot;endTime&quot;:null}" data-component-name="Youtube2ToDOM"><p><iframe src="https://www.youtube-nocookie.com/embed/noilYeBqNUA?rel=0&amp;autoplay=0&amp;showinfo=0&amp;enablejsapi=0" frameborder="0" loading="lazy" gesture="media" allow="autoplay; fullscreen" allowautoplay="true" allowfullscreen="true" width="728" height="409"></iframe></p></div><p>The main thing I want you to take away is this: if you can handle version control and basic deployment workflows, you can build production-ready AI applications. The tools are there. The models are there. And they're getting better every day.</p><p><span>Check out </span><a href="https://aispec.org/" rel="">aispec.org</a><span> if you want to dig into the standard format we're proposing for all this. Or if you want to chat about any of this, </span><a href="https://www.linkedin.com/in/luke-marsden-71b3789/" rel="">find me on LinkedIn</a><span> or drop me an email at </span><a href="mailto:luke@helix.ml" rel="">luke@helix.ml</a><span>.</span></p><p>This is about making AI engineering accessible to everyone who knows how to ship code. No PhD required, no magic - just solid engineering practices applied to these powerful new tools.</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why is it so hard to find a job now? Enter Ghost Jobs (369 pts)]]></title>
            <link>https://arxiv.org/abs/2410.21771</link>
            <guid>42136469</guid>
            <pubDate>Thu, 14 Nov 2024 14:35:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2410.21771">https://arxiv.org/abs/2410.21771</a>, See on <a href="https://news.ycombinator.com/item?id=42136469">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="labstabs"><p>
    <label for="tabone">Bibliographic Tools</label></p><div>
      <h2>Bibliographic and Citation Tools</h2>
      <div>
          <p><label>
              
              <span></span>
              <span>Bibliographic Explorer Toggle</span>
            </label>
          </p>
          
        </div>
        
        
        
        
    </div>


    <p>
    <label for="tabtwo">Code, Data, Media</label></p><div>
      <h2>Code, Data and Media Associated with this Article</h2>
      

      
      
      
      
      
      
      
      
    </div>


      <p>
      <label for="labstabs-demos-input" id="labstabs-demos-label">Demos</label></p><div>
        <h2>Demos</h2>
        
        
        
        
      </div>
      <p>
      <label for="tabfour">Related Papers</label></p><div>
        <h2>Recommenders and Search Tools</h2>
        
        
        
        
        
      </div>

      <p>
      <label for="tabfive">
        About arXivLabs
      </label></p><div>
            <h2>arXivLabs: experimental projects with community collaborators</h2>
            <p>arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.</p>
            <p>Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.</p>
            <p>Have an idea for a project that will add value for arXiv's community? <a href="https://info.arxiv.org/labs/index.html"><strong>Learn more about arXivLabs</strong></a>.</p>
          </div>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[PyPI now supports digital attestations (170 pts)]]></title>
            <link>https://blog.pypi.org/posts/2024-11-14-pypi-now-supports-digital-attestations/</link>
            <guid>42136375</guid>
            <pubDate>Thu, 14 Nov 2024 14:25:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.pypi.org/posts/2024-11-14-pypi-now-supports-digital-attestations/">https://blog.pypi.org/posts/2024-11-14-pypi-now-supports-digital-attestations/</a>, See on <a href="https://news.ycombinator.com/item?id=42136375">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-md-component="container">
      
      
        
          
        
      
      <main data-md-component="main">
        <div data-md-component="content">
    
    <article>
      
        
  
  

<nav>
  
    
    
    
      <a href="https://blog.pypi.org/tags/#publishing">publishing</a>
    
  
    
    
    
      <a href="https://blog.pypi.org/tags/#security">security</a>
    
  
    
    
    
      <a href="https://blog.pypi.org/tags/#oidc">oidc</a>
    
  
</nav>


  
  


  

<p>PyPI package maintainers can now publish signed digital attestations when
publishing, in order to further increase trust in the supply-chain security of
their projects. Additionally, a new API is available for consumers and
installers to verify published attestations.</p>
<p>Many projects have already begun publishing attestations, with more than 20,000
attestations already published.</p>
<p>This finalizes PyPI's support for <a href="https://peps.python.org/pep-0740/">PEP 740</a>, and follows directly from previous
work to add support for <a href="https://docs.pypi.org/trusted-publishers/">Trusted Publishing</a>, as well as the <a href="https://blog.pypi.org/posts/2023-05-23-removing-pgp/">deprecation and
removal of PGP signatures</a>.</p>
<!-- more -->

<h3 id="why-not-plain-signatures">Why not plain signatures?</h3>
<p>PyPI's support for digital attestations has three key advantages over regular
cryptographic signatures, such as those provided by PGP:</p>
<ul>
<li><strong>Attestations are signed by an identity, not a key pair:</strong>
  Similar to our recent support for Trusted Publishing, PyPI's support for
  digital attestations relies upon Open ID Connect (OIDC) identities. By signing
  attestations with identities, and not a public/private key pair, we mitigate the
  potential for an individual's key loss or compromise, one of the most common failure cases for
  PGP signing.</li>
<li><strong>Attestations provide a verifiable link to an upstream source repository:</strong>
  By signing with the identity of the upstream source repository, such as in the
  case of an upload of a project built with GitHub Actions, PyPI's support for
  digital attestations defines a strong and verifiable association between a file
  on PyPI and the source repository, workflow, and even the commit hash that
  produced and uploaded the file. Additionally, publishing attestations to a
  transparency log helps mitigate against both compromise of PyPI and compromise
  of the projects themselves.</li>
<li><strong>Attestations are verified when uploaded, and must be verifiable to be uploaded:</strong>
  Upon review of the state of historical PGP signatures published to PyPI, <a href="https://blog.yossarian.net/2023/05/21/PGP-signatures-on-PyPI-worse-than-useless">we
  found that many signatures were not verifiable</a>, either by PyPI or by end
  users. With support for PEP 740, PyPI only permits attestations with a
  verifiable signature to be uploaded and redistributed by the index. This
  ensures that all attestations are verifiable and useful for all PyPI users.</li>
</ul>
<p>Much more detail is provided in a corresponding blog post by Trail of Bits:
<a href="https://blog.trailofbits.com/2024/11/14/attestations-a-new-generation-of-signatures-on-pypi/">Attestations: a new generation of signatures on PyPI</a>.</p>
<h3 id="how-to-view-a-files-attestations">How to view a file's attestations</h3>
<p>For consumers and package installers wanting to perform verification, PyPI
currently provides two ways to access digital attestations associated with a
given file on PyPI:</p>
<ul>
<li>
<p><strong>A new Integrity API for PyPI</strong>
  The <a href="https://docs.pypi.org/api/integrity/">Integrity API</a> provides programmatic
  access to PyPI's implementation of PEP 740. Operating on individual files, it
  collects all published attestations for a given file and returns them as a
  single response.</p>
</li>
<li>
<p><strong>A new web UI for viewing per-file attributes</strong>
  Similarly, we have introduced a new page on PyPI's web UI, displaying details
  for individual files, including the presence of any attestations about the
  file. You can see an example here:
  <a href="https://pypi.org/project/sampleproject/#sampleproject-4.0.0.tar.gz">https://pypi.org/project/sampleproject/#sampleproject-4.0.0.tar.gz</a></p>
</li>
</ul>
<h3 id="get-started-today">Get started today</h3>
<p>The generation and publication of attestations happens by default, and no
changes are necessary for projects that meet all of these conditions:</p>
<ol>
<li>publish from GitHub Actions;</li>
<li>via <a href="https://docs.pypi.org/trusted-publishers/">Trusted Publishing</a>; and</li>
<li>use the <a href="https://github.com/pypa/gh-action-pypi-publish">pypa/gh-action-pypi-publish</a> action to publish.</li>
</ol>
<p>Support for automatic attestation generation and publication from other Trusted
Publisher environments <a href="https://github.com/pypi/warehouse/issues/17001">is planned</a>. While not recommended, maintainers can also
<a href="https://docs.pypi.org/attestations/producing-attestations/#the-manual-way">manually generate and publish attestations</a>.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>Support for work on PEP 740's authoring and design was provided by the
<a href="https://www.sovereign.tech/tech/python-package-index">Sovereign Tech Agency</a> and the Google Open Source Security Team.</p>
<p>Funding for the implementation of PEP 740 was provided by the Google Open
Source Security Team, and much of the development work on PyPI and related
tools was performed by <a href="https://www.trailofbits.com/">Trail of Bits</a>, with special thanks to contributors
<a href="https://github.com/woodruffw">William Woodruff</a>, <a href="https://github.com/facutuesca">Facundo Tuesca</a>, and <a href="https://github.com/DarkaMaul">Alexis Challande</a>.</p>
<p>Thanks to the the <a href="https://www.sigstore.dev/">Sigstore project</a> for their work popularizing identity-based signing, hosting a public-good transparency log, and continued support of the <a href="https://pypi.org/project/sigstore/">Python client for Sigstore</a>.</p>
<p>Many thanks to <a href="https://github.com/webknjaz">Sviatoslav Sydorenko</a> as well for his support and ongoing
maintenence of the <a href="https://github.com/pypa/gh-action-pypi-publish">pypa/gh-action-pypi-publish</a> action, as well his support
for implementing PEP 740 in the action.</p>
<hr>
<p><em>Dustin Ingram is a maintainer of the Python Package Index.</em></p>







  
  



  


  



      
    </article>
  </div>
        
          
        
      </main>
      
        
      
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Onion wins Alex Jones' Infowars in bankruptcy auction (111 pts)]]></title>
            <link>https://www.nbcnews.com/news/us-news/onion-wins-alex-jones-infowars-bankruptcy-auction-rcna179936</link>
            <guid>42136327</guid>
            <pubDate>Thu, 14 Nov 2024 14:20:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nbcnews.com/news/us-news/onion-wins-alex-jones-infowars-bankruptcy-auction-rcna179936">https://www.nbcnews.com/news/us-news/onion-wins-alex-jones-infowars-bankruptcy-auction-rcna179936</a>, See on <a href="https://news.ycombinator.com/item?id=42136327">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>The Onion, the satirical news company that repeatedly spoofed conspiracy theorist Alex Jones, has won the<a href="https://www.nbcnews.com/news/us-news/future-alex-jones-infowars-hands-bidders-bankruptcy-auction-rcna179563" target="_blank"> bankruptcy auction</a> for control over his media empire — most notably InfoWars, the far-right, conspiracy-minded website that served as Jones’ primary online platform.</p><p>Jones<a href="https://x.com/realalexjones/status/1857058831135645739" target="_blank"> announced the sale on X</a> Thursday morning.</p><p>“I just got word 15 minutes ago that my lawyers and folks met with the U.S. trustee over our bankruptcy this morning and they said they are shutting us down even without a court order this morning,” Jones said.</p><p>“I don’t know what’s going to happen but I’m going to be here until they come and turn the lights off,” he added.</p><p>The Onion plans to shutter Jones’ InfoWars and rebuild the website featuring well-known internet humor writers and content creators, according to a person with knowledge of the sale.</p><p>Jones, 50, one of the most-high profile and financially successful alternative media personalities, built a small empire off a radio show-turned-internet video operation centered around the Infowars brand that focused on false and often bizarre claims about grand conspiracies and government wrongdoing.</p><p>Details of Wednesday’s auction, including how much was offered for Free Speech Systems, the parent company of Infowars, and related assets, were not immediately known. Funds generated from the sale are meant to satisfy Jones’ estate creditors, comprised largely of victims’ families of the<a href="https://www.nbcnews.com/news/us-news/sandy-hook-shooting-survivors-graduate-high-school-reflect-1st-grade-m-rcna156740" target="_blank"> 2012 Sandy Hook shooting</a> to whom he must pay damages in defamation verdicts.</p><p>Sandy Hook families filed lawsuits in Connecticut and Texas claiming Jones defamed them on his show and inflicted emotional distress by repeatedly suggesting the shooting, in which a gunman <a href="https://www.nbcnews.com/news/us-news/sandy-hook-shooting-survivors-graduate-high-school-reflect-1st-grade-m-rcna156740" target="_blank">killed 20 first-grade children and six adults</a>, was a hoax.</p><p>Juries found Jones liable for defamation and awarded the families nearly $1.5 billion in total in their lawsuits, but they have been unable to collect anything from Jones, who claimed he can’t afford that massive a sum. He<a href="https://www.nbcnews.com/news/us-news/infowars-host-alex-jones-files-bankruptcy-court-records-show-rcna59793" target="_blank"> filed for bankruptcy</a> in late 2022, and a judge in June<a href="https://www.nbcnews.com/news/us-news/sandy-hook-families-accuse-alex-jones-erratic-behavior-ahead-bankruptc-rcna157017" target="_blank"> allowed him to liquidate his personal assets</a> to help pay off the verdicts.</p><p>The sale had the backing of several of the Connecticut families of Sandy Hook shooting who were part of the lawsuit.</p><p>“Our clients knew that true accountability meant an end to Infowars and an end to Jones’ ability to spread lies, pain and fear at scale,” Chris Mattei, attorney for the Connecticut families said in a statement. “By divesting Jones of Infowars’ assets, the families and the team at The Onion have done a public service and will meaningfully hinder Jones’ ability to do more harm.”</p><p>The anti-violence organization Everytown for Gun Safety said it will be the exclusive advertiser in The Onion’s new venture as part of a multiyear agreement.</p><p>John Feinblatt, the group’s president, said in a statement that he hopes to “reach new audiences ready to hold the gun industry accountable for contributing to our nation’s gun violence epidemic.”</p><p>Since April, The Onion has been led by chief executive Ben Collins, who previously covered disinformation and conspiracy theories for NBC News, a beat that often meant covering Jones. Collins has introduced several changes meant to monetize the business, including subscriptions, organized live events, and bringing back physical copies of the paper and its television parody, The Onion News Network.</p><p>In June, Collins answered calls from followers online that The Onion purchase InfoWars with <a href="https://bsky.app/profile/bencollins.bsky.social/post/3kuclxsix6c24" target="_blank">a meme</a> “looking into it.”</p><p>Those interested in acquiring Jones’ media company had submitted their final offers to federal court-appointed trustee Christopher Murray, who was tasked with picking a best bid, but not necessarily the highest.</p><p>The identities of potential buyers were secret as they had to agree to nondisclosure agreements in order to receive bid materials.</p><p>The auction firms running the sale said that there are “no restrictions on the use of any acquired property in the bankruptcy order,” and that the winner has the choice of whether or not to continue Infowars’ operations.</p><p>On his show this week, amid pleas for listeners to buy subscriptions and the nutritional supplements he sells, Jones painted a picture of his potential buyers, describing one group of anonymous bidders as friendly backers who would allow his show to operate as normal. Others, he said, were “bad guys” who would shut InfoWars down.</p><p>While he said he would continue to broadcast via an alternative channel if ordered to shutter by a new buyer, Jones noted he would be hampered by the loss of his brand, website and equipment, among other necessities.</p><p>“All you leftists celebrating the end of Alex Jones and Infowars, you’re fools,” he said. “Just watch.”</p><p>Up for grabs at the auction were InfoWars production rights and materials, the InfoWars store, domain names, production equipment and other assets — including a Terradyne armored truck and a Winnebago motorhome — that can be purchased in their entirety or in parts, according to the firm, ThreeSixty Asset Advisors. Jones broadcasts from the Austin, Texas, area.</p><p>The auction is part of Murray’s “<a href="https://www.nbcnews.com/news/us-news/bankruptcy-court-trustee-alex-jones-liquidation-case-previews-wind-med-rcna158659" target="_blank">orderly wind-down process</a>“ under the U.S. Bankruptcy Court for the Southern District of Texas, which has overseen the latest phase of the case against Jones, stemming from the Sandy Hook Elementary School massacre in Newtown, Connecticut.</p><p>In fitting form for the satirical website, the Onion’s press release announcing the sale was written in the voice of a CEO of Global Tetrahedron, a fictional evil company created by Onion staff. Former tech executive Jeff Lawson took on the name Global Tetrahedron for his real company that acquired the Onion from G/O Media in April.&nbsp;</p><p>“Through it all, InfoWars has shown an unswerving commitment to manufacturing anger and radicalizing the most vulnerable members of society—values that resonate deeply with all of us at Global Tetrahedron,” the release said.</p><p>Jones founded Infowars, which operates under Free Speech Systems, in 1999. The company itself held about $6 million in cash and $1.2 million in inventory, according to previous court filings from June.</p><p>The families in Texas and Connecticut have<a href="https://www.nbcnews.com/news/us-news/alex-jones-infowars-shutdown-looms-sandy-hook-families-seek-collect-co-rcna158891" target="_blank"> sparred in court</a> over the liquidation process, with concerns over how the money will be distributed. Still, they have said, Jones’ loss of his company brings some accountability for his past words.</p><p>At his trial in Texas in 2022, Jones generally blamed “corporate media” for twisting his words and misportraying him but didn’t specify how.</p><p>While Jones also testified that he believes Sandy Hook was “100% real,” he has used the ongoing litigation to galvanize his listeners as he faces the loss of InfoWars.</p></div><div><div data-activity-map="expanded-byline-article-bottom"><div data-testid="byline-thumbnail"><a href="https://www.nbcnews.com/author/brandy-zadrozny-ncpn858391"><picture data-testid="picture"><source media="(min-width: 320px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_avif,q_auto:eco,dpr_2/newscms/2020_09/3242336/brandy-zadrozny-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_09/3242336/brandy-zadrozny-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_09/3242336/brandy-zadrozny-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p><span data-testid="byline-name"><a href="https://www.nbcnews.com/author/brandy-zadrozny-ncpn858391">Brandy Zadrozny</a></span><span><a href="https://twitter.com/brandyzadrozny" target="_blank" rel="noopener noreferrer"><span></span></a><a href="mailto:brandy.zadrozny@nbcuni.com" target="_blank" rel="noopener noreferrer"><span></span></a></span></p><p>Brandy Zadrozny is a senior reporter for NBC News. She covers misinformation, extremism and the internet.</p></div><div data-activity-map="expanded-byline-article-bottom"><div data-testid="byline-thumbnail"><a href="https://www.nbcnews.com/author/erik-ortiz-ncpn371"><picture data-testid="picture"><source media="(min-width: 320px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_avif,q_auto:eco,dpr_2/newscms/2019_29/2934781/190619-erik-ortiz-byline2205.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2019_29/2934781/190619-erik-ortiz-byline2205.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2019_29/2934781/190619-erik-ortiz-byline2205.jpg" alt="" height="48" width="48"></picture></a></div><p><span data-testid="byline-name"><a href="https://www.nbcnews.com/author/erik-ortiz-ncpn371">Erik Ortiz</a></span><span><a href="https://twitter.com/erikjhortiz" target="_blank" rel="noopener noreferrer"><span></span></a><a href="mailto:erik.ortiz@nbcuni.com" target="_blank" rel="noopener noreferrer"><span></span></a></span></p><p>Erik Ortiz is a senior reporter for NBC News Digital focusing on racial injustice and social inequality.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Onion Buys Alex Jones's Infowars Out of Bankruptcy (1562 pts)]]></title>
            <link>https://www.nytimes.com/2024/11/14/business/media/alex-jones-infowars-the-onion.html</link>
            <guid>42136259</guid>
            <pubDate>Thu, 14 Nov 2024 14:10:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2024/11/14/business/media/alex-jones-infowars-the-onion.html">https://www.nytimes.com/2024/11/14/business/media/alex-jones-infowars-the-onion.html</a>, See on <a href="https://news.ycombinator.com/item?id=42136259">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2024/11/14/business/media/alex-jones-infowars-the-onion.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[A memory leak in Apple's Network Extension framework (175 pts)]]></title>
            <link>https://obdev.at/blog/a-memory-leak-in-apples-network-extension-framework/</link>
            <guid>42136136</guid>
            <pubDate>Thu, 14 Nov 2024 13:53:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://obdev.at/blog/a-memory-leak-in-apples-network-extension-framework/">https://obdev.at/blog/a-memory-leak-in-apples-network-extension-framework/</a>, See on <a href="https://news.ycombinator.com/item?id=42136136">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<main role="main">
<article>

<section>
<p>Is it normal for the Little Snitch Network Extension to consume Gigabytes of memory? No it isn’t.</p>
<p>Unfortunately that’s <a href="https://obdev.at/blog/apples-built-in-macos-firewall-breaks-third-party-firewalls/">another</a> new bug in the Network Extension framework of macOS. It’s a memory leak in Apple’s framework, which developers must use to create a firewall for the Mac. This bug first occurred in macOS 15.0 Sequoia.</p>
<p>You can easily check if you are affected by this bug by running the <code>leaks</code> command in a Terminal window:</p>
<pre><code>sudo leaks at.obdev.littlesnitch.networkextension | grep "total leaked bytes"</code></pre>
<p>On macOS 14 Sonoma you may get a hand full of leaks with a total of a few Kilobytes. That’s OK (sort of). But on macOS 15 Sequoia this can easily grow to hundreds of Megabytes and more.</p>
<p>Once again, we rely on Apple to fix this issue in a macOS update.</p>
<p>This bug has already been reported to Apple (FB15552991), but if you are affected by this bug, feel free to send another report via Feedback Assistant (mentioning the existing report FB15552991). This might help Apple to find the cause of the issue and it increases the chance that Apple will prioritize the fix.</p>
<p>For the time being, if you encounter an unreasonably huge memory consumption, you may enforce a restart of the Network Extension. To do so, open the <em>Activity Monitor</em> app in <em>Applications &gt; Utilities</em>, search for the <code>at.obdev.littlesnitch.networkextension</code> process (make sure that <em>All Processes</em> is selected in the <em>View</em> menu) and click the Stop button in the toolbar to quit the process. The extension will then restart automatically.</p></section>
</article>
</main>

			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Keycloak took 10 months to fix a 2FA bypass (183 pts)]]></title>
            <link>https://security.humanativaspa.it/an-analysis-of-the-keycloak-authentication-system/</link>
            <guid>42136000</guid>
            <pubDate>Thu, 14 Nov 2024 13:32:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://security.humanativaspa.it/an-analysis-of-the-keycloak-authentication-system/">https://security.humanativaspa.it/an-analysis-of-the-keycloak-authentication-system/</a>, See on <a href="https://news.ycombinator.com/item?id=42136000">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

		
		<article id="post-4341">
			<!-- .entry-header -->

			<!---->

					<div>
						<p>Earlier this year, I was working with my colleague Ema on a <strong>source-assisted application and architecture assessment</strong> for a client who was using <a href="https://www.keycloak.org/">Keycloak</a> to implement <strong>single sign-on</strong> on their applications. The purpose of the assessment was not to audit Keycloak itself. However, being it at the core of the authentication system, we took a look at it.</p>
<p>Keycloak is described as a solution for <em>“Open Source Identity and Access Management. Add authentication to applications and secure services with minimum effort. No need to deal with storing users or authenticating users. Keycloak provides user federation, strong authentication, user management, fine-grained authorization, and more.”</em></p>
<p>The relationship between Keycloak and Red Hat is not entirely clear to me, but the former is definitely supported by the latter:</p>
<ul>
<li><a href="https://www.redhat.com/en/blog/getting-started-keycloak-single-sign-operator">https://www.redhat.com/en/blog/getting-started-keycloak-single-sign-operator</a></li>
<li><a href="https://access.redhat.com/products/red-hat-build-of-keycloak">https://access.redhat.com/products/red-hat-build-of-keycloak</a></li>
</ul>
<p>During our analysis we identified some security issues and, therefore, we looked into how to report them to the developers:</p>
<p><img fetchpriority="high" decoding="async" src="https://security.humanativaspa.it/sec/wp-content/uploads/2024/10/Pasted-image-20240820165225.png" alt="Pasted image 20240820165225.png" width="1027" height="349"></p>
<p>Let’s see what vulnerabilities we have discovered and reported.</p>
<h3>OTP bypass</h3>
<p>In the <a href="https://www.keycloak.org/docs/latest/server_admin/index.html#step-up-flow">step-up-flow guide</a>, a mechanism is described for defining different levels of security depending on the level of authentication (LOA), allowing for applications to use a first level (only username + password) or a second level (username + password + OTP). An administrator who follows this guide is led to make the “step-up flow” the default flow for the “browser flow” so that it is used for all applications.</p>
<p>The security issue is caused by the fact that <strong>the default “account” and “account-console” applications are considered as LOA1, therefore access is possible with only a username and a password</strong>, also if all other applications require an OTP (LOA2). <strong>This allows an attacker to completely bypass the OTP request</strong> with only a username and a password, as follows:</p>
<ol>
<li>The attacker tries to access one of the applications configured to login with Keycloak in LOA2.</li>
<li>The application redirects to Keycloak for authentication.</li>
<li>The attacker provides the correct username and password. At this point, Keycloak requests the OTP.</li>
<li>The attacker does not provide the OTP and instead goes to <a href="https://keycloak_url/realms/myrealm/account">https://keycloak_url/realms/myrealm/account</a> (the URL of the “account” default application, which requires username and password). Here the attacker can add a new OTP method without even being asked for a currently configured OTP, even if it’s present.</li>
<li>At this point, the attacker can return to the application and will know both the credentials and the OTP, thus being able to access it.</li>
</ol>
<p>Essentially, <strong>it is possible to completely bypass the second factor of authentication with only a username and a password</strong>.</p>
<p>The communication timeline follows:</p>
<p>28/03/2024 – First communication sent with all details and a proposed fix.<br>
10/04/2024 – Request for a follow-up with additional details about the proposed fix.<br>
17/04/2024 – <a href="https://github.com/keycloak/keycloak/security/advisories/GHSA-4f53-xh3v-g8x4">Advisory</a> published.<br>
21/04/2024 – Request of a follow-up.<br>
22/04/2024 – First response: <code>Apologies for the lack of communication on our side. The discussion moved internally to the Keycloak team as this might be a duplicate of a CVE that was already reported and a fix was implemented and released. You can now find it as CVE-2023-3597 (see https://github.com/keycloak/keycloak/security/advisories/GHSA-4f53-xh3v-g8x4).</code></p>
<p>Further details are available at:</p>
<ul>
<li><a href="https://github.com/keycloak/keycloak/security/advisories/GHSA-4f53-xh3v-g8x4">https://github.com/keycloak/keycloak/security/advisories/GHSA-4f53-xh3v-g8x4</a></li>
<li><a href="https://github.com/advisories/GHSA-4f53-xh3v-g8x4">https://github.com/advisories/GHSA-4f53-xh3v-g8x4</a></li>
</ul>
<p>In hindsight, by analyzing the details available at <a href="https://bugzilla.redhat.com/show_bug.cgi?id=2221760">https://bugzilla.redhat.com/show_bug.cgi?id=2221760</a>, it is possible to see how <strong>the vulnerability was known to the developers since July 2023 and the fix therefore took 10 months</strong>.</p>
<p><img decoding="async" src="https://security.humanativaspa.it/sec/wp-content/uploads/2024/10/Pasted-image-20240820170144.png" alt="Pasted image 20240820170144.png"></p>
<h3>Multiple security issues in authentication and authorization</h3>
<p>Multiple issues have been identified regarding the authentication and authorization of certain endpoints in the Keycloak software.</p>
<p>It has been observed that <strong>certain functionalities within Keycloak, specifically the&nbsp;<em>/metrics</em>&nbsp;and&nbsp;<em>/health</em>&nbsp;endpoints, are accessible without proper authentication</strong>. Even though those endpoints do not provide sensitive information, it is preferable that they are accessible only to authenticated individuals with the correct privileges.</p>
<p>Additionally, <strong>users with low privileges could access administrative functionalities in the Keycloak admin interface</strong>. This issue presents a significant security risk as it allows unauthorized users to perform actions reserved for administrators, potentially leading to data breaches or system compromise. The affected endpoints are:</p>
<ul>
<li>/admin/realms/myrealm/client-registration-policy/providers</li>
<li>/admin/myrealm/console/whoami</li>
<li>/admin/realms/myrealm/testLDAPConnection</li>
</ul>
<p>In particular, the last functionality (<em>testLDAPConnection</em>), in the event that an AD authentication system has been configured, allows to modify application data,&nbsp;<strong>enabling the submission of an LDAP request (and consequently LDAP access credentials) to a malicious endpoint that can steal the credentials</strong>.</p>
<p>An attacker with access to a non-administrative user account can invoke the “<em>testLDAPConnection</em> functionality by modifying the <em>connectionUrl</em> parameter with an arbitrary value, and the LDAP credentials will be sent to the attacker-controller server. To successfully execute this attack, it’s also necessary to know the <em>componentId</em> related to the domain authentication, which is retrievable in the cookies <em>KEYCLOAK_SESSION</em>, <em>KEYCLOAK_SESSION_LEGACY</em>, and in the responses returned by the <em>/admin/myrealm/console/whoami</em> endpoint.</p>
<p>The communication timeline follows:</p>
<p>04/04/2024 – First communication sent with all details.<br>
09/04/2024 – Response with request of clarifications.<br>
09/04/2024 – More details sent.<br>
09/04/2024 – Second reply.<br>
09/04/2024 – <a href="https://github.com/keycloak/keycloak/pull/27629">Proposed fix</a> for the first issue.<br>
10/04/2024 – Multiple emails about the first issue.<br>
02/05/2024 – Request for information about the second issue (which is more severe).<br>
09/05/2024 – Response with assigned <strong>CVE-2024-3656</strong> and request not to release any details: <code>For the moment there is no estimated keycloak version to include the fix</code><br>
27/05/2024 – Request for an update and a timeline for the fix.<br>
11/06/2024 – <a href="https://github.com/keycloak/keycloak/security/advisories/GHSA-2cww-fgmg-4jqc">Advisory</a> published without any notification.</p>
<p>Further details are available at:</p>
<ul>
<li><a href="https://github.com/keycloak/keycloak/security/advisories/GHSA-2cww-fgmg-4jqc">https://github.com/keycloak/keycloak/security/advisories/GHSA-2cww-fgmg-4jqc</a></li>
<li><a href="https://github.com/advisories/GHSA-2cww-fgmg-4jqc">https://github.com/advisories/GHSA-2cww-fgmg-4jqc</a></li>
</ul>
<h3>Multiple race conditions in anti-brute force mechanism</h3>
<p>Keycloak implements an <a href="https://www.keycloak.org/docs/latest/server_admin/#password-guess-brute-force-attacks">anti-brute force mechanism</a> (which is not enabled by default) which should limit the attack attempts by locking out user accounts after a configured number of incorrect login attempts.</p>
<p>Based on our analysis, the software <strong>didn’t implement mechanisms to prevent concurrent access</strong> to security-critical resources, such as the number of failed authentication attempts. Therefore, it’s possible to <strong>send multiple requests that are processed simultaneously by different threads, allowing the attacker to perform many more login attempts than allowed, and consequently partially bypassing the anti-brute-force mechanism</strong>. Furthermore, when the account is locked out, active sessions are not invalidated.</p>
<p>The issue has been verified both on the username and password-based login and on the OTP request. No checks have been performed on the “Quick Login Check Milliseconds” functionality, but we expect it to be affected by the same issue. The configuration used for testing was set to lockout accounts after 3 incorrect login attempts.</p>
<p>The communication timeline follows:</p>
<p>18/04/2024 – First communication with details.<br>
18/04/2024 – Response: we can’t see the details.<br>
18/04/2024 – Send details again as an attachment.<br>
02/05/2024 – Request for a follow-up.<br>
09/05/2024 – Response: <strong>CVE-2024-4629</strong> assigned, fix in backlog.<br>
24/05/2024 – Request for a roadmap of the fix.<br>
22/08/2024 – Request for a follow-up.<br>
26/08/2024 – Response: Already fixed and published as a <a href="https://github.com/keycloak/keycloak/issues/31726">public issue</a>.<br>
03/09/2024 – <a href="https://access.redhat.com/security/cve/CVE-2024-4629">CVE-2024-4629</a> is published.</p>
<p>Further details on the technique used are available at:</p>
<ul>
<li><a href="https://portswigger.net/research/smashing-the-state-machine">https://portswigger.net/research/smashing-the-state-machine</a></li>
<li><a href="https://portswigger.net/research/the-single-packet-attack-making-remote-race-conditions-local">https://portswigger.net/research/the-single-packet-attack-making-remote-race-conditions-local</a></li>
<li><a href="https://portswigger.net/research/turbo-intruder-embracing-the-billion-request-attack">https://portswigger.net/research/turbo-intruder-embracing-the-billion-request-attack</a></li>
</ul>
<h3>Some final considerations</h3>
<p><strong>Authentication is one of the fundamental mechanisms to ensure the security of applications</strong> and Keycloak is considered to be one of the standard open source software on which many organizations rely for their authentication needs.</p>
<p>I am a strong proponent of open source. However, I believe that <strong>those who develop important projects should carefully consider the impact that their work can have</strong>. I think that for a centralized authentication system, a bypass of the two-factor authentication should be solved or at least mitigated in a timely manner: 10 months is a lot of time to fix a core feature of a security product.</p>
<p>Furthermore, communication with security researchers and, crucially, product users should be as clear and explicit as possible. Keycloak’s advisories are very generic and do not allow users to understand what the actual impacts of the vulnerabilities are. <strong>Attackers can easily look at the code, understand it, and exploit any vulnerability, but the poor system administrator who needs to figure out if it’s important to quickly update certainly will not do that…</strong></p>
<p>Advisories with full details are downloadable at:</p>
<ul>
<li><a href="https://github.com/hnsecurity/vulns/blob/main/HNS-2024-08-Keycloak.md">https://github.com/hnsecurity/vulns/blob/main/HNS-2024-08-Keycloak.md</a></li>
<li><a href="https://github.com/hnsecurity/vulns/blob/main/HNS-2024-09-Keycloak.md">https://github.com/hnsecurity/vulns/blob/main/HNS-2024-09-Keycloak.md</a></li>
</ul>
					</div><!-- .entry-content -->
			
					</article><!-- #post-4341 -->

					

		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[MomBoard: E-ink display for a parent with amnesia (1427 pts)]]></title>
            <link>https://jan.miksovsky.com/posts/2024/11-12-momboard</link>
            <guid>42135520</guid>
            <pubDate>Thu, 14 Nov 2024 12:20:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jan.miksovsky.com/posts/2024/11-12-momboard">https://jan.miksovsky.com/posts/2024/11-12-momboard</a>, See on <a href="https://news.ycombinator.com/item?id=42135520">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<article>
  <a href="https://jan.miksovsky.com/posts/2024/11-12-momboard">
    
    <p>November 12, 2024</p>
  </a>
<p><img src="https://jan.miksovsky.com/images/2024/11/momboard.png" alt="E-ink display on a bathroom counter showing birthday messages"></p>
<p>Today marks two years since I first set up an e-ink display in my mom’s apartment to help her live on her own with amnesia. The display has worked extremely well during those two years, so I’m sharing the basic set-up in case others find it useful for similar situations.</p>
<p><em>Note: unless you have specific experience caring for someone who has amnesia but not dementia, please do not offer care suggestions.</em></p>
<h2 id="the-patient">The patient</h2>
<p>In June 2022 the side-effects of a long surgery left my mom with permanent anterograde amnesia: she can no longer form new long-term memories. Memory isn’t just one neurological system, so very occasionally she will able to remember certain types of things. But for the most part, if she hears or sees something, a few minutes later she will no longer remember it.</p>
<p>To medical professionals her condition looks a lot like dementia — amnesia is a common symptom of dementia — but she doesn’t have dementia. One difference is that (as I understand it) dementia is a progressive disease, while this amnesia is stable. There is no cure.</p>
<p>Someday I might post about the experience about caring for her, but for now I’ll just say that this type of amnesia is not something one should wish on one’s worst enemies.</p>
<h2 id="needs">Needs</h2>
<p>My mom still lives on her own in an apartment. Because she cannot remember things, she goes through each day in a state of low-grade anxiety about where her grown children are and whether they are all right. She feels she hasn’t heard from any of us in a long time. This anxiety manifests as extremely frequent attempts to call or text us.</p>
<p>Paper notes and other forms of reminders didn’t seem to help, and would become out of date even if they weren’t misplaced. My siblings and I would call to let her know we were okay, but five minutes later she’d be back to being worried. She wasn’t in the habit of scrolling back through text messages, so once she’d read a message, it was immediately forgotten and effectively lost.</p>
<p>I thought some sort of unobtrusive, always-on device installed in her apartment might be able to show her notes written by my siblings and me.</p>
<h2 id="design-goals">Design goals</h2>
<p>My goal was to find a display that:</p>
<ol>
<li>Could stay on for months on end</li>
<li>Would let my siblings and I easily post short messages to it that would remain visible until replaced</li>
<li>Was large enough and easy enough to read without glasses</li>
<li>Required no interaction to wake or read and was relatively foolproof (touching it wouldn’t disrupt it)</li>
<li>Was resilient to network failures</li>
<li>Didn’t glow at nighttime</li>
<li>Didn’t require hardware hackery (I’m a software person)</li>
<li>Would boot directly into displaying messages (no interaction needed to start an app)</li>
<li>Was not enshittified with a subscription service or proprietary app store</li>
<li>Was reasonably affordable</li>
<li>Would not look out of place in a home</li>
</ol>
<h2 id="device">Device</h2>
<p>Given the above design goals, I searched for a tablet-size electronic ink display with Wi-Fi connectivity and a decent web browser.</p>
<p>One device that seemed to fit my parameters was the <a href="https://shop.boox.com/products/noteair2">BOOX Note Air2 Series</a>. At the time it cost US$500, which is expensive but is still far cheaper than screens intended for use as commercial retail displays. It’s marketed as a note-taking device and ebook reader, but it also has a capable web browser. It’s big enough to read from a few feet away.</p>
<p>A critical question I couldn’t answer online was whether I’d be able to have the device automatically start its web browser and have that browser display a designated start page. Happily, when the device arrived I was able to confirm it could do both of those things.</p>
<p>The physical case of the Note Air2 looks reasonably nice and not particularly tech-y. The e-ink display is clear and legible; it refreshes quickly enough to not be distracting. By default the device’s backlight was turned on but I could turn it off.</p>
<p>I found a small metal stand to serve an easel for the display so that it felt more like a picture frame.</p>
<h2 id="web-software">Web software</h2>
<p>Since the physical device was satisfactory, the next step was writing a simple website that could drive the display. The site would have two pages:</p>
<ol>
<li>A Board page showing the messages. The e-ink device would boot into showing this page. This is the only page my mom needed to see.</li>
<li>A Compose page my siblings and I write messages and save them to be displayed.</li>
</ol>
<p>The device needed to run for months, and needed to be resilient in the case of network and service failures. At the same time, I also needed to be able to remotely update not only the messages being displayed, but the software displaying those messages.</p>
<p>With that in mind, I factored the Board page into an outer frame and an inner page:</p>
<ol>
<li>The top-level outer frame acts as a thin shell around the inner page. At top of every hour, the outer frame reloads the inner page to pick up potential software changes. If the network is down and the inner page doesn’t reload, the frame just tries again an hour later. To maximize reliability, the outer frame has very little logic and no external dependencies.</li>
<li>The inner page actually displays the messages. Every 5 minutes it queries a simple web service for message data and displays the messages. The inner page contains a small amount of logic, but as few dependencies as possible.</li>
</ol>
<p>Since it’s essentially impossible to debug anything that happens on the device, I made as much use of vanilla HTML and CSS as possible. I used a small amount of JavaScript but no framework or other libraries.</p>
<img src="https://jan.miksovsky.com/images/2024/11/compose.png" alt="Compose form for posting a message to the display">

<p>The Compose page presents a simple web form my siblings and I can use to compose and save a message. I designed the form to work well on a phone screen so that we can write messages when we’re out and about. A small web app manifest lets us save the Compose page to a phone’s home screen as an icon for quick access.</p>
<p>The whole site is tiny, entails no build process, and with the exception of the service (below) is just static files.</p>
<h2 id="visual-design">Visual design</h2>
<p>I was concerned about the possibility of e-ink burn-in, so the Board page randomly changes which message appears where. Other visual elements like the date and time alternate from side to side, with the intention that no single pixel is always on.</p>
<p>To style the note text I chose the free <a href="https://fonts.google.com/specimen/Architects+Daughter">Architect’s Daughter</a> font for a handwritten feel. This font works well on the e-ink display. Labels are displayed in <a href="https://fonts.google.com/specimen/Open+Sans">Open Sans</a>.</p>
<p>One small challenge was maximizing the size of the message text. Sometimes a message is just a word or two; other times it might be several sentences. A single font size can’t accommodate such a wide range of text content. I couldn’t find a pure CSS way to automatically maximize font size so that a text element with word wrapping would display without clipping.</p>
<p>I ended up writing a small JavaScript function to maximize font size: it makes the text invisible (via CSS <code>visibility: hidden</code>), tries displaying the text at a very large size, and then tries successively smaller font sizes until it finds a size that lets all the text fit. It then makes the text visible again.</p>
<h2 id="service">Service</h2>
<p>Just a tiny amount of text data is necessary to drive the display, so I was happy to find the minimalist <a href="https://www.jsonstorage.net/">JsonStorage</a> service that was perfect for this project. A single JSON object stores the text and metadata for the current set of messages. The Compose page can save to the service with a POST request, and the Board page can retrieve the data with a GET.</p>
<p>The service has a free tier that I started with, but I liked the service so much that I eventually paid for a $1/month basic tier. (It appears that tier is now $5/month.)</p>
<h2 id="trial-and-installation">Trial and installation</h2>
<p>I spent a couple of weeks working on the software and letting it run for long periods of time. I was pleasantly surprised that the Boox display worked as well as it did and seemed to stay up indefinitely.</p>
<p>I brought the display over to my mom’s apartment on November 12, 2022, turned it on, joined it to her Wi-Fi, and rebooted it to confirm everything worked in the new environment.</p>
<p>I thought the bathroom counter might be a good place for it, but my mom thought she’d rather have it in her bedroom, so we found a home for it on a windowsill.</p>
<p>My mom was happy with the display right away.</p>
<h2 id="retrospective">Retrospective</h2>
<p>Despite her amnesia, my mom came to remember that this display exits and what it’s for. She looks forward to seeing updates from her children on it.</p>
<p>If we tell her about something that’s coming up, she often asks whether we’ve already put that event on the MomBoard. On the flip side, we have to be careful to keep it up to date; if we fail to take down a message that no longer applies, it confuses her.</p>
<p>Looking back, the display is essentially the only intervention of any kind we’ve tried that’s actually been successful at improving her quality of life (and ours). One reason it’s worked so well is that it didn’t require her to learn anything new. Without the ability to remember new things, it’s virtually impossible for her to learn a new skill or to form new habits.</p>
<p>The device’s reliability has surpassed my expectations. There was one period where the device seemed to stop working, but I traced the problem to a faulty Wi-Fi hub; after that was replaced, it’s worked flawlessly since. For my part, keeping the software as simple as possible and sticking to vanilla web technologies surely helped avoid bugs.</p>
<p>The display still looks great, and it still displays messages day in and day out.</p>
<p>If you want to try to set up something similar to what I describe here, I’m happy to answer technical questions or share advice.</p>
</article>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SQLite Index Visualization (191 pts)]]></title>
            <link>https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/</link>
            <guid>42134964</guid>
            <pubDate>Thu, 14 Nov 2024 10:51:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/">https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/</a>, See on <a href="https://news.ycombinator.com/item?id=42134964">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
<p>After learning about indexes, I understood their basic structure, but I wanted to dig deeper — to explore the data structure, understand the algorithm, and learn how the index data is stored on disk.<br>
The theory and actual implementation can differ, so I decided to explore this topic further.</p>
<p>I wanted to see how a database management system (DBMS) stores an index in both disk and memory, and how it searches through an Index.<br>
I chose SQLite for my experiments:</p>
<ul>
<li>it’s a widely used DBMS, found in browsers, mobile apps, and operating systems;</li>
<li>it's easier to debug: no separate server, just a client-side application;</li>
<li>its codebase is smaller than MySQL or PostgreSQL but uses similar data structures for Indexes;</li>
<li>it’s open-source.</li>
</ul>
<a href="#h2-node-and-page-structure" id="h2-node-and-page-structure"><h2>Node and Page Structure</h2></a>
<p>According to SQLite <a href="https://sqlite.org/fileformat2.html" target="_blank">documentation</a>, Indexes are stored in a B-Tree structure, which is a balanced tree where each node has multiple children.<br>
It typically looks like this:</p>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/b-tree.svg"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/b-tree.svg" alt=""></a></p>
<p>To understand how SQLite stores Nodes, let’s look at the Page and Cell structures.<br>
A Page (analog of a Node on SQLite) stores Cells data and has a link to its right child Page.<br>
A Cell contains Index data, a rowId, and a link to its left child Page.<br>
By default, each SQLite table row has a unique rowId, which works like a primary key if one isn’t explicitly defined.</p>
<p>Here’s a visual example of a B-Tree Index in SQLite:</p>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/b-tree-sqlite.svg"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/b-tree-sqlite.svg" alt=""></a></p>
<p>Index data is stored on disk in this structure:</p>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/b-tree-store.svg"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/b-tree-store.svg" alt=""></a></p>
<p>Each Page has a fixed size, ranging from 512 to 65,536 bytes. Page and Cell headers use 4 bytes to store child links.<br>
If we want to know child Page number - we need to read the header separately with this function:</p>
<pre><code>get4byte(...)</code></pre>
<p>For other Page and Cell data, we can use these C structures:</p>
<a href="#h3-page" id="h3-page"><h3>Page</h3></a>
<p>sqlite/src/btreeInt.h</p>
<pre><code>struct MemPage {
  Pgno pgno;           /* Page number for this page */
  u16 nCell;           /* Number of cells on this page, local and ovfl */
  u8 *aCellIdx;        /* The cell index area */
  u8 *aData;           /* Pointer to disk image of the page data */ 
  ...
};</code></pre>
<a href="#h3-cell" id="h3-cell"><h3>Cell</h3></a>
<p>sqlite/src/btreeInt.h</p>
<pre><code>struct CellInfo {
  u8 *pPayload;  /* Pointer to the start of payload */
  ...
};</code></pre>
<p>To view index data, we can use <a href="https://www.sqlite.org/sqlanalyze.html" target="_blank">sqlite3 analyzer</a>:</p>
<pre><code>sqlite3_analyzer database.sqlite
...
Page size in bytes................................ 4096      
...
*** Index IDX of table TABLE_TEST *********************************************  
Number of entries................................. 1000      
B-tree depth...................................... 2         
Total pages used.................................. 4        
..</code></pre>
<p>This tool provides only general information about index.</p>
<a href="#h2-analyzing-sqlite-source-code" id="h2-analyzing-sqlite-source-code"><h2>Analyzing SQLite Source Code</h2></a>
<p>After a few weeks of experimenting, I wrote my functions for index analysis.</p>
<p>You can view the code <a href="https://github.com/mrsuh/sqlite-index/blob/main/sqlite.patch" target="_blank">here</a>:</p>
<pre><code>char *sqlite3DebugGetMemoryPayload(Mem *mem);

char **sqlite3DebugGetCellPayloadAndRowId(BtCursor *pCur, MemPage *pPage, int cellIndex);

void sqlite3DebugBtreeIndexDump(BtCursor *pCur, int pageNumber);</code></pre>
<p>The function reads the content of selected index and outputting data to STDOUT:</p>
<pre><code>SQL query -&gt; selected index -&gt; stdout</code></pre>
<p>Here’s an example output:</p>
<pre><code>sqlite3BtreeIndexDump: page, number=3, rightChildPageNumber=99
sqlite3BtreeIndexDump: cell, number=0, leftChildPageNumber=7, payload=384, rowId=384
sqlite3BtreeIndexDump: cell, number=1, leftChildPageNumber=8, payload=742, rowId=742
...</code></pre>
<p>I packed everything into a docker if you want to test it: </p>
<pre><code>docker run -it --rm -v "$PWD":/app/data --platform linux/x86_64 mrsuh/sqlite-index bash</code></pre>
<p>You can use the script like this:</p>
<pre><code>sh bin/dump-index.sh database.sqlite "SELECT * FROM table INDEXED BY index WHERE column=1" dump.txt</code></pre>
<p>dump.txt</p>
<pre><code>sqlite3BtreeIndexDump: page, number=3, rightChildPageNumber=99
sqlite3BtreeIndexDump: cell, number=0, leftChildPageNumber=7, payload=384, rowId=384
sqlite3BtreeIndexDump: cell, number=1, leftChildPageNumber=8, payload=742, rowId=742
...
sqlite3BtreeIndexDump: page, number=99, rightChildPageNumber=-1
sqlite3BtreeIndexDump: cell, number=0, leftChildPageNumber=-1, payload=9642, rowId=9642
sqlite3BtreeIndexDump: cell, number=1, leftChildPageNumber=-1, payload=9643, rowId=9643
...
sqlite3BtreeIndexDump: page, number=7, rightChildPageNumber=-1
sqlite3BtreeIndexDump: cell, number=0, leftChildPageNumber=-1, payload=1, rowId=1
sqlite3BtreeIndexDump: cell, number=1, leftChildPageNumber=-1, payload=2, rowId=2
...</code></pre>
<p>Great!<br>
The next step was to display everything visually — an easy part of the process.</p>
<p>I found a library called <a href="https://github.com/benyasin/d3-org-tree" target="_blank">d3-org-tree</a> for visualizing index structures.<br>
Here’s how it looked in the early stages:</p>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/test-tree-d3.png"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/test-tree-d3.png" alt=""></a></p>
<p>However, there was a problem: I couldn’t adjust the spacing between Pages, so as the tree became deeper and more Pages were added at each level, the image became too large and hard to read.</p>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/test-tree-d3-wide.png"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/test-tree-d3-wide.png" alt=""></a></p>
<p>I tried adjusting it with JavaScript and CSS, but it didn’t work well.<br>
After a few tries with d3-org-tree, I decided that using text to display the structure would be simpler.</p>
<p>Example:</p>
<pre><code>------------------------------------------------------------------------------------------------------------------------
 Total Pages: 29
 Total Cells: 1000
------------------------------------------------------------------------------------------------------------------------
 Level: 1                           |============================================|
 Pages: 1                           |Page: 3   | RightChildPage: 53  | Cells: 27 │
 Cells: 29                          |============================================|
                                    |Cell: 0   | LeftChildPage: 47   | RowId: 1  │
                                    |Payload: 000000000000000000000000000000     │
                                    |--------------------------------------------│
                                    |                  * * *                     │
                                    |--------------------------------------------│
                                    |Cell: 26   | LeftChildPage: 78   | RowId: 5 │
                                    |Payload: 000000000000000000000000000000     │
                                    |============================================|
------------------------------------------------------------------------------------------------------------------------
 Level: 2      |============================================| |============================================|
 Pages: 50     |Page: 3   | RightChildPage: 53  | Cells: 27 | │Page: 3   | RightChildPage: 53  | Cells: 27 |
 Cells: 400    |============================================| |============================================|
               |Cell: 0   | LeftChildPage: 47   | RowId: 1  | │Cell: 0   | LeftChildPage: 47   | RowId: 1  |
               |Payload: 000000000000000000000000000000     | │Payload: 000000000000000000000000000000     |
               |--------------------------------------------| │--------------------------------------------|
               |                  * * *                     | │                  * * *                     |
               |--------------------------------------------| │--------------------------------------------|
               |Cell: 26   | LeftChildPage: 78   | RowId: 5 | │Cell: 26   | LeftChildPage: 78   | RowId: 5 |
               |Payload: 000000000000000000000000000000     | │Payload: 000000000000000000000000000000     |
               |============================================| |============================================|
------------------------------------------------------------------------------------------------------------------------</code></pre>
<p>Not bad, but I could go further.<br>
PHP's <a href="https://www.php.net/manual/en/intro.imagick.php" target="_blank">ImageMagick</a> extension lets us create images with more control over design and spacing than text alone. After about a dozen tries, here's the final version I came up with:</p>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/test-tree-php.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/test-tree-php.webp" alt=""></a></p>
<p>The image now includes all the needed data and is easy to read.</p>
<p>In the top-left corner, there’s general information about the Index.<br>
Each level shows the total number of Pages and Cells.<br>
Each Page shows its Page number, the link to its right child, and details about the first and last Cell.<br>
Only a few Pages are shown per level, including the first and last Pages for each level.<br>
The root Page is located at the first level.</p>
<p>Use this command to generate an image from the dump </p>
<pre><code>php bin/console app:render-index --dumpIndexPath=dump.txt --outputImagePath=image.webp</code></pre>
<p>Now it's time to experiment!</p>
<p>We can create different data for the Indexes and explore what's inside them.<br>
To start, it would be interesting to see how the Index size grows from 1 to 1,000,000 records.<br>
Before each Index image, I'll show the table's data structure, the way the Index was made, and how the table was filled with data.</p>
<a href="#h2-index-with-1-record" id="h2-index-with-1-record"><h2>Index with 1 record</h2></a>
<pre><code>CREATE TABLE table_test (column1 INT NOT NULL);
INSERT INTO table_test (column1) VALUES (1);
CREATE INDEX idx ON table_test (column1 ASC);</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-1.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-1.webp" alt=""></a></p>
<p>One level, one Page, one Cell. Simple!</p>
<a href="#h2-index-with-1000-records" id="h2-index-with-1000-records"><h2>Index with 1000 records</h2></a>
<pre><code>CREATE TABLE table_test (column1 INT NOT NULL);
INSERT INTO table_test (column1) VALUES (1),(2),(3),...,(998),(999),(1000);
CREATE INDEX idx ON table_test (column1 ASC);</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-1000.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-1000.webp" alt=""></a></p>
<a href="#h2-index-with-1.000.000-records" id="h2-index-with-1.000.000-records"><h2>Index with 1.000.000 records</h2></a>
<pre><code>CREATE TABLE table_test (column1 INT NOT NULL);
INSERT INTO table_test (column1) VALUES (1),(2),(3),...,(999998),(999999),(1000000);
CREATE INDEX idx ON table_test (column1 ASC);</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-1000000.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-1000000.webp" alt=""></a></p>
<p>Now we’ve reached the image I used earlier as an example.<br>
This Index has 3 levels, 2,930 Pages, and 1,000,000 Cells. The data was added in order, so for rowId = 1, column1 = 1.</p>
<a href="#h2-comparing-asc-and-desc-indexes" id="h2-comparing-asc-and-desc-indexes"><h2>Comparing ASC and DESC Indexes</h2></a>
<p>Now, let's add two Indexes with different sort directions.</p>
<pre><code>CREATE TABLE table_test (column1 INT NOT NULL);
INSERT INTO table_test (column1) VALUES (1),(2),(3),...,(999998),(999999),(1000000);
CREATE INDEX idx_asc ON table_test (column1 ASC);
CREATE INDEX idx_desc ON table_test (column1 DESC);</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-order-asc.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-order-asc.webp" alt=""></a></p>
<p>The ASC Index is the same as above, as ASC sorting is used by default.<br>
The table's first entry, rowId=1,000,000, column1=1,000,000, payload=1,000,000, is in the last Cell of the rightmost Page.<br>
The table's last entry, rowId=1, column1=1, payload=1, is in the first Cell of the leftmost Page.</p>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-order-desc.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-order-desc.webp" alt=""></a></p>
<p>The DESC Index is reversed.<br>
The table's first entry, rowId=1, column1=1, payload=1, is in the last Cell of the rightmost Page.<br>
The table's last entry, rowId=1,000,000, column1=1,000,000, payload=1,000,000, is in the first Cell of the leftmost Page.</p>
<a href="#h2-index-with-expression-based-data" id="h2-index-with-expression-based-data"><h2>Index with expression-based data</h2></a>
<pre><code>CREATE TABLE table_test (column1 TEXT NOT NULL);
INSERT INTO table_test (column1) VALUES ('{"timestamp":1}'),('{"timestamp":2}'),('{"timestamp":3}'),...,('{"timestamp":999998}'),('{"timestamp":999999}'),('{"timestamp":1000000}');
CREATE INDEX idx ON table_test (strftime('%Y-%m-%d %H:%M:%S', json_extract(column1, '$.timestamp'), 'unixepoch') ASC);</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-expression.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-expression.webp" alt=""></a></p>
<p>The Index now stores a string generated by the expression.<br>
You can use more complex expressions, and the Index will save the only result.</p>
<a href="#h2-unique-index-with-null-values" id="h2-unique-index-with-null-values"><h2>Unique Index with NULL values</h2></a>
<pre><code>CREATE TABLE table_test (column1 INT)
INSERT INTO table_test (column1) VALUES (1),(NULL),(NULL),...,(NULL),(NULL),(1000000);
CREATE UNIQUE INDEX idx ON table_test (column1 ASC);</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-unique.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-unique.webp" alt=""></a></p>
<p>SQLite supports unique Indexes with NULL values.<br>
This index looks like we are storing only non-NULL values.</p>
<a href="#h2-filtering-null-values-with-partial-indexes" id="h2-filtering-null-values-with-partial-indexes"><h2>Filtering NULL Values with Partial Indexes</h2></a>
<pre><code>CREATE TABLE table_test (column1 INT)
INSERT INTO table_test (column1) VALUES (1),(NULL),(NULL),...,(NULL),(NULL),(1000000);
CREATE INDEX idx ON table_test (column1 ASC) WHERE column1 IS NOT NULL;</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-partial.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-partial.webp" alt=""></a></p>
<p>The Index now contains just one Page, leading to faster searches than the previous example.</p>
<a href="#h2-multi-column-index" id="h2-multi-column-index"><h2>Multi-Column Index</h2></a>
<pre><code>CREATE TABLE table_test (column1 INT NOT NULL, column2 INT NOT NULL);
INSERT INTO table_test (column1, column2) VALUES (1,1),(2,2),(3,3),...,(999998,999998),(999999,999999),(1000000,1000000);
CREATE INDEX idx ON table_test (column1 ASC, column2 ASC);</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-complex.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-complex.webp" alt=""></a></p>
<p>As we can see, the data for all fields in a cell are stored one after another.<br>
The fields are separated visually with a colon <code>:</code>.</p>
<a href="#h2-comparing-indexes-created-before-and-after-data-population" id="h2-comparing-indexes-created-before-and-after-data-population"><h2>Comparing Indexes Created Before and After Data Population</h2></a>
<pre><code>CREATE TABLE table_test (column1 INT NOT NULL);
CREATE INDEX idx_before ON table_test (column1 ASC);
INSERT INTO table_test (column1) VALUES (1),(2),(3),...,(999998),(999999),(1000000);
CREATE INDEX idx_after ON table_test (column1 ASC);</code></pre>
<a href="#h3-before" id="h3-before"><h3>Before</h3></a>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-time-before.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-time-before.webp" alt=""></a></p>
<a href="#h3-after" id="h3-after"><h3>After</h3></a>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-time-after.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-time-after.webp" alt=""></a></p>
<p>The tree must rebalance itself when new data is added. Creating an Index on existing data should be much more efficient.<br>
Both Indexes look similar, but the second Index, with fewer Pages, should be faster.</p>
<pre><code>+--------+-------------+-------------+
|        | Total Pages | Total Cells |
+--------+-------------+-------------+
| Before | 3342        | 1000000     |
| After  | 2930        | 1000000     |
+--------+-------------+-------------+</code></pre>
<a href="#h2-vacuum-and-reindex" id="h2-vacuum-and-reindex"><h2>VACUUM and REINDEX</h2></a>
<p>To achieve similar optimization, we can rebuild an existing Index with these commands:</p>
<p><a href="https://www.sqlite.org/lang_vacuum.html" target="_blank">VACUUM</a> recreates Indexes and tables with data:</p>
<pre><code>CREATE TABLE table_test (column1 INT NOT NULL);
CREATE INDEX idx ON table_test (column1 ASC);
INSERT INTO table_test (column1) VALUES (1),(2),(3),...,(999998),(999999),(1000000);
VACUUM;</code></pre>
<pre><code>+--------+-------------+-------------+
|        | Total Pages | Total Cells |
+--------+-------------+-------------+
| Before | 3342        | 1000000     |
| After  | 2930        | 1000000     |
+--------+-------------+-------------+</code></pre>
<p><a href="https://www.sqlite.org/lang_reindex.html" target="_blank">REINDEX</a> -  recreates Indexes only:</p>
<pre><code>CREATE TABLE table_test (column1 INT NOT NULL);
CREATE INDEX idx ON table_test (column1 ASC);
INSERT INTO table_test (column1) VALUES (1),(2),(3),...,(999998),(999999),(1000000);
REINDEX idx;</code></pre>
<pre><code>+--------+-------------+-------------+
|        | Total Pages | Total Cells |
+--------+-------------+-------------+
| Before | 3342        | 1000000     |
| After  | 2930        | 1000000     |
+--------+-------------+-------------+</code></pre>
<p>After running VACUUM/REINDEX, the number of Pages in the Index decreased a lot. </p>
<a href="#h2-text-data-in-indexes" id="h2-text-data-in-indexes"><h2>Text Data in Indexes</h2></a>
<p>Let's look at how text is stored. Short strings are saved directly in the Index Cells, but longer text must be stored separately.</p>
<pre><code>CREATE TABLE table_test (column1 text NOT NULL);
INSERT INTO table_test (column1) VALUES ('text-1'),('text-2'),('text-3'),...,('text-999998'),('text-999999'),('text-1000000');
CREATE INDEX idx ON table_test (column1 ASC);</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-text.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-text.webp" alt=""></a></p>
<p>You can easily see the actual string stored directly in the Index.</p>
<a href="#h2-float-point-data-in-indexes" id="h2-float-point-data-in-indexes"><h2>Float-point Data in Indexes</h2></a>
<pre><code>CREATE TABLE table_test (column1 REAL NOT NULL);
INSERT INTO table_test (column1) VALUES ('1.14'),('2.14'),('3.14'),...,('999998.14'),('999999.14'),('1000000.14');
CREATE INDEX idx ON table_test (column1 ASC);</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-real.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-real.webp" alt=""></a></p>
<a href="#h2-combining-integer-and-text-in-a-single-index:" id="h2-combining-integer-and-text-in-a-single-index:"><h2>Combining integer and text in a single Index:</h2></a>
<pre><code>CREATE TABLE table_test (column1 INT NOT NULL, column2 TEXT NOT NULL);
INSERT INTO table_test (column1, column2) VALUES (1,'text-1'),(2,'text-2'),(3,'text-3'),...,(999998,'text-999998'),(999999,'text-999999'),(1000000,'text-1000000');
CREATE INDEX idx ON table_test (column1 ASC, column2 ASC);</code></pre>
<p><a href="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-integer-text.webp"><img src="https://mrsuh.com/articles/2024/sqlite-index-visualization-structure/images/index-integer-text.webp" alt=""></a></p>
<p>The integer and string are stored together in the Cell, just as we specified when creating the Index.</p>
<a href="#h2-conclusion" id="h2-conclusion"><h2>Conclusion</h2></a>
<p>Based on the work done, we saw how Indexes in SQLite are structured.<br>
We looked at how record data is stored in memory and how the B-Tree organizes and accesses this data.<br>
The visualization helped analyze and compare different Indexes.</p>
<p>To reproduce all of these examples, you can run the following:</p>
<pre><code>docker run -it --rm -v "$PWD":/app/data --platform linux/x86_64 mrsuh/sqlite-index bash
sh bin/test-index.sh</code></pre>
<p>Code and examples are available <a href="https://github.com/mrsuh/sqlite-index" target="_blank">here</a></p>
<p>Next, I'll focus on visualizing Index-based searches and explore some interesting SQL queries.</p>
</div></div>]]></description>
        </item>
    </channel>
</rss>