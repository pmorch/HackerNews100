<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 13 Aug 2025 15:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[FFmpeg 8.0 adds Whisper support (447 pts)]]></title>
            <link>https://code.ffmpeg.org/FFmpeg/FFmpeg/commit/13ce36fef98a3f4e6d8360c24d6b8434cbb8869b</link>
            <guid>44886647</guid>
            <pubDate>Wed, 13 Aug 2025 10:19:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://code.ffmpeg.org/FFmpeg/FFmpeg/commit/13ce36fef98a3f4e6d8360c24d6b8434cbb8869b">https://code.ffmpeg.org/FFmpeg/FFmpeg/commit/13ce36fef98a3f4e6d8360c24d6b8434cbb8869b</a>, See on <a href="https://news.ycombinator.com/item?id=44886647">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><tr data-line-type="tag">
			
				
					<td colspan="2">
						
					</td>
				
			
			<td></td>
			<td><span data-type-marker=""></span></td>
			
				<td><code>@ -0,0 +1,463 @@</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="1"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR1"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>/*
</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="2"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR2"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>Copyright</span> <span>(</span><span>c</span><span>)</span> <span>2025</span> <span>Vittorio</span> <span>Palmisano</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="3"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR3"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="4"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR4"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>This</span> <span>file</span> <span>is</span> <span>part</span> <span>of</span> <span>FFmpeg</span><span>.</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="5"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR5"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="6"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR6"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>FFmpeg</span> <span>is</span> <span>free</span> <span>software</span><span>;</span> <span>you</span> <span>can</span> <span>redistribute</span> <span>it</span> <span>and</span><span>/</span><span>or</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="7"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR7"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>modify</span> <span>it</span> <span>under</span> <span>the</span> <span>terms</span> <span>of</span> <span>the</span> <span>GNU</span> <span>Lesser</span> <span>General</span> <span>Public</span> <span>License</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="8"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR8"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>as</span> <span>published</span> <span>by</span> <span>the</span> <span>Free</span> <span>Software</span> <span>Foundation</span><span>;</span> <span>either</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="9"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR9"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>version</span> <span>2.1</span> <span>of</span> <span>the</span> <span>License</span><span>,</span> <span>or</span> <span>(</span><span>at</span> <span>your</span> <span>option</span><span>)</span> <span>any</span> <span>later</span> <span>version</span><span>.</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="10"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR10"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="11"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR11"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>FFmpeg</span> <span>is</span> <span>distributed</span> <span>in</span> <span>the</span> <span>hope</span> <span>that</span> <span>it</span> <span>will</span> <span>be</span> <span>useful</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="12"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR12"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>but</span> <span>WITHOUT</span> <span>ANY</span> <span>WARRANTY</span><span>;</span> <span>without</span> <span>even</span> <span>the</span> <span>implied</span> <span>warranty</span> <span>of</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="13"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR13"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>MERCHANTABILITY</span> <span>or</span> <span>FITNESS</span> <span>FOR</span> <span>A</span> <span>PARTICULAR</span> <span>PURPOSE</span><span>.</span>  <span>See</span> <span>the</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="14"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR14"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>GNU</span> <span>Lesser</span> <span>General</span> <span>Public</span> <span>License</span> <span>for</span> <span>more</span> <span>details</span><span>.</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="15"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR15"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="16"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR16"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>You</span> <span>should</span> <span>have</span> <span>received</span> <span>a</span> <span>copy</span> <span>of</span> <span>the</span> <span>GNU</span> <span>Lesser</span> <span>General</span> <span>Public</span> <span>License</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="17"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR17"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>along</span> <span>with</span> <span>FFmpeg</span><span>;</span> <span>if</span> <span>not</span><span>,</span> <span>write</span> <span>to</span> <span>the</span> <span>Free</span> <span>Software</span> <span>Foundation</span><span>,</span> <span>Inc</span><span>.</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="18"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR18"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*</span> <span>51</span> <span>Franklin</span> <span>Street</span><span>,</span> <span>Fifth</span> <span>Floor</span><span>,</span> <span>Boston</span><span>,</span> <span>MA</span> <span>02110</span><span>-</span><span>1301</span> <span>USA</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="19"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR19"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code> <span>*/</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="20"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR20"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="21"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR21"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>&lt;stdio.h&gt;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="22"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR22"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>&lt;stdint.h&gt;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="23"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR23"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>&lt;stdlib.h&gt;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="24"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR24"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="25"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR25"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>&lt;whisper.h&gt;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="26"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR26"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="27"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR27"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavutil/avutil.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="28"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR28"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavutil/opt.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="29"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR29"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavutil/channel_layout.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="30"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR30"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavutil/samplefmt.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="31"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR31"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavfilter/avfilter.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="32"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR32"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavfilter/audio.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="33"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR33"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavutil/mem.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="34"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR34"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavutil/avstring.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="35"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR35"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavutil/internal.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="36"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR36"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavformat/avio.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="37"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR37"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"libavutil/thread.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="38"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR38"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="39"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR39"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>include</span> <span>"formats.h"</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="40"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR40"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="41"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR41"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>typedef</span> <span>struct</span> <span>WhisperContext</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="42"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR42"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>const</span> <span>AVClass</span> <span>*</span><span>class</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="43"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR43"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>char</span> <span>*</span><span>model_path</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="44"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR44"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>char</span> <span>*</span><span>language</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="45"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR45"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>bool</span> <span>use_gpu</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="46"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR46"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>gpu_device</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="47"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR47"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>char</span> <span>*</span><span>vad_model_path</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="48"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR48"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>float</span> <span>vad_threshold</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="49"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR49"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int64_t</span> <span>vad_min_speech_duration</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="50"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR50"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int64_t</span> <span>vad_min_silence_duration</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="51"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR51"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="52"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR52"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int64_t</span> <span>queue</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="53"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR53"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>char</span> <span>*</span><span>destination</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="54"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR54"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>char</span> <span>*</span><span>format</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="55"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR55"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="56"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR56"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>struct</span> <span>whisper_context</span> <span>*</span><span>ctx_wsp</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="57"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR57"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>struct</span> <span>whisper_vad_context</span> <span>*</span><span>ctx_vad</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="58"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR58"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>struct</span> <span>whisper_vad_params</span> <span>vad_params</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="59"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR59"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="60"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR60"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>float</span> <span>*</span><span>audio_buffer</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="61"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR61"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>audio_buffer_queue_size</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="62"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR62"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>audio_buffer_fill_size</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="63"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR63"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>audio_buffer_vad_size</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="64"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR64"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int64_t</span> <span>audio_buffer_start_ms</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="65"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR65"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="66"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR66"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>eof</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="67"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR67"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int64_t</span> <span>next_pts</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="68"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR68"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="69"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR69"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>AVIOContext</span> <span>*</span><span>avio_context</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="70"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR70"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>index</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="71"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR71"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span> <span>WhisperContext</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="72"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR72"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="73"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR73"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>static</span> <span>void</span> <span>cb_log</span><span>(</span><span>enum</span> <span>ggml_log_level</span> <span>level</span><span>,</span> <span>const</span> <span>char</span> <span>*</span><span>text</span><span>,</span> <span>void</span> <span>*</span><span>user_data</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="74"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR74"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="75"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR75"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>AVFilterContext</span> <span>*</span><span>ctx</span> <span>=</span> <span>user_data</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="76"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR76"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>av_log_level</span> <span>=</span> <span>AV_LOG_DEBUG</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="77"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR77"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>switch</span> <span>(</span><span>level</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="78"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR78"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>case</span> <span>GGML_LOG_LEVEL_ERROR</span><span>:</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="79"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR79"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_log_level</span> <span>=</span> <span>AV_LOG_ERROR</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="80"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR80"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>break</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="81"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR81"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>case</span> <span>GGML_LOG_LEVEL_WARN</span><span>:</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="82"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR82"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_log_level</span> <span>=</span> <span>AV_LOG_WARNING</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="83"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR83"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>break</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="84"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR84"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="85"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR85"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>av_log_level</span><span>,</span> <span></span><span>"</span><span>%s</span><span>"</span><span>,</span> <span>text</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="86"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR86"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="87"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR87"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="88"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR88"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>static</span> <span>int</span> <span>init</span><span>(</span><span>AVFilterContext</span> <span>*</span><span>ctx</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="89"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR89"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="90"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR90"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>WhisperContext</span> <span>*</span><span>wctx</span> <span>=</span> <span>ctx</span><span>-</span><span>&gt;</span><span>priv</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="91"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR91"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="92"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR92"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>static</span> <span>AVOnce</span> <span>init_static_once</span> <span>=</span> <span>AV_ONCE_INIT</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="93"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR93"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>ff_thread_once</span><span>(</span><span>&amp;</span><span>init_static_once</span><span>,</span> <span>ggml_backend_load_all</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="94"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR94"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="95"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR95"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>whisper_log_set</span><span>(</span><span>cb_log</span><span>,</span> <span>ctx</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="96"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR96"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="97"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR97"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>// Init whisper context
</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="98"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR98"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>!</span><span>wctx</span><span>-</span><span>&gt;</span><span>model_path</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="99"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR99"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>AV_LOG_ERROR</span><span>,</span> <span></span><span>"</span><span>No whisper model path specified. Use the 'model' option.</span><span>\n</span><span>"</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="100"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR100"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>return</span> <span>AVERROR</span><span>(</span><span>EINVAL</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="101"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR101"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="102"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR102"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="103"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR103"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>struct</span> <span>whisper_context_params</span> <span>params</span> <span>=</span> <span>whisper_context_default_params</span><span>(</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="104"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR104"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>params</span><span>.</span><span>use_gpu</span> <span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>use_gpu</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="105"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR105"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>params</span><span>.</span><span>gpu_device</span> <span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>gpu_device</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="106"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR106"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="107"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR107"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span> <span>=</span> <span>whisper_init_from_file_with_params</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>model_path</span><span>,</span> <span>params</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="108"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR108"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span> <span>=</span><span>=</span> <span>NULL</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="109"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR109"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>AV_LOG_ERROR</span><span>,</span> <span></span><span>"</span><span>Failed to initialize whisper context from model: %s</span><span>\n</span><span>"</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>model_path</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="110"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR110"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>return</span> <span>AVERROR</span><span>(</span><span>EIO</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="111"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR111"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="112"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR112"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="113"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR113"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>// Init buffer
</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="114"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR114"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_queue_size</span> <span>=</span> <span>av_rescale</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>queue</span><span>,</span> <span>WHISPER_SAMPLE_RATE</span><span>,</span> <span>AV_TIME_BASE</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="115"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR115"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span> <span>=</span> <span>av_malloc_array</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_queue_size</span><span>,</span> <span>sizeof</span><span>(</span><span>*</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span><span>)</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="116"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR116"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>!</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="117"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR117"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>return</span> <span>AVERROR</span><span>(</span><span>ENOMEM</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="118"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR118"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="119"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR119"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>// Init VAD model context
</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="120"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR120"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>vad_model_path</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="121"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR121"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>struct</span> <span>whisper_vad_context_params</span> <span>ctx_params</span> <span>=</span> <span>whisper_vad_default_context_params</span><span>(</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="122"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR122"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>ctx_params</span><span>.</span><span>n_threads</span> <span>=</span> <span>ff_filter_get_nb_threads</span><span>(</span><span>ctx</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="123"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR123"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>// ctx_params.use_gpu = wctx-&gt;use_gpu; TODO (see: whisper_vad_init_context)
</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="124"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR124"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>ctx_params</span><span>.</span><span>gpu_device</span> <span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>gpu_device</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="125"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR125"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>ctx_vad</span> <span>=</span> <span>whisper_vad_init_from_file_with_params</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>vad_model_path</span><span>,</span> <span>ctx_params</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="126"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR126"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="127"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR127"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>vad_params</span> <span>=</span> <span>whisper_vad_default_params</span><span>(</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="128"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR128"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>vad_params</span><span>.</span><span>threshold</span> <span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>vad_threshold</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="129"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR129"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>vad_params</span><span>.</span><span>min_speech_duration_ms</span> <span>=</span> <span>av_rescale</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>vad_min_speech_duration</span><span>,</span> <span>1000</span><span>,</span> <span>AV_TIME_BASE</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="130"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR130"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>vad_params</span><span>.</span><span>min_silence_duration_ms</span> <span>=</span> <span>av_rescale</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>vad_min_silence_duration</span><span>,</span> <span>1000</span><span>,</span> <span>AV_TIME_BASE</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="131"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR131"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>vad_params</span><span>.</span><span>max_speech_duration_s</span> <span>=</span> <span>av_rescale</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>queue</span><span>,</span> <span>1</span><span>,</span> <span>AV_TIME_BASE</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="132"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR132"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>vad_params</span><span>.</span><span>speech_pad_ms</span> <span>=</span> <span>0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="133"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR133"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>vad_params</span><span>.</span><span>samples_overlap</span> <span>=</span> <span>0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="134"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR134"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="135"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR135"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="136"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR136"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>wctx</span><span>-</span><span>&gt;</span><span>next_pts</span> <span>=</span> <span>AV_NOPTS_VALUE</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="137"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR137"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="138"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR138"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>destination</span> <span>&amp;</span><span>&amp;</span> <span>strcmp</span><span>(</span><span></span><span>"</span><span>"</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>destination</span><span>)</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="139"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR139"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>const</span> <span>char</span> <span>*</span><span>dst</span> <span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>destination</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="140"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR140"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>if</span> <span>(</span><span>!</span><span>strcmp</span><span>(</span><span></span><span>"</span><span>-</span><span>"</span><span>,</span> <span>dst</span><span>)</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="141"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR141"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>dst</span> <span>=</span> <span></span><span>"</span><span>pipe:1</span><span>"</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="142"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR142"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>int</span> <span>ret</span> <span>=</span> <span>avio_open</span><span>(</span><span>&amp;</span><span>wctx</span><span>-</span><span>&gt;</span><span>avio_context</span><span>,</span> <span>dst</span><span>,</span> <span>AVIO_FLAG_WRITE</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="143"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR143"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="144"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR144"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>if</span> <span>(</span><span>ret</span> <span>&lt;</span> <span>0</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="145"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR145"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>AV_LOG_ERROR</span><span>,</span> <span></span><span>"</span><span>Could not open %s: %s</span><span>\n</span><span>"</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>destination</span><span>,</span> <span>av_err2str</span><span>(</span><span>ret</span><span>)</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="146"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR146"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>return</span> <span>ret</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="147"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR147"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="148"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR148"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="149"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR149"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>avio_context</span><span>-</span><span>&gt;</span><span>direct</span> <span>=</span> <span>AVIO_FLAG_DIRECT</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="150"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR150"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="151"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR151"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="152"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR152"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>AV_LOG_INFO</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="153"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR153"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>           <span></span><span>"</span><span>Whisper filter initialized: model: %s lang: %s queue: %ld ms</span><span>\n</span><span>"</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="154"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR154"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>           <span>wctx</span><span>-</span><span>&gt;</span><span>model_path</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>language</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>queue</span> <span>/</span> <span>1000</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="155"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR155"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="156"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR156"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>return</span> <span>0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="157"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR157"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="158"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR158"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="159"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR159"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>static</span> <span>void</span> <span>uninit</span><span>(</span><span>AVFilterContext</span> <span>*</span><span>ctx</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="160"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR160"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="161"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR161"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>WhisperContext</span> <span>*</span><span>wctx</span> <span>=</span> <span>ctx</span><span>-</span><span>&gt;</span><span>priv</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="162"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR162"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="163"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR163"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>&gt;</span> <span>0</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="164"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR164"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>AV_LOG_WARNING</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="165"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR165"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>               <span></span><span>"</span><span>Remaining audio buffer %d samples (%d seconds) after stopping</span><span>\n</span><span>"</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="166"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR166"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>               <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>/</span> <span>WHISPER_SAMPLE_RATE</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="167"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR167"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="168"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR168"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="169"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR169"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_vad</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="170"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR170"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>whisper_vad_free</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_vad</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="171"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR171"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>ctx_vad</span> <span>=</span> <span>NULL</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="172"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR172"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="173"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR173"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="174"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR174"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="175"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR175"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>whisper_free</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="176"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR176"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span> <span>=</span> <span>NULL</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="177"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR177"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="178"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR178"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="179"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR179"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>av_freep</span><span>(</span><span>&amp;</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="180"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR180"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="181"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR181"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>avio_context</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="182"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR182"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>avio_closep</span><span>(</span><span>&amp;</span><span>wctx</span><span>-</span><span>&gt;</span><span>avio_context</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="183"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR183"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="184"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR184"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="185"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR185"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>static</span> <span>void</span> <span>run_transcription</span><span>(</span><span>AVFilterContext</span> <span>*</span><span>ctx</span><span>,</span> <span>AVFrame</span> <span>*</span><span>frame</span><span>,</span> <span>int</span> <span>samples</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="186"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR186"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="187"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR187"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>WhisperContext</span> <span>*</span><span>wctx</span> <span>=</span> <span>ctx</span><span>-</span><span>&gt;</span><span>priv</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="188"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR188"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>samples</span> <span>=</span> <span>FFMAX</span><span>(</span><span>0</span><span>,</span> <span>FFMIN</span><span>(</span><span>samples</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>)</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="189"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR189"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="190"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR190"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>!</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span> <span>|</span><span>|</span> <span>samples</span> <span>=</span><span>=</span> <span>0</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="191"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR191"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>return</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="192"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR192"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="193"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR193"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>const</span> <span>int64_t</span> <span>timestamp_ms</span> <span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_start_ms</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="194"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR194"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>const</span> <span>float</span> <span>duration</span> <span>=</span> <span>(</span><span>float</span><span>)</span> <span>samples</span> <span>/</span> <span>WHISPER_SAMPLE_RATE</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="195"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR195"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="196"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR196"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>AV_LOG_INFO</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="197"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR197"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>           <span></span><span>"</span><span>run transcription at %ld ms, %d/%d samples (%.2f seconds)...</span><span>\n</span><span>"</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="198"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR198"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>           <span>timestamp_ms</span><span>,</span> <span>samples</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>,</span> <span>duration</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="199"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR199"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="200"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR200"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>struct</span> <span>whisper_full_params</span> <span>params</span> <span>=</span> <span>whisper_full_default_params</span><span>(</span><span>WHISPER_SAMPLING_GREEDY</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="201"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR201"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>params</span><span>.</span><span>language</span> <span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>language</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="202"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR202"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>params</span><span>.</span><span>n_threads</span> <span>=</span> <span>ff_filter_get_nb_threads</span><span>(</span><span>ctx</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="203"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR203"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>params</span><span>.</span><span>print_special</span> <span>=</span> <span>0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="204"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR204"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>params</span><span>.</span><span>print_progress</span> <span>=</span> <span>0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="205"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR205"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>params</span><span>.</span><span>print_realtime</span> <span>=</span> <span>0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="206"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR206"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>params</span><span>.</span><span>print_timestamps</span> <span>=</span> <span>0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="207"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR207"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="208"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR208"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>whisper_full</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span><span>,</span> <span>params</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span><span>,</span> <span>samples</span><span>)</span> <span>!</span><span>=</span> <span>0</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="209"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR209"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>AV_LOG_ERROR</span><span>,</span> <span></span><span>"</span><span>Failed to process audio with whisper.cpp</span><span>\n</span><span>"</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="210"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR210"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>return</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="211"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR211"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="212"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR212"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="213"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR213"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>const</span> <span>int</span> <span>n_segments</span> <span>=</span> <span>whisper_full_n_segments</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="214"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR214"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>char</span> <span>*</span><span>segments_text</span> <span>=</span> <span>NULL</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="215"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR215"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="216"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR216"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>for</span> <span>(</span><span>int</span> <span>i</span> <span>=</span> <span>0</span><span>;</span> <span>i</span> <span>&lt;</span> <span>n_segments</span><span>;</span> <span>+</span><span>+</span><span>i</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="217"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR217"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>const</span> <span>char</span> <span>*</span><span>text</span> <span>=</span> <span>whisper_full_get_segment_text</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span><span>,</span> <span>i</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="218"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR218"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>char</span> <span>*</span><span>text_cleaned</span> <span>=</span> <span>av_strireplace</span><span>(</span><span>text</span> <span>+</span> <span>1</span><span>,</span> <span></span><span>"</span><span>[BLANK_AUDIO]</span><span>"</span><span>,</span> <span></span><span>"</span><span>"</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="219"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR219"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="220"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR220"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>if</span> <span>(</span><span>av_strnlen</span><span>(</span><span>text_cleaned</span><span>,</span> <span>1</span><span>)</span> <span>=</span><span>=</span> <span>0</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="221"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR221"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>av_freep</span><span>(</span><span>&amp;</span><span>text_cleaned</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="222"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR222"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>continue</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="223"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR223"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="224"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR224"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="225"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR225"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>const</span> <span>bool</span> <span>turn</span> <span>=</span> <span>whisper_full_get_segment_speaker_turn_next</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span><span>,</span> <span>i</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="226"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR226"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>const</span> <span>int64_t</span> <span>t0_ms</span> <span>=</span> <span>whisper_full_get_segment_t0</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span><span>,</span> <span>i</span><span>)</span> <span>*</span> <span>10</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="227"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR227"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>const</span> <span>int64_t</span> <span>t1_ms</span> <span>=</span> <span>whisper_full_get_segment_t1</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_wsp</span><span>,</span> <span>i</span><span>)</span> <span>*</span> <span>10</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="228"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR228"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="229"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR229"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>AV_LOG_DEBUG</span><span>,</span> <span></span><span>"</span><span>  [%ld-%ld%s]: </span><span>\"</span><span>%s</span><span>\"</span><span>\n</span><span>"</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="230"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR230"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>               <span>timestamp_ms</span> <span>+</span> <span>t0_ms</span><span>,</span> <span>timestamp_ms</span> <span>+</span> <span>t1_ms</span><span>,</span> <span>turn</span> <span>?</span> <span></span><span>"</span><span> (turn)</span><span>"</span> <span>:</span> <span></span><span>"</span><span>"</span><span>,</span> <span>text_cleaned</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="231"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR231"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="232"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR232"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>if</span> <span>(</span><span>segments_text</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="233"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR233"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>char</span> <span>*</span><span>new_text</span> <span>=</span> <span>av_asprintf</span><span>(</span><span></span><span>"</span><span>%s%s</span><span>"</span><span>,</span> <span>segments_text</span><span>,</span> <span>text_cleaned</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="234"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR234"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>av_freep</span><span>(</span><span>&amp;</span><span>segments_text</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="235"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR235"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>segments_text</span> <span>=</span> <span>new_text</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="236"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR236"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>}</span> <span>else</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="237"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR237"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>segments_text</span> <span>=</span> <span>av_strdup</span><span>(</span><span>text_cleaned</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="238"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR238"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="239"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR239"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>avio_context</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="240"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR240"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>const</span> <span>int64_t</span> <span>start_t</span> <span>=</span> <span>timestamp_ms</span> <span>+</span> <span>t0_ms</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="241"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR241"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>const</span> <span>int64_t</span> <span>end_t</span> <span>=</span> <span>timestamp_ms</span> <span>+</span> <span>t1_ms</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="242"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR242"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>char</span> <span>*</span><span>buf</span> <span>=</span> <span>NULL</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="243"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR243"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="244"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR244"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>if</span> <span>(</span><span>!</span><span>av_strcasecmp</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>format</span><span>,</span> <span></span><span>"</span><span>srt</span><span>"</span><span>)</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="245"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR245"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                <span>buf</span> <span>=</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="246"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR246"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                    <span>av_asprintf</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="247"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR247"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                    <span>(</span><span></span><span>"</span><span>%d</span><span>\n</span><span>%02ld:%02ld:%02ld.%03ld --&gt; %02ld:%02ld:%02ld.%03ld</span><span>\n</span><span>%s</span><span>\n</span><span>\n</span><span>"</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="248"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR248"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                     <span>wctx</span><span>-</span><span>&gt;</span><span>index</span><span>,</span> <span>start_t</span> <span>/</span> <span>3600000</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="249"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR249"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                     <span>(</span><span>start_t</span> <span>/</span> <span>60000</span><span>)</span> <span>%</span> <span>60</span><span>,</span> <span>(</span><span>start_t</span> <span>/</span> <span>1000</span><span>)</span> <span>%</span> <span>60</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="250"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR250"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                     <span>start_t</span> <span>%</span> <span>1000</span><span>,</span> <span>end_t</span> <span>/</span> <span>3600000</span><span>,</span> <span>(</span><span>end_t</span> <span>/</span> <span>60000</span><span>)</span> <span>%</span> <span>60</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="251"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR251"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                     <span>(</span><span>end_t</span> <span>/</span> <span>1000</span><span>)</span> <span>%</span> <span>60</span><span>,</span> <span>end_t</span> <span>%</span> <span>1000</span><span>,</span> <span>text_cleaned</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="252"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR252"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>}</span> <span>else</span> <span>if</span> <span>(</span><span>!</span><span>av_strcasecmp</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>format</span><span>,</span> <span></span><span>"</span><span>json</span><span>"</span><span>)</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="253"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR253"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                <span>buf</span> <span>=</span> <span>av_asprintf</span><span>(</span><span></span><span>"</span><span>{</span><span>\"</span><span>start</span><span>\"</span><span>:%ld,</span><span>\"</span><span>end</span><span>\"</span><span>:%ld,</span><span>\"</span><span>text</span><span>\"</span><span>:</span><span>\"</span><span>%s</span><span>\"</span><span>}</span><span>\n</span><span>"</span><span>,</span> <span>start_t</span><span>,</span> <span>end_t</span><span>,</span> <span>text_cleaned</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="254"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR254"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>}</span> <span>else</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="255"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR255"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                <span>buf</span> <span>=</span> <span>av_strdup</span><span>(</span><span>text_cleaned</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="256"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR256"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="257"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR257"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>if</span> <span>(</span><span>buf</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="258"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR258"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                <span>avio_write</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>avio_context</span><span>,</span> <span>buf</span><span>,</span> <span>strlen</span><span>(</span><span>buf</span><span>)</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="259"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR259"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                <span>av_freep</span><span>(</span><span>&amp;</span><span>buf</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="260"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR260"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="261"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR261"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="262"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR262"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="263"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR263"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_freep</span><span>(</span><span>&amp;</span><span>text_cleaned</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="264"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR264"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="265"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR265"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="266"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR266"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>wctx</span><span>-</span><span>&gt;</span><span>index</span><span>+</span><span>+</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="267"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR267"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="268"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR268"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>AVDictionary</span> <span>*</span><span>*</span><span>metadata</span> <span>=</span> <span>&amp;</span><span>frame</span><span>-</span><span>&gt;</span><span>metadata</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="269"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR269"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>metadata</span> <span>&amp;</span><span>&amp;</span> <span>segments_text</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="270"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR270"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_dict_set</span><span>(</span><span>metadata</span><span>,</span> <span></span><span>"</span><span>lavfi.whisper.text</span><span>"</span><span>,</span> <span>segments_text</span><span>,</span> <span>0</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="271"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR271"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>char</span> <span>*</span><span>duration_text</span> <span>=</span> <span>av_asprintf</span><span>(</span><span></span><span>"</span><span>%f</span><span>"</span><span>,</span> <span>duration</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="272"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR272"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_dict_set</span><span>(</span><span>metadata</span><span>,</span> <span></span><span>"</span><span>lavfi.whisper.duration</span><span>"</span><span>,</span> <span>duration_text</span><span>,</span> <span>AV_DICT_DONT_STRDUP_VAL</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="273"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR273"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="274"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR274"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>av_freep</span><span>(</span><span>&amp;</span><span>segments_text</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="275"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR275"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="276"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR276"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>&gt;</span> <span>samples</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="277"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR277"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>memcpy</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span> <span>+</span> <span>samples</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="278"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR278"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>               <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>-</span> <span>samples</span><span>)</span> <span>*</span> <span>sizeof</span><span>(</span><span>*</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span><span>)</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="279"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR279"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_start_ms</span> <span>+</span><span>=</span> <span>duration</span> <span>*</span> <span>1000</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="280"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR280"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="281"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR281"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>-</span><span>=</span> <span>samples</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="282"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR282"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_vad_size</span> <span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="283"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR283"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="284"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR284"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="285"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR285"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>static</span> <span>int</span> <span>filter_frame</span><span>(</span><span>AVFilterLink</span> <span>*</span><span>inlink</span><span>,</span> <span>AVFrame</span> <span>*</span><span>frame</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="286"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR286"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="287"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR287"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>AVFilterContext</span> <span>*</span><span>ctx</span> <span>=</span> <span>inlink</span><span>-</span><span>&gt;</span><span>dst</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="288"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR288"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>WhisperContext</span> <span>*</span><span>wctx</span> <span>=</span> <span>ctx</span><span>-</span><span>&gt;</span><span>priv</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="289"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR289"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>AVFilterLink</span> <span>*</span><span>outlink</span> <span>=</span> <span>ctx</span><span>-</span><span>&gt;</span><span>outputs</span><span>[</span><span>0</span><span>]</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="290"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR290"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="291"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR291"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>const</span> <span>int</span> <span>samples</span> <span>=</span> <span>frame</span><span>-</span><span>&gt;</span><span>nb_samples</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="292"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR292"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>const</span> <span>float</span> <span>*</span><span>input_data</span> <span>=</span> <span>(</span><span>const</span> <span>float</span> <span>*</span><span>)</span> <span>frame</span><span>-</span><span>&gt;</span><span>data</span><span>[</span><span>0</span><span>]</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="293"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR293"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="294"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR294"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>+</span> <span>samples</span> <span>&gt;</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_queue_size</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="295"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR295"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>run_transcription</span><span>(</span><span>ctx</span><span>,</span> <span>frame</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="296"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR296"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="297"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR297"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="298"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR298"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>!</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="299"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR299"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_start_ms</span> <span>=</span> <span>av_rescale_q</span><span>(</span><span>frame</span><span>-</span><span>&gt;</span><span>pts</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="300"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR300"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                                                   <span>(</span><span>AVRational</span><span>)</span> <span>{</span><span>1000</span><span>,</span> <span>1</span><span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="301"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR301"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                                                   <span>(</span><span>AVRational</span><span>)</span> <span>{</span><span>inlink</span><span>-</span><span>&gt;</span><span>time_base</span><span>.</span><span>den</span><span>,</span> <span>inlink</span><span>-</span><span>&gt;</span><span>time_base</span><span>.</span><span>num</span><span>}</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="302"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR302"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>memcpy</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span> <span>+</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>,</span> <span>input_data</span><span>,</span> <span>samples</span> <span>*</span> <span>sizeof</span><span>(</span><span>*</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span><span>)</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="303"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR303"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>+</span><span>=</span> <span>samples</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="304"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR304"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="305"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR305"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_vad</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="306"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR306"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>&amp;</span><span>&amp;</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>-</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_vad_size</span><span>)</span> <span>&gt;</span><span>=</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="307"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR307"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>av_rescale</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>vad_min_speech_duration</span> <span>+</span> <span>wctx</span><span>-</span><span>&gt;</span><span>vad_min_silence_duration</span><span>,</span> <span>WHISPER_SAMPLE_RATE</span><span>,</span> <span>AV_TIME_BASE</span><span>)</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="308"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR308"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>struct</span> <span>whisper_vad_segments</span> <span>*</span><span>segments</span> <span>=</span> <span>whisper_vad_segments_from_samples</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>ctx_vad</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="309"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR309"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                                                                                  <span>wctx</span><span>-</span><span>&gt;</span><span>vad_params</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="310"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR310"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                                                                                  <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="311"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR311"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                                                                                  <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="312"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR312"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_vad_size</span> <span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="313"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR313"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="314"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR314"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>if</span> <span>(</span><span>!</span><span>segments</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="315"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR315"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>AV_LOG_ERROR</span><span>,</span> <span></span><span>"</span><span>failed to detect VAD</span><span>\n</span><span>"</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="316"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR316"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>}</span> <span>else</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="317"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR317"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>int</span> <span>n_segments</span> <span>=</span> <span>whisper_vad_segments_n_segments</span><span>(</span><span>segments</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="318"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR318"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="319"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR319"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>if</span> <span>(</span><span>n_segments</span> <span>&gt;</span> <span>0</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="320"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR320"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                <span>const</span> <span>float</span> <span>start_ms</span> <span>=</span> <span>whisper_vad_segments_get_segment_t0</span><span>(</span><span>segments</span><span>,</span> <span>0</span><span>)</span> <span>*</span> <span>10.0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="321"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR321"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                <span>const</span> <span>float</span> <span>end_ms</span> <span>=</span> <span>whisper_vad_segments_get_segment_t1</span><span>(</span><span>segments</span><span>,</span> <span>n_segments</span> <span>-</span> <span>1</span><span>)</span> <span>*</span> <span>10.0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="322"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR322"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                <span>int</span> <span>end_pos</span> <span>=</span> <span>(</span><span>int</span><span>)</span> <span>(</span><span>end_ms</span> <span>*</span> <span>WHISPER_SAMPLE_RATE</span> <span>/</span> <span>1000</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="323"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR323"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="324"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR324"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                <span>if</span> <span>(</span><span>end_pos</span> <span>&lt;</span><span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>-</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="325"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR325"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                    <span>av_rescale</span><span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>vad_min_silence_duration</span><span>,</span> <span>WHISPER_SAMPLE_RATE</span><span>,</span> <span>AV_TIME_BASE</span><span>)</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="326"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR326"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                    <span>av_log</span><span>(</span><span>ctx</span><span>,</span> <span>AV_LOG_INFO</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="327"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR327"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                            <span></span><span>"</span><span>VAD detected %d segments, start: %.0f ms, end: %.0f ms (buffer: %d ms)</span><span>\n</span><span>"</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="328"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR328"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                            <span>n_segments</span><span>,</span> <span>start_ms</span><span>,</span> <span>end_ms</span><span>,</span> <span>1000</span> <span>*</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>/</span> <span>WHISPER_SAMPLE_RATE</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="329"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR329"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                    <span>run_transcription</span><span>(</span><span>ctx</span><span>,</span> <span>frame</span><span>,</span> <span>end_pos</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="330"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR330"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="331"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR331"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="332"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR332"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="333"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR333"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>whisper_vad_free_segments</span><span>(</span><span>segments</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="334"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR334"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="335"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR335"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span> <span>else</span> <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>&gt;</span><span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_queue_size</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="336"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR336"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>run_transcription</span><span>(</span><span>ctx</span><span>,</span> <span>frame</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="337"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR337"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="338"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR338"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>wctx</span><span>-</span><span>&gt;</span><span>next_pts</span> <span>=</span> <span>frame</span><span>-</span><span>&gt;</span><span>pts</span> <span>+</span> <span>av_rescale_q</span><span>(</span><span>samples</span><span>,</span> <span>(</span><span>AVRational</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="339"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR339"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                                               <span>1</span><span>,</span> <span>inlink</span><span>-</span><span>&gt;</span><span>sample_rate</span><span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="340"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR340"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                                               <span>,</span> <span>inlink</span><span>-</span><span>&gt;</span><span>time_base</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="341"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR341"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>return</span> <span>ff_filter_frame</span><span>(</span><span>outlink</span><span>,</span> <span>frame</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="342"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR342"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="343"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR343"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="344"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR344"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>static</span> <span>int</span> <span>push_last_frame</span><span>(</span><span>AVFilterLink</span> <span>*</span><span>outlink</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="345"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR345"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="346"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR346"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>AVFilterContext</span> <span>*</span><span>ctx</span> <span>=</span> <span>outlink</span><span>-</span><span>&gt;</span><span>src</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="347"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR347"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>WhisperContext</span> <span>*</span><span>wctx</span> <span>=</span> <span>ctx</span><span>-</span><span>&gt;</span><span>priv</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="348"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR348"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>AVFrame</span> <span>*</span><span>frame</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="349"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR349"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>n_out</span> <span>=</span> <span>1</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="350"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR350"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="351"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR351"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>ctx</span><span>-</span><span>&gt;</span><span>is_disabled</span> <span>|</span><span>|</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span> <span>=</span><span>=</span> <span>0</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="352"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR352"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>return</span> <span>0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="353"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR353"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>frame</span> <span>=</span> <span>ff_get_audio_buffer</span><span>(</span><span>outlink</span><span>,</span> <span>n_out</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="354"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR354"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>!</span><span>frame</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="355"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR355"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>return</span> <span>AVERROR</span><span>(</span><span>ENOMEM</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="356"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR356"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="357"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR357"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>av_samples_set_silence</span><span>(</span><span>frame</span><span>-</span><span>&gt;</span><span>extended_data</span><span>,</span> <span>0</span><span>,</span> <span>n_out</span><span>,</span> <span>frame</span><span>-</span><span>&gt;</span><span>ch_layout</span><span>.</span><span>nb_channels</span><span>,</span> <span>frame</span><span>-</span><span>&gt;</span><span>format</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="358"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR358"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="359"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR359"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>frame</span><span>-</span><span>&gt;</span><span>pts</span> <span>=</span> <span>wctx</span><span>-</span><span>&gt;</span><span>next_pts</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="360"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR360"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>next_pts</span> <span>!</span><span>=</span> <span>AV_NOPTS_VALUE</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="361"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR361"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>next_pts</span> <span>+</span><span>=</span> <span>av_rescale_q</span><span>(</span><span>n_out</span><span>,</span> <span>(</span><span>AVRational</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="362"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR362"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                                       <span>1</span><span>,</span> <span>outlink</span><span>-</span><span>&gt;</span><span>sample_rate</span><span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="363"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR363"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                                       <span>,</span> <span>outlink</span><span>-</span><span>&gt;</span><span>time_base</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="364"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR364"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="365"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR365"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>run_transcription</span><span>(</span><span>ctx</span><span>,</span> <span>frame</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>audio_buffer_fill_size</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="366"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR366"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="367"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR367"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>return</span> <span>ff_filter_frame</span><span>(</span><span>outlink</span><span>,</span> <span>frame</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="368"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR368"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="369"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR369"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="370"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR370"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>static</span> <span>int</span> <span>activate</span><span>(</span><span>AVFilterContext</span> <span>*</span><span>ctx</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="371"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR371"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="372"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR372"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>AVFilterLink</span> <span>*</span><span>inlink</span> <span>=</span> <span>ctx</span><span>-</span><span>&gt;</span><span>inputs</span><span>[</span><span>0</span><span>]</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="373"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR373"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>AVFilterLink</span> <span>*</span><span>outlink</span> <span>=</span> <span>ctx</span><span>-</span><span>&gt;</span><span>outputs</span><span>[</span><span>0</span><span>]</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="374"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR374"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>WhisperContext</span> <span>*</span><span>wctx</span> <span>=</span> <span>ctx</span><span>-</span><span>&gt;</span><span>priv</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="375"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR375"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int64_t</span> <span>pts</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="376"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR376"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>status</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="377"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR377"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="378"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR378"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>FF_FILTER_FORWARD_STATUS_BACK</span><span>(</span><span>outlink</span><span>,</span> <span>inlink</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="379"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR379"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="380"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR380"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>!</span><span>wctx</span><span>-</span><span>&gt;</span><span>eof</span> <span>&amp;</span><span>&amp;</span> <span>ff_inlink_queued_frames</span><span>(</span><span>inlink</span><span>)</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="381"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR381"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>AVFrame</span> <span>*</span><span>frame</span> <span>=</span> <span>NULL</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="382"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR382"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>int</span> <span>ret</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="383"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR383"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="384"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR384"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>ret</span> <span>=</span> <span>ff_inlink_consume_frame</span><span>(</span><span>inlink</span><span>,</span> <span>&amp;</span><span>frame</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="385"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR385"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>if</span> <span>(</span><span>ret</span> <span>&lt;</span> <span>0</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="386"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR386"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>return</span> <span>ret</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="387"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR387"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>if</span> <span>(</span><span>ret</span> <span>&gt;</span> <span>0</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="388"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR388"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>            <span>return</span> <span>filter_frame</span><span>(</span><span>inlink</span><span>,</span> <span>frame</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="389"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR389"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="390"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR390"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="391"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR391"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>!</span><span>wctx</span><span>-</span><span>&gt;</span><span>eof</span> <span>&amp;</span><span>&amp;</span> <span>ff_inlink_acknowledge_status</span><span>(</span><span>inlink</span><span>,</span> <span>&amp;</span><span>status</span><span>,</span> <span>&amp;</span><span>pts</span><span>)</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="392"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR392"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>wctx</span><span>-</span><span>&gt;</span><span>eof</span> <span>=</span> <span>status</span> <span>=</span><span>=</span> <span>AVERROR_EOF</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="393"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR393"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="394"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR394"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>wctx</span><span>-</span><span>&gt;</span><span>eof</span><span>)</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="395"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR395"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>push_last_frame</span><span>(</span><span>outlink</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="396"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR396"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="397"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR397"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>ff_outlink_set_status</span><span>(</span><span>outlink</span><span>,</span> <span>AVERROR_EOF</span><span>,</span> <span>wctx</span><span>-</span><span>&gt;</span><span>next_pts</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="398"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR398"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>return</span> <span>0</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="399"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR399"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="400"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR400"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="401"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR401"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>FF_FILTER_FORWARD_WANTED</span><span>(</span><span>outlink</span><span>,</span> <span>inlink</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="402"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR402"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="403"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR403"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>return</span> <span>FFERROR_NOT_READY</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="404"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR404"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="405"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR405"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="406"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR406"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>static</span> <span>int</span> <span>query_formats</span><span>(</span><span>const</span> <span>AVFilterContext</span> <span>*</span><span>ctx</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="407"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR407"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                         <span>AVFilterFormatsConfig</span> <span>*</span><span>*</span><span>cfg_in</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="408"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR408"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>                         <span>AVFilterFormatsConfig</span> <span>*</span><span>*</span><span>cfg_out</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="409"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR409"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="410"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR410"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>static</span> <span>const</span> <span>enum</span> <span>AVSampleFormat</span> <span>sample_fmts</span><span>[</span><span>]</span> <span>=</span> <span>{</span> <span>AV_SAMPLE_FMT_FLT</span><span>,</span> <span>AV_SAMPLE_FMT_NONE</span> <span>}</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="411"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR411"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>AVChannelLayout</span> <span>chlayouts</span><span>[</span><span>]</span> <span>=</span> <span>{</span> <span>FF_COUNT2LAYOUT</span><span>(</span><span>1</span><span>)</span><span>,</span> <span>{</span> <span>0</span> <span>}</span> <span>}</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="412"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR412"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>sample_rates</span><span>[</span><span>]</span> <span>=</span> <span>{</span> <span>WHISPER_SAMPLE_RATE</span><span>,</span> <span>-</span><span>1</span> <span>}</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="413"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR413"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>int</span> <span>ret</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="414"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR414"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="415"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR415"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>ret</span> <span>=</span> <span>ff_set_common_formats_from_list2</span><span>(</span><span>ctx</span><span>,</span> <span>cfg_in</span><span>,</span> <span>cfg_out</span><span>,</span> <span>sample_fmts</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="416"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR416"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>ret</span> <span>&lt;</span> <span>0</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="417"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR417"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>return</span> <span>ret</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="418"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR418"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="419"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR419"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>ret</span> <span>=</span> <span>ff_set_common_channel_layouts_from_list2</span><span>(</span><span>ctx</span><span>,</span> <span>cfg_in</span><span>,</span> <span>cfg_out</span><span>,</span> <span>chlayouts</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="420"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR420"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>if</span> <span>(</span><span>ret</span> <span>&lt;</span> <span>0</span><span>)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="421"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR421"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>        <span>return</span> <span>ret</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="422"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR422"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="423"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR423"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>return</span> <span>ff_set_common_samplerates_from_list2</span><span>(</span><span>ctx</span><span>,</span> <span>cfg_in</span><span>,</span> <span>cfg_out</span><span>,</span> <span>sample_rates</span><span>)</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="424"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR424"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="425"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR425"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="426"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR426"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>define OFFSET(x) offsetof(WhisperContext, x)</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="427"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR427"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>define FLAGS AV_OPT_FLAG_AUDIO_PARAM | AV_OPT_FLAG_FILTERING_PARAM</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="428"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR428"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>#</span><span>define HOURS 3600000000</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="429"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR429"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="430"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR430"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>static</span> <span>const</span> <span>AVOption</span> <span>whisper_options</span><span>[</span><span>]</span> <span>=</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="431"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR431"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span></span><span>"</span><span>model</span><span>"</span><span>,</span> <span></span><span>"</span><span>Path to the whisper.cpp model file</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>model_path</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_STRING</span><span>,</span><span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span> <span>{</span> <span></span><span>"</span><span>language</span><span>"</span><span>,</span> <span></span><span>"</span><span>Language for transcription ('auto' for auto-detect)</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>language</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_STRING</span><span>,</span> <span>{</span><span>.</span><span>str</span> <span>=</span> <span></span><span>"</span><span>auto</span><span>"</span><span>}</span><span>,</span> <span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="432"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR432"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span></span><span>"</span><span>queue</span><span>"</span><span>,</span> <span></span><span>"</span><span>Audio queue size</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>queue</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_DURATION</span><span>,</span> <span>{</span><span>.</span><span>i64</span> <span>=</span> <span>3000000</span><span>}</span><span>,</span> <span>20000</span><span>,</span> <span>HOURS</span><span>,</span> <span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="433"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR433"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span></span><span>"</span><span>use_gpu</span><span>"</span><span>,</span> <span></span><span>"</span><span>Use GPU for processing</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>use_gpu</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_BOOL</span><span>,</span> <span>{</span><span>.</span><span>i64</span> <span>=</span> <span>1</span><span>}</span><span>,</span> <span>0</span><span>,</span> <span>1</span><span>,</span> <span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="434"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR434"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span></span><span>"</span><span>gpu_device</span><span>"</span><span>,</span> <span></span><span>"</span><span>GPU device to use</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>gpu_device</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_INT</span><span>,</span> <span>{</span><span>.</span><span>i64</span> <span>=</span> <span>0</span><span>}</span><span>,</span> <span>0</span><span>,</span> <span>INT_MAX</span><span>,</span> <span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="435"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR435"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span></span><span>"</span><span>destination</span><span>"</span><span>,</span> <span></span><span>"</span><span>Output destination</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>destination</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_STRING</span><span>,</span> <span>{</span><span>.</span><span>str</span> <span>=</span> <span></span><span>"</span><span>"</span><span>}</span><span>,</span> <span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="436"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR436"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span></span><span>"</span><span>format</span><span>"</span><span>,</span> <span></span><span>"</span><span>Output format (text|srt|json)</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>format</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_STRING</span><span>,</span> <span>{</span><span>.</span><span>str</span> <span>=</span> <span></span><span>"</span><span>text</span><span>"</span><span>}</span><span>,</span><span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="437"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR437"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span></span><span>"</span><span>vad_model</span><span>"</span><span>,</span> <span></span><span>"</span><span>Path to the VAD model file</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>vad_model_path</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_STRING</span><span>,</span><span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="438"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR438"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span></span><span>"</span><span>vad_threshold</span><span>"</span><span>,</span> <span></span><span>"</span><span>VAD threshold</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>vad_threshold</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_FLOAT</span><span>,</span> <span>{</span><span>.</span><span>dbl</span> <span>=</span> <span>0.5</span><span>}</span><span>,</span> <span>0.0</span><span>,</span> <span>1.0</span><span>,</span> <span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="439"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR439"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span></span><span>"</span><span>vad_min_speech_duration</span><span>"</span><span>,</span> <span></span><span>"</span><span>Minimum speech duration for VAD</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>vad_min_speech_duration</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_DURATION</span><span>,</span> <span>{</span><span>.</span><span>i64</span> <span>=</span> <span>100000</span><span>}</span><span>,</span> <span>20000</span><span>,</span> <span>HOURS</span><span>,</span> <span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="440"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR440"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span></span><span>"</span><span>vad_min_silence_duration</span><span>"</span><span>,</span> <span></span><span>"</span><span>Minimum silence duration for VAD</span><span>"</span><span>,</span> <span>OFFSET</span><span>(</span><span>vad_min_silence_duration</span><span>)</span><span>,</span> <span>AV_OPT_TYPE_DURATION</span><span>,</span> <span>{</span><span>.</span><span>i64</span> <span>=</span> <span>500000</span><span>}</span><span>,</span> <span>0</span><span>,</span> <span>HOURS</span><span>,</span> <span>.</span><span>flags</span> <span>=</span> <span>FLAGS</span> <span>}</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="441"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR441"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>{</span> <span>NULL</span> <span>}</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="442"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR442"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="443"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR443"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="444"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR444"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>static</span> <span>const</span> <span>AVClass</span> <span>whisper_class</span> <span>=</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="445"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR445"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>class_name</span> <span>=</span> <span></span><span>"</span><span>whisper</span><span>"</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="446"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR446"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>item_name</span> <span>=</span> <span>av_default_item_name</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="447"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR447"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>option</span> <span>=</span> <span>whisper_options</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="448"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR448"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>version</span> <span>=</span> <span>LIBAVUTIL_VERSION_INT</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="449"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR449"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span><span>;</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="450"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR450"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>
</code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="451"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR451"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>const</span> <span>FFFilter</span> <span>ff_af_whisper</span> <span>=</span> <span>{</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="452"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR452"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>p</span><span>.</span><span>name</span> <span>=</span> <span></span><span>"</span><span>whisper</span><span>"</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="453"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR453"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>p</span><span>.</span><span>description</span> <span>=</span> <span>NULL_IF_CONFIG_SMALL</span><span>(</span><span></span><span>"</span><span>Transcribe audio using whisper.cpp.</span><span>"</span><span>)</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="454"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR454"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>p</span><span>.</span><span>priv_class</span> <span>=</span> <span>&amp;</span><span>whisper_class</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="455"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR455"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>p</span><span>.</span><span>flags</span> <span>=</span> <span>AVFILTER_FLAG_METADATA_ONLY</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="456"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR456"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>init</span> <span>=</span> <span>init</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="457"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR457"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>uninit</span> <span>=</span> <span>uninit</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="458"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR458"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>activate</span> <span>=</span> <span>activate</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="459"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR459"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>.</span><span>priv_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>WhisperContext</span><span>)</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="460"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR460"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>FILTER_INPUTS</span><span>(</span><span>ff_audio_default_filterpad</span><span>)</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="461"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR461"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>FILTER_OUTPUTS</span><span>(</span><span>ff_audio_default_filterpad</span><span>)</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="462"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR462"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code>    <span>FILTER_QUERY_FUNC2</span><span>(</span><span>query_formats</span><span>)</span><span>,</span></code>
</td>
			
		</tr>
		
	
		<tr data-line-type="add">
			
				<td data-line-num=""><span rel=""></span></td>
				<td data-line-num="463"><span rel="diff-42c18e4c94118b4f2e9ac6bdd5abae8b953854ebR463"></span></td>
			
			<td></td>
			<td><span data-type-marker="+"></span></td>
			
				<td><code><span>}</span><span>;</span></code>
</td>
			
		</tr>
		
	


										
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Nearly 1 in 3 Starlink satellites detected within the SKA-Low frequency band (119 pts)]]></title>
            <link>https://astrobites.org/2025/08/12/starlink-ska-low/</link>
            <guid>44885821</guid>
            <pubDate>Wed, 13 Aug 2025 08:12:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://astrobites.org/2025/08/12/starlink-ska-low/">https://astrobites.org/2025/08/12/starlink-ska-low/</a>, See on <a href="https://news.ycombinator.com/item?id=44885821">Hacker News</a></p>
Couldn't get https://astrobites.org/2025/08/12/starlink-ska-low/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[[BUG] Claude says "You're absolutely right!" about everything (350 pts)]]></title>
            <link>https://github.com/anthropics/claude-code/issues/3382</link>
            <guid>44885398</guid>
            <pubDate>Wed, 13 Aug 2025 06:59:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/anthropics/claude-code/issues/3382">https://github.com/anthropics/claude-code/issues/3382</a>, See on <a href="https://news.ycombinator.com/item?id=44885398">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-testid="issue-body-viewer" data-team-hovercards-enabled="true" data-turbolinks="false" id="issue-body-viewer"><h2 dir="auto">Environment</h2>
<ul dir="auto">
<li>Claude CLI version: <code>1.0.51 (Claude Code)</code></li>
</ul>
<h2 dir="auto">Bug Description</h2>
<p dir="auto">Claude is way too sycophantic, saying "You're absolutely right!" (or correct) on a sizeable fraction of responses.</p>
<h2 dir="auto">Expected Behavior</h2>
<p dir="auto">The model should be RL'd (or the system prompt updated) to make it less sycophantic, or the phrases "You're absolutely right!" and "You're absolutely correct!" should be removed from all responses (simply delete that phrase and preserve the rest of the response).</p>
<h2 dir="auto">Actual Behavior (slightly redacted with ...)</h2>
<p dir="auto">In this particularly egregious case, Claude asked me whether to proceed with removing an unnecessary code path, I said "Yes please.", and it told me "You're absolutely right!", despite the fact that I never actually made a statement of fact that even <em>could</em> be right.</p>
<div data-snippet-clipboard-copy-content="  Should we simplify this and remove the &quot;approve_only&quot; case ... ?

> Yes please.

⏺ You're absolutely right! Since ... there's no scenario where we'd auto-approve ... with
  &quot;approve only&quot; ... Let me simplify this:"><pre><code>  Should we simplify this and remove the "approve_only" case ... ?

&gt; Yes please.

⏺ You're absolutely right! Since ... there's no scenario where we'd auto-approve ... with
  "approve only" ... Let me simplify this:
</code></pre></div>
<p dir="auto">This behavior is so egregious and well-known that it's become the butt of online jokes like <a href="https://x.com/iannuttall/status/1942943832519446785" rel="nofollow">https://x.com/iannuttall/status/1942943832519446785</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Online Safety Act – shutdowns and site blocks (258 pts)]]></title>
            <link>https://www.blocked.org.uk/osa-blocks</link>
            <guid>44885295</guid>
            <pubDate>Wed, 13 Aug 2025 06:40:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.blocked.org.uk/osa-blocks">https://www.blocked.org.uk/osa-blocks</a>, See on <a href="https://news.ycombinator.com/item?id=44885295">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<h3>Submit a new site</h3>
<p>Tell us about a site that is shutting down or restricting access to UK users as a result of the Online Safety Act</p>

</div><div>


<div>
        <h3>
            <a href="https://www.reddit.com/r/darkjokes/" rel="nofollow">www.reddit.com</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://www.reddit.com/r/darkjokes/</small></p>
        <p>Reported: 13 August, 2025 at 07:49</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Jokes of a dark or adult nature.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://jav.guru/" rel="nofollow">jav.guru | Just a moment...</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://jav.guru</small></p>
        <p>Reported: 13 August, 2025 at 07:39</p>
        
        <p>Shut down on: 01 August, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Japanese Adult Video porn website
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://raddle.me/" rel="nofollow">raddle.me | 451 Unavailable For Legal Reasons</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://raddle.me</small></p>
        <p>Reported: 12 August, 2025 at 23:56</p>
        
        <p>Shut down on: 12 August, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Forum / link aggragator. The oldest surviving reddit alternative.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>



<div>
        <h3>
            <a href="https://elajo.itch.io/" rel="nofollow">elajo.itch.io | Ela Maxima - itch.io</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://elajo.itch.io</small></p>
        <p>Reported: 10 August, 2025 at 22:28</p>
        
        <p>Shut down on: 25 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Ela Maxima's itch.io Author page is blocked.
But games can still be accesses by Googling the game pages, even 18+ ones.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://flowgpt.com/" rel="nofollow">flowgpt.com | Attention Required! | Cloudflare</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://flowgpt.com</small></p>
        <p>Reported: 09 August, 2025 at 21:24</p>
        
        <p>Shut down on: 24 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Chat with AI characters for free on FlowGPT! More than 1 million characters and bots to chat with, AI boyfriend, girlfriend, uncencored chat and AI tools.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>



<div>
        <h3>
            <a href="https://irish.session.nz/" rel="nofollow">irish.session.nz</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://irish.session.nz</small></p>
        <p>Reported: 09 August, 2025 at 00:10</p>
        
        <p>Shut down on: 08 August, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Resources for learning Irish music by ear
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://irodoricomics.com/blocked.html" rel="nofollow">irodoricomics.com | Access Blocked – Irodori Comics</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://irodoricomics.com/blocked.html</small></p>
        <p>Reported: 08 August, 2025 at 11:39</p>
        
        <p>Shut down on: 07 August, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            A online manga store that sells independently published manga (doujinshi) into English. Sells all-ages, LGBT and R18 manga, but all are in separate categories and R18 material needed to be paid by credit card, so was blocked to children, even before the UK Block.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://bsky.app/profile/greg.org/post/3lvt3mjvskk2i" rel="nofollow">bsky.app | @greg.org on Bluesky</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://bsky.app/profile/greg.org/post/3lvt3mjvskk2i</small></p>
        <p>Reported: 07 August, 2025 at 19:53</p>
        
        <p>Shut down on: 07 August, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Statue of |david behind age verification filter
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://www.reddit.com/r/jpouch/" rel="nofollow">www.reddit.com</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://www.reddit.com/r/jpouch/</small></p>
        <p>Reported: 07 August, 2025 at 15:17</p>
        
        <p>Shut down on: 24 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            reddit discussion about a type of bowel surgery
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://forums.aura-online.co.uk/" rel="nofollow">forums.aura-online.co.uk | Aura Forums - Information</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://forums.aura-online.co.uk</small></p>
        <p>Reported: 06 August, 2025 at 20:48</p>
        
        <p>Shut down on: 19 March, 2025</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            An old web forum for a loosely knit community of Final Fantasy fans and others. It ran for 25 years.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>



<div>
        <h3>
            <a href="http://forum.guitarbuilderscollective.com/" rel="nofollow">forum.guitarbuilderscollective.com</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>http://forum.guitarbuilderscollective.com</small></p>
        <p>Reported: 06 August, 2025 at 17:33</p>
        
        <p>Shut down on: 01 August, 2025</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            A discussion board for fans of building guitars.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://lgbtqia.space/" rel="nofollow">lgbtqia.space | LGBTQIA.Space</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://lgbtqia.space</small></p>
        <p>Reported: 06 August, 2025 at 14:16</p>
        
        <p>Shut down on: 05 August, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            LGBTQIA focused Mastodon instance.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://newsgrouper.org/" rel="nofollow">newsgrouper.org | Httpd_Error: 451</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://newsgrouper.org</small></p>
        <p>Reported: 06 August, 2025 at 14:11</p>
        
        <p>Shut down on: 17 March, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            A web interface to Usenet discussion groups (text only)
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>



<div>
        <h3>
            <a href="https://reddit.com/" rel="nofollow">reddit.com | Reddit - Dive into anything</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://reddit.com</small></p>
        <p>Reported: 06 August, 2025 at 11:26</p>
        
        <p>Shut down on: 21 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Reddit.com; The OSA has made it impossible to do my subreddit moderation work: I need to be able to review a user's profile if they submit a post/comments to any of the subreddits I moderate. Any profile marked as "18+", which DOES NOT imply pornographic content, is now blocked from view when accessing Reddit from the UK. I refuse outright to scan my face into a dodgy third-party site, so I HAVE to use a VPN to continue moderating my (medical professional) subreddits. It's insane.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>





<div>
        <h3>
            <a href="https://www.reddit.com/r/SoccerBetting/" rel="nofollow">www.reddit.com</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://www.reddit.com/r/SoccerBetting/</small></p>
        <p>Reported: 06 August, 2025 at 10:45</p>
        
        <p>Shut down on: 28 June, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            A site that provides betting tips
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>



<div>
        <h3>
            <a href="https://welcometoheavenblog.net/" rel="nofollow">welcometoheavenblog.net</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://welcometoheavenblog.net</small></p>
        <p>Reported: 04 August, 2025 at 09:03</p>
        
        <p>Shut down on: 25 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Wholesome 18+ queer webcomics by artist who goes by the name "Welcome to Heaven"
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>



<div>
        <h3>
            <a href="https://microcosm.app/" rel="nofollow">microcosm.app</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://microcosm.app</small></p>
        <p>Reported: 31 July, 2025 at 08:18</p>
        
        <p>Shut down on: 16 March, 2025</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            Open Source platform hosting hosting approximately 300 small communities, all of which will either shut down or have to migrate within three months. Announced Dec 2024. Microcosm also hosted LFGSS which you've included in your list. 
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="http://irodoricomics.com/" rel="nofollow">irodoricomics.com | Irodori Comics</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>http://irodoricomics.com</small></p>
        <p>Reported: 29 July, 2025 at 22:29</p>
        
        <p>Shut down on: 29 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Manga and Doujinshi shop
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://www.reddit.com/r/stopsmoking/" rel="nofollow">www.reddit.com</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://www.reddit.com/r/stopsmoking/</small></p>
        <p>Reported: 29 July, 2025 at 13:45</p>
        
        <p>Shut down on: 29 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Stop smoking subreddit
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://www.reddit.com/r/AlJazeera/" rel="nofollow">www.reddit.com</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://www.reddit.com/r/AlJazeera/</small></p>
        <p>Reported: 29 July, 2025 at 08:54</p>
        
        <p>Shut down on: 25 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Reddit news subreddit, age gated in UK
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://ifarchive.org/" rel="nofollow">ifarchive.org | The Interactive Fiction Archive</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://ifarchive.org</small></p>
        <p>Reported: 29 July, 2025 at 01:17</p>
        
        <p>Shut down on: 28 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            The Interactive Fiction Archive -- 30 years of amateur/free mostly-text games
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>



<div>
        <h3>
            <a href="https://spacehey.com/home" rel="nofollow">spacehey.com | Login | SpaceHey</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://spacehey.com/home</small></p>
        <p>Reported: 27 July, 2025 at 20:09</p>
        
        <p>Shut down on: 25 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Spacehey, a remake of classic MySpace
Completely removed support for UK people(s) due to the OSA and the additional resources that this would require
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://kandipatterns.com/" rel="nofollow">kandipatterns.com | Kandi Patterns: Blocked</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://kandipatterns.com</small></p>
        <p>Reported: 27 July, 2025 at 07:25</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            A website to view and discuss patterns for making kandi (bracelets and other crafts made with pony beads and string). 
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://janitorai.com/" rel="nofollow">janitorai.com | Access Restricted</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://janitorai.com</small></p>
        <p>Reported: 26 July, 2025 at 18:12</p>
        
        <p>Shut down on: 24 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Janitor AI is a chatbot platform where users can create and interact with AI characters for personalized role-playing and conversations. It was launched in 2023 and quickly gained popularity, especially among those interested in engaging with AI in an immersive and emotional way. The platform allows for customisation of character personalities, appearances, and dialogue settings, and supports different Large Language Models (LLMs). 

The site is of 18+ maturity and is only advertised for adults. The website is based outside of the UK.

Janitor ai also has a large creative community akin to fanficton sites like Ao3 or Wattpad. Many people use this site for creative expression and connecting with other users who also enjoy the fandoms and original characters that are created on the site.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>







<div>
        <h3>
            <a href="https://forum.zrythm.org/" rel="nofollow">forum.zrythm.org</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://forum.zrythm.org</small></p>
        <p>Reported: 25 July, 2025 at 22:51</p>
        
        <p>Shut down on: 25 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Discussion forum for users of the zrythm music production software 
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://x.com/BenBarryJones/status/1948830460668158130" rel="nofollow">x.com</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://x.com/BenBarryJones/status/1948830460668158130</small></p>
        <p>Reported: 25 July, 2025 at 21:31</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Post on social media website X claiming that content relating to protests has been age-gated due to the Online Safety Act.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://clippsly.com/" rel="nofollow">clippsly.com | Clippsly</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://clippsly.com</small></p>
        <p>Reported: 25 July, 2025 at 17:59</p>
        
        <p>Shut down on: 25 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Clippsly - A Roblox music-sharing platform
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>









<div>
        <h3>
            <a href="https://itch.io/" rel="nofollow">itch.io | Download the latest indie games - itch.io</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://itch.io</small></p>
        <p>Reported: 25 July, 2025 at 14:03</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Itch.io blocks certain pages due to the OSA. However, directly accessing the pages allows you to view content anyway. The content may or may not even be "adult".

Example: Pages on itch are organised by domain with the name of an author. The main index at https://elajo.itch.io Gives a message about the OSA. But pages within can be accessed if you already know the exact path name.

        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>





<div>
        <h3>
            <a href="https://pjuu.com/" rel="nofollow">pjuu.com | Pjuu</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://pjuu.com</small></p>
        <p>Reported: 25 July, 2025 at 12:30</p>
        
        <p>Shut down on: 28 February, 2025</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            Micro blogging site similar to twitter with a focus on privacy
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>



<div>
        <h3>
            <a href="https://www.renaultevclub.co.uk/" rel="nofollow">www.renaultevclub.co.uk | Renault EV Club | For Renaut Electric Car Drivers</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://www.renaultevclub.co.uk</small></p>
        <p>Reported: 25 July, 2025 at 11:21</p>
        
        <p>Shut down on: 24 May, 2025</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            The Place Online for Renault Electric Vehicle Owners &amp; Drivers.

Get the most out of your Renault Electric car by joining a community of people just like you. Launched in January 2022, we're at the start of our journey and we hope you'll come along for the ride.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://www.girlonthenet.com/" rel="nofollow">www.girlonthenet.com | Sexy stories, mostly true | Girl on the Net</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://www.girlonthenet.com</small></p>
        <p>Reported: 25 July, 2025 at 11:07</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Professional sex blogger, audio porn producer and pervert. Amateur anxious mess.

I write real-life sex stories and occasional horny fiction.

I also ramble about feminism, consent, online dating tips, mental health, the business of sex blogging and other topics that are vaguely adjacent to these things.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>



<div>
        <h3>
            <a href="https://pmvhaven.com/" rel="nofollow">pmvhaven.com</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://pmvhaven.com</small></p>
        <p>Reported: 25 July, 2025 at 06:57</p>
        
        <p>Shut down on: 25 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            "Access Restricted

This website is currently unavailable in the United Kingdom.

Due to regulatory requirements from the UK government related to identity verification and age assurance, we are unable to provide access to this service at this time.

We apologize for the inconvenience and appreciate your understanding."
        </p>
        
    </div>



<div>
        <h3>
            <a href="https://yodayo.com/" rel="nofollow">yodayo.com | Access Restricted - UK</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://yodayo.com</small></p>
        <p>Reported: 24 July, 2025 at 18:07</p>
        
        <p>Shut down on: 24 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Explore AI generated anime art, find best prompts, create beautiful images with our free AI art generator, and share it with other anime fans!
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://www.bitchute.com/" rel="nofollow">www.bitchute.com | Bitchute</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://www.bitchute.com</small></p>
        <p>Reported: 24 July, 2025 at 17:55</p>
        
        <p>Shut down on: 14 April, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            BitChute is a video service that prioritizes creators and champions users' freedoms and privacy.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://beta.4wall.ai/" rel="nofollow">beta.4wall.ai | 4Wall AI | Chat with AI Characters</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://beta.4wall.ai</small></p>
        <p>Reported: 24 July, 2025 at 17:48</p>
        
        <p>Shut down on: 24 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            4Wall AI is an interactive platform that allows users to engage in unfiltered, real-time conversations with AI-generated characters. Users can create their own AI personas, customize their traits, and immerse themselves in dynamic, story-driven environments.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://isthisyiff.net/" rel="nofollow">isthisyiff.net | Woah There...</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://isthisyiff.net</small></p>
        <p>Reported: 24 July, 2025 at 17:36</p>
        
        <p>Shut down on: 01 May, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            An online game where players guess whether drawn artwork is NSFW or not based on a cropped image.
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>



<div>
        <h3>
            <a href="https://www.noodledude.io/blocked" rel="nofollow">www.noodledude.io | Access Restricted - NoodleDude</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://www.noodledude.io/blocked</small></p>
        <p>Reported: 24 July, 2025 at 14:25</p>
        
        <p>Shut down on: 23 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            Noodle Dude PMV is a pornographic website that creates porn movies put to music. 
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://thisvid.com/" rel="nofollow">thisvid.com | Access blocked</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://thisvid.com</small></p>
        <p>Reported: 23 July, 2025 at 13:11</p>
        
        <p>Shut down on: 22 July, 2025</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            popular pornographic site
        </p>
        <p><span>
                Submitted
            </span>
            
        </p>
    </div>

<div>
        <h3>
            <a href="https://www.redpassion.co.uk/" rel="nofollow">www.redpassion.co.uk | Red Passion</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://www.redpassion.co.uk</small></p>
        <p>Reported: 17 March, 2025 at 13:52</p>
        
        <p>Shut down on: 16 March, 2025</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            The No1 Wrexham Association Football Club fansite Red Passion has been online since the mid 90's in various forms, and was the name of a paper fanzine in the 90's and 2010. This site has closed to new user registrations  
        </p>
        
    </div>



<div>
        <h3>
            <a href="https://www.dadswithkids.co.uk/" rel="nofollow">www.dadswithkids.co.uk | Dads with Kids Forum</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://www.dadswithkids.co.uk</small></p>
        <p>Reported: 17 March, 2025 at 13:50</p>
        
        <p>Shut down on: 16 March, 2025</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            Community for single Dads and divorcing Dads seeking help with seeing their children after separation
        </p>
        
    </div>

<div>
        <h3>
            <a href="https://forums.hexus.net/" rel="nofollow">forums.hexus.net</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://forums.hexus.net</small></p>
        <p>Reported: 14 March, 2025 at 19:33</p>
        
        <p>Shut down on: 01 March, 2025</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            A computing gaming and general discussion forum, with approximately 310,000 registered users. Some migration to an alternative non UK forum
        </p>
        
    </div>

<div>
        <h3>
            <a href="https://urbandead.com/shutdown.html" rel="nofollow">urbandead.com | Urban Dead is shutting down</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://urbandead.com/shutdown.html</small></p>
        <p>Reported: 10 March, 2025 at 12:23</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            Urban Dead, a massively multi-player web-based zombie apocalypse game, with over 1,500 players active on 2025-03-03
        </p>
        
    </div>

<div>
        <h3>
            <a href="https://www.readytogo.net/smb/threads/" rel="nofollow">www.readytogo.net | There is a problem: | RTG Sunderland Message Boards</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://www.readytogo.net/smb/threads/</small></p>
        <p>Reported: 10 March, 2025 at 12:23</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            https://web.archive.org/web/20250103040011/https://www.readytogo.net/smb/threads/the-end-of-the-forum-is-nigh.1646227/ Ready To Go, a discussion forum about Sunderland AFC, a football club
        </p>
        
    </div>

<div>
        <h3>
            <a href="https://social.treehouse.systems/" rel="nofollow">social.treehouse.systems | Treehouse Mastodon</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://social.treehouse.systems</small></p>
        <p>Reported: 10 March, 2025 at 12:22</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            https://web.archive.org/web/20250104064609/https://social.treehouse.systems/@dee/113662184456889247 Microcosm, a forum-hosting service, reported as having about 275,000 monthly average users, mostly from the UK 
        </p>
        
    </div>

<div>
        <h3>
            <a href="https://lobste.rs/" rel="nofollow">lobste.rs | Lobsters</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://lobste.rs</small></p>
        <p>Reported: 10 March, 2025 at 12:21</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            Lobste.rs, a tech discussion forum with around 2,500 daily active users and more than 110,000 daily readers
        </p>
        
    </div>

<div>
        <h3>
            <a href="https://www.lfgss.com/" rel="nofollow">www.lfgss.com | LFGSS </a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://www.lfgss.com</small></p>
        <p>Reported: 10 March, 2025 at 12:20</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            https://web.archive.org/web/20250109072916/https://www.lfgss.com/conversations/401475/ LFGSS (London Fixed Gear and Single-Speed), a cycling forum
        </p>
        
    </div>

<div>
        <h3>
            <a href="https://lemmy.zip/" rel="nofollow">lemmy.zip | Lemmy.zip and the OSA</a>
        
            <span title="Site is geo-blocking content">
        
        </span></h3>
        <p><small>https://lemmy.zip</small></p>
        <p>Reported: 10 March, 2025 at 12:20</p>
        
        <p>Geoblocking due to OSA</p>
        <p>
            https://web.archive.org/web/20250227173838/https://uk.lemmy.zip/  discussion community focussed on tech, PCs, and gaming, with approximately 260 daily users, and 3,300 total users
        </p>
        
    </div>

<div>
        <h3>
            <a href="https://www.thegreenlivingforum.net/forum/" rel="nofollow">www.thegreenlivingforum.net</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://www.thegreenlivingforum.net/forum/</small></p>
        <p>Reported: 10 March, 2025 at 12:11</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            The Green Living Forum, a discussion board running since 2006, with just under 500,000 posts about sustainable living  https://web.archive.org/web/20250120205725/https://www.thegreenlivingforum.net/forum/viewtopic.php?f=2&amp;t=114519
        </p>
        
    </div>



<div>
        <h3>
            <a href="https://furry.energy/" rel="nofollow">furry.energy | Furry.Energy</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://furry.energy</small></p>
        <p>Reported: 10 March, 2025 at 11:39</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            https://archive.is/vmxXK  UK based Mastodon Server oriented towards those in the furry &amp; LGBTQA+ communities
        </p>
        
    </div>



<div>
        <h3>
            <a href="https://awscommunity.social/" rel="nofollow">awscommunity.social</a>
        
            <span title="Site has shut down">
        
        </span></h3>
        <p><small>https://awscommunity.social</small></p>
        <p>Reported: 10 March, 2025 at 11:35</p>
        
        <p>Shutting down due to OSA</p>
        <p>
            A Mastodon instance for discussing AWS technologies, with approximately 300 users https://web.archive.org/web/20250110144134/https://awscommunity.social/@Ric_/113803857188109600
        </p>
        
    </div>


    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: F-Droid build servers can't build modern Android apps due to outdated CPUs (302 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=44884709</link>
            <guid>44884709</guid>
            <pubDate>Wed, 13 Aug 2025 04:43:39 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=44884709">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><tbody><tr id="44885476"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44885476" href="https://news.ycombinator.com/vote?id=44885476&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>I don't fully understand: aren't gradle and aapt2 open-source ?</p><p>If you want to build buildroot or openwrt, the first thing it will do is compiling your own toolchain (rather than reusing the one from your distro) so that it can lead to predictable results. I would have the same rationale for f-droid : why not compile the whole toolchain from source rather than using a binary gradle/aapt2 that uses unsupported instructions?</p></div></td></tr></tbody></table></td></tr><tr id="44885007"><td></td></tr><tr id="44885016"><td></td></tr><tr id="44884781"><td></td></tr><tr id="44884851"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44884851" href="https://news.ycombinator.com/vote?id=44884851&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>The Catima thread makes FDroid sound like a really difficult commmunity to work with. Although I'm basing this on one person's comment and other people agreeing, not on any knowledge or experience.</p><p>&gt; But this is like everything with F-Droid: everything always falls on a deaf man's ears. So I would rather not waste more time talking to a brick wall. If I had the feeling it was possible to improve F-Droid by raising issues and trying to discuss how to solve them I wouldn't have left the project out of frustration after years of putting so much time and energy into it.</p></div></td></tr></tbody></table></td></tr><tr id="44885456"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885456" href="https://news.ycombinator.com/vote?id=44885456&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>F-droid are thoroughly understaffed and yet incredibly ambitious and shrewd around their goals - they want to build all the apps in a reproducible manner. There’s lots of friction around deviating from builds that fit within their model. The system is also slow, takes a long while before a build shows up. I think f-droid could benefit immensely from more funding, saying that as someone who has never seen f-droid’s side, but have worked on an app that was published there.</p></div></td></tr></tbody></table></td></tr><tr id="44885300"><td></td></tr><tr id="44884865"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44884865" href="https://news.ycombinator.com/vote?id=44884865&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>This is pretty concerning, especially as FDroid is by far the largest non-google android store at the moment, something that I feel is really needed, regardless of your feelings about google.</p><p>Does anyone know of plans to resolve this? Will FDroid update their servers? Are google looking into rolling back the requirement? (this last one sounds unlikely)</p></div></td></tr></tbody></table></td></tr><tr id="44884902"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44884902" href="https://news.ycombinator.com/vote?id=44884902&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>I agree it’s a bit concerning but please keep in mind F-Droid is a volunteer-run community project. Especially with some EU countries moving to open source software, it would be nice to see some public funding for projects like F-Droid.</p></div></td></tr></tbody></table></td></tr><tr id="44885719"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885719" href="https://news.ycombinator.com/vote?id=44885719&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>&gt; please keep in mind F-Droid is a volunteer-run community project.</p><p>To, me, that's the worrying part.</p><p>Not that it's ran by volunteers. But that all there's left between a full-on "tech monopoly" or hegemony, and a free internet, is small bands of underfunded volunteers.</p><p>Opposition to market dominance and monopolies by multibillion multinationals shouldn't just come from a few volunteers. If that's the case, just roll over and give up; the cause is lost. (As I've done, hence my defaitism)</p><p>Aside from that: it being "a volunteer ran community" shouldn't be put as an excuse for why it's in trouble/has poor UX/is hard to use/is behind/etc. It should be a killer feature. Something that makes it more resilient/better attuned/easier/earlier adopting/etc.</p></div></td></tr></tbody></table></td></tr><tr id="44884927"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44884927" href="https://news.ycombinator.com/vote?id=44884927&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>&gt; Nice to see some public funding for projects like F-Droid</p><p>Definitely, SSE4.1 instruction set based CPU, for building apps in 2025, No way!!</p></div></td></tr></tbody></table></td></tr><tr id="44884931"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44884931" href="https://news.ycombinator.com/vote?id=44884931&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Hope I didn't come across as criticising FDroid here- It seems sucky to have build requirements change under your feet.</p><p>It's just I think that FDroid is an important project, and hope this doesn't block their progress.</p></div></td></tr></tbody></table></td></tr><tr id="44885039"><td></td></tr><tr id="44885226"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885226" href="https://news.ycombinator.com/vote?id=44885226&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>I'm not quite sure if I'm over reading into this, but this comes across as a snarky response as if I've said "boo, fdroid sucks and owes me a free app store!".</p><p>Appologies if I came across like that, here's what I'm trying to convey:</p><p>- Fdroid is important</p><p>- This sounds like a problem, not necessarily one that's any fault of fdroid</p><p>- Does anyone know of a plan to fix the issue?</p><p>For what it's worth, I do donate on a monthly basis to fdroid through liberapay, but I don't think that's really relevant here?</p></div></td></tr></tbody></table></td></tr><tr id="44885283"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885283" href="https://news.ycombinator.com/vote?id=44885283&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>This has now become a major issue for F-Droid, as well as for FOSS app developers. People are starting to complain about devs because they haven't been able to release the new version for their apps  (at least it doesn't show up on F-Droid) as promised</p></div></td></tr></tbody></table></td></tr><tr id="44885065"><td></td></tr><tr id="44884905"><td></td></tr><tr id="44885121"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885121" href="https://news.ycombinator.com/vote?id=44885121&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Funny true story: I got my first smartphone in 2018, a Samsung Galaxy A5.  I have it to this day, and it is the only smartphone I ever used.  This is the first time I hear about Samsung Galaxy store! (≧▽≦)</p></div></td></tr></tbody></table></td></tr><tr id="44885091"><td></td></tr><tr id="44884918"><td></td></tr><tr id="44884943"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44884943" href="https://news.ycombinator.com/vote?id=44884943&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>&gt; FDroid is by far the largest non-google android store at the moment</p><p>Not even sure it's in the top 10</p></div></td></tr></tbody></table></td></tr><tr id="44885240"><td></td></tr><tr id="44885341"><td><table><tbody><tr><td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td><center><a id="up_44885341" href="https://news.ycombinator.com/vote?id=44885341&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>There are at least six Android app stores in China that have more than 100 million MAUs each: Huawei AppGallery, Tencent MyApp, Xiaomi Mi Store (or GetApps), Oppo, Vivo, and Honor stores.</p></div></td></tr></tbody></table></td></tr><tr id="44885893"><td><table><tbody><tr><td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td><center><a id="up_44885893" href="https://news.ycombinator.com/vote?id=44885893&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Huawei and Honor are seperate app stores?</p><p>And Oppo and Vivo too?</p><p>In both instances one company owns the other - why have competing app stores?</p></div></td></tr></tbody></table></td></tr><tr id="44885689"><td></td></tr><tr id="44884904"><td></td></tr><tr id="44884948"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44884948" href="https://news.ycombinator.com/vote?id=44884948&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>&gt; However at the same time, not even offering a fallback path in non-assembly?</p><p>There's probably not any hand-written assembly at issue here, just a compiler told to target x86_64-v2. Among others, RHEL 9 and derivatives were built with such options. (RHEL 10 bumped up the minimum spec again to x86_64-v3, allowing use of AVX.)</p></div></td></tr></tbody></table></td></tr><tr id="44885099"><td></td></tr><tr id="44885714"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885714" href="https://news.ycombinator.com/vote?id=44885714&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>at this point they're guzzling so much power the electricity is more expensive than replacement platform</p></div></td></tr></tbody></table></td></tr><tr id="44885600"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885600" href="https://news.ycombinator.com/vote?id=44885600&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>I can imagine this has to be like that as they usually get $1500 per month in donations.</p><p>You could buy a newer one but I guess they have other stuff they have to pay for.</p></div></td></tr></tbody></table></td></tr><tr id="44885138"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44885138" href="https://news.ycombinator.com/vote?id=44885138&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>&gt; Google’s new aapt2 binary in AGP 8.12.0</p><p>Given F-Droid's emphasis on isolating and protecting their build environment, I'm kind of surprised that they're just using upstream binaries and not building from source.</p></div></td></tr></tbody></table></td></tr><tr id="44885022"><td></td></tr><tr id="44885083"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44885083" href="https://news.ycombinator.com/vote?id=44885083&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>There is no point for Google to push planned obsolescence on the PC or server space. They don't have a market there.</p></div></td></tr></tbody></table></td></tr><tr id="44885118"><td></td></tr><tr id="44885215"><td><table><tbody><tr><td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td><center><a id="up_44885215" href="https://news.ycombinator.com/vote?id=44885215&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>When you mention "competitors," what industries or markets are you referring to?</p><p>No one would write Android apps on a Chromebook, and making it harder to do so would only reduce the incentive for companies to develop Android apps.</p><p>How could Google benefit from pushing a newer instruction set standard on Windows and macOS?</p></div></td></tr></tbody></table></td></tr><tr id="44885301"><td><table><tbody><tr><td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td><center><a id="up_44885301" href="https://news.ycombinator.com/vote?id=44885301&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>The one moderately popular competitor is the project in the OP that is suffering directly from this upstream change.</p></div></td></tr></tbody></table></td></tr><tr id="44885386"><td><table><tbody><tr><td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td><center><a id="up_44885386" href="https://news.ycombinator.com/vote?id=44885386&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>While your perspective makes some sense, it's highly improbable. It's unlikely that Google was aware of F-Droid's  infrastructure specs, or its inability to fix the issue in advance.</p><p>It seems you're suggesting a very specific, targeted attack.</p></div></td></tr></tbody></table></td></tr><tr id="44885304"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44885304" href="https://news.ycombinator.com/vote?id=44885304&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>"If I had the time, I'd try to compile a binary of it that will run on Win95 just to give my fuckings to the planned obsolescence crowd"</p><p>The idea that not supporting a 20+ year old system is "planned obsolescence" is a bit shallow</p></div></td></tr></tbody></table></td></tr><tr id="44884889"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44884889" href="https://news.ycombinator.com/vote?id=44884889&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>It seems quite implausible that F-Droid is actually running on hardware that predates those instruction set extensions. They're seeing wider adoption by default these days precisely because hardware which doesn't support them is getting very rare, especially in servers still in production use. Are you sure this isn't simply a matter of F-Droid using VMs that are configured to not expose those instructions as supported?</p></div></td></tr></tbody></table></td></tr><tr id="44885018"><td></td></tr><tr id="44884926"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44884926" href="https://news.ycombinator.com/vote?id=44884926&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Note: the underlying blame here fundamentally belongs to whoever built AGP / Gradle with non-universal flags, then distributed it.</p><p>It's fine to ship binaries with hard-coded cpu flag requirements <i>if</i> you control the universe, but otherwise not, especially if you are in an ecosystem where you make it hard for users to rebuild everything from source.</p></div></td></tr></tbody></table></td></tr><tr id="44884996"><td></td></tr><tr id="44885261"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44885261" href="https://news.ycombinator.com/vote?id=44885261&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Exactly. Everything should be compiled to target i386.</p><p>/s (should be obvious but probably not for this audience)</p></div></td></tr></tbody></table></td></tr><tr id="44885181"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44885181" href="https://news.ycombinator.com/vote?id=44885181&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>As far as I can see, sse4.1 has been introduced in CPUs in 2011. That's more than 10 years ago. I wonder why such old servers are still in use. I'd assume that a modern CPU would do the same amount of work with a fraction of energy so that it does not even make economical sense to run such outdated hardware.</p><p>Does anyone know the numbers of build servers and the specs?</p></div></td></tr></tbody></table></td></tr><tr id="44885380"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44885380" href="https://news.ycombinator.com/vote?id=44885380&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>I haven’t seen the real answer that I suspect here - the build servers are that one dual socket AMD board which runs open firmware and has no ME/PSP .</p></div></td></tr></tbody></table></td></tr><tr id="44885536"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44885536" href="https://news.ycombinator.com/vote?id=44885536&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>It has been introduced in Intel Penryn, in November 2007.</p><p>However the AMD CPUs did not implement it until Bulldozer, in mid 2011.</p><p>While they lacked the many additional instructions provided by Bulldozer, also including AVX and FMA, for many applications the older Opteron CPUs were significantly faster than the Bulldozer-based CPUs, so there were few incentives for upgrading them, before the launch of AMD Epyc in mid 2017.</p><p>SSE 4.1 is a cut point in supporting old CPUs for many software packages, because older CPUs have a very high overhead for divergent computations (e.g. with if ... else ...) inside loops that are parallelized with SIMD instructions.</p></div></td></tr></tbody></table></td></tr><tr id="44885308"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44885308" href="https://news.ycombinator.com/vote?id=44885308&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>I was going to say that I assume that the reason for such old CPUs is the ability to use Canoeboot/GNU Boot.  But you absolutely can put an SSE4.2 CPU in a KGPE-D16 motherboard.  So IDK.</p></div></td></tr></tbody></table></td></tr><tr id="44885282"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44885282" href="https://news.ycombinator.com/vote?id=44885282&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Hardware after the first couple of generations of x86_64 muliticore processors are perfectly capable machines to use as servers, even for tasks you want to put off to a build farm.</p></div></td></tr></tbody></table></td></tr><tr id="44884847"><td></td></tr><tr id="44884911"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44884911" href="https://news.ycombinator.com/vote?id=44884911&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>The build servers appear to be AMD Opteron G3s, which only support part of SSE4 (SSE4a). Full SSE4 support didn't land until Bulldozer (late 2011).</p></div></td></tr></tbody></table></td></tr><tr id="44885037"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885037" href="https://news.ycombinator.com/vote?id=44885037&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>I appreciate that this is a volunteer project, but my back of the hand math suggests that if they upgraded to a $300 laptop using a 10nm intel chip, it would pay for itself in power usage within a few years.  Actually, probably less, considering an i3-N305 has more cores and substantially faster single thread.</p><p>And yes, you could get that cost down easily.</p></div></td></tr></tbody></table></td></tr><tr id="44885048"><td><table><tbody><tr><td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td><center><a id="up_44885048" href="https://news.ycombinator.com/vote?id=44885048&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Yes, a used laptop would be an upgrade from server hardware of that vintage, in performance and probably in reliability. If they're really using hardware that old, that is itself a big red flag that F-Droid's infrastructure is fragile and unmaintained.</p><p>(A server <i>that</i> old might not have any SSDs, which would be <i>insane</i> for a software build server unless it was doing everything in RAM.)</p></div></td></tr></tbody></table></td></tr><tr id="44885486"><td></td></tr><tr id="44885480"><td></td></tr><tr id="44885752"><td><table><tbody><tr><td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td><center><a id="up_44885752" href="https://news.ycombinator.com/vote?id=44885752&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>there are a handful of vendors that will sell you an intel chip with the me disabled, as well as arm vendors that ship boards without an me-equivalent at all</p><p>the point of my post still stands</p></div></td></tr></tbody></table></td></tr><tr id="44885314"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885314" href="https://news.ycombinator.com/vote?id=44885314&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>it's insane, i would give them my old xeon haswell machine for free, but the shipping cost is likely more than the cost of the machine itself.</p></div></td></tr></tbody></table></td></tr><tr id="44884901"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44884901" href="https://news.ycombinator.com/vote?id=44884901&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Yes, SSE4.1 and SSSE3 have been introduced in ~2006. The F-Droid build server still uses that to build modern and some of the most popular FOSS apps.</p></div></td></tr></tbody></table></td></tr><tr id="44884925"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44884925" href="https://news.ycombinator.com/vote?id=44884925&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Man, Android could have been way cooler if it actually used real virtual machines, or at least the JVMs.</p></div></td></tr></tbody></table></td></tr><tr id="44885175"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44885175" href="https://news.ycombinator.com/vote?id=44885175&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>I stood by Oracle, because in the long term as it has been proven, Android is Google's J++, and Kotlin became Google's C#.</p><p>Hardly any different from what was in the genesis of .NET.</p><p>Nowadays they support up to Java 17 LTS, a subset only as usual, mostly because Android was being left behind accessing the Java ecosystem on Maven central.</p><p>And even though now ART is updatable via PlayStore, all the way down to Android 12, they see no need to move beyond Java 17 subset, until most likely they start again missing on key libraries that decided to adopt newer features.</p><p>Also stuff like Panama, Loom, Vector, Valhala (if ever), don't count them ever being supported on ART.</p><p>At least, they managed to push into mainstream the closest idea of OSes like Oberon, Inferno, Java OS and co, where regardless of what think about the superiotity of UNIX clones, here they have to contend themselves with a managed userspace, something that Microsoft failed at with Longhorn, Singularity and Midori due to their internal politics.</p></div></td></tr></tbody></table></td></tr><tr id="44885758"><td></td></tr><tr id="44885273"><td></td></tr><tr id="44885070"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44885070" href="https://news.ycombinator.com/vote?id=44885070&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>I’ve got an old Ivy Bridge-EP Dell workstation they can borrow goddamn SSE4.1 is nearly old enough to drink.</p></div></td></tr></tbody></table></td></tr><tr id="44885278"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44885278" href="https://news.ycombinator.com/vote?id=44885278&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Yeah I was kind of shocked too. Core 2 could do both of those instruction sets. A used Dell Precision can be had for very little and probably would be grossly more efficient than whatever they're using.</p></div></td></tr></tbody></table></td></tr><tr id="44884959"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44884959" href="https://news.ycombinator.com/vote?id=44884959&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>wtf they cannot be still running opterons. it was to be that they are using qemu with g3 as a cpu profile.. right?</p></div></td></tr></tbody></table></td></tr><tr id="44885539"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44885539" href="https://news.ycombinator.com/vote?id=44885539&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>&gt;&gt; This has led to multiple “maintenance” versions in a short time, confusing users and wasting developer time, just to work around infrastructure issues outside the developer’s control.</p><p>What an entitled conclusion.</p></div></td></tr></tbody></table></td></tr><tr id="44884973"><td></td></tr><tr id="44885062"><td></td></tr><tr id="44885180"><td></td></tr><tr id="44884939"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44884939" href="https://news.ycombinator.com/vote?id=44884939&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Requiring (supposedly) universally available CPU instructions is one thing. Starting to require it in a minor version update (8.11.1 -&gt; 8.12.0) is a whole different thing. What the heck happened to semantic versioning? We can't even trust patch updates anymore these days. The version numbers might as well be git commit IDs.</p></div></td></tr></tbody></table></td></tr><tr id="44885430"><td><table><tbody><tr><td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td><center><a id="up_44885430" href="https://news.ycombinator.com/vote?id=44885430&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>&gt; The root cause: Google’s new aapt2 binary in AGP 8.12.0 started requiring CPU instructions (SSE4.1, SSSE3) that F-Droid’s build farm hardware doesn’t support.</p><p>Very intelligent move from Google. Now you can't compile "Hello World" without SSE4.1, SSSE3. /s</p><p>Are there any X86 tablets with Android ?</p></div></td></tr></tbody></table></td></tr><tr id="44885627"><td></td></tr><tr id="44884891"><td></td></tr><tr id="44885172"><td></td></tr><tr id="44884933"><td><table><tbody><tr><td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td><center><a id="up_44884933" href="https://news.ycombinator.com/vote?id=44884933&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>I have it installed. But the only thing I get updates for is Obtainium itself. There's no catalogue of apps, so I haven't installed anything via Obtainium.</p></div></td></tr></tbody></table></td></tr><tr id="44885051"><td></td></tr><tr id="44885400"><td></td></tr><tr id="44885068"><td></td></tr><tr id="44884942"><td></td></tr><tr id="44885143"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885143" href="https://news.ycombinator.com/vote?id=44885143&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>At this point it is not political, the banner mention a fact and a tragedy and link for donations to reputable NGOs.</p></div></td></tr></tbody></table></td></tr><tr id="44885078"><td><table><tbody><tr><td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td><center><a id="up_44885078" href="https://news.ycombinator.com/vote?id=44885078&amp;how=up&amp;goto=item%3Fid%3D44884709"></a></center></td><td><br>
<div><p>Wow. That banner slipped by me on first read. Thanks for pointing it out. I tried to go to the dev's webpage, and I needed a VPN to access it. If he actually believed what he said, he wouldn't block IPs, he'd attempt to educate. Seems like bad-faith xenophobia role-playing as compassion.</p></div></td></tr></tbody></table></td></tr><tr id="44885085"><td></td></tr></tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Search all text in New York City (466 pts)]]></title>
            <link>https://www.alltext.nyc/</link>
            <guid>44883304</guid>
            <pubDate>Wed, 13 Aug 2025 00:17:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.alltext.nyc/">https://www.alltext.nyc/</a>, See on <a href="https://news.ycombinator.com/item?id=44883304">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="region" aria-label="Notifications (F8)" tabindex="-1"><ol tabindex="-1"></ol></div><main><form novalidate="" action="/search"><div><a href="https://www.alltext.nyc/">all text in nyc</a></div></form></main><a href="https://www.alltext.nyc/about"><p><span>i</span></p></a></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Doom port to pure Go – Gore (115 pts)]]></title>
            <link>https://github.com/AndreRenaud/gore</link>
            <guid>44882441</guid>
            <pubDate>Tue, 12 Aug 2025 22:19:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/AndreRenaud/gore">https://github.com/AndreRenaud/gore</a>, See on <a href="https://news.ycombinator.com/item?id=44882441">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">🔥 GORE 🔥</h2><a id="user-content--gore-" aria-label="Permalink: 🔥 GORE 🔥" href="#-gore-"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">A Minimal Go Port of doomgeneric</h2><a id="user-content-a-minimal-go-port-of-doomgeneric" aria-label="Permalink: A Minimal Go Port of doomgeneric" href="#a-minimal-go-port-of-doomgeneric"></a></p>
<div data-snippet-clipboard-copy-content="    ██████╗  ██████╗  ██████╗ ███╗   ███╗
    ██╔══██╗██╔═══██╗██╔═══██╗████╗ ████║
    ██║  ██║██║   ██║██║   ██║██╔████╔██║
    ██║  ██║██║   ██║██║   ██║██║╚██╔╝██║
    ██████╔╝╚██████╔╝╚██████╔╝██║ ╚═╝ ██║
    ╚═════╝  ╚═════╝  ╚═════╝ ╚═╝     ╚═╝
                    .GO"><pre><code>    ██████╗  ██████╗  ██████╗ ███╗   ███╗
    ██╔══██╗██╔═══██╗██╔═══██╗████╗ ████║
    ██║  ██║██║   ██║██║   ██║██╔████╔██║
    ██║  ██║██║   ██║██║   ██║██║╚██╔╝██║
    ██████╔╝╚██████╔╝╚██████╔╝██║ ╚═╝ ██║
    ╚═════╝  ╚═════╝  ╚═════╝ ╚═╝     ╚═╝
                    .GO
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">TLDR</h2><a id="user-content-tldr" aria-label="Permalink: TLDR" href="#tldr"></a></p>
<p dir="auto">Tired of reading already?</p>
<div dir="auto" data-snippet-clipboard-copy-content="wget https://distro.ibiblio.org/slitaz/sources/packages/d/doom1.wad
go run github.com/AndreRenaud/gore/example/termdoom@latest"><pre>wget https://distro.ibiblio.org/slitaz/sources/packages/d/doom1.wad
go run github.com/AndreRenaud/gore/example/termdoom@latest</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">💀 WHAT FRESH HELL IS THIS?</h2><a id="user-content--what-fresh-hell-is-this" aria-label="Permalink: 💀 WHAT FRESH HELL IS THIS?" href="#-what-fresh-hell-is-this"></a></p>
<p dir="auto">This is a <strong>minimal, platform-agnostic Go port</strong> of the legendary DOOM engine, transpiled from the <code>doomgeneric</code> codebase. No CGo. No platform dependencies. Just pure, unadulterated demon-slaying action powered by the glory of Go's cross-compilation.</p>
<p dir="auto">The original C code was converted to Go using (modernc.org/ccgo/v4), by cznic (<a href="https://gitlab.com/cznic/doomgeneric.git" rel="nofollow">https://gitlab.com/cznic/doomgeneric.git</a>). This was then manually cleaned up to remove a lot of manual pointer manipulation, and make things more Go-ish, whilst still maintaining compatibility with the original Doom, and its overall structure.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔫 FEATURES</h2><a id="user-content--features" aria-label="Permalink: 🔫 FEATURES" href="#-features"></a></p>
<ul dir="auto">
<li>✅ <strong>Platform Agnostic</strong>: Runs anywhere Go runs</li>
<li>✅ <strong>Minimal Dependencies</strong>: Only requires Go standard library</li>
<li>✅ <strong>Multiple DOOM Versions</strong>: Supports DOOM, DOOM II, Ultimate DOOM, Final DOOM</li>
<li>✅ <strong>WAD File Support</strong>: Bring your own demons via WAD files</li>
<li>✅ <strong>Memory Safe</strong>: Go's GC protects you from buffer overflows (but not from Cacodemons) (WIP - 95% complete)</li>
<li>✅ <strong>Cross Compilation</strong>: Build for any target from any platform</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Missing Features</h3><a id="user-content-missing-features" aria-label="Permalink: Missing Features" href="#missing-features"></a></p>
<ul dir="auto">
<li>One instance per process: Still has a lot of the original global variables, which prevent multiple instances from running</li>
<li>Random exported consts: The original C code used the standard convention of all upper case for const/enum values. This results in the Go code assuming these are exported values, when really they're internal state info</li>
<li>Nice external API for state inspection: It would be good to be able to change the running state externally, without exposing everything in such a raw way</li>
<li><code>unsafe</code>: There are still some instances of <code>unsafe</code> in the code. It would be good to get rid of these to have better bounds access guarantees</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 INSTALLATION</h2><a id="user-content--installation" aria-label="Permalink: 🚀 INSTALLATION" href="#-installation"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Prerequisites</h3><a id="user-content-prerequisites" aria-label="Permalink: Prerequisites" href="#prerequisites"></a></p>
<ul dir="auto">
<li>Go 1.24+</li>
<li>A WAD file</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Running the examples</h3><a id="user-content-running-the-examples" aria-label="Permalink: Running the examples" href="#running-the-examples"></a></p>
<p dir="auto">These examples are both very minimal, and whilst technically run the game, they are not really fully complete games in their own right (ie: Missing key bindings etc...). They all assume that a Doom wad is available in the current directory. The shareware Doom wad is available at <a href="https://www.doomworld.com/classicdoom/info/shareware.php" rel="nofollow">https://www.doomworld.com/classicdoom/info/shareware.php</a>, or bring your own from a commercial copy.</p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/AndreRenaud/gore
cd gore"><pre>git clone https://github.com/AndreRenaud/gore
<span>cd</span> gore</pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Terminal based</h4><a id="user-content-terminal-based" aria-label="Permalink: Terminal based" href="#terminal-based"></a></p>
<p dir="auto">This example renders the Doom output using ANSI color codes suitable for a 256-bit color capable terminal. It has very limited input support, as terminals typically do not support key-up events, or control-key support. So <code>fire</code> has been remapped to <code>,</code>, and it is necessary to repeatedly tap keys to get them to continue, as opposed to press &amp; hold.</p>
<div dir="auto" data-snippet-clipboard-copy-content="go run ./example/termdoom -iwad doom1.wad"><pre>go run ./example/termdoom -iwad doom1.wad</pre></div>
<details open="">
  <summary>
    
    <span aria-label="Video description doom-ascii.mp4">doom-ascii.mp4</span>
    <span></span>
  </summary>

  <video src="https://github.com/user-attachments/assets/c461e38f-5948-4485-bf84-7b6982580a4e" data-canonical-src="https://github.com/user-attachments/assets/c461e38f-5948-4485-bf84-7b6982580a4e" controls="controls" muted="muted">

  </video>
</details>

<p dir="auto"><h4 tabindex="-1" dir="auto">Web based</h4><a id="user-content-web-based" aria-label="Permalink: Web based" href="#web-based"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="go run ./example/webserver"><pre>go run ./example/webserver</pre></div>
<p dir="auto">Now browse to <a href="http://localhost:8080/" rel="nofollow">http://localhost:8080</a> to play</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Ebitengine</h4><a id="user-content-ebitengine" aria-label="Permalink: Ebitengine" href="#ebitengine"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="go run ./example/ebitengine"><pre>go run ./example/ebitengine</pre></div>
<p dir="auto">The window should pop up to run Doom</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Getting WAD Files</h3><a id="user-content-getting-wad-files" aria-label="Permalink: Getting WAD Files" href="#getting-wad-files"></a></p>
<p dir="auto">You need the game data files (WAD) to run DOOM:</p>
<ul dir="auto">
<li><strong>Shareware</strong>: Download <code>doom1.wad</code> (free)</li>
<li><strong>Retail</strong>: Use your legally owned copy of DOOM.WAD or doom2.wad</li>
<li><strong>Ultimate DOOM</strong>: doom.wad from Ultimate DOOM</li>
<li><strong>Final DOOM</strong>: tnt.wad or plutonia.wad</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔧 PLATFORM IMPLEMENTATION</h2><a id="user-content--platform-implementation" aria-label="Permalink: 🔧 PLATFORM IMPLEMENTATION" href="#-platform-implementation"></a></p>
<p dir="auto">Similar to <code>doomgeneric</code>, the actual input/output is provided externally. The following interface is required:</p>
<div dir="auto" data-snippet-clipboard-copy-content="type DoomFrontend interface {
	DrawFrame(img *image.RGBA)
	SetTitle(title string)
	GetEvent(event *DoomEvent) bool
}"><pre><span>type</span> <span>DoomFrontend</span> <span>interface</span> {
	<span>DrawFrame</span>(<span>img</span> <span>*</span>image.<span>RGBA</span>)
	<span>SetTitle</span>(<span>title</span> <span>string</span>)
	<span>GetEvent</span>(<span>event</span> <span>*</span><span>DoomEvent</span>) <span>bool</span>
}</pre></div>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Function</th>
<th>Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>DrawFrame()</code></td>
<td>Render the frame to your display</td>
</tr>
<tr>
<td><code>SetTitle()</code></td>
<td>Set the window title as appropriate to the given WAD</td>
</tr>
<tr>
<td><code>GetEvent()</code></td>
<td>Report key presses/mouse movements</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">📜 LICENSE</h2><a id="user-content--license" aria-label="Permalink: 📜 LICENSE" href="#-license"></a></p>
<p dir="auto">DOOM source code is released under the GNU General Public License.<br>
This Go port maintains the same licensing terms.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A gentle introduction to anchor positioning (108 pts)]]></title>
            <link>https://webkit.org/blog/17240/a-gentle-introduction-to-anchor-positioning/</link>
            <guid>44882438</guid>
            <pubDate>Tue, 12 Aug 2025 22:18:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://webkit.org/blog/17240/a-gentle-introduction-to-anchor-positioning/">https://webkit.org/blog/17240/a-gentle-introduction-to-anchor-positioning/</a>, See on <a href="https://news.ycombinator.com/item?id=44882438">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-17240">
            
            

            <div>
                                
                <p>Anchor positioning allows you to place an element on the page based on where another element is. It makes it easier to create responsive menus and tooltips with less code using only CSS. Here’s how it works.</p>
<p>Let’s say you have an avatar in your nav, like this:</p>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-25.png" alt="Nav bar with two text options and one avatar"></figure>
<p>When you click the avatar, you want a menu to appear right below it. The clicking interaction can be handled with just CSS using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Popover_API">Popover API</a>. But once you click, where does your menu show up?</p>
<p>Figuring this out typically requires some JavaScript. But now, with anchor positioning, you can accomplish this with just a few lines of CSS. Anchor positioning will use where the avatar is to determine where the menu will go.</p>
<p>For example, you might want to place it just below the avatar, nice and left-aligned, like this:</p>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-26.png" alt="Nav bar with avatar's menu expanded and left aligned."></figure>
<p>Or you can have it hang out on the side of the avatar, having a party off to the right, like this:</p>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-27.png" alt="Nav bar with avatar's menu expanded to the right of the photo."></figure>
<p>You can position it in a number of places, but I think that first example looks good. It’s something you’d frequently see on the web on sites and web apps. Let’s walk through the code of how to make it happen.</p>
<p>The first step in placing your menu is letting it know about your avatar.</p>
<p>A great way to think about the relationship between your avatar and your menu is to think of your menu as if it’s anchored to your avatar. With that in mind, we’ll refer to your avatar as your anchor and your menu as your target.</p>
<p>You’ll name your anchor by declaring an <code>anchor-name</code> on the avatar element. Since your avatar represents your profile and is behaving like button, let’s give it a class of <code>profile-button</code>.</p>
<p>Here’s what it looks like:</p>
<pre><code>.profile-button {
  anchor-name: --profile-button;
}
</code></pre>
<p>Then you’ll go to your menu (your target) and declare a <code>position-anchor</code> where the value is the <code>anchor-name</code> of the anchor that you previously declared. This is what establishes the connection and tells the target about the anchor.</p>
<p>Let’s go to your target and declare it there:</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
}
</code></pre>
<p>And the final step is giving your menu an absolute or fixed position, like this:</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
  position: absolute;
}
</code></pre>
<p>Great, you’ve established your connection! Now you need to decide where to put your menu.</p>
<h2>Position-area</h2>
<p>One way to do this is to use the <code>position-area</code> property.</p>
<p>The <code>position-area</code> allows you to place your element on a nine-square grid where the anchor takes the center spot. The space that contains this grid is the containing block of the anchor.</p>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-28.png" alt="Black grid with nine squares and avatar in the center labeled left, center, right, top, bottom."></figure>
<p>You can use this grid to determine where you want to position your menu. Do you want the menu to show up on the top right? Great! You can write <code>top right</code>.</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
  position: absolute;
  position-area: top right;
}
</code></pre>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-29.png" alt="Black grid with blue box on the top right and avatar in the center."></figure>
<p>But here’s the thing about <code>top right</code> — it might feel like an intuitive way to describe where you want your target to be placed, but it’s actually not the best way to go about it.</p>
<p>Whenever possible, you want to use logical properties, not physical ones, in your CSS. That’s a more inclusive way to describe what you’re trying to do that doesn’t make assumptions about writing mode or language.</p>
<p>Here’s the same nine-square grid using logical properties:</p>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-30.png" alt="Black grid with avatar in the center with labels start/block-start, center, end/block-end, end/inline-end, start/inline-start"></figure>
<p>If you rewrite your above physical property as a logical one, you’d go from <code>top right</code> to <code>block-start inline-end</code>, like this:</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
  position: absolute;
  position-area: block-start inline-end;
}
</code></pre>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-33.png" alt="Black grid with avatar in the center and the top right block in blue with block-start inline-end in it"></figure>
<p>Do you want it to be on the bottom center of your grid? No problem, we’d write that logically as <code>block-end center</code>.</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
  position: absolute;
  position-area: block-end center;
}
</code></pre>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-32.png" alt="Black grid with avatar in the center and the bottom center block being blue with block-end center written on it"></figure>
<p>In your example, you want to put the menu under the avatar, left-aligned, to create that layout you’re going for. But, in this case, there’s a problem: the menu is wider than the avatar. So when you use <code>block-end center</code> as your <code>position-area</code> value, it crosses the grid lines and pokes out like this:</p>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-34.png" alt="Table showing values, flexbox and grid columns for Item Flow properties."></figure>
<p>Let’s take the grid lines away and see what that would look like.</p>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-35.png" alt="Nav bar with two text items and one avatar with expanded menu left aligned under avatar."></figure>
<p>That’s not the look you’re going for. How do you get that clean, left-alignment instead?</p>
<p>You can set <code>position-area</code> to <code>block-end span-inline-end</code>. Instead of centering the element, that’ll start the position directly below the avatar and let it spill over to end of the inline direction, like this:</p>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-36.png" alt="Table showing values, flexbox and grid columns for Item Flow properties."></figure>
<p>And here’s the code:</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
  position: absolute;
  position-area: block-end span-inline-end;
}
</code></pre>
<p>Great, exactly what you want!</p>
<p>The main logical values you can use are <code>start/block-start</code>, <code>end/block-end</code>, <code>start/inline-start</code> and <code>end/inline-end</code>. And, if you must, you can use the physical values: <code>left</code>, <code>center</code>, <code>right</code>, <code>top</code>, <code>bottom</code>.</p>
<p>For a full list of values you can use, check out MDN’s resource <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position-area">here</a>. Let’s get back to the positioning.</p>
<p>The positioning you set for your menu works on desktop, where you’re got plenty of space on the right for the element to spill over, but what about on mobile where your viewport is more narrow?</p>
<p>In mobile view, it’s probably better to do a right-align and allow the menu to spill over to the left instead. To do that, what we want is a way to tell the menu to switch to a different position when it’s run out of room.</p>
<p>And anchor positioning can do that! The benefit of anchor positioning is you get this responsive flexibility. It knows when there’s no room for your defined position and it’ll happily try something else. So let’s give it a different position to try when it’s out of space. To do that, you’ll use <code>position-try</code>.</p>
<p>Here’s what that looks like:</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
  position: absolute;
  position-area: block-end span-inline-end;
  position-try: block-end span-inline-start;
}
</code></pre>
<p><code>position-try</code> allows you to give your element a new position to try, hence the name. Here’s what the results look like in action.</p>
<figure><video src="https://webkit.org/wp-content/uploads/Screen-Recording-2025-07-15-at-3.35.57-PM.mov" playsinline="" muted="" autoplay="" loop=""><figcaption>Shows how menu under avatar shifts to the left when window size gets small enough.</figcaption></video></figure>
<h2>Anchor()</h2>
<p>The <code>anchor()</code> function uses a different framework than <code>position-area</code> for placing your target. Whereas <code>position-area</code> uses the concept of a grid to place the target, <code>anchor()</code> is all about placing your target based on the <em>edges</em> of your anchor.</p>
<p>It can only be used within the inset properties. Inset properties allow you to control where the element is located by declaring the offsets from its default positions. They can be the physical insets, which are <code>top</code> , <code>right</code>, <code>bottom</code>, and <code>left</code>, the logical inset properties, which are <code>inset-block-start</code> , <code>inset-block-end</code>,  <code>inset-inline-start</code> and <code>inset-inline-end</code>, and the short-hand inset properties, <code>inset-block</code> and <code>inset-inline</code> .</p>
<p>So to recreate the above effect where the left side of the avatar is aligned to the left side of the menu, you would use the <code>left</code> inset property and assign it to <code>anchor(left)</code>. Now the two sides are lined up to each other. And then to line up the top of the menu with the bottom of the avatar, you would set the <code>top</code> inset property of the menu to <code>anchor(bottom)</code>.</p>
<p>Here’s the code put together:</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
  position: absolute;
  left: anchor(left);
  top: anchor(bottom);
}
</code></pre>
<p>This uses physical properties, but once again, we really should be using logical properties, so let’s rewrite this.</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
  position: absolute;
  inset-inline-start: anchor(start);
  inset-block-start: anchor(end);
}
</code></pre>
<p>Here, <code>left</code> and <code>right</code> values are replaced with <code>inset-inline-start</code> and <code>inset-block-start</code>. For the <code>anchor()</code> function,  there are a few logical values to pick from. <code>start</code> and <code>end</code> allow you to set the start and end of the anchor’s containing block based on whatever axis the inset property you’re using is on. You also have <code>self-start</code> and <code>self-end</code> which are based on the anchor element’s content instead of its containing block.</p>
<p><code>anchor()</code> also allows you to be specific about what anchor you’re working with. You can pass in an optional <code>anchor-name</code> and be explicit about your anchor. If you did that here, here’s what it would look like:</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
  position: absolute;
  left: anchor(--profile-button left);
  top: anchor(--profile-button bottom);
}
</code></pre>
<p>But in this situation, you only have the one anchor, so if you don’t explicitly state it, it’ll use whatever you set as your <code>position-anchor</code>.</p>
<p>The <code>anchor()</code> function can also be used in the <code>calc()</code> function. So far, you’ve been aligning the menu with the avatar’s container which includes some padding. Let’s say you wanted to align it with just the photo minus the padding, what would you do?</p>
<p>One way is to use the <code>calc()</code> function and add the padding (which is 1.25em) to the <code>anchor(start)</code> value, like this:</p>
<pre><code>.profile-menu {
  position-anchor: --profile-button;
  position: absolute;
  inset-inline-start: calc(anchor(start) + 1.25em);
  inset-block-start: anchor(bottom);
}
</code></pre>
<p>That’ll get you this result (the pink line is to illustrate alignment):</p>
<figure><img decoding="async" src="https://webkit.org/wp-content/uploads/Image-37.png" alt="Table showing values, flexbox and grid columns for Item Flow properties."></figure>
<p><code>position-area</code> and <code>anchor()</code> both help you position your targets based on your anchor. Which one you use depends on your preferred mental model. Thinking of anchor positioning as a grid that you place things on can be a helpful and intuitive way of writing your code. But if you prefer to think of positioning as assigning values to the edges of your anchor, that’s fine too. They can both help you accomplish your goals.</p>
<p>To play around with the different ways to position your target, check out <a href="https://codepen.io/sarony/pen/EaVVpxz">this CodePen</a> I set up for you to experiment. Replace the <code>position-area</code> with your own values and see how the target element moves around. Try to put it in different places and give <code>anchor()</code> a spin too.</p>
<p>There are more things you can do with anchor positioning but the information in this blog post should get you pretty far. For more details on additional properties, checkout MDN’s resource <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning">here</a>.  You can also check out this fun game, <a href="https://anchoreum.com/">Anchoreum</a>, to teach you anchor positioning.</p>
<p>And let me know what you think of this post. Send me, Saron Yitbarek, a message on <a href="https://bsky.app/profile/saron.bsky.social">BlueSky</a>, or reach out to our other evangelists — Jen Simmons, on <a href="https://bsky.app/profile/jensimmons.bsky.social">Bluesky</a> / <a href="https://front-end.social/@jensimmons">Mastodon</a>, and Jon Davis, on <a href="https://bsky.app/profile/jondavis.bsky.social">Bluesky</a> / <a href="https://mastodon.social/@jondavis">Mastodon</a>. You can also follow WebKit <a href="https://www.linkedin.com/in/apple-webkit/">on LinkedIn</a>. If you find a bug or problem, please file a <a href="https://bugs.webkit.org/">WebKit bug report</a>.</p>

                            </div>
        </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Go 1.25 Release Notes (246 pts)]]></title>
            <link>https://go.dev/doc/go1.25</link>
            <guid>44881977</guid>
            <pubDate>Tue, 12 Aug 2025 21:25:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://go.dev/doc/go1.25">https://go.dev/doc/go1.25</a>, See on <a href="https://news.ycombinator.com/item?id=44881977">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main-content">
  


<article>
















<div>

<h2 id="introduction">Introduction to Go 1.25</h2>
<p>The latest Go release, version 1.25, arrives in <a href="https://go.dev/doc/devel/release#go1.25.0">August 2025</a>, six months after <a href="https://go.dev/doc/go1.24">Go 1.24</a>.
Most of its changes are in the implementation of the toolchain, runtime, and libraries.
As always, the release maintains the Go 1 promise of compatibility.
We expect almost all Go programs to continue to compile and run as before.</p>
<h2 id="language">Changes to the language</h2>
<!-- go.dev/issue/70128 -->
<p>There are no languages changes that affect Go programs in Go 1.25.
However, in the <a href="https://go.dev/ref/spec">language specification</a> the notion of core types
has been removed in favor of dedicated prose.
See the respective <a href="https://go.dev/blog/coretypes">blog post</a> for more information.</p>

<h3 id="go-command">Go command</h3>
<p>The <code>go build</code> <code>-asan</code> option now defaults to doing leak detection at
program exit.
This will report an error if memory allocated by C is not freed and is
not referenced by any other memory allocated by either C or Go.
These new error reports may be disabled by setting
<code>ASAN_OPTIONS=detect_leaks=0</code> in the environment when running the
program.</p>
<!-- go.dev/issue/71867 -->
<p>The Go distribution will include fewer prebuilt tool binaries. Core
toolchain binaries such as the compiler and linker will still be
included, but tools not invoked by build or test operations will be built
and run by <code>go tool</code> as needed.</p>
<!-- go.dev/issue/42965 -->
<p>The new <code>go.mod</code> <code>ignore</code> <a href="https://go.dev/ref/mod#go-mod-file-ignore">directive</a> can be used to
specify directories the <code>go</code> command should ignore. Files in these directories
and their subdirectories  will be ignored by the <code>go</code> command when matching package
patterns, such as <code>all</code> or <code>./...</code>, but will still be included in module zip files.</p>
<!-- go.dev/issue/68106 -->
<p>The new <code>go doc</code> <code>-http</code> option will start a documentation server showing
documentation for the requested object, and open the documentation in a browser
window.</p>
<!-- go.dev/issue/69712 -->
<p>The new <code>go version -m -json</code> option will print the JSON encodings of the
<code>runtime/debug.BuildInfo</code> structures embedded in the given Go binary files.</p>
<!-- go.dev/issue/34055 -->
<p>The <code>go</code> command now supports using a subdirectory of a repository as the
path for a module root, when <a href="https://go.dev/ref/mod#vcs-find">resolving a module path</a> using the syntax
<code>&lt;meta name="go-import" content="root-path vcs repo-url subdir"&gt;</code> to indicate
that the <code>root-path</code> corresponds to the <code>subdir</code> of the <code>repo-url</code> with
version control system <code>vcs</code>.</p>
<!-- go.dev/issue/71294 -->
<p>The new <code>work</code> package pattern matches all packages in the work (formerly called main)
modules: either the single work module in module mode or the set of workspace modules
in workspace mode.</p>
<!-- go.dev/issue/65847 -->
<p>When the go command updates the <code>go</code> line in a <code>go.mod</code> or <code>go.work</code> file,
it <a href="https://go.dev/ref/mod#go-mod-file-toolchain">no longer</a> adds a toolchain line
specifying the command’s current version.</p>
<h3 id="vet">Vet</h3>
<p>The <code>go vet</code> command includes new analyzers:</p>
<!-- go.dev/issue/18022 -->
<ul>
<li><a href="https://pkg.go.dev/golang.org/x/tools/go/analysis/passes/waitgroup" rel="noreferrer" target="_blank">waitgroup</a>,
which reports misplaced calls to <a href="https://go.dev/pkg/sync#WaitGroup.Add"><code>sync.WaitGroup.Add</code></a>; and</li>
</ul>
<!-- go.dev/issue/28308 -->
<ul>
<li><a href="https://pkg.go.dev/golang.org/x/tools/go/analysis/passes/hostport" rel="noreferrer" target="_blank">hostport</a>,
which reports uses of <code>fmt.Sprintf("%s:%d", host, port)</code> to
construct addresses for <a href="https://go.dev/pkg/net#Dial"><code>net.Dial</code></a>, as these will not work with
IPv6; instead it suggests using <a href="https://go.dev/pkg/net#JoinHostPort"><code>net.JoinHostPort</code></a>.</li>
</ul>
<h2 id="runtime">Runtime</h2>
<h3 id="container-aware-gomaxprocs">Container-aware <code>GOMAXPROCS</code></h3>
<!-- go.dev/issue/73193 -->
<p>The default behavior of the <code>GOMAXPROCS</code> has changed. In prior versions of Go,
<code>GOMAXPROCS</code> defaults to the number of logical CPUs available at startup
(<a href="https://go.dev/pkg/runtime#NumCPU"><code>runtime.NumCPU</code></a>). Go 1.25 introduces two changes:</p>
<ol>
<li>
<p>On Linux, the runtime considers the CPU bandwidth limit of the cgroup
containing the process, if any. If the CPU bandwidth limit is lower than the
number of logical CPUs available, <code>GOMAXPROCS</code> will default to the lower
limit. In container runtime systems like Kubernetes, cgroup CPU bandwidth
limits generally correspond to the “CPU limit” option. The Go runtime does
not consider the “CPU requests” option.</p>
</li>
<li>
<p>On all OSes, the runtime periodically updates <code>GOMAXPROCS</code> if the number
of logical CPUs available or the cgroup CPU bandwidth limit change.</p>
</li>
</ol>
<p>Both of these behaviors are automatically disabled if <code>GOMAXPROCS</code> is set
manually via the <code>GOMAXPROCS</code> environment variable or a call to
<a href="https://go.dev/pkg/runtime#GOMAXPROCS"><code>runtime.GOMAXPROCS</code></a>. They can also be disabled explicitly with the <a href="https://go.dev/doc/godebug">GODEBUG
settings</a> <code>containermaxprocs=0</code> and <code>updatemaxprocs=0</code>,
respectively.</p>
<p>In order to support reading updated cgroup limits, the runtime will keep cached
file descriptors for the cgroup files for the duration of the process lifetime.</p>
<h3 id="new-experimental-garbage-collector">New experimental garbage collector</h3>
<!-- go.dev/issue/73581 -->
<p>A new garbage collector is now available as an experiment. This garbage
collector’s design improves the performance of marking and scanning small objects
through better locality and CPU scalability. Benchmark result vary, but we expect
somewhere between a 10—40% reduction in garbage collection overhead in real-world
programs that heavily use the garbage collector.</p>
<p>The new garbage collector may be enabled by setting <code>GOEXPERIMENT=greenteagc</code>
at build time. We expect the design to continue to evolve and improve. To that
end, we encourage Go developers to try it out and report back their experiences.
See the <a href="https://go.dev/issue/73581">GitHub issue</a> for more details on the design and
instructions for sharing feedback.</p>
<h3 id="trace-flight-recorder">Trace flight recorder</h3>
<!-- go.dev/issue/63185 -->
<p><a href="https://go.dev/pkg/runtime/trace">Runtime execution traces</a> have long provided a powerful,
but expensive way to understand and debug the low-level behavior of an
application. Unfortunately, because of their size and the cost of continuously
writing an execution trace, they were generally impractical for debugging rare
events.</p>
<p>The new <a href="https://go.dev/pkg/runtime/trace#FlightRecorder"><code>runtime/trace.FlightRecorder</code></a> API
provides a lightweight way to capture a runtime execution trace by continuously
recording the trace into an in-memory ring buffer. When a significant event
occurs, a program can call
<a href="https://go.dev/pkg/runtime/trace#FlightRecorder.WriteTo"><code>FlightRecorder.WriteTo</code></a> to
snapshot the last few seconds of the trace to a file. This approach produces a
much smaller trace by enabling applications to capture only the traces that
matter.</p>
<p>The length of time and amount of data captured by a
<a href="https://go.dev/pkg/runtime/trace#FlightRecorder"><code>FlightRecorder</code></a> may be configured within
the <a href="https://go.dev/pkg/runtime/trace#FlightRecorderConfig"><code>FlightRecorderConfig</code></a>.</p>
<h3 id="change-to-unhandled-panic-output">Change to unhandled panic output</h3>
<!-- go.dev/issue/71517 -->
<p>The message printed when a program exits due to an unhandled panic
that was recovered and repanicked no longer repeats the text of
the panic value.</p>
<p>Previously, a program which panicked with <code>panic("PANIC")</code>,
recovered the panic, and then repanicked with the original
value would print:</p>
<pre><code>panic: PANIC [recovered]
  panic: PANIC
</code></pre>
<p>This program will now print:</p>
<pre><code>panic: PANIC [recovered, repanicked]
</code></pre>
<h3 id="vma-names-on-linux">VMA names on Linux</h3>
<!-- go.dev/issue/71546 -->
<p>On Linux systems with kernel support for anonymous virtual memory area (VMA) names
(<code>CONFIG_ANON_VMA_NAME</code>), the Go runtime will annotate anonymous memory
mappings with context about their purpose. e.g., <code>[anon: Go: heap]</code> for heap
memory. This can be disabled with the <a href="https://go.dev/doc/godebug">GODEBUG setting</a>
<code>decoratemappings=0</code>.</p>
<h2 id="compiler">Compiler</h2>
<h3 id="nil-pointer-bug"><code>nil</code> pointer bug</h3>
<!-- https://go.dev/issue/72860, CL 657715 -->
<p>This release fixes a <a href="https://go.dev/issue/72860">compiler bug</a>, introduced in Go 1.21, that
could incorrectly delay nil pointer checks. Programs like the following, which
used to execute successfully (incorrectly), will now (correctly) panic with a
nil-pointer exception:</p>
<pre><code>package main

import "os"

func main() {
    f, err := os.Open("nonExistentFile")
    name := f.Name()
    if err != nil {
        return
    }
    println(name)
}
</code></pre>
<p>This program is incorrect because it uses the result of <code>os.Open</code> before
checking the error. If <code>err</code> is non-nil, then the <code>f</code> result may be nil, in
which case <code>f.Name()</code> should panic. However, in Go versions 1.21 through 1.24,
the compiler incorrectly delayed the nil check until <em>after</em> the error check,
causing the program to execute successfully, in violation of the Go spec. In Go
1.25, it will no longer run successfully. If this change is affecting your code,
the solution is to put the non-nil error check earlier in your code, preferably
immediately after the error-generating statement.</p>
<h3 id="dwarf5-support">DWARF5 support</h3>
<!-- https://go.dev/issue/26379 -->
<p>The compiler and linker in Go 1.25 now generate debug information
using <a href="https://dwarfstd.org/dwarf5std.html" rel="noreferrer" target="_blank">DWARF version 5</a>. The
newer DWARF version reduces the space required for debugging
information in Go binaries, and reduces the time for linking,
especially for large Go binaries.
DWARF 5 generation can be disabled by setting the environment
variable <code>GOEXPERIMENT=nodwarf5</code> at build time
(this fallback may be removed in a future Go release).</p>
<h3 id="faster-slices">Faster slices</h3>
<!-- CLs 653856, 657937, 663795, 664299 -->
<p>The compiler can now allocate the backing store for slices on the
stack in more situations, which improves performance. This change has
the potential to amplify the effects of incorrect
<a href="https://go.dev/pkg/unsafe#Pointer">unsafe.Pointer</a> usage, see for example <a href="https://go.dev/issue/73199">issue
73199</a>. In order to track down these problems, the
<a href="https://pkg.go.dev/golang.org/x/tools/cmd/bisect" rel="noreferrer" target="_blank">bisect tool</a> can be
used to find the allocation causing trouble using the
<code>-compile=variablemake</code> flag. All such new stack allocations can also
be turned off using <code>-gcflags=all=-d=variablemakehash=n</code>.</p>
<h2 id="linker">Linker</h2>
<!-- CL 660996 -->
<p>The linker now accepts a <code>-funcalign=N</code> command line option, which
specifies the alignment of function entries.
The default value is platform-dependent, and is unchanged in this
release.</p>
<h2 id="library">Standard library</h2>
<h3 id="new-testingsynctest-package">New testing/synctest package</h3>
<!-- go.dev/issue/67434, go.dev/issue/73567 -->
<p>The new <a href="https://go.dev/pkg/testing/synctest"><code>testing/synctest</code></a> package
provides support for testing concurrent code.</p>
<p>The <a href="https://go.dev/pkg/testing/synctest#Test"><code>Test</code></a> function runs a test function in an isolated
“bubble”. Within the bubble, time is virtualized: <a href="https://go.dev/pkg/time"><code>time</code></a> package
functions operate on a fake clock and the clock moves forward instantaneously if
all goroutines in the bubble are blocked.</p>
<p>The <a href="https://go.dev/pkg/testing/synctest#Wait"><code>Wait</code></a> function waits for all goroutines in the
current bubble to block.</p>
<p>This package was first available in Go 1.24 under <code>GOEXPERIMENT=synctest</code>, with
a slightly different API. The experiment has now graduated to general
availability. The old API is still present if <code>GOEXPERIMENT=synctest</code> is set,
but will be removed in Go 1.26.</p>
<h3 id="json_v2">New experimental encoding/json/v2 package</h3>
<p>Go 1.25 includes a new, experimental JSON implementation,
which can be enabled by setting the environment variable
<code>GOEXPERIMENT=jsonv2</code> at build time.</p>
<p>When enabled, two new packages are available:</p>
<ul>
<li>The <a href="https://go.dev/pkg/encoding/json/v2"><code>encoding/json/v2</code></a> package is
a major revision of the <code>encoding/json</code> package.</li>
<li>The <a href="https://go.dev/pkg/encoding/json/jsontext"><code>encoding/json/jsontext</code></a> package
provides lower-level processing of JSON syntax.</li>
</ul>
<p>In addition, when the “jsonv2” GOEXPERIMENT is enabled:</p>
<ul>
<li>The <a href="https://go.dev/pkg/encoding/json"><code>encoding/json</code></a> package
uses the new JSON implementation.
Marshaling and unmarshaling behavior is unaffected,
but the text of errors returned by package function may change.</li>
<li>The <a href="https://go.dev/pkg/encoding/json"><code>encoding/json</code></a> package contains
a number of new options which may be used
to configure the marshaler and unmarshaler.</li>
</ul>
<p>The new implementation performs substantially better than
the existing one under many scenarios. In general,
encoding performance is at parity between the implementations
and decoding is substantially faster in the new one.
See the <a href="https://github.com/go-json-experiment/jsonbench" rel="noreferrer" target="_blank">github.com/go-json-experiment/jsonbench</a>
repository for more detailed analysis.</p>
<p>See the <a href="https://go.dev/issue/71497">proposal issue</a> for more details.</p>
<p>We encourage users of <a href="https://go.dev/pkg/encoding/json"><code>encoding/json</code></a> to test
their programs with <code>GOEXPERIMENT=jsonv2</code> enabled to help detect
any compatibility issues with the new implementation.</p>
<p>We expect the design of <a href="https://go.dev/pkg/encoding/json/v2"><code>encoding/json/v2</code></a>
to continue to evolve. We encourage developers to try out the new
API and provide feedback on the <a href="https://go.dev/issue/71497">proposal issue</a>.</p>
<h3 id="minor_library_changes">Minor changes to the library</h3>
<h4 id="archivetarpkgarchivetar"><a href="https://go.dev/pkg/archive/tar/"><code>archive/tar</code></a></h4>
<p>The <a href="https://go.dev/pkg/archive/tar#Writer.AddFS"><code>Writer.AddFS</code></a> implementation now supports symbolic links
for filesystems that implement <a href="https://go.dev/pkg/io/fs#ReadLinkFS"><code>io/fs.ReadLinkFS</code></a>.</p>
<h4 id="encodingasn1pkgencodingasn1"><a href="https://go.dev/pkg/encoding/asn1/"><code>encoding/asn1</code></a></h4>
<p><a href="https://go.dev/pkg/encoding/asn1#Unmarshal"><code>Unmarshal</code></a> and <a href="https://go.dev/pkg/encoding/asn1#UnmarshalWithParams"><code>UnmarshalWithParams</code></a>
now parse the ASN.1 types T61String and BMPString more consistently. This may
result in some previously accepted malformed encodings now being rejected.</p>
<h4 id="cryptopkgcrypto"><a href="https://go.dev/pkg/crypto/"><code>crypto</code></a></h4>
<p><a href="https://go.dev/pkg/crypto#MessageSigner"><code>MessageSigner</code></a> is a new signing interface that can
be implemented by signers that wish to hash the message to be signed themselves.
A new function is also introduced, <a href="https://go.dev/pkg/crypto#SignMessage"><code>SignMessage</code></a>,
which attempts to upgrade a <a href="https://go.dev/pkg/crypto#Signer"><code>Signer</code></a> interface to
<a href="https://go.dev/pkg/crypto#MessageSigner"><code>MessageSigner</code></a>, using the
<a href="https://go.dev/pkg/crypto#MessageSigner.SignMessage"><code>MessageSigner.SignMessage</code></a> method if
successful, and <a href="https://go.dev/pkg/crypto#Signer.Sign"><code>Signer.Sign</code></a> if not. This can be
used when code wishes to support both <a href="https://go.dev/pkg/crypto#Signer"><code>Signer</code></a> and
<a href="https://go.dev/pkg/crypto#MessageSigner"><code>MessageSigner</code></a>.</p>
<p>Changing the <code>fips140</code> <a href="https://go.dev/doc/godebug">GODEBUG setting</a> after the program has started is now a no-op.
Previously, it was documented as not allowed, and could cause a panic if changed.</p>
<p>SHA-1, SHA-256, and SHA-512 are now slower on amd64 when AVX2 instructions are not available.
All server processors (and most others) produced since 2015 support AVX2.</p>
<h4 id="cryptoecdsapkgcryptoecdsa"><a href="https://go.dev/pkg/crypto/ecdsa/"><code>crypto/ecdsa</code></a></h4>
<p>The new <a href="https://go.dev/pkg/crypto/ecdsa#ParseRawPrivateKey"><code>ParseRawPrivateKey</code></a>,
<a href="https://go.dev/pkg/crypto/ecdsa#ParseUncompressedPublicKey"><code>ParseUncompressedPublicKey</code></a>,
<a href="https://go.dev/pkg/crypto/ecdsa#PrivateKey.Bytes"><code>PrivateKey.Bytes</code></a>, and
<a href="https://go.dev/pkg/crypto/ecdsa#PublicKey.Bytes"><code>PublicKey.Bytes</code></a> functions and methods
implement low-level encodings, replacing the need to use
<a href="https://go.dev/pkg/crypto/elliptic"><code>crypto/elliptic</code></a> or <a href="https://go.dev/pkg/math/big"><code>math/big</code></a>
functions and methods.</p>
<p>When FIPS 140-3 mode is enabled, signing is now four times faster, matching the
performance of non-FIPS mode.</p>
<h4 id="cryptoed25519pkgcryptoed25519"><a href="https://go.dev/pkg/crypto/ed25519/"><code>crypto/ed25519</code></a></h4>
<p>When FIPS 140-3 mode is enabled, signing is now four times faster, matching the
performance of non-FIPS mode.</p>
<h4 id="cryptoellipticpkgcryptoelliptic"><a href="https://go.dev/pkg/crypto/elliptic/"><code>crypto/elliptic</code></a></h4>
<p>The hidden and undocumented <code>Inverse</code> and <code>CombinedMult</code> methods on some
<a href="https://go.dev/pkg/crypto/elliptic#Curve"><code>Curve</code></a> implementations have been removed.</p>
<h4 id="cryptorsapkgcryptorsa"><a href="https://go.dev/pkg/crypto/rsa/"><code>crypto/rsa</code></a></h4>
<p><a href="https://go.dev/pkg/crypto/rsa#PublicKey"><code>PublicKey</code></a> no longer claims that the modulus value
is treated as secret. <a href="https://go.dev/pkg/crypto/rsa#VerifyPKCS1v15"><code>VerifyPKCS1v15</code></a> and
<a href="https://go.dev/pkg/crypto/rsa#VerifyPSS"><code>VerifyPSS</code></a> already warned that all inputs are
public and could be leaked, and there are mathematical attacks that can recover
the modulus from other public values.</p>
<p>Key generation is now three times faster.</p>
<h4 id="cryptosha1pkgcryptosha1"><a href="https://go.dev/pkg/crypto/sha1/"><code>crypto/sha1</code></a></h4>
<p>Hashing is now two times faster on amd64 when SHA-NI instructions are available.</p>
<h4 id="cryptosha3pkgcryptosha3"><a href="https://go.dev/pkg/crypto/sha3/"><code>crypto/sha3</code></a></h4>
<p>The new <a href="https://go.dev/pkg/crypto/sha3#SHA3.Clone"><code>SHA3.Clone</code></a> method implements <a href="https://go.dev/pkg/hash#Cloner"><code>hash.Cloner</code></a>.</p>
<p>Hashing is now two times faster on Apple M processors.</p>
<h4 id="cryptotlspkgcryptotls"><a href="https://go.dev/pkg/crypto/tls/"><code>crypto/tls</code></a></h4>
<p>The new <a href="https://go.dev/pkg/crypto/tls#ConnectionState.CurveID"><code>ConnectionState.CurveID</code></a>
field exposes the key exchange mechanism used to establish the connection.</p>
<p>The new <a href="https://go.dev/pkg/crypto/tls#Config.GetEncryptedClientHelloKeys"><code>Config.GetEncryptedClientHelloKeys</code></a>
callback can be used to set the <a href="https://go.dev/pkg/crypto/tls#EncryptedClientHelloKey"><code>EncryptedClientHelloKey</code></a>s
for a server to use when a client sends an Encrypted Client Hello extension.</p>
<p>SHA-1 signature algorithms are now disallowed in TLS 1.2 handshakes, per
<a href="https://www.rfc-editor.org/rfc/rfc9155.html" rel="noreferrer" target="_blank">RFC 9155</a>.
They can be re-enabled with the <a href="https://go.dev/doc/godebug">GODEBUG setting</a> <code>tlssha1=1</code>.</p>
<p>When <a href="https://go.dev/doc/security/fips140">FIPS 140-3 mode</a> is enabled, Extended Master Secret
is now required in TLS 1.2, and Ed25519 and X25519MLKEM768 are now allowed.</p>
<p>TLS servers now prefer the highest supported protocol version, even if it isn’t
the client’s most preferred protocol version.</p>
<!-- CL 687855 -->
<p>Both TLS clients and servers are now stricter in following the specifications
and in rejecting off-spec behavior. Connections with compliant peers should be
unaffected.</p>
<h4 id="cryptox509pkgcryptox509"><a href="https://go.dev/pkg/crypto/x509/"><code>crypto/x509</code></a></h4>
<p><a href="https://go.dev/pkg/crypto/x509#CreateCertificate"><code>CreateCertificate</code></a>,
<a href="https://go.dev/pkg/crypto/x509#CreateCertificateRequest"><code>CreateCertificateRequest</code></a>, and
<a href="https://go.dev/pkg/crypto/x509#CreateRevocationList"><code>CreateRevocationList</code></a> can now accept a
<a href="https://go.dev/pkg/crypto#MessageSigner"><code>crypto.MessageSigner</code></a> signing interface as well as
<a href="https://go.dev/pkg/crypto#Signer"><code>crypto.Signer</code></a>. This allows these functions to use
signers which implement “one-shot” signing interfaces, where hashing is done as
part of the signing operation, instead of by the caller.</p>
<p><a href="https://go.dev/pkg/crypto/x509#CreateCertificate"><code>CreateCertificate</code></a> now uses truncated
SHA-256 to populate the <code>SubjectKeyId</code> if it is missing.
The <a href="https://go.dev/doc/godebug">GODEBUG setting</a> <code>x509sha256skid=0</code> reverts to SHA-1.</p>
<p><a href="https://go.dev/pkg/crypto/x509#ParseCertificate"><code>ParseCertificate</code></a> now rejects certificates
which contain a BasicConstraints extension that contains a negative pathLenConstraint.</p>
<p><a href="https://go.dev/pkg/crypto/x509#ParseCertificate"><code>ParseCertificate</code></a> now handles strings encoded
with the ASN.1 T61String and BMPString types more consistently. This may result in
some previously accepted malformed encodings now being rejected.</p>
<h4 id="debugelfpkgdebugelf"><a href="https://go.dev/pkg/debug/elf/"><code>debug/elf</code></a></h4>
<p>The <a href="https://go.dev/pkg/debug/elf"><code>debug/elf</code></a> package adds two new constants:</p>
<ul>
<li><a href="https://go.dev/pkg/debug/elf#PT_RISCV_ATTRIBUTES"><code>PT_RISCV_ATTRIBUTES</code></a></li>
<li><a href="https://go.dev/pkg/debug/elf#SHT_RISCV_ATTRIBUTES"><code>SHT_RISCV_ATTRIBUTES</code></a>
for RISC-V ELF parsing.</li>
</ul>
<h4 id="goastpkggoast"><a href="https://go.dev/pkg/go/ast/"><code>go/ast</code></a></h4>
<p>The <a href="https://go.dev/pkg/ast#FilterPackage"><code>FilterPackage</code></a>, <a href="https://go.dev/pkg/ast#PackageExports"><code>PackageExports</code></a>, and
<a href="https://go.dev/pkg/ast#MergePackageFiles"><code>MergePackageFiles</code></a> functions, and the <a href="https://go.dev/pkg/go/ast#MergeMode"><code>MergeMode</code></a> type and its
constants, are all deprecated, as they are for use only with the
long-deprecated <a href="https://go.dev/pkg/ast#Object"><code>Object</code></a> and <a href="https://go.dev/pkg/ast#Package"><code>Package</code></a> machinery.</p>
<p>The new <a href="https://go.dev/pkg/go/ast#PreorderStack"><code>PreorderStack</code></a> function, like <a href="https://go.dev/pkg/go/ast#Inspect"><code>Inspect</code></a>, traverses a syntax
tree and provides control over descent into subtrees, but as a
convenience it also provides the stack of enclosing nodes at each
point.</p>
<h4 id="goparserpkggoparser"><a href="https://go.dev/pkg/go/parser/"><code>go/parser</code></a></h4>
<p>The <a href="https://go.dev/pkg/go/parser#ParseDir"><code>ParseDir</code></a> function is deprecated.</p>
<h4 id="gotokenpkggotoken"><a href="https://go.dev/pkg/go/token/"><code>go/token</code></a></h4>
<p>The new <a href="https://go.dev/pkg/go/token#FileSet.AddExistingFiles"><code>FileSet.AddExistingFiles</code></a> method enables existing
<a href="https://go.dev/pkg/go/token#File"><code>File</code></a>s to be added to a <a href="https://go.dev/pkg/go/token#FileSet"><code>FileSet</code></a>,
or a <a href="https://go.dev/pkg/go/token#FileSet"><code>FileSet</code></a> to be constructed for an arbitrary
set of <a href="https://go.dev/pkg/go/token#File"><code>File</code></a>s, alleviating the problems associated with a single global
<a href="https://go.dev/pkg/go/token#FileSet"><code>FileSet</code></a> in long-lived applications.</p>
<h4 id="gotypespkggotypes"><a href="https://go.dev/pkg/go/types/"><code>go/types</code></a></h4>
<p><a href="https://go.dev/pkg/go/types#Var"><code>Var</code></a> now has a <a href="https://go.dev/pkg/go/types#Var.Kind"><code>Var.Kind</code></a> method that classifies the variable as one
of: package-level, receiver, parameter, result, local variable, or
a struct field.</p>
<p>The new <a href="https://go.dev/pkg/go/types#LookupSelection"><code>LookupSelection</code></a> function looks up the field or method of a
given name and receiver type, like the existing <a href="https://go.dev/pkg/go/types#LookupFieldOrMethod"><code>LookupFieldOrMethod</code></a>
function, but returns the result in the form of a <a href="https://go.dev/pkg/go/types#Selection"><code>Selection</code></a>.</p>
<h4 id="hashpkghash"><a href="https://go.dev/pkg/hash/"><code>hash</code></a></h4>
<p>The new <a href="https://go.dev/pkg/hash#XOF"><code>XOF</code></a> interface can be implemented by “extendable output
functions”, which are hash functions with arbitrary or unlimited output length
such as <a href="https://go.dev/pkg/crypto/sha3#SHAKE">SHAKE</a>.</p>
<p>Hashes implementing the new <a href="https://go.dev/pkg/hash#Cloner"><code>Cloner</code></a> interface can return a copy of their state.
All standard library <a href="https://go.dev/pkg/hash#Hash"><code>Hash</code></a> implementations now implement <a href="https://go.dev/pkg/hash#Cloner"><code>Cloner</code></a>.</p>
<h4 id="hashmaphashpkghashmaphash"><a href="https://go.dev/pkg/hash/maphash/"><code>hash/maphash</code></a></h4>
<p>The new <a href="https://go.dev/pkg/hash/maphash#Hash.Clone"><code>Hash.Clone</code></a> method implements <a href="https://go.dev/pkg/hash#Cloner"><code>hash.Cloner</code></a>.</p>
<h4 id="iofspkgiofs"><a href="https://go.dev/pkg/io/fs/"><code>io/fs</code></a></h4>
<p>A new <a href="https://go.dev/pkg/io/fs#ReadLinkFS"><code>ReadLinkFS</code></a> interface provides the ability to read symbolic links in a filesystem.</p>
<h4 id="logslogpkglogslog"><a href="https://go.dev/pkg/log/slog/"><code>log/slog</code></a></h4>
<p><a href="https://go.dev/pkg/log/slog#GroupAttrs"><code>GroupAttrs</code></a> creates a group <a href="https://go.dev/pkg/log/slog#Attr"><code>Attr</code></a> from a slice of <a href="https://go.dev/pkg/log/slog#Attr"><code>Attr</code></a> values.</p>
<p><a href="https://go.dev/pkg/log/slog#Record"><code>Record</code></a> now has a <a href="https://go.dev/pkg/log/slog#Record.Source"><code>Source</code></a> method,
returning its source location or nil if unavailable.</p>
<h4 id="mimemultipartpkgmimemultipart"><a href="https://go.dev/pkg/mime/multipart/"><code>mime/multipart</code></a></h4>
<p>The new helper function <a href="https://go.dev/pkg/mime/multipart#FileContentDisposition"><code>FileContentDisposition</code></a> builds multipart
Content-Disposition header fields.</p>
<h4 id="netpkgnet"><a href="https://go.dev/pkg/net/"><code>net</code></a></h4>
<p><a href="https://go.dev/pkg/net#LookupMX"><code>LookupMX</code></a> and <a href="https://go.dev/pkg/net#Resolver.LookupMX"><code>Resolver.LookupMX</code></a> now return DNS names that look
like valid IP address, as well as valid domain names.
Previously if a name server returned an IP address as a DNS name,
<a href="https://go.dev/pkg/net#LookupMX"><code>LookupMX</code></a> would discard it, as required by the RFCs.
However, name servers in practice do sometimes return IP addresses.</p>
<p>On Windows, <a href="https://go.dev/pkg/net#ListenMulticastUDP"><code>ListenMulticastUDP</code></a> now supports IPv6 addresses.</p>
<p>On Windows, it is now possible to convert between an <a href="https://go.dev/pkg/os#File"><code>os.File</code></a>
and a network connection. Specifcally, the <a href="https://go.dev/pkg/net#FileConn"><code>FileConn</code></a>,
<a href="https://go.dev/pkg/net#FilePacketConn"><code>FilePacketConn</code></a>, and
<a href="https://go.dev/pkg/net#FileListener"><code>FileListener</code></a> functions are now implemented, and
return a network connection or listener corresponding to an open file.
Similarly, the <code>File</code> methods of <a href="https://go.dev/pkg/net#TCPConn.File"><code>TCPConn</code></a>,
<a href="https://go.dev/pkg/net#UDPConn.File"><code>UDPConn</code></a>, <a href="https://go.dev/pkg/net#UnixConn.File"><code>UnixConn</code></a>,
<a href="https://go.dev/pkg/net#IPConn.File"><code>IPConn</code></a>, <a href="https://go.dev/pkg/net#TCPListener.File"><code>TCPListener</code></a>,
and <a href="https://go.dev/pkg/net#UnixListener.File"><code>UnixListener</code></a> are now implemented, and return
the underlying <a href="https://go.dev/pkg/os#File"><code>os.File</code></a> of a network connection.</p>
<h4 id="nethttppkgnethttp"><a href="https://go.dev/pkg/net/http/"><code>net/http</code></a></h4>
<p>The new <a href="https://go.dev/pkg/net/http#CrossOriginProtection"><code>CrossOriginProtection</code></a> implements protections against <a href="https://developer.mozilla.org/en-US/docs/Web/Security/Attacks/CSRF" rel="noreferrer" target="_blank">Cross-Site
Request Forgery (CSRF)</a> by rejecting non-safe cross-origin browser requests.
It uses <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-Site" rel="noreferrer" target="_blank">modern browser Fetch metadata</a>, doesn’t require tokens
or cookies, and supports origin-based and pattern-based bypasses.</p>
<h4 id="ospkgos"><a href="https://go.dev/pkg/os/"><code>os</code></a></h4>
<p>On Windows, <a href="https://go.dev/pkg/os#NewFile"><code>NewFile</code></a> now supports handles opened for asynchronous I/O (that is,
<a href="https://go.dev/pkg/syscall#FILE_FLAG_OVERLAPPED"><code>syscall.FILE_FLAG_OVERLAPPED</code></a> is specified in the <a href="https://go.dev/pkg/syscall#CreateFile"><code>syscall.CreateFile</code></a> call).
These handles are associated with the Go runtime’s I/O completion port,
which provides the following benefits for the resulting <a href="https://go.dev/pkg/os#File"><code>File</code></a>:</p>
<ul>
<li>I/O methods (<a href="https://go.dev/pkg/os#File.Read"><code>File.Read</code></a>, <a href="https://go.dev/pkg/os#File.Write"><code>File.Write</code></a>, <a href="https://go.dev/pkg/os#File.ReadAt"><code>File.ReadAt</code></a>, and <a href="https://go.dev/pkg/os#File.WriteAt"><code>File.WriteAt</code></a>) do not block an OS thread.</li>
<li>Deadline methods (<a href="https://go.dev/pkg/os#File.SetDeadline"><code>File.SetDeadline</code></a>, <a href="https://go.dev/pkg/os#File.SetReadDeadline"><code>File.SetReadDeadline</code></a>, and <a href="https://go.dev/pkg/os#File.SetWriteDeadline"><code>File.SetWriteDeadline</code></a>) are supported.</li>
</ul>
<p>This enhancement is especially beneficial for applications that communicate via named pipes on Windows.</p>
<p>Note that a handle can only be associated with one completion port at a time.
If the handle provided to <a href="https://go.dev/pkg/os#NewFile"><code>NewFile</code></a> is already associated with a completion port,
the returned <a href="https://go.dev/pkg/os#File"><code>File</code></a> is downgraded to synchronous I/O mode.
In this case, I/O methods will block an OS thread, and the deadline methods have no effect.</p>
<p>The filesystems returned by <a href="https://go.dev/pkg/os#DirFS"><code>DirFS</code></a> and <a href="https://go.dev/pkg/os#Root.FS"><code>Root.FS</code></a> implement the new <a href="https://go.dev/pkg/io/fs#ReadLinkFS"><code>io/fs.ReadLinkFS</code></a> interface.
<a href="https://go.dev/pkg/os#CopyFS"><code>CopyFS</code></a> supports symlinks when copying filesystems that implement <a href="https://go.dev/pkg/io/fs#ReadLinkFS"><code>io/fs.ReadLinkFS</code></a>.</p>
<p>The <a href="https://go.dev/pkg/os#Root"><code>Root</code></a> type supports the following additional methods:</p>
<ul>
<li><a href="https://go.dev/pkg/os#Root.Chmod"><code>Root.Chmod</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.Chown"><code>Root.Chown</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.Chtimes"><code>Root.Chtimes</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.Lchown"><code>Root.Lchown</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.Link"><code>Root.Link</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.MkdirAll"><code>Root.MkdirAll</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.ReadFile"><code>Root.ReadFile</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.Readlink"><code>Root.Readlink</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.RemoveAll"><code>Root.RemoveAll</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.Rename"><code>Root.Rename</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.Symlink"><code>Root.Symlink</code></a></li>
<li><a href="https://go.dev/pkg/os#Root.WriteFile"><code>Root.WriteFile</code></a></li>
</ul>
<!-- go.dev/issue/73126 is documented as part of 67002 -->
<h4 id="reflectpkgreflect"><a href="https://go.dev/pkg/reflect/"><code>reflect</code></a></h4>
<p>The new <a href="https://go.dev/pkg/reflect#TypeAssert"><code>TypeAssert</code></a> function permits converting a <a href="https://go.dev/pkg/reflect#Value"><code>Value</code></a> directly to a Go value
of the given type. This is like using a type assertion on the result of <a href="https://go.dev/pkg/reflect#Value.Interface"><code>Value.Interface</code></a>,
but avoids unnecessary memory allocations.</p>
<h4 id="regexpsyntaxpkgregexpsyntax"><a href="https://go.dev/pkg/regexp/syntax/"><code>regexp/syntax</code></a></h4>
<p>The <code>\p{name}</code> and <code>\P{name}</code> character class syntaxes now accept the names
Any, ASCII, Assigned, Cn, and LC, as well as Unicode category aliases like <code>\p{Letter}</code> for <code>\pL</code>.
Following <a href="https://unicode.org/reports/tr18/" rel="noreferrer" target="_blank">Unicode TR18</a>, they also now use
case-insensitive name lookups, ignoring spaces, underscores, and hyphens.</p>
<h4 id="runtimepkgruntime"><a href="https://go.dev/pkg/runtime/"><code>runtime</code></a></h4>
<p>Cleanup functions scheduled by <a href="https://go.dev/pkg/runtime#AddCleanup"><code>AddCleanup</code></a> are now executed
concurrently and in parallel, making cleanups more viable for heavy
use like the <a href="https://go.dev/pkg/unique"><code>unique</code></a> package. Note that individual cleanups should
still shunt their work to a new goroutine if they must execute or
block for a long time to avoid blocking the cleanup queue.</p>
<p>A new <code>GODEBUG=checkfinalizers=1</code> setting helps find common issues with
finalizers and cleanups, such as those described <a href="https://go.dev/doc/gc-guide#Finalizers_cleanups_and_weak_pointers">in the GC
guide</a>.
In this mode, the runtime runs diagnostics on each garbage collection cycle,
and will also regularly report the finalizer and
cleanup queue lengths to stderr to help identify issues with
long-running finalizers and/or cleanups.
See the <a href="https://pkg.go.dev/runtime#hdr-Environment_Variables" rel="noreferrer" target="_blank">GODEBUG documentation</a>
for more details.</p>
<p>The new <a href="https://go.dev/pkg/runtime#SetDefaultGOMAXPROCS"><code>SetDefaultGOMAXPROCS</code></a> function sets <code>GOMAXPROCS</code> to the runtime
default value, as if the <code>GOMAXPROCS</code> environment variable is not set. This is
useful for enabling the <a href="#container-aware-gomaxprocs">new <code>GOMAXPROCS</code> default</a> if it has been
disabled by the <code>GOMAXPROCS</code> environment variable or a prior call to
<a href="https://go.dev/pkg/runtime#GOMAXPROCS"><code>GOMAXPROCS</code></a>.</p>
<h4 id="runtimepprofpkgruntimepprof"><a href="https://go.dev/pkg/runtime/pprof/"><code>runtime/pprof</code></a></h4>
<p>The mutex profile for contention on runtime-internal locks now correctly points
to the end of the critical section that caused the delay. This matches the
profile’s behavior for contention on <code>sync.Mutex</code> values. The
<code>runtimecontentionstacks</code> setting for <code>GODEBUG</code>, which allowed opting in to the
unusual behavior of Go 1.22 through 1.24 for this part of the profile, is now
gone.</p>
<h4 id="syncpkgsync"><a href="https://go.dev/pkg/sync/"><code>sync</code></a></h4>
<p>The new <a href="https://go.dev/pkg/sync#WaitGroup.Go"><code>WaitGroup.Go</code></a> method
makes the common pattern of creating and counting goroutines more convenient.</p>
<h4 id="testingpkgtesting"><a href="https://go.dev/pkg/testing/"><code>testing</code></a></h4>
<p>The new methods <a href="https://go.dev/pkg/testing#T.Attr"><code>T.Attr</code></a>, <a href="https://go.dev/pkg/testing#B.Attr"><code>B.Attr</code></a>, and <a href="https://go.dev/pkg/testing#F.Attr"><code>F.Attr</code></a> emit an
attribute to the test log. An attribute is an arbitrary
key and value associated with a test.</p>
<p>For example, in a test named <code>TestF</code>,
<code>t.Attr("key", "value")</code> emits:</p>
<pre><code>=== ATTR  TestF key value
</code></pre>
<p>With the <code>-json</code> flag, attributes appear as a new “attr” action.</p>
<!-- go.dev/issue/59928 -->
<p>The new <a href="https://go.dev/pkg/testing#T.Output"><code>Output</code></a> method of <a href="https://go.dev/pkg/testing#T"><code>T</code></a>, <a href="https://go.dev/pkg/testing#B"><code>B</code></a> and <a href="https://go.dev/pkg/testing#F"><code>F</code></a> provides an <a href="https://go.dev/pkg/io#Writer"><code>io.Writer</code></a>
that writes to the same test output stream as <a href="https://go.dev/pkg/testing#TB.Log"><code>TB.Log</code></a>.
Like <code>TB.Log</code>, the output is indented, but it does not include the file and line number.</p>
<!-- https://go.dev/issue/70464, CL 630137 -->
<p>The <a href="https://go.dev/pkg/testing#AllocsPerRun"><code>AllocsPerRun</code></a> function now panics
if parallel tests are running.
The result of <a href="https://go.dev/pkg/testing#AllocsPerRun"><code>AllocsPerRun</code></a> is inherently
flaky if other tests are running.
The new panicking behavior helps catch such bugs.</p>
<h4 id="testingfstestpkgtestingfstest"><a href="https://go.dev/pkg/testing/fstest/"><code>testing/fstest</code></a></h4>
<p><a href="https://go.dev/pkg/testing/fstest#MapFS"><code>MapFS</code></a> implements the new <a href="https://go.dev/pkg/io/fs#ReadLinkFS"><code>io/fs.ReadLinkFS</code></a> interface.
<a href="https://go.dev/pkg/testing/fstest#TestFS"><code>TestFS</code></a> will verify the functionality of the <a href="https://go.dev/pkg/io/fs#ReadLinkFS"><code>io/fs.ReadLinkFS</code></a> interface if implemented.
<a href="https://go.dev/pkg/testing/fstest#TestFS"><code>TestFS</code></a> will no longer follow symlinks to avoid unbounded recursion.</p>
<!-- #### [`testing/synctest`](/pkg/testing/synctest/) mentioned above -->
<h4 id="unicodepkgunicode"><a href="https://go.dev/pkg/unicode/"><code>unicode</code></a></h4>
<p>The new <a href="https://go.dev/pkg/unicode#CategoryAliases"><code>CategoryAliases</code></a> map provides access to category alias names, such as “Letter” for “L”.</p>
<p>The new categories <a href="https://go.dev/pkg/unicode#Cn"><code>Cn</code></a> and <a href="https://go.dev/pkg/unicode#LC"><code>LC</code></a> define unassigned codepoints and cased letters, respectively.
These have always been defined by Unicode but were inadvertently omitted in earlier versions of Go.
The <a href="https://go.dev/pkg/unicode#C"><code>C</code></a> category now includes <a href="https://go.dev/pkg/unicode#Cn"><code>Cn</code></a>, meaning it has added all unassigned code points.</p>
<h4 id="uniquepkgunique"><a href="https://go.dev/pkg/unique/"><code>unique</code></a></h4>
<p>The <a href="https://go.dev/pkg/unique"><code>unique</code></a> package now reclaims interned values more eagerly,
more efficiently, and in parallel. As a consequence, applications using
<a href="https://go.dev/pkg/unique#Make"><code>Make</code></a> are now less likely to experience memory blow-up when lots of
truly unique values are interned.</p>
<p>Values passed to <a href="https://go.dev/pkg/unique#Make"><code>Make</code></a> containing <a href="https://go.dev/pkg/unique#Handle"><code>Handle</code></a>s previously required multiple
garbage collection cycles to collect, proportional to the depth of the chain
of <a href="https://go.dev/pkg/unique#Handle"><code>Handle</code></a> values. Now, once
unused, they are collected promptly in a single cycle.</p>
<h2 id="ports">Ports</h2>
<h3 id="darwin">Darwin</h3>
<!-- go.dev/issue/69839 -->
<p>As <a href="https://go.dev/doc/go1.24#darwin">announced</a> in the Go 1.24 release notes, Go 1.25 requires macOS 12 Monterey or later.
Support for previous versions has been discontinued.</p>
<h3 id="windows">Windows</h3>
<!-- go.dev/issue/71671 -->
<p>Go 1.25 is the last release that contains the <a href="https://go.dev/doc/go1.24#windows">broken</a> 32-bit windows/arm port (<code>GOOS=windows</code> <code>GOARCH=arm</code>). It will be removed in Go 1.26.</p>
<h3 id="loong64">Loong64</h3>
<!-- CLs 533717, 533716, 543316, 604176 -->
<p>The linux/loong64 port now supports the race detector, gathering traceback information from C code
using <a href="https://go.dev/pkg/runtime#SetCgoTraceback"><code>runtime.SetCgoTraceback</code></a>, and linking cgo programs with the
internal link mode.</p>
<h3 id="risc-v">RISC-V</h3>
<!-- CL 420114 -->
<p>The linux/riscv64 port now supports the <code>plugin</code> build mode.</p>
<!-- https://go.dev/issue/61476, CL 633417 -->
<p>The <code>GORISCV64</code> environment variable now accepts a new value <code>rva23u64</code>,
which selects the RVA23U64 user-mode application profile.</p>
<!--
Output from relnote todo that was generated and reviewed on 2025-05-23, plus summary info from bug/CL: -->
<!-- Items that don't need to be mentioned in Go 1.25 release notes but are picked up by relnote todo
Just updating old prposals
accepted proposal https://go.dev/issue/30999 (from https://go.dev/cl/671795)
accepted proposal https://go.dev/issue/36532 (from https://go.dev/cl/647555)
accepted proposal https://go.dev/issue/48429 (from https://go.dev/cl/648577)
accepted proposal https://go.dev/issue/51572 (from https://go.dev/cl/651996)
accepted proposal https://go.dev/issue/51430 (from https://go.dev/cl/644997, https://go.dev/cl/646355)
accepted proposal https://go.dev/issue/60905 (from https://go.dev/cl/645795)
accepted proposal https://go.dev/issue/61716 (from https://go.dev/cl/644475)
accepted proposal https://go.dev/issue/64876 (from https://go.dev/cl/649435)
accepted proposal https://go.dev/issue/70123 (from https://go.dev/cl/657116)
accepted proposal https://go.dev/issue/61901 (from https://go.dev/cl/647875)
accepted proposal https://go.dev/issue/64207 (from https://go.dev/cl/647015, https://go.dev/cl/652235)
accepted proposal https://go.dev/issue/70200 (from https://go.dev/cl/674916)

For subrepos:
accepted proposal https://go.dev/issue/53757 (from https://go.dev/cl/644575)
accepted proposal https://go.dev/issue/54743 (from https://go.dev/cl/532415)
accepted proposal https://go.dev/issue/57792 (from https://go.dev/cl/649716, https://go.dev/cl/651737)
accepted proposal https://go.dev/issue/58523 (from https://go.dev/cl/538235)
accepted proposal https://go.dev/issue/61537 (from https://go.dev/cl/531935)
accepted proposal https://go.dev/issue/61940 (from https://go.dev/cl/650235)
accepted proposal https://go.dev/issue/67839 (from https://go.dev/cl/646535)
accepted proposal https://go.dev/issue/68780 (from https://go.dev/cl/659835)
accepted proposal https://go.dev/issue/69095 (from https://go.dev/cl/649320, https://go.dev/cl/649321, https://go.dev/cl/649337, https://go.dev/cl/649376, https://go.dev/cl/649377, https://go.dev/cl/649378, https://go.dev/cl/649379, https://go.dev/cl/649380, https://go.dev/cl/649397, https://go.dev/cl/649398, https://go.dev/cl/649419, https://go.dev/cl/649497, https://go.dev/cl/649498, https://go.dev/cl/649618, https://go.dev/cl/649675, https://go.dev/cl/649676, https://go.dev/cl/649677, https://go.dev/cl/649695, https://go.dev/cl/649696, https://go.dev/cl/649697, https://go.dev/cl/649698, https://go.dev/cl/649715, https://go.dev/cl/649717, https://go.dev/cl/649718, https://go.dev/cl/649755, https://go.dev/cl/649775, https://go.dev/cl/649795, https://go.dev/cl/649815, https://go.dev/cl/649835, https://go.dev/cl/651336, https://go.dev/cl/651736, https://go.dev/cl/651737, https://go.dev/cl/658018)
accepted proposal https://go.dev/issue/70859 (from https://go.dev/cl/666056, https://go.dev/cl/670835, https://go.dev/cl/672015, https://go.dev/cl/672016, https://go.dev/cl/672017)
accepted proposal https://go.dev/issue/32816 (from https://go.dev/cl/645155, https://go.dev/cl/645455, https://go.dev/cl/645955, https://go.dev/cl/646255, https://go.dev/cl/646455, https://go.dev/cl/646495, https://go.dev/cl/646655, https://go.dev/cl/646875, https://go.dev/cl/647298, https://go.dev/cl/647299, https://go.dev/cl/647736, https://go.dev/cl/648581, https://go.dev/cl/648715, https://go.dev/cl/648976, https://go.dev/cl/648995, https://go.dev/cl/649055, https://go.dev/cl/649056, https://go.dev/cl/649057, https://go.dev/cl/649456, https://go.dev/cl/649476, https://go.dev/cl/650755, https://go.dev/cl/651615, https://go.dev/cl/651617, https://go.dev/cl/651655, https://go.dev/cl/653436)
-->
</div>







</article>



</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Missing Protocol: Let Me Know (129 pts)]]></title>
            <link>https://deanebarker.net/tech/blog/let-me-know/</link>
            <guid>44881287</guid>
            <pubDate>Tue, 12 Aug 2025 20:15:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://deanebarker.net/tech/blog/let-me-know/">https://deanebarker.net/tech/blog/let-me-know/</a>, See on <a href="https://news.ycombinator.com/item?id=44881287">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>

    


<hgroup>
  
  
</hgroup>



<header data-no-index="">
    
  

    
      
    
    
      
    
    <span>•</span>
  

  
    <span><time datetime="2025-08-05">August 5, 2025</time></span>
    <span>•</span>
  
  
  

</header>





    




    


    

    










<img src="https://deanebarker.net/tech/blog/images/lmk.png?w=400" loading="lazy">



<p>I want a new protocol, tentatively called “Let Me Know” (LMK). The purpose is to provide someone an anonymous way to get notified when a singular, specific event occurs.</p>
<p>Here’s a basic use case:</p>
<blockquote>
<p>Some random blog author has published Parts 1 and 2 of a series. You enjoyed it, and you want to know when Part 3 is published.</p>
<p>You don’t want to give away any personal information, you don’t want to subscribe to an RSS feed of other content, you don’t want to follow them on social media, etc. You just want an anonymous way to find out when Part 3 is published without having to manually check their website and evaluate it for the content.</p>
</blockquote>
<p>My idea is that there’s a button at the bottom of Part 2, called “Let Me Know.”</p>
<p>The user clicks this, and it registers an endpoint with some agent.</p>
<ul>
<li>The “endpoint” is a URL specific to that singular event.</li>
<li>An “agent” is a persistent background service of some kind that will check to see if this event has occurred. For example, a browser extension will add it to a “check list.” Alternately, some subscription service could add it to a list.</li>
</ul>
<p>Whatever agent registers the endpoint will ping the end point at a specific interval. Let’s say once per day by default.</p>
<p>The endpoint will often simply return:</p>
<pre><code>{
  "happened": false
}
</code></pre>
<p>Or:</p>
<pre><code>204 No Content
</code></pre>
<p>Either of those responses mean, “The subscribed event has not happened yet. Check back later.”</p>
<p>Alternately, the endpoint can advise the agent when to check again.</p>
<pre><code>{
  "happened": "false",
  "delay": 604800 // Don't check again for one week
}
</code></pre>
<p>Your agent will keep dutifully checking on its default schedule, or obeying the delay response if it’s provided.</p>
<p>But hopefully, on some bright shining day in the future, something like this will be returned:</p>
<pre><code>{
  "happened": true,
  "when": "2025-08-06T05:38:20.234Z",

  // This can be included in the notification
  "message": "Part 3 of the Awesome Blog Post Series has finally been published!",

  // The notification can provide one or more things to do from here
  "actions":
  [
    {
      "Read the post",
      "https://domain.com/part-3"
    },
    {
      "Visit the home page",
      "https://domain.com/"
    }
  ]
}
</code></pre>
<p>You will get this notification… somehow.</p>
<ul>
<li>If your agent is in a browser extension, you might get a pop-up.</li>
<li>If you agent is some subscription service, you might get an email.</li>
<li>If your agent is a mobile app, you might get a push notification.</li>
</ul>
<p>But <em>somehow</em>, you will be notified that the event – whatever the thing was you were waiting for – has occured.</p>








<picture><source srcset="https://deanebarker.net/tech/blog/images/lmk-alert.png?w=480" media="(max-width: 480px)"><img src="https://deanebarker.net/tech/blog/images/lmk-alert.png?w=500" loading="lazy" width="500" height="124"></picture>



<p>And then – and this is key – <em>the endpoint is automatically deleted from your agent</em>.</p>
<p>The event has happened, so the agent does not check again. The one task you assigned to it has been completed. If you want to find out about Part 4, you’ll subscribe (presumably) using a button at the bottom of Part 3. Or not. Whatever.</p>
<p>At any given time, you can review the endpoints registered in your agent, see when they were registered, when they were last checked, when they are scheduled to check again, force then to check again, etc. And you can delete any that you don’t really care about anymore.</p>
<p>As for the button that lets you subscribe to the event (which has now occurred), a few things could happen:</p>
<ol>
<li>The author could manually delete it.</li>
<li>If the endpoint architecture was built into their CMS, it could be automatically suppressed when the event happens (or, more likely, proactively display when the event hasn’t happened yet; default would be to not display).</li>
<li>The button could consist of some client-side code that would ping the endpoint itself and decide whether or not to display.</li>
</ol>
<p>If the button still shows up after the event has occured, it’s not that big of a deal. If an agent tries to register an endpoint for an event that has occured, the worst that could happen is that it notifies immediately. Alternately, the agent could detect this when it tries to register and notify the user that there’s no point in registering it and provide the actions from the response.</p>
<p>From the author’s standpoint, their CMS or other system could have an “LMK Control Panel” that would let them register new endpoints, manually resolve endpoints by providing messages and actions (they would “publish a resolution,” archive endpoints, get “ping analytics” of the traffic to specific endpoints, etc.</p>
<p>And… that’s it. That’s all it does.</p>
<p>You register an endpoint, the agent starts checking it, and then the agent lets you know when the endpoint returns in the affirmative.</p>
<p>You have never given anyone any personal information. Your agent checking the endpoint is as anonymous as you visiting the website. There is no commitment or cognitive overhead – you’re not exposed to a bunch of other events of content you don’t care about, and if the event never happens, you will never hear about it again.</p>
<p>There’s no AI to this. No magic. No problems to be solved. Like any standard or protocol, it’s just a matter of agreeing on it and evangelizing it.</p>
<p>But…</p>
<p>I showed this all to a friend, and he pointed out the “Subscribe” button “at the bottom of every YouTube video.”</p>
<p>I responded:</p>
<blockquote>
<p>Yeah, but I don’t want to “subscribe.” I just want to know when this ONE THING happens.</p>
<p>There might be 20 unrelated videos between the one I watched and the Part 2 that I want to see. Just yell when Part 2 is out, and then never talk to me again and forget we ever had this interaction, unless I subscribe to something else.</p>
</blockquote>
<p>And he responded with the cold, hard truth:</p>
<blockquote>
<p>That makes sense. I can understand why you’re asking for that, and can understand why creators would never want to build it</p>
</blockquote>
<p>…[sigh]. Yeah.</p>
<h2>Technical Postscript</h2>
<p>The only thing I might add is a <code>/meta</code> pseudo-endpoint that would provide data about the endpoint. It could return something like this:</p>
<pre><code>{
  "created": "2025-08-05",
  "purpose": "To notify when Part 2 of Awesome Blog Post Series is published"
  "contact": "deane@deanebarker.net &lt;Deane Barker&gt;",
  "happened": false // So the agent can filter for active events
}
</code></pre>
<p>Your agent could retrieve this when the endpoint is registered and use the data to maintain its list and give you more information about the endpoints you’re checking.</p>



<!--
<link rel="stylesheet" href="/assets/highlight/styles/base16/railscasts.min.css"/>
<script src="/assets/highlight/highlight.min.js"></script>
<script src="/assets/highlight/languages/javascript.min.js"></script>
<script src="/assets/highlight/languages/html.min.js"></script>
<script src="/assets/highlight/languages/css.min.js"></script>
<script src="/assets/highlight/languages/json.min.js"></script>

<script>document.addEventListener('DOMContentLoaded', (e) => { hljs.highlightAll(); });</script>
-->
<!-- 2025-08-05: I changed how this is managed. This code will gradually get removed from the site. -->




    



    

</article><p>
            This is item <strong>#2</strong> in a sequence of <strong>364</strong> items.
        </p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ashet Home Computer (289 pts)]]></title>
            <link>https://ashet.computer/</link>
            <guid>44880401</guid>
            <pubDate>Tue, 12 Aug 2025 18:56:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ashet.computer/">https://ashet.computer/</a>, See on <a href="https://news.ycombinator.com/item?id=44880401">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>
    The Ashet Home Computer is an expandable and hackable computer in the spirit of the 80's home computers.

    Fully understandable by a single person, yet powerful enough to run a graphical desktop OS, it tries to bridge the gap between Arduinos and a RaspberryPi.

    It is designed and engineered for fun and learning, which go best hand in hand.
  </p><div><h2>Project Status &amp; Roadmap</h2><h3><img src="https://ashet.computer/img/check.svg"> Design</h3><p>The Ashet Home Computer has completed its design phase, and a practical, achievable hardware concept is now finalized.</p><p>There are still many smaller design components to be refined, but the overall concept is done.</p><p><em>Check out the <a href="https://ashet.computer/hardware/">hardware design</a> to learn more about the system.</em></p><h3><img src="https://ashet.computer/img/check.svg"> Prototyping</h3><p>A functional <em>cable clutter prototype</em> has been created which validates all of the design ideas.</p><p>This includes:</p><ul><li>PSRAM Support</li><li>DVI Video Generation</li><li>Backplane Communication</li><li>Expansion Card Drivers</li><li>Ethernet</li><li>I²C Subsystem</li></ul><p>Currently, the RP2350 processor successfully boots the operating system and supports launching desktop applications.</p><p>The mechanical design is also validated by building a mock-up of the final hardware and case assembly.</p><p><em>Check out the prototype images and videos in the <a href="https://ashet.computer/gallery/#home-computer-photo">gallery</a>!</em></p><h3><img src="https://ashet.computer/img/wrench-clock.svg"> Engineering</h3><p>The next stage after prototyping will be the actual engineering. This includes creating schematics, pcb layouts, evaluation of hardware limits and EMI emissions.</p><p>In this phase, the fully production-ready computer will be built.</p><p>To fund development for this critical next stage, we will launch a crowdfunding campaign on a platform such as Indiegogo or Kickstarter.</p><p><em>Subscribe to our <a href="https://buttondown.com/ashet.computer" target="_blank">newsletter</a> to get notified when the fundraiser starts!</em></p><h3><img src="https://ashet.computer/img/wrench-clock.svg"> Production &amp; Release</h3><p>In parallel to the engineering, a manufacturing partner must be found that will produce and distribute the Ashet Home Computer.</p><p>One of the goals is to make the computer available for 250€ or less, but if that’s possible depends on so many details that it’s hard to tell in the current phase.</p><p>No matter what’s the outcome of this phase, the whole computer design will be available for free under a <em>permissive&nbsp;licence</em> and can be built by everyone.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Let's get real about the one-person billion dollar company (117 pts)]]></title>
            <link>https://www.marcrand.com/p/lets-get-real-about-the-one-person</link>
            <guid>44879853</guid>
            <pubDate>Tue, 12 Aug 2025 18:09:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.marcrand.com/p/lets-get-real-about-the-one-person">https://www.marcrand.com/p/lets-get-real-about-the-one-person</a>, See on <a href="https://news.ycombinator.com/item?id=44879853">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><em><span>If you like this post, follow my journey on Twitter: </span><a href="https://x.com/random" rel="">https://x.com/random</a></em></p><div><p><strong>The biggest hurdle to the one-person billion dollar company is not AI capability, but founder pain tolerance.</strong><span> </span></p><p><span>Sam Altman is betting on it in his private group chats. </span></p></div><p>Dario Amodei predicted it'll happen in 2026.</p><p><span>These geniuses think the one-person billion dollar company is inevitable, and unicorn teams are getting smaller, but a </span><em>one</em><span> person? </span></p><p><span>That’s not going to </span><em>just happen</em><span>. </span></p><p>One person is an intentional choice by an individual with a particular set of skills.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!oTiq!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!oTiq!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png 424w, https://substackcdn.com/image/fetch/$s_!oTiq!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png 848w, https://substackcdn.com/image/fetch/$s_!oTiq!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png 1272w, https://substackcdn.com/image/fetch/$s_!oTiq!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!oTiq!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png" width="1456" height="971" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:971,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" title="" srcset="https://substackcdn.com/image/fetch/$s_!oTiq!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png 424w, https://substackcdn.com/image/fetch/$s_!oTiq!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png 848w, https://substackcdn.com/image/fetch/$s_!oTiq!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png 1272w, https://substackcdn.com/image/fetch/$s_!oTiq!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb73c2878-8725-488c-8adb-6d1d6e0ee659_1536x1024.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>It's Alex Honnold free-soloing El Capitan. </p><p>It's David Goggins running an ultramarathon on broken feet. </p><p><strong>The unicorn founders I know can’t even manage their email on their own, so who are we talking about here?</strong></p><p>The person likely closest to the milestone today is Heather Cox Richardson, who could easily replace her two copy editors with Claude.</p><p><span>Her newsletter reportedly brings in </span><a href="https://growthinreverse.com/heather-cox-richardson/" rel="">$12 million / year</a><span> and a revenue multiple of 2-4x typical for newsletters values her business at ~$50 million.</span></p><p>A far cry from 1 billion.</p><p>Touching that B will likely require an app with recurring revenue and network effects, that can justify higher revenue multiples.</p><p><strong>If it’s doable, it will probably be by:</strong></p><ol><li><p><strong>Someone with a Flappy Bird product that goes vertical and sells at the top, or</strong></p></li><li><p><strong>Someone with an Instagram product who both “calls their shot” from the beginning and has the desire + technical ability to follow through on it.</strong><span> </span></p></li></ol><p>Anything outside of consumer is highly unlikely. Enterprise money comes with enterprise headaches which will absolutely destroy a solo founder.</p><p><span>But let’s be honest:</span><br><strong><br><span>If you’re lucky enough to build something many people love, you’ll want to hire if for no other reason than to make the product as great as it can be.</span></strong></p><div><p><span>Maybe there’s a way to do it by only hiring agencies, which technically are a form of automation, but not in the spirit of Sam and Dario’s prediction.</span></p><p><span>Let’s see! The future is exciting 🚀</span></p></div><div><p>Subscribe for more thoughts on the one-person billion dollar company.</p></div></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[H-1B Visa Changes Approved by White House (159 pts)]]></title>
            <link>https://www.newsweek.com/h-1b-visas-changes-approved-white-house-report-2112216</link>
            <guid>44879746</guid>
            <pubDate>Tue, 12 Aug 2025 17:58:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.newsweek.com/h-1b-visas-changes-approved-white-house-report-2112216">https://www.newsweek.com/h-1b-visas-changes-approved-white-house-report-2112216</a>, See on <a href="https://news.ycombinator.com/item?id=44879746">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="block-system-main" data-gtm-action="Main_Page_Content"><div>
<article><div id="v_article">      <div><p>
By <span>
<span id="tooltip_reporter_0"><p>Robert Charles Alexander is the Senior Crime and Court Reporter for Newsweek based in London. He formerly worked as a Political Correspondent for the Local Democracy Service of the BBC, and is a lawyer. He is also&nbsp;the acclaimed author of seven published books, ranging from biographies to mountaineering and architectural history. His first book, The Inventor of Stereo – The Life and Works of Alan Dower Blumlein was dramatized for BBC Radio 4 in August 2008, and is now being turned into a major new movie for Universal Pictures Films.<br>He is currently working on his eighth, ninth and tenth books.&nbsp;You can get in touch with Robert by emailing r.alexnader<a href="mailto:j.doe@newsweek.com" data-mce-href="mailto:j.doe@newsweek.com">@newsweek.com</a>. Languages: English, French, German.&nbsp;</p>
</span>

</span></p><p>Senior Crime &amp; Court Reporter</p></div>  <div id="audio-player-container">
<p>🎙️ Voice is AI-generated. Inconsistencies may occur.</p>
</div>   <div><p>A proposed <a href="https://www.newsweek.com/topic/department-of-homeland-security" data-sys="1">Department of Homeland Security</a> rule that would alter how H-1B visas are allocated has cleared review by the White House's Office of Information and Regulatory Affairs (OIRA), according to <a href="https://www.newsweek.com/topic/bloomberg" data-sys="1">Bloomberg</a> Law.</p><p>Federal regulators cleared a proposed rule that would apply a "weighted selection process" by replacing the current random lottery with a new system that gives priority in the selection process to registrants who meet or exceed certain criteria, such as wage or education level.</p><p><em>Newsweek</em> reached out to the DHS and the OIRA for comment.</p><h2><strong>Why It Matters</strong></h2><p>The H-1B program supplies tens of thousands of specialty-occupation workers to U.S. employers each year and is heavily used by the technology sector. Any shift from a random lottery to a weighted, wage- or skill-based system could change hiring incentives for employers, affecting which foreign professionals obtain U.S. work authorization.</p><p>The H-1B cap of 85,000 slots annually influences employers' ability to hire specialized foreign workers in fields including engineering, computer science and business specialties. Any change to the selection criteria could incentivize employers to offer higher wages to improve odds in a weighted system or change recruitment strategies.</p><figure><div>
<picture width="1200" height="801"><source type="image/webp" media="(min-width: 992px)" srcset="https://d.newsweek.com/en/full/2701070/h-1b-visa-stock-image.webp?w=790&amp;f=955da3a9625d106150e455f9bb03a784 1x"><source type="image/jpeg" media="(min-width: 992px)" srcset="https://d.newsweek.com/en/full/2701070/h-1b-visa-stock-image.jpg?w=790&amp;f=955da3a9625d106150e455f9bb03a784 1x"><source type="image/webp" media="(min-width: 768px)" srcset="https://d.newsweek.com/en/full/2701070/h-1b-visa-stock-image.webp?w=900&amp;f=41d8895261eee6671df3b1a223ed5114 1x"><source type="image/jpeg" media="(min-width: 768px)" srcset="https://d.newsweek.com/en/full/2701070/h-1b-visa-stock-image.jpg?w=900&amp;f=41d8895261eee6671df3b1a223ed5114 1x"><source type="image/webp" media="(min-width: 481px)" srcset="https://d.newsweek.com/en/full/2701070/h-1b-visa-stock-image.webp?w=790&amp;f=955da3a9625d106150e455f9bb03a784 1x"><source type="image/jpeg" media="(min-width: 481px)" srcset="https://d.newsweek.com/en/full/2701070/h-1b-visa-stock-image.jpg?w=790&amp;f=955da3a9625d106150e455f9bb03a784 1x"><source type="image/webp" media="(min-width: 0px)" srcset="https://d.newsweek.com/en/full/2701070/h-1b-visa-stock-image.webp?w=450&amp;f=2d1bd07a49960f848b26ff750c6f9a1e 1x"><source type="image/jpeg" media="(min-width: 0px)" srcset="https://d.newsweek.com/en/full/2701070/h-1b-visa-stock-image.jpg?w=450&amp;f=2d1bd07a49960f848b26ff750c6f9a1e 1x"><source type="image/webp" srcset="https://d.newsweek.com/en/full/2701070/h-1b-visa-stock-image.webp?w=1200&amp;f=aeae525f1da5e1026bc4adee52906929"><img loading="lazy" id="i2701070" src="https://d.newsweek.com/en/full/2701070/h-1b-visa-stock-image.jpg?w=1200&amp;f=aeae525f1da5e1026bc4adee52906929" alt="H-1B visa stock image " width="1200" height="801"></picture></div><figcaption>
<span id="short-cap-description">Stock image of an H-1B visa.</span>

<span>Getty Images</span>
</figcaption>  </figure><h2><strong>What To Know</strong></h2><p>Federal review clearance by the OIRA typically preceded publication of a proposed rule in the Federal Register and a public comment period. The next step is a Federal Register publication, followed by a 30- to 60-day comment window and a multistep process before any final rule could take effect.</p><p>The proposed weighted-selection concept echoes a 2021 DHS plan under President <a href="https://www.newsweek.com/topic/donald-trump" data-sys="1">Donald Trump</a>'s first administration that had sought to rank and select petitions by wage tiers (OES wage levels IV down to I), an approach that the Trump administration argued would prioritize higher-paid, highly skilled hires. That earlier plan faced opposition, was withdrawn by the Biden administration and saw related regulations blocked in federal court.</p><p>The Institute for Progress, a nonpartisan think tank examining innovation policy, earlier this year suggested eliminating the H-1B lottery. It argued that the economic value of the visa program could be increased by 88 percent if applicants were evaluated based on seniority or salary.</p><p>The H-1B visa has come under increasing scrutiny since Trump assumed office in January, as the president's supporters have called into question the number of visas handed out to foreign nationals at what they claim is the expense of American workers. For example, <a href="https://www.newsweek.com/microsoft-layoffs-h1b-visa-applications-2094370" target="_blank" rel="noopener">Microsoft is under growing pressure</a> to account for its H-1B visa requests while the company has issued major layoffs in recent months.</p><p>The Washington-based tech giant applied for 9,491 H-1B visas during the last fiscal year, all of which were approved. The company has laid off nearly 16,000 people in total this year, out of a 228,000-strong global employee base.</p><h2><strong>What People Are Saying</strong></h2><p><strong>U.S. Citizenship and Immigration Services agency guidance, July 18, 2025:</strong> "USCIS has announced that it has received enough petitions to meet the congressionally mandated 65,000 H-1B visa regular cap and the 20,000 H-1B visa U.S. advanced degree exemption, also known as the master's cap, for fiscal year 2026."</p><p><strong>Immigration attorneys Fragomen LLP, in an August 11 article:</strong> "The next step for the proposal is publication in the Federal Register for public feedback."</p><h2><strong>What Happens Next</strong></h2><p>Industry advisers and regulatory watchers expected the administration to publish the proposed rule in the Federal Register, which would trigger a formal public comment period.</p><p>A proposed rule overhauling the allocation of H-1B visas for specialty occupation workers was approved by a key White House office, signaling it may be released publicly soon.</p>  </div></div>   <div data-pollid="7" data-articleid="2112216" data-gtm-category="FairnessMeter" data-gtmaction="original"><div><div>
<p><img src="https://g.newsweek.com/www/images/NW_ICON_CommonGround.png" alt="Newsweek Logo" width="92" height="113"></p><h2>fairness meter</h2><div><h2>fairness meter</h2><div><p>Newsweek is committed to journalism that's factual and fair.</p><p>Hold us accountable and submit your rating of this article on the meter. <a href="https://www.newsweek.com/fairness-meter" data-gtm-action="Fairness_Meter_original_Support_Page"><span></span></a></p></div></div></div><div><p>Newsweek is committed to journalism that's factual and fair.</p><p>Hold us accountable and submit your rating of this article on the meter. <a href="https://www.newsweek.com/fairness-meter" data-gtm-action="Fairness_Meter_original_Support_Page"><span></span></a></p></div></div><div>
<figure><p><span>Click On Meter </span><span>To Rate This Article</span></p>
</figure></div></div></article></div>     <div data-gtm-action="Top_Stories"><h2>
Top stories</h2></div><section data-gtm-action="About_The_Writer"><h3>About the writer</h3>
<span>
<span id="tooltip_reporter_0"><p>Robert Charles Alexander is the Senior Crime and Court Reporter for Newsweek based in London. He formerly worked as a Political Correspondent for the Local Democracy Service of the BBC, and is a lawyer. He is also&nbsp;the acclaimed author of seven published books, ranging from biographies to mountaineering and architectural history. His first book, The Inventor of Stereo – The Life and Works of Alan Dower Blumlein was dramatized for BBC Radio 4 in August 2008, and is now being turned into a major new movie for Universal Pictures Films.<br>He is currently working on his eighth, ninth and tenth books.&nbsp;You can get in touch with Robert by emailing r.alexnader<a href="mailto:j.doe@newsweek.com" data-mce-href="mailto:j.doe@newsweek.com">@newsweek.com</a>. Languages: English, French, German.&nbsp;</p>
</span>
<a href="javascript:void(0);" rel="author" data-id="reporter_0"> Robert Alexander </a>
</span>            
<p>
<span id="dots-description"><p>Robert Charles Alexander is the Senior Crime and Court Reporter for Newsweek based in London. He formerly worked as a                                    ...
<a onclick="toggleDescription()" id="read-more-btn">Read more</a>
</p></span></p>  </section>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Is the A.I. Boom Turning Into an A.I. Bubble? (109 pts)]]></title>
            <link>https://www.newyorker.com/news/the-financial-page/is-the-ai-boom-turning-into-an-ai-bubble</link>
            <guid>44879373</guid>
            <pubDate>Tue, 12 Aug 2025 17:25:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.newyorker.com/news/the-financial-page/is-the-ai-boom-turning-into-an-ai-bubble">https://www.newyorker.com/news/the-financial-page/is-the-ai-boom-turning-into-an-ai-bubble</a>, See on <a href="https://news.ycombinator.com/item?id=44879373">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-journey-hook="client-content" data-testid="ArticlePageChunks"><figure data-testid="cne-audio-embed-figure"></figure><p>When <a href="https://www.newyorker.com/magazine/2023/12/04/how-jensen-huangs-nvidia-is-powering-the-ai-revolution">Jensen Huang</a>, the chief executive of the chipmaker Nvidia, met with <a href="https://www.newyorker.com/tag/donald-trump">Donald Trump</a> in the White House last week, he had reason to be cheerful. Most of Nvidia’s chips, which are widely used to train generative artificial-intelligence models, are manufactured in Asia. Earlier this year, it pledged to increase production in the United States, and on Wednesday Trump announced that chip companies that promise to build products in the United States would be exempt from some hefty new tariffs on semiconductors that his Administration is preparing to impose. The next day, Nvidia’s stock hit a new all-time high, and its market capitalization reached $4.4 trillion, making it the world’s most valuable company, ahead of Microsoft, which is also heavily involved in A.I.</p><p>Welcome to the A.I. boom, or should I say the A.I. bubble? It has been more than a quarter of a century since the bursting of the great dot-com bubble, during which hundreds of unprofitable internet startups issued stock on the Nasdaq, and the share prices of many tech companies rose into the stratosphere. In March and April of 2000, tech stocks plummeted; subsequently many, but by no means all, of the internet startups went out of business. There has been some discussion on Wall Street in the past few months about whether the current surge in tech is following a similar trajectory. In a <a data-offer-url="https://www.goldmansachs.com/pdfs/insights/goldman-sachs-research/25-years-on-lessons-from-the-bursting-of-the-tech-bubble/redaction.pdf" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.goldmansachs.com/pdfs/insights/goldman-sachs-research/25-years-on-lessons-from-the-bursting-of-the-tech-bubble/redaction.pdf&quot;}" href="https://www.goldmansachs.com/pdfs/insights/goldman-sachs-research/25-years-on-lessons-from-the-bursting-of-the-tech-bubble/redaction.pdf" rel="nofollow noopener" target="_blank">research paper</a> entitled “25 Years On; Lessons from the Bursting of the Technology Bubble,” which was published in March, a team of investment analysts from Goldman Sachs argued that it wasn’t: “While enthusiasm for technology stocks has risen sharply in recent years, this has not represented a bubble because the price appreciation has been justified by strong profit fundamentals.” The analysts pointed to the earnings power of the so-called Magnificent Seven companies: Alphabet, Amazon, Apple, Meta, Microsoft, Nvidia, and Tesla. Between the first quarter of 2022 and the first quarter of this year, Nvidia’s revenues quintupled, and its after-tax profits rose more than tenfold.</p><p>The Goldman paper also provided a salutary history lesson. Between 1995 and 2000, it pointed out, the tech-heavy Nasdaq index rose fivefold, and at the peak of the market a widely used valuation measure for the stocks that trade on it—the price-to-earnings ratio, or “P/E”—topped a hundred and fifty, a level not seen before or since then. By comparison, the five-year period from March, 2020, to March, 2025, had been relatively tame. It’s true, the Nasdaq had roughly doubled, and the P/E ratio had gone up considerably; but it hadn’t got anywhere near three figures.</p><p>Having written <a data-offer-url="https://www.amazon.com/Dot-America-Lost-Money-Internet/dp/0060008814" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.amazon.com/Dot-America-Lost-Money-Internet/dp/0060008814&quot;}" href="https://www.amazon.com/Dot-America-Lost-Money-Internet/dp/0060008814" rel="nofollow noopener" target="_blank" data-aps-asin="0060008814" data-aps-asc-tag="">extensively</a> on the dot-com boom and bust, I found some of Goldman’s analysis persuasive. Many people have either forgotten, or are too young to remember, the extremes reached during the dot-com years. In the logic of speculative hysterias—from the seventeenth-century “tulipmania” in Holland to the rise of Pets.com—greed, <em>FOMO</em>, and the greater-fool theory of investing eventually combine to banish caution, common sense, and financial gravity. Back in March, there was plenty of <em>FOMO</em> and trend-following on Wall Street, but it hadn’t reached the levels of the late nineties. Five months on, however, echoes of the dot-com era are getting louder.</p><p>Consider Palantir Technologies, whose A.I. software is used by the Pentagon, the C.I.A., and <em>ICE</em>, not to mention by many commercial companies. A couple of days before Huang visited the White House, Palantir released a positive earnings report. By the end of the week, according to the Yahoo Finance database, the market was valuing the company at more than six hundred times its earnings from the past twelve months, and at about a hundred and thirty times its sales in that same time span. Even during the late nineties, figures like these would have raised eyebrows.</p><p>Eye-popping I.P.O.s, another feature of the dot-com era, are also making a comeback. At the end of July, Figma, a firm that makes software used by internet developers, and which has added A.I. features to its suite of products, issued stock on the New York Stock Exchange at thirty-three dollars a share. When trading started, the price jumped to eighty-five. It closed the day at $115.50—a two-hundred-and-fifty-per-cent gain on the offering price. Watching this market action, I was reminded of August 9, 1995, when Netscape, which made the Netscape Navigator web browser, went public. Its stock was priced at twenty-eight dollars, rose to seventy-five, and closed at $58.25. In percentage terms, this leap was smaller than the first-day rise in Figma’s stock, but it’s often described as the beginning of the dot-com bubble.</p><p>It should be noted that, since Figma’s I.P.O., its stock has fallen back to below eighty dollars. This could be interpreted as a sign of sanity prevailing, but, given that the shares are still trading at more than double the offering price, other privately owned A.I. companies will be encouraged to enter the stock market. Renaissance Capital, a research firm that specializes in I.P.O.s, lists eight prominent candidates: OpenAI, Anthropic, Cohere, Databricks, SymphonyAI, Waymo, Scale AI, and Perplexity. Almost all of these companies are unicorns: they have been valued at more than a billion dollars in fund-raising deals with venture capitalists and other early investors. But, across the country, according to the research firm Tracxn, there are about seven thousand smaller and lesser-known A.I. companies, more than a thousand of which have already received Series A funding from external backers to finance their operations.</p><p>The ready availability of early-stage funding means that a necessary condition for a dot-com-style bubble is in place. So are three more: excitement among investors about a pathbreaking technology—generative A.I. clearly has the potential to impact great swaths of the economy; a Wall Street production line staffed by investment bankers eager to earn fees for organizing I.P.O.s; and accommodative policy. Last month, the Trump Administration announced an “<a href="https://www.whitehouse.gov/wp-content/uploads/2025/07/Americas-AI-Action-Plan.pdf">AI Action Plan</a>,” which aims to remove barriers to the deployment of the new technology and to deter individual states from introducing “burdensome” regulatory A.I. laws. The Federal Reserve, meanwhile, appears to be preparing to <a href="https://www.newyorker.com/news/the-financial-page/donald-trumps-war-with-jerome-powell-and-the-fed-is-far-from-over">cut interest rates</a> next month, which could give another boost to the markets.</p><p>There are, however, some important differences between now and the nineties, one of which is that the online economy is no longer a vast open plain on which enterprising individuals can propose to build castles to the sky. It is a redoubt of monopoly capitalism, in which Big Tech dominates the horizon. During the dot-com era, or its early stages, anyway, small startups could reasonably hope to exploit first-mover advantage, gain early traction, and create durable business franchises. In the A.I. economy, it seems possible that many of the rewards will go to top firms that can afford to build and maintain large A.I. models and can use their market power and financial might to ward off, or buy out, potential competitors. A vigorous antitrust policy could perhaps prevent this from happening, but, as the <em>Wall Street Journal</em> <a data-offer-url="https://www.wsj.com/us-news/law/maga-antitrust-agenda-under-siege-by-lobbyists-close-to-trump-18558898" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.wsj.com/us-news/law/maga-antitrust-agenda-under-siege-by-lobbyists-close-to-trump-18558898&quot;}" href="https://www.wsj.com/us-news/law/maga-antitrust-agenda-under-siege-by-lobbyists-close-to-trump-18558898" rel="nofollow noopener" target="_blank">reported</a> last week, the Administration’s pledge to pursue such a policy is now under threat from lobbyists and power brokers with close ties to the President. If investors decide that monopolies are the future of the A.I.-driven economy, the outcome in the stock market could well mean further gains for existing industry giants rather than a broad-based bubble.</p><p>All of this is uncertain, of course. The A.I. boom is still in the stage of building out infrastructure—training large language models, building data centers, and so on. A.I. applications are just beginning to diffuse throughout the economy, and nobody knows for sure just how transformative, and profitable, the technology will be. In this environment, many investors are following the time-honored gold-rush strategy of buying the shovel-makers and big mine owners. But history teaches us that even this strategy is far from risk-free. In an interesting analysis that was posted on the financial-news platform Seeking Alpha, an analyst identified as KCI Research compared Nvidia to Cisco Systems, one of the firms whose stock went parabolic in 1998-99. Just as Nvidia’s G.P.U.s (graphics-processing units) are now widely regarded as must-have components of A.I. infrastructure, Cisco’s routers and other network equipment were viewed as essential components of the internet build-out; for a time, demand for them seemed virtually unlimited. Like Nvidia, Cisco was an innovative and highly profitable company. But, in April of 2000, its stock dropped by almost forty per cent, and a year later it had fallen by about eighty per cent. A quarter of a century on, it still hasn’t recovered the high it hit in early 2000, although, lately, it has come close.</p><p>The Nvidia-Cisco comparison was a useful reminder of a dictum from the pioneering stock analyst Benjamin Graham, who was a mentor to Warren Buffett: in the short run, the stock market is a voting machine, but in the long run it is a weighing machine that weighs the cash flows that companies generate. Ironically, the Nvidia-Cisco analogy also inadvertently demonstrated how long the short run can last for, and how dangerous it can be to predict its end date. The analysis was posted in February of last year. Since then, Nvidia’s stock price has risen by another hundred and fifty per cent.&nbsp;♦</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Claude vs. Gemini: Testing on 1M Tokens of Context (142 pts)]]></title>
            <link>https://every.to/vibe-check/vibe-check-claude-sonnet-4-now-has-a-1-million-token-context-window</link>
            <guid>44878999</guid>
            <pubDate>Tue, 12 Aug 2025 16:59:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://every.to/vibe-check/vibe-check-claude-sonnet-4-now-has-a-1-million-token-context-window">https://every.to/vibe-check/vibe-check-claude-sonnet-4-now-has-a-1-million-token-context-window</a>, See on <a href="https://news.ycombinator.com/item?id=44878999">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <p><a>
        <img src="https://every.to/assets/every-logo-white-d8b0c13c4b860174d4ac9717f446538ba8fa4f3b3736dde0de86e37bfc756789.svg" alt="Every">
      </a></p><h2>
       What Comes <span>N</span>ext
      </h2>
      <p>
        New ideas to help you build the future—in your inbox, every day.
      </p>
      
      <p>
        This site is protected by reCAPTCHA and the Google
        <a href="https://policies.google.com/privacy">Privacy Policy</a> and
        <a href="https://policies.google.com/terms">Terms of Service</a> apply.
      </p>
      <p><span>©2025 Every Media, Inc.</span>
    </p></div><p><span>©2025 Every Media, Inc.</span>
  </p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[WHY2025: How to become your own ISP [video] (192 pts)]]></title>
            <link>https://media.ccc.de/v/why2025-9-how-to-become-your-own-isp</link>
            <guid>44878916</guid>
            <pubDate>Tue, 12 Aug 2025 16:53:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://media.ccc.de/v/why2025-9-how-to-become-your-own-isp">https://media.ccc.de/v/why2025-9-how-to-become-your-own-isp</a>, See on <a href="https://news.ycombinator.com/item?id=44878916">Hacker News</a></p>
<div id="readability-page-1" class="page">

<div>
<ol>
<li>
<a href="https://media.ccc.de/b">
browse
</a>
</li>
<li>
<span></span>
<a href="https://media.ccc.de/b/conferences">
conferences
</a>
</li>
<li>
<span></span>
<a href="https://media.ccc.de/b/conferences/camp-NL">
camp-NL
</a>
</li>
<li>
<span></span>
<a href="https://media.ccc.de/b/conferences/camp-NL/why2025">
why2025
</a>
</li>
<li>
<span></span>
event
</li>
</ol>
</div>

<main>

<p>
<span></span>
<a href="https://media.ccc.de/search?p=Nick+Bouwhuis">Nick Bouwhuis</a>

</p>

<a href="https://media.ccc.de/c/WHY2025/Brachium" rel="tag">Brachium</a>
<a href="https://media.ccc.de/c/WHY2025/Wonderful%20creations" rel="tag">Wonderful creations</a>
Playlists:
<a href="https://media.ccc.de/v/why2025-9-how-to-become-your-own-isp/playlist">'WHY2025' videos starting here</a>
/
<a data-method="get" href="https://media.ccc.de/v/why2025-9-how-to-become-your-own-isp/audio">audio</a>

<!-- %h3 About -->
<p>This talk will take you along with a deep dive on how the internet works at its core and how you can participate yourself. You'll learn all about BGP, AS- numbers, IP-prefixes and more.</p>

<p>Ever wanted to become sovereign on the internet? Want to know what its like to run an ISP? Are you a sysadmin that wants to learn more about networking? Then you're at the right place.</p>

<p>This talk will take you along with a deep dive on how the internet works at its core and how you can participate yourself. You'll learn all about BGP, AS- numbers, IP-prefixes and what you need to do if you want to participate. You will walk away with practical knowledge on how you can get started. </p>

<p>We'll also take a short tour of my own network, how I set it up and what I use it for.</p>

<p>Licensed to the public under https://creativecommons.org/licenses/by/4.0/</p>

<h3>Download</h3>
<div>
<p>
<h4>Audio</h4>
</p>

</div>
<!-- %h3 Embed/Share -->

<h3>Tags</h3>

</main>





</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Omnara – Run Claude Code from Anywhere (284 pts)]]></title>
            <link>https://github.com/omnara-ai/omnara</link>
            <guid>44878650</guid>
            <pubDate>Tue, 12 Aug 2025 16:33:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/omnara-ai/omnara">https://github.com/omnara-ai/omnara</a>, See on <a href="https://news.ycombinator.com/item?id=44878650">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Omnara - Mission Control for Your AI Agents 🚀</h2><a id="user-content-omnara---mission-control-for-your-ai-agents-" aria-label="Permalink: Omnara - Mission Control for Your AI Agents 🚀" href="#omnara---mission-control-for-your-ai-agents-"></a></p>
<p dir="auto"><strong>Your AI workforce launchpad, in your pocket.</strong></p>
<p dir="auto"><a href="https://badge.fury.io/py/omnara" rel="nofollow"><img src="https://camo.githubusercontent.com/4e9f14c1aac8602c0a5034778f609314d70f54cb7541229060d5d60d870d919f/68747470733a2f2f62616467652e667572792e696f2f70792f6f6d6e6172612e737667" alt="PyPI version" data-canonical-src="https://badge.fury.io/py/omnara.svg"></a>
<a href="https://pepy.tech/project/omnara" rel="nofollow"><img src="https://camo.githubusercontent.com/b1a6283158a416f2cbb8e0b6c827c299fc90cc79a0db9e49794df703ab4c9397/68747470733a2f2f706570792e746563682f62616467652f6f6d6e617261" alt="Downloads" data-canonical-src="https://pepy.tech/badge/omnara"></a>
<a href="https://pypi.org/project/omnara/" rel="nofollow"><img src="https://camo.githubusercontent.com/f26a090cb9637e79f33aa901f555c51112f59499cb33499162b774fe8e2fc0af/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6f6d6e6172612e737667" alt="Python Versions" data-canonical-src="https://img.shields.io/pypi/pyversions/omnara.svg"></a>
<a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"><img src="https://camo.githubusercontent.com/5ce2e21e84680df1ab24807babebc3417d27d66e0826a350eb04ab57f4c8f3e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4170616368655f322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache_2.0-blue.svg"></a>
<a href="https://github.com/omnara-ai/omnara"><img src="https://camo.githubusercontent.com/616c2bbd8593ee60f04a41c8c44e87113b33eab0839196d0caa2eb7d85767d92/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6f6d6e6172612d61692f6f6d6e6172613f7374796c653d736f6369616c" alt="GitHub stars" data-canonical-src="https://img.shields.io/github/stars/omnara-ai/omnara?style=social"></a>
<a href="https://github.com/astral-sh/ruff"><img src="https://camo.githubusercontent.com/051a04ae958f4a1a5d6444df4cdc520305eef93d5028e6d4c7cd16efa3136cd4/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f61737472616c2d73682f727566662f6d61696e2f6173736574732f62616467652f76322e6a736f6e" alt="Ruff" data-canonical-src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/omnara-ai/omnara/blob/main/docs/assets/three-panel.png"><img src="https://github.com/omnara-ai/omnara/raw/main/docs/assets/three-panel.png" alt="Omnara Mobile Experience"></a></p>

<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 What is Omnara?</h2><a id="user-content--what-is-omnara" aria-label="Permalink: 🚀 What is Omnara?" href="#-what-is-omnara"></a></p>
<p dir="auto">Omnara transforms your AI agents (Claude Code, Cursor, GitHub Copilot, and more) from silent workers into communicative teammates. Get real-time visibility into what your agents are doing, respond to their questions instantly, and guide them to success - all from your phone.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">✨ Key Features</h3><a id="user-content--key-features" aria-label="Permalink: ✨ Key Features" href="#-key-features"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Feature</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>📊 Real-Time Monitoring</strong></td>
<td>See every step your AI agents take as they work</td>
</tr>
<tr>
<td><strong>💬 Interactive Q&amp;A</strong></td>
<td>Respond instantly when agents need guidance</td>
</tr>
<tr>
<td><strong>📱 Mobile-First Design</strong></td>
<td>Full control from your phone, tablet, or desktop</td>
</tr>
<tr>
<td><strong>🔔 Smart Notifications</strong></td>
<td>Get alerted only when your input is needed</td>
</tr>
<tr>
<td><strong>🎯 Universal Dashboard</strong></td>
<td>All your AI agents in one unified interface</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h3 tabindex="-1" dir="auto">🎬 See It In Action</h3><a id="user-content--see-it-in-action" aria-label="Permalink: 🎬 See It In Action" href="#-see-it-in-action"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/omnara-ai/omnara/blob/main/docs/assets/iNotifications-Stack.gif"><img src="https://github.com/omnara-ai/omnara/raw/main/docs/assets/iNotifications-Stack.gif" alt="Mobile Notifications" data-animated-image=""></a></p>
<blockquote>
<p dir="auto"><em>The moment your agent needs help, you're there. No more returning to failed jobs hours later.</em></p>
</blockquote>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/omnara-ai/omnara/blob/main/docs/assets/Mobile-app-showcase.gif"><img src="https://github.com/omnara-ai/omnara/raw/main/docs/assets/Mobile-app-showcase.gif" alt="Agent Activity Feed" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">💡 Why Omnara?</h2><a id="user-content--why-omnara" aria-label="Permalink: 💡 Why Omnara?" href="#-why-omnara"></a></p>
<p dir="auto">We built Omnara because we were tired of:</p>
<ul dir="auto">
<li>❌ Starting long agent jobs and finding them stuck hours later</li>
<li>❌ Missing critical questions that blocked progress</li>
<li>❌ Having no visibility into what our AI was actually doing</li>
<li>❌ Being tied to our desks while agents worked</li>
</ul>
<p dir="auto"><strong>Now you can:</strong></p>
<ul dir="auto">
<li>✅ Launch agents and monitor them from anywhere</li>
<li>✅ Get push notifications when input is needed</li>
<li>✅ Send real-time feedback to guide your agents</li>
<li>✅ Have confidence your AI workforce is productive</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🎯 Real-World Use Cases</h2><a id="user-content--real-world-use-cases" aria-label="Permalink: 🎯 Real-World Use Cases" href="#-real-world-use-cases"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🔍 <strong>Code Review Assistant</strong></h3><a id="user-content--code-review-assistant" aria-label="Permalink: 🔍 Code Review Assistant" href="#-code-review-assistant"></a></p>
<p dir="auto">Launch Claude to review PRs while you're at lunch. Get notified only if it needs clarification on architectural decisions.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🚨 <strong>Production Firefighter</strong></h3><a id="user-content--production-firefighter" aria-label="Permalink: 🚨 Production Firefighter" href="#-production-firefighter"></a></p>
<p dir="auto">Debug production issues from your phone at 2am. See exactly what your agent is investigating and guide it to the right logs.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">📊 <strong>Data Pipeline Guardian</strong></h3><a id="user-content--data-pipeline-guardian" aria-label="Permalink: 📊 Data Pipeline Guardian" href="#-data-pipeline-guardian"></a></p>
<p dir="auto">Start a 6-hour data migration before leaving work. Get alerts if anything looks suspicious, approve schema changes on the go.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🏗️ <strong>Refactoring Copilot</strong></h3><a id="user-content-️-refactoring-copilot" aria-label="Permalink: 🏗️ Refactoring Copilot" href="#️-refactoring-copilot"></a></p>
<p dir="auto">Let Claude refactor that legacy module while you're in meetings. Answer its questions about business logic without context switching.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🧪 <strong>Test Suite Doctor</strong></h3><a id="user-content--test-suite-doctor" aria-label="Permalink: 🧪 Test Suite Doctor" href="#-test-suite-doctor"></a></p>
<p dir="auto">Have Claude fix failing tests overnight. Wake up to either green builds or specific questions about expected behavior.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🏗️ Architecture Overview</h2><a id="user-content-️-architecture-overview" aria-label="Permalink: 🏗️ Architecture Overview" href="#️-architecture-overview"></a></p>
<p dir="auto">Omnara provides a unified platform for monitoring and controlling your AI agents:</p>
<section data-identity="a42a6243-d3d4-49ce-b2c7-b23ca2d94e54" data-host="https://viewscreen.githubusercontent.com" data-src="https://viewscreen.githubusercontent.com/markdown/mermaid?docs_host=https%3A%2F%2Fdocs.github.com" data-type="mermaid" aria-label="mermaid rendered output container">
  <div dir="auto" data-json="{&quot;data&quot;:&quot;graph TB\n    subgraph \&quot;Your AI Agents\&quot;\n        A[🤖 AI Agents&amp;lt;br/&amp;gt;Claude Code, Cursor, etc.]\n    end\n\n    subgraph \&quot;Omnara Platform\&quot;\n        API[🌐 API Server]\n        DB[(📊 PostgreSQL)]\n        NOTIFY[🔔 Notification Service&amp;lt;br/&amp;gt;Push/Email/SMS]\n    end\n\n    subgraph \&quot;Your Devices\&quot;\n        M[📱 Mobile App]\n        W[💻 Web Dashboard]\n    end\n\n    A --&amp;gt;|Send updates| API\n    API --&amp;gt;|Store data| DB\n    API --&amp;gt;|Trigger notifications| NOTIFY\n    NOTIFY --&amp;gt;|Alert users| M\n    DB --&amp;gt;|Real-time sync| M\n    DB --&amp;gt;|Real-time sync| W\n    M --&amp;gt;|User responses| API\n    W --&amp;gt;|User responses| API\n    API --&amp;gt;|Deliver feedback| A\n\n    style A fill:#e3f2fd,stroke:#1976d2,stroke-width:3px\n    style API fill:#c8e6c9,stroke:#388e3c,stroke-width:2px\n    style DB fill:#ffccbc,stroke:#d84315,stroke-width:2px\n    style NOTIFY fill:#fff59d,stroke:#f57f17,stroke-width:2px\n    style M fill:#f8bbd0,stroke:#c2185b,stroke-width:3px\n    style W fill:#f8bbd0,stroke:#c2185b,stroke-width:3px\n&quot;}" data-plain="graph TB
    subgraph &quot;Your AI Agents&quot;
        A[🤖 AI Agents<br/>Claude Code, Cursor, etc.]
    end

    subgraph &quot;Omnara Platform&quot;
        API[🌐 API Server]
        DB[(📊 PostgreSQL)]
        NOTIFY[🔔 Notification Service<br/>Push/Email/SMS]
    end

    subgraph &quot;Your Devices&quot;
        M[📱 Mobile App]
        W[💻 Web Dashboard]
    end

    A -->|Send updates| API
    API -->|Store data| DB
    API -->|Trigger notifications| NOTIFY
    NOTIFY -->|Alert users| M
    DB -->|Real-time sync| M
    DB -->|Real-time sync| W
    M -->|User responses| API
    W -->|User responses| API
    API -->|Deliver feedback| A

    style A fill:#e3f2fd,stroke:#1976d2,stroke-width:3px
    style API fill:#c8e6c9,stroke:#388e3c,stroke-width:2px
    style DB fill:#ffccbc,stroke:#d84315,stroke-width:2px
    style NOTIFY fill:#fff59d,stroke:#f57f17,stroke-width:2px
    style M fill:#f8bbd0,stroke:#c2185b,stroke-width:3px
    style W fill:#f8bbd0,stroke:#c2185b,stroke-width:3px
">
      <pre lang="mermaid" aria-label="Raw mermaid code">graph TB
    subgraph "Your AI Agents"
        A[🤖 AI Agents&lt;br/&gt;Claude Code, Cursor, etc.]
    end

    subgraph "Omnara Platform"
        API[🌐 API Server]
        DB[(📊 PostgreSQL)]
        NOTIFY[🔔 Notification Service&lt;br/&gt;Push/Email/SMS]
    end

    subgraph "Your Devices"
        M[📱 Mobile App]
        W[💻 Web Dashboard]
    end

    A --&gt;|Send updates| API
    API --&gt;|Store data| DB
    API --&gt;|Trigger notifications| NOTIFY
    NOTIFY --&gt;|Alert users| M
    DB --&gt;|Real-time sync| M
    DB --&gt;|Real-time sync| W
    M --&gt;|User responses| API
    W --&gt;|User responses| API
    API --&gt;|Deliver feedback| A

    style A fill:#e3f2fd,stroke:#1976d2,stroke-width:3px
    style API fill:#c8e6c9,stroke:#388e3c,stroke-width:2px
    style DB fill:#ffccbc,stroke:#d84315,stroke-width:2px
    style NOTIFY fill:#fff59d,stroke:#f57f17,stroke-width:2px
    style M fill:#f8bbd0,stroke:#c2185b,stroke-width:3px
    style W fill:#f8bbd0,stroke:#c2185b,stroke-width:3px
</pre>
    </div>
  <span role="presentation">
    <span data-view-component="true">
      <span>Loading</span>
</span>
  </span>
</section>

<p dir="auto"><h3 tabindex="-1" dir="auto">🚀 How It Works</h3><a id="user-content--how-it-works" aria-label="Permalink: 🚀 How It Works" href="#-how-it-works"></a></p>
<p dir="auto"><strong>1. Connect Your Agent</strong> → Install Omnara SDK or wrapper<br>
<strong>2. Get Real-Time Updates</strong> → See every step your agent takes<br>
<strong>3. Respond Instantly</strong> → Answer questions from anywhere</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🔄 Two Ways to Use Omnara</h3><a id="user-content--two-ways-to-use-omnara" aria-label="Permalink: 🔄 Two Ways to Use Omnara" href="#-two-ways-to-use-omnara"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Mode</th>
<th>Setup</th>
<th>How It Works</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Real-Time Monitoring</strong></td>
<td><code>omnara</code> or <code>uv run omnara</code></td>
<td>Monitor your Claude session, forwards to Omnara</td>
</tr>
<tr>
<td><strong>Remote Launch</strong></td>
<td><code>omnara serve</code> or <code>uv run omnara serve</code></td>
<td>Launch agents from phone, communicate via MCP</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h3 tabindex="-1" dir="auto">🔧 Technical Stack</h3><a id="user-content--technical-stack" aria-label="Permalink: 🔧 Technical Stack" href="#-technical-stack"></a></p>
<ul dir="auto">
<li><strong>Backend</strong>: FastAPI with separate read/write servers for optimal performance</li>
<li><strong>Frontend</strong>: React (Web) + React Native (Mobile)</li>
<li><strong>Protocol</strong>: Model Context Protocol (MCP) + REST API</li>
<li><strong>Database</strong>: PostgreSQL with SQLAlchemy ORM</li>
<li><strong>Auth</strong>: Dual JWT system (Supabase for users, custom for agents)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 Quick Start</h2><a id="user-content--quick-start" aria-label="Permalink: 🚀 Quick Start" href="#-quick-start"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 1: Monitor Your Claude Sessions</h3><a id="user-content-option-1-monitor-your-claude-sessions" aria-label="Permalink: Option 1: Monitor Your Claude Sessions" href="#option-1-monitor-your-claude-sessions"></a></p>
<p dir="auto">See what Claude is doing in real-time:</p>
<ol dir="auto">
<li><strong>Install Omnara</strong>:
<div dir="auto" data-snippet-clipboard-copy-content="# Using pip
pip install omnara

# Using uv (faster)
uv pip install omnara"><pre><span><span>#</span> Using pip</span>
pip install omnara

<span><span>#</span> Using uv (faster)</span>
uv pip install omnara</pre></div>
</li>
<li><strong>Start monitoring</strong>:
<div dir="auto" data-snippet-clipboard-copy-content="# If installed with pip
omnara

# If installed with uv
uv run omnara"><pre><span><span>#</span> If installed with pip</span>
omnara

<span><span>#</span> If installed with uv</span>
uv run omnara</pre></div>
</li>
<li><strong>Authenticate</strong> in your browser (opens automatically)</li>
<li><strong>See everything</strong> your agent does in the Omnara dashboard!</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 2: Launch Agents Remotely</h3><a id="user-content-option-2-launch-agents-remotely" aria-label="Permalink: Option 2: Launch Agents Remotely" href="#option-2-launch-agents-remotely"></a></p>
<p dir="auto">Trigger Claude from your phone:</p>
<ol dir="auto">
<li><strong>Start the server</strong> on your computer:
<div dir="auto" data-snippet-clipboard-copy-content="# Using pip
pip install omnara
omnara serve

# Using uv (faster)
uv pip install omnara
uv run omnara serve"><pre><span><span>#</span> Using pip</span>
pip install omnara
omnara serve

<span><span>#</span> Using uv (faster)</span>
uv pip install omnara
uv run omnara serve</pre></div>
</li>
<li><strong>Set up your agent</strong> in the mobile app with the webhook URL shown</li>
<li><strong>Launch agents</strong> from anywhere - beach, coffee shop, bed!</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">For Developers</h3><a id="user-content-for-developers" aria-label="Permalink: For Developers" href="#for-developers"></a></p>
<details>
<summary><b>🛠️ Development Setup</b></summary>
<p dir="auto"><h4 tabindex="-1" dir="auto">Prerequisites</h4><a id="user-content-prerequisites" aria-label="Permalink: Prerequisites" href="#prerequisites"></a></p>
<ul dir="auto">
<li>Python 3.10+</li>
<li>PostgreSQL</li>
<li>Node.js (for CLI tools)</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Setup Steps</h4><a id="user-content-setup-steps" aria-label="Permalink: Setup Steps" href="#setup-steps"></a></p>
<ol dir="auto">
<li>
<p dir="auto"><strong>Clone and enter the repository</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/omnara-ai/omnara
cd omnara"><pre>git clone https://github.com/omnara-ai/omnara
<span>cd</span> omnara</pre></div>
</li>
<li>
<p dir="auto"><strong>Set up Python environment</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="python -m venv .venv
source .venv/bin/activate  # Windows: .venv\Scripts\activate
make dev-install"><pre>python -m venv .venv
<span>source</span> .venv/bin/activate  <span><span>#</span> Windows: .venv\Scripts\activate</span>
make dev-install</pre></div>
</li>
<li>
<p dir="auto"><strong>Generate JWT keys</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="python scripts/generate_jwt_keys.py"><pre>python scripts/generate_jwt_keys.py</pre></div>
</li>
<li>
<p dir="auto"><strong>Configure environment</strong> (create <code>.env</code> file)</p>
<div dir="auto" data-snippet-clipboard-copy-content="DATABASE_URL=postgresql://user:password@localhost:5432/omnara
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-anon-key
JWT_PRIVATE_KEY='-----BEGIN RSA PRIVATE KEY-----\n...'
JWT_PUBLIC_KEY='-----BEGIN PUBLIC KEY-----\n...'"><pre><span>DATABASE_URL</span><span>=</span><span>postgresql://user:password@localhost:5432/omnara</span>
<span>SUPABASE_URL</span><span>=</span><span>https://your-project.supabase.co</span>
<span>SUPABASE_ANON_KEY</span><span>=</span><span>your-anon-key</span>
<span>JWT_PRIVATE_KEY</span><span>=</span><span><span>'</span>-----BEGIN RSA PRIVATE KEY-----\n...<span>'</span></span>
<span>JWT_PUBLIC_KEY</span><span>=</span><span><span>'</span>-----BEGIN PUBLIC KEY-----\n...<span>'</span></span></pre></div>
</li>
<li>
<p dir="auto"><strong>Initialize database</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="cd shared/
alembic upgrade head
cd .."><pre><span>cd</span> shared/
alembic upgrade head
<span>cd</span> ..</pre></div>
</li>
<li>
<p dir="auto"><strong>Run services</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Terminal 1: MCP + REST Server
python -m servers.app

# Terminal 2: Backend API
cd backend &amp;&amp; python -m main"><pre><span><span>#</span> Terminal 1: MCP + REST Server</span>
python -m servers.app

<span><span>#</span> Terminal 2: Backend API</span>
<span>cd</span> backend <span>&amp;&amp;</span> python -m main</pre></div>
</li>
</ol>
</details>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔧 Advanced Usage (Without CLI)</h2><a id="user-content--advanced-usage-without-cli" aria-label="Permalink: 🔧 Advanced Usage (Without CLI)" href="#-advanced-usage-without-cli"></a></p>
<blockquote>
<p dir="auto"><strong>Note</strong>: Most users should use the simple <code>omnara</code> or <code>omnara serve</code> commands shown above. These methods are for advanced users who need custom integrations or want to run the underlying scripts directly.</p>
</blockquote>
<p dir="auto"><h3 tabindex="-1" dir="auto">Method 1: Direct Wrapper Script</h3><a id="user-content-method-1-direct-wrapper-script" aria-label="Permalink: Method 1: Direct Wrapper Script" href="#method-1-direct-wrapper-script"></a></p>
<p dir="auto">Run the monitoring wrapper directly (what <code>omnara</code> does under the hood):</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Basic usage
python -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY

# With git diff tracking
python -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY --git-diff

# Custom API endpoint (for self-hosted)
python -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY --base-url https://your-server.com"><pre><span><span>#</span> Basic usage</span>
python -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY

<span><span>#</span> With git diff tracking</span>
python -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY --git-diff

<span><span>#</span> Custom API endpoint (for self-hosted)</span>
python -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY --base-url https://your-server.com</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Method 2: Manual MCP Configuration</h3><a id="user-content-method-2-manual-mcp-configuration" aria-label="Permalink: Method 2: Manual MCP Configuration" href="#method-2-manual-mcp-configuration"></a></p>
<p dir="auto">For custom MCP setups, you can configure manually:</p>
<div dir="auto" data-snippet-clipboard-copy-content="{
  &quot;mcpServers&quot;: {
    &quot;omnara&quot;: {
      &quot;command&quot;: &quot;pipx&quot;,
      &quot;args&quot;: [&quot;run&quot;, &quot;--no-cache&quot;, &quot;omnara&quot;, &quot;mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]
    }
  }
}"><pre>{
  <span>"mcpServers"</span>: {
    <span>"omnara"</span>: {
      <span>"command"</span>: <span><span>"</span>pipx<span>"</span></span>,
      <span>"args"</span>: [<span><span>"</span>run<span>"</span></span>, <span><span>"</span>--no-cache<span>"</span></span>, <span><span>"</span>omnara<span>"</span></span>, <span><span>"</span>mcp<span>"</span></span>, <span><span>"</span>--api-key<span>"</span></span>, <span><span>"</span>YOUR_API_KEY<span>"</span></span>]
    }
  }
}</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Method 3: Python SDK</h3><a id="user-content-method-3-python-sdk" aria-label="Permalink: Method 3: Python SDK" href="#method-3-python-sdk"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="from omnara import OmnaraClient
import uuid

client = OmnaraClient(api_key=&quot;your-api-key&quot;)
instance_id = str(uuid.uuid4())

# Log progress and check for user feedback
response = client.send_message(
    agent_type=&quot;claude-code&quot;,
    content=&quot;Analyzing codebase structure&quot;,
    agent_instance_id=instance_id,
    requires_user_input=False
)

# Ask for user input when needed
answer = client.send_message(
    content=&quot;Should I refactor this legacy module?&quot;,
    agent_instance_id=instance_id,
    requires_user_input=True
)"><pre><span>from</span> <span>omnara</span> <span>import</span> <span>OmnaraClient</span>
<span>import</span> <span>uuid</span>

<span>client</span> <span>=</span> <span>OmnaraClient</span>(<span>api_key</span><span>=</span><span>"your-api-key"</span>)
<span>instance_id</span> <span>=</span> <span>str</span>(<span>uuid</span>.<span>uuid4</span>())

<span># Log progress and check for user feedback</span>
<span>response</span> <span>=</span> <span>client</span>.<span>send_message</span>(
    <span>agent_type</span><span>=</span><span>"claude-code"</span>,
    <span>content</span><span>=</span><span>"Analyzing codebase structure"</span>,
    <span>agent_instance_id</span><span>=</span><span>instance_id</span>,
    <span>requires_user_input</span><span>=</span><span>False</span>
)

<span># Ask for user input when needed</span>
<span>answer</span> <span>=</span> <span>client</span>.<span>send_message</span>(
    <span>content</span><span>=</span><span>"Should I refactor this legacy module?"</span>,
    <span>agent_instance_id</span><span>=</span><span>instance_id</span>,
    <span>requires_user_input</span><span>=</span><span>True</span>
)</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Method 4: REST API</h3><a id="user-content-method-4-rest-api" aria-label="Permalink: Method 4: REST API" href="#method-4-rest-api"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="curl -X POST https://api.omnara.ai/api/v1/messages/agent \
  -H &quot;Authorization: Bearer YOUR_API_KEY&quot; \
  -H &quot;Content-Type: application/json&quot; \
  -d '{&quot;content&quot;: &quot;Starting deployment process&quot;, &quot;agent_type&quot;: &quot;claude-code&quot;, &quot;requires_user_input&quot;: false}'"><pre>curl -X POST https://api.omnara.ai/api/v1/messages/agent \
  -H <span><span>"</span>Authorization: Bearer YOUR_API_KEY<span>"</span></span> \
  -H <span><span>"</span>Content-Type: application/json<span>"</span></span> \
  -d <span><span>'</span>{"content": "Starting deployment process", "agent_type": "claude-code", "requires_user_input": false}<span>'</span></span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">🤝 Contributing</h2><a id="user-content--contributing" aria-label="Permalink: 🤝 Contributing" href="#-contributing"></a></p>
<p dir="auto">We love contributions! Check out our <a href="https://github.com/omnara-ai/omnara/blob/main/CONTRIBUTING.md">Contributing Guide</a> to get started.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Development Commands</h3><a id="user-content-development-commands" aria-label="Permalink: Development Commands" href="#development-commands"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="make lint       # Run code quality checks
make format     # Auto-format code
make test       # Run test suite
make dev-serve  # Start development servers"><pre>make lint       <span><span>#</span> Run code quality checks</span>
make format     <span><span>#</span> Auto-format code</span>
make <span>test</span>       <span><span>#</span> Run test suite</span>
make dev-serve  <span><span>#</span> Start development servers</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">📊 Pricing</h2><a id="user-content--pricing" aria-label="Permalink: 📊 Pricing" href="#-pricing"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Plan</th>
<th>Price</th>
<th>Features</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Free</strong></td>
<td>$0/mo</td>
<td>10 agents/month, Core features</td>
</tr>
<tr>
<td><strong>Pro</strong></td>
<td>$9/mo</td>
<td>Unlimited agents, Priority support</td>
</tr>
<tr>
<td><strong>Enterprise</strong></td>
<td><a href="https://cal.com/ishaan-sehgal-8kc22w/omnara-demo" rel="nofollow">Contact Us</a></td>
<td>Teams, SSO, Custom integrations</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">🆘 Support</h2><a id="user-content--support" aria-label="Permalink: 🆘 Support" href="#-support"></a></p>
<ul dir="auto">
<li>📖 <a href="https://docs.omnara.ai/" rel="nofollow">Documentation</a></li>
<li>💬 <a href="https://github.com/omnara-ai/omnara/discussions">GitHub Discussions</a></li>
<li>🐛 <a href="https://github.com/omnara-ai/omnara/issues">Report Issues</a></li>
<li>📧 <a href="mailto:ishaan@omnara.com">Email Support</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">📜 License</h2><a id="user-content--license" aria-label="Permalink: 📜 License" href="#-license"></a></p>
<p dir="auto">Omnara is open source software licensed under the <a href="https://github.com/omnara-ai/omnara/blob/main/LICENSE">Apache 2.0 License</a>.</p>
<hr>

</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Building a web search engine from scratch with 3B neural embeddings (577 pts)]]></title>
            <link>https://blog.wilsonl.in/search-engine/</link>
            <guid>44878151</guid>
            <pubDate>Tue, 12 Aug 2025 16:02:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.wilsonl.in/search-engine/">https://blog.wilsonl.in/search-engine/</a>, See on <a href="https://news.ycombinator.com/item?id=44878151">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><header><p><time datetime="2025-08-10T00:00:00.000Z">Published August 10, 2025</time><span>34 min read</span></p></header>
<a href="https://blog.wilsonl.in/search-engine/serp-rocksdb.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-rocksdb.png" alt="Screenshot of SERP."></a>
<p>A while back, I decided to undertake a project to challenge myself: build a web search engine from scratch. Aside from the fun deep dive opportunity, there were two motivators:</p>
<ul>
<li>Search engines seemed to be getting worse, with more SEO spam and less relevant quality content.</li>
<li>Transformer-based <a href="https://huggingface.co/spaces/mteb/leaderboard" target="_blank" rel="noopener">text embedding models</a> were taking off and showing amazing natural comprehension of language.</li>
</ul>
<p>A simple question I had was: why couldn't a search engine <em>always</em> result in top quality content? Such content may be rare, but the Internet's <a href="https://en.wikipedia.org/wiki/Long_tail" target="_blank" rel="noopener">tail is long</a>, and better quality results should rank higher than the prolific inorganic content and engagement bait you see today.</p>
<p>Another pain point was that search engines often felt underpowered, closer to keyword matching than human-level intelligence. A reasonably complex or subtle query couldn't be answered by most search engines at all, but the ability to would be powerful:</p>
<a href="https://blog.wilsonl.in/search-engine/serp-paragraph-cropped.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-paragraph-cropped.png" alt="SERP result of paragraph-length query."></a>
<p>Search engines cover broad areas of computer science, linguistics, ontology, NLP, ML, distributed systems, performance engineering, and so on. I thought it'd be interesting to see how much I could learn and cover in a short period. Plus, it'd be cool to have my own search engine. Given all these points, I dived right in.</p>
<p>In this post, I go over the 2-month journey end-to-end, starting from no infra, bootstrapped data, or any experience around building a web search engine. Some highlights:</p>
<ul>
<li>A cluster of 200 GPUs generated a combined 3 billion <a href="https://huggingface.co/sentence-transformers/multi-qa-mpnet-base-dot-v1" target="_blank" rel="noopener">SBERT</a> embeddings.</li>
<li>At peak, hundreds of crawlers ingested 50K pages per second, culminating in an index of 280 million.</li>
<li>End-to-end query latency landed around 500 ms.</li>
<li>RocksDB and HNSW were <a href="https://blog.wilsonl.in/corenn/" target="_blank" rel="noopener">sharded</a> across 200 cores, 4 TB of RAM, and 82 TB of SSDs.</li>
</ul>
<p>You can play around with a deployed instance of this search engine as a <a href="#live-demo">live demo</a>. Here's a high-level architecture map of the system that will be covered in this post:</p>

<ul><li><a href="#proving-ground">Proving ground</a></li><li><a href="#normalization">Normalization</a></li><li><a href="#chunking">Chunking</a><ul><li><a href="#semantic-context">Semantic context</a></li><li><a href="#statement-chaining">Statement chaining</a></li></ul></li><li><a href="#initial-results">Initial results</a></li><li><a href="#crawler">Crawler</a></li><li><a href="#pipeline">Pipeline</a></li><li><a href="#storage">Storage</a></li><li><a href="#service-mesh">Service mesh</a></li><li><a href="#gpu-buildout">GPU buildout</a></li><li><a href="#sharded-hnsw">Sharded HNSW</a></li><li><a href="#optimizing-latency">Optimizing latency</a></li><li><a href="#knowledge-graph">Knowledge graph</a></li><li><a href="#serp">SERP</a><ul><li><a href="#ai-assistant">AI assistant</a></li><li><a href="#state-tracking">State tracking</a></li></ul></li><li><a href="#search-quality">Search quality</a></li><li><a href="#live-demo">Live demo</a></li><li><a href="#costs">Costs</a></li><li><a href="#conclusion-and-what's-next">Conclusion and what's next</a></li></ul><h2 id="proving-ground">Proving ground</h2>
<p>I started off by creating a minimal playground to experiment if <a href="https://huggingface.co/spaces/mteb/leaderboard" target="_blank" rel="noopener">neural embeddings</a> were superior for search: take some web page, chunk it up, and see if I can answer complex indirect natural language queries with precision.</p>
<p>As an example, let's say I'm looking at the S3 documentation. Here are how some queries are answered by current systems, and how I envisioned they should be answered:</p>






























<div><table><thead><tr><th>Query</th><th>Traditional search</th><th>Neural search</th></tr></thead><tbody><tr><td>i want to use s3 instead of postgres but with databases i can tag some human comment with some file in another column</td><td><em>Random results about Postgres, S3, files</em></td><td>You can also specify custom metadata at the time that the object is stored.</td></tr><tr><td>why does CORS still not work after allowing all?</td><td><em>Random snippet about CORS, "S3 not working", object permissions</em></td><td>Bucket configurations have an eventual consistency model...</td></tr><tr><td>could files get lost or corrupted?</td><td><em>(No result shown)</em></td><td>If a PUT request is successful, your data is safely stored.</td></tr><tr><td>can i use s3 from lua?</td><td><em>(No result shown)</em></td><td>The architecture of Amazon S3 is designed to be programming language-neutral, ... With the REST API, you use standard HTTP requests to create, fetch, and delete buckets and objects.</td></tr></tbody></table></div>
<p>Basically, the search engine should understand <em>intent</em>, not <em>keywords</em>:</p>
<ul>
<li>Queries are understood as a whole instead of broken down into keywords and phrases.</li>
<li>No need for query engineering: operators, format, right words to use.</li>
<li>"Tip of the tongue", implicit, and conceptual queries are mapped correctly to the right answer.</li>
<li>You can ask multi-concept, complex, nuanced queries and surface non-obvious relationships.</li>
<li>It should be far less susceptible to keyword spam and SEO tactics.</li>
</ul>
<p>This is already great for searches in general. But it'd also be great for finding insights, unnoticed connections, and hidden gems. You can ask some very sophisticated specific query, and the search engine will surface a <a href="https://en.wiktionary.org/wiki/needle_in_a_haystack" target="_blank" rel="noopener">one-line sentence</a> in an obscure quality essay. You could write a paragraph of your thoughts and views, and find other writers and areas with similar perspectives. You could query with phrases that signal quality and depth, to find content and communities of similar values.</p>
<p>Here's the sandbox flywheel I initially created to prove the concept:</p>
<ol>
<li>Grow set of gathered diverse raw web pages.</li>
<li>Parse, normalize, augment, and embed them into a queryable HNSW index.</li>
<li>Build and expand the test dataset of queries as I crawl, debug, experiment, and eval.</li>
<li>Create a UI to introspect data at each stage, see failure points, and tune.</li>
</ol>
<h2 id="normalization">Normalization</h2>
<p>HTML represents content in tags which have various intents: layout, text, media, interactivity, metadata, and app programming. Since a search engine focuses on text content, the first step of any pipeline is to sanitize and regularize the noisy markup from a crawled page and extract out semantic text. <a href="https://html.spec.whatwg.org/multipage/" target="_blank" rel="noopener">WHATWG</a> already defines plenty of semantic elements and rules, which I subsetted into the following mini-spec:</p>
<ul>
<li>Structures should be consistent: <code>table &gt; (thead, tbody, tfoot) &gt; tr &gt; (th, td)</code>; <code>(ul, ol) &gt; li</code>.</li>
<li>Only semantic text elements should be kept: <code>p, table, pre, blockquote, ul, ol, dl</code>.</li>
<li>Text is trimmed and collapsed; no loose or unexpected text nodes outside of <code>&lt;p&gt;</code>.</li>
<li>Flatten text trees so that retrieving and mutating text spans (which happens often) doesn't require traversing and reconciling trees.</li>
<li>Remove or unwrap as many nodes as possible: scripts, attributes, empty elements, <code>&lt;head&gt;</code>, comment nodes, foreign/layout elements.</li>
<li>If <code>main &gt; article</code> exists, use it instead of whole page.</li>
</ul>
<p>One goal is to remove all of the <a href="https://www.nngroup.com/articles/browser-and-gui-chrome/" target="_blank" rel="noopener">chrome</a> on a page as they're not part of the content, which pollute the context and distort meaning:</p>
<ul>
<li>Menu bars, nav links, banners, footers, site information.</li>
<li>Comments sections, asides, links to other articles.</li>
<li>Interface elements, forms, controls, social media buttons.</li>
</ul>
<p>These can get mixed up with the primary content and dilute the search engine's understanding of the page's actual content and intent, causing poor query results.</p>
<p>Removing these is straightforward if the page uses <a href="https://developer.mozilla.org/en-US/curriculum/core/semantic-html/" target="_blank" rel="noopener">semantic elements</a> like <code>&lt;article&gt;</code> or <a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Reference/Roles" target="_blank" rel="noopener">ARIA roles</a>, but otherwise devolves into heuristics and NLP. Methods like pattern matching on classes and IDs is fraught, and removing content by accident is worse than keeping in noise. More advanced methods like <a href="https://developer.chrome.com/docs/chromium/headless" target="_blank" rel="noopener">visually</a> classifying DOM structure or training <a href="https://fasttext.cc/" target="_blank" rel="noopener">statistical text models</a> are possible given more time and resources.</p>
<p>Given HTML's laxness, many sites don't follow these rules rigorously, so you get undercoverage and overcoverage. Unfortunately, this even applies to some <a href="https://en.wikipedia.org/" target="_blank" rel="noopener">big</a> sites that could not be ignored, so I had to hard code some special rules for them (<a href="https://github.com/WebKit/WebKit/blob/main/Source/WebCore/page/Quirks.cpp" target="_blank" rel="noopener">much like a well-known browser</a>).</p>
<details>
<summary>Example special rules for en.wikipedia.org</summary>
<pre><code><span>if</span><span> re.match(</span><span>r"^en\.wikipedia\.org/wiki/"</span><span>, url):
</span><span>    </span><span>if</span><span> tag_name </span><span>not</span><span> </span><span>in</span><span> HEADING_ELEMS:
</span><span>        last_heading = find_prev_sibling(child, </span><span>lambda</span><span> e: e.tagName </span><span>in</span><span> HEADING_ELEMS)
</span><span>        </span><span>if</span><span> (
</span>            last_heading
<span>            </span><span>and</span><span> last_heading.tagName == </span><span>"h2"</span><span>
</span><span>            </span><span>and</span><span> get_text_content(last_heading).replace(</span><span>"[edit]"</span><span>, </span><span>""</span><span>).strip()
</span><span>            </span><span>in</span><span> (</span><span>"Sources"</span><span>, </span><span>"Further reading"</span><span>, </span><span>"External links"</span><span>, </span><span>"See also"</span><span>)
</span>        ):
<span>            </span><span># This is in a section we don't want to keep.</span><span>
</span><span>            </span><span>continue</span><span>
</span>
<span>    classes = </span><span>set</span><span>(child.getAttribute(</span><span>"class"</span><span>).split(</span><span>" "</span><span>))
</span><span>    </span><span>if</span><span> </span><span>"hatnote"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove "meta" information about the Wikipedia article itself. See https://en.wikipedia.org/wiki/Wikipedia:Hatnote.</span><span>
</span><span>    </span><span>if</span><span> tag_name == </span><span>"ol"</span><span> </span><span>and</span><span> </span><span>"references"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove section containing list of references.</span><span>
</span><span>    </span><span>if</span><span> tag_name == </span><span>"table"</span><span> </span><span>and</span><span> </span><span>"sidebar"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove sidebar, which sometimes contains useful facts but often just contains "adjacent" information and links, and is hard to parse due to use of table for formatting (not semantics).</span><span>
</span><span>    </span><span>if</span><span> </span><span>"thumb"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove figures.</span><span>
</span><span>    </span><span>if</span><span> </span><span>"navbox"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove the navigation boxes at the bottom of the page.</span><span>
</span><span>    </span><span>if</span><span> </span><span>"printfooter"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove the message "Retrieved from $url".</span><span>
</span><span>    </span><span>if</span><span> child.getAttribute(</span><span>"id"</span><span>) == </span><span>"siteSub"</span><span>: </span><span>continue</span><span> </span><span># Remove the message "From Wikipedia, the free encyclopedia".</span><span>
</span>
<span>    </span><span>if</span><span> c.tagName == </span><span>"sup"</span><span> </span><span>and</span><span> </span><span>"reference"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove numbered references around square brackets within body text.</span><span>
</span><span>    </span><span>if</span><span> </span><span>"mw-jump-link"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove "Jump to content" link.</span><span>
</span><span>    </span><span>if</span><span> </span><span>"mw-editsection"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove "[edit]" links.</span><span>
</span><span>    </span><span>if</span><span> </span><span>"mw-ui-button"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove UI buttons.</span><span>
</span><span>    </span><span>if</span><span> </span><span>"wb-langlinks-edit"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># Remove "Edit links" link.</span><span>
</span><span>    </span><span>if</span><span> </span><span>"mwe-math-fallback-image-display"</span><span> </span><span>in</span><span> classes </span><span>or</span><span> </span><span>"mwe-math-fallback-image-inline"</span><span> </span><span>in</span><span> classes: </span><span>continue</span><span> </span><span># This is a fallback, we can remove it as we handle &lt;math&gt; elements.</span><span>
</span></code></pre>
</details>
<p>There's a lot of rich structured data available on many pages. <code>&lt;meta&gt;</code> tags like <a href="https://ogp.me/" target="_blank" rel="noopener">OpenGraph</a> are well-known. There's also an entire <a href="https://schema.org/docs/gs.html" target="_blank" rel="noopener">spec</a> to representing <a href="https://schema.org/docs/full.html" target="_blank" rel="noopener">almost anything</a> in a web page for robots to consume. Search engines use these to power <a href="https://developers.google.com/search/docs/appearance/structured-data/search-gallery" target="_blank" rel="noopener">enhanced rich results</a> and build their <a href="https://en.wikipedia.org/wiki/Knowledge_Graph_(Google)" target="_blank" rel="noopener">knowledge graphs</a>. It's how they know something is mentioning a <a href="https://en.wikipedia.org/wiki/Steve_Jobs_(film)" target="_blank" rel="noopener">movie</a> and not a <a href="https://en.wikipedia.org/wiki/Steve_Jobs_(book)" target="_blank" rel="noopener">book</a> or <a href="https://en.wikipedia.org/wiki/Steve_Jobs" target="_blank" rel="noopener">person</a> to improve relevancy, discover new emerging <a href="https://en.wikipedia.org/wiki/Ontology" target="_blank" rel="noopener">things</a> in the world, and show fancy shopping, rating, carousel, and "near me" results.</p>
<h2 id="chunking">Chunking</h2>
<p>Once the text is ready, the next step is to <a href="https://www.pinecone.io/learn/chunking-strategies/" target="_blank" rel="noopener">chunk it</a>. Most embedding models can't take in whole-page inputs and tend to <a href="https://jina.ai/news/long-context-embedding-models-are-blind-beyond-4k-tokens/" target="_blank" rel="noopener">lose representational power at such lengths</a> anyway. Embedding at the page level is also too coarse, not helpful for pinpointing.</p>
<p>A common approach is to simply split at every <em>n</em> characters or words. But this can crudely cut off words, grammar, and structure that destroy meaning. My approach was to break into sentences, a natural coherent boundary, using a trained <a href="https://spacy.io/api/sentencizer" target="_blank" rel="noopener">sentencizer</a>. These models are trained on a large corpus of texts and have a good understanding of grammar and syntax for high accuracy. I found spaCy's model to work the best here, handling subtleties like abbreviations, decimals, URLs, and informal style grammar.</p>
<p>It seemed to me that breaking into sentences would be a good atomic unit of detail: enough to pinpoint the exact relevant part or answer to a query, useful for featured direct snippets or result highlights. This would also allow building larger embedding units (e.g. paragraph sized) with more control over length while still maintaining semantic coherence.</p>
<h3 id="semantic-context">Semantic context</h3>
<p>But a big problem with chunking is context. A sentence builds on top of previous sentences, the containing paragraph, current section, actively discussed concepts, and so on. Indirect references ("it", "the", "then", etc.) lose meaning if chunk is broken off from establishing context.</p>
<p>An initial step was to leverage the normalized semantic document tree. For example:</p>
<ul>
<li>Headings indicate nesting or splitting sections; the content under a <code>&lt;h2&gt;</code> is associated with that heading's text.</li>
<li>Table headings indicate labels for cells in each row; paragraphs indicate semantic text break points; <code>&lt;dd&gt;</code> is associated with its <code>&lt;dt&gt;</code>; and so on.</li>
<li>A "leading" sentence like <em>Here are the suggested values:</em> before a list explains what that list is and so would be associated with that list.</li>
</ul>
<p>Therefore, a page like:</p>
<blockquote>
<h2 id="postgresql-performance-tuning-guide">PostgreSQL Performance Tuning Guide</h2>
<p>…</p>
<h2 id="connection-settings">Connection Settings</h2>
<p>…</p>
<h3 id="maximum-connections">Maximum connections</h3>
<p>Each connection uses a new process. This is different to most other database systems. Therefore, the setting may have surprising performance impact. Due to this design, connections use more resources than in a thread-based system, and so require extra consideration. Here are some recommended values:</p>
<ul>
<li>If you are using version 16 or greater:






























<div><table><thead><tr><th>Environment</th><th>Recommended Setting</th><th>…</th></tr></thead><tbody><tr><td>Development</td><td>100</td><td>…</td></tr><tr><td>Web Application</td><td>200-400</td><td>…</td></tr><tr><td>Data Warehouse</td><td>50-100</td><td>…</td></tr><tr><td>Microservices</td><td>20-50 per service</td><td>…</td></tr></tbody></table></div>
</li>
<li>If you are using version 15:






























<div><table><thead><tr><th>Environment</th><th>Recommended Setting</th><th>…</th></tr></thead><tbody><tr><td>Development</td><td>100</td><td>…</td></tr><tr><td>Web Application</td><td>200-400</td><td>…</td></tr><tr><td>Data Warehouse</td><td>50-100</td><td>…</td></tr><tr><td>Microservices</td><td>20-50 per service</td><td>…</td></tr></tbody></table></div>
</li>
</ul>
<p>…</p>
</blockquote>
<p>would represent the first "Development" table row as</p>
<pre><code><span>[
</span><span>  </span><span>"PostgreSQL Performance Tuning Guide"</span><span>, </span><span>// (heading 1)</span><span>
</span><span>  </span><span>"Connection Settings"</span><span>, </span><span>// (heading 2)</span><span>
</span><span>  </span><span>"Maximum connections"</span><span>, </span><span>// (heading 3)</span><span>
</span><span>  </span><span>"Here are some recommended values:"</span><span>, </span><span>// (leading statement before list)</span><span>
</span><span>  </span><span>"If you are using version 16 or greater:"</span><span>, </span><span>// (leading statement before table)</span><span>
</span><span>  </span><span>"Environment: Development | Recommended Setting: 100 | …"</span><span>, </span><span>// denormalized row to provide column headings as context</span><span>
</span><span>].join(</span><span>"\n"</span><span>)
</span></code></pre>
<p>rather than</p>
<pre><code><span>"Development | 100 | …"</span><span>
</span></code></pre>
<p>which loses meaning due to lack of context.</p>
<p>This context also provides disambiguation and relevancy. In the above example, both tables are only differentiated by the version mention before each table.</p>
<h3 id="statement-chaining">Statement chaining</h3>
<p>This doesn't resolve the problem of nearby local context: follow on sentences, anaphora, etc. To tackle this further, I trained a <a href="https://huggingface.co/distilbert/distilbert-base-uncased" target="_blank" rel="noopener">DistilBERT</a> classifier model that would take a sentence and the preceding sentences, and label which one (if any) it depends upon in order to retain meaning. Therefore, when embedding a statement, I would follow the "chain" backwards to ensure all dependents were also provided in context.</p>
<p>This also had the benefit of labelling sentences that should never be matched, because they were not "leaf" sentences by themselves.</p>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/statement-labeller.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/statement-labeller.png" alt="Screenshot of the statement labeller UX."></a>
  <figcaption>
    The built internal statement labeller UX for quick labelling with instructions.
  </figcaption>
</figure>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/admin-statement-chain-debug.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/admin-statement-chain-debug.png" alt="Screenshot of the statement debug view."></a>
  <figcaption>
    A statement with its semantic context and AI-labelled antecedent dependent statement.
  </figcaption>
</figure>
<p>Using the previous web page, here is an example:</p>
<pre><code><span>[
</span><span>  </span><span>"PostgreSQL Performance Tuning Guide"</span><span>, </span><span>// heading 1</span><span>
</span><span>  </span><span>"Connection Settings"</span><span>, </span><span>// heading 2</span><span>
</span><span>  </span><span>"Maximum connections"</span><span>, </span><span>// heading 3,</span><span>
</span><span>  </span><span>"Each connection uses a new process."</span><span>, </span><span>// necessary to understand the sentence</span><span>
</span><span>  </span><span>// ...skipped unnecessary sentences</span><span>
</span><span>  </span><span>"Due to this design, connections use more resources than in a thread-based system, and so require extra consideration."</span><span>, </span><span>// the target sentence</span><span>
</span><span>].join(</span><span>"\n"</span><span>)
</span></code></pre>
<p>Another example that has multiple hops:</p>
<pre><code><span>[
</span><span>  </span><span>"PostgreSQL Performance Tuning Guide"</span><span>, </span><span>// heading 1</span><span>
</span><span>  </span><span>"Connection Settings"</span><span>, </span><span>// heading 2</span><span>
</span><span>  </span><span>"Maximum connections"</span><span>, </span><span>// heading 3</span><span>
</span><span>  </span><span>"Each connection uses a new process."</span><span>, </span><span>// to understand the next line</span><span>
</span><span>  </span><span>"This is different to most other database systems."</span><span>, </span><span>// to understand the next line</span><span>
</span><span>  </span><span>"Therefore, the setting may have surprising performance impact."</span><span>, </span><span>// the target sentence</span><span>
</span><span>].join(</span><span>"\n"</span><span>)
</span></code></pre>
<p>Chunking while preserving context is a hard problem. Anthropic has an interesting analysis and offer their own approach <a href="https://www.anthropic.com/news/contextual-retrieval" target="_blank" rel="noopener">here</a>. Another approach that I would experiment with is <a href="https://jina.ai/news/late-chunking-in-long-context-embedding-models/" target="_blank" rel="noopener">late chunking</a>.</p>
<h2 id="initial-results">Initial results</h2>
<p>I built a UX to visualize and interact with pages in my sandbox and test out queries. The results seemed to be pretty good.</p>
<p>For example, on <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/mpuoverview.html" target="_blank" rel="noopener">this S3 documentation page</a>, using a natural language question gave multiple relevant direct answers, not just keyword matches, from disparate snippets that weren't simply in sections directly related to the query:</p>
<a href="https://blog.wilsonl.in/search-engine/poc-when-should-i-use-multipart-uploads.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/poc-when-should-i-use-multipart-uploads.png" alt="Prototype search results for &quot;when should i use multipart uploads?&quot; over S3 documentation."></a>
<p>Here's another example, querying <a href="https://www.psychologytoday.com/us/blog/understanding-the-anxious-mind/202303/are-you-a-life-optimizer-what-to-do-about-perfectionism" target="_blank" rel="noopener">this web page</a>, where the search engine matched against "It's not worth it", which is arguably the most relevant and direct response, but without context would not make sense and therefore not get matched. The other matches also provide more relevant perspectives to the query.</p>
<a href="https://blog.wilsonl.in/search-engine/poc-is-perfectionism-worth-it.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/poc-is-perfectionism-worth-it.png" alt="Prototype search results for &quot;is perfectionism worth it?&quot; over a blog post on perfectionism."></a>
<p>Here are more examples, where the query has very different keywords to their answers, and don't directly refer to them, yet are good matches:</p>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/poc-im-charged-for-invisible-space.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/poc-im-charged-for-invisible-space.png"></a>
  <figcaption>I'm trying to figure out why my billed usage is higher than my actual usage. Without using words from the answer (which I don't know), the search engine finds me the relevant answer.</figcaption>
</figure>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/poc-race-conditions.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/poc-race-conditions.png"></a>
  <figcaption>The search engine is able to pick up information <em>related in concept</em> to race conditions, despite the article not mentioning "race conditions".</figcaption>
</figure>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/poc-can-i-use-lua.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/poc-can-i-use-lua.png"></a>
  <figcaption>AWS doesn't have an SDK for Lua. Instead of just giving back no or nonsense results, it points out that I can use the REST API, accessible to all languages.</figcaption>
</figure>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/poc-what-do-i-pay-for.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/poc-what-do-i-pay-for.png"></a>
  <figcaption>What do I get charged? Without knowing the words and concepts around what S3 multipart upload charges for, and no article section called "what you pay", the search engine knows what to surface.</figcaption>
</figure>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/poc-how-can-i-attach-some-human-english-comment-to-a-file.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/poc-how-can-i-attach-some-human-english-comment-to-a-file.png"></a>
  <figcaption>The search engine explains what a file is in S3 and how I can achieve my goal. Note that the keywords in the query and results basically don't overlap.</figcaption>
</figure>
<p>More direct queries that have straightforward (but not exact keyword matching) answers are also matched well:</p>
<a href="https://blog.wilsonl.in/search-engine/poc-can-i-upload-without-knowing-size-ahead-of-time.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/poc-can-i-upload-without-knowing-size-ahead-of-time.png" alt="Screenshot of first result of query &quot;can i know upload without knowing size ahead of time&quot;."></a>
<a href="https://blog.wilsonl.in/search-engine/poc-can-uploads-be-interrupted.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/poc-can-uploads-be-interrupted.png" alt="Screenshot of first result of query &quot;can uploads be interrupted&quot;."></a>
<p>Plenty of important snippets and statements lie within rich markup like nested table rows, lists, and definitions:</p>
<a href="https://blog.wilsonl.in/search-engine/poc-what-permissions-do-i-need-to-upload.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/poc-what-permissions-do-i-need-to-upload.png" alt="Screenshot of query for &quot;what permissions do i need to upload&quot;."></a>
<h2 id="crawler">Crawler</h2>
<p>I felt confident that the pipeline and resulting embeddings deliver good results, so I moved on to building out the actual search engine, starting with a Node.js crawler. Some requirements:</p>
<ul>
<li>A form of work stealing for distributing tasks is likely needed as how long requests take varies significantly.</li>
<li>Trust nothing: control and verify DNS resolution, URLs, redirects, headers, and <a href="https://en.wikipedia.org/wiki/Slowloris_(cyber_attack)" target="_blank" rel="noopener">timers</a>.</li>
<li>Origins often rate limit by IP, so tasks should be distributed across crawlers and handle origin-specific rate limits.</li>
<li>Lots of requests = lots of potential memory leaks. Manage resources (sockets, keepalives, pools) strictly, and use streaming wherever possible to keep memory O(1).</li>
</ul>
<p>The approach ended up being:</p>
<ul>
<li>up to N-per-origin concurrent Promises, which are essentially green threads as primary workload is async I/O</li>
<li>self-imposed sliding window and concurrency rate limiting per origin, with jittered delays between requests and exponential backoff between failures</li>
<li>use Node.js streams to fetch, decompress, and ingest in fixed-sized buffers for memory usage stability</li>
</ul>
<p>Each node grabs a diverse set of URLs from the DB across domains, which is then randomly work-stolen across green threads. This multi-level stochastic queues setup reduces contention from needing global coordination, frequent polling due to the high-throughput nature, and excessive hitting of any single origin, compared to simply ordered polling from a global crawl queue.</p>
<p>Origins that are rate limited get excluded when polling for more URLs, and existing polled tasks get sent back to global queue.</p>
<a href="https://blog.wilsonl.in/search-engine/multi-level-crawl-queues.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/multi-level-crawl-queues.png" alt="Diagram of multi-level crawl queues."></a>
<p>A surprising failure point was DNS. EAI_AGAIN and SERVFAIL caused a non-insignificant amount of failures. DNS resolution for every crawl was done manually to verify that the resolved IP was not a private IP, to avoid leaking internal data.</p>
<p>There's a surprising amount of detail that I overlook normally. For example, URLs seem straightforward, but can actually be subtle to deal with. All URLs, before entering the system, were strictly processed as they were central to many systems and records:</p>
<ul>
<li>They must have <code>https:</code> protocol, not <code>ftp:</code>, <code>data:</code>, <code>javascript:</code>, etc.</li>
<li>They must have a valid <a href="https://publicsuffix.org/list/" target="_blank" rel="noopener">eTLD</a> and <a href="https://en.wikipedia.org/wiki/Hostname#Syntax" target="_blank" rel="noopener">hostname</a>, and can't have ports, usernames, or passwords.</li>
<li>Canonicalization is done to deduplicate. All components are percent-decoded then re-encoded with a minimal consistent charset. Query parameters are dropped or sorted. Origins are lowercased.</li>
<li>Some URLs are extremely long, and you can run into rare limits like HTTP headers and database index page sizes.</li>
<li>Some URLs also have <a href="https://en.wikipedia.org/wiki/C0_and_C1_control_codes" target="_blank" rel="noopener">strange characters</a> that you wouldn't think would be in a URL, but will get rejected downstream by systems like <a href="https://www.postgresql.org/docs/current/datatype-character.html#:~:text=the%20character%20with%20code%20zero%20(sometimes%20called%20NUL)%20cannot%20be%20stored" target="_blank" rel="noopener">PostgreSQL</a> and <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html" target="_blank" rel="noopener">SQS</a>.</li>
</ul>
<h2 id="pipeline">Pipeline</h2>
<a href="https://blog.wilsonl.in/search-engine/pipeline.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/pipeline.png" alt="Search engine pipeline state and data flow diagram."></a>
<p>Each web page was stored in PostgreSQL with a state shown in the above diagram. Workers would poll from PostgreSQL directly using <code>SELECT ... FOR UPDATE SKIP LOCKED</code> transactions, transitioning the state once completed. However, lots of long transactions and single-row lock → read → update queries from many distant connections is not efficient with PostgreSQL, so a Rust coordinator service was introduced:</p>
<ul>
<li>Kept entire queue state in memory, and efficiently tracked heartbeats and expiration.</li>
<li>Handled locking, state transitions, and integrity via faster in-memory state.</li>
<li>Used efficient RPC over multiplexed HTTP/2 with clients and only a few PostgreSQL connections to the DB with queued batched upserts.</li>
</ul>
<p>This in-memory queue was designed for high throughput:</p>
<ul>
<li>An <code>Arc&lt;Mutex&lt;Task&gt;&gt;</code> was shared between three data structures:
<ul>
<li>HashMap <code>task ID -&gt; task</code> for fetching and mutating tasks.</li>
<li>Binary heap over tasks, keyed by visibility timeouts, for making expired polled tasks available again.</li>
<li>Grouped by origin (<code>origin</code> -&gt; <code>list of tasks in that origin</code>) for fair scheduling across origins, with separate tracked list of available origins.</li>
<li>Random polling within origin list, with O(1) <a href="https://doc.rust-lang.org/std/vec/struct.Vec.html#method.swap_remove" target="_blank" rel="noopener"><code>swap_remove</code></a> of self-indexed position (which also means only one other self-indexed position needs updating, no mass shift-down-by-one).</li>
</ul>
</li>
<li>Graceful drift handling was adopted over global locking:
<ul>
<li>Atomicity maintained via per-task locks.</li>
<li>Changes in timeout (e.g. heartbeats) don't mutate heap; instead, the latest expiration is re-checked when background loop goes through timeout heap.</li>
<li>An available origin that becomes empty isn't removed from available origins list until next access (poller), amortizing costs.</li>
<li><code>Arc&lt;Mutex&lt;Task&gt;&gt;</code> is source of truth; data structures are merely indices that may be stale (e.g. completed tasks in heap, empty origins in list, phantom polled task).</li>
</ul>
</li>
</ul>
<p>The result was efficient sublinear complexity for all operations:</p>








































<div><table><thead><tr><th>Operation</th><th>Time complexity</th><th>Process</th></tr></thead><tbody><tr><td><strong>Push task</strong></td><td>O(1)</td><td>HashMap insert + Vec push to origin list + update task's stored index</td></tr><tr><td><strong>Pop random</strong></td><td>O(k) average<br><em>k = excluded origins</em></td><td>O(1) random index into origins list → O(1) random index into origin's tasks<br>→ O(1) swap_remove using stored index → O(log n) heap push</td></tr><tr><td><strong>Complete task</strong></td><td>O(1)</td><td>HashMap lookup → lock task → state transition<br>→ O(1) swap_remove from origin list using stored index</td></tr><tr><td><strong>Heartbeat</strong></td><td>O(1)</td><td>HashMap lookup → update timeout in-place (no heap rebuild)</td></tr><tr><td><strong>Release timeouts</strong></td><td>O(log n) per task</td><td>Heap pop → check if expired<br>→ if yes: O(1) push to origin list; if no: O(log n) re-push to heap</td></tr><tr><td><strong>Find task</strong></td><td>O(1)</td><td>Direct HashMap lookup</td></tr></tbody></table></div>
<p>Each task only occupied around 100 bytes of memory, so despite being memory-bound in theory, in reality it was scalable to 1 billion active tasks on a typical 128 GB RAM server.</p>
<p>This also helped with the multi-level stochastic queue setup described previously. Thousands of crawlers all frequently polling a random set of URLs that avoid an arbitrary set of origins, as well as sending back rate limited origin URLs, is a hard database query to optimize for, but more straightforward if global state is kept in memory via a central coordinator.</p>
<p>An interesting optimization was to try and reduce the memory impact of buffering so many URLs in memory:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/String_interning" target="_blank" rel="noopener">Interning</a>: avoided copies, which was helpful.</li>
<li><a href="https://en.wikipedia.org/wiki/Zstd" target="_blank" rel="noopener">Zstd</a>: doesn't work well on small strings, even with custom trained dictionary.</li>
<li><a href="https://en.wikipedia.org/wiki/Trie" target="_blank" rel="noopener">Trie</a>: high memory usage in reality due to pointer widths, usize offsets, sparseness, node allocations.</li>
<li>Custom compression algorithm that tries to find patterns in URL components: UUIDs, enums, base64, etc. This was very CPU expensive.</li>
</ul>
<p>Eventually, this in-memory system was retired in favor of a queue service. SQS had very low concurrent rate limits that could not keep up with the throughput of thousands of workers across the pipeline. SQS was also very expensive, <a href="https://aws.amazon.com/sqs/pricing/" target="_blank" rel="noopener">charging per message</a>. I decided to write an <a href="https://github.com/wilsonzlin/queued" target="_blank" rel="noopener">open source RocksDB-based queue</a> that was as simple as SQS, while able to perform 300K operations per second from a single node.</p>
<p>In order to persist the multi-level random/fair scheduling, I appended crawl tasks with a random initial <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html" target="_blank" rel="noopener">visibility timeout</a> to approximate shuffling and therefore diversify origins in any sequence of polled tasks. Crawler nodes polled a very large batch rather than one-by-one to continue avoiding excessive global polling via the multi-level queues approach.</p>
<h2 id="storage">Storage</h2>
<p>I initially chose Oracle Cloud for infra needs due to their <a href="https://www.oracle.com/cloud/networking/virtual-cloud-network/pricing/" target="_blank" rel="noopener">very low egress costs</a> with 10 TB free per month. As I'd store terabytes of data, this was a good reassurance that if I ever needed to move or export data (e.g. processing, backups), I wouldn't have a hole in my wallet. Their compute was also <a href="https://www.oracle.com/cloud/pricing/" target="_blank" rel="noopener">far cheaper</a> than other clouds, while still being a reliable major provider.</p>
<p>Their object storage service was the initial place for storing raw pages and derived data, and it was similar to S3 in function and performance. However, that quickly ran into scaling issues due to frequency of large-sized writes, which was expected as services like S3 have quite low rate limits — there are <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance.html" target="_blank" rel="noopener">hard limits</a>, but also dynamic per-account/bucket quotas and high rates of 500s during periods of internal auto scaling. Since it's a managed shared service, I couldn't manually scale or adjust those.</p>
<p>For a while afterwards, I stored blobs in PostgreSQL alongside regular row data as it was manually scalable and I had it set up already. Typically you'd never do this as fat columns can cause chokepoints like write amplification around logging, bloating caches, and exceeding disk page sizes. However, PostgreSQL does have a mechanism called <a href="https://www.postgresql.org/docs/current/storage-toast.html" target="_blank" rel="noopener">TOAST</a> which chunks and stores these large blobs in a separate table "out of the way", mitigating some of these issues.</p>
<p>This worked for a while, but eventually also hit limits. PostgreSQL was already struggling to keep up with merely inserting metadata rows at the high processing rate of the pipeline, and the additional workload of writing large blobs at those rates tipped it over the edge — I was seeing crawls that were taking minutes to ingest, and frequent vacuuming to reduce bloat that caused complete database stalls. There were a series of attempts to stretch PostgreSQL to avoid migrating:</p>
<ul>
<li>Avoiding any indices, transactions, FKs/constraints, joins, sequences, complex queries, wide columns, or fat tables.</li>
<li>Moving all upserts to the Rust coordinator RPC service that pooled connections and queued and <a href="https://www.tigerdata.com/blog/boosting-postgres-insert-performance" target="_blank" rel="noopener">batched</a> them.</li>
<li>Moving to bare metal machines with low latency NVMe SSDs and <a href="https://www.sqlite.org/atomiccommit.html" target="_blank" rel="noopener">atomic writes</a>.</li>
<li>Using <a href="https://www.citusdata.com/" target="_blank" rel="noopener">Citus</a>, which keeps the design constraints of PostgreSQL but splits into horizontal shards to scale out writes and spread the overhead.</li>
</ul>
<p>But fundamentally, this workload was not suited for the way PostgreSQL is designed:</p>
<ul>
<li>Updates create new tuples rather than updating in place, causing bloat and necessitating vacuuming that compete for I/O, but is needed for non-blocking concurrency with ACID guarantees via <a href="https://www.postgresql.org/docs/current/mvcc.html" target="_blank" rel="noopener">MVCC</a>.</li>
<li>Every upsert is a tree lookup to a likely random page (given no predictability to crawled URLs), hitting many random pages (causing cache thrashing), and rewriting an entire page for only one entry (write amplification).</li>
<li>Every upsert also requires checking constraints and modifying separate index trees (e.g. primary keys, uniqueness).</li>
<li>These changes are double-written due to the WAL, which is at the larger page (not record) level to provide <a href="https://wiki.postgresql.org/wiki/Full_page_writes" target="_blank" rel="noopener">torn write protection</a>, increasing write amplification.</li>
<li>Connections are resource-heavy processes, have lots of state tracking, and execute sequentially, not optimized for thousands of few-row writers.</li>
<li>SQL queries are very general and powerful, so things like the wire protocol, query planning, and transaction isolation add a lot of overhead for simple INSERTs.</li>
</ul>
<p>Using Citus did not help much to mitigate these overheads as they caused order of magnitude slower writes compared to raw disk I/O. It also added a coordinator, distributed query planner, and intra-cluster connections that I did not control or understand well. PostgreSQL does a lot of work for relational and ACID functionality, but what I needed was a barebones KV store with fast write performance. So I turned to <a href="https://rocksdb.org/" target="_blank" rel="noopener">RocksDB</a> for both records/metadata and blobs.</p>
<p>RocksDB directly resolves many of the aforementioned limitations:</p>
<ul>
<li>Writes are sequentially written to the WAL (of records, not pages), and kept sorted in <a href="https://github.com/facebook/rocksdb/wiki/Memtable" target="_blank" rel="noopener">memory</a>. Only much later are they sequentially written to disk as SSTs in the background. This avoids much random I/O and write amplification.</li>
<li>Fast simple path to inserts, directly going into MemTables, skipping much of the RDBMS machinery.</li>
<li>Direct <a href="https://docs.rs/rocksdb/latest/rocksdb/" target="_blank" rel="noopener">embeddable library</a> function calls rather than wire protocols and connections. I can choose a more efficient, simpler, multiplexing protocol like HTTP/2, that scales to thousands of inserters.</li>
<li>It still has features like immediately visible writes, atomic batch updates, and <a href="https://github.com/facebook/rocksdb/wiki/Iterator#consistent-view" target="_blank" rel="noopener">snapshot consistency</a>.</li>
</ul>
<p>Keen to avoid the previous experience and migration due to slow writes, I configured RocksDB from the beginning to optimize for writes and make full use of the NVMe SSDs.</p>
<details>
<summary>RocksDB configuration I used</summary>
<pre><code><span>fn</span><span> </span><span>rocksdb_opts</span><span>() -&gt; rocksdb::Options {
</span><span>  </span><span>let</span><span> </span><span>mut</span><span> opt = rocksdb::Options::default();
</span><span>  </span><span>// Maximize disk I/O utilization.</span><span>
</span><span>  opt.set_max_background_jobs(num_cpus::get() </span><span>as</span><span> </span><span>i32</span><span> * </span><span>2</span><span>);
</span><span>  opt.set_bytes_per_sync(</span><span>1024</span><span> * </span><span>1024</span><span> * </span><span>4</span><span>);
</span>
<span>  </span><span>// Enable BlobDB.</span><span>
</span><span>  opt.set_enable_blob_files(</span><span>true</span><span>);
</span><span>  opt.set_min_blob_size(</span><span>1024</span><span>);
</span><span>  opt.set_enable_blob_gc(</span><span>true</span><span>);
</span>
<span>  </span><span>// Use more RAM for better performance.</span><span>
</span><span>  </span><span>// https://github.com/facebook/rocksdb/wiki/Block-Cache.</span><span>
</span><span>  </span><span>let</span><span> block_cache = Cache::new_lru_cache(</span><span>1024</span><span> * </span><span>1024</span><span> * </span><span>1024</span><span> * </span><span>32</span><span>);
</span><span>  </span><span>let</span><span> </span><span>mut</span><span> bbt_opt = BlockBasedOptions::default();
</span><span>  opt.set_write_buffer_size(</span><span>1024</span><span> * </span><span>1024</span><span> * </span><span>256</span><span>);
</span>
<span>  </span><span>// Enable partitioned index filters: https://github.com/facebook/rocksdb/wiki/Partitioned-Index-Filters</span><span>
</span><span>  </span><span>// </span><span>NOTE:</span><span> We cannot use HashSearch as that requires a prefix extractor.</span><span>
</span>  bbt_opt.set_index_type(BlockBasedIndexType::TwoLevelIndexSearch);
<span>  bbt_opt.set_bloom_filter(</span><span>10.0</span><span>, </span><span>false</span><span>);
</span><span>  bbt_opt.set_partition_filters(</span><span>true</span><span>);
</span><span>  bbt_opt.set_metadata_block_size(</span><span>4096</span><span>);
</span><span>  bbt_opt.set_cache_index_and_filter_blocks(</span><span>true</span><span>);
</span><span>  bbt_opt.set_pin_top_level_index_and_filter(</span><span>true</span><span>);
</span><span>  bbt_opt.set_pin_l0_filter_and_index_blocks_in_cache(</span><span>true</span><span>);
</span>
<span>  </span><span>// Optimize for point lookups.</span><span>
</span><span>  </span><span>// Don't use `optimize_for_point_lookup()`, which just sets a custom BlockBasedOptions; we'll use our own custom options instead.</span><span>
</span><span>  </span><span>// </span><span>NOTE:</span><span> We don't enable memtable_whole_key_filtering as that uses a lot more memory for an unknown performance benefit (key lookups in memory should already be fast, and memtables should not be that large).</span><span>
</span><span>  </span><span>// https://github.com/facebook/rocksdb/wiki/BlobDB#performance-tuning</span><span>
</span><span>  bbt_opt.set_block_size(</span><span>1024</span><span> * </span><span>64</span><span>);
</span>  bbt_opt.set_block_cache(&amp;block_cache);
<span>  bbt_opt.set_format_version(</span><span>5</span><span>);
</span><span>  </span><span>// https://github.com/facebook/rocksdb/blob/25b08eb4386768b05a0748bfdb505ab58921281a/options/options.cc#L615.</span><span>
</span>  bbt_opt.set_data_block_index_type(DataBlockIndexType::BinaryAndHash);
<span>  bbt_opt.set_data_block_hash_ratio(</span><span>0.5</span><span>);
</span><span>  </span><span>// https://github.com/facebook/rocksdb/wiki/RocksDB-Bloom-Filter#ribbon-filter.</span><span>
</span><span>  </span><span>// Don't set this too high, as benefits drop off exponentially while memory increases linearly.</span><span>
</span><span>  bbt_opt.set_ribbon_filter(</span><span>10.0</span><span>);
</span>  opt.set_block_based_table_factory(&amp;bbt_opt);
  opt
}
</code></pre>
</details>
<p>I tuned it for point lookups (the dominant access pattern): bloom filters, hash indices, partitioned indices, and large block caches. For writes, large write buffers and thread pools were used to saturate disk I/O.</p>
<p>The most interesting feature of RocksDB was <a href="https://github.com/facebook/rocksdb/wiki/BlobDB" target="_blank" rel="noopener">BlobDB</a>. Large values may have an outsized impact on <a href="https://github.com/facebook/rocksdb/wiki/Compaction" target="_blank" rel="noopener">compaction</a> performance due to exacerbating write amplification. BlobDB mitigates this by storing large blobs in separate files outside the normal SSTs, leaving only small pointers there. This was highly relevant due to the large blobs I had, and made it possible to use RocksDB for both metadata/records and blobs.</p>
<p>Eventually I ran into the disk I/O limits, so I decided to scale out via sharding. A typical go-to is <a href="https://en.wikipedia.org/wiki/Consistent_hashing" target="_blank" rel="noopener">consistent hashing</a>, which allows shards and nodes to expand and contract for future growth or node loss. However, it's not straightforward to implement and therefore harder to guarantee correctness via simplicity, especially around inserts and rebalance operations. Instead, I opted for a fixed set of 64 RocksDB shards, which simplified operations and client routing, while providing enough distribution capacity for the foreseeable future.</p>
<p>Reads and writes get routed by the <a href="https://xxhash.com/" target="_blank" rel="noopener">xxHash</a> of keys. Since the set of nodes almost never changes, the shard mapping was simply a static file distributed with code, requiring no metadata or discovery service. After this sharding, the coordinator service quickly became the bottleneck, as the I/O traffic and request volume of 64 shards went through one machine, so it was later dropped and clients directly read from and wrote to RocksDB shard nodes.</p>
<p>For representing rows, I used Serde-defined types with custom compact keys to reduce de/serialization time and storage. I used <a href="https://msgpack.org/index.html" target="_blank" rel="noopener">MessagePack</a> instead of an <a href="https://github.com/djkoloski/rust_serialization_benchmark" target="_blank" rel="noopener">even faster, more compact</a> format as those are typically tied to Rust and are sensitive to field ordering, and I opted for some extra insurance against both.</p>
<pre><code><span>#[skip_serializing_none]</span><span>
</span><span></span><span>#[derive(Serialize, Deserialize, Debug)]</span><span>
</span><span></span><span>pub</span><span> </span><span>struct</span><span> </span><span>Resource</span><span> {
</span><span>  </span><span>#[serde(rename = </span><span>"1"</span><span>)]</span><span>
</span><span>  </span><span>pub</span><span> state: ResourceState,
</span><span>  </span><span>#[serde(rename = </span><span>"2"</span><span>)]</span><span>
</span><span>  </span><span>pub</span><span> http_status: </span><span>Option</span><span>&lt;</span><span>u16</span><span>&gt;,
</span><span>  </span><span>#[serde(rename = </span><span>"3"</span><span>)]</span><span>
</span><span>  </span><span>pub</span><span> original_content_encoding: </span><span>Option</span><span>&lt;</span><span>String</span><span>&gt;,
</span>  ..
}
</code></pre>
<p>At its peak, this system could ingest 200K writes per second across thousands of clients (crawlers, parsers, vectorizers). Each web page not only consisted of raw source HTML, but also normalized data, contextualized chunks, hundreds of high dimensional embeddings, and lots of metadata.</p>
<h2 id="service-mesh">Service mesh</h2>
<p>As the system expanded in complexity, I needed a way to discover service instances rather than hard code IPs, and communicate securely across the Internet (as I began to leverage cheaper resources elsewhere).</p>
<p>I used mTLS as a universal way to provide encryption + authentication, simpler than handling the myriad of protocols and auth methods for each service in its own way. A custom root CA was generated, and then a certificate and key was generated for each node at the OS level.</p>
<p>HTTP/2 was adopted as the protocol, and MessagePack the serialization mechanism: binary, self-describing, and supported timestamps and maps. This scaffolding allowed easily setting up and using new services via a tuned universal internal client SDK. HTTP/2 was a good protocol as I had many long fat pipes over the public Internet across nodes, not as low latency or reliable as private datacenter networks. It provided multiplexing and simple request and retry semantics, a benefit over many other protocols (e.g. PostgreSQL). mTLS + HTTP/2-based RPC made secure private service calls simple no matter where my infra resided.</p>
<p>An internal DNS service was also implemented: a control plane to see and edit internal DNS entries, and a <a href="https://coredns.io/" target="_blank" rel="noopener">CoreDNS</a> daemon on all nodes to serve DNS requests, intercepting requests to internal DNS names and proxying the rest. I initially tried to simply use public DNS names for internal infra, but this was too unreliable, with many internal requests failing simply due to transient DNS resolution timeouts or failures.</p>
<p>I did also try ZeroTier and Tailscale, providing a single package for encrypted and authenticated communications, DNS, routing, and discovery. But they often had issues at scale (delays and transient errors joining, propagating, and discovering changes), and traffic limitations and overhead — at the time, they could not easily saturate 10 Gbps connections and consumed a lot of CPU usage. They were also harder to use within Docker containers due to touching lower networking stack layers. In the end, HTTP + mTLS was much more straightforward, required no special networking, and saturated connections with almost no overhead. It was also safer, like <a href="https://www.beyondcorp.com/" target="_blank" rel="noopener">Zero Trust</a>, as services could be publicly exposed and not rely on security via routing, firewalls or secrets, which are easy to misconfigure or leak.</p>
<p>systemd services were used for setting up definitions (e.g. env vars, limits), accounting (via cgroups), and management tools and logs (via journald). It seemed like a good trade off:</p>
<ul>
<li>Simple yet comprehensive without custom scripts and workflows. Easy to debug on any out-of-the-box Linux machine.</li>
<li>Lightweight framework: declarative, structured, but no building images, repos, deployment opinions, etc.</li>
<li>No performance overhead and multiple layers of abstraction.</li>
</ul>
<h2 id="gpu-buildout">GPU buildout</h2>
<p>My initial prototype used OpenAI embeddings, available via API. That became economically infeasible as I scaled, so I set out to run inference myself.</p>
<p>In search of the most cost effective scalable solution, I discovered <a href="https://www.runpod.io/" target="_blank" rel="noopener">Runpod</a>, who offer high performance-per-dollar GPUs like the RTX 4090 at far cheaper per-hour rates than AWS and Lambda. These were operated from tier 3 DCs with stable fast networking and lots of reliable compute capacity.</p>
<p>A key concern was GPU efficiency: they are expensive so I wanted to make sure they're fully utilized. Essentially, this meant that the operations before and after inference should not block the GPU:</p>
<ul>
<li>Polling for pending jobs and fetching input data</li>
<li>Parsing and tokenizing input data</li>
<li>Processing and storing output embeddings</li>
</ul>
<p>These Runpod workers were far from my main infra, so the long fat pipe was a concern. The latency meant that the GPU could finish inference before inputs and outputs could be transferred. Therefore, I implemented a Rust pipeline wrapping the Python core inference that could:</p>
<ul>
<li>operate each stage asynchronously without blocking upstream steps</li>
<li>signal backpressure to pause upstream stages and not overwhelm system resources</li>
</ul>
<p>These traits gave the benefit of dynamic tuning — I did not have to manually tune or limit based on specific hardware and data; the pipeline would fill up as quickly as any subsystem could handle, then signal backpressure to prevent overflowing, leading to peak efficiency automatically, as well as handling any bursts and slowdowns (e.g. network outages). Each stage utilized different hardware (CPU, networking, RAM, GPU) so a simple serial execution would needlessly block and idle resources.</p>

<p>A minor feature was the use of IPC over named pipes to talk to the Python process, rather than repeated subprocess spawns, reading/writing files, or spinning up a local HTTP/RPC server. Nowadays, I'd probably use <a href="https://github.com/PyO3/pyo3" target="_blank" rel="noopener">PyO3</a> or <a href="https://github.com/huggingface/candle" target="_blank" rel="noopener">candle-rs</a>.</p>
<p>Using job queues also meant autorecovery when workers died. This made it trivial to use cheaper preemptible workers and scale up and down at any time. The result was a service that generated 100K embeddings per second across 250 GPUs at peak, with 90% average GPU utilization.</p>
<h2 id="sharded-hnsw">Sharded HNSW</h2>
<p>I used <a href="https://github.com/nmslib/hnswlib" target="_blank" rel="noopener">HNSW</a> as the algorithm and index for low latency vector searches. It's an in-memory optimized graph data structure that allows for sublinear <a href="https://en.wikipedia.org/wiki/Nearest_neighbor_search" target="_blank" rel="noopener">ANN</a> querying. I go into detail about ANN, graph algorithms, and HNSW <a href="https://blog.wilsonl.in/graph-vector-search/" target="_blank" rel="noopener">in this post</a>.</p>
<p>As the HNSW index began to outgrow the available RAM on a single machine, I investigated ways to scale it. Existing vector databases were overly complex to operationalize and slow at ingesting and querying due to serving broader needs. They also required subtle tuning and knowledge of various indexing methods and trade offs that would affect recall.</p>
<p>I decided to stick with tried-and-true HNSW and uniformly shard it into 64 nodes, enough to scale for the foreseeable future. This retained the same low latency and high accuracy, since each shard is queried in parallel and remains a high-quality (not quantized or downgraded) full HNSW index, while now scalable to far larger combined index sizes.</p>
<p>However, the downside to this is that it requires lots of expensive RAM, and maintains the HNSW limitations of lack of updatability. Whenever I needed to update the index, it involved loading giant HNSW indices into the RAM of builder nodes, inserting the new embeddings, and performing a full dump. I decided to dive deep into this and built a vector database that uses cheaper disk and can perform live graph updates, downsizing the entire cluster to one machine with only 128 GB RAM and requiring no complex update pipelines, while still retaining high recall over 3 billion embeddings. It's an open source vector DB called <strong>CoreNN</strong>, which I go into detail in <a href="https://blog.wilsonl.in/corenn/" target="_blank" rel="noopener">this blog post</a>.</p>
<h2 id="optimizing-latency">Optimizing latency</h2>
<p>The user experience of a search engine is interesting, as there is an emphasis on latency specifically and not flashiness or sophisticated design. Many search engines feel different from the typical modern app: they lack loading indicators and animations, have plain designs and not much interactivity, and stream in like a "traditional" web page. As such, instant results is a baseline user expectation for search engines. To optimize for responsiveness, I sought to reduce latency at all layers of the stack.</p>
<p>I used <a href="https://www.cloudflare.com/en-au/application-services/products/argo-smart-routing/" target="_blank" rel="noopener">Cloudflare Argo</a> so that users hit closer edge PoP servers, which then routes via internal Cloudflare <a href="https://en.wikipedia.org/wiki/Wide_area_network" target="_blank" rel="noopener">private networks</a> rather than the Internet, meaning fewer hops, <a href="https://en.wikipedia.org/wiki/Packet_loss" target="_blank" rel="noopener">drops</a>, and congestion. Cloudflare also uses HTTP/3 at these edge PoPs, which reduces handshake overhead and head-of-line blocking. Setting up read replicas across the globe was too expensive.</p>
<p>Rather than making many client-server round-trip API requests, the app server fetches all necessary data and prepares the entire response page on the <a href="https://developer.mozilla.org/en-US/docs/Glossary/SSR" target="_blank" rel="noopener">server side</a>, minified and compressed. An endpoint handler defines the rendered tree with Promises (that start executing immediately in background) at subtrees that need fetched data, and a custom SSR framework eagerly streams out HTML as it traverses, awaiting each Promise only when reached to not block ready content. This is done to reduce <a href="https://en.wikipedia.org/wiki/Time_to_first_byte" target="_blank" rel="noopener">TTFB</a> and make the page feel responsive by streaming in rather than appear all at once after a long delay.</p>
<pre><code><span>class</span><span> </span><span>Element</span><span> </span><span>{
</span><span>  </span><span>// Core rendering loop.</span><span>
</span><span>  </span><span>private</span><span> </span><span>async</span><span> </span><span>streamInner</span><span>(</span><span>out: Writable</span><span>)</span><span> {
</span><span>    </span><span>// Write eagerly.</span><span>
</span><span>    out.write(</span><span>`&lt;</span><span>${</span><span>this</span><span>.tagName}</span><span>`</span><span>);
</span><span>    </span><span>for</span><span> (</span><span>const</span><span> [n, v] </span><span>of</span><span> </span><span>Object</span><span>.entries(</span><span>this</span><span>.attrs)) {
</span><span>      out.write(</span><span>` </span><span>${htmlEscape(n)}</span><span>="</span><span>${htmlEscape(v)}</span><span>"`</span><span>);
</span>    }
<span>    out.write(</span><span>"&gt;"</span><span>);
</span><span>    </span><span>for</span><span> (</span><span>const</span><span> cRaw </span><span>of</span><span> </span><span>this</span><span>.children) {
</span><span>      </span><span>// Lazily await.</span><span>
</span><span>      </span><span>const</span><span> c = </span><span>await</span><span> cRaw;
</span><span>      </span><span>if</span><span> (</span><span>typeof</span><span> c == </span><span>"string"</span><span>) {
</span>        out.write(htmlEscape(c));
<span>      } </span><span>else</span><span> {
</span><span>        </span><span>await</span><span> c.streamInner(out);
</span>      }
    }
<span>    </span><span>if</span><span> (!VOID_ELEMS.has(</span><span>this</span><span>.tagName)) {
</span><span>      out.write(</span><span>`&lt;/</span><span>${</span><span>this</span><span>.tagName}</span><span>&gt;`</span><span>);
</span>    }
  }
}

<span></span><span>// Example endpoint definition.</span><span>
</span><span></span><span>const</span><span> endpoint = </span><span>() =&gt;</span><span> (
</span><span>  h(</span><span>".page"</span><span>,
</span><span>    </span><span>// Subtrees can be Promises.</span><span>
</span><span>    (</span><span>async</span><span> () =&gt; {
</span><span>      </span><span>const</span><span> results = </span><span>await</span><span> fetchResults();
</span><span>      </span><span>return</span><span> h(</span><span>".results"</span><span>, ...results.map(</span><span>r</span><span> =&gt;</span><span> (
</span><span>        h(</span><span>".result"</span><span>, ...)
</span>      )));
    })(),
<span>    </span><span>// All Promises begin executing concurrently without delay.</span><span>
</span><span>    (</span><span>async</span><span> () =&gt; {
</span><span>      </span><span>const</span><span> profile = </span><span>await</span><span> fetchProfile();
</span>      ...
    })(),
  ),
);
</code></pre>
<p>JSX would probably be more elegant, but would've required some work to customize transpilation and the runtime (to handle Promises).</p>
<p>In terms of throughput of internal services, the RocksDB and HNSW shards already provided ample read capacity. The only scaling that was done for queries was to introduce a vectorizer service for generating embeddings for queries. This ran on CPU as the limited batching plus latency of distant GPUs negated any gains via fast floating point operations.</p>
<h2 id="knowledge-graph">Knowledge graph</h2>
<p>I wanted to reproduce the <a href="https://support.google.com/knowledgepanel/answer/9163198?hl=en" target="_blank" rel="noopener">knowledge panel</a> that shows on the right side of search results. Wikipedia and Wikidata seemed like good sources to populate this panel, but their APIs are slow and rate limited. Fortunately, they offer <a href="https://dumps.wikimedia.org/" target="_blank" rel="noopener">full exports</a> of all their data on a regular cadence, which I used to build local optimized indices and query services.</p>
<p>Wikipedia offers nice structured data for articles (e.g. <a href="https://en.wikipedia.org/api/rest_v1/page/summary/Australia" target="_blank" rel="noopener">Australia</a>) that contains a relevant image, an extract, and a reference to a Wikidata <a href="https://www.wikidata.org/wiki/Help:Items" target="_blank" rel="noopener">item</a>. These have associated properties that describe their relationships to other entities, useful for populating the "quick facts" (e.g. date of birth) in a knowledge panel. Combined, they form a good initial system for knowledge panels:</p>
<ul>
<li>Articles form the base set of knowledge panels.</li>
<li>The title + summary are combined to generate embeddings for retrieving the relevant knowledge panel to show for a query.</li>
<li>The image, title, description, and summary are shown in the top half of the panel.</li>
<li>If there's a linked Wikidata item, that entity is looked up in the knowledge base and specific associated properties are retrieved.</li>
</ul>
<p>Not all Wikipedia articles should be shown as knowledge panels (e.g. lists), and embedding retrieval may not give the most relevant results (e.g. showing a specific adjacent article rather than the base/broader topic). Similarly, not all Wikidata properties are worth showing. There are also lots of other data sources available to incorporate. So there are still lots of improvements to be had, but it worked well as a good starting point.</p>
<h2 id="serp">SERP</h2>
<p>The resulting search engine results page (<a href="https://en.wikipedia.org/wiki/Search_engine_results_page" target="_blank" rel="noopener">SERP</a>) looks like this:</p>
<a href="https://blog.wilsonl.in/search-engine/serp-rocksdb.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-rocksdb.png" alt="Screenshot of final SERP without AI features."></a>
<p>I aimed for a clean minimal look to go for the "signal over noise" aesthetic. The specific statement snippets show up under "fact" pages like docs and wikis, to give quick references and answers for queries. Another example:</p>
<a href="https://blog.wilsonl.in/search-engine/serp-protein-in-chicken.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-protein-in-chicken.png" alt="Screenshot of SERP with statement snippets."></a>
<p>What's great is the comparable lack of SEO spam. For example, I queried "best programming blogs" on a well known search engine and compared it to mine:</p>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/serp-blogs-theirs.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-blogs-theirs.png"></a>
  <figcaption>Results from a major search engine.</figcaption>
</figure>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/serp-blogs-mine.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-blogs-mine.png"></a>
  <figcaption>Results from my search engine.</figcaption>
</figure>
<p>Here's an example of finding some interesting writings and insights around a query:</p>
<a href="https://blog.wilsonl.in/search-engine/serp-crypto.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-crypto.png" alt="Screenshot of SERP for &quot;the case for/against crypto&quot; query."></a>
<p>As mentioned in the beginning, the search engine is able to understand very complex queries, including entire paragraphs about ideas. For example, I entered an entire paragraph from an LLM discussion, and found some interesting high quality essays revolving around that and adjacent topics:</p>
<a href="https://blog.wilsonl.in/search-engine/serp-paragraph.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-paragraph.png" alt="Screenshot of SERP for a paragraph about self-worth and high achievers."></a>
<p>The above UI is from the modernized <a href="#live-demo">live demo</a>.</p>
<h3 id="ai-assistant">AI assistant</h3>
<p>As LLMs were taking off around the time (which has only grown since), I decided to see if I could add some subtle useful AI features. I thought they could be helpful in three ways:</p>
<ul>
<li>Provide a very quick concise answer to a straightforward query that doesn't need research.</li>
<li>Have conversations with an AI assistant.</li>
<li>Summarize results relative to the query.</li>
</ul>
<p>It resulted in helpful augmentation without ruining the search experience:</p>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/serp-ai-s3.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-ai-s3.png"></a>
  <figcaption>AI features give quick answers, related questions, and more tailored summaries, while still leaving main experience as is.</figcaption>
</figure>
<figure>
  <a href="https://blog.wilsonl.in/search-engine/serp-guarantee-clause.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-guarantee-clause.png"></a>
  <figcaption>I found the statement snippets to be helpful for official references, while AI provides a quick direct answer.</figcaption>
</figure>
<p>I found it especially useful for programming queries, where I often knew what was right and just needed a quick refresher. The AI quick answer was very concise and to the point, which aligned with my needs.</p>
<a href="https://blog.wilsonl.in/search-engine/serp-ai-go-init-map.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-ai-go-init-map.png"></a>
<p>It's able to remain clear even for more complex queries, while high quality results remain ranked at the top if you want to dive deeper:</p>
<a href="https://blog.wilsonl.in/search-engine/serp-parted.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-parted.png"></a>
<h3 id="state-tracking">State tracking</h3>
<p>Tracking clicks is useful for improving search quality and finding "dead zones", spam results, and poor ranking. To prevent abuse, all results go through an <code>/act</code> URL with an AES-256-GCM encrypted data string containing important result data, which tracks important metrics and then redirects to the result URL.</p>
<p>Since the app is entirely SSR, it used <a href="https://en.wikipedia.org/wiki/Post/Redirect/Get" target="_blank" rel="noopener">PRG</a> to handle client actions. Often, there's a need to show or alter some UX upon redirecting after the action to indicate to the user the result. This means some state needed to be persisted across the POST to the GET, which I decided to use one-off cookies to relay the state, skipping the need for any server-side state. This also allowed the app to remain JS-free.</p>
<h2 id="search-quality">Search quality</h2>
<p>Two big things I learnt about search engine quality:</p>
<ol>
<li>Quantity is quality. If a search engine can't find something, it's not useful.</li>
<li>Crawling and filtering is the most difficult and most important aspect.</li>
</ol>
<p>The first point was obvious in retrospect. It's a limitation of my search engine; due to time and resource constraints, I was unable to crawl the whole web. Since the web and space of information is so large, this means large uneven gaps in search results.</p>
<p>The second point was tricky. The Internet is such a large search space, that figuring out direction and filtering is basically a necessity, to avoid picking up entire swathes of junk, spiralling in ever more deserted corners of the web, or going too deep in one area and leaving gaps in others. Yet this is a hard problem to solve, without a clear immediate starting point or obvious direction/implementation. It has to operate on large amounts of unstructured data, which often means complex <a href="https://en.wikipedia.org/wiki/Natural_language_processing" target="_blank" rel="noopener">language</a> and <a href="https://en.wikipedia.org/wiki/Network_theory#Link_analysis" target="_blank" rel="noopener">network</a> analysis, at the scale of the web. Determining authenticity, trust, originality, accuracy, and quality automatically is not trivial.</p>
<p>I have ideas about how to tackle this, and if I started over I would put more emphasis on researching and developing this aspect first. Infamously, search engines use <a href="https://www.google.com/intl/en_us/search/howsearchworks/how-search-works/ranking-results/" target="_blank" rel="noopener">thousands of signals</a> on ranking and filtering pages, but I believe newer transformer-based approaches towards content evaluation and link analysis should be simpler, cost effective, and more accurate. I also believe agentic search will play a big role in the near future, being able to comprehend, filter, rank, and beam search instead of simple retrieval.</p>
<p>At query time, some basic quality filters are applied:</p>
<ul>
<li>Non-English.</li>
<li>Pages with empty titles or contents.</li>
<li>Matches <a href="https://github.com/hagezi/dns-blocklists" target="_blank" rel="noopener">blocklists</a>.</li>
<li>Duplicates, measured using <a href="https://en.wikipedia.org/wiki/Jaccard_index" target="_blank" rel="noopener">Jaccard similarity</a> of <a href="https://en.wikipedia.org/wiki/Trigram" target="_blank" rel="noopener">trigrams</a>.</li>
</ul>
<h2 id="live-demo">Live demo</h2>
<a href="https://blog.wilsonl.in/search-engine/serp-demo.png" target="_blank" rel="noopener"><img src="https://blog.wilsonl.in/search-engine/serp-demo.png" alt="Screenshot of demo SERP."></a>
<p>I have re-deployed the search engine as a usable demo with a more modern minimalist app that focuses on search results only.</p>
<p>I've added LLM-based reranking and filtering, which those two final sliders represent. I'm experimenting to see if using the latest general intelligence LLMs can help achieve better reranking and filtering without the need for a custom model and training data. <a href="https://groq.com/" target="_blank" rel="noopener">Groq</a> is the inference backend to ensure low latency responses — general intelligence at subsecond latency seems like a powerful underrated tool.</p>
<p>Because this is a demo environment, it's not as low latency as the regular production setup. As mentioned in <a href="#search-quality">search quality</a>, there will be noticeable gaps in search result quality for various queries due to incomplete index and quality filtering. The index cutoff is around August 2023.</p>
<p>Play around with the live demo at <a href="https://search.wilsonl.in/" target="_blank" rel="noopener">search.wilsonl.in</a>.</p>
<h2 id="costs">Costs</h2>
<p>I sought out ways to leverage lesser-known order-of-magnitude cost efficiencies as it was a side project:</p>

































































<div><table><thead><tr><th>Component</th><th>Typical</th><th>Optimized</th><th>Comparison</th></tr></thead><tbody><tr><td>Vector database, billion 768-dim. inserts</td><td>Turbopuffer writes + storage — $3578.88</td><td><a href="https://blog.wilsonl.in/corenn/" target="_blank" rel="noopener">CoreNN</a> on Hetzner Auction — $150</td><td>Turbopuffer is 23.86×</td></tr><tr><td>Memory-heavy server, RAM TB month</td><td>AWS EC2 r7a — $7011.53</td><td>Hetzner Auction — $164.00</td><td>AWS is 42.75×</td></tr><tr><td>Storage server, NVMe TB month</td><td>AWS i4g — $243.30</td><td>Hetzner Auction — $6.63</td><td>AWS is 36.70×</td></tr><tr><td>Internet egress, TB month</td><td>AWS — $92.16</td><td>Oracle Cloud — $8.70</td><td>AWS is 10.59×</td></tr><tr><td>NVIDIA GPU (FP16), hour</td><td>AWS g6e (362 TFLOPS) — $1.86</td><td>Runpod RTX 4090 (660 TFLOPS) — $0.79</td><td>AWS is 4.28× (normalized)</td></tr><tr><td>Write-heavy KV store, billion 1 KB writes</td><td>AWS DynamoDB on-demand — $5000</td><td>RocksDB on Hetzner Auction — $125</td><td>AWS is 40×</td></tr><tr><td>Blob store, billion 100 KB writes</td><td>AWS S3 PUTs and storage — $5000 + $2300</td><td>BlobDB on Hetzner Auction — $250</td><td>AWS is 29.2×</td></tr><tr><td>Queue, billion messages</td><td>AWS SQS (push + poll + delete) — $1200</td><td><a href="https://github.com/wilsonzlin/queued" target="_blank" rel="noopener">queued</a> — ~$0</td><td>AWS is ~∞×</td></tr><tr><td>CPU on-demand, core month</td><td>AWS EC2 m7a — $83.52</td><td>Oracle Cloud E4 — $18.00</td><td>AWS is 4.63×</td></tr></tbody></table></div>
<p>Not only did these low-hanging cost savings save a lot of money when added up, they lowered the barrier that made the project feasible at all, and able to scale on constrained and commodity resources. I was surprised at the lower cost than I expected going in, given the size of the infra and data, involving hundreds of GPUs and terabytes of data.</p>
<p>However, I did have to stop indexing as it was a solo project paid out of pocket. I estimate that this search engine project could be sustained by around 10K $5/month subscriptions, which is not very high for adding another indigenous search index to the limited handful that currently exist in the world, especially one focused on quality and not ads. I think optimizing towards building an index of quality over quantity is also useful for <a href="https://arxiv.org/pdf/2407.21783#page=5" target="_blank" rel="noopener">training LLMs</a>.</p>
<p>There was one surprise when I revisited costs: OpenAI charges an unusually low <a href="https://platform.openai.com/docs/pricing#embeddings" target="_blank" rel="noopener">$0.0001 / 1M tokens</a> for batch inference on their latest embedding model. Even conservatively assuming I had 1 billion crawled pages, each with 1K tokens (abnormally long), it would only cost <strong>$100</strong> to generate embeddings for all of them. By comparison, running my own inference, even with cheap Runpod spot GPUs, would cost on the order of 100× more expensive, to say nothing of <a href="https://cohere.com/pricing" target="_blank" rel="noopener">other</a> <a href="https://jina.ai/embeddings/" target="_blank" rel="noopener">APIs</a>. This wasn't available at the time, so I couldn't take advantage of this, but I'm keeping it in mind for future projects.</p>
<h2 id="conclusion-and-what's-next">Conclusion and what's next</h2>
<p>I find that one of the biggest values of neural embeddings is the ability to find great content, insights, and references. These often reside in essays and documentations, and are article-like content. Queries that are just "bookmarks" (e.g. <code>python download windows</code>) or exact phrase matching require a very broad index (including very obscure pages) but also don't leverage intelligence or comprehension; bookmarks could be indexed only by <code>&lt;title&gt;</code> keywords and URL substrings. Given this, one direction I want to explore is a more focused index that selects specifically for high quality interesting content across the long tail of the web. In general, exploring how to have sub-engines for more accurate, tailored, relevant, and efficient results for different domains and intents is worthwhile.</p>
<p>Embeddings do seem to be far more powerful than traditional search, and seeing the superior quality results (when the index has enough data) made me excited about the future of search and retrieval. With typical search engines, the more specific you get, the worse the results. Being able to narrow down and zoom in via a very specific query to find exactly what you want (quality, vibe, perspective, thought, idea, etc.) via obscure insights and relationships is very powerful and underexplored.</p>
<p>Despite the rise of LLMs, I think that search will always play a role: LLMs can't and shouldn't memorize all knowledge, using parameters that could be used for more intelligence and capability. Instead, LLMs can offload that to representations of knowledge via these efficient dense indices, which would also mean less hallucinations and more up-to-date information. Perhaps we will have community-maintained open-source local search indices alongside our open-source local models.</p>
<p>Besides <a href="#search-quality">systematic data quality assurance</a>, there are other low hanging optimizations to explore:</p>
<ul>
<li>Is it possible to leverage existing crawling infrastructure like <a href="https://commoncrawl.org/" target="_blank" rel="noopener">Common Crawl</a>?</li>
<li>Could <a href="https://huggingface.co/blog/static-embeddings" target="_blank" rel="noopener">static embeddings</a>, which are 400x faster to infer, be used?</li>
<li>Embedding models: <a href="https://jina.ai/news/late-chunking-in-long-context-embedding-models/" target="_blank" rel="noopener">late chunking</a>, quantization, long context (to avoid chunking), incorporating new knowledge without re-generating all embeddings, and leveraging <a href="https://onnx.ai/" target="_blank" rel="noopener">ONNX</a>.</li>
<li>Leveraging data APIs, dumps, and agreements rather than crawling.</li>
<li>Rewriting the crawler and parser in Rust for order of magnitude speedups.</li>
</ul>
<p>I plan on posting further write-ups on this project, including:</p>
<ul>
<li>A deeper analysis of the crawled index, with large scale visual and textual content evaluations and <a href="https://umap-learn.readthedocs.io/en/latest/" target="_blank" rel="noopener">semantic maps</a>.</li>
<li>Building a dataset from the crawled data, to test recall of the search engine, and compare it to how much knowledge LLMs memorize.</li>
<li>An <a href="https://man7.org/linux/man-pages/man7/io_uring.7.html" target="_blank" rel="noopener">io_uring</a> based KV store written from scratch that did not make it to production.</li>
<li>An investigation into how agentic search, <a href="https://groq.com/" target="_blank" rel="noopener">ultrafast</a> <a href="https://www.cerebras.ai/" target="_blank" rel="noopener">LLM</a> reranking and filtering, and generative UX could alter the search experience.</li>
</ul>
<p>You can subscribe to my <a href="https://wilsonzlin.kit.com/" target="_blank" rel="noopener">email newsletter</a> or <a href="https://blog.wilsonl.in/rss.xml" target="_blank" rel="noopener">RSS feed</a>, or follow me on <a href="https://x.com/wilsonzlin" target="_blank" rel="noopener">X</a> to keep updated on these new posts and other projects I'm working on.</p>
<p>If you found this post interesting, you may also be interested in the <a href="https://blog.wilsonl.in/hackerverse/" target="_blank" rel="noopener">Hackerverse</a>, where I do something similar on a smaller scale (over Hacker News), and <a href="https://blog.wilsonl.in/corenn/" target="_blank" rel="noopener">CoreNN</a>, a billion-scale vector database developed in response to lack of scalability of existing solutions during this project.</p></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Claude Sonnet 4 now supports 1M tokens of context (1216 pts)]]></title>
            <link>https://www.anthropic.com/news/1m-context</link>
            <guid>44878147</guid>
            <pubDate>Tue, 12 Aug 2025 16:02:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.anthropic.com/news/1m-context">https://www.anthropic.com/news/1m-context</a>, See on <a href="https://news.ycombinator.com/item?id=44878147">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><div><p>Claude Sonnet 4 now supports up to 1 million tokens of context on the Anthropic API—a 5x increase that lets you process entire codebases with over 75,000 lines of code or dozens of research papers in a single request.</p><p>Long context support for Sonnet 4 is now in public beta on the Anthropic API and in Amazon Bedrock, with Google Cloud’s Vertex AI coming soon.</p><h2 id="longer-context-more-use-cases">Longer context, more use cases</h2><p>With longer context, developers can run more comprehensive and data-intensive use cases with Claude, including:</p><ul><li><strong>Large-scale code analysis: </strong>Load entire codebases including source files, tests, and documentation. Claude can understand project architecture, identify cross-file dependencies, and suggest improvements that account for the complete system design.</li><li><strong>Document synthesis:</strong> Process extensive document sets like legal contracts, research papers, or technical specifications. Analyze relationships across hundreds of documents while maintaining full context.</li><li><strong>Context-aware agents: </strong>Build agents that maintain context across hundreds of tool calls and multi-step workflows. Include complete API documentation, tool definitions, and interaction histories without losing coherence.</li></ul><h2 id="api-pricing">API pricing</h2><p>To account for increased computational requirements, <a href="https://www.anthropic.com/pricing#api">pricing</a> adjusts for prompts over 200K tokens:</p><div><div aria-label="Claude Sonnet 4 pricing on the Anthropic API" role="region" tabindex="0"><table><tbody><tr><th> </th><th>Prompts ≤ 200K</th><th>Prompts &gt; 200K</th></tr><tr><td>Input</td><td>$3 / MTok</td><td>$6 / MTok</td></tr><tr><td>Output</td><td>$15 / MTok</td><td>$22.50 / MTok</td></tr></tbody></table></div><figcaption>Claude Sonnet 4 pricing on the Anthropic API</figcaption></div><p>When combined with <a href="https://docs.anthropic.com/en/docs/build-with-claude/prompt-caching">prompt caching</a>, users can reduce latency and costs for Claude Sonnet 4 with long context. The 1M context window can also be used with <a href="https://docs.anthropic.com/en/docs/build-with-claude/batch-processing">batch processing</a> for an additional 50% cost savings.</p><h2 id="customer-spotlight-boltnew">Customer spotlight: Bolt.new</h2><p>Bolt.new transforms web development by integrating Claude into their browser-based development platform.</p><p>“Claude Sonnet 4 remains our go-to model for code generation workflows, consistently outperforming other leading models in production. With the 1M context window, developers can now work on significantly larger projects while maintaining the high accuracy we need for real-world coding," said Eric Simons, CEO and Co-founder of Bolt.new.</p><h2 id="customer-spotlight-igent-ai">Customer spotlight: iGent AI</h2><p>London-based iGent AI is advancing the field of software development with Maestro, an AI partner that transforms conversations into executable code.</p><p>"What was once impossible is now reality: Claude Sonnet 4 with 1M token context has supercharged autonomous capabilities in Maestro, our software engineering agent at iGent AI. This leap unlocks true production-scale engineering—multi-day sessions on real-world codebases—establishing a new paradigm in agentic software engineering," said Sean Ward, CEO and Co-founder of iGent AI.</p><h2 id="get-started">Get started</h2><p>Long context support for Sonnet 4 is now in public beta on the Anthropic API for customers with Tier 4 and custom rate limits, with broader availability rolling out over the coming weeks. Long context is also available in Amazon Bedrock, and is coming soon to Google Cloud's Vertex AI. We’re also exploring how to bring long context to other Claude products.</p><p>To learn more about Sonnet 4 and the 1M context window, see our <a href="https://docs.anthropic.com/en/docs/build-with-claude/context-windows#1m-token-context-window">documentation</a> and <a href="https://www.anthropic.com/pricing#api">pricing page</a>.</p></div></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Perplexity Makes Longshot $34.5B Offer for Chrome (186 pts)]]></title>
            <link>https://www.wsj.com/tech/perplexity-makes-longshot-34-5-billion-offer-for-chrome-5ddb7a22</link>
            <guid>44877656</guid>
            <pubDate>Tue, 12 Aug 2025 15:33:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wsj.com/tech/perplexity-makes-longshot-34-5-billion-offer-for-chrome-5ddb7a22">https://www.wsj.com/tech/perplexity-makes-longshot-34-5-billion-offer-for-chrome-5ddb7a22</a>, See on <a href="https://news.ycombinator.com/item?id=44877656">Hacker News</a></p>
Couldn't get https://www.wsj.com/tech/perplexity-makes-longshot-34-5-billion-offer-for-chrome-5ddb7a22: Error: Request failed with status code 401]]></description>
        </item>
    </channel>
</rss>