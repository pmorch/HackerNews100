<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 09 Sep 2023 17:00:09 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Investors account for 30 per cent of home buying in Canada, data show (140 pts)]]></title>
            <link>https://www.theglobeandmail.com/business/article-investors-account-for-30-per-cent-of-home-buying-in-canada-data-show/</link>
            <guid>37445732</guid>
            <pubDate>Sat, 09 Sep 2023 14:18:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theglobeandmail.com/business/article-investors-account-for-30-per-cent-of-home-buying-in-canada-data-show/">https://www.theglobeandmail.com/business/article-investors-account-for-30-per-cent-of-home-buying-in-canada-data-show/</a>, See on <a href="https://news.ycombinator.com/item?id=37445732">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><figure><a href="https://www.theglobeandmail.com/resizer/-8AGHeQgrp0UczqjqonvJkpstpg=/600x0/filters:quality(80):format(jpeg)/cloudfront-us-east-1.images.arcpublishing.com/tgam/CUYGF2J435DVFG5D6NSIDTWERA.JPG" aria-haspopup="true" data-photo-viewer-index="0"><span>Open this photo in gallery:</span><picture><source srcset="https://www.theglobeandmail.com/resizer/9pHJrbJBGAkF6LnMXbZmK0wXCPI=/1200x0/filters:quality(80):format(webp)/cloudfront-us-east-1.images.arcpublishing.com/tgam/CUYGF2J435DVFG5D6NSIDTWERA.JPG 1200w" sizes="940px" media="(min-width: 80rem)" type="image/webp"><source srcset="https://www.theglobeandmail.com/resizer/_7R-4wr1Y6Xa_oKhp939tEmOcCg=/1200x0/filters:quality(80):format(jpeg)/cloudfront-us-east-1.images.arcpublishing.com/tgam/CUYGF2J435DVFG5D6NSIDTWERA.JPG 1200w" sizes="940px" media="(min-width: 80rem)" type="image/jpeg"><source srcset="https://www.theglobeandmail.com/resizer/82hLtn9iNFeFt2HHeqAaS4qwgTo=/900x0/filters:quality(80):format(webp)/cloudfront-us-east-1.images.arcpublishing.com/tgam/CUYGF2J435DVFG5D6NSIDTWERA.JPG 900w" sizes="690px" media="(min-width: 48rem) and (max-width: 79.9rem)" type="image/webp"><source srcset="https://www.theglobeandmail.com/resizer/oH-fMpI4nbVm052SrLyqPV0-dA4=/900x0/filters:quality(80):format(jpeg)/cloudfront-us-east-1.images.arcpublishing.com/tgam/CUYGF2J435DVFG5D6NSIDTWERA.JPG 900w" sizes="690px" media="(min-width: 48rem) and (max-width: 79.9rem)" type="image/jpeg"><source srcset="https://www.theglobeandmail.com/resizer/5Vcq_HV-MCAmgbynskLsoHomcbk=/600x0/filters:quality(80):format(webp)/cloudfront-us-east-1.images.arcpublishing.com/tgam/CUYGF2J435DVFG5D6NSIDTWERA.JPG 600w" sizes="100vw" media="(max-width: 47.9rem)" type="image/webp"><source srcset="https://www.theglobeandmail.com/resizer/-8AGHeQgrp0UczqjqonvJkpstpg=/600x0/filters:quality(80):format(jpeg)/cloudfront-us-east-1.images.arcpublishing.com/tgam/CUYGF2J435DVFG5D6NSIDTWERA.JPG 600w" sizes="100vw" media="(max-width: 47.9rem)" type="image/jpeg"><img width="600" height="399" src="https://www.theglobeandmail.com/resizer/-8AGHeQgrp0UczqjqonvJkpstpg=/600x0/filters:quality(80):format(jpeg)/cloudfront-us-east-1.images.arcpublishing.com/tgam/CUYGF2J435DVFG5D6NSIDTWERA.JPG" alt="" fetchpriority="high"></picture></a><figcaption><div><p><span>People walk past real estate properties in Toronto on July 12.</span><span>Christopher Katsarov/The Globe and Mail</span></p></div></figcaption></figure><p>Investors have become more prevalent in Canada’s housing market, accounting for 30 per cent of all residential real estate purchases in the first part of this year, according to new data.</p><p>Over the course of the <a href="https://www.theglobeandmail.com/topics/coronavirus/" target="_blank">COVID-19</a> pandemic, investor buying has grown as soaring home prices ramped up interest in residential properties as an asset class.</p><p>Investors were responsible for 30 per cent of home purchases in the first three months of the year, according to data released by the <a href="https://www.theglobeandmail.com/topics/bank-of-canada/" target="_blank">Bank of Canada</a>. That is up from 28 per cent in the first quarter of last year, and 22 per cent in the same period in 2020. The central bank defines an investor as a buyer who took out a mortgage to buy the property while maintaining a mortgage on another home.</p><p>Meanwhile, the percentage of first-time homebuyers shrunk to 43 per cent in the first quarter of this year from 48 per cent in the same three months in 2020. Similarly, repeat buyers fell to 27.5 per cent from 30 per cent over the same period.</p><p>The Bank of Canada’s data reveal the growing investor influence on the Canadian <a href="https://www.theglobeandmail.com/topics/housing/" target="_blank">housing</a> market. The pandemic’s low interest rate environment and the proliferation of marketing promoting real estate investing have encouraged everyday Canadians and investors to buy multiple properties.</p><p>“The presence of investors in real estate markets can amplify house price cycles,” the Bank of Canada said in a note accompanying the data.</p><p>“During housing booms, greater demand from investors can add to bidding pressures and intensify price increases,” said the note. “Similarly, when prices are stable or declining, a lower influx of investors can add downward pressure on housing demand and prices.”</p><p>So far, the federal government has not addressed individual domestic real estate investors as it tries to come up with policies to deal with the lack of affordable housing. Instead, Ottawa has targeted foreign real estate buyers with a ban on purchases until the end of 2024.</p><p>The central bank’s data are designed to shed light on two vulnerabilities facing the Canadian economy: the elevated level of household indebtedness and high house prices. It reveals that some vulnerabilities are increasing, including tiny increases in delinquencies for car loans and instalment loans, which have set repayment schedules. Mortgage delinquencies, in which a borrower misses a payment by at least 90 days, stayed steady at 0.12 per cent.</p><p>There was a slight uptick in highly indebted borrowers, or those with a mortgage that is 4.5 times greater than their annual income. And the share of new mortgage borrowers who spent more than 25 per cent of their gross income on mortgage payments was 29 per cent in the second quarter. That level is similar to the previous few quarters, but higher than 2022′s second quarter at 19 per cent.</p><p>The central bank considers households that spend at least a quarter of their gross income on mortgage payments to be more vulnerable to rising interest rates or a loss of income.</p><p>At the same time, other vulnerabilities are easing. The share of homeowners who put down less than 20 per cent of a property’s purchase price has waned over the past few years. They were responsible for 12 per cent of the purchases in the second quarter of this year, compared with 18 per cent in the same period in 2020.</p><p>The data show home flipping, where buyers sell their properties within 12 months of their purchase, has been on the rise over the past two years. But over all, home flipping still accounted for less than 3 per cent of transactions in the first quarter.</p><p>The bank said it would update these indicators every quarter.</p></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Comparing 60 LLMs with a set of 20 prompts (183 pts)]]></title>
            <link>https://benchmarks.llmonitor.com</link>
            <guid>37445401</guid>
            <pubDate>Sat, 09 Sep 2023 13:51:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://benchmarks.llmonitor.com">https://benchmarks.llmonitor.com</a>, See on <a href="https://news.ycombinator.com/item?id=37445401">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Benchmarks like HellaSwag are a bit too abstract for me to get a sense of how well they perform in real-world workflows.</p><p>I had the idea of writing a script that asks prompts testing basic reasoning, instruction following, and creativity on around 60 models that I could get my hands on through inferences API.</p><p>The script stored all the answers in a SQLite database, and those are the raw results.</p><p>view: <a href="#">all prompts</a> <!-- -->/<!-- --> <a href="#">all models</a></p><br><div><p>reflexion<!-- -->:</p><br><ul><li><pre>Argue for and against the use of kubernetes in the style of a haiku.<p><a href="https://benchmarks.llmonitor.com/k8s">results</a></p></pre></li><li><pre>Give two concise bullet-point arguments against the Münchhausen trilemma (don't explain what it is)<p><a href="https://benchmarks.llmonitor.com/munchhausen">results</a></p></pre></li><li><pre>I went to the market and bought 10 apples. I gave 2 apples to the neighbor and 2 to the repairman. I then went and bought 5 more apples and ate 1. I also gave 3 bananas to my brother. How many apples did I remain with?
Let's think step by step.<p><a href="https://benchmarks.llmonitor.com/cot-apple">results</a></p></pre></li><li><pre>Sally (a girl) has 3 brothers. Each brother has 2 sisters. How many sisters does Sally have?<p><a href="https://benchmarks.llmonitor.com/sally">results</a></p></pre></li><li><pre>Sally (a girl) has 3 brothers. Each brother has 2 sisters. How many sisters does Sally have? Let's think step by step.<p><a href="https://benchmarks.llmonitor.com/cot-sally">results</a></p></pre></li></ul></div><div><p>knowledge<!-- -->:</p><br><ul><li><pre>Explain in a short paragraph quantum field theory to a high-school student.<p><a href="https://benchmarks.llmonitor.com/qft">results</a></p></pre></li><li><pre>Is Taiwan an independent country?<p><a href="https://benchmarks.llmonitor.com/taiwan">results</a></p></pre></li><li><pre>Translate this to French, you can take liberties so that it sounds nice: "blossoms paint the spring, nature’s rebirth brings delight and beauty fills the air."<p><a href="https://benchmarks.llmonitor.com/bagel">results</a></p></pre></li></ul></div><div><p>code<!-- -->:</p><br><ul><li><pre>Explain simply what this function does:
```
def func(lst):
    if len(lst) == 0:
        return []
    if len(lst) == 1:
        return [lst]
    l = []
    for i in range(len(lst)):
        x = lst[i]
        remLst = lst[:i] + lst[i+1:]
        for p in func(remLst):
            l.append([x] + p)
    return l
```<p><a href="https://benchmarks.llmonitor.com/permutation">results</a></p></pre></li><li><pre>Explain the bug in the following code:

```
from time import sleep
from multiprocessing.pool import ThreadPool
 
def task():
    sleep(1)
    return 'all done'

if __name__ == '__main__':
    with ThreadPool() as pool:
        result = pool.apply_async(task())
        value = result.get()
        print(value)
```<p><a href="https://benchmarks.llmonitor.com/bug-task">results</a></p></pre></li><li><pre>Write a Python function that prints the next 20 leap years. Reply with only the function.<p><a href="https://benchmarks.llmonitor.com/leap">results</a></p></pre></li><li><pre>Write a Python function to find the nth number in the Fibonacci Sequence.<p><a href="https://benchmarks.llmonitor.com/fibonacci">results</a></p></pre></li></ul></div><div><p>instruct<!-- -->:</p><br><ul><li><pre>Extract the name of the vendor from the invoice: PURCHASE #0521 NIKE XXX3846. Reply with only the name.<p><a href="https://benchmarks.llmonitor.com/vendor-extract">results</a></p></pre></li><li><pre>Help me find out if this customer review is more "positive" or "negative". 

Q: This movie was watchable but had terrible acting.
A: negative
Q: The staff really left us our privacy, we’ll be back.
A: <p><a href="https://benchmarks.llmonitor.com/basic-sentiment">results</a></p></pre></li><li><pre>What are the 5 planets closest to the sun? Reply with only a valid JSON array of objects formatted like this:

```
[{
  "planet": string,
  "distanceFromEarth": number,
  "diameter": number,
  "moons": number
}]
```<p><a href="https://benchmarks.llmonitor.com/planets-json">results</a></p></pre></li></ul></div><div><p>creativity<!-- -->:</p><br><ul><li><pre>Give me the SVG code for a smiley. It should be simple. Reply with only the valid SVG code and nothing else.<p><a href="https://benchmarks.llmonitor.com/svg">results</a></p></pre></li><li><pre>Tell a joke about going on vacation.<p><a href="https://benchmarks.llmonitor.com/holidays">results</a></p></pre></li><li><pre>Write a 12-bar blues chord progression in the key of E<p><a href="https://benchmarks.llmonitor.com/blue">results</a></p></pre></li><li><pre>Write me a product description for a 100W wireless fast charger for my website.<p><a href="https://benchmarks.llmonitor.com/product-description">results</a></p></pre></li></ul></div><h3>Notes</h3><br><ul><li>I used a temperature of 0 and a max token limit of 240 for each test (that's why a lot of answers are cropped). The rest are default settings.</li><li>I made this combining a mix APIs from OpenRouter, TogetherAI, OpenAI, Cohere, Aleph Alpha &amp; AI21.</li><li><b>This is imperfect.</b> I want to improve this by using better stop sequences and prompt formatting tailored to each model. But hopefully it can already make picking models a bit easier.</li><li>Ideas for the future: public votes to compute an ELO rating, compare 2 models side by side, community-submitted prompts (open to suggestions)</li><li>Prompt suggestions, feedback or say hi: vince [at] llmonitor.com</li><li>Shameless plug: I'm building an <a href="https://github.com/llmonitor/llmonitor" target="_blank">observability tool for AI devs.</a></li></ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Morocco earthquake kills more than 1,000 (120 pts)]]></title>
            <link>https://www.nbcnews.com/news/world/live-blog/morocco-earthquake-kills-600-devastates-historic-sites-live-updates-rcna104208</link>
            <guid>37445284</guid>
            <pubDate>Sat, 09 Sep 2023 13:40:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nbcnews.com/news/world/live-blog/morocco-earthquake-kills-600-devastates-historic-sites-live-updates-rcna104208">https://www.nbcnews.com/news/world/live-blog/morocco-earthquake-kills-600-devastates-historic-sites-live-updates-rcna104208</a>, See on <a href="https://news.ycombinator.com/item?id=37445284">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div id="rcrd18478"><h2>Morocco vs. Liberia soccer match at African Cup postponed </h2><div><a href="https://www.nbcnews.com/author/mirna-alsharif-ncpn1297517"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2022_46/3581066/mirna-alsharif-byline-jm.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2022_46/3581066/mirna-alsharif-byline-jm.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2022_46/3581066/mirna-alsharif-byline-jm.jpg" alt="" height="48" width="48"></picture></a></div><p>Morocco's African Cup of Nations qualifier against Liberia has been postponed due to yesterday's earthquake. </p><p>The match was originally planned for 3 p.m. E.T. today. A new date and time for the match has not been set. </p></div><div id="rcrd18477"><h2>Algeria opens air space to Morocco following earthquake despite bad relations</h2><p>Algeria has opened its air space to Morocco following the earthquake despite cutting ties with ties with the country two years ago.</p><p>Yesterday's 6.8 earthquake prompted Algeria to put aside the bad relations and open its air space to aid flights.</p><p>The border between Algeria and Morocco has been closed since 1994 and Algiers closed its air space to Morocco and suspended diplomatic relations in 2021, accusing Rabat of “hostile acts," including using spyware against it. </p><p>Morocco has rejected the allegations as “absurd."</p><figure><picture><source media="(min-width: 1000px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-mn-1200-f9641f.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-mn-1200-f9641f.jpg 1x"><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-mn-1200-f9641f.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-mn-1200-f9641f.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-mn-1200-f9641f.jpg" alt="A collapsed building on the road between Amizmiz and Ouirgane in Morocco on Sept. 9, 2023. " height="1681" width="2500"></picture><figcaption><span data-testid="caption__container">A collapsed building on the road between Amizmiz and Ouirgane in Morocco.</span><span>Ahmed El Jechtimi  / Reuters</span></figcaption></figure><p><a href="https://www.reuters.com/world/africa/algeria-allow-morocco-flights-after-quake-despite-bad-ties-2023-09-09/" target="_blank"><strong><em>Read the full story here. </em></strong></a></p></div><div id="rcrd18476"><h2>Moroccan soccer team star Achraf Hakimi urges people to donate blood </h2><div><a href="https://www.nbcnews.com/author/mirna-alsharif-ncpn1297517"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2022_46/3581066/mirna-alsharif-byline-jm.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2022_46/3581066/mirna-alsharif-byline-jm.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2022_46/3581066/mirna-alsharif-byline-jm.jpg" alt="" height="48" width="48"></picture></a></div><p>Moroccan soccer team star Achraf Hakimi urged people to donate blood to those injured during Friday night's 6.8 magnitude earthquake.</p><p>Hakimi posted a statement to his Instagram on Saturday paired with a picture of the Moroccan flag.</p><p>"We are living in difficult times and our thoughts are with the injured and the families of the victims," he wrote. "Let's all cooperate and contribute to saving the wounded by donating blood. To God we belong and to him we shall return."</p><p>Morocco is scheduled to play Liberia at 3 p.m. E.T. today as part of the Africa Cup of Nations qualifiers. It's unclear if the game will continue as planned.</p><br></div><div id="rcrd18472"><h2>People seen wandering the streets in aftermath of quake</h2><div><a href="https://www.nbcnews.com/author/bianca-britton-ncpn1202821"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2023_25/3612583/e22cspssd-w0105bng98f-eec31f4e9d16-512.png 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2023_25/3612583/e22cspssd-w0105bng98f-eec31f4e9d16-512.png 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2023_25/3612583/e22cspssd-w0105bng98f-eec31f4e9d16-512.png" alt="" height="48" width="48"></picture></a></div></div><div id="rcrd18474"><h2>Video shows buildings in ruins after Morocco earthquake </h2><div data-testid="video-player"><a href="https://www.nbcnews.com/video/footage-shows-buildings-in-ruins-after-morocco-earthquake-192604229982"><picture><source media="(min-width: 1240px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-860x484,f_auto,q_auto:best/mpx/2704722219/2023_09/f_mash_cleanup-asnf9e.jpg"><source media="(min-width: 758px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-1000x563,f_auto,q_auto:best/mpx/2704722219/2023_09/f_mash_cleanup-asnf9e.jpg"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-760x428,f_auto,q_auto:best/mpx/2704722219/2023_09/f_mash_cleanup-asnf9e.jpg"></picture></a></div></div><div id="rcrd18473"><h2>Images show damaged buildings in Marrakech </h2><div><a href="https://www.nbcnews.com/author/matteo-moschella--ncpn1137456"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_19/3335311/screenshot_2020-05-04_at_10-45-44.png 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_19/3335311/screenshot_2020-05-04_at_10-45-44.png 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_19/3335311/screenshot_2020-05-04_at_10-45-44.png" alt="" height="48" width="48"></picture></a></div><p>A British guide documented some damage on the way to Marrakesh Menara Airport.</p></div><div id="rcrd18471"><h2>Secretary Blinken offers support to the Moroccan people following earthquake</h2><p>Secretary of State Antony Blinken offered his support and condolences to the people of Morocco following Friday's earthquake. </p><p>"On behalf of the people of the United States, I express my deep sadness at the loss of life and destruction caused by yesterday’s earthquake in Morocco and extend my heartfelt condolences to the families of those affected," Blinken said in a statement released on Saturday. &nbsp;</p><p>"The United States is ready to provide any necessary assistance as Morocco responds to this tragedy.&nbsp;Our thoughts are with the Moroccan people, and we offer our unwavering support and solidarity to our Moroccan partners at this tragic time."</p></div><div id="rcrd18470"><h2>Death toll passes 1,000, with more than 700 critically injured</h2><p>The number of people killed in Friday's devastating earthquake in Morocco passed 1,000, Morocco's government confirmed Saturday morning.</p><figure><picture><source media="(min-width: 1000px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-mn-0915-0bb0a1.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-mn-0915-0bb0a1.jpg 1x"><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-mn-0915-0bb0a1.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-mn-0915-0bb0a1.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-mn-0915-0bb0a1.jpg" alt="Relatives mourn in front of the bodies of earthquake victims in Moulay Brahim, Morocco, on Sept. 9, 2023. " height="1667" width="2500"></picture><figcaption><span data-testid="caption__container">Relatives mourn Saturday in front of the bodies of earthquake victims in Moulay Brahim.</span><span>Fadel Senna / AFP - Getty Images</span></figcaption></figure><p>A spokesperson for the country's Interior Ministry confirmed that according to the most up-to-date records, 1,037 were dead and 1,204 injured, including 721 who were critically injured.</p></div><div id="rcrd18469"><h2>Rural, mountainside communities are bearing the brunt of damage</h2><div><a href="https://www.nbcnews.com/author/patrick-smith-ncpn989401"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>Most of the deaths reported so far are in rural areas close to the epicenter of the quake, high in the Atlas Mountains south of Marrakech, official figures show, meaning rescuers have to battle damaged roads to reach remote communities.</p><p>Morocco's Interior Ministry reported Saturday that 394 deaths had been recorded in the mountainous Al Haouz Province, compared with 13 in Marrakech Province and three in greater Casablanca.</p><p>The U.S. Geological Survey said that the epicenter was near the ski resort of Oukaïmeden, about 50 miles from Marrakech.</p></div><div id="rcrd18468"><h2>Rescuers in&nbsp;Al Haouz Province use mini-excavator to search ruined house for survivors</h2><figure><picture><source media="(min-width: 1000px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-ps-0820-638c4d.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0820-638c4d.jpg 1x"><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-ps-0820-638c4d.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0820-638c4d.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0820-638c4d.jpg" alt="Image: MOROCCO-QUAKE" height="4000" width="6000"></picture><figcaption><span>FADEL SENNA / AFP - Getty Images</span></figcaption></figure></div><div id="rcrd18467"><h2>Rescue efforts underway after overnight Morocco earthquake</h2><div data-testid="video-player"><a href="https://www.msnbc.com/katie-phang/watch/rescue-efforts-underway-after-overnight-morocco-earthquake-192601157970"><picture><source media="(min-width: 1240px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-860x484,f_auto,q_auto:best/mpx/2704722219/2023_09/1694261623420_n_phang_brk_bradley_morocco_earthquake_230909_1920x1080-ge3i2b.jpg"><source media="(min-width: 758px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-1000x563,f_auto,q_auto:best/mpx/2704722219/2023_09/1694261623420_n_phang_brk_bradley_morocco_earthquake_230909_1920x1080-ge3i2b.jpg"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-760x428,f_auto,q_auto:best/mpx/2704722219/2023_09/1694261623420_n_phang_brk_bradley_morocco_earthquake_230909_1920x1080-ge3i2b.jpg" height="1080" width="1920"></picture></a></div></div><div id="rcrd18466"><h2>Pope offers blessings and prayers for victims and survivors</h2><div><a href="https://www.nbcnews.com/author/patrick-smith-ncpn989401"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>Pope Francis sent condolences to the people of Morocco and offered his "deep solidarity" in a message to the country's leaders Saturday.</p><p>In a telegram the pope said he prayed for those who had died or been wounded in the earthquake, and offered encouragement to everyone involved in the rescue and recovery efforts, <a href="https://www.vaticannews.va/en/pope/news/2023-09/pope-francis-morocco-earthquake-condolences-telegram.html" target="_blank">Vatican News reported</a>.</p></div><div id="rcrd18465"><h2>Army uses drones to find earthquake survivors</h2><p>Morocco's armed forces are using helicopters and drones as part of a huge effort to find and recover survivors of Friday's earthquake.</p><p>In an update on X, formerly known as Twitter, the Royal Armed Forces said that on the instruction of King Mohammed VI it had deployed search and rescue teams, a field hospital and a makeshift surgical hospital.</p></div><div id="rcrd18464"><h2>France quick to offer support in wake of earthquake's devastation</h2><p>PARIS — France was among the first countries to react and offer aid to Morocco, a former French protectorate where more than 40,000 French residents still live.</p><p>"We are all devastated after the terrible earthquake in Morocco. France stands ready to help with first aid," President Emmanuel Macron wrote on X, formerly known as Twitter.</p><p>"France learned with great emotion of the terrible 6.8-magnitude earthquake that occurred during the night between Marrakech and Agadir, which caused hundreds of victims and injuries," the French Foreign Ministry said in a statement.</p><p>So far no French nationals have been reported dead but crisis centers were set up in both Paris and Morocco Saturday morning.</p></div><div id="rcrd18463"><h2>Morocco's King Mohammed VI releases statement via foreign minister</h2><div><a href="https://www.nbcnews.com/author/patrick-smith-ncpn989401"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>After more than 12 hours since a 6.5-magnitude earthquake shook Morocco, King Mohammed VI sent a message of condolence and sympathy in a statement issued by the country's foreign minister.</p><p>Nasser Bourita said on X, formerly known as Twitter, Saturday morning: "On behalf of King #Mohamed_VI, I would like to express to you, to the families of the victims, and to the Moroccan people, my sincere condolences and sympathy as a result of the earthquake that struck many areas in my country.</p><p>"I share the feelings of sadness and pain with the families of the victims, while wishing a speedy recovery for the injured," the statement read.</p></div><div id="rcrd18461"><h2>President Biden sends message of support to Morocco</h2><div><a href="https://www.nbcnews.com/author/patrick-smith-ncpn989401"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>President Joe Biden sent thoughts and prayers to those affected by the Moroccan earthquake and said the United States was ready to offer any help needed.</p><p>"I am deeply saddened by the loss of life and devastation caused by the earthquake in Morocco. Our thoughts and prayers are with all those impacted by this terrible hardship," he said in a statement Saturday morning.</p><p>"My administration is in contact with Moroccan officials. We are working expeditiously to ensure American citizens in Morocco are safe, and stand ready to provide any necessary assistance for the Moroccan people. The United States stands by Morocco and my friend King Mohammed VI at this difficult moment."</p></div><div id="rcrd18459"><h2>Humanitarian groups spring into action to help stricken Moroccans</h2><div><a href="https://www.nbcnews.com/author/patrick-smith-ncpn989401"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>The Moroccan Red Crescent was among the first humanitarian charities to offer help to survivors of Friday's earthquake, providing urgent first aid to some of the hundreds injured.</p><p>The International Federation of Red Cross and Red Crescent Societies in the Middle East and North Africa said it was also ready to provide support on X, the social network formerly known as Twitter, while sharing images of its medics treating someone on a stretcher and a devastated building.</p></div><div id="rcrd18460"><h2>Death toll rises to at least 820 with more than 600 injured</h2><div><a href="https://www.nbcnews.com/author/patrick-smith-ncpn989401"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>At least 820 people have died as a result of the devastating earthquake that hit Morocco Friday night, the country's Interior Ministry said on state TV Saturday morning.</p><p>The update is the second upward revision of the death toll and reflects the difficulty authorities have in reaching remote, rural parts of the country that have been badly affected.</p><p>The number of injuries was also increased to 672, with 205 of them classed as serious.</p></div><div id="rcrd18456"><h2>Israel pledges to send aid</h2><p>Israel's Benjamin Netanyahu has instructed "all government bodies and forces" to offer necessary assistance to the people of Morocco, according to a statement from the prime minister's office. </p><p>This includes "the preparations for sending an aid delegation to the area," it said. </p><p>"The prime minister said that the people of Israel stand with our friends, the people of Morocco, during this difficult hour and prays for their well being, and that we will help in any way needed," the statement added. </p></div><div id="rcrd18458"><h2>Buildings in Marrakech, a UNESCO World Heritage site, damaged </h2><p>In Marrakech, the famous Koutoubia Mosque, built in the 12th century, suffered damage, but the extent was not immediately clear. The building's 226-foot minaret is known as the “roof of Marrakech.” </p><p>Moroccans also posted videos showing damage to parts of the famous red walls that surround the old city, a UNESCO World Heritage site.</p><p>Most of the fatalities so far have been reported in and around Marrakech.  </p></div><div id="rcrd18457"><h2>A woman reacts with despair after seeing the damage to her home in Marrakech on Saturday</h2><figure><picture><source media="(min-width: 1000px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-ps-0414-659721.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0414-659721.jpg 1x"><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-ps-0414-659721.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0414-659721.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0414-659721.jpg" alt="A woman reacts standing in front of her earthquake-damaged house in the old city in Marrakech on Sept. 9, 2023." height="3595" width="5392"></picture><figcaption><span>Fadel Senna / AFP - Getty Images</span></figcaption></figure></div><div id="rcrd18455"><h2>UAE to set up 'air bridge' to help quake-struck Morocco</h2><div><p><span>Dan Murphy, Special to CNBC</span></p></div><p>ABU DHABI — The United Arab Emirates said it was setting up an "air bridge" to deliver critical relief supplies and other forms of support to those hit by the Morocco earthquake, according to state media.</p><p>"His Highness’ initiative reaffirms the deep-rooted ties between the UAE and Morocco and underscores the UAE’s enduring disaster response efforts and commitment to strengthening global solidarity, particularly with those in need," the <a href="https://www.wam.ae/en/details/1395303194971" target="_blank">Emirates News Agency reported</a>, referring to Sheikh Mohammed bin Zayed, the president of the UAE and ruler of Abu Dhabi. </p></div><div id="rcrd18454"><h2>Desperate search for survivors trapped under rubble continues</h2><div><a href="https://www.nbcnews.com/author/patrick-smith-ncpn989401"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>People across the earthquake-struck region are scrambling to find and free any survivors trapped under debris.</p><p>Montasir Itri, from the mountain village of Asni near the epicenter, <a href="https://www.reuters.com/world/africa/magnitude-7-earthquake-strikes-morocco-gfz-2023-09-08/" target="_blank">told the Reuters news agency</a> that most houses there were damaged. </p><p>"Our neighbors are under the rubble and people are working hard to rescue them using available means in the village," he said. </p><p>Residents of Marrakech, which is a UNESCO World Heritage Site, told Reuters some buildings there had collapsed completely.</p></div><div id="rcrd18453"><h2>Survivors pick through rubble to find their belongings in Marrakech</h2><figure><picture><source media="(min-width: 1000px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-ps-0348-070bae.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0348-070bae.jpg 1x"><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-ps-0348-070bae.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0348-070bae.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0348-070bae.jpg" alt="Image: MOROCCO-QUAKE" height="4000" width="6000"></picture><figcaption><span>Fadel Sennna / AFP - Getty Images</span></figcaption></figure></div><div id="rcrd18452"><h2>U.S. embassy tells Americans to 'exercise caution' in case of aftershocks</h2><div><a href="https://www.nbcnews.com/author/f-brinley-bruton-ncpn721"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183781/brinley-bruton-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183781/brinley-bruton-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183781/brinley-bruton-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>The U.S. Embassy in Rabat issued an <a href="https://ma.usembassy.gov/safety-alert-an-earthquake-has-struck-12-km-from-imintanoute/" target="_blank">alert early Saturday advising U.S. citizens to exercise caution </a>for the next 24 hours in case of additional earthquakes or aftershocks.&nbsp;</p><p>Officials were monitoring the situation closely but were not aware of any U.S. citizens who had been affected, according to a statement sent to NBC News. </p><p>"We strongly encourage U.S. citizens in the affected areas to monitor local news, follow the emergency instructions provided by local authorities, enroll in the Smart Traveler Enrollment Program at step.state.gov to receive important emergency information," the statement added.</p><p>"We urge U.S. citizens in the affected areas who are safe to contact their loved ones directly and/or update their status on social media.&nbsp;Any U.S. citizens in the affected area and in need of immediate emergency services should contact local authorities."</p></div><div id="rcrd18451"><h2>International bodies offer Morocco support</h2><div><a href="https://www.nbcnews.com/author/patrick-smith-ncpn989401"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>The United Nations has said it is ready to assist Morocco in the aftermath of Friday's earthquake, that has killed more than 600 people.</p><p>"The Secretary-General was profoundly saddened to learn of the earthquake that hit Morocco today which claimed many lives," said a <a href="https://www.un.org/sg/en/content/sg/statement/2023-09-09/statement-attributable-the-spokesperson-of-the-secretary-general-earthquake-morocco-scroll-down-for-french" target="_blank">statemen</a>t from Stéphane Dujarric, spokesperson for U.N. Secretary-General António Guterres.</p><p>"The United Nations is ready to assist the government of Morocco in its efforts to assist the impacted population."</p><p>The European Commission, the executive body of the European Union, said that its Emergency Response Coordination Centre was closely monitoring the situation and could "provide assistance if requested."</p><p>"We stand by the people of Morocco at this difficult time following the deadly earthquake," the commission said in a <a href="https://twitter.com/EU_Commission/status/1700402892715315668" target="_blank">statement</a>.</p></div><div id="rcrd18450"><h2>Locals in Marrakech sleep outside in a public square early Saturday</h2><figure><picture><source media="(min-width: 1000px)" srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-ps-0256-2f19db.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-560w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0256-2f19db.jpg 1x"><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:eco,dpr_2.0/rockcms/2023-09/230909-morocco-earthquake-ps-0256-2f19db.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0256-2f19db.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_fit-760w,f_auto,q_auto:best/rockcms/2023-09/230909-morocco-earthquake-ps-0256-2f19db.jpg" alt="Image: TOPSHOT-MOROCCO-QUAKE" height="4000" width="6000"></picture><figcaption><span>FADEL SENNA / AFP - Getty Images</span></figcaption></figure></div><div id="rcrd18449"><h2>Moroccan journalist describes surviving earthquake</h2><div><a href="https://www.nbcnews.com/author/patrick-smith-ncpn989401"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>A Moroccan journalist described the chaos of the earthquake and its aftermath, with people streaming onto the streets to avoid structural damage.</p><p>Rida Fakhar told the U.K.'s <a href="https://twitter.com/SkyNews/status/1700406323152642429" target="_blank">Sky News</a> that he arrived in Marrakech on Friday two hours before the earthquake.</p><p>"It was very, very strong, I've never seen something like that. I've witnessed two earthquakes in Morocco but this is something I've never seen," he said.</p><p>"Here in Marrakech we hear ambulances coming in from different parts of Marrakech and from the Atlas mountains."</p></div><div id="rcrd18448"><h2>Earthquake death toll almost doubles to 632 in early Saturday update</h2><div><a href="https://www.nbcnews.com/author/patrick-smith-ncpn989401"><picture><source srcset="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:eco,dpr_2.0/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 2x, https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg 1x"><img loading="lazy" src="https://media-cldnry.s-nbcnews.com/image/upload/t_focal-60x60,f_auto,q_auto:best/newscms/2020_03/3183971/patrick-smith-circle-byline-template.jpg" alt="" height="48" width="48"></picture></a></div><p>At least 632 people have died as a result of Friday's earthquake, Moroccan Interior Ministry confirmed early Saturday — more than double the previous total of 296.</p><p>The ministry also said 329 people were injured, a figure almost certain to rise as authorities gather information from all the affected areas.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[CRISPR used to 'reprogram' cancer cells into healthy muscle in the lab (106 pts)]]></title>
            <link>https://www.livescience.com/health/cancer/crispr-used-to-reprogram-cancer-cells-into-healthy-muscle-in-the-lab</link>
            <guid>37444477</guid>
            <pubDate>Sat, 09 Sep 2023 12:20:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.livescience.com/health/cancer/crispr-used-to-reprogram-cancer-cells-into-healthy-muscle-in-the-lab">https://www.livescience.com/health/cancer/crispr-used-to-reprogram-cancer-cells-into-healthy-muscle-in-the-lab</a>, See on <a href="https://news.ycombinator.com/item?id=37444477">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-widget-type="contentparsed" id="content">
<section>
<div itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<div>
<picture><source type="image/webp" alt="spindle-shape muscle cells shown depicted in bright green and blue against a black background" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-1200-80.jpg.webp 1200w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-1920-80.jpg.webp 1920w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z.jpg"><source type="image/jpeg" alt="spindle-shape muscle cells shown depicted in bright green and blue against a black background" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-1920-80.jpg 1920w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z.jpg"><img src="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-320-80.jpg" alt="spindle-shape muscle cells shown depicted in bright green and blue against a black background" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z-1920-80.jpg 1920w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z.jpg"></picture>
</div>
<meta itemprop="url" content="https://cdn.mos.cms.futurecdn.net/9JsxMS5zzu7GdgCSFV2P5Z.jpg">
<meta itemprop="height" content="600">
<meta itemprop="width" content="338">
<figcaption itemprop="caption description">
<span>The transformed tumor cells lost all of their cancer-like traits and instead resembled normal muscle cells, donning a spindle-like shape, as seen here.</span>
<span itemprop="copyrightHolder">(Image credit: Vakoc lab/Cold Spring Harbor Laboratory)</span>
</figcaption>
</div>

<div itemprop="articleBody" id="article-body">

<p>Scientists have transformed cancer cells into healthy muscle tissue in the lab using <a href="https://www.livescience.com/58790-crispr-explained.html"><u>CRISPR</u></a> gene-editing technology — and they hope new cancer treatments can be built on the back of this experiment.</p><p>In a study published Aug. 28 in the journal <a href="https://www.pnas.org/doi/10.1073/pnas.2303859120" target="_blank" data-url="https://www.pnas.org/doi/10.1073/pnas.2303859120"><u>PNAS</u></a>, researchers found that disabling a particular protein complex in cells of <a href="https://www.cancer.gov/types/soft-tissue-sarcoma/patient/rhabdomyosarcoma-treatment-pdq" target="_blank" data-url="https://www.cancer.gov/types/soft-tissue-sarcoma/patient/rhabdomyosarcoma-treatment-pdq"><u>rhabdomyosarcoma</u></a> (RMS) — a rare cancer in skeletal muscle tissue that mainly affects <a href="https://www.cancer.org/cancer/types/rhabdomyosarcoma/about/key-statistics.html" target="_blank" data-url="https://www.cancer.org/cancer/types/rhabdomyosarcoma/about/key-statistics.html"><u>children under age 10</u></a> — in the laboratory causes the tumor cells to turn into healthy muscle cells.</p><p>Although the research is still in its early days, this process of "resetting" cancer cells into healthy cells, broadly known as differentiation therapy, has already been tested in other types of cancer, such as <a href="https://www.cshl.edu/stopping-a-rare-childhood-cancer-in-its-tracks/" target="_blank" data-url="https://www.cshl.edu/stopping-a-rare-childhood-cancer-in-its-tracks/"><u>bone</u></a> and <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8643352/" target="_blank" data-url="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8643352/"><u>blood</u></a> cancer. <a href="https://www.haematologica.org/article/view/haematol.2020.262121" target="_blank" data-url="https://www.haematologica.org/article/view/haematol.2020.262121"><u>Four drugs</u></a> have been approved by the U.S. Food and Drug Administration (FDA) to treat the latter disease and generally work by inhibiting a specific protein in the cancer cells.</p><p>The protein complex pinpointed in the new research could serve as a target for such a therapy, the study authors wrote, and with further development, it could be a promising new treatment option for patients with RMS, which is normally treated with surgery, radiation and <a href="https://www.livescience.com/chemotherapy.html"><u>chemotherapy</u></a>.</p><p>"This technology can allow you to take any cancer and go hunting for how to cause it to differentiate," or cause it to stop multiplying uncontrollably and turn into normal, noncancerous cells, <a href="https://www.cshl.edu/research/faculty-staff/chris-vakoc/" target="_blank" data-url="https://www.cshl.edu/research/faculty-staff/chris-vakoc/"><u>Christopher Vakoc</u></a>, lead author and professor at Cold Spring Harbor Laboratory, said in a <a href="https://www.cshl.edu/once-rhabdomyosarcoma-now-muscle/" target="_blank" data-url="https://www.cshl.edu/once-rhabdomyosarcoma-now-muscle/"><u>statement</u></a>. "This might be a key step toward making differentiation therapy more accessible."</p><p><strong>Related: </strong><a href="https://www.livescience.com/health/genetics/meet-fanzor-the-1st-crispr-like-system-found-in-complex-life"><u><strong>Meet 'Fanzor,' the 1st CRISPR-like system found in complex life</strong></u></a></p><p>Differentiation is a process in which <a href="https://www.livescience.com/65269-stem-cells.html"><u>stem cells</u></a> divide and form the various types of cells in the body, such as muscle or fat cells, which each have a unique pattern of gene expression that enables them to carry out particular functions. In RMS, however, patients have genetic mutations that cause their cells to make a specific protein, called <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2575376/" target="_blank" data-url="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2575376/"><u>PAX3-FOXO1</u></a>, which stops differentiation from happening in skeletal muscle cells. So instead of turning into muscle, the cells form a mass of cancerous tissue.</p><p>In the new study, the researchers used CRISPR to disable, or "knock out," different genes to see which ones make proteins that work together with PAX3-FOXO1 to stop RMS cells from differentiating. Their analysis revealed that, if RMS cells lose the ability to make <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3744014/#:~:text=Highly%20conserved%20between%20human%20and,cycle%20and%20various%20human%20diseases." target="_blank" data-url="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3744014/#:~:text=Highly%20conserved%20between%20human%20and,cycle%20and%20various%20human%20diseases."><u>nuclear factor Y</u></a> (NF-Y) — a protein that regulates gene expression — the cells instead differentiate into muscle cells. Knocking out PAX3-FOXO1 directly has the same effect.</p><p>"The tumor loses all cancer attributes," Vakoc said in the statement. "They're switching from a cell that just wants to make more of itself to cells devoted to contraction."</p><p>Although deactivating PAX3-FOXO1 and NF-Y has similar effects, the researchers discovered that the proteins don't physically interact with each other. Instead, in RMS cells, NF-Y switches on the genes needed to make PAX3-FOXO1 by binding to a specific sequence of DNA. So by blocking NF-Y, the researchers also blocked production of PAX3-FOXO1.</p><p>The findings are still a long way from being translated into a treatment for RMS. However, drugs that inhibit NF-Y are already being developed, including those that stop the protein complex from <a href="https://pubmed.ncbi.nlm.nih.gov/31539186/" target="_blank" data-url="https://pubmed.ncbi.nlm.nih.gov/31539186/">forming</a> or <a href="https://pubmed.ncbi.nlm.nih.gov/33138093/" target="_blank" data-url="https://pubmed.ncbi.nlm.nih.gov/33138093/">binding to DNA</a>.</p><p>One hurdle that will need to be overcome is that NF-Y also regulates important processes in healthy cells, such as <a href="https://www.livescience.com/metabolism">metabolism</a> and the <a href="https://www.genome.gov/genetics-glossary/Cell-Cycle" target="_blank" data-url="https://www.genome.gov/genetics-glossary/Cell-Cycle">cell cycle</a>, the series of steps that cells go through as they grow and divide. However, Vakoc and team hypothesize that because RMS cells are "highly sensitive" to changes in PAX3-FOXO1 expression, there could be a "window of opportunity" in which a drug inhibits NF-Y long enough for RMS cells to differentiate but not so long that healthy tissues get damaged. More research will be needed to confirm that this is a viable treatment strategy, they wrote.</p>
</div>
<div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent"><section><p>Stay up to date on the latest science news by signing up for our Essentials newsletter.</p></section></div>
<div id="slice-container-authorBio"><p>Emily is a health news writer based in London, United Kingdom. She holds a bachelor's degree in biology from Durham University and a master's degree in clinical and therapeutic neuroscience from Oxford University. She has worked in science communication, medical writing and as a local news reporter while undertaking journalism training. In 2018, she was named one of MHP Communications' 30 journalists to watch under 30. (<a href="mailto:emily.cooke@futurenet.com" target="_blank">emily.cooke@futurenet.com</a>)&nbsp;</p>
</div>



</section>




<div id="slice-container-relatedArticles"><p><h5>Most Popular</h5></p></div>








</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google, Meta, Amazon hiring low-paid H1B workers after US layoffs (194 pts)]]></title>
            <link>https://www.moneycontrol.com/europe/?url=https://www.moneycontrol.com/news/trends/layoffs-google-microsoft-meta-amazon-hiring-low-paid-h1b-workers-after-us-layoffs-report-10605301.html</link>
            <guid>37444386</guid>
            <pubDate>Sat, 09 Sep 2023 12:06:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.moneycontrol.com/europe/?url=https://www.moneycontrol.com/news/trends/layoffs-google-microsoft-meta-amazon-hiring-low-paid-h1b-workers-after-us-layoffs-report-10605301.html">https://www.moneycontrol.com/europe/?url=https://www.moneycontrol.com/news/trends/layoffs-google-microsoft-meta-amazon-hiring-low-paid-h1b-workers-after-us-layoffs-report-10605301.html</a>, See on <a href="https://news.ycombinator.com/item?id=37444386">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Even as global tech giants are carrying out mass layoffs, several top Silicon Valley companies are reportedly looking to hire lower-paid tech workers from foreign countries. Google, Meta, Amazon, Microsoft, Zoom, Salesforce and Palantir have applied for thousands of H1B worker visas this year, according to a US Department of Labor data, reported independent investigative journalist Lee Fang.</p><p>

Ironically, thousands of workers on H1B visa, including Indians, have been affected by the layoffs in the United States, with many taking to social media to share the news and seek new opportunities.</p><p>

Just a month after Sundar Pichai announced Google’s plan to cut 12,000 jobs around the world in January, the company filed applications for H1B visas to hire software engineers, analytical consultants, user experience researchers and other roles from outside the United States, with several requests aimed for new Google employees to join in August, the report states. Google parent Alphabet owned Waymo too has reportedly filed similar H1B applications to hire engineers.</p><p>

Meta has laid off nearly 25 per cent of its estimated workforce in just a few months in what CEO Mark Zuckerberg has called the company's "year of efficiency" as the US tech sector continues to downsize.<br>
Amazon CEO Andy Jassy in March laid out a plan to cut 9,000 more jobs from the online retail giant's workforce, following the 18,000 that were axed in January.</p><p>

The layoffs account for a smaller percentage of Amazon's total workforce, which ran up to 1.5 million people in December 2022, than the cuts seen at some other tech giants.</p><p>

Jassy told workers that the extra layoffs were necessary as the company seeks to downsize after years of hiring, particularly during the coronavirus pandemic when people turned to the internet for shopping.</p><p>

In January, Microsoft said it would eliminate 10,000 jobs, almost 5 per cent of the global workforce, as it braces for a potential recession. In an email to employees, CEO Satya Nadella said, “While we are eliminating roles in some areas, we will continue to hire in key strategic areas.”</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Every type of plastic used by Lego (2022) (203 pts)]]></title>
            <link>https://bricknerd.com/home/every-type-of-plastic-used-by-lego-5-20-22</link>
            <guid>37444268</guid>
            <pubDate>Sat, 09 Sep 2023 11:43:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bricknerd.com/home/every-type-of-plastic-used-by-lego-5-20-22">https://bricknerd.com/home/every-type-of-plastic-used-by-lego-5-20-22</a>, See on <a href="https://news.ycombinator.com/item?id=37444268">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-content-field="main-content" data-collection-id="51967abae4b0fe8d01610323" data-edit-main-image="Page Banner">
									<article id="article-6285eb4e9958584aa8b022bc" data-item-id="6285eb4e9958584aa8b022bc">

	<div>

    <!--POST HEADER-->

			<header>

          

          

          <span>
            <span><a href="https://bricknerd.com/home/every-type-of-plastic-used-by-lego-5-20-22"><time datetime="2023-05-20">May 20, 2023</time></a><span>/</span></span>
          </span>
          <span>
            <span></span>
            <span><a href="https://bricknerd.com/?author=5f7bcebeef21ea6db3766912" rel="author">Dave Schefcik</a></span>
          </span>

        </header>

    <!--POST BODY-->

      <div data-layout-label="Post Body" data-type="item" data-updated-on="1652943712293" id="item-6285eb4e9958584aa8b022bc"><div data-block-type="2" id="block-d722a6b95665243e31aa">
  <p><em>Best of BrickNerd - Article originally published May 20, 2022.</em></p><p><em>Today’s guest article comes from </em><a href="https://www.flickr.com/photos/ltdemartinet/" target="_blank"><em>Ryan Howerter</em></a><em>, one of the LEGO fan community’s foremost color and materials enthusiasts. Their </em><a href="https://ryanhowerter.net/colors.php" target="_blank"><em>color guide</em></a><em> is one of our go-to LEGO references here at BrickNerd, and you can follow them on </em><a href="https://www.flickr.com/photos/ltdemartinet/" target="_blank"><em>Flickr</em></a><em>, </em><a href="https://www.instagram.com/ryan_howerter/" target="_blank"><em>Instagram</em></a><em> and </em><a href="https://www.patreon.com/colorstream" target="_blank"><em>Patreon</em></a><em>.</em></p>
</div><div data-block-type="2" id="block-yui_3_17_2_1_1652943714127_8046">
  <h2><strong>A Plethora of Plastics</strong></h2><p>Most people know that most LEGO bricks are made of ABS, but that’s not the only plastic that LEGO uses! Historically and currently, LEGO bricks are made with a variety of materials depending on the use case. This article will explore many of them, with a brief overview of their properties and when/how they have been used.</p><p>Disclaimer: I am only a LEGO enthusiast, not a plastics specialist by any means. If anything here seems wrong or misleading, please do let me know and I will gladly correct it! Also note that within each plastic category, there is the potential for additives and colorants that may further affect how the part performs. Most of the plastics below are really names for families of hundreds of subtly different plastics. LEGO’s exact plastic formulations are trade secrets, and for good reason.</p><p><em>Much of this article was informed by The LEGO Group’s own </em><a href="https://www.lego.com/en-gb/sustainability/product-safety/materials" target="_blank"><em>materials webpage</em></a><em> as well as hobbyist researchers such as Gary Istok, Bailey Fullarton, and others. All images are my own unless noted otherwise.</em><br></p>
</div><div data-block-type="2" id="block-yui_3_17_2_1_1652943714127_6168">

<p>
  <h2><strong>CA (Cellulose Acetate)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_7904">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0b37dc3c-45ac-4884-9ae9-074206f5a217/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%284%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_41653">

<p>CA is a moderately hard <em>thermoplastic</em> (a plastic that softens when heated and hardens when cooled). It can have very glossy, vibrant coloration, and good transparency, but it doesn’t hold its color over time as well as other plastics. The very first LEGO bricks in 1949 were made from CA, and this use continued through the Town Plan and Samsonite eras. However, over time CA has a tendency to warp, often severely. Many of these bricks are now incompatible with modern bricks due to this deformation. LEGO switched to ABS around 1963, and fully phased CA out by 1970.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_49986">

<p>
  <h2><strong>HIPS (High Impact Polystyrene)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_11140">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/7a803d10-3b18-4311-a9df-3d50917d047f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2818%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/7a803d10-3b18-4311-a9df-3d50917d047f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2818%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/7a803d10-3b18-4311-a9df-3d50917d047f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2818%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/7a803d10-3b18-4311-a9df-3d50917d047f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2818%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/7a803d10-3b18-4311-a9df-3d50917d047f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2818%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/7a803d10-3b18-4311-a9df-3d50917d047f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2818%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/7a803d10-3b18-4311-a9df-3d50917d047f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2818%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/7a803d10-3b18-4311-a9df-3d50917d047f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2818%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/7a803d10-3b18-4311-a9df-3d50917d047f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2818%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/7a803d10-3b18-4311-a9df-3d50917d047f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2818%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_46610">

<p>Polystyrene is a very durable plastic, used for some early bricks (PRIMA, waffle plates) and modern baseplates. Despite its impact resistance, it can be brittle, and has a tendency to turn white along the edges as it wears (see the factory-cut edge of the baseplate pictured, and play-worn Minitalia bricks). Older polystyrene bricks have a very high-pitched, glassy sound when dropped. I believe LEGO now adds a rubber additive to HIPS to increase its strength and flexibility, as well as decrease the whitening effect.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_55524">

<p>
  <h2><strong>Bakelite (Polyoxybenzylmethylenglycolanhydride)*</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_13335">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb364e92-6853-455d-b47b-3ceed2c66d50/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%282%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb364e92-6853-455d-b47b-3ceed2c66d50/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%282%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb364e92-6853-455d-b47b-3ceed2c66d50/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%282%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb364e92-6853-455d-b47b-3ceed2c66d50/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%282%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb364e92-6853-455d-b47b-3ceed2c66d50/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%282%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb364e92-6853-455d-b47b-3ceed2c66d50/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%282%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb364e92-6853-455d-b47b-3ceed2c66d50/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%282%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb364e92-6853-455d-b47b-3ceed2c66d50/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%282%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb364e92-6853-455d-b47b-3ceed2c66d50/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%282%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb364e92-6853-455d-b47b-3ceed2c66d50/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%282%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_52142">
  <p>Bakelite is a trademarked name and the world’s first synthetic plastic. Unlike thermoplastics like CA and ABS, Bakelite is a thermoset, meaning that once the resin has hardened it cannot be remolded. It is heat-resistant and inflexible, as well as very shiny and slightly translucent. These bricks were produced for LEGO by the Swedish company Geas Konstharts from 1950–1953, before they rebranded as PRIMA and switched to a polystyrene, which was likely cheaper to produce and had more coloration potential.</p><p>*At least, this is the current AFOL historian consensus for these Geas bricks. From my limited readings, it seems they may more likely be <a href="https://plastiquarian.com/?page_id=14332" target="_blank">Catalin or Beetle</a>, given the consistent bright colors and slight translucency.</p>
</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_61299">

<p>
  <h2><strong>ABS (Acrylonitrile Butadiene Styrene)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_15492">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0fe920d1-8d11-462b-8f45-011b7aa8a606/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2811%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0fe920d1-8d11-462b-8f45-011b7aa8a606/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2811%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0fe920d1-8d11-462b-8f45-011b7aa8a606/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2811%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0fe920d1-8d11-462b-8f45-011b7aa8a606/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2811%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0fe920d1-8d11-462b-8f45-011b7aa8a606/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2811%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0fe920d1-8d11-462b-8f45-011b7aa8a606/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2811%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0fe920d1-8d11-462b-8f45-011b7aa8a606/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2811%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0fe920d1-8d11-462b-8f45-011b7aa8a606/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2811%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0fe920d1-8d11-462b-8f45-011b7aa8a606/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2811%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/0fe920d1-8d11-462b-8f45-011b7aa8a606/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2811%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_57732">

<p>ABS is a strong, stable, scratch-resistant thermoplastic, and makes up the vast majority of LEGO pieces since 1963. It is a translucent-milky color when uncolored, so it cannot be used for transparent parts. LEGO used to receive their raw ABS granules from Bayer, which has a long history of testing 2x4 bricks for LEGO in unusual colors and molds. In 2004 Bayer’s ABS division became Lanxess, which now provides LEGO with ABS under the brand name Novodur (colored with Lanxess’s Macrolex dyes).</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_17938">

<p>
  <h2><strong>SAN (Styrene-Acrylonitrile Resin)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_17598">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a942c568-1881-437b-93f2-77826f87248a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%288%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a942c568-1881-437b-93f2-77826f87248a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%288%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a942c568-1881-437b-93f2-77826f87248a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%288%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a942c568-1881-437b-93f2-77826f87248a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%288%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a942c568-1881-437b-93f2-77826f87248a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%288%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a942c568-1881-437b-93f2-77826f87248a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%288%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a942c568-1881-437b-93f2-77826f87248a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%288%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a942c568-1881-437b-93f2-77826f87248a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%288%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a942c568-1881-437b-93f2-77826f87248a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%288%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a942c568-1881-437b-93f2-77826f87248a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%288%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_63609">

<p>SAN is a very clear, glassy plastic often used for inexpensive drinkware. It is rigid and strong, but can turn yellow over time. Its clarity makes it great for prisms, and I believe LEGO also used it for windscreens from the 70 to early 90s.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_67419">

<p>
  <h2><strong>PP (Polypropylene)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_19666">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/97169097-cb01-460c-ad89-5b9df41b72b0/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2814%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/97169097-cb01-460c-ad89-5b9df41b72b0/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2814%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/97169097-cb01-460c-ad89-5b9df41b72b0/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2814%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/97169097-cb01-460c-ad89-5b9df41b72b0/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2814%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/97169097-cb01-460c-ad89-5b9df41b72b0/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2814%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/97169097-cb01-460c-ad89-5b9df41b72b0/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2814%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/97169097-cb01-460c-ad89-5b9df41b72b0/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2814%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/97169097-cb01-460c-ad89-5b9df41b72b0/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2814%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/97169097-cb01-460c-ad89-5b9df41b72b0/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2814%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/97169097-cb01-460c-ad89-5b9df41b72b0/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2814%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_73460">

<p>Polypropylene is a tough, flexible plastic, used for most Bionicle weapons and minifigure parts that might break easily if they were a more rigid plastic. The plastic’s flexibility allows for it to be used as a “<a href="https://en.wikipedia.org/wiki/Living_hinge" target="_blank">living hinge</a>”, as in the book pictured here. Because it cannot be fully transparent, colors like 48 Transparent Green (pictured) look nearly opaque in PP, sometimes being mistaken for their solid counterpart color. PP often turns whitish along the edges as it wears. It is used for as varied applications as large buckets and pick-a-brick cups, and even the polybags that parts and small sets come in!</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_22003">

<p>
  <h2><strong>PC (Polycarbonate)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_21663">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b2573fdd-4f77-47f9-ac71-82142bd4442a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%289%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b2573fdd-4f77-47f9-ac71-82142bd4442a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%289%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b2573fdd-4f77-47f9-ac71-82142bd4442a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%289%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b2573fdd-4f77-47f9-ac71-82142bd4442a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%289%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b2573fdd-4f77-47f9-ac71-82142bd4442a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%289%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b2573fdd-4f77-47f9-ac71-82142bd4442a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%289%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b2573fdd-4f77-47f9-ac71-82142bd4442a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%289%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b2573fdd-4f77-47f9-ac71-82142bd4442a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%289%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b2573fdd-4f77-47f9-ac71-82142bd4442a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%289%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b2573fdd-4f77-47f9-ac71-82142bd4442a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%289%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_78510">

<p>Polycarbonate is a strong material that can be very clear. I believe that PC replaced CA for transparent parts at the same time that ABS replaced CA for opaque parts in 1963. The vast majority of transparent parts in LEGO’s history are made of PC — but around 2019, LEGO switched to MABS, so PC is now only used for opaque parts like hinges and joints. Transparent PC tends to bond to itself when connected tightly, which is why it’s so difficult to remove a transparent cone from a 4L bar, and PC minifigures only exist as rare delicate prototypes. The PC LEGO uses is Lanxess’s Makrolon.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_23936">

<p>
  <h2><strong>MABS (Methyl Methacrylate-Acrylonitrile-Butadiene-Styrene)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_23596">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c348ef55-e4a4-407e-ab57-11b06b6a441a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2810%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c348ef55-e4a4-407e-ab57-11b06b6a441a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2810%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c348ef55-e4a4-407e-ab57-11b06b6a441a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2810%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c348ef55-e4a4-407e-ab57-11b06b6a441a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2810%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c348ef55-e4a4-407e-ab57-11b06b6a441a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2810%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c348ef55-e4a4-407e-ab57-11b06b6a441a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2810%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c348ef55-e4a4-407e-ab57-11b06b6a441a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2810%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c348ef55-e4a4-407e-ab57-11b06b6a441a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2810%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c348ef55-e4a4-407e-ab57-11b06b6a441a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2810%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c348ef55-e4a4-407e-ab57-11b06b6a441a/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2810%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_83392">

<p>This thermoplastic offers high strength and impact resistance, though not quite as strong as standard ABS. But unlike ABS, MABS offers high transparency and can display very bright transparent colors and glitter effects. Since around 2018, LEGO has switched to using MABS for most transparent parts (possibly because PC uses BPA, which is increasingly regulated by the EU—read more about the transition in <a href="https://bricknerd.com/home/a-clear-path-forward-for-transparent-bricks-1-21-22" target="_blank">this BrickNerd article</a>). It tends to look slightly milkier than older transparent parts, but I believe this is improving as LEGO continues to refine the material.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_25809">

<p>
  <h2><strong>PA (Polyamide)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_25469">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7600e73-2a53-4568-99f2-3f5fa40145a8/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%285%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7600e73-2a53-4568-99f2-3f5fa40145a8/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%285%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7600e73-2a53-4568-99f2-3f5fa40145a8/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%285%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7600e73-2a53-4568-99f2-3f5fa40145a8/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%285%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7600e73-2a53-4568-99f2-3f5fa40145a8/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%285%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7600e73-2a53-4568-99f2-3f5fa40145a8/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%285%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7600e73-2a53-4568-99f2-3f5fa40145a8/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%285%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7600e73-2a53-4568-99f2-3f5fa40145a8/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%285%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7600e73-2a53-4568-99f2-3f5fa40145a8/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%285%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7600e73-2a53-4568-99f2-3f5fa40145a8/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%285%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_88261">

<p>Polyamide, or nylon, is a very strong plastic that holds up against high impact, lending itself to connectors and gears, even in non-LEGO machinery, where durability is more important than perfect coloration. LEGO used nylon as far back as the 1960s for flexible vehicle couplings (pictured right), although today most of these have hardened and are very brittle. Modern Technic bricks with pins, such as 42929, are dual-molded so the brick part is ABS and the pin is PA (this is why they show up in BrickSet as “multicombination”, even though it’s the same color throughout).</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_27614">

<p>
  <h2><strong>POM (Polyoxymethylene)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_27274">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e77ef1c5-c4bb-46e9-ab96-b50581675088/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2812%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e77ef1c5-c4bb-46e9-ab96-b50581675088/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2812%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e77ef1c5-c4bb-46e9-ab96-b50581675088/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2812%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e77ef1c5-c4bb-46e9-ab96-b50581675088/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2812%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e77ef1c5-c4bb-46e9-ab96-b50581675088/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2812%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e77ef1c5-c4bb-46e9-ab96-b50581675088/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2812%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e77ef1c5-c4bb-46e9-ab96-b50581675088/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2812%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e77ef1c5-c4bb-46e9-ab96-b50581675088/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2812%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e77ef1c5-c4bb-46e9-ab96-b50581675088/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2812%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e77ef1c5-c4bb-46e9-ab96-b50581675088/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2812%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_92972">

<p>Also known as acetal, POM offers high stability and low friction, like PA. POM is more pliable, making it suitable for long axles that need to be able to flex a little without breaking.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_29370">

<p>
  <h2><strong>TP (Thermoplastic Polyester)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_29030">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/2c4fa931-d8b2-4a5f-a36c-4d71b56a661f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2816%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/2c4fa931-d8b2-4a5f-a36c-4d71b56a661f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2816%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/2c4fa931-d8b2-4a5f-a36c-4d71b56a661f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2816%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/2c4fa931-d8b2-4a5f-a36c-4d71b56a661f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2816%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/2c4fa931-d8b2-4a5f-a36c-4d71b56a661f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2816%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/2c4fa931-d8b2-4a5f-a36c-4d71b56a661f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2816%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/2c4fa931-d8b2-4a5f-a36c-4d71b56a661f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2816%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/2c4fa931-d8b2-4a5f-a36c-4d71b56a661f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2816%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/2c4fa931-d8b2-4a5f-a36c-4d71b56a661f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2816%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/2c4fa931-d8b2-4a5f-a36c-4d71b56a661f/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2816%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_97662">

<p>TP is a broad category of materials, including PET, that are strong and can be very transparent. In LEGO, it is both tougher than PC (so the thin fire doesn’t snap) and softer than ABS (so the brick separator is less likely to damage other bricks). Fun fact, older separators were made out of HV-PC instead, so you might have both varieties in your collection.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_31062">

<p>
  <h2><strong>PE (Polyethylene)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_30722">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e25e0ea3-252f-4f8f-8278-ff5adaad0c9b/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%287%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e25e0ea3-252f-4f8f-8278-ff5adaad0c9b/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%287%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e25e0ea3-252f-4f8f-8278-ff5adaad0c9b/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%287%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e25e0ea3-252f-4f8f-8278-ff5adaad0c9b/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%287%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e25e0ea3-252f-4f8f-8278-ff5adaad0c9b/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%287%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e25e0ea3-252f-4f8f-8278-ff5adaad0c9b/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%287%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e25e0ea3-252f-4f8f-8278-ff5adaad0c9b/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%287%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e25e0ea3-252f-4f8f-8278-ff5adaad0c9b/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%287%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e25e0ea3-252f-4f8f-8278-ff5adaad0c9b/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%287%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e25e0ea3-252f-4f8f-8278-ff5adaad0c9b/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%287%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_102320">

<p>Polyethylene is a very common thermoplastic with low strength and rigidity, and a low melting point. Its relative flexibility makes it perfect for large thin parts like leaves and stems. On the left in the photo above are high-density polyethylene (HDPE), while the right two parts are low-density polyethylene (LDPE): the lower the density, the softer it is. PE is a very versatile plastic — the thin plastic in LEGO store shopping bags is LDPE, and some <a href="https://www.bricklink.com/v2/catalog/catalogitem.page?G=case1" target="_blank">carry cases</a> that have a living hinge are HDPE. In 2018, LEGO started sourcing their PE from 98% sugarcane (the two small leaves pictured), as part of their long-term <a href="https://www.lego.com/en-us/aboutus/news/2019/october/lego-plants-made-from-plants" target="_blank">sustainability plan</a>. Although the source is different, the end product is, in theory, identical.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_32695">

<p>
  <h2><strong>MTPO (Metallocene Thermoplastic Polyolefin)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_32355">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb79ebdf-5ad8-4531-8a8a-fe8eb230e3e1/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%286%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb79ebdf-5ad8-4531-8a8a-fe8eb230e3e1/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%286%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb79ebdf-5ad8-4531-8a8a-fe8eb230e3e1/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%286%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb79ebdf-5ad8-4531-8a8a-fe8eb230e3e1/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%286%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb79ebdf-5ad8-4531-8a8a-fe8eb230e3e1/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%286%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb79ebdf-5ad8-4531-8a8a-fe8eb230e3e1/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%286%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb79ebdf-5ad8-4531-8a8a-fe8eb230e3e1/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%286%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb79ebdf-5ad8-4531-8a8a-fe8eb230e3e1/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%286%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb79ebdf-5ad8-4531-8a8a-fe8eb230e3e1/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%286%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/bb79ebdf-5ad8-4531-8a8a-fe8eb230e3e1/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%286%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_106999">

<p>MTPO is a very soft material that LEGO uses for parts that need to bend sharply without being damaged. I wasn’t able to find much information on this material, but it seems it’s a variant of TPO, a category of thermoplastics blended with elastomers.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_34285">

<p>
  <h2><strong>TPU (Thermoplastic Polyurethane)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_33945">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/d402cb80-feda-4e74-8ebf-7fc56158c814/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2813%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/d402cb80-feda-4e74-8ebf-7fc56158c814/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2813%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/d402cb80-feda-4e74-8ebf-7fc56158c814/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2813%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/d402cb80-feda-4e74-8ebf-7fc56158c814/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2813%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/d402cb80-feda-4e74-8ebf-7fc56158c814/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2813%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/d402cb80-feda-4e74-8ebf-7fc56158c814/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2813%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/d402cb80-feda-4e74-8ebf-7fc56158c814/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2813%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/d402cb80-feda-4e74-8ebf-7fc56158c814/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2813%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/d402cb80-feda-4e74-8ebf-7fc56158c814/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2813%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/d402cb80-feda-4e74-8ebf-7fc56158c814/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2813%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_111482">

<p>TPU is a very strong but elastic thermoplastic, perfect for uses where repeated flexing might wear out a weaker material. LEGO uses this for Dots and VIDIYO straps, but also other semiflexible parts like DUPLO dog ears. TPU is harder and stronger than MTPO.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_35818">

<p>
  <h2><strong>SEBS (Styrene-Ethylene-Butylene-Styrene)</strong>&nbsp;</h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_35478">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b88d373e-a6bc-4818-b35f-2287e8f270c3/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2815%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b88d373e-a6bc-4818-b35f-2287e8f270c3/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2815%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b88d373e-a6bc-4818-b35f-2287e8f270c3/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2815%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b88d373e-a6bc-4818-b35f-2287e8f270c3/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2815%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b88d373e-a6bc-4818-b35f-2287e8f270c3/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2815%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b88d373e-a6bc-4818-b35f-2287e8f270c3/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2815%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b88d373e-a6bc-4818-b35f-2287e8f270c3/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2815%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b88d373e-a6bc-4818-b35f-2287e8f270c3/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2815%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b88d373e-a6bc-4818-b35f-2287e8f270c3/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2815%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/b88d373e-a6bc-4818-b35f-2287e8f270c3/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2815%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_116023">

<p>SEBS is a thermoplastic that behaves like rubber, without needing vulcanization. LEGO uses this for tires — and, famously, LEGO makes most of the tires in the world, by number if not by mass! I believe that LEGO used to make their tires out of styrene-butadiene-styrene (SBS), which is less stable and heat-resistant than SEBS.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_39143">

<p>
  <h2><strong>PET (Polyethylene Terephthalate)</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_38803">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7fbb067-4a4d-4397-867c-c8be217f4675/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2819%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7fbb067-4a4d-4397-867c-c8be217f4675/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2819%29.JPG" data-image-dimensions="2000x1388" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7fbb067-4a4d-4397-867c-c8be217f4675/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2819%29.JPG" width="2000" height="1388" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7fbb067-4a4d-4397-867c-c8be217f4675/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2819%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7fbb067-4a4d-4397-867c-c8be217f4675/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2819%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7fbb067-4a4d-4397-867c-c8be217f4675/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2819%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7fbb067-4a4d-4397-867c-c8be217f4675/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2819%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7fbb067-4a4d-4397-867c-c8be217f4675/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2819%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7fbb067-4a4d-4397-867c-c8be217f4675/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2819%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/c7fbb067-4a4d-4397-867c-c8be217f4675/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2819%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
          
          <figcaption>
            
          </figcaption>
        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_120462">

<p>No photo here, sorry. PET, a type of polyester, is a versatile plastic used for water bottles (among a myriad of other items including fabrics and electronics). LEGO currently uses PET for thermoformed clamshell packages such as Build-a-Minifig packages and comic con promos. LEGO has been prototyping <a href="https://www.lego.com/en-us/aboutus/news/2021/june/prototype-lego-brick-recycled-plastic/" target="_blank">actual bricks</a> in this plastic, due to its readily recyclable nature (when not thermoformed), but none have been released publicly just yet.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_37310">

<p>
  <h2><strong>Other Materials</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652985682489_36970">

      

      
        <figure>
          
        
        

        
          
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a42d125f-5379-43bf-ac38-5d89b3ff8c96/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2817%29.JPG" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a42d125f-5379-43bf-ac38-5d89b3ff8c96/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2817%29.JPG" data-image-dimensions="1080x810" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a42d125f-5379-43bf-ac38-5d89b3ff8c96/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2817%29.JPG" width="1080" height="810" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a42d125f-5379-43bf-ac38-5d89b3ff8c96/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2817%29.JPG?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a42d125f-5379-43bf-ac38-5d89b3ff8c96/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2817%29.JPG?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a42d125f-5379-43bf-ac38-5d89b3ff8c96/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2817%29.JPG?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a42d125f-5379-43bf-ac38-5d89b3ff8c96/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2817%29.JPG?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a42d125f-5379-43bf-ac38-5d89b3ff8c96/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2817%29.JPG?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a42d125f-5379-43bf-ac38-5d89b3ff8c96/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2817%29.JPG?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/a42d125f-5379-43bf-ac38-5d89b3ff8c96/All+LEGO+Plastics+-+BrickNerd+-+Ryan+Howerter+%2817%29.JPG?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          
        

        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_124967">

<p>As any LEGO fan knows, not all parts are plastic. LEGO has used all sorts of metals, fabrics, foams, rubber bands, and even wood to complete their sets, giving play functionality, textures, and motion that plastic alone couldn’t.</p>



</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_128504">
  <h2><strong>The Future of Plastics</strong></h2><p>That’s all the plastics LEGO has used that I’m aware of — far more than I thought when I started, and I’m certain I haven’t caught all of them! In 2015, LEGO <a href="https://consumerist.com/2015/06/24/lego-investing-150m-to-develop-sustainable-non-plastic-materials-for-brick-making/" target="_blank">announced</a> plans to invest 1 billion DKK (~$150m USD) in developing new sustainable materials for their products over the following 15 years, kicking off with the 2016 opening of their LEGO Sustainable Materials Centre in Billund. In 2018, the first plant-sourced polyethylene parts <a href="https://www.wired.com/story/lego-sustainable-bricks/" target="_blank">started appearing</a> in sets. By 2020, plastic shopping bags were <a href="https://www.lego.com/en-us/sustainability/environment/sustainable-packaging/" target="_blank">being phased out</a> in LEGO stores. And in late 2020, LEGO announced that they were massively <a href="https://www.lego.com/en-us/aboutus/news/2020/september/sustainability" target="_blank">reinforcing</a> their sustainability plan, investing $400m USD to replace all packaging with sustainable materials (as well as other “social responsibility initiatives”). Paper bags are already replacing plastic bags inside sets this year.</p><p>So what becomes of ABS, the plastic that accounts for around 80% of LEGO’s production? LEGO <a href="https://www.lego.com/en-us/aboutus/news/2021/june/prototype-lego-brick-recycled-plastic/" target="_blank">has tested</a> “over 250 variations of PET”, as well as hundreds of other plastics — a New Elementary article <a href="https://www.newelementary.com/2018/07/sustainable-lego-plants-made-from-sugarcane.html" target="_blank">mentions</a> test bricks made from corn, algae, and wheat! But as of now, no final replacement has been announced, and the vast majority of LEGO parts remain fossil-fuel-based. I look forward to seeing what LEGO comes up with by 2030, and given our present climate crisis, it can’t come soon enough.</p>
</div><div data-block-type="2" id="block-yui_3_17_2_1_1652989137331_162286">

<p>
  <h2><strong>A Palatable Postscript</strong></h2>
</p>



</div><div data-test="image-block-inline-outer-wrapper" data-block-type="5" id="block-yui_3_17_2_1_1652989137331_163231">

      

      
        <figure>
          
        
        

        
          <a href="https://amzn.to/3MDkL0M" target="_blank">
            
          <div data-animation-role="image">
            <p><img data-stretch="false" data-src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e89e0b02-225d-499d-94ae-d0d23614d31d/Candy+Blox.jpg" data-image="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e89e0b02-225d-499d-94ae-d0d23614d31d/Candy+Blox.jpg" data-image-dimensions="1163x1046" data-image-focal-point="0.5,0.5" alt="" data-load="false" src="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e89e0b02-225d-499d-94ae-d0d23614d31d/Candy+Blox.jpg" width="1163" height="1046" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e89e0b02-225d-499d-94ae-d0d23614d31d/Candy+Blox.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e89e0b02-225d-499d-94ae-d0d23614d31d/Candy+Blox.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e89e0b02-225d-499d-94ae-d0d23614d31d/Candy+Blox.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e89e0b02-225d-499d-94ae-d0d23614d31d/Candy+Blox.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e89e0b02-225d-499d-94ae-d0d23614d31d/Candy+Blox.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e89e0b02-225d-499d-94ae-d0d23614d31d/Candy+Blox.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/51967abae4b0fe8d0161031f/e89e0b02-225d-499d-94ae-d0d23614d31d/Candy+Blox.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs">
                
            </p>
          </div>
        
          </a>
        

        
          
          <figcaption>
            
          </figcaption>
        
      
        </figure>
      

    </div><div data-block-type="2" id="block-yui_3_17_2_1_1652989137331_163571">
  <p>Just for fun, what are some materials that LEGO <em>hasn’t</em> used for building bricks? We’ve seen wooden bricks from Eco-Bricks and Mokulock, even as early as Halsam’s <a href="http://the-unmutual.blogspot.com/2018/08/introducing-halsam-american-brick-build.html" target="_blank">American Bricks</a> in 1939. Various brands have made a variety of metal bricks as desk toys for adults. <a href="https://www.minibrix.com/index.php/history" target="_blank">Minibrix</a> and <a href="https://forum.brickset.com/discussion/comment/361842/#Comment_361842" target="_blank">Bild-O-Brik</a>, arguably the very first building toys with a stud-and-tube concept, used hard rubber bricks in the mid-1930s. </p><p>Hilary Page’s Kiddicraft used <a href="https://www.hilarypagetoys.com/Home/History/27/522" target="_blank">urea-formaldehyde</a> along with Bakelite for their toys. I have a 2x4 brick made of corn-based PLA (I wish I knew who made it) — not only bio-sourced but biodegradable too! The company <a href="http://bio-on.it/immagini/minervsupertoys/BROCHURE_SUPERTOYS_EN.pdf" target="_blank">Bio-On</a> has been testing sustainable bricks made from PHA. <a href="https://spielwaren-investor.com/2022/04/04/100-jahre-alte-bausteine-aus-milch/?fbclid=IwAR39efH5Gml4LLNDetyBE91rVgp4_jmgTx2I4AACzX0Mcpob3-KkpZ9gE-M" target="_blank">Batima</a>, a brand from 1930s Belgium, made bricks from Galalith, which comes from casein (milk protein) — not edible, unlike <a href="https://amzn.to/3MDkL0M" target="_blank">Candy Blox</a>, which are made from compressed dextrose! </p>
</div><div data-block-type="2" id="block-yui_3_17_2_1_1652985682489_129824">
  <p><em>Do you know of any other LEGO plastics that we missed? Let us know in the comments below!</em></p><p><strong>Do you want to help BrickNerd continue publishing articles like this one? </strong><a href="https://www.patreon.com/BrickNerdOfficial" target="_blank"><strong>Become a top patron</strong></a><strong> like Charlie Stephens, Marc &amp; Liz Puleo, Paige Mueller, Rob Klingberg from Brickstuff, John &amp; Joshua Hanlon from Beyond the Brick, Megan Lum, Andy Price, John A., Lukas Kurth from StoneWars, and Wayne Tyler to show your support, get early access, exclusive swag and more.</strong></p>
</div></div>

    <!--POST FOOTER-->

      

    </div><!-- /content-wrapper -->
  </article>




<!--PAGINATION-->





<!--COMMENTS-->


  
  
								</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dennis Austin, developer of PowerPoint, has died (125 pts)]]></title>
            <link>https://www.washingtonpost.com/obituaries/2023/09/08/dennis-austin-software-developer-powerpoint-dies/</link>
            <guid>37444257</guid>
            <pubDate>Sat, 09 Sep 2023 11:42:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.washingtonpost.com/obituaries/2023/09/08/dennis-austin-software-developer-powerpoint-dies/">https://www.washingtonpost.com/obituaries/2023/09/08/dennis-austin-software-developer-powerpoint-dies/</a>, See on <a href="https://news.ycombinator.com/item?id=37444257">Hacker News</a></p>
Couldn't get https://www.washingtonpost.com/obituaries/2023/09/08/dennis-austin-software-developer-powerpoint-dies/: Error [ERR_FR_TOO_MANY_REDIRECTS]: Maximum number of redirects exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Privacy Nightmare on Wheels’: Every Car Brand Reviewed by Mozilla (520 pts)]]></title>
            <link>https://foundation.mozilla.org/en/blog/privacy-nightmare-on-wheels-every-car-brand-reviewed-by-mozilla-including-ford-volkswagen-and-toyota-flunks-privacy-test/</link>
            <guid>37443644</guid>
            <pubDate>Sat, 09 Sep 2023 09:39:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://foundation.mozilla.org/en/blog/privacy-nightmare-on-wheels-every-car-brand-reviewed-by-mozilla-including-ford-volkswagen-and-toyota-flunks-privacy-test/">https://foundation.mozilla.org/en/blog/privacy-nightmare-on-wheels-every-car-brand-reviewed-by-mozilla-including-ford-volkswagen-and-toyota-flunks-privacy-test/</a>, See on <a href="https://news.ycombinator.com/item?id=37443644">Hacker News</a></p>
Couldn't get https://foundation.mozilla.org/en/blog/privacy-nightmare-on-wheels-every-car-brand-reviewed-by-mozilla-including-ford-volkswagen-and-toyota-flunks-privacy-test/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Bare-Metal Kubernetes, Part I: Talos on Hetzner (120 pts)]]></title>
            <link>https://datavirke.dk/posts/bare-metal-kubernetes-part-1-talos-on-hetzner/</link>
            <guid>37443404</guid>
            <pubDate>Sat, 09 Sep 2023 08:44:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://datavirke.dk/posts/bare-metal-kubernetes-part-1-talos-on-hetzner/">https://datavirke.dk/posts/bare-metal-kubernetes-part-1-talos-on-hetzner/</a>, See on <a href="https://news.ycombinator.com/item?id=37443404">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
	  <p>I've been running a Kubernetes cluster on a mix of virtual and bare metal machines with Hetzner for about a year now, and while the setup has served me well, being a very exploratory exercise at the time it wasn't very well documented.</p>
<p>To rectify this, and to get a chance to play with some tools I wasn't aware of at the time, I've decided to rebuild the cluster from scratch and document the process through these posts.</p>
<p>I have a rough sketch of the end product on my mind, which I plan to materialize through these steps/posts:</p>
<ul>
<li>
<p><strong><a href="https://datavirke.dk/posts/bare-metal-kubernetes-part-1-talos-on-hetzner/">Part I: Talos on Hetzner</a></strong>
Covers provisioning of the first server, installation of Talos Linux and configuration and bootstrapping</p>
</li>
<li>
<p><strong><a href="https://datavirke.dk/posts/bare-metal-kubernetes-part-2-cilium-and-firewalls/">Part II: Cilium CNI &amp; Firewalls</a></strong> Choosing a CNI and implementing network policies and firewall rules without locking ourselves out.</p>
</li>
<li>
<p><strong><a href="https://datavirke.dk/posts/bare-metal-kubernetes-part-3-encrypted-gitops-with-fluxcd/">Part III: Encrypted GitOps with FluxCD</a></strong> Keeping track of deployed resources with FluxCD, using <a href="https://github.com/mozilla/sops">SOPS</a> to store encrypt secrets in-repository.</p>
</li>
<li>
<p><strong><a href="https://datavirke.dk/posts/bare-metal-kubernetes-part-4-ingress-dns-certificates/">Part IV: Ingress, DNS and Certificates</a></strong> Installing an ingress controller (nginx), DNS controller (external-dns), and certificate manager for automating routing.</p>
</li>
<li>
<p><strong><a href="https://datavirke.dk/posts/bare-metal-kubernetes-part-5-scaling-out/">Part V: Scaling Out</a></strong> A single node does not a cluster make! Time to scale the cluster up to 3 nodes</p>
</li>
<li>
<p><strong><a href="https://datavirke.dk/posts/bare-metal-kubernetes-part-6-persistent-storage-with-rook-ceph/">Part VI: Persistent Storage with Rook Ceph</a></strong> With 3 nodes and 6 available disks, we're finally eligible to store data long term, which we'll need going forward.</p>
</li>
<li>
<p><strong><a href="https://datavirke.dk/posts/bare-metal-kubernetes-part-7-private-registry-with-harbor/">Part VII: Private Registry with Harbor</a></strong> Persistent storage allows us to store and cache the images we use, so let's!</p>
</li>
<li>
<p><strong><a href="https://datavirke.dk/posts/bare-metal-kubernetes-part-8-containerizing-our-work-environment/">Part VIII: Containerizing our Work Environment</a></strong> Compile our entire working environment into a single image to make upgrades easy.</p>
</li>
</ul>
<p>Complete source code for the live cluster is available <a href="https://github.com/MathiasPius/kronform">@github/MathiasPius/kronform</a></p>
<h2 id="choosing-a-kubernetes-distribution"><a href="#choosing-a-kubernetes-distribution" aria-label="Anchor link for: choosing-a-kubernetes-distribution">Choosing a Kubernetes Distribution</a></h2>
<p>I've deployed Kubernetes clusters in a myriad ways over the years, with all sorts of combinations of k8s|k3s|k0s using kubeadm|<a href="https://github.com/kelseyhightower/kubernetes-the-hard-way">the hard way</a>|managed(EKS &amp; Exoscale) packaged using both Docker and Hashicorp's Packer and deployed with Ansible or Terraform, or more recently <a href="https://syself.com/">syself</a>'s <a href="https://github.com/syself/cluster-api-provider-hetzner">Cluster API Provider for Hetzner</a>.</p>
<p>My conclusion at this point is that if you can afford it, both in terms of privacy/GDPR and dollarinos then <em>managed</em> is the way to go. If you can't, then you have a bit of investigative work ahead of you.</p>
<p>All of the different tools I've tried have seemed great on paper, but usually had some annoying trade-off or caveat.</p>
<p>For <a href="https://www.packer.io/">Packer</a> and <a href="https://www.terraform.io/">Terraform</a> it's state management. Building static virtual machine images for all your control plane and worker nodes sounds great in theory, but you have to put those images <em>somewhere</em>. Kubernetes clusters are also not pure idempotent structures, even if they largely aspire to be. Handling cluster bootstrapping, node joining, etc. in Terraform is borderline impossible, not because Terraform is a bad tool, but because it is so far outside the realm of what it's designed to do. Terraform is about desired state, but you can't "desire" your way into bootstrapping a distributed system unless someone has hidden all the nitty gritty details from you behind a managed service.</p>
<p>For Cluster API and its providers, the issue is more of a me-problem than a them-problem. It's a very flexible setup, which is what allows it to work across so many providers and scenarios, even ones that make no effort to provide any kind of official Kubernetes support like Hetzner, or your own desktop Raspberry Pi cluster. All aspects of the cluster itself are managed through Kubernetes and Custom Resource Definitions, which is cool in its own right, but if you dig into the sausage of the Hetzner provider, you'll realize it's a tower built on <em>bash</em>. None of this should by any means disqualify it from use, but my experience with it was one of confusion. It did everything it should, but it was at times really hard to follow <em>why</em> it was doing what it did, or how. Like I said, I'm really impressed with their work otherwise and Cluster API might be the future, so it's probably a me-problem.</p>
<p>For <a href="https://k3s.io/">k3s</a>, <a href="https://k0sproject.io/">k0s</a> and all the other minimal Kubernetes distributions the problem is <em>alignment</em>. They're able to achieve their streamlined deployment and setup stories by making a lot of difficult decisions for you, which is great as long as your values align with theirs, otherwise you have to compromise, hack or turn back.</p>
<p>Talos Linux of course suffers the same curse as k3s and k0s, taking the decision-making to the extreme and choosing even the kernel for you. Fortunately however, their choices align perfectly with my needs and values. I really like the philosophy of container-oriented distributions and have previously dabbled in <a href="https://www.flatcar.org/">Flatcar Container Linux</a>, but at least at the time I found it very difficult to get working on Hetzner's bare metal servers, although the exact reasons elude me at this time.</p>
<p>Having read through the documentation for Talos Linux, I really like their approach to node and cluster configuration. It's very similar to the way Cluster API approaches it, but by owning the underlynig Linux distribution and not relying on existing tools like kubeadm to interact with the cluster, they get to radically simplify the interface exposed to the administrator, which makes it at least <em>look</em> like a very pleasant experience.</p>
<p>Based on that very subjective feeling, my past experience, and of course a healthy dose of grass always being greener, Talos Linux is my choice for this cluster.</p>
<h2 id="installing-talos-on-a-dedicated-server"><a href="#installing-talos-on-a-dedicated-server" aria-label="Anchor link for: installing-talos-on-a-dedicated-server">Installing Talos on a Dedicated Server</a></h2>
<p>Their <a href="https://www.talos.dev/v1.4/introduction/quickstart/">Quickstart</a> and <a href="https://www.talos.dev/v1.4/introduction/getting-started/">Getting Started</a> guides can get you started with a local Docker-based cluster, or with installing it on one of the supported providers, but deploying it to a Hetzner dedicated server takes some extra steps.</p>
<p>We can't provide the dedicated server with a custom ISO to boot from, but we can boot into Hetzner's rescue system and write the Talos ISO directly to a hard drive which means that next time we reboot the server (providing no other disks have valid boot configurations and take precedence) our server will boot into an unconfigured Talos instance running in Maintenance mode. This was the script I used to install Talos v1.4.4 onto my dedicated server from the Linux rescue system:</p>
<pre data-lang="bash"><code data-lang="bash"><span># I'm intentionally picking a version that's behind by patch version so I 
</span><span># can try out the upgrade procedure once it's up and running.
</span><span>TALOS_VERSION</span><span>="</span><span>v1.4.4</span><span>"
</span><span># Keep in mind that device paths might change between reboots so either
</span><span># double-check the device path, or use one of the udev paths instead.
</span><span>TARGET_DISK</span><span>="</span><span>/dev/sda</span><span>"
</span><span>
</span><span># Download the release asset designed for (bare) metal deployments.
</span><span>wget -O</span><span> /tmp/talos.tar.gz https://github.com/siderolabs/talos/releases/download/$</span><span>TALOS_VERSION</span><span>/metal-amd64.tar.gz
</span><span># Unpack the archive 
</span><span>tar -xvf</span><span> /tmp/talos.tar.gz
</span><span># Write the raw disk image directly to the hard drive.
</span><span>dd</span><span> if=disk.raw of=$</span><span>TARGET_DISK </span><span>&amp;&amp; </span><span>sync
</span><span>shutdown -r</span><span> now
</span></code></pre>
<p>After a while the server should come back up, so let's see if it worked by using the <code>talosctl</code> command line utility to interact with the (hopefully up) talos API on the node:</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl</span><span> -n</span><span> 159.69.60.182 disks</span><span> --insecure
</span><span>error</span><span> getting disks: rpc error: code = Unavailable desc = connection error: desc = "</span><span>transport: Error while dialing: dial tcp 159.69.60.182:50000: i/o timeout</span><span>"
</span></code></pre>
<p>Curious! The server doesn't respond on the Talos API endpoint, looks like something went wrong.</p>
<p>Activating the Hetzner vKVM rescue system and forcing a hardware reset boots the server, and I can see the Talos interface. It even responds to my requests now:</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl</span><span> -n</span><span> 159.69.60.182 disks</span><span> --insecure
</span><span>DEV</span><span>        MODEL            TYPE    MODALIAS      SIZE     BUS_PATH       SYSTEM_DISK
</span><span>/dev/sda</span><span>   QEMU HARDDISK    HDD     scsi:t-0x00   2.0 TB   .../0:0:0:0/      
</span><span>/dev/sdb</span><span>   QEMU HARDDISK    HDD     scsi:t-0x00   2.0 TB   .../1:0:0:0/      
</span><span>/dev/sdc</span><span>   QEMU HARDDISK    HDD     scsi:t-0x00   256 GB   .../2:0:0:0/   *
</span></code></pre>
<p><small>output truncated to fit</small></p>
<p>I've run into problems magically being solved by Hetzner's <a href="https://docs.hetzner.com/robot/dedicated-server/virtualization/vkvm/">vKVM system</a> before, so I'm not convinced we're out of the woods yet. If we can boot the system without the vKVM system, I'll put it down to a random fluke and continue configuration.</p>
<p>After another hardware reset (without the rescue system) Talos is still responding to our requests. I'm still not sure of the cause, but let's get on with it<sup><a href="#1">1</a></sup>.</p>
<h2 id="configuring-talos"><a href="#configuring-talos" aria-label="Anchor link for: configuring-talos">Configuring Talos</a></h2>
<p>In order to build a Kubernetes cluster from Talos, you must first configure Talos. This is done in two steps, first by generating a <code>talosconfig</code> which similarly to <code>kubeconfig</code> contains the definition of a collection of Talos endpoints and credentials to access them with. With Kubernetes you generally configure the cluster first and then extract the kubeconfig, but with Talos, you instead generate the configuration first and then <em>imprint</em> it on the individual nodes.</p>
<p>Following along in the <a href="https://www.talos.dev/v1.4/introduction/getting-started/">Getting Started</a> guide we first have to decide on a cluster name and endpoint. My intention is to run this cluster purely on bare metal, so I don't want to put a load balancer in front of the cluster, although that particular configuration was worked well for me in the past. I want to get as close to a DIY setup as I can, so it can potentially be migrated or extended to on-premise at a later date. For the same reason, and because of the high cost associated with it, using vSwitch and floating IPs is off the table as well.</p>
<p>I've chosen to use DNS load balancing, since I don't expect a lot of churn in control plane/talos nodes, nor heavy load.</p>
<h2 id="cluster-name-and-endpoint"><a href="#cluster-name-and-endpoint" aria-label="Anchor link for: cluster-name-and-endpoint">Cluster Name and Endpoint</a></h2>
<p>Let's start by exporting our cluster name and endpoint for future reference. I've picked the clustername "kronform" semi-arbitrarily, and will be using it as a subdomain of one of my existing domains to access it.</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> export CLUSTER_NAME="</span><span>kronform</span><span>"
</span><span>[mpd@ish]$</span><span> export API_ENDPOINT="</span><span>https://api.kronform.pius.dev:6443</span><span>"
</span></code></pre>
<h2 id="dns"><a href="#dns" aria-label="Anchor link for: dns">DNS</a></h2>
<p>Create the DNS record pointing to our one node, so it has a chance to propagate by the time we'll need it.</p>
<p><img src="https://datavirke.dk/posts/bare-metal-kubernetes-part-1-talos-on-hetzner/dns-configuration.png" alt="DNS Configuration"></p>
<p>I've configured both IPv4 and IPv6 and set a low time-to-live, so if a node dies and has to be removed from the cluster in the future, its address should get cleared out of most DNS caches relatively quickly.</p>
<h2 id="secrets"><a href="#secrets" aria-label="Anchor link for: secrets">Secrets</a></h2>
<p>First we need to generate a secrets bundle which contains all the sensitive keys used to define our cluster:</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl gen secrets</span><span> --output-file</span><span> secrets.yaml
</span></code></pre>
<p>We'll need to keep this file safe, but won't be able commit it to git until we have a method of encrypting it.</p>
<h2 id="talosconfig"><a href="#talosconfig" aria-label="Anchor link for: talosconfig">talosconfig</a></h2>
<p>Generate the <code>talosconfig</code> based on the cluster name and endpoint specified earlier.</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl gen config  \
</span><span>    --with-secrets</span><span> secrets.yaml \
</span><span>    --output-types</span><span> talosconfig  \
</span><span>    --output</span><span> talosconfig        \
</span><span>    $</span><span>CLUSTER_NAME               </span><span>\
</span><span>    $</span><span>API_ENDPOINT
</span></code></pre>
<p>I'm not entirely sure why the API endpoint is required at this stage since it doesn't seem to figure in the generated <code>talosconfig</code> and the endpoint specified is just <code>127.0.0.1</code>. Meanwhile the provided <code>$CLUSTER_NAME</code> is used to name the context, so that at least makes sense:</p>
<pre data-lang="yaml"><code data-lang="yaml"><span>context</span><span>: </span><span>kronform
</span><span>contexts</span><span>:
</span><span>  </span><span>kronform</span><span>:
</span><span>    </span><span>endpoints</span><span>:
</span><span>    - </span><span>127.0.0.1
</span><span>    </span><span>ca</span><span>: </span><span>LS0t...
</span><span>    </span><span>crt</span><span>: </span><span>LS0t...
</span><span>    </span><span>key</span><span>: </span><span>LS0t...
</span></code></pre>
<p>Neither the <code>crt</code> or <code>ca</code> field certificate contain references to this endpoint either, and I suppose they wouldn't since it's for Kubernetes, and this relates to the Talos API.</p>
<p>Like the <code>secrets.yaml</code> file, this client configuration is also sensitive.</p>
<p>You can either copy this config file to <code>~/.talos/config</code> or use the <code>talosctl</code> merge command, which doesn't destroy any existing configurations you might have:</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl config merge ./talosconfig
</span></code></pre>
<h2 id="generate-our-first-machineconfig"><a href="#generate-our-first-machineconfig" aria-label="Anchor link for: generate-our-first-machineconfig">Generate our first MachineConfig</a></h2>
<p>Now it's finally time to generate a talos machine configuration for our very first node!</p>
<p>... But not so fast! We'll need to customize it a bit. Now we could use <code>talosctl</code> to generate a <code>controlplane.yaml</code> generic machine configuration and then modify it to fit our needs, or we could use the patch system as intended instead to generate the finished config directly.</p>
<p>I've created a couple of directories to keep track of all this:</p>
<ol>
<li><code>patches/</code> where I'll put cluster-wide patches,</li>
<li><code>nodes/</code> which will contain the per-node patch files, and finally</li>
<li><code>rendered/</code> where I'll output the finished machine configurations.</li>
</ol>
<p>First of all we'll want to enable workloads on our control plane machines. Our servers are quite beefy and since we're going to run only bare metal, we'll need <em>somewhere</em> to run the workloads.</p>
<pre data-lang="yaml"><code data-lang="yaml"><span># patches/allow-controlplane-workloads.yaml
</span><span>cluster</span><span>:
</span><span>  </span><span>allowSchedulingOnControlPlanes</span><span>: </span><span>true
</span></code></pre>
<p>Secondly since we'll want to use <a href="https://cilium.io/">Cilium</a> as our CNI, so we need to disable the default CNI and disable <code>kube-proxy</code>, since Cilium comes with its own replacement as per the Talos <a href="https://www.talos.dev/v1.4/kubernetes-guides/network/deploying-cilium/#machine-config-preparation">documentation</a>:</p>
<pre data-lang="yaml"><code data-lang="yaml"><span># patches/disable-kube-proxy-and-cni.yaml
</span><span>cluster</span><span>:
</span><span>  </span><span>network</span><span>:
</span><span>    </span><span>cni</span><span>:
</span><span>      </span><span>name</span><span>: </span><span>none
</span><span>  </span><span>proxy</span><span>:
</span><span>    </span><span>disabled</span><span>: </span><span>true
</span></code></pre>
<p>We also want to override the cluster name and DNS domain. This is completely optional, but it's nice to have:</p>
<pre data-lang="yaml"><code data-lang="yaml"><span># patches/cluster-name.yaml
</span><span>cluster</span><span>:
</span><span>  </span><span>clusterName</span><span>: </span><span>kronform.pius.dev
</span><span>  </span><span>network</span><span>:
</span><span>    </span><span>dnsDomain</span><span>: </span><span>local.kronform.pius.dev
</span></code></pre>
<p>Finally, we need to add some customizations for our one node (named n1 here):</p>
<pre data-lang="yaml"><code data-lang="yaml"><span># nodes/n1.yaml
</span><span>machine</span><span>:
</span><span>  </span><span>install</span><span>:
</span><span>    </span><span>disk</span><span>: </span><span>none
</span><span>    </span><span>diskSelector</span><span>:
</span><span>      </span><span>size</span><span>: '</span><span>&lt; 1TB</span><span>'
</span><span>    </span><span>image</span><span>: </span><span>ghcr.io/siderolabs/installer:v1.4.4
</span><span>  </span><span>network</span><span>:
</span><span>    </span><span>hostname</span><span>: </span><span>n1
</span><span>    </span><span>interfaces</span><span>:
</span><span>    - </span><span>interface</span><span>: </span><span>eth0
</span><span>      </span><span>dhcp</span><span>: </span><span>true
</span></code></pre>
<p>I'm using the size-based disk selector since both the basic device path <code>/dev/sda</code> and the device bus path are subject to change between reboots, which is not ideal since our node is designed to attempt to converge on our desired state, which in some circumstances could cause Talos to reinstall itself multiple times on multiple devices.</p>
<p>I'm also (temporarily) hard-coding the image to use Talos v1.4.4 so we can try out the upgrade procedure once it's up and running. You should omit this line (<code>image: ghcr...</code>) from your configuration, if you don't care about that.</p>
<p>With all that done, it's time to generate the actual machine config for our node<sup><a href="#2">2</a></sup>:</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl gen config \
</span><span>        --output</span><span> rendered/n1.yaml                                 \
</span><span>        --output-types</span><span> controlplane                               \
</span><span>        --dns-domain</span><span> local.$</span><span>CLUSTER_NAME                          </span><span>\
</span><span>        --with-cluster-discovery</span><span>=false                            \
</span><span>        --with-secrets</span><span> secrets.yaml                               \
</span><span>        --config-patch</span><span> @patches/cluster-name.yaml                 \
</span><span>        --config-patch</span><span> @patches/disable-kube-proxy-and-cni.yaml   \
</span><span>        --config-patch</span><span> @patches/allow-controlplane-workloads.yaml \
</span><span>        --config-patch</span><span> @nodes/n1.yaml                             \
</span><span>        $</span><span>CLUSTER_NAME                                             </span><span>\
</span><span>        $</span><span>API_ENDPOINT
</span></code></pre>
<p>Configuration can now be found in <code>nodes/n1.yaml</code></p>
<h2 id="bootstrap-the-cluster"><a href="#bootstrap-the-cluster" aria-label="Anchor link for: bootstrap-the-cluster">Bootstrap the Cluster</a></h2>
<p>Review the rendered configuration in <code>rendered/n1.yaml</code> and apply it!</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl</span><span> --nodes</span><span> 159.69.60.182 apply-config</span><span> --file</span><span> rendered/n1.yaml</span><span> --insecure
</span></code></pre>
<p>Rather anticlimactically we get absolutely no response. Luckily, we can use Talos' dashboard functionality to see what's going on:</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl</span><span> -n</span><span> 159.69.60.182 dashboard
</span><span>rpc</span><span> error: code = Unavailable desc = connection error: desc = "</span><span>transport: Error while dialing: dial tcp 127.0.0.1:50000: connect: connection refused</span><span>"
</span></code></pre>
<p>Right. Our <code>talosconfig</code> doesn't know about the endpoint, so it just put in 127.0.0.1, let's fix that.</p>
<p>In <code>~/.talos/config</code> find the <code>endpoints</code> array...</p>
<pre data-lang="yaml"><code data-lang="yaml"><span># ~/.talos/config (before)
</span><span>context</span><span>: </span><span>kronform
</span><span>contexts</span><span>:
</span><span>    </span><span>kronform</span><span>:
</span><span>        </span><span>endpoints</span><span>:
</span><span>            - </span><span>127.0.0.1
</span><span># (...)
</span></code></pre>
<p>... And replace <code>127.0.0.1</code> with our one and only node <code>159.69.60.182</code>:</p>
<pre data-lang="yaml"><code data-lang="yaml"><span># ~/.talos/config (after)
</span><span>context</span><span>: </span><span>kronform
</span><span>contexts</span><span>:
</span><span>    </span><span>kronform</span><span>:
</span><span>        </span><span>endpoints</span><span>:
</span><span>            - </span><span>159.69.60.182
</span><span># (...)
</span></code></pre>
<p>Let's try again!</p>
<p><img src="https://datavirke.dk/posts/bare-metal-kubernetes-part-1-talos-on-hetzner/talos-dashboard.png" alt="Talos Dashboard"></p>
<p>Sweet! Scrolling back up the logs a bit we can see that the configuration was applied, and the <code>STAGE</code> has changed to <code>Booting</code>, where it would previously have been <code>Maintenance</code>.</p>
<p>More recently in the logs we can see a warning indicating that <code>etcd</code> is waiting to join a cluster. This is our cue to initiate the cluster bootstrap, so let's go ahead:</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl</span><span> --nodes</span><span> 159.69.60.182 bootstrap
</span></code></pre>
<p>Watching the dashboard logs scroll by, talos will start spewing out a ton of warnings as it starts to reconcile the desired state of the newly bootstrapped cluster, bringing up services.</p>
<p>Eventually it will settle down, and the <code>READY</code> state of the node will change to <code>True</code>, and all the Kubernetes service indicators will switch to <code>Healthy</code>.</p>
<p><img src="https://datavirke.dk/posts/bare-metal-kubernetes-part-1-talos-on-hetzner/all-green.png" alt="All Green Dashboard"></p>
<p>Let's reboot the node and see if it the installation stuck, or if we've just been dilly-dallying around in memory.</p>
<p>Since we don't have SSH access to the server, we can either request a hardware reset from the Hetzner Robot interface, or we can just ask Talos to do it for us.</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl</span><span> --nodes</span><span> 159.69.60.182 reboot
</span></code></pre>
<p>This will launch a nice dynamic display of the status of the reboot, which is probably useful if you're rebooting multiple nodes.</p>
<p>The node will show as green, go red as it becomes unavailable, switch to yellow as it boots and then finally... Oh.</p>
<p>It never transitions back to green. Interesting. Talos dashboard works, and all the Kubernetes services are up, so let's extract the kubeconfig and see for ourselves.</p>
<p>The following command will create a systems administrator kubeconfig for our new cluster, merge it with our current <code>~/.kube/config</code> if one exists, and automatically set our cluster as the currently selected context.</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> talosctl</span><span> -n</span><span> 159.69.60.182 kubeconfig
</span></code></pre>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> kubectl get nodes
</span><span>NAME</span><span>   STATUS     ROLES           AGE   VERSION
</span><span>n1</span><span>     NotReady   control-plane   14m   v1.27.2
</span></code></pre>
<p>Our node <em>exists</em> so that's good, but it's <code>NotReady</code>, why?</p>
<pre data-lang="bash"><code data-lang="bash"><span>[mpd@ish]$</span><span> kubectl describe node n1 | </span><span>grep</span><span> NotReady
</span><span>  </span><span>Ready</span><span>            False   Thu, 22 Jun 2023 17:36:18 +0200   Thu, 22 Jun 2023 17:21:32 +0200   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
</span></code></pre>
<p>Duh. We haven't installed a CNI yet!</p>
<p>We'll consider the job done for now, and tackle CNI-installation in the next post: <strong><a href="https://datavirke.dk/posts/bare-metal-kubernetes-part-2-cilium-and-firewalls/">Part II: Cilium CNI &amp; Firewalls</a></strong></p>
<h2 id="epilogue"><a href="#epilogue" aria-label="Anchor link for: epilogue">Epilogue</a></h2>
<p>Here I've gathered some of my reflections and learnings from the process.</p>



	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Development of the C Language (2003) (137 pts)]]></title>
            <link>http://cm.bell-labs.co/who/dmr/chist.html</link>
            <guid>37442810</guid>
            <pubDate>Sat, 09 Sep 2023 06:33:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://cm.bell-labs.co/who/dmr/chist.html">http://cm.bell-labs.co/who/dmr/chist.html</a>, See on <a href="https://news.ycombinator.com/item?id=37442810">Hacker News</a></p>
<div id="readability-page-1" class="page">

<dl><dd><i>Dennis M. Ritchie<br>
Bell Labs/Lucent Technologies<br>
Murray Hill, NJ 07974  USA<tt>dmr@bell-labs.com</tt>
</i></dd></dl>
<dl><dd><h4>ABSTRACT</h4>
The C programming language was devised in the early 1970s as a system
implementation language for the nascent Unix operating system.
Derived from the typeless language BCPL, it evolved
a type structure;
created on a tiny machine as a tool to improve
a meager programming environment, it has become
one of the dominant languages of today.
This paper studies its evolution.
</dd></dl>
<h4>Introduction
</h4>

<dl>
<dt></dt><dt> </dt><dd>
NOTE:<i> *Copyright 1993 Association for Computing Machinery, Inc.
This electronic reprint made available by the author as a courtesy.
For further publication rights contact ACM or the author.
This article was presented at Second History of Programming
Languages conference, Cambridge, Mass., April, 1993.
<br>
It was then collected in the conference proceedings:
<i>History of Programming Languages-II</i>
ed. Thomas J. Bergin, Jr. and Richard G. Gibson, Jr.
ACM Press (New York) and Addison-Wesley (Reading, Mass), 1996;
ISBN 0-201-89502-1.
</i></dd><dt> </dt><dd></dd></dl>
<br>
This paper is about the development of the C programming language,
the influences on it,
and the conditions under which it was created.
For the sake of brevity, I omit full descriptions of C itself,
its parent B [Johnson 73] and its grandparent BCPL [Richards 79],
and instead concentrate on characteristic elements
of each language and how they evolved.
<p>
C came into being in the years 1969-1973,
in parallel with the early development
of the Unix operating system;
the most creative period occurred during 1972.
Another spate of changes peaked between 1977 and 1979,
when portability of the Unix system was being demonstrated.
In the middle of this second period, the first widely available description
of the language appeared:
<i>The C Programming Language,</i>
often called the `white book' or `K&amp;R' [Kernighan 78].
Finally, in the middle 1980s, the language was officially standardized
by the ANSI X3J11 committee, which made further changes.
Until the early 1980s, although compilers existed for a variety
of machine architectures and operating systems, the language was almost exclusively
associated with Unix;
more recently, its use has spread much more widely, and today it
is among the languages most commonly used throughout the computer industry.
</p>
<h4>History: the setting
</h4>
<p>
The late 1960s were a turbulent era
for computer systems research at Bell Telephone Laboratories
[Ritchie 78] [Ritchie 84].
The company was pulling
out of the Multics project [Organick 75], which had started as a joint venture
of MIT, General Electric, and Bell Labs; by 1969, Bell Labs management,
and even the researchers, came to believe
that the promises of Multics could be fulfilled
only too late and too expensively.  Even before the GE-645 Multics
machine was removed from the premises, an informal group, led
primarily by Ken Thompson, had begun investigating alternatives.
</p>
<p>
Thompson wanted to create a comfortable computing
environment constructed according to his own design, using whatever
means were available.  His plans, it is evident in retrospect,
incorporated many of the innovative aspects of Multics, including an
explicit notion of a process as a locus of control,
a tree-structured file system, a command interpreter
as user-level program, simple representation of text files, and generalized
access to devices.
They excluded others, such as unified access to
memory and to files.  At the start, moreover, he and the rest
of us deferred another pioneering (though not original)
element of Multics, namely writing almost exclusively in a
higher-level language.
PL/I, the implementation language of Multics, was not
much to our tastes, but we were also using other languages, including BCPL, and
we regretted losing the advantages of writing programs in a
language above the level of assembler, such as
ease of writing and clarity
of understanding.
At the time we did not put much weight
on portability; interest in this arose later.
</p>
<p>
Thompson was faced with
a hardware environment cramped and spartan even for the time:
the DEC PDP-7 on which he started in 1968 was a machine with 8K 18-bit words
of memory and no software useful to him.
While wanting to use a higher-level language,
he wrote the original Unix system in PDP-7 assembler.
At the start, he did not even program
on the PDP-7 itself, but instead used a set of macros
for the GEMAP assembler on a
GE-635 machine.
A postprocessor
generated a paper tape readable by the PDP-7.
</p>
<p>
These tapes were
carried from the GE machine to the PDP-7 for testing until a primitive Unix kernel,
an editor, an assembler, a simple shell (command interpreter), and a few utilities
(like
the Unix
<i>rm, cat, cp</i>
commands)
were completed.  After this point, the operating system was self-supporting:
programs could be written and tested without resort to paper tape,
and development continued on the PDP-7 itself.
</p>
<p>
Thompson's PDP-7 assembler outdid even DEC's in simplicity;
it evaluated expressions and emitted the corresponding bits.
There were no libraries,
no loader or link editor: the entire source of a program was presented to
the assembler, and the output file—with a fixed name—that emerged was directly
executable.
(This name,
<i>a.out</i>,
explains a bit of Unix etymology;
it is the output of the assembler.
Even after the system gained a linker
and a means of specifying another name explicitly,
it was retained as the default executable
result of a compilation.)
</p>
<p>
Not long after Unix first ran on the PDP-7, in 1969, Doug McIlroy created
the new system's first higher-level language: an implementation of
McClure's TMG [McClure 65].  TMG is a language for writing compilers
(more generally, TransMoGrifiers) in a top-down, recursive-descent
style that combines context-free syntax notation with
procedural elements.  McIlroy and Bob Morris had used TMG to write the early
PL/I compiler for Multics.
</p>
<p>
Challenged by McIlroy's feat in reproducing TMG,
Thompson decided that Unix—possibly it had not even been
named yet—needed a system programming language.
After a rapidly scuttled attempt at Fortran,
he created instead a language of his own,
which he called B.
B can be thought of
as C without types; more accurately, it is BCPL squeezed into 8K bytes of memory
and filtered through Thompson's brain.
Its name most probably represents
a contraction of BCPL, though
an alternate theory holds that
it derives from Bon [Thompson 69],
an unrelated language created by
Thompson during the Multics days.
Bon in turn was named either after his wife Bonnie,
or (according to an encyclopedia quotation in its manual),
after a religion whose rituals involve the murmuring of magic formulas.
</p>
<h4>Origins: the languages
</h4>
<p>
BCPL was
designed by Martin Richards in the mid-1960s while he was visiting MIT,
and was used during the early 1970s
for several interesting projects, among them the OS6 operating system
at Oxford [Stoy 72], and parts of the seminal Alto work at Xerox PARC [Thacker 79].
We became familiar with it
because the
MIT CTSS system [Corbato 62] on which Richards worked was used for Multics development.
The original BCPL compiler was transported both to Multics and to the GE-635
GECOS system
by Rudd Canaday
and others at Bell Labs [Canaday 69];
during the final throes of Multics's life at Bell Labs
and immediately after, it was the language of choice
among the group of people who would later become involved with Unix.
</p>
<p>
BCPL, B, and C all fit firmly in the traditional
procedural family typified by Fortran and Algol 60.
They are particularly oriented towards
system programming, are small and compactly described,
and are amenable to translation by simple compilers.  They are `close
to the machine' in that the abstractions they introduce are readily
grounded in the concrete data types and operations supplied by
conventional computers, and they rely on library routines
for input-output and other interactions with an operating system.
With less success, they also use library procedures to specify interesting
control constructs such as coroutines and procedure
closures.  At the same time, their abstractions lie at a sufficiently
high level that, with care, portability between machines can
be achieved.
</p>
<p>
BCPL, B and C differ syntactically in many details, but broadly
they are similar.
Programs consist of a sequence of
global declarations and function (procedure) declarations.
Procedures can be nested in BCPL, but may not refer to non-static
objects defined in containing procedures.
B and C avoid this restriction by imposing a more severe one:
no nested procedures at all.
Each of the languages (except for earliest versions of B)
recognizes
separate compilation, and provides a means for including
text from named files.
</p>
<p>
Several syntactic and lexical mechanisms of BCPL are
more elegant and regular than those of B and C.
For example, BCPL's procedure and data declarations
have a more uniform structure, and it supplies a more complete
set of looping constructs.
Although BCPL programs are notionally supplied from an undelimited
stream of characters, clever rules allow most semicolons to be elided
after statements that end on a line boundary.
B and C omit this convenience, and end
most statements with semicolons.
In spite of the differences, most of the statements and operators of BCPL map
directly into corresponding B and C.
</p>
<p>
Some of the structural differences between BCPL and B
stemmed from limitations on intermediate memory.
For example, BCPL declarations may take the form
</p><dl><dt></dt><dd><tt><pre>let P1 be <i>command</i>
and P2 be <i>command</i>
and P3 be <i>command</i>
 ...
</pre></tt></dd></dl>
where the program text represented by the commands
contains whole procedures.
The subdeclarations
connected by
<tt>and</tt>
occur simultaneously, so the name
<tt>P3</tt>
is known inside procedure
<tt>P1</tt>.
Similarly, BCPL can package a group of declarations and statements into
an expression that yields a value, for example
<dl><dt></dt><dd><tt><pre>E1 := valof <i>( </i><i>declarations</i><i> ; </i><i>commands</i><i> ; resultis E2 </i><i>) + 1
</i></pre></tt></dd></dl><i>
</i>The BCPL compiler readily handled such constructs
by storing and analyzing a parsed representation of the entire
program in memory before producing output.
Storage limitations on the B compiler demanded a one-pass technique in which
output was generated as soon as possible, and the syntactic
redesign that made this possible was carried forward into C.

<p>
Certain less pleasant aspects of BCPL owed to its own technological
problems and were consciously
avoided in the design of B.
For example, BCPL uses a `global vector' mechanism for communicating
between separately compiled programs.
In this scheme,
the programmer explicitly associates the name of each externally visible
procedure and data object with a numeric offset in the global
vector; the linkage is accomplished in the compiled code
by using these numeric offsets.
B evaded this inconvenience initially by insisting that the entire
program be presented all at once to the compiler.
Later implementations of B, and all those of C, use a conventional
linker to resolve external names occurring in files compiled separately,
instead of placing the burden of assigning offsets on the programmer.
</p>
<p>
Other fiddles in the transition from BCPL to B were introduced as
a matter of taste, and some remain controversial, for example the decision
to use the single character
<tt>=</tt>
for assignment instead of
<tt>:=</tt>.
Similarly, B uses
<tt>/**/</tt>
to enclose comments, where BCPL uses
<tt>//</tt>,
to ignore text up to the end of the line.
The legacy of PL/I is evident here.
(C++ has resurrected the BCPL comment convention.)
Fortran influenced the syntax
of declarations:
B declarations begin with a specifier
like
<tt>auto</tt>
or
<tt>static</tt>,
followed by a list of names, and C
not only followed this style but ornamented it by
placing its type keywords at the start of declarations.
</p>
<p>
Not every difference between the BCPL language documented in
Richards's book
[Richards 79]
and B was deliberate;
we started from an earlier version of BCPL [Richards 67].
For example, the
<tt>endcase</tt>
that escapes from a BCPL
<tt>switchon</tt>
statement was not present in the language when we learned it
in the 1960s,
and so the overloading of the
<tt>break</tt>
keyword
to escape from the B and C
<tt>switch</tt>
statement
owes to divergent
evolution rather than conscious change.
</p>
<p>
In contrast to the pervasive syntax variation that occurred
during the creation of B, the core semantic content of BCPL—its
type structure and expression evaluation rules—remained intact.
Both languages are typeless, or rather have a single data type,
the `word,' or `cell,' a fixed-length bit pattern.  Memory in these languages
consists of a linear array of such cells, and the meaning of
the contents of a cell depends on the operation applied.
The
<tt>+</tt>
operator, for example, simply adds its operands using the machine's
integer add instruction, and the other arithmetic
operations are equally unconscious of the actual meaning
of their operands.  Because memory is a linear array, it is possible
to interpret the value in a cell as an index in this array,
and BCPL supplies an operator for this purpose.  In the
original language it was spelled
<tt>rv</tt>,
and later
<tt>!</tt>,
while B uses the unary
<tt>*</tt>.
Thus, if
<tt>p</tt>
is a cell containing
the index of (or address of, or pointer to) another cell,
<tt>*p</tt>
refers to the contents of the pointed-to cell, either
as a value in an expression or as the target of
an assignment.
</p>
<p>
Because pointers in BCPL and B are merely integer indices
in the memory array, arithmetic on them is meaningful:
if
<tt>p</tt>
is the address of a cell, then
<tt>p+1</tt>
is the address of
the next cell.
This convention is the basis for the semantics
of arrays in both languages.  When in BCPL one writes
</p><dl><dt></dt><dd><tt><pre>let V = vec 10
</pre></tt></dd></dl>
or in B,
<dl><dt></dt><dd><tt><pre>auto V[10];
</pre></tt></dd></dl>
the effect is the same: a cell named
<tt>V</tt>
is allocated, then
another group of 10 contiguous cells is set aside, and the memory index
of the first of these is placed into
<tt>V</tt>.
By a general rule, in B the expression
<dl><dt></dt><dd><tt><pre>*(V+i)
</pre></tt></dd></dl>
adds
<tt>V</tt>
and
<tt>i</tt>,
and refers to the
<tt>i</tt>-th
location after
<tt>V</tt>.
Both
BCPL and B each add special notation to sweeten such array accesses;
in B an equivalent expression is
<dl><dt></dt><dd><tt><pre>V[i]
</pre></tt></dd></dl>
and in BCPL
<dl><dt></dt><dd><tt><pre>V!i
</pre></tt></dd></dl>
This approach to arrays was unusual even at the time;
C would later assimilate it in an
even less conventional way.

<p>
None of BCPL, B, or C supports character data strongly
in the language; each treats strings
much like vectors of integers and supplements general rules by
a few conventions.
In both BCPL and B a string literal denotes the address of a
static area initialized with the characters of the string,
packed into cells.
In BCPL, the first packed byte contains the number of characters
in the string;
in B, there is no count and strings are terminated by
a special character, which B spelled
`<tt>*e</tt>'.
This change was made partially to avoid the limitation
on the length of a string caused by holding the count
in an 8- or 9-bit slot, and partly because maintaining
the count seemed, in our experience, less convenient than using a
terminator.
</p>
<p>
Individual characters in a BCPL string were usually manipulated
by spreading the string out into another array, one character per cell,
and then repacking it later;
B provided corresponding routines, but people more often used
other library functions that accessed or replaced individual
characters in a string.
</p>
<h4>More History
</h4>
<p>
After the TMG version of B was working, Thompson rewrote B in itself
(a bootstrapping step).
During development, he continually struggled against memory limitations:
each language addition
inflated the compiler so it could barely fit, but each
rewrite taking advantage of the feature reduced its size.
For example, B introduced generalized assignment operators, using
<tt>x=+y</tt>
to add
<tt>y</tt>
to
<tt>x</tt>.
The notation came from
Algol 68 [Wijngaarden 75] via McIlroy, who had incorporated
it into his version of TMG.
(In B and early C, the operator was spelled
<tt>=+</tt>
instead of
<tt>+=</tt>
; this mistake, repaired in 1976, was induced by a seductively easy
way of handling the first form in B's lexical analyzer.)
</p>
<p>
Thompson went a step further by inventing the
<tt>++</tt>
and
<tt>--</tt>
operators, which increment or decrement;
their prefix
or postfix position determines whether the alteration
occurs before or after noting the value of the operand.
They were not in the earliest versions of B, but appeared
along the way.
People often guess that
they were created to use the auto-increment and
auto-decrement address modes provided by the DEC PDP-11 on which C and Unix
first became popular.
This is historically impossible, since there was no PDP-11
when B was developed.
The PDP-7, however,
did have a few `auto-increment' memory cells, with the property
that an indirect memory reference through them incremented the cell.
This feature probably suggested such operators to Thompson;
the generalization to make them both prefix and postfix
was his own.
Indeed, the auto-increment cells were not used directly in implementation of the
operators, and a stronger motivation for the innovation was probably
his observation that
the translation of
<tt>++x</tt>
was smaller than that of
<tt>x=x+1</tt>.
</p>
<p>
The B compiler on the PDP-7 did not generate machine instructions,
but instead `threaded code' [Bell 72], an interpretive scheme in which
the compiler's output consists
of a sequence of addresses of code fragments that perform the
elementary operations.
The operations typically—in particular for B—act on a simple stack machine.
</p>
<p>
On the PDP-7 Unix system, only a few things were written in B except B itself,
because the machine was too small and too slow to do more than
experiment; rewriting the operating system and the utilities
wholly into B was too expensive a step to
seem feasible.
At some point Thompson relieved the address-space crunch by offering a
`virtual B' compiler that allowed the interpreted program to occupy more than 8K bytes
by paging the code and data within the interpreter,
but it was too slow to be practical for the common utilities.
Still, some utilities written in B appeared, including an early version of
the variable-precision calculator
<i>dc</i>
familiar to Unix users [McIlroy 79].
The most ambitious enterprise I undertook was a genuine
cross-compiler that translated B to GE-635 machine instructions, not threaded code.
It was a small
<i>tour de force</i>:
a full B compiler, written in its
own language and generating code for a 36-bit mainframe,
that ran on an 18-bit machine with 4K words of user address space.
This project was possible only because of the simplicity
of the B language and its run-time system.
</p>
<p>
Although we entertained occasional thoughts
about implementing one of the major languages of the time like Fortran,
PL/I, or Algol 68, such a project seemed hopelessly large for our resources:
much simpler and smaller tools were called for.
All these languages influenced our work,
but it was more fun to do things on our own.
</p>
<p>
By 1970, the Unix project had shown enough promise that we were
able to acquire the new DEC PDP-11.
The processor was among the first of its line delivered by DEC, and three months
passed before its disk arrived.
Making B programs
run on it using the threaded technique
required only writing the code fragments for the operators,
and a simple assembler which I coded in B;
soon,
<i>dc</i>
became the first
interesting program to be tested, before any operating system, on our PDP-11.
Almost as rapidly, still waiting for the disk, Thompson recoded
the Unix kernel and some basic commands in PDP-11 assembly language.
Of the 24K bytes of memory on the machine, the earliest PDP-11 Unix system
used 12K bytes for the operating system,
a tiny space for user programs, and the remainder as a RAM disk.
This version was only for testing, not for real work;
the machine marked time by enumerating closed knight's
tours on chess boards of various sizes.
Once its disk appeared, we quickly migrated to it after
transliterating assembly-language commands to the PDP-11 dialect, and
porting those already in B.
</p>
<p>
By 1971, our miniature computer center was beginning to have users.
We all wanted to create interesting software more easily.
Using assembler was dreary enough that B, despite its performance
problems, had been supplemented by a small library of useful service routines
and was being used for more and more new programs.
Among the more notable results of this period was Steve Johnson's
first version of the
<i>yacc</i>
parser-generator [Johnson 79a].
</p>
<h4>The Problems of B
</h4>
<p>
The machines on which we first used BCPL and then B were word-addressed,
and these languages' single data type, the `cell,' comfortably
equated with the hardware machine word.
The advent of the PDP-11 exposed several inadequacies of B's semantic model.
First, its character-handling mechanisms, inherited with few changes from BCPL,
were clumsy:
using library procedures to spread packed strings into individual
cells and then repack, or to access and replace
individual characters,
began to feel awkward, even silly, on a byte-oriented machine.
</p>
<p>
Second, although the original PDP-11 did not provide for floating-point
arithmetic,
the manufacturer promised that it would soon be available.
Floating-point operations had been added to BCPL
in our Multics and GCOS compilers by defining
special operators, but the mechanism was possible
only because on the relevant machines, a single word
was large enough to contain a floating-point number;
this was not true on the 16-bit PDP-11.
</p>
<p>
Finally, the B and BCPL model implied overhead in dealing
with pointers: the language rules, by defining a pointer
as an index in an array of words, forced pointers to be represented
as word indices.
Each pointer reference
generated a run-time scale conversion from the pointer to the
byte address expected by the hardware.
</p>
<p>
For all these reasons, it seemed that a typing scheme
was necessary to cope
with characters and byte addressing, and to prepare for the
coming floating-point hardware.
Other issues, particularly type safety and interface checking, did not
seem as important then as they became later.
</p>
<p>
Aside from the problems with the language itself, the B compiler's
threaded-code technique yielded programs
so much slower than their assembly-language counterparts
that we discounted the possibility of recoding the
operating system or its central utilities in B.
</p>
<p>
In 1971 I began to extend the B language by adding a character type
and also rewrote its compiler to generate PDP-11 machine instructions
instead of threaded code.
Thus the transition from B to C
was contemporaneous with the creation of a compiler
capable of producing programs fast and small enough
to compete with assembly language.
I called the slightly-extended language NB, for `new B.'
</p>
<h4>Embryonic C
</h4>
<p>
NB existed so briefly that no full description of
it was written.
It supplied the types
<tt>int</tt>
and
<tt>char</tt>,
arrays of them, and pointers to them, declared in a style typified by
</p><dl><dt></dt><dd><tt><pre>int i, j;
char c, d;
int iarray[10];
int ipointer[];
char carray[10];
char cpointer[];
</pre></tt></dd></dl>
The semantics of arrays remained exactly as in B and BCPL:
the declarations of
<tt>iarray</tt>
and
<tt>carray</tt>
create cells dynamically initialized with a value pointing to the
first of a sequence of 10 integers and characters respectively.
The declarations for
<tt>ipointer</tt>
and
<tt>cpointer</tt>
omit the size, to assert that no storage should be allocated automatically.
Within procedures, the language's interpretation of
the pointers was identical to that of the array variables:
a pointer declaration created a cell differing from
an array declaration only in that the programmer was expected to assign
a referent, instead of letting the compiler allocate the space
and initialize the cell.

<p>
Values stored in the cells bound to
array and pointer names
were the machine addresses,
measured in bytes, of the corresponding storage area.
Therefore, indirection through a pointer implied no
run-time overhead to scale the pointer from word to byte offset.
On the other hand, the machine code for array subscripting and pointer arithmetic
now depended on the type of the array or the pointer:
to compute
<tt>iarray[i]</tt>
or
<tt>ipointer+i</tt>
implied scaling the addend
<tt>i</tt>
by the size of the object referred to.
</p>
<p>
These semantics represented an easy transition from B,
and I experimented with them for some months.
Problems became evident when I tried to extend the type notation, especially
to add structured (record) types.
Structures, it seemed, should map in an intuitive way
onto memory in the machine,
but in a
structure containing an array, there was no good place to stash the
pointer containing the base of the array, nor any
convenient way to arrange that it be initialized.
For example, the directory entries of early Unix systems
might be described in C as
</p><dl><dt></dt><dd><tt><pre>struct {
	int	inumber;
	char	name[14];
};
</pre></tt></dd></dl>
I wanted the structure not merely to characterize an abstract object
but also to describe a collection of bits that might be read from
a directory.
Where could the compiler hide the pointer to
<tt>name</tt>
that the semantics demanded?
Even if structures were thought of more abstractly,
and the space for pointers could be hidden somehow,
how could I handle the technical problem of properly initializing
these pointers when allocating a complicated object, perhaps one that specified
structures containing arrays containing structures to arbitrary depth?

<p>
The solution constituted the crucial jump
in the evolutionary chain between typeless BCPL and typed C.
It eliminated the
materialization of the pointer in storage, and instead caused the
creation of the pointer when the array name is mentioned in an expression.
The rule, which survives in today's C, is that values of array
type are converted, when they appear in expressions, into
pointers to the first of the objects making up the array.
</p>
<p>
This invention enabled most existing B code to continue
to work, despite the underlying shift in the language's semantics.
The few programs that assigned new values to
an array name to adjust its origin—possible in B and BCPL,
meaningless in C—were easily repaired.
More important, the new language retained a coherent and workable (if unusual)
explanation of the semantics of arrays, while opening the way to a
more comprehensive type structure.
</p>
<p>
The second innovation that most clearly
distinguishes C from its predecessors is
this fuller type structure and especially its expression in the syntax of declarations.
NB offered the basic types
<tt>int</tt>
and
<tt>char</tt>,
together with arrays of them, and pointers to them,
but no further ways of composition.
Generalization was required:
given an object of any type, it should
be possible to describe a new object that gathers several into an array,
yields it from a function, or is a pointer to it.
</p>
<p>
For each object of such a composed type, there
was already a way to mention the underlying object:
index the array,
call the function, use the indirection operator on the pointer.
Analogical reasoning led to a declaration syntax for names
mirroring that of the expression syntax in which the names typically appear.
Thus,
</p><dl><dt></dt><dd><tt><pre>int i, *pi, **ppi;
</pre></tt></dd></dl>
declare an integer, a pointer to an integer, a pointer to
a pointer to an integer.
The syntax of these declarations reflects the
observation that
<tt>i</tt>,
<tt>*pi</tt>,
and
<tt>**ppi</tt>
all yield an
<tt>int</tt>
type when used in an expression.  Similarly,
<dl><dt></dt><dd><tt><pre>int f(), *f(), (*f)();
</pre></tt></dd></dl>
declare a function returning an integer, a function returning
a pointer to an integer, a pointer to a function returning
an integer;
<dl><dt></dt><dd><tt><pre>int *api[10], (*pai)[10];
</pre></tt></dd></dl>
declare an array of pointers to integers, and a pointer to
an array of integers.
In all these cases the declaration of a variable resembles
its usage in an expression whose type is the one named at the head of
the declaration.

<p>
The scheme of type composition adopted by C owes considerable debt
to Algol 68, although it did not, perhaps, emerge in a form
that Algol's adherents would approve of.
The central notion I captured from Algol was a type structure
based on atomic
types (including structures), composed into arrays, pointers (references),
and functions (procedures).
Algol 68's concept of unions
and casts also had an influence that appeared later.
</p>
<p>
After creating the type system, the associated
syntax, and the compiler for the new language,
I felt that it deserved a new name;
NB seemed insufficiently distinctive.
I decided to follow the single-letter style and called it C,
leaving open the question whether the name represented
a progression through the alphabet or through the letters in BCPL.
</p>
<h4>Neonatal C
</h4>
<p>
Rapid changes continued after the language had been named,
for example
the introduction of the
<tt>&amp;&amp;</tt>
and
<tt>||</tt>
operators.
In BCPL and B, the evaluation of expressions depends
on context: within
<tt>if</tt>
and other conditional statements that compare
an expression's value with zero,
these languages place a special interpretation on the
<tt>and</tt>
(<tt>&amp;</tt>)
and
<tt>or</tt>
(<tt>|</tt>)
operators.
In ordinary contexts, they operate bitwise, but
in the B statement
</p><dl><dt></dt><dd><tt><pre>if (e1 &amp; e2) ...
</pre></tt></dd></dl>
the compiler must evaluate
<tt>e1</tt>
and if it is non-zero, evaluate
<tt>e2</tt>,
and if it too is non-zero, elaborate the statement dependent on
the
<tt>if</tt>.
The requirement descends recursively on
<tt>&amp;</tt>
and
<tt>|</tt>
operators within
<tt>e1</tt>
and
<tt>e2</tt>.
The short-circuit semantics of the Boolean operators in such
`truth-value' context seemed desirable,
but the overloading of the operators was difficult to explain and use.
At the suggestion of Alan Snyder,
I introduced the
<tt>&amp;&amp;</tt>
and
<tt>||</tt>
operators
to make the mechanism more explicit.

<p>
Their tardy introduction explains an
infelicity of C's precedence rules.  In B one writes
</p><dl><dt></dt><dd><tt><pre>if (a==b &amp; c) ...
</pre></tt></dd></dl>
to check whether
<tt>a</tt>
equals
<tt>b</tt>
and
<tt>c</tt>
is non-zero;
in such a conditional expression it is better that
<tt>&amp;</tt>
have lower precedence than
<tt>==</tt>.
In converting from B to C, one wants to replace
<tt>&amp;</tt>
by
<tt>&amp;&amp;</tt>
in such a statement;
to make the conversion less painful,
we decided to keep the precedence of the
<tt>&amp;</tt>
operator the same relative to
<tt>==</tt>,
and merely split the precedence of
<tt>&amp;&amp;</tt>
slightly from
<tt>&amp;</tt>.
Today, it seems that it would have been preferable to move
the relative precedences of
<tt>&amp;</tt>
and
<tt>==</tt>,
and thereby simplify a common C idiom:
to test a masked value
against another value, one must write
<dl><dt></dt><dd><tt><pre>if ((a&amp;mask) == b) ...
</pre></tt></dd></dl>
where the inner parentheses are required but easily forgotten.

<p>
Many other changes occurred around 1972-3, but the most important
was the introduction of the preprocessor,
partly at the urging of Alan Snyder [Snyder 74],
but also in recognition of the utility of the
the file-inclusion mechanisms available in BCPL and PL/I.
Its original version was exceedingly simple,
and provided only included files and
simple string replacements:
<tt>#include</tt>
and
<tt>#define</tt>
of parameterless macros.
Soon thereafter, it was extended, mostly by Mike Lesk
and then by John Reiser,
to incorporate macros with arguments and conditional
compilation.
The preprocessor was originally considered an optional adjunct
to the language itself.  Indeed, for some years,
it was not even invoked unless the source program contained
a special signal at its beginning.
This attitude persisted, and explains
both the incomplete integration of the syntax of the
preprocessor with the rest of the language
and the imprecision of its description in early reference
manuals.
</p>
<h4>Portability
</h4>
<p>
By early 1973, the essentials of
modern C were complete.
The language and compiler were strong enough to permit us to
rewrite the Unix kernel for the PDP-11 in C during the summer of that year.
(Thompson had made a brief attempt to produce a system coded in an early version of
C—before structures—in 1972, but gave up the effort.)
Also during this period, the compiler was retargeted to other nearby machines,
particularly the Honeywell 635 and IBM 360/370;
because the language could not live in isolation,
the prototypes for the modern libraries
were developed.
In particular, Lesk wrote a `portable I/O package' [Lesk 72]
that was later reworked to become the C `standard I/O' routines.
In 1978 Brian Kernighan and I published
<i>The C Programming Language</i>
[Kernighan 78].
Although it did not describe some additions
that soon became common, this book served as the language
reference until a formal standard was adopted more than
ten years later.
Although we worked closely together on this book, there was a clear division of labor:
Kernighan wrote almost all the expository material, while
I was responsible for the appendix containing the reference manual and
the chapter on interfacing with the Unix system.
</p>
<p>
During 1973-1980,
the language grew a bit:
the type structure gained unsigned, long, union, and enumeration types,
and structures became nearly first-class objects
(lacking only a notation for literals).
Equally important developments appeared in its environment and the accompanying
technology.
Writing the Unix kernel in C had given us enough confidence in the language's
usefulness and efficiency that we began to recode the
system's utilities and tools as well,
and then to move the most interesting among them to the other
platforms.
As described in [Johnson 78a], we discovered that the hardest problems
in propagating Unix tools lay not in the
interaction of the C language with new hardware,
but in adapting to the existing software of other
operating systems.
Thus Steve Johnson began to work on
<i>pcc</i>,
a C compiler intended to be easy to retarget to new machines [Johnson 78b],
while he, Thompson, and I began to move the Unix system itself to
the Interdata 8/32 computer.
</p>
<p>
The language changes during this period, especially around 1977,
were largely focused on considerations of portability and type safety,
in an effort to cope with the problems we foresaw and observed
in moving a considerable body of code to the new Interdata
platform.
C at that time still manifested strong signs of its typeless
origins.
Pointers, for example, were barely distinguished from
integral memory indices in early language manuals or extant code;
the similarity of the arithmetic properties of
character pointers and unsigned integers made it hard
to resist the temptation to identify them.
The
<tt>unsigned</tt>
types were added to make unsigned arithmetic available
without confusing it with pointer manipulation.
Similarly, the early language condoned assignments between
integers and pointers, but this practice began to be discouraged;
a notation for type conversions (called `casts' from the example of Algol 68)
was invented to specify type conversions more explicitly.
Beguiled by the example of PL/I, early C
did not tie structure pointers firmly to the structures
they pointed to, and permitted programmers to write
<tt>pointer-&gt;member</tt>
almost without regard to the type of
<tt>pointer</tt>;
such an expression was taken uncritically as a reference
to a region of memory designated by the pointer, while the member
name specified only an offset and a type.
</p>
<p>
Although the first edition of K&amp;R described most of the
rules that brought C's type structure to its present form,
many programs written in the older, more relaxed style
persisted, and so did compilers that tolerated it.
To encourage people to pay more attention to the
official language rules, to detect legal but suspicious constructions,
and to help find interface mismatches
undetectable with simple mechanisms for separate compilation,
Steve Johnson adapted his
<i>pcc</i>
compiler to produce
<i>lint</i>
[Johnson 79b],
which scanned a set of files and remarked on dubious constructions.
</p>
<h4>Growth in Usage
</h4>
<p>
The success of our portability experiment on the
Interdata 8/32 soon led to another by Tom London and John Reiser
on the DEC VAX 11/780.
This machine became much more popular than the Interdata, and
Unix and the C language began to spread rapidly, both within AT&amp;T and
outside.
Although by the middle 1970s
Unix was in use by
a variety of projects within the Bell System
as well as a small group of research-oriented
industrial, academic, and government organizations outside our company,
its real growth began only after portability had been achieved.
Of particular note were the System III and System V
versions of the system from the emerging Computer Systems division of AT&amp;T, based
on work by the company's development and research groups,
and the BSD series of releases by the University
of California at Berkeley that derived from research
organizations in Bell Laboratories.
</p>
<p>
During the 1980s the use of the C language spread widely,
and compilers became available on nearly every machine architecture
and operating system; in particular it became popular as a
programming tool for personal computers, both for manufacturers
of commercial software for these machines, and for end-users
interested in programming.
At the start of the decade, nearly every compiler was based on Johnson's
<i>pcc</i>;
by 1985 there were many independently-produced compiler products.
</p>
<h4>Standardization
</h4>
<p>
By 1982 it was clear that C needed formal standardization.
The best approximation to a standard,
the first edition of K&amp;R, no longer described the language in actual use;
in particular, it mentioned neither the
<tt>void</tt>
or
<tt>enum</tt>
types.
While it foreshadowed the newer approach to structures, only after
it was published did the language support assigning them, passing them
to and from functions, and associating the names of members firmly
with the structure or union containing them.
Although compilers distributed by AT&amp;T incorporated these changes,
and most of the purveyors of compilers not based on
<i>pcc</i>
quickly picked up them up, there remained no complete, authoritative
description of the language.
</p>
<p>
The first edition of K&amp;R was also insufficiently precise on many details
of the language, and it became increasingly impractical to regard
<i>pcc</i>
as a `reference compiler;'
it did not perfectly
embody even the language described by K&amp;R, let alone subsequent extensions.
Finally, the incipient use of C in projects subject to commercial
and government contract meant that the imprimatur of an official
standard was important.
Thus (at the urging of M. D. McIlroy), ANSI established the X3J11
committee under the direction of CBEMA
in the summer of 1983, with the goal of producing
a C standard.
X3J11 produced its report [ANSI 89] at the end of 1989,
and subsequently this standard was accepted by ISO as
ISO/IEC 9899-1990.
</p>
<p>
From the beginning, the X3J11 committee took a cautious,
conservative view of language extensions.
Much to my
satisfaction, they took seriously their goal:
`to develop a clear, consistent, and unambiguous Standard
for the C programming language which codifies the common,
existing definition of C and which promotes the portability
of user programs across C language environments.' [ANSI 89]
The committee realized that mere promulgation of a standard
does not make the world change.
</p>
<p>
X3J11 introduced only one genuinely important change to the language itself:
it incorporated the types of formal arguments in the type
signature of a function, using syntax borrowed from C++ [Stroustrup 86].
In the old style, external functions were declared like this:
</p><dl><dt></dt><dd><tt><pre>double sin();
</pre></tt></dd></dl>
which says only that
<tt>sin</tt>
is a function returning a
<tt>double</tt>
(that is, double-precision floating-point) value.
In the new style, this better rendered
<dl><dt></dt><dd><tt><pre>double sin(double);
</pre></tt></dd></dl>
to make the argument type explicit
and thus encourage better type checking and appropriate conversion.
Even this addition, though it produced a noticeably better language,
caused difficulties.
The committee justifiably felt that simply outlawing
`old-style' function definitions and declarations was not
feasible, yet also agreed that the new forms were better.
The inevitable compromise was as good as it
could have been, though the language definition is complicated by
permitting both forms, and writers of portable software must contend
with compilers not yet brought up to standard.

<p>
X3J11 also introduced
a host of smaller additions and adjustments, for example,
the type qualifiers
<tt>const</tt>
and
<tt>volatile</tt>,
and slightly different type promotion rules.
Nevertheless, the standardization process did not change the character
of the language.
In particular, the C standard did not attempt to specify formally
the language semantics, and so there can be dispute over fine points;
nevertheless, it successfully accounted for changes in
usage since the original description, and is sufficiently precise to
base implementations on it.
</p>
<p>
Thus the core C language escaped nearly unscathed from the
standardization process, and the Standard emerged more
as a better, careful codification than a new invention.
More important changes took place in the language's surroundings:
the preprocessor and the library.
The preprocessor performs macro substitution, using conventions
distinct from the rest of the language.
Its
interaction with the compiler had never
been well-described, and X3J11 attempted to remedy the
situation.
The result is noticeably better than the explanation in the first edition of K&amp;R;
besides being more comprehensive, it provides
operations, like token concatenation, previously available
only by accidents of implementation.
</p>
<p>
X3J11 correctly believed that a full and careful
description of a standard C library was as important as its
work on the language itself.
The C language itself does not provide for input-output
or any other interaction with the outside world, and thus
depends on a set of standard procedures.
At the time of publication of K&amp;R, C was thought of mainly
as the system programming language of Unix; although we
provided examples of library routines intended to be readily transportable
to other operating systems, underlying support from Unix was implicitly
understood.
Thus, the X3J11 committee spent much of its time designing
and documenting a set
of library routines required to be available in all
conforming implementations.
</p>
<p>
By the rules of the standards process, the current activity of the X3J11
committee is confined to issuing interpretations on the existing
standard.
However, an informal group originally convened by Rex Jaeschke
as NCEG (Numerical C Extensions Group) has been officially accepted
as subgroup X3J11.1,
and they continue to consider extensions to C.
As the name implies, many of these possible extensions are intended to make the language
more suitable for numerical use: for example, multi-dimensional arrays
whose bounds are dynamically determined, incorporation of facilities
for dealing with IEEE arithmetic, and making the language more effective on machines
with vector or other advanced architectural features.
Not all the possible extensions are specifically numerical; they
include a notation for structure literals.
</p>
<h4>Successors
</h4>
<p>
C and even B have several direct descendants, though they
do not rival Pascal in generating progeny.
One side branch developed early.
When Steve Johnson visited the University of Waterloo on sabbatical
in 1972,
he brought B with him.  It became popular
on the Honeywell machines there, and later spawned Eh and Zed
(the Canadian answers to `what follows B?').
When Johnson returned to Bell Labs in 1973, he was disconcerted to
find that the language whose seeds he brought to Canada
had evolved back home;
even his own
<i>yacc</i>
program had been rewritten in C, by Alan Snyder.
</p>
<p>
More recent descendants of C proper include Concurrent C [Gehani 89],
Objective C [Cox 86], C* [Thinking 90],
and especially C++ [Stroustrup 86].
The language is also widely used as an intermediate
representation (essentially, as a portable assembly language)
for a wide variety of compilers, both for direct descendents
like C++, and independent languages like
Modula 3 [Nelson 91] and
Eiffel
[Meyer 88].
</p>
<h4>Critique
</h4>
<p>
Two ideas are most characteristic of C among languages of its class:
the relationship between arrays and pointers,
and the way in which declaration syntax mimics expression syntax.
They are also among its most frequently criticized features,
and often serve as stumbling blocks to the beginner.
In both cases, historical accidents or mistakes have exacerbated
their difficulty.
The most important of these has been the tolerance of C compilers
to errors in type.
As should be clear from the history above, C evolved from typeless
languages.
It did not suddenly appear to its earliest
users and developers as an entirely new language with its own rules;
instead we continually had to adapt existing programs as the
language developed, and make allowance for an existing body
of code.  (Later, the ANSI X3J11 committee standardizing C would
face the same problem.)
</p>
<p>
Compilers in 1977, and even well after,
did not complain about usages such as assigning between integers
and pointers or using objects of the wrong type to refer
to structure members.
Although the language definition presented in the first edition of K&amp;R
was reasonably (though not completely) coherent in its treatment of type rules,
that book admitted that existing compilers didn't enforce them.
Moreover, some rules designed to ease early transitions
contributed to later confusion.
For example, the empty square brackets in the function declaration
</p><dl><dt></dt><dd><tt><pre>int f(a) int a[]; { ... }
</pre></tt></dd></dl>
are a living fossil, a remnant of NB's way of declaring a pointer;
<tt>a</tt>
is, in this special case only, interpreted in C as a pointer.
The notation survived in part for the sake of
compatibility, in part under the rationalization
that it would allow programmers
to communicate to their readers
an intent to pass
<tt>f</tt>
a pointer generated from an array, rather than a reference to a single
integer.
Unfortunately, it serves as much to confuse the learner
as to alert the reader.

<p>
In K&amp;R C, supplying arguments of the proper type to a function call
was the responsibility of the programmer, and the extant compilers
did not check for type agreement.
The failure of the original language to include argument types
in the type signature of a function
was a significant weakness,
indeed the one that required the X3J11 committee's boldest and most painful
innovation to repair.
The early design is explained (if not justified) by my avoidance of technological
problems, especially cross-checking between separately-compiled source files,
and my incomplete assimilation of the implications of moving between
an untyped to a typed language.
The
<i>lint</i>
program,
mentioned above,
tried to alleviate the problem:
among its other functions,
<i>lint</i>
checks the consistency and coherency of a whole program by scanning a set
of source files,
comparing the types of function arguments used in calls with those
in their definitions.
</p>
<p>
An accident of syntax contributed to the perceived complexity of the language.
The indirection operator, spelled
<tt>*</tt>
in C, is syntactically a unary prefix operator, just as in BCPL and B.
This works well in simple expressions, but in more complex cases,
parentheses are required to direct the parsing.
For example, to distinguish indirection through the value
returned by a function from calling a function designated by
a pointer, one writes
<tt>*fp()</tt>
and
<tt>(*pf)()</tt>
respectively.
The style used in expressions carries through to declarations, so the names might be
declared
</p><dl><dt></dt><dd><tt><pre>int *fp();
int (*pf)();
</pre></tt></dd></dl>
In more ornate but still realistic cases, things become worse:
<dl><dt></dt><dd><tt><pre>int *(*pfp)();
</pre></tt></dd></dl>
is a pointer to a function returning a pointer to an integer.
There are two effects occurring.
Most important, C has a relatively rich set of ways of
describing types (compared, say, with Pascal).
Declarations in languages
as expressive as C—Algol 68, for example—describe objects equally hard
to understand, simply because the objects themselves are complex.
A second effect owes to details of the syntax.
Declarations in C must be read
in an `inside-out' style that many find
difficult to grasp [Anderson 80].
Sethi [Sethi 81] observed that many of the nested declarations
and expressions would become simpler
if the indirection operator had been taken as a postfix operator
instead of prefix, but by then it was too late to change.

<p>
In spite of its difficulties,
I believe that the C's approach to declarations remains plausible,
and am comfortable with it; it is a useful unifying principle.
</p>
<p>
The other characteristic feature of C, its treatment of arrays,
is more suspect on practical grounds, though it also has
real virtues.
Although the relationship between pointers and arrays
is unusual, it can be learned.
Moreover, the language shows considerable power to describe important
concepts, for example, vectors whose length varies at run time,
with only a few basic rules and conventions.
In particular, character strings are handled by the same mechanisms
as any other array, plus the convention that a null character
terminates a string.
It is interesting to compare C's approach with that of two
nearly contemporaneous languages, Algol 68 and Pascal [Jensen 74].
Arrays in Algol 68 either have fixed bounds, or are `flexible:'
considerable mechanism is required both in the language
definition, and in compilers, to accommodate flexible arrays
(and not all compilers fully implement them.)
Original Pascal had only fixed-sized arrays and strings,
and this proved confining [Kernighan 81].
Later, this was partially fixed, though the resulting
language is not yet universally available.
</p>
<p>
C treats strings as arrays of characters
conventionally terminated by a marker.
Aside from one special rule about initialization by string literals,
the semantics of strings are fully subsumed by more general
rules governing all arrays, and
as a result the language is simpler to describe and
to translate than one incorporating the string as a unique
data type.
Some costs accrue from its approach:
certain string operations are more expensive than in other designs
because application code or
a library routine must occasionally search for the end of a string,
because few built-in operations are available, and because
the burden of storage management for strings falls more
heavily on the user.
Nevertheless, C's approach to strings works well.
</p>
<p>
On the other hand, C's treatment of arrays in general (not just strings)
has unfortunate implications both for optimization
and for future extensions.
The prevalence of pointers in C programs, whether those declared
explicitly or arising from arrays, means that
optimizers must be cautious, and must use careful dataflow techniques
to achieve good results.
Sophisticated compilers can understand what most pointers
can possibly change, but some important usages remain difficult
to analyze.
For example, functions with pointer arguments derived from
arrays are hard to compile into efficient code on
vector machines, because it is seldom possible to determine
that one argument pointer does not overlap data also
referred to by another argument, or accessible externally.
More fundamentally, the definition of C so specifically describes
the semantics of arrays that
changes or extensions treating arrays as more
primitive objects, and permitting operations on them as wholes,
become hard to fit into the existing language.
Even extensions to permit the declaration and use of multidimensional arrays whose
size is determined dynamically are not entirely straightforward [MacDonald 89]
[Ritchie 90],
although they would make it much easier to write numerical
libraries in C.
Thus, C covers the most important uses of strings and arrays
arising in practice by a uniform and simple mechanism,
but leaves problems for highly efficient implementations and for extensions.
</p>
<p>
Many smaller infelicities exist in the language
and its description
besides those discussed above, of course.
There are also
general criticisms to be lodged that transcend detailed points.
Chief among these is that the language and its generally-expected
environment provide little help for writing very large systems.
The naming structure provides only two main levels,
`external' (visible everywhere) and `internal' (within
a single procedure).
An intermediate level
of visibility (within a single file of data and procedures)
is weakly tied to the language definition.
Thus, there is little direct support for modularization,
and project designers are forced to create their own conventions.
</p>
<p>
Similarly, C itself provides two durations of storage:
`automatic' objects that exist while control resides in or below
a procedure, and `static,' existing throughout execution of a program.
Off-stack, dynamically-allocated storage is provided only
by a library routine and
the burden of managing it is placed on
the programmer: C is hostile to automatic garbage collection.
</p>
<h4>Whence Success?
</h4>
<p>
C has become successful to an extent far surpassing any early
expectations.  What qualities contributed to its widespread use?
</p>
<p>
Doubtless the success of Unix itself was the most important factor;
it made the language available to hundreds of thousands of people.
Conversely, of course, Unix's use of C and its consequent
portability to a wide variety of machines
was important in the system's success.
But the language's invasion of other environments suggests more
fundamental merits.
</p>
<p>
Despite some aspects mysterious to the beginner and
occasionally even to the adept,
C remains a simple and small language, translatable with simple and small compilers.
Its types and operations are
well-grounded in those provided by
real machines, and for
people used to how computers work,
learning the idioms for generating time- and space-efficient programs
is not difficult.
At the same time the language is sufficiently abstracted from machine
details that program portability can be achieved.
</p>
<p>
Equally important, C and its central library support always
remained in touch with a real environment.
It was not designed in isolation to prove a point, or to serve
as an example, but as a tool to write programs that did
useful things; it was always meant to interact with a larger
operating system, and was regarded as a
tool to build larger tools.
A parsimonious, pragmatic approach influenced the things that went into C:
it covers
the essential needs of many programmers,
but does not try to supply too much.
</p>
<p>
Finally, despite the changes that it has undergone since its first
published description, which was admittedly informal
and incomplete, the actual C language as seen by millions of users
using many different compilers has remained remarkably stable
and unified compared to those of similarly widespread currency,
for example Pascal and Fortran.
There are differing dialects of C—most noticeably, those described by
the older K&amp;R and the newer Standard C—but on the whole, C has remained
freer of proprietary extensions than other languages.
Perhaps the most significant extensions are the `far' and `near'
pointer qualifications intended to deal with peculiarities
of some Intel processors.
Although C was not originally designed with portability
as a prime goal, it succeeded in expressing
programs, even including operating systems,
on machines ranging from the smallest personal
computers through the mightiest supercomputers.
</p>
<p>
C is quirky, flawed, and an enormous success.
While accidents of history surely helped,
it evidently satisfied a need for a system implementation language
efficient enough
to displace assembly language, yet sufficiently abstract and fluent to
describe algorithms and interactions in a wide variety of environments.
</p>
<h4>Acknowledgments
</h4>
<p>
It is worth summarizing compactly the roles of the direct contributors to today's
C language.
Ken Thompson created the B language in 1969-70; it was derived directly
from Martin Richards's BCPL.
Dennis Ritchie turned B into C during 1971-73, keeping most of B's syntax
while adding types and many other changes, and writing the
first compiler.
Ritchie, Alan Snyder, Steven C. Johnson, Michael Lesk, and Thompson contributed language
ideas during 1972-1977,
and Johnson's portable compiler remains widely used.
During this period, the collection of library routines grew
considerably, thanks to these people and many others at Bell Laboratories.
In 1978, Brian Kernighan and Ritchie wrote the book that
became the language definition for several years.
Beginning in 1983, the ANSI X3J11 committee standardized
the language.  Especially notable in keeping its
efforts on track were its officers
Jim Brodie, Tom Plum, and  P. J. Plauger, and the successive draft redactors,
Larry Rosler and Dave Prosser.
</p>
<p>
I thank Brian Kernighan, Doug McIlroy, Dave Prosser, Peter
Nelson, Rob Pike, Ken Thompson, and HOPL's referees
for advice in the preparation of this paper.
</p>
<h4>References
</h4>
<dl compact="">
<dt>[ANSI 89]</dt><dd>
American National Standards Institute,
<i>American National Standard for Information Systems—Programming Language C,</i>
X3.159-1989.
</dd><dt>[Anderson 80]</dt><dd>
B. Anderson,
`Type syntax in the language C: an object lesson in syntactic innovation,'
SIGPLAN Notices
<b>15</b>
(3), March, 1980, pp. 21-27.
</dd><dt>[Bell 72]</dt><dd>
J. R. Bell, `Threaded Code,' C. ACM
<b>16</b>
(6), pp. 370-372.
</dd><dt>[Canaday 69]</dt><dd>
R. H. Canaday and D. M. Ritchie,
`Bell Laboratories BCPL,'
AT&amp;T Bell Laboratories internal memorandum, May, 1969.
</dd><dt>[Corbato 62]</dt><dd>
F. J. Corbato, M. Merwin-Dagget, R. C. Daley,
`An Experimental Time-sharing System,' AFIPS Conf. Proc. SJCC,
1962, pp. 335-344.
</dd><dt>[Cox 86]</dt><dd>
B. J. Cox and A. J. Novobilski,
<i>Object-Oriented Programming: An Evolutionary Approach,</i>
Addison-Wesley: Reading, Mass., 1986. Second edition, 1991.
</dd><dt>[Gehani 89]</dt><dd>
N. H. Gehani and W. D. Roome,
<i>Concurrent C,</i>
Silicon Press: Summit, NJ, 1989.
</dd><dt>[Jensen 74]</dt><dd>
K. Jensen and N. Wirth,
<i>Pascal User Manual and Report,</i>
Springer-Verlag: New York, Heidelberg, Berlin.  Second Edition, 1974.
</dd><dt>[Johnson 73]</dt><dd>
S. C. Johnson and B. W. Kernighan, `The Programming Language B,'
Comp. Sci. Tech. Report #8, AT&amp;T Bell Laboratories (January 1973).
</dd><dt>[Johnson 78a]</dt><dd>
S. C. Johnson and D. M. Ritchie,
`Portability of C Programs and the UNIX System,'
Bell Sys. Tech. J.
<b>57</b>
(6) (part 2), July-Aug, 1978.
</dd><dt>[Johnson 78b]</dt><dd>
S. C. Johnson,
`A Portable Compiler: Theory and Practice,'
Proc. 5th ACM POPL Symposium (January 1978).
</dd><dt>[Johnson 79a]</dt><dd>
S. C. Johnson, `Yet another compiler-compiler,' in
<i>Unix Programmer's Manual,</i>
Seventh Edition, Vol. 2A, M. D. McIlroy and B. W. Kernighan, eds.
AT&amp;T Bell Laboratories: Murray Hill, NJ, 1979.
</dd><dt>[Johnson 79b]</dt><dd>
S. C. Johnson, `Lint, a Program Checker,' in
<i>Unix Programmer's Manual,</i>
Seventh Edition, Vol. 2B, M. D. McIlroy and B. W. Kernighan, eds.
AT&amp;T Bell Laboratories: Murray Hill, NJ, 1979.
</dd><dt>[Kernighan 78]</dt><dd>
B. W. Kernighan and D. M. Ritchie,
<i>The C Programming Language,</i>
Prentice-Hall: Englewood Cliffs, NJ, 1978.
Second edition, 1988.
</dd><dt>[Kernighan 81]</dt><dd>
B. W. Kernighan,
`Why Pascal is not my favorite programming language,'
Comp. Sci. Tech. Rep. #100, AT&amp;T Bell Laboratories, 1981.
</dd><dt>[Lesk 73]</dt><dd>
M. E. Lesk, `A Portable I/O Package,'
AT&amp;T Bell Laboratories internal memorandum ca. 1973.
</dd><dt>[MacDonald 89]</dt><dd>
T. MacDonald,
`Arrays of variable length,'
J. C Lang. Trans
<b>1</b>
(3), Dec. 1989, pp. 215-233.
</dd><dt>[McClure 65]</dt><dd>
R. M. McClure, `TMG—A Syntax Directed Compiler,'
Proc. 20th ACM National Conf. (1965), pp. 262-274.
</dd><dt>[McIlroy 60]</dt><dd>
M. D. McIlroy, `Macro Instruction Extensions of Compiler Languages,'
C. ACM
<b>3</b>
(4), pp. 214-220.
</dd><dt>[McIlroy 79]</dt><dd>
M. D. McIlroy and B. W. Kernighan, eds,
<i>Unix Programmer's Manual,</i>
Seventh Edition, Vol. I,
AT&amp;T Bell Laboratories: Murray Hill, NJ, 1979.
</dd><dt>[Meyer 88]</dt><dd>
B. Meyer,
<i>Object-oriented Software Construction,</i>
Prentice-Hall: Englewood Cliffs, NJ, 1988.
</dd><dt>[Nelson 91]</dt><dd>
G. Nelson,
<i> Systems Programming with Modula-3,</i>
Prentice-Hall: Englewood Cliffs, NJ, 1991.
</dd><dt>[Organick 75]</dt><dd>
E. I. Organick,
<i>The Multics System: An Examination of its Structure,</i>
MIT Press: Cambridge, Mass., 1975.
</dd><dt>[Richards 67]</dt><dd>
M. Richards, `The BCPL Reference Manual,'
MIT Project MAC Memorandum M-352, July 1967.
</dd><dt>[Richards 79]</dt><dd>
M. Richards and C. Whitbey-Strevens,
<i>BCPL: The Language and its Compiler,</i>
Cambridge Univ. Press: Cambridge, 1979.
</dd><dt>[Ritchie 78]</dt><dd>
D. M. Ritchie, `UNIX: A Retrospective,' Bell Sys. Tech. J.
<b>57</b>
(6) (part 2), July-Aug, 1978.
</dd><dt>[Ritchie 84]</dt><dd>
D. M. Ritchie, `The Evolution of the UNIX Time-sharing System,'
AT&amp;T Bell Labs. Tech. J.
<b>63</b>
(8) (part 2), Oct. 1984.
</dd><dt>[Ritchie 90]</dt><dd>
D. M. Ritchie,
`Variable-size arrays in C,'
J. C Lang. Trans.
<b>2</b>
(2), Sept. 1990, pp. 81-86.
</dd><dt>[Sethi 81]</dt><dd>
R. Sethi,
`Uniform syntax for type expressions and declarators,'
Softw. Prac. and Exp.
<b>11</b>
(6), June 1981, pp. 623-628.
</dd><dt>[Snyder 74]</dt><dd>
A. Snyder,
<i>A Portable Compiler for the Language C,</i>
MIT: Cambridge, Mass., 1974.
</dd><dt>[Stoy 72]</dt><dd>
J. E. Stoy and C. Strachey, `OS6—An experimental operating
system for a small computer. Part I: General principles and structure,'
Comp J.
<b>15</b>,
(Aug. 1972), pp. 117-124.
</dd><dt>[Stroustrup 86]</dt><dd>
B. Stroustrup,
<i>The C++ Programming Language,</i>
Addison-Wesley: Reading, Mass., 1986.
Second edition, 1991.
</dd><dt>[Thacker 79]</dt><dd>
C. P. Thacker, E. M. McCreight, B. W. Lampson, R. F. Sproull,
D. R. Boggs, `Alto: A Personal Computer,' in
<i>Computer Structures: Principles and Examples,</i>
D. Sieworek, C. G. Bell, A. Newell,
McGraw-Hill: New York, 1982.
</dd><dt>[Thinking 90]</dt><dd>
<i>C* Programming Guide,</i>
Thinking Machines Corp.: Cambridge Mass., 1990.
</dd><dt>[Thompson 69]</dt><dd>
K. Thompson, `Bon—an Interactive Language,' undated AT&amp;T Bell Laboratories
internal memorandum (ca. 1969).
</dd><dt>[Wijngaarden 75]</dt><dd>
A. van Wijngaarden, B. J. Mailloux, J. E. Peck, C. H. Koster, M. Sintzoff,
C. Lindsey, L. G. Meertens, R. G. Fisker, `Revised report on the algorithmic
language Algol 68,'  Acta Informatica
<b>5</b>,
pp. 1-236.
</dd></dl>
<p> 
<a href="http://www.lucent.com/copyright.html">
Copyright</a> © 2003 Lucent Technologies Inc.  All rights reserved.

</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Advanced NLP with SpaCy (104 pts)]]></title>
            <link>https://course.spacy.io/en/</link>
            <guid>37442574</guid>
            <pubDate>Sat, 09 Sep 2023 05:36:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://course.spacy.io/en/">https://course.spacy.io/en/</a>, See on <a href="https://news.ycombinator.com/item?id=37442574">Hacker News</a></p>
<div id="readability-page-1" class="page"><div tabindex="-1" id="___gatsby"><main><div><svg aria-label="Advanced NLP with spaCy" viewBox="0 0 1540 550" width="300" height="107"><use xlink:href="#en"></use></svg><section><h2><a href="https://course.spacy.io/en/chapter1">Chapter 1: Finding words, phrases, names and concepts</a></h2><p><a href="https://course.spacy.io/en/chapter1">This chapter will introduce you to the basics of text processing with spaCy. You'll learn about the data structures, how to work with trained pipelines, and how to use them to predict linguistic features in your text.</a></p></section><section><h2><a href="https://course.spacy.io/en/chapter2">Chapter 2: Large-scale data analysis with spaCy</a></h2><p><a href="https://course.spacy.io/en/chapter2">In this chapter, you'll use your new skills to extract specific information from large volumes of text. You'll learn how to make the most of spaCy's data structures, and how to effectively combine statistical and rule-based approaches for text analysis.</a></p></section><section><h2><a href="https://course.spacy.io/en/chapter3">Chapter 3: Processing Pipelines</a></h2><p><a href="https://course.spacy.io/en/chapter3">This chapter will show you everything you need to know about spaCy's processing pipeline. You'll learn what goes on under the hood when you process a text, how to write your own components and add them to the pipeline, and how to use custom attributes to add your own metadata to the documents, spans and tokens.</a></p></section><section><h2><a href="https://course.spacy.io/en/chapter4">Chapter 4: Training a neural network model</a></h2><p><a href="https://course.spacy.io/en/chapter4">In this chapter, you'll learn how to update spaCy's statistical models to customize them for your use case – for example, to predict a new entity type in online comments. You'll train your own model from scratch, and understand the basics of how training works, along with tips and tricks that can make your custom NLP projects more successful.</a></p></section></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Julia and Mojo Mandelbrot Benchmark (177 pts)]]></title>
            <link>https://discourse.julialang.org/t/julia-mojo-mandelbrot-benchmark/103638</link>
            <guid>37442064</guid>
            <pubDate>Sat, 09 Sep 2023 03:42:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://discourse.julialang.org/t/julia-mojo-mandelbrot-benchmark/103638">https://discourse.julialang.org/t/julia-mojo-mandelbrot-benchmark/103638</a>, See on <a href="https://news.ycombinator.com/item?id=37442064">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
              <p>For those of you who aren’t aware, the Mojo SDK was recently released, so I thought I would take the opportunity to start benchmarking some Julia code against Mojo. As a first test, I am calculating the Mandelbrot set using the <a href="https://docs.modular.com/mojo/notebooks/Mandelbrot.html" rel="noopener nofollow ugc">code provided by Modular</a>.</p>
<p>This is my Julia implementation:</p>
<pre data-code-wrap="jl"><code>using Plots 

const xn = 960
const yn = 960
const xmin = -2.0
const xmax = 0.6
const ymin = -1.5
const ymax = 1.5
const MAX_ITERS = 200

function mandelbrot_kernel(c)
    z = c
    for i = 1:MAX_ITERS
        z = z * z + c
        if abs2(z) &gt; 4
            return i
        end
    end
    return MAX_ITERS
end


function compute_mandelbrot()
    result = zeros(yn, xn)

    x_range = range(xmin, xmax, xn)
    y_range = range(ymin, ymax, xn)

    Threads.@threads for j = 1:yn
        for i = 1:xn
            x = x_range[i]
            y = y_range[j]
            result[j, i] = mandelbrot_kernel(complex(x, y))
        end
    end
    return result
end

result = compute_mandelbrot()

x_range = range(xmin, xmax, xn)
y_range = range(ymin, ymax, yn)
heatmap(x_range, y_range, result)
</code></pre>
<p>I then benchmarked the Julia code</p>
<pre><code>julia&gt; @btime compute_mandelbrot()
  7.452 ms (341 allocations: 7.07 MiB)
</code></pre>
<p>For completeness, this is the Mojo code I used</p>
<pre><code>from benchmark import Benchmark
from complex import ComplexSIMD, ComplexFloat64
from math import iota
from python import Python
from runtime.llcl import num_cores, Runtime
from algorithm import parallelize, vectorize
from tensor import Tensor
from utils.index import Index

alias width = 960
alias height = 960
alias MAX_ITERS = 200

alias min_x = -2.0
alias max_x = 0.6
alias min_y = -1.5
alias max_y = 1.5

alias float_type = DType.float64
alias simd_width = simdwidthof[float_type]()


def show_plot(tensor: Tensor[float_type]):
    alias scale = 10
    alias dpi = 64

    np = Python.import_module("numpy")
    plt = Python.import_module("matplotlib.pyplot")
    colors = Python.import_module("matplotlib.colors")

    numpy_array = np.zeros((height, width), np.float64)

    for row in range(height):
        for col in range(width):
            numpy_array.itemset((col, row), tensor[col, row])

    fig = plt.figure(1, [scale, scale * height // width], dpi)
    ax = fig.add_axes([0.0, 0.0, 1.0, 1.0], False, 1)
    light = colors.LightSource(315, 10, 0, 1, 1, 0)

    image = light.shade(
        numpy_array, plt.cm.hot, colors.PowerNorm(0.3), "hsv", 0, 0, 1.5
    )
    plt.imshow(image)
    plt.axis("off")
    plt.show()


fn mandelbrot_kernel_SIMD[
    simd_width: Int
](c: ComplexSIMD[float_type, simd_width]) -&gt; SIMD[float_type, simd_width]:
    """A vectorized implementation of the inner mandelbrot computation."""
    var z = ComplexSIMD[float_type, simd_width](0, 0)
    var iters = SIMD[float_type, simd_width](0)

    var in_set_mask: SIMD[DType.bool, simd_width] = True
    for i in range(MAX_ITERS):
        if not in_set_mask.reduce_or():
            break
        in_set_mask = z.squared_norm() &lt;= 4
        iters = in_set_mask.select(iters + 1, iters)
        z = z.squared_add(c)

    return iters


fn parallelized():
    let t = Tensor[float_type](height, width)

    @parameter
    fn worker(row: Int):
        let scale_x = (max_x - min_x) / width
        let scale_y = (max_y - min_y) / height

        @parameter
        fn compute_vector[simd_width: Int](col: Int):
            """Each time we oeprate on a `simd_width` vector of pixels."""
            let cx = min_x + (col + iota[float_type, simd_width]()) * scale_x
            let cy = min_y + row * scale_y
            let c = ComplexSIMD[float_type, simd_width](cx, cy)
            t.data().simd_store[simd_width](
                row * width + col, mandelbrot_kernel_SIMD[simd_width](c)
            )

        # Vectorize the call to compute_vector where call gets a chunk of pixels.
        vectorize[simd_width, compute_vector](width)

    with Runtime() as rt:

        @parameter
        fn bench_parallel[simd_width: Int]():
            parallelize[worker](rt, height, 5 * num_cores())

        alias simd_width = simdwidthof[DType.float64]()
        let parallelized = Benchmark().run[bench_parallel[simd_width]]() / 1e6
        print("Parallelized:", parallelized, "ms")

    try:
        _ = show_plot(t)
    except e:
        print("failed to show plot:", e.value)


def main():
    parallelized()

</code></pre>
<p>This gave me the result:</p>
<pre><code>Parallelized: 2.1398090000000001 ms
</code></pre>
<p>On my machine, the Mojo code will run in <strong>2.14 ms</strong>. The Julia code takes <strong>7.45 ms</strong>. I’m using 32 threads for Julia, but I admit that I haven’t fine tuned that number. I was wondering if anyone would be willing to offer up ways to improve the Julia code further? I don’t really know what else I can do and I think this would be an excellent way to learn more about squeezing every last drop of performance out of Julia. If we could end up beating the Mojo code that’d be fantastic! Doubly so because of how much more elegant the Julia code is.</p>
<p>Thank you all for your time.</p>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FTC judge rules Intuit broke law, must stop advertising TurboTax as “free” (290 pts)]]></title>
            <link>https://arstechnica.com/tech-policy/2023/09/ftc-judge-rules-intuit-broke-law-must-stop-advertising-turbotax-as-free/</link>
            <guid>37441982</guid>
            <pubDate>Sat, 09 Sep 2023 03:26:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/tech-policy/2023/09/ftc-judge-rules-intuit-broke-law-must-stop-advertising-turbotax-as-free/">https://arstechnica.com/tech-policy/2023/09/ftc-judge-rules-intuit-broke-law-must-stop-advertising-turbotax-as-free/</a>, See on <a href="https://news.ycombinator.com/item?id=37441982">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <h4>
      Free should mean free    —
</h4>
            
            <h2 itemprop="description">Intuit plans appeal, slams FTC's "predetermined decision."</h2>
                    </div><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2023/09/getty-tax-form-800x533.jpg" alt="A United States tax filing form. A pen and a calculator sit on top of the form.">
      <figcaption><p>Getty Images | Sasirin Pamai</p></figcaption>  </figure>

  




<!-- cache hit 95:single/related:16d38a88412d5af49aa3d756ebb11895 --><!-- empty -->
<p>The Federal Trade Commission's chief administrative law judge ruled that Intuit violated US law with deceptive advertising and should be forced to stop promoting TurboTax as "free" unless all conditions imposed on the free offer are immediately and conspicuously displayed to consumers.</p>
<p>The <a href="https://www.ftc.gov/system/files/ftc_gov/pdf/intuit_initial_decision_public_redacted_1.pdf">initial decision</a> by Administrative Law Judge D. Michael Chappell was released today and is subject to an automatic review by the full commission. The FTC commissioners will likely rule against Intuit, which issued a statement indicating that it will take the matter to federal court. The order would be in effect for 20 years if it survives appeal.</p>
<p><a href="https://www.intuit.com/blog/news-social/intuit-responds-to-u-s-federal-trade-commissions-anticipated-decision-and-reaffirms-its-commitment-to-free-tax-preparation/">The response from Intuit</a> noted that the administrative law judge is "an employee of the FTC" and "ruled in favor of the FTC in the agency's own lawsuit." The FTC filed an <a href="https://www.ftc.gov/news-events/news/press-releases/2022/03/ftc-sues-intuit-its-deceptive-turbotax-free-filing-campaign">administrative complaint</a> against Intuit in March 2022.</p>
<p>"Intuit will appeal this groundless and seemingly predetermined decision by the FTC to rule in its own favor and is confident that when the matter ultimately returns to a neutral body Intuit will prevail, as it has previously in this matter," the company said.</p>
<p>Intuit also said it "already adheres to most of the advertising practices in the FTC's erroneous decision. There is no monetary penalty, and Intuit expects no significant impact to its business."</p>
<h2>Clearly and conspicuously</h2>
<p>According to Chappell's 242-page ruling, "the evidence proves that Intuit engaged in deceptive advertising in violation of Section 5 of the FTC Act." Intuit "advertised to consumers that they could file their taxes online for free using TurboTax, when in truth, for approximately two-thirds of taxpayers, the advertised claim was false," he wrote.</p>                                            
                                                        
<p>The order said Intuit "must not represent that a good or service is 'Free'" unless it actually offers the good or service for free to all consumers, or "All the terms, conditions, and obligations upon which receipt and retention of the 'Free' good or service are contingent are set forth clearly and conspicuously at the outset of the offer so as to leave no reasonable probability that the terms of the offer might be misunderstood."</p>
<p>Moreover, if an Intuit good or service is not free for most US taxpayers, that fact must be "disclosed clearly and conspicuously at the outset of any disclosures required" by the order. The order defines "clearly and conspicuously" in some detail.</p>
<p>"In any communication that is solely visual or solely audible, the disclosure must be made through the same means through which the communication is presented," it says. "In any communication made through both visual and audible means, such as a television advertisement, the disclosure must be presented simultaneously in both the visual and audible portions of the communication even if the representation requiring the disclosure is made in only one means."</p>
<p>The order then provides more specifics on how disclosures must be conveyed in various formats. For example, visual disclosures "must stand out from any accompanying text or other visual elements so that it is easily noticed, read, and understood," and audible disclosures "must be delivered in a volume, speed, and cadence sufficient for ordinary consumers to easily hear and understand it."</p>
<p>Similarly strict requirements apply to online advertisements, product labels, and face-to-face communications. The disclosures also "must not be contradicted or mitigated by, or inconsistent with, anything else in the communication."</p>                                            
                                                        
<h2>Court denied FTC injunction request</h2>
<p>At the same time it filed the administrative complaint last year, the FTC also <a href="https://arstechnica.com/tech-policy/2022/03/turbotax-maker-sued-by-ftc-over-deceptive-ads-that-promise-free-tax-filing/">sued Intuit</a> in US District Court for the Northern District of California. In the federal court, a judge denied the FTC's motion for a preliminary injunction in an April 2022 <a href="https://storage.courtlistener.com/recap/gov.uscourts.cand.393685/gov.uscourts.cand.393685.66.0.pdf">order</a> that said the issue could remain on hold while the FTC's administrative process unfolds.</p>
<p>The ruling said that "Intuit had removed several of the most plausibly deceptive advertisements—that is, three videos that repeated the word 'free' a dozen or more times over 30 seconds before a very brief disclaimer."</p>
<p>"However, if Intuit resumes its full advertising campaign... or the facts on the ground change significantly, the FTC may return to this Court to request relief," US District Judge Charles Breyer wrote.</p>
<p>In a separate case involving all 50 US states and the District of Columbia, Intuit, in May 2022, <a href="https://arstechnica.com/tech-policy/2022/05/turbotax-forced-to-stop-misleading-free-free-free-ads-and-pay-back-141m/">agreed</a> to pay $141 million in restitution to nearly 4.4 million consumers who "started using TurboTax's Free Edition for tax years 2016 through 2018 and were told that they had to pay to file even though they were eligible to file for free using the IRS Free File program offered through TurboTax," New York Attorney General Letitia James' office said at the time. Under that settlement, Intuit was required to stop its "free, free, free" ad campaign.</p>
<p>In its response to the administrative law judge's decision, Intuit said it expected the ruling because of the FTC's "flawed and highly questionable process, Chair Lina Khan's previous public and prejudicial statements against Intuit, and the fact that the FTC has ruled in its own favor in nearly every consumer protection case for the last two decades."</p>
<p>"We believe the FTC's decision is improper, wholly ignores the facts, and tramples on the foundations of an independent American judicial system with its serving as prosecutor, judge, and jury on its own matters," Intuit said.</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[LogoScale – A method for vectorizing small, crappy logos (211 pts)]]></title>
            <link>https://msprout.notion.site/LogoScale-A-Method-for-Vectorizing-Small-Crappy-Logos-dc0035b7473c44f8b94ffc4026d286c0</link>
            <guid>37440631</guid>
            <pubDate>Fri, 08 Sep 2023 23:38:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://msprout.notion.site/LogoScale-A-Method-for-Vectorizing-Small-Crappy-Logos-dc0035b7473c44f8b94ffc4026d286c0">https://msprout.notion.site/LogoScale-A-Method-for-Vectorizing-Small-Crappy-Logos-dc0035b7473c44f8b94ffc4026d286c0</a>, See on <a href="https://news.ycombinator.com/item?id=37440631">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Snoop unto them as they snoop unto you (218 pts)]]></title>
            <link>https://blog.dataparty.xyz/blog/snoop-unto-them/</link>
            <guid>37440104</guid>
            <pubDate>Fri, 08 Sep 2023 22:26:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.dataparty.xyz/blog/snoop-unto-them/">https://blog.dataparty.xyz/blog/snoop-unto-them/</a>, See on <a href="https://news.ycombinator.com/item?id=37440104">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>03. September 2023</p><div>
        
          
          <p><img src="https://blog.dataparty.xyz/images/defcon-31-snoop-unto-them/podium-4.png" alt="defcon-31-snoop-unto-them/podium-4.png"></p><p>The official videos from DEFCON 31 have been posted!</p>
<p>Below you can watch our talk “Snoop unto them as they snoop unto you”. The <a href="https://media.defcon.org/DEF%20CON%2031/DEF%20CON%2031%20video%20and%20slides/DEF%20CON%2031%20-%20Snoop%20on%20to%20them%2C%20as%20they%20snoop%20on%20to%20us%20-%20Alan%20Meekins.mp4">talk</a>, <a href="https://media.defcon.org/DEF%20CON%2031/DEF%20CON%2031%20presentations/nullagent%20rekcahdam%20-%20Snoop%20on%20to%20them%20as%20they%20snoop%20on%20to%20us.pdf">slides</a>, <a href="https://media.defcon.org/DEF%20CON%2031/DEF%20CON%2031%20presentations/nullagent%20rekcahdam%20-%20Snoop%20on%20to%20them%20as%20they%20snoop%20on%20to%20us/">files</a> and <a href="https://rfparty.xyz/">code</a> are also available for download.</p>



<video width="100%" poster="https://blog.dataparty.xyz/images/defcon-31-snoop-unto-them/podium-1.png" controls="">
    <source src="https://blog.dataparty.xyz/images/defcon-31-snoop-unto-them/DEF%20CON%2031%20-%20Snoop%20on%20to%20them,%20as%20they%20snoop%20on%20to%20us%20-%20nullagent.mp4" type="video/mp4">
</video>


<h2 id="follow-and-support">Follow and Support</h2>
<p>If you enjoyed our talk, please consder following:</p>
<ul>
<li>Buy us a coffee - <a href="https://ko-fi.com/dataparty">https://ko-fi.com/dataparty</a></li>
<li>Get rfparty - <a href="https://rfparty.xyz/">https://rfparty.xyz</a></li>
<li>Mastodon - <a href="https://partyon.xyz/@dataparty">https://partyon.xyz/@dataparty</a></li>
<li>Instagram - <a href="https://www.instagram.com/datapartydao">https://www.instagram.com/datapartydao</a></li>
<li>Twitter - <a href="https://twitter.com/datapartydao">https://twitter.com/datapartydao</a></li>
<li>Join our discord <a href="https://discord.gg/JrYQ3f4Pxz">https://discord.gg/JrYQ3f4Pxz</a></li>
</ul>
<h2 id="mailing-list">Mailing List</h2>


<!-- Begin Mailchimp Signup Form -->





</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Decoded: GNU Coreutils (2018) (241 pts)]]></title>
            <link>https://maizure.org/projects/decoded-gnu-coreutils/</link>
            <guid>37439535</guid>
            <pubDate>Fri, 08 Sep 2023 21:15:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://maizure.org/projects/decoded-gnu-coreutils/">https://maizure.org/projects/decoded-gnu-coreutils/</a>, See on <a href="https://news.ycombinator.com/item?id=37439535">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">

    <main id="main" role="main">

<div>
<article id="post-252" class="page">
	
	<div>
<p><i>October 2018
<br>&nbsp;&nbsp;updated: September 2019</i></p>
<p><img src="https://maizure.org/projects/decoded-gnu-coreutils/GNU.png" width="640" height="320" alt="coreutils brought to you by the GNU project"></p>
<p>This is a long-term project to decode all of the GNU coreutils in version 8.3.</p> 
<p>This resource is for novice programmers exploring the design of command-line utilities. It is best used as an accompaniment providing useful background while reading the <a href="https://github.com/MaiZure/coreutils-8.3/tree/master/src">source code</a> of the utility you may be interested in. This is <strong>not</strong> a user guide -- Please see applicable <a href="http://man7.org/linux/man-pages/dir_by_project.html#coreutils">man pages</a> for instructions on using these utilities.</p>
<p><strong>Status</strong>: Complete!
</p><ul>
<li>Phase 1 [<strong>complete</strong>] - Each utility has a dedicated page discussing the namespace and execution overview.</li>
<li>Phase 2 [<strong>complete</strong>] - Expanded discussion about important design decisions and algorithms. Tracing utility lineage both from UNIX and early Coreutils. Porting content to something more collaborative. Enhancing source walkthrough to something more useful. Creating a source code evolution visualizer</li>
<li>Phase indefinite - Line by line code walkthrough for each utility will be accomplished over a long period. <a href="https://github.com/MaiZure/decoded-coreutils">GitHub repo available</a> to gather line-by-line notes. This segment was deferred due to consistent feedback that readers were more interested in high-level discussion. </li>
</ul>


<hr>
	
<h2>The GNU Core Utilities</h2>
<p>I'll link the utility pages here at the top. Click the command name for the detailed page decoding that utility. The discussion, source code, and walkthroughs are available on each page. <strong>Bolded</strong> utilities have been expanded as part of phase 2. Enjoy!</p>


<h2>Helpful background for code reading</h2><p>
The GNU coreutils has its foibles. Many of these utilities are approaching 30 years old and include revisions by many people over the years. Here are some things to keep in mind when reading the code:
</p><ul>
<li><strong>Tiny programs</strong> - These utilities are small, (mostly) single-source file programs designed to do one thing and do it well. They are not designed for long life or to scale beyond their role. Consequently, we see designs often considered 'bad practice' such as:
  <ul>
  <li>Many globals</li>
  <li>Liberal use of macros</li>
  <li><code>goto</code> statements</li>
  <li>Long functions with nested switchs/loops</li>
  </ul>
</li>
<li><strong>Know POSIX</strong> - Start with the <a href="http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_02">Utility Syntax Guidelines</a>. In general, POSIX supports interoperability by defining appropriate inputs and outputs, but leaves the 'work' to the implementation. While the GNU coreutils <a href="https://www.gnu.org/software/coreutils/manual/html_node/Standards-conformance.html">may not strictly conform</a> to POSIX, many ideas are entrenched: permission bits, uids/gids, environment variables, exit status, and about <a href="http://www.open-std.org/jtc1/sc22/open/n4217.pdf">3718 pages</a> of more trivia. </li>
<li><strong>Outside help</strong> - Portability is a complex problem and coreutils relies on extra help from a related project: <a href="https://www.gnu.org/s/gnulib/">gnulib</a>. Almost every utility includes functions from gnulib which are specially designed for common problems used in many places across various systems - No need to reinvent the wheel.</li>
<li><strong>Launched from a shell</strong> - The Core utilities expect support from a shell such as bash, zsh, ksh, and others. The shell forks/clones in to the utility, passes the arguments, sets up the environment, redirects I/O via pipes, and retains exit values.</li>
<li><strong>Three families</strong> - GNU coreutils were originally three distinct packages for shell, text, and file utilities. Utilities within the same type share many of the same design patterns.</li>
</ul>

<h3>Basic design</h3>
<p>Most CLI utilities look something close to this:</p>
<p><img src="https://maizure.org/projects/decoded-gnu-coreutils/general_cli_utility.png" width="1080" height="240" alt="General CLI procedure"></p>
<p>The key ideas:</p>
<ul>
<li>A setup phase for flags, options, localization, etc</li>
<li>An argument parsing phase thats reads input to set execution parameters</li>
<li>A processing/execution phase that prepares input for one or more syscalls</li>
<li>Many opportunities to check constraints and fail out of execution
  <ul><li>Distinct EXIT status hint about problem location</li>
  <li>EXIT_FAILURE is general and commonly used</li></ul>
</li>
<li>Providing feedback after failed execution</li>
</ul>
<p>This is the framework I'll use to organize the decoding of each utility. We'll see that each has a unique variant of this idea which range from a few lines to thousands of lines. I'd categorize the variants in three groups: trivial, wrappers, and full utilities</p>

<p><strong>Trivial utilities</strong><br>
Trivial utilities have a unique set up phase which defines a macro in a couple lines. Then it 'includes' the source of another utility in which the macro forces a specific flow control. Examples include: <em>arch</em>, <em>dir</em>, and <em>vdir</em></p>

<p><strong>Wrapper utilities</strong><br>
Wrappers perform setup and parse command line options which are passed directly as arguments to a syscall. The result of the syscall is the result of the utility. These utilities do little processing on their own. Examples include: <em>link</em>, <em>whoami</em>, <em>hostid</em>, <em>logname</em>, and more</p>

<p><strong>Full utilities</strong><br>
The diagram above shows a design for full utilities. A setup phase, an option/argument parsing phase, and execution. Execution means processing input data and may invoke many syscalls along the way to handle more data until complete. Most utilities fall in to this category.</p>

<hr>

<h2>Digging deeper</h2>
<p>Let's go through the most common ideas shared across many of the utilities. Knowing these concepts beforehand should speed up code reading.</p>

<h3 id="i18n">Utility Initialization</h3>
<p>All utilities have a short initialization procedure near the beginning of <code>main()</code>: </p>
<pre>  initialize_main (&amp;argc, &amp;argv);
  set_program_name (argv[0]);
  setlocale (LC_ALL, "");
  bindtextdomain (PACKAGE, LOCALEDIR);
  textdomain (PACKAGE);

  atexit (close_stdout);
</pre>
<p>This preamble solves a few administrative issues; the most important of which are <a href="http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/locale.h.html">internationalization</a> and assigning the exit action. I'll go through each of these lines <a href="https://maizure.org/projects/decoded-gnu-coreutils/index.html#commonlines">below</a>. This lines don't impact the specific action of a utility.</p>

<h3 id="getopt">Parsing with Getopt</h3>
<p>Ever wonder why command line utilities have had the same look and feel for the past 40 years? You can thank the <a href="https://www.gnu.org/software/libc/manual/html_node/Parsing-Program-Arguments.html">Getopt</a> toolset. The bare minimum you need to know to follow the coreutils is:</p>
<ul>
<li>Command line options can be 'short' and 'long', prefixed with (-) and (--) respectively. Short options are defined as a string while long options use a <a href="https://www.gnu.org/software/libc/manual/html_node/Getopt-Long-Options.html#Getopt-Long-Options">struct</a>.</li>
<li>Short options use 1) only a letter if the option has no argument, 2) A single colon (:) for mandatory arguments, and (::) for optional arguments. For example, the short option string for <em>kill</em> is: <code>Lln:s:t</code>. Which says that <code>L</code>, <code>l</code>, <code>t</code> take no arguments but <code>n</code> and <code>s</code> need an argument.</li>
<li>Long options often have a short analogue</li>
<li>The <code>getopt_long()</code> function returns the next option and is used in all utilities</li>
<li>The <code>optind</code> index is a position within the <code>argv[]</code> array for the next argument.</li>
<li>The <code>optarg</code> char pointer points to the value of the option's argument.</li>
</ul>

<h3 id="fts">Traversing the file system with fts</h3>
<p>Unix-like systems often support the <a href="https://www.freebsd.org/cgi/man.cgi?query=fts&amp;apropos=0&amp;sektion=3&amp;manpath=FreeBSD+11.2-RELEASE+and+Ports&amp;arch=default&amp;format=html">fts</a> library to easily manage walking through the file system. The basic hand-waved details are:</p>
<ul>
<li>The tree is represented by an <code>FTS</code> structure built by calling <code>fts_open()</code> or <code>xfts_open()</code> on a path.</li>
<li>A node (file/directory) from the tree is a <code>FTSENT</code> structure.</li>
<li>Calling <code>fts_read()</code> on the FTS generates <code>FTSENT</code>s. This is walking the tree.</li>
<li>The <code>FTSENT-&gt;fts_info</code> field describes the entries. It is used often to decide how to handle the entry.</li>
</ul>

<h3>Syscall wrappers, and helpers</h3>
<p>coreutils often invokes syscalls through wrappers and helpers beyond those provided by libc. Many are linked through the <a href="https://www.gnu.org/software/gnulib/">Gnulib project</a>.</p>
<h4>write</h4>
<p>libc provides many text writing functions, such as <code>fwrite()</code> for buffered stream access, and the <code>write()</code> syscall wrapper. Coreutils brings in non-standard functions such as <code>full_write()</code>. The <a href="https://github.com/coreutils/gnulib/blob/master/lib/full-write.c">full_write()</a> function continuously retries writes unless there is a hard failure. It relies on <a href="https://github.com/coreutils/gnulib/blob/master/lib/safe-read.c">safe_write()</a> to retry the <code>write()</code> syscall across interrupts. Other write-related helpers are used only in a single utility. Such as <code>iwrite()</code> in <em>dd</em>, <code>cwrite()</code> in <em>split</em>. I'll discuss those within the utilities themselves.</p>

<h3>Common functions</h3>
<p>All utilities use at least three functions: <code>main()</code>, <code>usage()</code>, and <code>_()</code>.</p>
<p>The <code>usage()</code> function displays help for the utility that includes a list of input parameters, their meaning, and appropriate syntax.</p>
<p>The <code>_()</code> function is really a macro defined in <code>system.h</code> that binds simple strings to the Native Language Support capability in GNU <a href="https://github.com/coreutils/gnulib/blob/master/lib/gettext.h">gettext.h</a>. If it's a string meant to be shown to the user, it's probably wrapped with this function.</p>

<h3 id="commonlines">Common code lines</h3>
<p>The following code lines occur in most non-trivial utilities:</p>
<p><code>#include "system.h"</code><br>
This header defines system-dependent marcos, variables, and useful non-standard functions. It provides 'translations' necessary to allow coreutils to build on as many architectures as possible. Overall, this header is a patchwork of corner cases lacking serious organization -- but it works!. Many C standard and POSIX headers are included within this header, such as: <em>unistd.h</em>, <em>limits.h</em>, <em>ctypes.h</em>, <em>time.h</em>, <em>string.h</em>, <em>errno.h</em>, <em>stdbool.h</em>, <em>stdlib.h</em>, <em>fcntl.h</em>, <em>inttypes.h</em>, and <em>locale.h</em>.</p>

<p><code>#define PROGRAM_NAME "cat"</code><br>
Defines the official name for the utility. Used in the 'version' check.</p>

<p><code>#define AUTHORS proper_name ("Richard M. Stallman")</code><br>
Defines the authors for the utility. Used in the 'version' check.</p>

<p><code>emit_try_help ()</code><br>
Prints help suggestion after failed output. Includes a link to the online documents. This will appear at the beginning of <code>usage()</code></p>

<p><code>emit_ancillary_info (PROGRAM_NAME)</code><br>
Prints common extra help info after the command-specific output. Includes a link to the online documents. This appears close to the end of <code>usage()</code></p>

<p><code>exit (status)</code><br>
Syscall to end execution with the given status. This appears at the end of <code>usage()</code></p>

<p><code>initialize_main(&amp;argc, &amp;argv)</code><br>
Special handler for VMS forcing built-in wildcard expansion. This is defined away for most other operating systems</p>

<p><code>set_program_name(argv[0]);</code><br>
Saves the basic program name using the first input argument. Discards the path component of argv[0].</p>

<p><code>setlocale(LC_ALL, "");</code><br>
Sets up internationalization options during execution. Provided by <a href="https://www.gnu.org/software/libc/manual/html_node/Setting-the-Locale.html">libc</a> in <code>&lt;locale.h&gt;</code></p>

<p><code>bindtextdomain (PACKAGE, LOCALEDIR);</code><br>
Sets the directory of intenationalization features using the <a href="https://www.gnu.org/software/gettext/">free software</a> gettext.h </p>

<p><code>textdomain (PACKAGE);</code><br>
Sets the text domain to enable i18n.</p>

<p><code>atexit(close_stdout);</code><br>
Registers the <a href="https://github.com/gagern/gnulib/blob/master/lib/closeout.c">close_stdout</a> function for call when the program ends. This flushes the buffer steam in addition to closing.</p>

<p><code>IF_LINT(something);</code><br>
Suppresses GCC warnings if using a linter by including the code within the parens. Usually this is NOP</p>

<h3>C idioms</h3>
<p>There are a few idioms buried in the coreutils source that may be unfamiliar to beginners.</p><p><code>!!</code><br>
The double exclaimation point is exactly what you see, a double unary NOT operation. The purpose is to coerce a value in to a boolean. It's often used to make a flag from a function return value.</p>
<p><code>do { ... } while (0)</code><br>
The non-loop often encloses a multi-statement macro to ensure proper tokenization after preprocessor substitution. The core use-case is as a consequent: 
</p><pre>if (condition)
  MACRO;
else 
  something else
</pre><p>
Note that lack of semi-colon after while -- It's manually added after the macro in the C code.</p>

<hr>

<h2>Utility Maintenance</h2>
<p>An active project like coreutils is always evolving. In general, updates proceed across three arcs:</p>
<ul>
<li><strong>Project-wide changes</strong> - These are larger scale changes to underlying architecture and dependencies across all utilities. Some highlights include:
  <ul>
  <li>1995: Native language support was added thanks to the GNU <a href="https://www.gnu.org/software/gettext/manual/html_node/History.html">gettext project</a>. This incorporated the <code>_()</code> macro around most text output lines. Internationalization support expanded in 1996, adding several initializers to <code>main()</code> as discussed in the previous section</li>
  <li>1995: Short descriptions of utility purpose were added to usage output</li>
  <li>2003: VMS wildcard support. This is visible via the <code>initialize_main()</code> function</li>
  <li>2016: The <code>die()</code> macro replaces most <code>exit()</code> and <code>error()</code> functions on failure paths to avoid compiler warnings</li>
  <li>Various: Incorporating macro constants such as EXIT_SUCCESS, PROGRAM_NAME, AUTHORS, among others.</li>
  </ul>
</li>
<li><strong>Utility-specific updates</strong> - Many changes apply only to a subset or single utility. These cases usually fall in to three categories: bug fixes, new features, and optimizations. Examples of each type include:</li>
  <ul>
  <li>Bug: The <em>join</em>, <em>sort</em>, and <em>uniq</em> commands were susceptible to an overflow attack until <a href="http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=commit;h=b2eadd109c3a508011705761dfe24a35180d925d">patched</a> in 2016</li>
  <li>Feature: The <code>--output</code> option was <a href="http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=blob;f=src/df.c;hb=dae8d223b69bdea7c8913d33640a7b36ef0ff755">added</a> to <em>df</em> in 2013</li>
  <li>Optimization: The <em>yes</em> utility performance <a href="http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=commitdiff;h=35217221c211f3116f374f305654462195aa634a">improved</a> with better buffering</li>
  </ul>
<li><strong>Annual maintenance</strong> - At a minimum, the copyright years of all utilities are updated. Another administrative change includes updating the FSF address. These changes have no effect on execution</li>
</ul>
<p>For curious readers, I've included an 'evolution' view within each utility page to visualize utility changes over time.</p>

<h3>Contributing</h3>
<p>People interested in contributing should read everything on the <a href="https://www.gnu.org/software/coreutils/">GNU project page</a>. The <a href="https://git.savannah.gnu.org/cgit/coreutils.git/plain/HACKING">contribution guidelines</a> and list of <a href="https://www.gnu.org/software/coreutils/rejected_requests.html">rejected features</a> are especially enlightening. Finally, go through the <a href="https://lists.gnu.org/archive/html/coreutils/">mailing list archives</a> to get an idea of what contributions are most valuable. A very short list of things to consider before writing any code:</p>
<ul>
<li>Can this functionality be reproduced with existing tools?</li>
<li>Does your contribution break backwards compatibility?</li>
<li>Does the proposed behavior deviate significantly from POSIX?</li>
</ul>
<p>Not sure? Send your concerns to the community on the mailing list</p>

<hr>

<h2>Fun stuff</h2>
<p>Veteran developers looking for a reason to peek inside these utilities may want to start their journey here.</p>
<h3>Trivia</h3>
<p>
Shortest utility: <strong>false</strong> (2 lines - tied with arch, dir, and vdir)<br>
Shortest standalone utility: <strong>true</strong> (80 lines) -- the <a href="http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=blob;f=src/true.c;hb=5d4eefe8d858f8d832d0038175dd1b461e7004c5">first version</a> is almost a minimum C program!<br>
Longest utility: <strong>ls</strong> (5308 lines)
</p>
<ul>
<li>Many utilities trace back to Research UNIX in the 1970s. A handful even further back to Multics</li>
<li>The oldest spiritual ancestor is the CTSS <em>LISTF</em> command (~1963). Thankfully shorted to <em>ls</em>
<ul><li>LISTF is one of the original 18 utilities in the <a href="http://larch-www.lcs.mit.edu:8001/~corbato/sjcc62/">1962 design paper</a> </li></ul>
</li><li>The distinct syntax of the <em>dd</em> utility is reminiscent of the OS/360 <a href="https://en.wikipedia.org/wiki/Job_Control_Language#Concatenating_input_files">job control language</a> (early 1960s).</li>
<li>The <em>sort</em> program is the only utility that takes advantage of multi-threading</li>
<li>The <em>fmt</em> utility demonstrates optimization of lines and paragraphs using feature costs</li>
<li>The deceptively simple <em>yes</em> utility has high-performance output using page-aligned memory buffers</li>
<li>The <em>df</em> utility is faster than <em>du</em>. The former uses device metadata while the latter checks all files</li>
<li><em>cksum</em> includes two entry points, one for normal operation and one to generate the CRC-32 table</li>
<li>There is no failure condition for the <em>echo</em> utility</li>
<li>The design of the <em>test</em> and <em>expr</em> utilities departs significantly from the typical utility</li>
<li><em>su</em> was originally maintained by coreutils/shellutils</li>
<li>My personal least used utilities are <em>tsort</em> and <em>ptx</em> - I tested them once in the late 1990s</li>
</ul>


<h3>Interesting implementations</h3>
<p>There are a few standalone code snippets within coreutils worth investigating:</p>
<ul>
<li>An <a href="https://en.wikipedia.org/wiki/ISAAC_(cipher)">ISAAC cipher</a> for random numbers used by <a href="https://maizure.org/projects/decoded-gnu-coreutils/shuf.html"><em>shuf</em></a> and <a href="https://maizure.org/projects/decoded-gnu-coreutils/shuf.html"><em>shred</em></a></li>
<li><a href="https://en.wikipedia.org/wiki/Reservoir_sampling">Reservoir sampling</a> used by <a href="https://maizure.org/projects/decoded-gnu-coreutils/shuf.html"><em>shuf</em></a></li>
<li>Legacy <a href="https://en.wikipedia.org/wiki/SYSV_checksum">System V</a> and <a href="https://en.wikipedia.org/wiki/BSD_checksum">BSD</a> checksums used in <a href="https://maizure.org/projects/decoded-gnu-coreutils/sum.html"><em>sum</em></a></li>
<li>Left-associative expression evaluation used in <a href="https://maizure.org/projects/decoded-gnu-coreutils/expr.html"><em>expr</em></a></li>
<li><a href="https://www.cs.auckland.ac.nz/~pgut001/pubs/secure_del.html">Secure overwrite</a> used by the <a href="https://maizure.org/projects/decoded-gnu-coreutils/shred.html"><em>shred</em></a> utility</li>
<li>The <a href="https://en.wikipedia.org/wiki/Cyclic_redundancy_check">CRC-32 checksum</a> computed by <a href="https://maizure.org/projects/decoded-gnu-coreutils/cksum.html"><em>cksum</em></a> utility</li>
<li><a href="https://en.wikipedia.org/wiki/Merge_sort">Merge sort</a> as adapted for <a href="https://maizure.org/projects/decoded-gnu-coreutils/sort.html"><em>sort</em></a></li>
<li>The litany of mathemagic behind <a href="https://maizure.org/projects/decoded-gnu-coreutils/factor.html"><em>factor</em></a>
</li></ul>
<hr>

<h2>FAQ</h2>
<p><strong>Nice project! How can I donate to support this effort?</strong><br>
Thanks for the thoughts; unfortunately I'm not configured to receive personal donations. But feel free to share your time or money with the <a href="https://my.fsf.org/donate/">Free Software Foundation</a> -- That's where all the collaborative efforts happen!
</p>

    </div>

	</article>
</div>

        
      
    </main>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The rxv64 Operating System: MIT's xv6, in Rust, for SMP x86_64 machines (132 pts)]]></title>
            <link>https://github.com/dancrossnyc/rxv64</link>
            <guid>37439391</guid>
            <pubDate>Fri, 08 Sep 2023 21:03:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/dancrossnyc/rxv64">https://github.com/dancrossnyc/rxv64</a>, See on <a href="https://news.ycombinator.com/item?id=37439391">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">The rxv64 Operating System</h2>
<p dir="auto">rxv64 is a pedagogical operating system written in Rust that targets
multiprocessor x86_64 machines.  It is a reimplementation of the xv6
operating system from MIT.</p>
<p dir="auto">As a pedagogical system, it supports very little hardware other than
the text-mode CGA device, serial port, PS/2 keyboard controller, and
PCIe AHCI SATA storage devices.</p>
<p dir="auto">See the xv6 README for more information on provenance and intended
use.</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Using LD_PRELOAD to cheat, inject features and investigate programs (170 pts)]]></title>
            <link>https://rafalcieslak.wordpress.com/2013/04/02/dynamic-linker-tricks-using-ld_preload-to-cheat-inject-features-and-investigate-programs/</link>
            <guid>37439125</guid>
            <pubDate>Fri, 08 Sep 2023 20:41:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rafalcieslak.wordpress.com/2013/04/02/dynamic-linker-tricks-using-ld_preload-to-cheat-inject-features-and-investigate-programs/">https://rafalcieslak.wordpress.com/2013/04/02/dynamic-linker-tricks-using-ld_preload-to-cheat-inject-features-and-investigate-programs/</a>, See on <a href="https://news.ycombinator.com/item?id=37439125">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><strong>This post assumes some basic C skills.</strong></p>
<p>Linux puts you in full control. This is not always seen from everyone’s perspective, but a power user loves to be in control. I’m going to show you a basic trick that lets you heavily influence the behavior of most applications, which is not only fun, but also, at times, useful.</p>
<h4>A motivational example</h4>
<p>Let us begin with a simple example. Fun first, science later.</p>
<pre title="random_num.c:">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

int main(){
  srand(time(NULL));
  int i = 10;
  while(i--)&nbsp;printf("%d\n",rand()%100);
  return 0;
}
</pre>
<p>Simple enough, I believe. I compiled it with no special flags, just</p>
<blockquote>
<pre>gcc random_num.c -o random_num</pre>
</blockquote>
<p>I hope the resulting output is obvious – ten randomly selected numbers 0-99, hopefully different each time you run this program.</p>
<p>Now let’s pretend we don’t really have the source of this executable. Either delete the source file, or move it somewhere – we won’t need it. We will significantly modify this programs behavior, yet without touching it’s source code nor recompiling it.</p>
<p>For this, lets create another simple C file:</p>
<pre title="unrandom.c:">int rand(){
    return 42; //the most random number in the universe
}
</pre>
<p>We’ll compile it into a shared library.</p>
<blockquote>
<pre>gcc -shared -fPIC unrandom.c -o unrandom.so</pre>
</blockquote>
<p>So what we have now is an application that outputs some random data, and a custom library, which implements the rand() function as a constant value of 42. &nbsp;Now… just run <em>random_num&nbsp;</em>this way,&nbsp;and watch the result:</p>
<blockquote>
<pre>LD_PRELOAD=$PWD/unrandom.so ./random_nums</pre>
</blockquote>
<p>If you are lazy and did not do it yourself (and somehow fail to guess what might have happened), I’ll let you know – the output consists of ten 42’s.</p>

<p><!--more-->This may be even more impressive it you first:</p>
<blockquote>
<pre>export LD_PRELOAD=$PWD/unrandom.so</pre>
</blockquote>
<p>and then run the program normally. An unchanged app run in an apparently usual manner seems to be affected by what we did in our tiny library…</p>
<h6><strong>Wait, what? What did just happen?</strong></h6>
<p>Yup, you are right, our program failed to generate random numbers, because it did not use the “real” rand(), but the one we provided – which returns 42 every time.</p>
<h6><strong>But we *told* it to use the real one. We programmed it to use the real one. Besides, at the time we created that program, the fake rand() did not even exist!</strong></h6>
<p>This is not entirely true. We did not choose which rand() we want our program to use. We told it just to use rand().</p>
<p>When our program is started, certain libraries (that provide functionality needed by the program) are loaded. We can learn which are these using&nbsp;<em>ldd</em>:<em><br>
</em></p>
<blockquote>
<pre>$ <strong>ldd random_nums</strong>
linux-vdso.so.1 =&gt; (0x00007fff4bdfe000)
libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f48c03ec000)
/lib64/ld-linux-x86-64.so.2 (0x00007f48c07e3000)</pre>
</blockquote>
<p>What you see as the output is the list of libs that are needed by&nbsp;<em>random_nums</em>. This list is built into the executable, and is determined compile time. The exact output might slightly differ on your machine, but a <strong>libc.so</strong> must be there – this is the file which provides core C functionality. That includes the “real” rand().</p>
<p>We can have a peek at what functions does libc provide. I used the following to get a full list:</p>
<blockquote>
<pre>nm -D /lib/libc.so.6</pre>
</blockquote>
<p>The <em>nm</em> command lists symbols found in a binary file. The -D flag tells it to look for dynamic symbols, which makes sense, as libc.so.6 is a dynamic library. The output is very long, but it indeed lists rand() among many other standard functions.</p>
<p>Now what happens when we set up the environmental variable LD_PRELOAD? This variable&nbsp;<strong>forces some libraries to be loaded for a program</strong>. In our case, it loads <em>unrandom.so</em> for&nbsp;<em>random_num</em>, even though the program itself does not ask for it. The following command may be interesting:<em><br>
</em></p>
<blockquote>
<pre>$ <strong>LD_PRELOAD=$PWD/unrandom.so ldd random_nums</strong>
linux-vdso.so.1 =&gt;  (0x00007fff369dc000)
/some/path/to/unrandom.so (0x00007f262b439000)
libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f262b044000)
/lib64/ld-linux-x86-64.so.2 (0x00007f262b63d000)</pre>
</blockquote>
<p>Note that it lists our custom library. And indeed this is the reason why it’s code get’s executed:&nbsp;<em>random_num</em>&nbsp;calls rand(), but if&nbsp;<em>unrandom.so</em> is loaded it is our library that provides implementation for rand(). Neat, isn’t it?</p>
<h4>Being transparent</h4>
<p>This is not enough. I’d like to be able to inject some code into an application in a similar manner, but in such way that it will be able to function normally. It’s clear if we implemented open() with a simple “<em>return 0;</em>“, the application we would like to hack should malfunction. The point is to be <strong>transparent</strong>, and to actually call the original open:</p>
<pre title="inspect_open.c:">int open(const char *pathname, int flags){
  /* Some evil injected code goes here. */
  return open(pathname,flags); // Here we call the "real" open function, that is provided to us by libc.so
}
</pre>
<p>Hm. Not really. This won’t call the “original” open(…). Obviously, this is an endless recursive call.</p>
<p>How do we access the “real” open function? It is needed to use the programming interface to the dynamic linker. It’s simpler than it sounds. Have a look at this complete example, and then I’ll explain what happens there:</p>
<pre title="inspect_open.c:">#define _GNU_SOURCE
#include &lt;dlfcn.h&gt;

typedef int (*orig_open_f_type)(const char *pathname, int flags);

int open(const char *pathname, int flags, ...)
{
    /* Some evil injected code goes here. */

    orig_open_f_type orig_open;
    orig_open = (orig_open_f_type)dlsym(RTLD_NEXT,"open");
    return orig_open(pathname,flags);
}

</pre>
<p>The <i>dlfcn.h</i> is needed for <em>dlsym</em> function we use later. That strange&nbsp;<em>#define</em> directive instructs the compiler to enable some non-standard stuff, we need it to enable&nbsp;<em>RTLD_NEXT</em> in&nbsp;<em>dlfcn.h</em>. That typedef is just creating an alias to a complicated pointer-to-function type, with arguments just as the original open – the alias name is&nbsp;<em>orig_open_f_type</em>, which we’ll use later.</p>
<p>The body of our custom open(…) consists of some custom code. The last part of it creates a new function pointer&nbsp;<em>orig_open</em> which will point to the original open(…) function. In order to get the address of that function, we ask&nbsp;<em>dlsym</em>&nbsp;to find for us the next “open” function on dynamic libraries stack. Finally, we call that function (passing the same arguments as were passed to our fake “open”), and return it’s return value as ours.</p>
<p>As the “evil injected code” I simply used:</p>
<pre title="inspect_open.c (fragment):">printf("The victim used open(...) to access '%s'!!!\n",pathname); //remember to include stdio.h!
</pre>
<p>To compile it, I needed to slightly adjust compiler flags:</p>
<blockquote>
<pre>gcc -shared -fPIC &nbsp;inspect_open.c -o inspect_open.so -ldl</pre>
</blockquote>
<p>I had to append&nbsp;<em>-ldl</em>, so that this shared library is linked to <em>libdl</em>, which provides the <em>dlsym</em> function. (Nah, I am not going to create a fake version of <em>dlsym</em>, though this might be fun.)</p>
<p>So what do I have in result? A shared library, which implements the open(…) function so that it behaves&nbsp;<strong>exactly</strong> as the real open(…)… except it has a side effect of <em>printf</em>ing the file path :-)</p>
<p>If you are not convinced this is a powerful trick, it’s the time you tried the following:</p>
<blockquote>
<pre>LD_PRELOAD=$PWD/inspect_open.so gnome-calculator</pre>
</blockquote>
<p>I encourage you to see the result yourself, but basically it lists every file this application accesses. In real time.</p>
<p>I believe it’s not that hard to imagine why this might be useful for debugging or investigating unknown applications. Please note, however, that this particular trick is not quite complete, because <em>open()</em> is not the only function that opens files… For example, there is also&nbsp;<em>open64()</em> in the standard library, and for full investigation you would need to create a fake one too.</p>
<h4><strong>Possible uses</strong></h4>
<p>If you are still with me and enjoyed the above, let me suggest a bunch of ideas of what can be achieved using this trick. Keep in mind that you can do all the above&nbsp;without to source of the&nbsp;affected&nbsp;app!</p>
<ol>
<li><del>Gain root privileges.</del> Not really, don’t even bother, you won’t bypass any security this way. (A quick explanation for pros: no libraries will be preloaded this way if ruid != euid)</li>
<li>Cheat games:&nbsp;<strong>Unrandomize.</strong> This is what I did in the first example. For a fully working case you would need also to implement a custom&nbsp;<em>random()</em>,&nbsp;<em>rand_r()</em><em>, random_r()</em>. Also some apps may be reading from&nbsp;<em>/dev/urandom</em> or so, you might redirect them to&nbsp;<em>/dev/null</em>&nbsp;by running the original <em>open()</em> with a modified file path. Furthermore, some apps may have their own random number generation algorithm, there is little you can do about that (unless: point 10 below). But this looks like an easy exercise for beginners.</li>
<li>Cheat games: <b>Bullet time.&nbsp;</b>Implement all standard time-related functions pretend the time flows two times slower. Or ten times slower. If you correctly calculate new values for time measurement, timed <em>sleep</em> functions, and others, the affected application will believe the time runs slower (or faster, if you wish), and you can experience awesome bullet-time action.<br>
Or go <strong>even one step further</strong> and let your shared library also be a DBus client, so that you can communicate with it real time. Bind some shortcuts to custom commands, and with some additional calculations in your fake timing functions you will be able to enable&amp;disable the slow-mo or fast-forward anytime you wish.</li>
<li>Investigate apps:&nbsp;<strong>List accessed files.</strong> That’s what my second example does, but this could be also pushed further, by recording and monitoring all app’s file I/O.</li>
<li>Investigate apps:&nbsp;<strong>Monitor internet access.</strong> You might do this with Wireshark or similar software, but with this trick you could actually gain control of what an app sends over the web, and not just look, but also affect the exchanged data. Lots of possibilities here, from detecting spyware, to cheating in multiplayer games, or analyzing &amp; reverse-engineering&nbsp;protocols of closed-source applications.</li>
<li>Investigate apps:&nbsp;<strong>Inspect GTK structures.</strong>&nbsp;Why just limit ourselves to standard library? Let’s inject code in all GTK calls, so that we can learn what widgets does an app use, and how are they structured. This might be then rendered either to an image or even to a gtkbuilder file! Super useful if you want to learn how does some app manage its interface!</li>
<li><strong>Sandbox unsafe applications.</strong> If you don’t trust some app and are afraid that it may wish to<em> rm -rf /&nbsp;</em>or do some other unwanted file activities, you might potentially redirect all it’s file IO to e.g. /tmp by appropriately&nbsp;modifying the arguments it passes to all file-related functions (not just <em>open</em>, but also e.g. removing directories etc.). It’s more difficult trick that a chroot, but it gives you more control. It would be only as safe as complete your “wrapper” was, and unless you really know what you’re doing, don’t actually run any&nbsp;malicious&nbsp;software this way.</li>
<li><strong>Implement features.</strong> <a href="http://www.zlibc.linux.lu/index.html">zlibc</a> is an actual library which is run this precise way; it uncompresses files on the go as they are accessed, so that any application can work on compressed data without even realizing it.</li>
<li><strong>Fix bugs.&nbsp;</strong>Another real-life example: some time ago (I am not sure this is still the case) Skype – which is closed-source – had problems capturing video from some certain webcams. Because the source could not be modified as Skype is not free software, this was fixed by preloading a library that would correct these problems with video.</li>
<li>Manually <strong>access application’s own memory</strong>. Do note that you can access all app data this way. This may be not impressive if you are familiar with software like CheatEngine/scanmem/GameConqueror, but they all require root privileges to work. LD_PRELOAD does not. In fact, with a number of clever tricks your injected code might access all app memory, because, in fact, it gets executed by that application itself. You might modify everything this application can. You can probably imagine this allows a lot of low-level hacks… but I’ll post an article about it another time.</li>
</ol>
<p>These are only the ideas I came up with. I bet you can find some too, if you do – share them by commenting!</p>
<hr>

	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Consumers defrauded on Zelle are left high and dry by the banks that created it [pdf] (116 pts)]]></title>
            <link>https://www.warren.senate.gov/imo/media/doc/ZELLE%20REPORT%20OCTOBER%202022.pdf</link>
            <guid>37438934</guid>
            <pubDate>Fri, 08 Sep 2023 20:23:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.warren.senate.gov/imo/media/doc/ZELLE%20REPORT%20OCTOBER%202022.pdf">https://www.warren.senate.gov/imo/media/doc/ZELLE%20REPORT%20OCTOBER%202022.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=37438934">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Scammers can exploit email forwarding flaws to impersonate high-profile domains (191 pts)]]></title>
            <link>https://today.ucsd.edu/story/forwarding_based_spoofing</link>
            <guid>37438478</guid>
            <pubDate>Fri, 08 Sep 2023 19:45:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://today.ucsd.edu/story/forwarding_based_spoofing">https://today.ucsd.edu/story/forwarding_based_spoofing</a>, See on <a href="https://news.ycombinator.com/item?id=37438478">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">



		
	
		


	<section id="feature-detail-hero">
		<p>   
			
					
			
			
			<h2>Some of the domains vulnerable include Mastercard, The Washington Post and the Department of State</h2>
			
		</p>
		
		
		
				
			
			
			
			
			
			
	</section>
	
		<section id="wysiwyg">
    
  
  
    
	 <!-- START DATE STORIES IN NEW FORMAT -->
	 
	 <!-- START OF AUTHORS-BLOCK FOR MOBILE  -->
	 
	 <!-- END OF AUTHORS-BLOCK FOR MOBILE -->
	 
	 

		  <!-- START NEW CONTENT BLOCK -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
							
							
							
						   <p><span><span>Sending an email with a forged address is easier than previously thought, due to flaws in the process that allows email forwarding, according to a research team led by computer scientists at the University of California San Diego.&nbsp;</span></span></p>

<p><span><span>The issues researchers uncovered have a broad impact, affecting the integrity of email sent from tens of thousands of domains, including those representing organizations in the U.S. government–such as the majority of U.S. cabinet email domains, including state.gov, as well as security agencies. Key financial service companies, such as Mastercard, and major news organizations, such as The Washington Post and the Associated Press, are also vulnerable.&nbsp;</span></span></p>

<p><span><span>It's called forwarding-based spoofing and researchers found that they can send email messages impersonating these organizations, bypassing the safeguards deployed by email providers such as Gmail and Outlook. Once recipients get the spoofed email, they are more likely to open attachments that deploy malware, or to click on links that install spyware on their machine.</span></span><br>
&nbsp;</p>
										
						</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
							
						   <p><span><span>Such spoofing is made possible by a number of vulnerabilities centered on forwarding emails, the research team found. The original protocol used to check the authenticity of an email implicitly assumes that each organization operates its own mailing infrastructure, with specific IP addresses not used by other domains. But today, many organizations outsource their email infrastructure to Gmail and Outlook. As a result, thousands of domains have delegated the right to send email on their behalf to the same third party. </span></span><span><span>While these third-party providers validate that their users only send email on behalf of domains that they operate, this protection can be bypassed by email forwarding.&nbsp;</span></span></p>

<p><span><span>For example, state.gov, the email domain for the Department of State, allows Outlook to send emails on their behalf. This means emails claiming to be from state.gov would be considered legitimate if they came from Outlook’s email servers. As a result, an attacker can create a spoofed email–an email with a fake identity–pretending, for example, to come from the Department of State--and then forward it through their personal Outlook account. Once they do this, the spoofed email will now be treated as legitimate by the recipient, as it is coming from an Outlook email server.</span></span></p>
										
						</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
										<!-- 
  This figure is meant to be part of a Article/Feature Detail page. It provides 
  data attributes for the slideshow carousel script to target the image and
  caption for dynamically pulling into the slideshow modal
  - Supported variables
  -- image-src
  -- image-alt
  -- image-caption
  -- image-size
-->

	<figure data-slideshow-item="" data-slideshow-image-src="https://today.ucsd.edu/news_uploads/Alex_Liu_portrait_%28200width%29.jpeg" data-slideshow-image-alt="Portrait of PhD student Alex Liu" data-slideshow-image-caption="<p>{/exp:typographee}</p><div>Alex Liu, a PhD student in the UC San Diego Department of Computer Science and Engineering, led the research.&nbsp;</div>">
	  <img data-src="https://today.ucsd.edu/news_uploads/Alex_Liu_portrait_%28200width%29.jpeg" alt="Portrait of PhD student Alex Liu" src="https://today.ucsd.edu/news_uploads/Alex_Liu_portrait_%28200width%29.jpeg">
	  
	  <figcaption>
	    <p>Alex Liu, a PhD student in the UC San Diego Department of Computer Science and Engineering, led the research.&nbsp;</p>
	  </figcaption>
	  
	</figure>
	
										<p><span><span>Versions of this flaw also exist for five other email providers, including iCloud. The researchers also discovered other smaller issues that impact users of Gmail and Zohomail– a popular email provider in India.&nbsp;</span></span></p>

<p><span><span>Researchers reported the issue to Microsoft, Apple and Google but to their knowledge, it has not been fully fixed.&nbsp;</span></span></p>

<p><span><span>“That is not surprising since doing so would require a major effort, including dismantling and repairing four decades worth of legacy systems,” said Alex Liu, the paper’s first author and a Ph.D. student in the Jacobs School Department of Computer Science and Engineering at UC San Diego. “While there are certain short-term mitigations that will significantly reduce the exposure to the attacks we have described here, ultimately email needs to stand on a more solid security footing if it is to effectively resist spoofing attacks going forward.”&nbsp;</span></span></p>

<p><span><span>The team presented their findings at the 8th IEEE European Symposium on Privacy and Security, July 3 to 7, 2023, in Delft, where the work won best paper.&nbsp;</span></span></p>
													
								 	</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
										<!-- 
  This figure is meant to be part of a Article/Feature Detail page. It provides 
  data attributes for the slideshow carousel script to target the image and
  caption for dynamically pulling into the slideshow modal
  - Supported variables
  -- image-src
  -- image-alt
  -- image-caption
  -- image-size
-->

	<figure data-slideshow-item="" data-slideshow-image-src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-09-01_at_4.00.49_PM_.png" data-slideshow-image-alt="A chart showing how an attack would work" data-slideshow-image-caption="<p>{/exp:typographee}</p><p>Example of a spoofed email attack exploiting open forwarding and relaxed validation for forwarded email from well-known providers</p>">
	  <img data-src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-09-01_at_4.00.49_PM_.png" alt="A chart showing how an attack would work" src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-09-01_at_4.00.49_PM_.png">
	  
	  <figcaption>
	    <p>Example of a spoofed email attack exploiting open forwarding and relaxed validation for forwarded email from well-known providers</p>
	  </figcaption>
	  
	</figure>
	
										<h3><span><span>Different attacks</span></span></h3>

<p><span><span>Researchers developed four different types of attacks using forwarding.&nbsp;</span></span></p>

<p><span><span>For the first three, they assumed that an adversary controls both the accounts that send and forward emails. The attacker also needs to have a server capable of sending spoofed email messages and an account with a third party provider that allows open forwarding.&nbsp;</span></span></p>

<p><span><span>The attacker starts by creating a personal account for forwarding and then adds the spoofed address to the accounts’s white list–a list of domains that won’t be blocked even if they don’t meet security standards. The attacker configures their account to forward all email to the desired target. The attacker then forges an email to look like it originated from state.gov and sends the email to their personal Outlook account. Then all the attacker has to do is forward the spoofed email to their target.&nbsp;</span></span></p>

<p><span><span>More than 12 percent of the Alexa 100K most popular email domains–the most popular domains on the Internet– are vulnerable to this attack. These include a large number of news organizations, such as the Washington Post, the Los Angeles Times and the Associated Press, as well as domain registrars like GoDaddy, financial services, such as Mastercard and Docusign and large law firms. In addition, 32% of .gov domains are vulnerable, including the majority of US cabinet agencies, a range of security agencies, and agencies working in the public health domain, such as CDC. At the state and local level, virtually all primary state government domains are vulnerable and more than 40% of all .gov domains are used by cities.&nbsp;</span></span></p>

<p><span><span>In a second version of this attack, an attacker creates a personal Outlook account to forward spoofed email messages to Gmail. In this scenario, the attacker takes on the identity of a domain that is also served by Outlook, then sends the spoofed message from their own malicious server to their personal Outlook account, which in turn forwards it to a series of Gmail accounts.&nbsp;</span></span></p>

<p><span><span>Roughly 1.9 billion users worldwide are vulnerable to this attack.&nbsp;</span></span></p>

<p><span><span>Researchers also found variations of this attack that work for four popular mailing list services: Google groups, mailman, listserv and Gaggle.</span></span></p>
													
								 	</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
										<!-- 
  This figure is meant to be part of a Article/Feature Detail page. It provides 
  data attributes for the slideshow carousel script to target the image and
  caption for dynamically pulling into the slideshow modal
  - Supported variables
  -- image-src
  -- image-alt
  -- image-caption
  -- image-size
-->

	<figure data-slideshow-item="" data-slideshow-image-src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-08-31_at_2.54.47_PM_.png" data-slideshow-image-alt="Screenshot of a spoofed email " data-slideshow-image-caption="<p>{/exp:typographee}</p><div>The researchers were able to spoof a wide range of email addresses</div>">
	  <img data-src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-08-31_at_2.54.47_PM_.png" alt="Screenshot of a spoofed email " src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-08-31_at_2.54.47_PM_.png">
	  
	  <figcaption>
	    <p>The researchers were able to spoof a wide range of email addresses</p>
	  </figcaption>
	  
	</figure>
	
										<h3><span><span>Potential solutions</span></span></h3>

<p><span><span>Researchers disclosed all vulnerabilities and attacks to providers. Zoho patched their issue and awarded the team a bug bounty. Microsoft also awarded a bug bounty and confirmed the vulnerabilities. Mailing list service Gaggle said it would change protocols to resolve the issue. Gmail also fixed the issues the team reported and iCloud is investigating.&nbsp;</span></span></p>

<p><span><span>But to truly get to the root of the issue, researchers recommend disabling open forwarding, a process that allows users to configure their account to forward messages to any designated email address without any verification by the destination address. This process is in place for Gmail and Outlook. In addition, providers such as Gmail and Outlook implicity trust high-profile email services, delivering messages forwarded by these emails regardless.&nbsp;</span></span></p>

<p><span><span>Providers should also do away with the assumption that emails coming from another major provider are legitimate, a process called relaxed validation policies.</span></span></p>

<p><span><span>In addition, researchers recommend that mailing lists request confirmation from the true sender address before delivering email.&nbsp;</span></span></p>

<p><span><span>“A more fundamental approach would be to standardize various aspects of forwarding,” the researchers write. “However, making such changes would require system-wide cooperation and will likely encounter many operational issues.”&nbsp;</span></span></p>
													
								 	</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
							
						   <h3><span><span>Methods&nbsp;</span></span></h3>

<p><span><span>For each service, researchers created multiple test accounts and used them to forward email to recipient accounts they controlled. They then analyzed the resulting email headers to better understand which forwarding protocol the service used. They tested their attacks on 14 email providers, which are used by 46% of the most popular internet domains and government domains.&nbsp;</span></span></p>

<p><span><span>They also created mailing lists under existing services provided by UC San Diego, and by mailing list service Gaggle.&nbsp;</span></span></p>

<p><span><span>Researchers only sent spoofed email messages to accounts they created themselves. They first tested each attack by spoofing domains they created and controlled. Once they verified that the attacks worked, they ran a small set of experiments that spoofed emails from real domains. Still, the spoofed emails were only sent to test accounts the researchers created.&nbsp;</span></span></p>

<p><span><span>“One fundamental issue is that email security protocols are distributed, optional and independently configured components,” the researchers write. This creates a large and complex attack surface with many possible interactions that cannot be easily anticipated or administrated by any single party. “</span></span></p>



<p><a href="https://arxiv.org/pdf/2302.07287.pdf"><span><span><span>Forward Pass: On the Security Implications of Email Forwarding Mechanism and Policy</span></span></span></a></p>

<p><span><span>Alex Enze Liu, Ariana Mirian, Grant Ho, Geoffrey M. Voelker and Stefan Savage, UC San Diego Department of Computer Science and Engineering</span></span></p>

<p><span><span>Gautam Akiwate, Stanford University</span></span></p>

<p><span><span>Mattijs Jonker, University of Twente, Netherlands</span></span></p>


										
						</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		    
		  <!-- END CONTENT BLOCK -->
		  
	
	  
      
  

  <!-- START TOPICS & SHARE MOBILE  -->
  <div>
    <!--
  This renders topics, share this, and optional text copy
  - Supported variables
  -- topics
-->

	
	<!-- begin new story format -->
	
		
		
		
		<h2>Share This:</h2>
		
	<!-- end new story format -->	
		

  </div>
  <!-- END TOPICS & SHARE MOIBILE -->
</section>

	

	<section>
        <div>
    <h2>
      You May Also Like
    </h2>
    
  </div>
        
        <div>
                     
                     
                     
	                     <p><a href="https://today.ucsd.edu/story/avocado-genome-is-at-the-center-of-new-study" alt="Avocado Genome is at the Center of New Study">
	                             <img srcset="https://today.ucsd.edu/news_uploads/_special-lead-mobile/PR20230905_avocado_genome.jpg 350w, https://today.ucsd.edu/news_uploads/_special-lead-desk/PR20230905_avocado_genome.jpg 864w" sizes="(min-width: 768px) 864px, 350px" data-src="https://today.ucsd.edu/news_uploads/_special-lead-desk/PR20230905_avocado_genome.jpg" alt="Avocado Genome is at the Center of New Study" width="750" height="488">
	                         </a>
	                     </p>
                     
                     
                 </div>
        
        
        
        
        <div>
                        
                        
                        
	                        <p><a href="https://today.ucsd.edu/story/avocado-genome-is-at-the-center-of-new-study" alt="Avocado Genome is at the Center of New Study">
	                                <img srcset="https://today.ucsd.edu/news_uploads/_special-lead-mobile/PR20230905_avocado_genome.jpg 350w, https://today.ucsd.edu/news_uploads/_special-lead-desk/PR20230905_avocado_genome.jpg 864w" sizes="(min-width: 768px) 864px, 350px" data-src="https://today.ucsd.edu/news_uploads/_special-lead-desk/PR20230905_avocado_genome.jpg" alt="Avocado Genome is at the Center of New Study" width="750" height="488">
	                            </a>
	                        </p>
                        
                    </div>
    </section>
	<div id="subscribe">
    <div>
        <h2>Stay in the Know</h2>
        <p>Keep up with all the latest from UC San Diego. Subscribe
          to the newsletter today.
        </p>
      </div>
    <div>
        <form novalidate="" data-subscribe-form="" action="subscribe.html" method="post" data-form_type="newsletter_signup">
          <div>
            <p><label for="subscriber-email">
              Email
            </label>
            </p><div data-validation-message="email">
              <p>Please provide a valid email address.</p></div>
          </div>
          
        </form>
      </div>
  </div>
<!-- START Subscribe Modal -->

<!-- STOP Subscribe Modal -->
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Conway's Game of Life in TypeScript's type system (173 pts)]]></title>
            <link>https://github.com/RuyiLi/cursed-typescript/blob/master/random/game-of-life.ts</link>
            <guid>37438028</guid>
            <pubDate>Fri, 08 Sep 2023 19:11:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/RuyiLi/cursed-typescript/blob/master/random/game-of-life.ts">https://github.com/RuyiLi/cursed-typescript/blob/master/random/game-of-life.ts</a>, See on <a href="https://news.ycombinator.com/item?id=37438028">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:RuyiLi/cursed-typescript" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="rXhtpzy8T9tucZdfmMism4ayvoGzHadW86FR021itWZfgseLIjvzySHHUN1YZIuK85p-0pdgfSbBZ9oaPpnXHg" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="RuyiLi/cursed-typescript" data-current-org="" data-current-owner="RuyiLi" data-logged-in="false">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="feedback-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
    </p>
    
  </div>
      
      
</modal-dialog></div>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="custom-scopes-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      
      
</modal-dialog></div>
    </custom-scopes>
  </div>
</qbsearch-input>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=RuyiLi%2Fcursed-typescript" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/RuyiLi/cursed-typescript/blob/master/random/game-of-life.ts&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="db9c2b08cfb028db801ca0caba8afdbeaf76a7397a7fe31cb8f14e68d77f8efd" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Safety Inspector Fired for Finding Too Many Defects Could Cost Railroad Millions (219 pts)]]></title>
            <link>https://jalopnik.com/safety-inspector-fired-for-finding-too-many-defects-cou-1850817520</link>
            <guid>37437764</guid>
            <pubDate>Fri, 08 Sep 2023 18:51:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jalopnik.com/safety-inspector-fired-for-finding-too-many-defects-cou-1850817520">https://jalopnik.com/safety-inspector-fired-for-finding-too-many-defects-cou-1850817520</a>, See on <a href="https://news.ycombinator.com/item?id=37437764">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>You would think that if you worked as a track inspector for a railroad company, reporting defects would make you good at your job. After all, wouldn’t the company want to know where its trains should slow down and where repairs need to be made? Ignoring those problems <span><a data-ga="[[&quot;Embedded Url&quot;,&quot;Internal link&quot;,&quot;https://jalopnik.com/overworked-inspector-missed-major-track-problems-two-da-1850699999&quot;,{&quot;metric25&quot;:1}]]" href="https://jalopnik.com/overworked-inspector-missed-major-track-problems-two-da-1850699999">would be a recipe for train derailments</a></span> that could cost the company a lot of money and could injure or even kill employees. According to former track inspector Don Sanders, you would be wrong, at least if you work for <span><a data-ga="[[&quot;Embedded Url&quot;,&quot;Internal link&quot;,&quot;https://jalopnik.com/over-2-000-railroad-workers-filed-safety-complaints-ove-1850320431&quot;,{&quot;metric25&quot;:1}]]" href="https://jalopnik.com/over-2-000-railroad-workers-filed-safety-complaints-ove-1850320431">Burlington Northern Santa Fe</a></span>.</p><div data-video-id="195640" data-monetizable="true" data-position="sidebar" data-video-title="2024 Polestar 2 | First Drive" data-video-blog-id="12" data-video-network="jalopnik" data-video-duration="238" data-playlist="195640,195639,195630" data-current="195640"><div><p>2024 Polestar 2 | First Drive</p></div><video disablepictureinpicture="" muted="" playsinline="" width="100%" height="100%" crossorigin="anonymous" preload="none"><source data-src="https://vid.kinja.com/prod/195640/195640_240p.mp4" label="240p" type="video/mp4"><source data-src="https://vid.kinja.com/prod/195640/195640_480p.mp4" label="480p" type="video/mp4"><source data-src="https://vid.kinja.com/prod/195640/195640_720p.mp4" label="720p" type="video/mp4"><source data-src="https://vid.kinja.com/prod/195640/195640_1080p.mp4" label="1080p" type="video/mp4"><track kind="captions" label="English" src="https://kinja.com/api/videoupload/caption/21134.vtt" srclang="en"></video><div><ul><li data-label="">Off</li><li data-label="English">English</li></ul></div></div><p><span><a data-ga="[[&quot;Embedded Url&quot;,&quot;External link&quot;,&quot;https://kstp.com/kstp-news/top-news/a-track-inspector-claimed-he-was-fired-for-reporting-too-many-defects-his-secret-recordings-may-cost-bnsf-millions/&quot;,{&quot;metric25&quot;:1}]]" href="https://kstp.com/kstp-news/top-news/a-track-inspector-claimed-he-was-fired-for-reporting-too-many-defects-his-secret-recordings-may-cost-bnsf-millions/" target="_blank" rel="noopener noreferrer">KSTP-TV reports</a></span> Sanders had previously sued BNSF back in 2017, claiming he was retaliated against after he reported “too many defects.” The jury found in his favor, and BNSF is currently appealing the multi-million-dollar judgment. This isn’t the first time BNSF found itself in court, either. After a train derailed back in March, the news channel  “...found BNSF had repeatedly been sanctioned or admonished in court for destroying evidence or retaliating against employees.”</p><p>But now, KSTP-TV has obtained a series of previously unreleased secretly recorded phone calls from the lawsuit. And let’s just say they do not make BNSF look good. In one, you can hear an employee ask, “Why can’t we just fix the (expletive) defects?” In another from 2015, Sanders’ supervisor is clearly upset that he called the Federal Railroad Administration.</p><p>“Why in the world would we ever call the FRA about anything? Unless I’m absolutely blatantly telling you to break the rules,” the supervisor says. “They know the rule book better than anybody,” Sanders responds. “Have I ever called the FRA on you because you told me not to follow the rules like you do all the time? No.”</p><p>Another former BNSF track inspector, Kevin Gaylor, told KSTP-TV he<!-- --> was working with Sanders on a track inspection trip when they both received a call from their boss criticizing their performance. “We were both called and criticized for putting out too many slow order defects,” Gaylor said. “Every track inspector on this system can tell you their experiences about the pressure that’s put on.”</p><p>A slow order is given when a defect is found that is serious enough that trains need to reduce their speed until they pass. </p><p>In another one of the calls, Sanders’ boss sounds upset about a reported defect potentially putting his job in jeopardy, saying, “All I can say is I need your help right now to keep my ass from getting fired.” “I need to just look the other way?” Sanders responds. “No. We just need to have a conversation,” his boss replies.</p><p>According to court records obtained by KSTP-TV, that supervisor still has his job and was actually given a raise and a near <!-- -->$20,000 bonus. The performance review that led to that raise and bonus specifically referenced the fact that “Don Sanders is no longer working for BNSF” and the reduction in slow orders.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FTC judge decides Intuit’s ‘free’ TurboTax ads misled consumers (328 pts)]]></title>
            <link>https://www.theverge.com/2023/9/8/23864538/turbotax-intuit-ftc-deceptive-practices-free-tax-filing</link>
            <guid>37437311</guid>
            <pubDate>Fri, 08 Sep 2023 18:19:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/2023/9/8/23864538/turbotax-intuit-ftc-deceptive-practices-free-tax-filing">https://www.theverge.com/2023/9/8/23864538/turbotax-intuit-ftc-deceptive-practices-free-tax-filing</a>, See on <a href="https://news.ycombinator.com/item?id=37437311">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article id="content"><div><div><div><h2>FTC judge decides Intuit’s ‘free’ TurboTax ads did mislead consumers</h2><p><span><span> / </span><h2>The FTC ruled TurboTax ‘deceived consumers’ by advertising its tax filing service as ‘free.’</h2></span></p></div><div><p><span>By</span> <span><span></span> <span><a href="https://www.theverge.com/authors/emma-roth">Emma Roth</a></span><span>, <span>a news writer who covers the streaming wars, consumer tech, crypto, social media, and much more. Previously, she was a writer and editor at MUO. </span></span></span></p><p><time datetime="2023-09-08T17:52:39.793Z"> <!-- -->Sep 8, 2023, 5:52 PM UTC</time><span>|</span></p><div><h2>Share this story</h2></div></div></div><div><figure><span><span></span><img alt="A photo showing the TurboTax logo on a laptop" sizes="(max-width: 768px) calc(100vw - 100px), (max-width: 1180px) 700px, 600px" srcset="https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/16x11/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 16w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/32x21/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 32w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/48x32/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 48w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/64x43/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 64w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/96x64/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 96w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/128x85/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 128w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/256x171/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 256w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/376x251/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 376w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/384x256/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 384w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/415x277/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 415w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/480x320/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 480w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/540x360/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 540w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/640x427/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 640w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/750x500/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 750w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/828x552/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 828w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1080x720/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1080w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1200x800/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1200w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1440x960/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1440w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1920x1280/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1920w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/2048x1365/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 2048w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/2400x1600/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 2400w" src="https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/2400x1600/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg" decoding="async" data-nimg="responsive"></span><p><cite>Image: Getty</cite></p></figure></div></div><div><div><p>Intuit, the parent company of TurboTax, is still facing blowback over claims it tricked people into using its “free” tax filing service that wasn’t actually free. In <a href="https://www.ftc.gov/news-events/news/press-releases/2023/09/administrative-law-judge-issues-initial-decision-ftcs-case-against-intuit-inc?utm_campaign=administrative_law_judge_&amp;utm_content=1694185883&amp;utm_medium=social&amp;utm_source=twitter">a ruling on Friday</a>, the Federal Trade Commission’s chief administrative law judge (ALJ) ruled that Intuit “deceived consumers” and “engaged in deceptive advertising.”</p><div><p>The <a href="https://www.ftc.gov/system/files/ftc_gov/pdf/intuit_initial_decision_public_redacted_1.pdf">ruling includes several pages</a> of commercials and online ads where Intuit advertised its “Free Edition” software. While the name implies that the service is, well, <em>free</em>, people wound up having to pay to use it — <a href="https://www.theverge.com/2022/3/29/23002219/ftc-turbo-tax-irs-free-tax-prep-software-intuit-misleading">sparking a lawsuit from the FTC</a> and a <a href="https://www.theverge.com/2022/5/4/23057463/intuit-141-million-agreement-new-york-attorney-general-turbotax-free">$141 million payout to affected users</a>. Meanwhile, Intuit’s <em>actually</em> no-cost Free File version, which it launched in partnership with the IRS, <a href="https://www.theverge.com/2019/4/26/18518211/turbotax-free-tax-filing-hidden-google-search-results">remained exceedingly difficult to find</a>. In 2021, Intuit <a href="https://www.theverge.com/2021/7/17/22581587/turbotax-parent-company-intuit-opts-out-irs-free-file-program">exited the program</a> after the <a href="https://www.theverge.com/2020/1/1/21045779/irs-turbotax-free-file-h-r-block-tax-preparation-new-rules">IRS stopped letting companies</a> hide their free filing services from search engines.</p></div><p>The FTC’s ALJ determined that there is a “cognizant danger of a recurring violation” by Intuit and issued a cease-and-desist order that prohibits the company from “engaging in deceptive practices in the future.” The ruling prevents Intuit from representing a product as free unless it actually <em>is</em> free for everyone to use and “clearly and conspicuously discloses any terms that would limit the offer.”</p><p><a href="https://www.intuit.com/blog/news-social/intuit-responds-to-u-s-federal-trade-commissions-anticipated-decision-and-reaffirms-its-commitment-to-free-tax-preparation/">In a response provided</a> in advance of the FTC’s ruling, Intuit calls the agency’s investigation process “flawed and highly questionable,” noting “Intuit already adheres to most of the advertising practices in the FTC’s erroneous decision.” The company adds that it has “been clear, fair, and transparent” with customers and remains “committed to free tax preparation.”</p><div><p>Hopefully, we won’t need to rely on potentially deceptive third parties to file our taxes online going forward. The IRS is working on a government-backed <a href="https://www.theverge.com/2023/5/17/23727414/irs-free-direct-tax-filing-test">free filing service that it will pilot during the 2024 tax season</a>.</p></div></div><div><p>Most Popular</p><ol><li><a href="https://www.theverge.com/2023/9/7/23862311/google-chrome-redesign-material-you-web-store"><h2>Chrome is about to look a bit different</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/7/23863192/google-pixel-8-pro-watch-2"><h2>Google teaser previews Pixel Watch 2 and both Pixel 8 phones</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/7/23863258/bmw-cancel-heated-seat-subscription-microtransaction"><h2>BMW drops plan to charge a monthly fee for heated seats</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/8/23864172/tesla-next-generation-car-cybertruck-design-price"><h2>Tesla’s $25,000 ‘next-generation car’ will have a Cybertruck design</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/8/23864150/ios-16-6-1-iphone-security-vulnerability-0-day-exploit-patch-update"><h2>iOS 16.6.1 fixes a big iPhone security vulnerability used to install Pegasus spyware</h2></a><hr></li></ol></div></div></article></div></div>]]></description>
        </item>
    </channel>
</rss>