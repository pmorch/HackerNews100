<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 12 May 2024 07:00:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[HNInternal: Show HN: Open-Source Video Editor Web App (102 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=40331968</link>
            <guid>40331968</guid>
            <pubDate>Sun, 12 May 2024 02:35:03 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=40331968">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="40331968">
      <td><span></span></td>      <td><center><a id="up_40331968" href="https://news.ycombinator.com/vote?id=40331968&amp;how=up&amp;goto=item%3Fid%3D40331968"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=40331968">Show HN: Open-Source Video Editor Web App</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_40331968">99 points</span> by <a href="https://news.ycombinator.com/user?id=zenkyu">zenkyu</a> <span title="2024-05-12T02:35:03"><a href="https://news.ycombinator.com/item?id=40331968">4 hours ago</a></span> <span id="unv_40331968"></span> | <a href="https://news.ycombinator.com/hide?id=40331968&amp;goto=item%3Fid%3D40331968">hide</a> | <a href="https://hn.algolia.com/?query=Show%20HN%3A%20Open-Source%20Video%20Editor%20Web%20App&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=40331968&amp;auth=60c7af9da3a83750a68a52b3c2aad9d154dd5483">favorite</a> | <a href="https://news.ycombinator.com/item?id=40331968">20&nbsp;comments</a>        </span>
              </td></tr>
    <tr></tr><tr><td colspan="2"></td><td><div><p>Hey everyone, for the past like six months I've been working on a portfolio project. I got tired of doing easy projects, so I decided to tackle something bigger and more challenging. That's when I came up with the idea of a video editor. This piece of work is intended to showcase my skills and land me a job, but I like to think when working on projects that my idea is so cool that people will like to use it, and I treat every project like a startup idea. Also I havent seen many open source video editors especially on web so that was one of the points why I decided to make that and not something else, but in the end its learning experience and im not expecting much if at all.</p><p>A bit about the video editor itself:</p><p>-website: <a href="https://omniclip.app/" rel="nofollow">https://omniclip.app/</a></p><p>-its free</p><p>-its open source (MIT Licensed)</p><p>-its using Webcodecs API for quick rendering</p><p>-works fully inside browser, client side, no private data is kept</p><p>-I made some readme with more details, im not expecting contributions but I added bit about it: <a href="https://github.com/aegir-assembly/omni-clip">https://github.com/aegir-assembly/omni-clip</a></p><p>Features:</p><p>-Trimming</p><p>-Splitting</p><p>-Supports - Text, Audio, Video (mp4) and Images</p><p>-Clip editing on preview - rotating, resizing, text styling and more</p><p>-Undo/Redo</p><p>-Render in different resolutions, up to 4k.</p><p>Things to know before using this editor:</p><p>-it is simple editor, but its my main project im working on and improving it.</p><p>-right now it only works with videos 25 fps and more but not less</p><p>-only 4 tracks -- its something I could improve quickly but forgot</p><p>-bug here and there (eg. filmstrip not rendering until timeline scroll moved)</p><p>-its not working on phones yet (drag and drop API problems)</p><p>I'd love to hear your thoughts and feedback on it.</p></div></td></tr>        <tr></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Vision Transformers Need Registers (118 pts)]]></title>
            <link>https://openreview.net/forum?id=2dnO3LLiJ1</link>
            <guid>40329675</guid>
            <pubDate>Sat, 11 May 2024 18:08:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openreview.net/forum?id=2dnO3LLiJ1">https://openreview.net/forum?id=2dnO3LLiJ1</a>, See on <a href="https://news.ycombinator.com/item?id=40329675">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><strong>Code Of Ethics<!-- -->:</strong> <span>I acknowledge that I and all co-authors of this work have read and commit to adhering to the ICLR Code of Ethics.</span></p><p><strong>Keywords<!-- -->:</strong> <span>representation, vision, transformer, register, SSL, CLIP, attention, attention map, interpretability, DINO, DINOv2</span></p><p><strong>Submission Guidelines<!-- -->:</strong> <span>I certify that this submission complies with the submission instructions as described on https://iclr.cc/Conferences/2024/AuthorGuide.</span></p><p><strong>TL;DR<!-- -->:</strong> <span>We find artifacts in ViT features. We add new tokens (“registers”) that fix this issue.</span></p><p><strong>Abstract<!-- -->:</strong> <span>Transformers have recently emerged as a powerful tool for learning visual representations. In this paper, we identify and characterize artifacts in feature maps of both supervised and self-supervised ViT networks. The artifacts correspond to high-norm tokens appearing during inference primarily in low-informative background areas of images, that are repurposed for internal computations. We propose a simple yet effective solution based on providing additional tokens to the input sequence of the Vision Transformer to fill that role. We show that this solution fixes that problem entirely for both supervised and self-supervised models, sets a new state of the art for self-supervised visual models on dense visual prediction tasks, enables object discovery methods with larger models, and most importantly leads to smoother feature maps and attention maps for downstream visual processing.</span></p><p><strong>Anonymous Url<!-- -->:</strong> <span>I certify that there is no URL (e.g., github page) that could be used to find authors' identity.</span></p><p><strong>No Acknowledgement Section<!-- -->:</strong> <span>I certify that there is no acknowledgement section in this submission for double blind review.</span></p><p><strong>Primary Area<!-- -->:</strong> <span>unsupervised, self-supervised, semi-supervised, and supervised representation learning</span></p><p><strong>Submission Number<!-- -->:</strong> <span>3647</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Immersive Math (584 pts)]]></title>
            <link>http://immersivemath.com/ila/index.html</link>
            <guid>40329388</guid>
            <pubDate>Sat, 11 May 2024 17:16:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://immersivemath.com/ila/index.html">http://immersivemath.com/ila/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=40329388">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <h4><a href="http://immersivemath.com/ila/ch00_preface/preface.html">Preface</a></h4>
          <p>A few words about this book. </p>

          <h4><a href="http://immersivemath.com/ila/ch01_introduction/ch01.html">Chapter 1: Introduction</a></h4>

          <p>How to navigate, notation, and a recap of some math that we think you already know. </p>

          <h4><a href="http://immersivemath.com/ila/ch02_vectors/ch02.html">Chapter 2: Vectors</a></h4>
          <p>The concept of a vector is introduced, and we learn how to add and subtract vectors, and more. </p>

          <h4><a href="http://immersivemath.com/ila/ch03_dotproduct/ch03.html">Chapter 3: The Dot Product</a></h4>
          <p>A powerful tool that takes two vectors and produces a scalar.</p>

          <h4><a href="http://immersivemath.com/ila/ch04_vectorproduct/ch04.html">Chapter 4: The Vector Product</a></h4>
          <p>In three-dimensional spaces you can produce a vector from two other vectors using this tool.</p>

          <h4><a href="http://immersivemath.com/ila/ch05_gausselim/ch05.html">Chapter 5: Gaussian Elimination</a></h4>
          <p>A way to solve systems of linear equations.</p>
        </div><div>
          <h4><a href="http://immersivemath.com/ila/ch06_matrices/ch06.html">Chapter 6: The Matrix</a></h4>
          <p>Enter the matrix.</p>

          <h4><a href="http://immersivemath.com/ila/ch07_determinants/ch07.html">Chapter 7: Determinants</a></h4>
          <p>A fundamental property of square matrices.</p>

          <h4><a href="http://immersivemath.com/ila/ch08_rank/ch08.html">Chapter 8: Rank</a></h4>
          <p>Discover the behaviour of matrices.</p>

          <h4><a href="http://immersivemath.com/ila/ch09_linear_mappings/ch09.html">Chapter 9: Linear Mappings</a></h4>
          <p>Learn to harness the power of linearity...</p>

          <h4><a href="http://immersivemath.com/ila/ch10_eigen/ch10.html"> Chapter 10: Eigenvalues and Eigenvectors</a></h4>
          <p>This chapter has a value in itself.</p>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Metabolism of autism reveals developmental origins (132 pts)]]></title>
            <link>https://medicalxpress.com/news/2024-05-metabolism-autism-reveals-developmental.html</link>
            <guid>40328616</guid>
            <pubDate>Sat, 11 May 2024 15:18:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://medicalxpress.com/news/2024-05-metabolism-autism-reveals-developmental.html">https://medicalxpress.com/news/2024-05-metabolism-autism-reveals-developmental.html</a>, See on <a href="https://news.ycombinator.com/item?id=40328616">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
									    
<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2024/autism-1.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2024/autism-1.jpg" data-sub-html="Credit: Pixabay/CC0 Public Domain">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2024/autism-1.jpg" alt="autism" title="Credit: Pixabay/CC0 Public Domain" width="800" height="530">
             <figcaption>
                Credit: Pixabay/CC0 Public Domain
            </figcaption>        </figure>
    </div><p>Researchers at the University of California San Diego School of Medicine have shed new light on the changes in metabolism that occur between birth and the presentation of autism spectrum disorder (ASD) later in childhood. The researchers discovered that a small number of biochemical pathways are responsible for the majority of these changes, which could help inform new early detection and prevention strategies for autism.</p>

                                        
                                                                                  
                                        
                                                                                                                                    
<p>"At birth, the physical appearance and behavior of a child who will develop <a href="https://medicalxpress.com/tags/autism/" rel="tag">autism</a> over the next few years are indistinguishable from that of a neurotypical child. Indeed, in most cases the fate of the child with regard to autism is not set at birth," said Robert Naviaux, M.D., Ph.D., professor in the Departments of Medicine, Pediatrics and Pathology at UC San Diego School of Medicine.</p>
<p>"We're starting to learn about the governing dynamics that regulate the transition from risk to the actual appearance of the first symptoms of ASD. Early diagnosis opens the possibility of early intervention and optimal outcomes."</p>
<p>ASD is a <a href="https://medicalxpress.com/tags/developmental+disorder/" rel="tag">developmental disorder</a> characterized by difficulties in socializing and communication, as well as repetitive and/or restrictive behaviors. For the majority of people with ASD, the condition is a significant disability, with only 10–20% of children diagnosed before 5 years of age able to live independently as adults.</p>
<p>While autism is known to have strong genetic risk factors, there are also environmental risk factors that play a role in the development and severity of ASD. Naviaux and other researchers are discovering that the development of autism is governed by the real-time interaction of these varied factors. By studying the developmental biology of <a href="https://medicalxpress.com/tags/metabolism/" rel="tag">metabolism</a> and how it differs in autism, new insights are emerging in ASD and other complex developmental disorders.</p>

                                                                                                        <!-- Google middle Adsense block -->
    
                                                                                                                                            <p>"Behavior and metabolism are linked—you cannot separate them," added Naviaux.</p>
<p>To learn more about the early metabolic changes that occur in children with autism, researchers studied two cohorts of children. One cohort consisted of newborn children, in whom autism can't be detected. The second cohort consisted of 5-year-old children, some of whom had been diagnosed with autism.</p>
<p>When comparing the metabolic profiles of children in the cohort who were eventually diagnosed with autism to those who developed neurotypically, they found striking differences. Of the 50 different biochemical pathways the researchers investigated, just 14 were responsible for 80% of the metabolic impact of autism.</p>
<p>The pathways that were most changed are related to the <a href="https://pubmed.ncbi.nlm.nih.gov/23981537/" target="_blank">cell danger response</a>, a natural and universal cellular reaction to injury or metabolic stress. The body has biochemical safeguards in place that can shut down the cell danger response once the threat has passed, and Naviaux hypothesizes that autism occurs when these safeguards fail to develop normally. The result is heightened sensitivity to <a href="https://medicalxpress.com/tags/environmental+stimuli/" rel="tag">environmental stimuli</a>, and this effect contributes to sensory sensitivities and other symptoms associated with autism.</p>
<p>"Metabolism is the language that the brain, gut and immune system use to communicate, and autism occurs when the communication between these systems is changed," added Naviaux.</p>

                                                                                                                                            <p>The cell danger response is primarily regulated by <a href="https://medicalxpress.com/tags/adenosine+triphosphate/" rel="tag">adenosine triphosphate</a> (ATP) the body's chemical energy currency. While these ATP-signaling pathways do not develop normally in autism, they may be partially restorable with existing <a href="https://medicalxpress.com/tags/pharmaceutical+drugs/" rel="tag">pharmaceutical drugs</a>. In 2017, Naviaux and his team completed early clinical testing for suramin, the only drug approved in humans that can target ATP signaling and which is normally used to treat African sleeping sickness.</p>
<p>Now, the researchers hope that by revealing the specific ATP-related pathways that are altered in autism, their work will help scientists develop more drugs that target these pathways to manage the symptoms of ASD.</p>
<p>"Suramin is just one drug that targets the cell danger response," he said. "Now that we're closely interrogating how metabolism changes in ASD, we could be at the beginning of a drug renaissance that will create new options for treatment that never existed before."</p>
<p>The study is published in the journal <i>Communications Biology</i>.</p>


                                                                                                                                                                            
                                        											<div>
												                                                    <p><strong>More information:</strong>
                                                    <i>Communications Biology</i> (2024). <a href="https://www.nature.com/articles/s42003-024-06102-y" target="_blank">www.nature.com/articles/s42003-024-06102-y</a>
																								
																								</p>
																							</div>
                                        											
																					
                                                                                                                        
                                        <!-- print only -->
                                        <div>
                                            <p><strong>Citation</strong>:
                                                 Metabolism of autism reveals developmental origins (2024, May 10)
                                                 retrieved 11 May 2024
                                                 from https://medicalxpress.com/news/2024-05-metabolism-autism-reveals-developmental.html
                                            </p>
                                            <p>
                                            This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no
                                            part may be reproduced without the written permission. The content is provided for information purposes only.
                                            </p>
                                        </div>
                                        
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[PeaZip: Open-source file compression and encryption software (251 pts)]]></title>
            <link>https://peazip.github.io/</link>
            <guid>40327631</guid>
            <pubDate>Sat, 11 May 2024 12:19:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://peazip.github.io/">https://peazip.github.io/</a>, See on <a href="https://news.ycombinator.com/item?id=40327631">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <tbody>
          <tr>
            <td>
            <ul>
            </ul>
            <ul>
              <li>
                <p><a href="https://peazip.github.io/index.html#open_extract_rar_tar_zip_files">OPEN
SOURCE FILE COMPRESSION AND ENCRYPTION SOFTWARE</a></p>
              </li>
              <li>
                <p><a href="https://peazip.github.io/index.html#open_source_file_compression_and_encryption_software">PEAZIP
FREE ARCHIVER DOWNLOAD NOTES</a></p>
              </li>
            </ul>
            
            <a href="https://peazip.github.io/index.html#free_file_archiver_software" name="open_extract_rar_tar_zip_files"></a><br>
            <h2><a href="#free_file_archiver_software"><big><big><big>Open
Source file compression and
encryption
software</big></big></big></a></h2>
            <h3><big><span>What is
PeaZip
free
file archiver utility</span></big><br>
            </h3>
            <p>PeaZip is a free file
archiver
utility, similar to WinRar, WinZip, and 7-Zip (or File Roller, and Ark
on Linux), based on Open Source technologies of <a href="https://peazip.github.io/7zip-files-utility.html">7-Zip / p7zip archiver</a>, <a href="https://peazip.github.io/zstandard-compression-utility.html">Facebook Zstandard compressor</a>,
FreeArc, <a href="https://peazip.github.io/brotli-compression-utility.html">Google
Brotli compressor</a>, <a href="https://peazip.github.io/paq-files-compression-utility.html">PAQ
family of compressors</a>, <a href="https://peazip.github.io/pea-archiving-utility.html">PEA
(archiving and encryption) project</a>, and other Free Software file
compression tools.</p>
            <br>
            
            
            <p><big><span>What is different
in PeaZip?</span></big><br>
            </p>
            <p>The project started aiming to provide features often
overlooked in applications of the same type.<br>
            </p>
            <ul>
              <li><span>Be CLI-friendly</span>:
bridge the gap between GUI and
CLI applications to offer the best of the two worlds, blending the
archive manager into a <span>scripting
engine</span> to automate compression / archiving / backup /
extraction... <span></span>tasks.<br>
              </li>
            </ul>
            <p>From
"Console"
tab in archiving and extraction screens, the tasks defined in the GUI
can be exported as CLI scripts, i.e. for reuse, syntax learning or
inspection purpose, of for refining the tasks beyond the capabilities
of the GUI.</p>
            <ul>
              <li><span>Offer two factor
authentication</span> (password + keyfile)
for all formats supporting encryption, to increase security against
guessing and dictionary based attacks on weak passwords.</li>
            </ul>
            <ul>
              <li><span>Provide a GUI for
less commonly supported compression
formats</span> - which comes from very interesting research threads in
compression field, like the very powerful compressor zpaq or very
fast ones as brotli, and zstandard - and provide a platform-agnostic
GUI for 7z/p7zip on non-Windows systems.</li>
            </ul>
            <ul>
              <li><span>Provide multiple
file management features</span> each of
whom meeting the needs of different use cases, like verification of a
wide array of checksum and hash functions, find duplicates, <span>convert archives</span>, <span>search in
archives</span>, bookmarks, <span>tabbed
browsing</span>, etc.</li>
            </ul>
            <ul>
              <li><span>Deploy all the above
in a tool which is natively portable</span>, can
be used from removable devices or shared on a network / cloud, without
installation, and offers the same UX on all operating systems and
desktop
environments.</li>
            </ul>
            <br>
            <h2><a href="https://peazip.github.io/screenshots-peazip-1.html"><img src="https://peazip.github.io/peazip.png" alt="free file archiver utility" title="PeaZip free archiver utility"></a></h2>
            <p><span>PeaZip screenshot running on Windows in
light mode, default theme. </span><br>
            <span>Click the image to see
screenshots on different Operating Systems,
alternative themes and dark mode.<span></span></span><br>
            <span><span></span></span></p>
            <span><span></span></span> <h3><big><span>Main features of
PeaZip free archiver</span></big><br>
            </h3>
            <ul>
              <li><span>Open Source</span>,
released under LGPLv3 license which allows to easily integrate it in
any licensing environment</li>
            </ul>
            <ul>
              <li><span>Cross-platform</span>
and cross-architecture, <span>same full
featured GUI application on Linux, macOS, and Windows</span>, providing
full featured file manager and archive manager on all platforms, also <span>available as portable application</span></li>
            </ul>
            <ul>
              <li>Supports over 200 archive
formats<span>, ranging from very <span>powerful compressor</span>s like 7Z and
ZPAQ, to <span>extremely fast compressors</span>
like Brotli and Zstandard, with option to easily <span>convert archives</span></span></li>
            </ul>
            <ul>
              <li><span>Supports strong
encryption</span>, optionally <span>two
factor authentication</span> and <span>authenticated
encryption</span></li>
            </ul>
            <ul>
              <li>Can easily <span>export
tasks defined in the GUI as command line scripts</span></li>
            </ul>
            <br>
            <big><span>Safety of Open
Source
software</span></big><p>
            
PeaZip is Free Software, employing technologies from
state of art 7-Zip,
p7zip, Brotli, FreeArc, PAQ, PEA, Zstandard open source file
compression and archiving projects.</p><p>
            
This software is released under Open
Source GNU LGPLv3
copyleft license: the application is free for
any use (private and professional). </p><p>
            
All PeaZip packages are safe downloads, do not contain
advertising or harmful software, and are identified with
cryptographically secure SHA256 hash published on official download
site.</p>
            <big>Advantages of
Portable packages</big><p>
            
Portable packages, available for Linux, macOS, and
Windows
operating systems as alternative to installable packages, does not need
installation: simply extract and use the application for maximum ease
of deployment.</p><h4><big>PeaZip free archiver in
details</big></h4>
            <br>
Cross-platform (Linux, macOS, Windows), full-featured
but user-friendly
alternative to WinRar,
WinZip and similar general purpose archive manager applications, <a href="https://peazip.github.io/how-to-open-rar-tar-zip-files.html">open</a>
and <a href="https://peazip.github.io/how-to-extract-rar-zip-archives.html">extract</a>
200+ archive formats: 001, <a href="https://peazip.github.io/7z-file-format.html">7Z</a>, <a href="https://peazip.github.io/ace-files-utility.html">ACE</a> (*), <a href="https://peazip.github.io/arc-files-utility.html">ARC</a>, ARJ, <a href="https://peazip.github.io/brotli-compressed-file-format.html">BR</a>, <a href="https://peazip.github.io/bzip2-file.html">BZ2</a>, <a href="https://peazip.github.io/cab-files-utility.html">CAB</a>,
DMG, GZ, <a href="https://peazip.github.io/iso-utility.html">ISO</a>,
LHA, PAQ, <a href="https://peazip.github.io/pea-file-format.html">PEA</a>, <a href="https://peazip.github.io/what-is-rar-file.html">RAR</a> (**), <a href="https://peazip.github.io/tar-file-format.html">TAR</a>,
UDF, <a href="https://peazip.github.io/wim-files.html">WIM</a>, XZ, <a href="https://peazip.github.io/zip-file-format.html">ZIP</a>, <a href="https://peazip.github.io/zipx-file-format.html">ZIPX</a>,
            <a href="https://peazip.github.io/zst-compressed-file-format.html">ZST</a>. View
full <a href="https://peazip.github.io/peazip-free-archiver.html">list of supported archive
file formats</a>
for archiving / compression, and for extraction. <p>
            
As archive manager utility, PeaZip provides
fast,
high compression ratio multi-format archiving to 7Z, ARC, Brotli, BZ2,
GZ,
PEA,
TAR, WIM, Zstandard and ZIP archives (write supported formats), and
works as
opener
/ extractor tool
for
200+ archive types including ACE, ISO, RAR, ZIPX files, including
ability to manage encrypted archives for supported formats. </p><p>
            
This software deploys a powerful and complete file
manager for editing, viewing, browsing and searching archive files,
featuring a
wide set of data security functions: <a href="https://peazip.github.io/encrypt-files.html">strong
encryption</a> (AES, Twofish, Serpent),
encrypted password manager, optional two-factor authentication
(encryption / decryption with password and keyfile), <a href="https://peazip.github.io/secure-delete.html">secure
delete</a><span></span>, and <a href="https://peazip.github.io/verify-checksum-hash.html">file
hashing</a> tools, easily export tasks defined in the GUI to <a href="https://peazip.github.io/peazip-command-line.html">create command line scripts</a>.</p><p>
            
For more information about archive creation and
extraction performances
compared with other popular file archivers tools, read file compression
and decompression <a href="https://peazip.github.io/peazip-compression-benchmark.html">PeaZip
benchmarks</a>
page.</p><p>
            
(*) To use the application to open and extract <span>ACE </span>files
it
is needed to install WinACE's UNACE plugin from PLUGINS page, otherwise
the program will lack the (proprietary) component to read .ace format.<br>
(**) <a href="https://peazip.github.io/free-rar-create.html">RAR files creation</a> with PeaZip
is possible if WinRar
is installed on the system (autonomous support to rar compression is
not possible due to rar licensing limitations). Please note <span>RAR </span>and <span>RAR5 </span>format opening / extraction is
supported out of the box: an optional plugin based on official RarLab's
unrar code is provided as alternative .rar extraction engine on PLUGINS
page, if preferred by user over 7-Zip / p7zip's Open Source unrar
implementation.</p>
            <h3><big><big><big><a href="#free_file_archiver_software">PeaZip
free archiver download notes</a></big></big></big></h3>
            <big>Download repositories</big><p>
            
Official repositories of PeaZip are available on <a target="_blank" href="https://github.com/peazip/PeaZip/releases/">GitHub <img title="PeaZip on GitHub" alt="open source downloads" src="https://peazip.github.io/extract-zip/github.png"></a>,
and <a target="_blank" href="https://sourceforge.net/projects/peazip/">Sourceforge&nbsp;<img alt="open source software repository" title="PeaZip on SourceForge" src="https://peazip.github.io/extract-zip/sourceforge.png"></a></p><p>
            
Legacy releases can be downloaded from aforementioned
repositories; each
release contains
program's
packages for different supported operating systems, documentation, and
sources.</p><big><span>Change log and
release notes</span></big><p>
            
See complete <a href="https://peazip.github.io/changelog.html">change
log and release notes</a> for list of updates and new features of the
application, and for <span>SHA256 hash
values of each package </span> published in the current release.</p><big>TOS and Privacy</big><p>
            
PeaZip is Open Source software, released under GNU LGPLv3 license,
documentation is released under GNU FDL license.<br>
Neither PeaZip software, nor PeaZip's website collects user data.<br>
See complete <a href="https://peazip.github.io/peazip-tos-privacy.html">TOS and Privacy page</a>.
            </p><big>Verify integrity of
downloaded
packages</big><p>
            
PeaZip free archiver packages are currently not signed,
but SHA256 is a
cryptographically strong hash, and it is served here through a secure
TLS/SSL website, so it can be used for check integrity and autenticity
of
the packages you are downloading. Download pages of Win64 and Win32
installers also shows SHA256
hash value of each packages for increased security of users. </p><p>
            
Please note that websites as peazip.com, as well as some
Microsoft Store publisher listing alleged PeaZip packages, are in no
way involved in PeaZip project: it is not recommended to download
PeaZip from sources outside the aforementioned official project's
repositories, and it is absolutley not recommended to install PeaZip
packages not matching the officially published hash values.</p><ul>
            </ul>
            <p>Synopsis: All downloads page
of
PeaZip free archiver utility, freeware file compression and encryption
software. Download Open Source, cross platform file archiver software
for Linux, macOS, and Windows. Open, extract RAR TAR ZIP files and many
other
archive types,
200+ formats supported.</p>
            <p>Topics: PeaZip free archiver
all downloads, Linux, macOS, Windows, sources<br>
            </p>
            <div><p>PeaZip &gt; Free file
archiver utility, open, extract RAR TAR ZIP files | All downloads</p></div>
            <table>
              <tbody>
                <tr>
                  <td><small><span>RECOMMENDED PAGES</span> </small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/free-rar.html">FREE RAR UTILITY</a><br>
                  </small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/zip-files-utility.html">FREE ZIP FILES SOFTWARE</a><br>
                  </small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/tar-windows.html">EXTRACT TAR FILES</a></small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/extract-encrypted-files.html">OPEN ENCRYPTED ARCHIVES</a></small></td>
                </tr>
              </tbody>
            </table>
            <small><small><small>&nbsp;</small></small></small><br>
            <table>
              <tbody>
                <tr>
                  <td><small><a href="https://peazip.github.io/peazip-macos.html">MACOS ARCHIVE MANAGER</a><br>
                  </small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/peazip-linux.html">LINUX ARCHIVE MANAGER</a></small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/encrypt-files.html">FREE ENCRYPTION SOFTWARE</a></small></td>
                  <td><small><br>
                  </small></td>
                  <td><small><a href="https://peazip.github.io/peazip-portable.html">PORTABLE FILE ARCHIVER UTILITY</a></small></td>
                </tr>
              </tbody>
            </table>
            
            </td>
          </tr>
        </tbody>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Wag, MFA and Enrollment for WireGuard (127 pts)]]></title>
            <link>https://github.com/NHAS/wag</link>
            <guid>40326615</guid>
            <pubDate>Sat, 11 May 2024 07:31:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/NHAS/wag">https://github.com/NHAS/wag</a>, See on <a href="https://news.ycombinator.com/item?id=40326615">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Wag</h2><a id="user-content-wag" aria-label="Permalink: Wag" href="#wag"></a></p>
<p dir="auto">Wag adds MFA, route restriction and device enrolment to wireguard.</p>
<p dir="auto">Key Features:</p>
<ul dir="auto">
<li>Define routes which require MFA authorisation, or public always accessible routes</li>
<li>Easy API for registering new clients</li>
<li>High Availability</li>
<li>Multiple MFA options, including webauthn, oidc and more</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/6820641/326241365-3a2b2dd9-15af-40c4-bb81-3e479d48425a.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTU0NjUxMDUsIm5iZiI6MTcxNTQ2NDgwNSwicGF0aCI6Ii82ODIwNjQxLzMyNjI0MTM2NS0zYTJiMmRkOS0xNWFmLTQwYzQtYmI4MS0zZTQ3OWQ0ODQyNWEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MTFUMjIwMDA1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9YTAxM2JkZTc3M2JjOGY0OTc4YjVmMzk4YmZiMGI2NTk5NmQyZjAyYjAxYjkyMjgxNWRiZjMwOGIwMjRiNGZkYiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.7FgIvurrZ8p5PYaCcZWm4AkeSqh8F5K-nR7xenokjHc"><img src="https://private-user-images.githubusercontent.com/6820641/326241365-3a2b2dd9-15af-40c4-bb81-3e479d48425a.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTU0NjUxMDUsIm5iZiI6MTcxNTQ2NDgwNSwicGF0aCI6Ii82ODIwNjQxLzMyNjI0MTM2NS0zYTJiMmRkOS0xNWFmLTQwYzQtYmI4MS0zZTQ3OWQ0ODQyNWEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MTFUMjIwMDA1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9YTAxM2JkZTc3M2JjOGY0OTc4YjVmMzk4YmZiMGI2NTk5NmQyZjAyYjAxYjkyMjgxNWRiZjMwOGIwMjRiNGZkYiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.7FgIvurrZ8p5PYaCcZWm4AkeSqh8F5K-nR7xenokjHc" alt="image"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/6820641/326241401-89976794-10af-493a-b8c4-3d02f50417ce.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTU0NjUxMDUsIm5iZiI6MTcxNTQ2NDgwNSwicGF0aCI6Ii82ODIwNjQxLzMyNjI0MTQwMS04OTk3Njc5NC0xMGFmLTQ5M2EtYjhjNC0zZDAyZjUwNDE3Y2UucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MTFUMjIwMDA1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ODI4ZWE0MWU2ZTM1YmZkMGI4NTM2NWNjYmY0YzAzZmNiMTUxZjVlN2U2ZTlkNmQ0OTQ4NDRlYzI2MDNiOTAzZCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.nU5jQFWEqNYHdRiudXZvnae4S0g3S6XCsVFBt6ajYZw"><img src="https://private-user-images.githubusercontent.com/6820641/326241401-89976794-10af-493a-b8c4-3d02f50417ce.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTU0NjUxMDUsIm5iZiI6MTcxNTQ2NDgwNSwicGF0aCI6Ii82ODIwNjQxLzMyNjI0MTQwMS04OTk3Njc5NC0xMGFmLTQ5M2EtYjhjNC0zZDAyZjUwNDE3Y2UucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MTFUMjIwMDA1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ODI4ZWE0MWU2ZTM1YmZkMGI4NTM2NWNjYmY0YzAzZmNiMTUxZjVlN2U2ZTlkNmQ0OTQ4NDRlYzI2MDNiOTAzZCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.nU5jQFWEqNYHdRiudXZvnae4S0g3S6XCsVFBt6ajYZw" alt="image"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/6820641/326241420-83cae3c0-bb19-4aa0-846f-c045387a0910.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTU0NjUxMDUsIm5iZiI6MTcxNTQ2NDgwNSwicGF0aCI6Ii82ODIwNjQxLzMyNjI0MTQyMC04M2NhZTNjMC1iYjE5LTRhYTAtODQ2Zi1jMDQ1Mzg3YTA5MTAucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MTFUMjIwMDA1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NDdhZjQyNjRkOTI3NDk3Njk1NWQzNTAxODYyZmNhOWZhZTU2ODUxMWI1ODU5NmI3MmJkMzliMmUyZDIzNmRlNyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.nCtJjUzgBCcoC327UbGD5A8llQ7xWpRaWaeGcwrlhHY"><img src="https://private-user-images.githubusercontent.com/6820641/326241420-83cae3c0-bb19-4aa0-846f-c045387a0910.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTU0NjUxMDUsIm5iZiI6MTcxNTQ2NDgwNSwicGF0aCI6Ii82ODIwNjQxLzMyNjI0MTQyMC04M2NhZTNjMC1iYjE5LTRhYTAtODQ2Zi1jMDQ1Mzg3YTA5MTAucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MTFUMjIwMDA1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NDdhZjQyNjRkOTI3NDk3Njk1NWQzNTAxODYyZmNhOWZhZTU2ODUxMWI1ODU5NmI3MmJkMzliMmUyZDIzNmRlNyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.nCtJjUzgBCcoC327UbGD5A8llQ7xWpRaWaeGcwrlhHY" alt="image"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/6820641/326241440-ff237473-d522-451e-8529-92bd111d4b96.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTU0NjUxMDUsIm5iZiI6MTcxNTQ2NDgwNSwicGF0aCI6Ii82ODIwNjQxLzMyNjI0MTQ0MC1mZjIzNzQ3My1kNTIyLTQ1MWUtODUyOS05MmJkMTExZDRiOTYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MTFUMjIwMDA1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9YmNkZDQyOTk2YWViOWNlOTQ0MDE1NDlmZWU1YjNlOWMwZTA1N2QxZTJjNThmYjZiNWQ2ZTBjZjAxZDI0ZmE3MiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.Dle0D3ai-lhnSMfHcKwBfh7aKgeaGnmlp1HUsiJ9ZhM"><img src="https://private-user-images.githubusercontent.com/6820641/326241440-ff237473-d522-451e-8529-92bd111d4b96.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTU0NjUxMDUsIm5iZiI6MTcxNTQ2NDgwNSwicGF0aCI6Ii82ODIwNjQxLzMyNjI0MTQ0MC1mZjIzNzQ3My1kNTIyLTQ1MWUtODUyOS05MmJkMTExZDRiOTYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUxMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MTFUMjIwMDA1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9YmNkZDQyOTk2YWViOWNlOTQ0MDE1NDlmZWU1YjNlOWMwZTA1N2QxZTJjNThmYjZiNWQ2ZTBjZjAxZDI0ZmE3MiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.Dle0D3ai-lhnSMfHcKwBfh7aKgeaGnmlp1HUsiJ9ZhM" alt="image"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Sponsorship</h2><a id="user-content-sponsorship" aria-label="Permalink: Sponsorship" href="#sponsorship"></a></p>
<p dir="auto">This work was very kindly supported by <a href="https://www.aurainfosec.com/" rel="nofollow">Aura Information Security</a>.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/6820641/181147262-c7baa5a5-36b2-4153-b01f-5064226ec56e.png"><img src="https://user-images.githubusercontent.com/6820641/181147262-c7baa5a5-36b2-4153-b01f-5064226ec56e.png" alt="image"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Requirements</h2><a id="user-content-requirements" aria-label="Permalink: Requirements" href="#requirements"></a></p>
<p dir="auto"><code>iptables</code> and <code>libpam</code> must be installed.<br>
Wag must be run as root, to manage <code>iptables</code> and the <code>wireguard</code> device.</p>
<p dir="auto">Forwarding must be enabled in <code>sysctl</code>.</p>
<div data-snippet-clipboard-copy-content="sysctl -w net.ipv4.ip_forward=1"><pre><code>sysctl -w net.ipv4.ip_forward=1
</code></pre></div>
<p dir="auto">Wag does not need <code>wg-quick</code> or other equalivent as long as the kernel supports wireguard.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Setup instructions</h2><a id="user-content-setup-instructions" aria-label="Permalink: Setup instructions" href="#setup-instructions"></a></p>
<p dir="auto">Both options require a kernel newer than 5.9+</p>
<p dir="auto">Binary release (requires glibc 2.31+):</p>
<div data-snippet-clipboard-copy-content="curl -L $(curl -s https://api.github.com/repos/NHAS/wag/releases/latest | jq -M -r '.assets[0].browser_download_url') -o wag
sudo ./wag gen-config

sudo ./wag start -config <generated_config_name>"><pre><code>curl -L $(curl -s https://api.github.com/repos/NHAS/wag/releases/latest | jq -M -r '.assets[0].browser_download_url') -o wag
sudo ./wag gen-config

sudo ./wag start -config &lt;generated_config_name&gt;
</code></pre></div>
<p dir="auto">From source (will require <code>go1.19</code>, <code>npm</code>, <code>gulp</code>, <code>clang</code>, <code>llvm-strip</code>, <code>libbpf</code>):</p>
<div data-snippet-clipboard-copy-content="git clone git@github.com:NHAS/wag.git
cd wag
make

cp example_config.json config.json

sudo ./wag start"><pre><code>git clone git@github.com:NHAS/wag.git
cd wag
make

cp example_config.json config.json

sudo ./wag start
</code></pre></div>
<p dir="auto">If running behind a reverse proxy, <code>X-Forwarded-For</code> must be set.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Management</h2><a id="user-content-management" aria-label="Permalink: Management" href="#management"></a></p>
<p dir="auto">The root user is able to manage the wag server with the following command:</p>
<div data-snippet-clipboard-copy-content="wag subcommand [-options]"><pre><code>wag subcommand [-options]
</code></pre></div>
<p dir="auto">Supported commands: <code>start</code>, <code>cleanup</code>, <code>reload</code>, <code>version</code>, <code>firewall</code>, <code>registration</code>, <code>devices</code>, <code>users</code>, <code>webadmin</code>, <code>gen-config</code></p>
<p dir="auto"><code>start</code>: starts the wag server</p>
<div data-snippet-clipboard-copy-content="Usage of start:
  Start wag server (does not daemonise)
  -join string
        Cluster join token
  -config string
        Configuration file location (default &quot;./config.json&quot;)"><pre><code>Usage of start:
  Start wag server (does not daemonise)
  -join string
        Cluster join token
  -config string
        Configuration file location (default "./config.json")
</code></pre></div>
<p dir="auto"><code>cleanup</code>: Will remove all firewall forwards, and shutdown the wireguard device</p>
<p dir="auto"><code>reload</code>: Reloads ACLs from configuration</p>
<p dir="auto"><code>version</code>: Display the version of wag</p>
<p dir="auto"><code>firewall</code>: Get firewall rules</p>
<div data-snippet-clipboard-copy-content="Usage of firewall:
  -list
        List firewall rules
  -socket string
        Wag socket to act on (default &quot;/tmp/wag.sock&quot;)
"><pre><code>Usage of firewall:
  -list
        List firewall rules
  -socket string
        Wag socket to act on (default "/tmp/wag.sock")

</code></pre></div>
<p dir="auto"><code>registration</code>:  Deals with creating, deleting and listing the registration tokens</p>
<div data-snippet-clipboard-copy-content="Usage of registration:
  -add
        Create a new enrolment token
  -del
        Delete existing enrolment token
  -group value
        Manually set user group (can supply multiple -group, or use -groups for , delimited group list, useful for OIDC)
  -groups string
        Set user groups manually, ',' delimited list of groups, useful for OIDC
  -list
        List tokens
  -overwrite string
        Add registration token for an existing user device, will overwrite wireguard public key (but not 2FA)
  -socket string
        Wag socket to act on (default &quot;/tmp/wag.sock&quot;)
  -token string
        Manually set registration token (Optional)
  -username string
        User to add device to"><pre><code>Usage of registration:
  -add
        Create a new enrolment token
  -del
        Delete existing enrolment token
  -group value
        Manually set user group (can supply multiple -group, or use -groups for , delimited group list, useful for OIDC)
  -groups string
        Set user groups manually, ',' delimited list of groups, useful for OIDC
  -list
        List tokens
  -overwrite string
        Add registration token for an existing user device, will overwrite wireguard public key (but not 2FA)
  -socket string
        Wag socket to act on (default "/tmp/wag.sock")
  -token string
        Manually set registration token (Optional)
  -username string
        User to add device to
</code></pre></div>
<p dir="auto"><code>devices</code>: Manages devices</p>
<div data-snippet-clipboard-copy-content="Usage of devices:
  -address string
        Address of device
  -del
        Remove device and block wireguard access
  -list
        List wireguard devices
  -lock
        Lock device access to mfa routes
  -mfa_sessions
        Get list of devices with active authorised sessions
  -socket string
        Wag control socket to act on (default &quot;/tmp/wag.sock&quot;)
  -unlock
        Unlock device
  -username string
        Owner of device (indicates that command acts on all devices owned by user)"><pre><code>Usage of devices:
  -address string
        Address of device
  -del
        Remove device and block wireguard access
  -list
        List wireguard devices
  -lock
        Lock device access to mfa routes
  -mfa_sessions
        Get list of devices with active authorised sessions
  -socket string
        Wag control socket to act on (default "/tmp/wag.sock")
  -unlock
        Unlock device
  -username string
        Owner of device (indicates that command acts on all devices owned by user)
</code></pre></div>
<p dir="auto"><code>users</code>: Manages users MFA and can delete all users devices</p>
<div data-snippet-clipboard-copy-content="Usage of users:
  -del
        Delete user and all associated devices
  -list
        List users, if '-username' supply will filter by user
  -lockaccount
        Lock account disable authention from any device, deauthenticates user active sessions
  -reset-mfa
        Reset MFA details, invalids all session and set MFA to be shown
  -socket string
        Wag socket location, (default &quot;/tmp/wag.sock&quot;)
  -unlockaccount
        Unlock a locked account, does not unlock specific device locks (use device -unlock -username <> for that)
  -username string
        Username to act upon"><pre><code>Usage of users:
  -del
        Delete user and all associated devices
  -list
        List users, if '-username' supply will filter by user
  -lockaccount
        Lock account disable authention from any device, deauthenticates user active sessions
  -reset-mfa
        Reset MFA details, invalids all session and set MFA to be shown
  -socket string
        Wag socket location, (default "/tmp/wag.sock")
  -unlockaccount
        Unlock a locked account, does not unlock specific device locks (use device -unlock -username &lt;&gt; for that)
  -username string
        Username to act upon
</code></pre></div>
<p dir="auto"><code>webadmin</code>: Manages the administrative users for the web UI</p>
<div data-snippet-clipboard-copy-content="Usage of webadmin:
  -add
        Add web administrator user (requires -password)
  -del
        Delete admin user
  -list
        List web administration users, if '-username' supply will filter by user
  -lockaccount
        Lock admin account disable login for this web administrator user
  -password string
        Username to act upon
  -socket string
        Wag instance control socket (default &quot;/tmp/wag.sock&quot;)
  -unlockaccount
        Unlock a web administrator account
  -username string
        Admin Username to act upon"><pre><code>Usage of webadmin:
  -add
        Add web administrator user (requires -password)
  -del
        Delete admin user
  -list
        List web administration users, if '-username' supply will filter by user
  -lockaccount
        Lock admin account disable login for this web administrator user
  -password string
        Username to act upon
  -socket string
        Wag instance control socket (default "/tmp/wag.sock")
  -unlockaccount
        Unlock a web administrator account
  -username string
        Admin Username to act upon
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">User guide</h2><a id="user-content-user-guide" aria-label="Permalink: User guide" href="#user-guide"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installing wag</h2><a id="user-content-installing-wag" aria-label="Permalink: Installing wag" href="#installing-wag"></a></p>
<ol dir="auto">
<li>Copy <code>wag</code>, <code>config.json</code> to <code>/opt/wag</code></li>
<li>Generate a wireguard private key with <code>wg genkey</code> set <code>PrivateKey</code> in the example config to it</li>
<li>Copy (or link) <code>wag.service</code> to <code>/etc/systemd/system/</code> and start/enable the service</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Creating new registration tokens</h2><a id="user-content-creating-new-registration-tokens" aria-label="Permalink: Creating new registration tokens" href="#creating-new-registration-tokens"></a></p>
<p dir="auto">First generate a token.</p>
<div data-snippet-clipboard-copy-content="# ./wag registration -add -username tester
token,username
e83253fd9962c68f73aa5088604f3f425d58a963bfb5c0889cca54d63a34b2e3,tester"><pre><code># ./wag registration -add -username tester
token,username
e83253fd9962c68f73aa5088604f3f425d58a963bfb5c0889cca54d63a34b2e3,tester
</code></pre></div>
<p dir="auto">Then curl said token.</p>
<div data-snippet-clipboard-copy-content="curl http://public.server.address:8080/register_device?key=e83253fd9962c68f73aa5088604f3f425d58a963bfb5c0889cca54d63a34b2e3"><pre><code>curl http://public.server.address:8080/register_device?key=e83253fd9962c68f73aa5088604f3f425d58a963bfb5c0889cca54d63a34b2e3
</code></pre></div>
<p dir="auto">The service will return a fully templated response:</p>
<div data-snippet-clipboard-copy-content="[Interface]
PrivateKey = <omitted>
Address = 192.168.1.1

[Peer]
Endpoint =  public.server.address:51820
PublicKey = pnvl40WiRt++0NucEGexlpfwWA8QzBYg2+8ZWZJvejA=
AllowedIPs = 10.7.7.7/32, 192.168.1.1/32, 192.168.3.4/32, 192.168.3.5/32
PersistentKeepAlive = 10"><pre><code>[Interface]
PrivateKey = &lt;omitted&gt;
Address = 192.168.1.1

[Peer]
Endpoint =  public.server.address:51820
PublicKey = pnvl40WiRt++0NucEGexlpfwWA8QzBYg2+8ZWZJvejA=
AllowedIPs = 10.7.7.7/32, 192.168.1.1/32, 192.168.3.4/32, 192.168.3.5/32
PersistentKeepAlive = 10
</code></pre></div>
<p dir="auto">Which can then be written to a config file.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Entering MFA</h2><a id="user-content-entering-mfa" aria-label="Permalink: Entering MFA" href="#entering-mfa"></a></p>
<p dir="auto">To authenticate the user should browse to the servers vpn address, in the example, case <code>192.168.1.1:8080</code>, where they will be prompted for their 2fa code.<br>
The configuration file specifies how long a session can live for, before expiring.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Signing in to the Management console</h2><a id="user-content-signing-in-to-the-management-console" aria-label="Permalink: Signing in to the Management console" href="#signing-in-to-the-management-console"></a></p>
<p dir="auto">Make sure that you have <code>ManagementUI.Enabled</code> set as <code>true</code>, then do the following from the console:</p>
<div data-snippet-clipboard-copy-content="sudo ./wag webadmin -add -username <your_username> -password <your-password-here>"><pre><code>sudo ./wag webadmin -add -username &lt;your_username&gt; -password &lt;your-password-here&gt;
</code></pre></div>
<p dir="auto">Then browse to your management listening address and enter your credentials.</p>
<p dir="auto">The web interface itself cannot add administrative users.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Configuration file reference</h2><a id="user-content-configuration-file-reference" aria-label="Permalink: Configuration file reference" href="#configuration-file-reference"></a></p>
<p dir="auto"><code>NumberProxies</code>: The number of trusted reverse proxies before the client, makes wag respect the <code>X-Forward-For</code> directive and parses the client IP from it correctly
<code>HelpMail</code>: The email address that is shown on the prompt page<br>
<code>Lockout</code>: Number of times a person can attempt mfa authentication before their account locks<br>
<code>NAT</code>: Turn on or off masquerading<br>
<code>ExposePorts</code>: Expose ports on the VPN server to the client (adds rules to IPtables) example: [ "443/tcp", "100-200/udp" ]<br>
<code>CheckUpdates</code>: If enabled (off by default) the management UI will show an alert if a new version of wag is available. This talks to api.github.com<br>
<code>MFATemplatesDirectory</code>: A string path option, when set templates will be queried from disk rather than the embedded copies. Allows you to customise the MFA registration, entry, and success pages, allows custom <code>js</code> and <code>css</code> in the <code>MFATemplatesDirectory /custom/</code> directory<br>
<code>DownloadConfigFileName</code>: The filename of the wireguard config that is downloaded, defaults to <code>wg0.conf</code></p>
<p dir="auto"><code>ExternalAddress</code>: The public address of the server, the place where wireguard is listening to the internet, and where clients can reach the <code>/register_device</code> endpoint</p>
<p dir="auto"><code>MaxSessionLifetimeMinutes</code>: After authenticating, a device will be allowed to talk to privileged routes for this many minutes, if -1, timeout is disabled<br>
<code>SessionInactivityTimeoutMinutes</code>: If a device has not sent data in <code>n</code> minutes, it will be required to reauthenticate, if -1 timeout is disabled</p>
<p dir="auto"><code>DatabaseLocation</code>: Where to load the sqlite3 database from, it will be created if it does not exist<br>
<code>Socket</code>: Wag control socket, changing this will allow multiple wag instances to run on the same machine<br>
<code>Acls</code>: Defines the <code>Groups</code> and <code>Policies</code> that restrict routes<br>
<code>Policies</code>: A map of group or user names to policy objects which contain the wag firewall &amp; route capture rules. The most specific match governs the type of access a user has to a route, e.g if you have a <code>/16</code> defined as MFA, but one ip address in that range as allow that is <code>/32</code> then the <code>/32</code> will take precedence over the <code>/16</code><br>
<code>Policies.&lt;policy name&gt;.Mfa</code>: The routes and services that require Mfa to access<br>
<code>Policies.&lt;policy name&gt;.Public</code>: Routes and services that do not require authorisation
<code>Policies.&lt;policy name&gt;.Deny</code>: Deny access to this route</p>
<p dir="auto"><code>Webserver</code>: Object that contains the public and tunnel listening addresses of the webserver</p>
<p dir="auto"><code>WebServer.Public.ListenAddress</code>: Listen address for endpoint<br>
<code>WebServer.Tunnel.Port</code>: Port for in-vpn-tunnel webserver, this does not take a full IP address, as the tunnel listener should <em>never</em> be outside the wireguard device</p>
<p dir="auto"><code>WebServer.&lt;endpoint&gt;.CertPath</code>: TLS Certificate path for endpoint<br>
<code>WebServer.&lt;endpoint&gt;.KeyPath</code>: TLS key for endpoint</p>
<p dir="auto"><code>Authenticators</code>: Object that contains configurations for the authentication methods wag provides<br>
<code>Authenticators.Issuer</code>: TOTP issuer, the name that will get added to the TOTP app<br>
<code>Authenticators.DomainURL</code>: Full url of the vpn authentication endpoint, required for <code>webauthn</code> and <code>oidc</code>
<code>Authenticators.DefaultMethod</code>: String, default method the user will be presented, if not specified a list of methods is displayed to the user (possible values: <code>webauth</code>, <code>totp</code>, <code>oidc</code>, <code>pam</code>)<br>
<code>Authenticators.Methods</code>: String array, enabled authentication methods, e.g <code>["totp","webauthn","oidc", "pam"]</code>.</p>
<p dir="auto"><code>Authenticators.OIDC</code>: Object that contains <code>OIDC</code> specific configuration options
<code>Authenticators.OIDC.IssuerURL</code>: Identity provider endpoint, e.g <code>http://localhost:8080/realms/account</code>
<code>Authenticators.OIDC.ClientID</code>:  OIDC identifier for application
<code>Authenticators.OIDC.ClientSecret</code>: OIDC secret
<code>Authenticators.OIDC.GroupsClaimName</code>: Not yet used.</p>
<p dir="auto"><code>Authenticators.PAM.ServiceName</code>: Name of PAM-Auth file in <code>/etc/pam.d/</code>  will default to <code>/etc/pam.d/login</code> if unset or empty</p>
<p dir="auto"><code>Clustering</code>: Object containing the clustering details<br>
<code>Clustering.ClusterState</code>: Same as the etcd cluster state setting, can be either <code>new</code>, create a new cluster, or <code>existing</code>. If you are joining an existing cluster, use <code>start -join</code> rather than this<br>
<code>Clustering.ETCDLogLevel</code>: Level of logging for the embedded etcd server to emit, options <code>info</code>, <code>error</code><br>
<code>Clustering.Witness</code>: Is the node a witness node, i.e one that does not start a wireguard device, or management UI, but replicates events for the RAFT concensus<br>
<code>Clustering.TLSManagerListenURL</code>: URL for generating certificates for the wag cluster, must be reachable by all nodes, typically automatically set by <code>start -join</code></p>
<p dir="auto"><code>Wireguard</code>: Object that contains the wireguard device configuration<br>
<code>Wireguard.DevName</code>: The wireguard device to attach or to create if it does not exist, will automatically add peers (no need to configure peers with <code>wg-quick</code>)<br>
<code>Wireguard.ListenPort</code>: Port that wireguard will listen on<br>
<code>Wireguard.PrivateKey</code>: The wireguard private key, can be generated with <code>wg genkey</code><br>
<code>Wireguard.Address</code>: Subnet the VPN is responsible for<br>
<code>Wireguard.MTU</code>: Maximum transmissible unit defaults to 1420 if not set for IPv4 over Ethernet<br>
<code>Wireguard.DNS</code>: An array of DNS servers that will be automatically used, and set as "Allowed" (no MFA)</p>
<p dir="auto"><code>ManagementUI</code>: Object that contains configurations for the webadministration portal. It is not recommend to expose this portal, I recommend setting <code>ListenAddress</code> to <code>127.0.0.1</code>/<code>localhost</code> and then use ssh forwarding to expose it<br>
<code>ManagementUI.Enabled</code>: Enable the web UI<br>
<code>ManagementUI.ListenAddress</code>: Listen address to expose the management UI on<br>
<code>ManagementUI.CertPath</code>: TLS Certificate path for management endpoint<br>
<code>ManagementUI.KeyPath</code>: TLS key for the management endpoint</p>
<p dir="auto">Full config example</p>
<div dir="auto" data-snippet-clipboard-copy-content="{
    &quot;Proxied&quot;: true,
    &quot;ExposePorts&quot;: [
        &quot;443/tcp&quot;,
        &quot;100-200/udp&quot;
     ],
    &quot;CheckUpdates&quot;: true,
    &quot;Lockout&quot;: 5,
    &quot;NAT&quot;: true,
    &quot;HelpMail&quot;: &quot;help@example.com&quot;,
    &quot;MaxSessionLifetimeMinutes&quot;: 2,
    &quot;SessionInactivityTimeoutMinutes&quot;: 1,
    &quot;ExternalAddress&quot;: &quot;81.80.79.78&quot;,
    &quot;DatabaseLocation&quot;: &quot;devices.db&quot;,
    &quot;Socket&quot;:&quot;/tmp/wag.sock&quot;,
    &quot;Webserver&quot;: {
        &quot;Public&quot;: {
            &quot;ListenAddress&quot;: &quot;192.168.121.61:8080&quot;,
            &quot;CertPath&quot;: &quot;/etc/example/cert/path&quot;,
            &quot;KeyPath&quot;: &quot;/etc/ssl/private/somecert.key&quot;
        },
        &quot;Tunnel&quot;: {
            &quot;Port&quot;: &quot;8080&quot;
        }
    },
    &quot;ManagementUI&quot;: {
        &quot;ListenAddress&quot;: &quot;127.0.0.1:4433&quot;,
        &quot;CertPath&quot;: &quot;/etc/example/cert/path&quot;,
        &quot;KeyPath&quot;: &quot;/etc/ssl/private/somecert.key&quot;,
        &quot;Enabled&quot;: true
    },
    &quot;Authenticators&quot;: {
        &quot;Issuer&quot;: &quot;vpn.test&quot;,
        &quot;DomainURL&quot;: &quot;https://vpn.test:8080&quot;,
        &quot;DefaultMethod&quot;:&quot;webauthn&quot;,
        &quot;Methods&quot;:[&quot;totp&quot;,&quot;webauthn&quot;, &quot;oidc&quot;, &quot;pam&quot;],
        &quot;OIDC&quot;: {
            &quot;IssuerURL&quot;: &quot;http://localhost:8080/&quot;,
            &quot;ClientSecret&quot;: &quot;<OMITTED>&quot;,
            &quot;ClientID&quot;: &quot;account&quot;,
            &quot;GroupsClaimName&quot;: &quot;groups&quot;
        }
    },
    &quot;Clustering&quot;: {
        &quot;ClusterState&quot;: &quot;new&quot;,
        &quot;ETCDLogLevel&quot;: &quot;error&quot;,
        &quot;Witness&quot;: false,
        &quot;TLSManagerListenURL&quot;: &quot;https://wag.server:3434&quot;
    },
    &quot;Wireguard&quot;: {
        &quot;DevName&quot;: &quot;wg0&quot;,
        &quot;ListenPort&quot;: 53230,
        &quot;PrivateKey&quot;: &quot;AN EXAMPLE KEY&quot;,
        &quot;Address&quot;: &quot;192.168.1.1/24&quot;,
        &quot;MTU&quot;: 1420,
        &quot;DNS&quot;: [&quot;1.1.1.1&quot;]
    },
    &quot;Acls&quot;: {
        &quot;Groups&quot;: {
            &quot;group:nerds&quot;: [
                &quot;daviv.test&quot;,
                &quot;franky.someone&quot;,
                &quot;any_username&quot;
            ]
        },
        &quot;Policies&quot;: {
            &quot;*&quot;: {
                &quot;Mfa&quot;: [
                     &quot;10.0.0.2/32 8080/any&quot;
                ],
                &quot;Allow&quot;: [
                    &quot;10.7.7.7/32&quot;,
                    &quot;google.com&quot;
                ]
            },
            &quot;username&quot;: { 
                &quot;Mfa&quot;: [
                     &quot;someinternal.service 9100/tcp&quot;
                ],
                &quot;Allow&quot;:[ &quot;10.0.0.1/32&quot;]
            },
            &quot;group:nerds&quot;: {
                &quot;Mfa&quot;: [
                    &quot;192.168.3.4/32&quot;,
                    &quot;10.0.0.0/24&quot;,
                    &quot;thing.internal 443/tcp icmp&quot;
                ],
                &quot;Allow&quot;: [
                    &quot;192.168.3.5/32&quot;
                ],
                &quot;Deny&quot;: [
                    &quot;10.0.0.5/32&quot;
                 ]
            }
        }
    }
}"><pre>{
    <span>"Proxied"</span>: <span>true</span>,
    <span>"ExposePorts"</span>: [
        <span><span>"</span>443/tcp<span>"</span></span>,
        <span><span>"</span>100-200/udp<span>"</span></span>
     ],
    <span>"CheckUpdates"</span>: <span>true</span>,
    <span>"Lockout"</span>: <span>5</span>,
    <span>"NAT"</span>: <span>true</span>,
    <span>"HelpMail"</span>: <span><span>"</span>help@example.com<span>"</span></span>,
    <span>"MaxSessionLifetimeMinutes"</span>: <span>2</span>,
    <span>"SessionInactivityTimeoutMinutes"</span>: <span>1</span>,
    <span>"ExternalAddress"</span>: <span><span>"</span>81.80.79.78<span>"</span></span>,
    <span>"DatabaseLocation"</span>: <span><span>"</span>devices.db<span>"</span></span>,
    <span>"Socket"</span>:<span><span>"</span>/tmp/wag.sock<span>"</span></span>,
    <span>"Webserver"</span>: {
        <span>"Public"</span>: {
            <span>"ListenAddress"</span>: <span><span>"</span>192.168.121.61:8080<span>"</span></span>,
            <span>"CertPath"</span>: <span><span>"</span>/etc/example/cert/path<span>"</span></span>,
            <span>"KeyPath"</span>: <span><span>"</span>/etc/ssl/private/somecert.key<span>"</span></span>
        },
        <span>"Tunnel"</span>: {
            <span>"Port"</span>: <span><span>"</span>8080<span>"</span></span>
        }
    },
    <span>"ManagementUI"</span>: {
        <span>"ListenAddress"</span>: <span><span>"</span>127.0.0.1:4433<span>"</span></span>,
        <span>"CertPath"</span>: <span><span>"</span>/etc/example/cert/path<span>"</span></span>,
        <span>"KeyPath"</span>: <span><span>"</span>/etc/ssl/private/somecert.key<span>"</span></span>,
        <span>"Enabled"</span>: <span>true</span>
    },
    <span>"Authenticators"</span>: {
        <span>"Issuer"</span>: <span><span>"</span>vpn.test<span>"</span></span>,
        <span>"DomainURL"</span>: <span><span>"</span>https://vpn.test:8080<span>"</span></span>,
        <span>"DefaultMethod"</span>:<span><span>"</span>webauthn<span>"</span></span>,
        <span>"Methods"</span>:[<span><span>"</span>totp<span>"</span></span>,<span><span>"</span>webauthn<span>"</span></span>, <span><span>"</span>oidc<span>"</span></span>, <span><span>"</span>pam<span>"</span></span>],
        <span>"OIDC"</span>: {
            <span>"IssuerURL"</span>: <span><span>"</span>http://localhost:8080/<span>"</span></span>,
            <span>"ClientSecret"</span>: <span><span>"</span>&lt;OMITTED&gt;<span>"</span></span>,
            <span>"ClientID"</span>: <span><span>"</span>account<span>"</span></span>,
            <span>"GroupsClaimName"</span>: <span><span>"</span>groups<span>"</span></span>
        }
    },
    <span>"Clustering"</span>: {
        <span>"ClusterState"</span>: <span><span>"</span>new<span>"</span></span>,
        <span>"ETCDLogLevel"</span>: <span><span>"</span>error<span>"</span></span>,
        <span>"Witness"</span>: <span>false</span>,
        <span>"TLSManagerListenURL"</span>: <span><span>"</span>https://wag.server:3434<span>"</span></span>
    },
    <span>"Wireguard"</span>: {
        <span>"DevName"</span>: <span><span>"</span>wg0<span>"</span></span>,
        <span>"ListenPort"</span>: <span>53230</span>,
        <span>"PrivateKey"</span>: <span><span>"</span>AN EXAMPLE KEY<span>"</span></span>,
        <span>"Address"</span>: <span><span>"</span>192.168.1.1/24<span>"</span></span>,
        <span>"MTU"</span>: <span>1420</span>,
        <span>"DNS"</span>: [<span><span>"</span>1.1.1.1<span>"</span></span>]
    },
    <span>"Acls"</span>: {
        <span>"Groups"</span>: {
            <span>"group:nerds"</span>: [
                <span><span>"</span>daviv.test<span>"</span></span>,
                <span><span>"</span>franky.someone<span>"</span></span>,
                <span><span>"</span>any_username<span>"</span></span>
            ]
        },
        <span>"Policies"</span>: {
            <span>"*"</span>: {
                <span>"Mfa"</span>: [
                     <span><span>"</span>10.0.0.2/32 8080/any<span>"</span></span>
                ],
                <span>"Allow"</span>: [
                    <span><span>"</span>10.7.7.7/32<span>"</span></span>,
                    <span><span>"</span>google.com<span>"</span></span>
                ]
            },
            <span>"username"</span>: { 
                <span>"Mfa"</span>: [
                     <span><span>"</span>someinternal.service 9100/tcp<span>"</span></span>
                ],
                <span>"Allow"</span>:[ <span><span>"</span>10.0.0.1/32<span>"</span></span>]
            },
            <span>"group:nerds"</span>: {
                <span>"Mfa"</span>: [
                    <span><span>"</span>192.168.3.4/32<span>"</span></span>,
                    <span><span>"</span>10.0.0.0/24<span>"</span></span>,
                    <span><span>"</span>thing.internal 443/tcp icmp<span>"</span></span>
                ],
                <span>"Allow"</span>: [
                    <span><span>"</span>192.168.3.5/32<span>"</span></span>
                ],
                <span>"Deny"</span>: [
                    <span><span>"</span>10.0.0.5/32<span>"</span></span>
                 ]
            }
        }
    }
}</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Defining ACL rules</h2><a id="user-content-defining-acl-rules" aria-label="Permalink: Defining ACL rules" href="#defining-acl-rules"></a></p>
<p dir="auto">The <code>Policies</code> section allows you to define what routes should be both captured by the VPN and what ports and protocols are allowed through Wag.</p>
<p dir="auto">Rules use the subnet prefix length to determine which rule applies. The most <em>specific</em> match is use to determine the level of user access to a route.<br>
For example:</p>
<div dir="auto" data-snippet-clipboard-copy-content=" &quot;*&quot;: {
                &quot;Mfa&quot;: [
                     &quot;10.0.0.0/16&quot;
                ],
                &quot;Allow&quot;: [
                    &quot;10.0.1.1/32&quot;,
                ]
            },"><pre> <span>"*"</span>: {
                <span>"Mfa"</span>: [
                     <span><span>"</span>10.0.0.0/16<span>"</span></span>
                ],
                <span>"Allow"</span>: [
                    <span><span>"</span>10.0.1.1/32<span>"</span></span>,
                ]
            },</pre></div>
<p dir="auto">Users will be able to access 10.0.1.1 <strong>without</strong> MFA as the match is more specific. This change occured in v6.0.0, previously MFA routes would always take precedence.</p>
<p dir="auto">Additionally if multiple policies are defined for a single route they are composed with MFA rules taking preference.<br>
For example:</p>
<div dir="auto" data-snippet-clipboard-copy-content=" &quot;*&quot;: {
            &quot;Mfa&quot;: [
                  &quot;10.0.0.0/16&quot;,
                  &quot;10.0.1.1/32 22/tcp&quot;,
            ]
  },
 &quot;group:users&quot;: {
            &quot;Allow&quot;: [
                  &quot;10.0.1.1/32 443/tcp&quot;,
            ]
 }"><pre> <span>"*"</span>: {
            <span>"Mfa"</span>: [
                  <span><span>"</span>10.0.0.0/16<span>"</span></span>,
                  <span><span>"</span>10.0.1.1/32 22/tcp<span>"</span></span>,
            ]
  },
 <span>"group:users"</span>: {
            <span>"Allow"</span>: [
                  <span><span>"</span>10.0.1.1/32 443/tcp<span>"</span></span>,
            ]
 }</pre></div>
<p dir="auto">All users will be able to access <code>22/tcp</code> on the <code>10.0.1.1/32</code> host, but users in the <code>group:users</code> will be able to access <code>443/tcp</code> on that host as well, along with <code>22/tcp</code> when authorized.</p>
<p dir="auto">As of <strong>[version number, yet to be released]</strong> you can now define deny rules which will block access to a route.</p>
<p dir="auto">Example:</p>
<div dir="auto" data-snippet-clipboard-copy-content=" &quot;*&quot;: {
            &quot;Allow&quot;: [
                  &quot;10.0.0.0/16&quot;,
                  &quot;10.0.1.1/32 443/tcp&quot;,
            ]
  },
 &quot;group:users&quot;: {
            &quot;Deny&quot;: [
                  &quot;10.0.1.1/32 443/tcp&quot;,
            ]
 }"><pre> <span>"*"</span>: {
            <span>"Allow"</span>: [
                  <span><span>"</span>10.0.0.0/16<span>"</span></span>,
                  <span><span>"</span>10.0.1.1/32 443/tcp<span>"</span></span>,
            ]
  },
 <span>"group:users"</span>: {
            <span>"Deny"</span>: [
                  <span><span>"</span>10.0.1.1/32 443/tcp<span>"</span></span>,
            ]
 }</pre></div>
<p dir="auto">Its important to note that the most specific rule effectively creates a new rule "bucket", so if you do something like:</p>
<div dir="auto" data-snippet-clipboard-copy-content="&quot;group:nerds&quot;: {
      &quot;Allow&quot;: [
            &quot;10.0.0.0/24 443/tcp&quot;
      ],
      &quot;Deny&quot;: [
            &quot;10.0.0.5/32 22/tcp&quot;
      ]
}"><pre><span>"group:nerds"</span>: {
      <span>"Allow"</span>: [
            <span><span>"</span>10.0.0.0/24 443/tcp<span>"</span></span>
      ],
      <span>"Deny"</span>: [
            <span><span>"</span>10.0.0.5/32 22/tcp<span>"</span></span>
      ]
}</pre></div>
<p dir="auto">Your clients will not be able to access <code>10.0.0.5/32 443/tcp</code>, as the only rule in the <code>/32</code> "bucket" is a deny rule. You can solve this by adding the following:</p>
<div dir="auto" data-snippet-clipboard-copy-content="&quot;group:nerds&quot;: {
      &quot;Allow&quot;: [
            &quot;10.0.0.0/24 443/tcp&quot;
            &quot;10.0.0.5/32 22/tcp&quot;
      ],
      &quot;Deny&quot;: [
            &quot;10.0.0.5/32 22/tcp&quot;
      ]
}"><pre><span>"group:nerds"</span>: {
      <span>"Allow"</span>: [
            <span><span>"</span>10.0.0.0/24 443/tcp<span>"</span></span>
            <span><span>"</span>10.0.0.5/32 22/tcp<span>"</span></span>
      ],
      <span>"Deny"</span>: [
            <span><span>"</span>10.0.0.5/32 22/tcp<span>"</span></span>
      ]
}</pre></div>
<p dir="auto">or</p>
<div dir="auto" data-snippet-clipboard-copy-content="&quot;group:nerds&quot;: {
      &quot;Allow&quot;: [
            &quot;10.0.0.0/24 443/tcp&quot;
      ],
      &quot;Deny&quot;: [
            &quot;10.0.0.0/24 22/tcp&quot;
      ]
}"><pre><span>"group:nerds"</span>: {
      <span>"Allow"</span>: [
            <span><span>"</span>10.0.0.0/24 443/tcp<span>"</span></span>
      ],
      <span>"Deny"</span>: [
            <span><span>"</span>10.0.0.0/24 22/tcp<span>"</span></span>
      ]
}</pre></div>
<p dir="auto">As then you're adding the deny rule to the <code>/24</code> "bucket".</p>
<p dir="auto">Additionally, It is possible to define what services a user can access by defining port and protocol rules.<br>
Currently 3 types of port and protocol rules are supported:</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Any</h3><a id="user-content-any" aria-label="Permalink: Any" href="#any"></a></p>
<p dir="auto">When no other rules are defined or the <code>any</code> keyword is used wag will allow all services and port combinations.</p>
<p dir="auto">Example:</p>
<div data-snippet-clipboard-copy-content="&quot;1.1.1.1&quot;: Allows all ports and protocols to 1.1.1.1/32
&quot;1.1.1.1 54/any&quot;: Allows both tcp and udp to 1.1.1.1/32"><pre><code>"1.1.1.1": Allows all ports and protocols to 1.1.1.1/32
"1.1.1.1 54/any": Allows both tcp and udp to 1.1.1.1/32
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Single Service</h3><a id="user-content-single-service" aria-label="Permalink: Single Service" href="#single-service"></a></p>
<p dir="auto">Example:</p>
<div data-snippet-clipboard-copy-content="192.168.1.1 22/tcp 53/udp: Fairly self explanatory, allows you to hit 22/tcp and 53/udp on a host
1.1.1.1 icmp: As icmp doesnt have ports really you dont need it either"><pre><code>192.168.1.1 22/tcp 53/udp: Fairly self explanatory, allows you to hit 22/tcp and 53/udp on a host
1.1.1.1 icmp: As icmp doesnt have ports really you dont need it either
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Ranges</h3><a id="user-content-ranges" aria-label="Permalink: Ranges" href="#ranges"></a></p>
<p dir="auto">You can also define a range of ports with a protocol. wag requires that the lower port is first.</p>
<p dir="auto">Example:</p>
<div data-snippet-clipboard-copy-content="192.168.1.1 22-1024/tcp 23-53/any: Format is low port-high port/service"><pre><code>192.168.1.1 22-1024/tcp 23-53/any: Format is low port-high port/service
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Limitations</h2><a id="user-content-limitations" aria-label="Permalink: Limitations" href="#limitations"></a></p>
<ul dir="auto">
<li>Only supports clients with one <code>AllowedIP</code>, which is perfect for site to site, or client -&gt; server based architecture.</li>
<li>IPv4 only.</li>
<li>Linux only</li>
<li>Very Modern kernel 5.9+ at least (&gt;5.9 allows loops in ebpf and <code>bpf_link</code>)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development</h2><a id="user-content-development" aria-label="Permalink: Development" href="#development"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Custom templates</h2><a id="user-content-custom-templates" aria-label="Permalink: Custom templates" href="#custom-templates"></a></p>
<p dir="auto">With the introduction of the <code>MFATemplatesDirectory</code> option, you can now specify a directory that contains template files for customising the MFA entry, registration and wireguard config file.<br>
An example of all these files can be found in the embedded variants here: <code>internal/webserver/resources/templates</code>.</p>
<p dir="auto">When the option is set, you must define <em>all</em> the files this guide is a brief description of what each file is:<br>
<code>interface.tmpl</code>: The wireguard configuration file that is served to clients<br>
<code>oidc_error.html</code>: If a users login to the oidc provider as some issue (i.e user isnt registered for the device)<br>
<code>prompt_mfa_totp.html</code>: Page for taking TOTP code entry<br>
<code>prompt_mfa_webauthn.html</code>: Page for webauthn entry<br>
<code>qrcode_registration.html</code>: When a client registers with the <code>?type=mobile</code> option set, shows a QR code for the wireguard app on android/ios to simply registration<br>
<code>register_mfa_totp.html</code>: Registration for TOTP that should show a QR code<br>
<code>register_mfa_webauth.html</code>: Page to do webauthn registration<br>
<code>register_mfa.html</code>: If multiple MFA methods are registered this page is displayed giving the user an option of what method to use<br>
<code>success.html</code>: This page is not a template, and is displayed when a user is successfully authed, or if they attempt to access the authorisation endpoint while being authorised</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Testing</h2><a id="user-content-testing" aria-label="Permalink: Testing" href="#testing"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cd internal/router
sudo go test -v ."><pre><span>cd</span> internal/router
sudo go <span>test</span> -v <span>.</span></pre></div>
<p dir="auto">Sudo is required to load the eBPF program into the kernel.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Building a release</h2><a id="user-content-building-a-release" aria-label="Permalink: Building a release" href="#building-a-release"></a></p>
<p dir="auto">If you havent build the release docker image (used because it has a stable version of glibc) do the following:</p>
<div data-snippet-clipboard-copy-content="cd release_builder
sudo docker build -t wag_builder .
cd ..

make docker"><pre><code>cd release_builder
sudo docker build -t wag_builder .
cd ..

make docker
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">External contributions</h2><a id="user-content-external-contributions" aria-label="Permalink: External contributions" href="#external-contributions"></a></p>
<p dir="auto">If you're looking to add your own features, or bug fixes to wag (thank you!). Please make sure that you've written a test for your changes if possible.<br>
There are a few <code>_test.go</code> files around that give example on how to do this.</p>
<p dir="auto">Then open a pull request and we can discuss it there.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Donations and Support</h2><a id="user-content-donations-and-support" aria-label="Permalink: Donations and Support" href="#donations-and-support"></a></p>
<p dir="auto">If you like <code>wag</code> and use it to support your work flow, consider donating to the project. Your donations go directly towards the time and effort I put in, and the amount of support I can provide.</p>
<p dir="auto">You can do this by either using the <code>Support</code> button on the side or the cryptocurrency wallets detailed below.</p>
<p dir="auto">Monero (XMR):<br>
<code>8A8TRqsBKpMMabvt5RxMhCFWcuCSZqGV5L849XQndZB4bcbgkenH8KWJUXinYbF6ySGBznLsunrd1WA8YNPiejGp3FFfPND</code></p>
<p dir="auto">Bitcoin (BTC):<br>
<code>bc1qm9e9sfrm7l7tnq982nrm6khnsfdlay07h0dxfr</code></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why the CORDIC algorithm lives rent-free in my head (333 pts)]]></title>
            <link>https://github.com/francisrstokes/githublog/blob/main/2024/5/10/cordic.md</link>
            <guid>40326563</guid>
            <pubDate>Sat, 11 May 2024 07:18:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/francisrstokes/githublog/blob/main/2024/5/10/cordic.md">https://github.com/francisrstokes/githublog/blob/main/2024/5/10/cordic.md</a>, See on <a href="https://news.ycombinator.com/item?id=40326563">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true" aria-labelledby="file-name-id-wide file-name-id-mobile"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Why the CORDIC algorithm lives rent-free in my head</h2><a id="user-content-why-the-cordic-algorithm-lives-rent-free-in-my-head" aria-label="Permalink: Why the CORDIC algorithm lives rent-free in my head" href="#why-the-cordic-algorithm-lives-rent-free-in-my-head"></a></p>
<p dir="auto"><em>This post is an adaptation of a <a href="https://twitter.com/fstokesman/status/1787949934123049021" rel="nofollow">twitter thread</a> I put together a few days ago.</em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/cordic.gif"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/cordic.gif" data-animated-image=""></a></p>
<p dir="auto">CORDIC is an algorithm for computing trig functions like <code>sin</code>, <code>cos</code>, <code>tan</code> etc on low powered hardware, without an FPU (i.e. no floating point) or expensive lookup tables. In fact, it reduces these complex functions to simple additions and bit shifts.</p>
<p dir="auto">I'll cut right to the chase and tell you <em>why</em> I love this algorithm so much, and then we'll dive into the details of exactly how it works. Essentially, the actual operations of the algorithm are incredibly simple - just shifts and adds, as I mentioned before - but it does this by combining vector math, trigonometry, convergence proofs, and some clever computer science. To me, it's what people are talking about when they describe things of this nature as "elegant".</p>
<p dir="auto">Let's start with an obvious point: You don't need this if you're working on high powered hardware. This technique is applicable for embedded environments; especially less capable microcontrollers and FPGAs. Even then, it's possible that more capable hardware/peripherals will be available which would be "faster", though speed is not the only measure of usefulness.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Avoiding floating point</h2><a id="user-content-avoiding-floating-point" aria-label="Permalink: Avoiding floating point" href="#avoiding-floating-point"></a></p>
<p dir="auto"><em>(if you're already familiar with fixed-point, you can safely skip this section)</em></p>
<p dir="auto">You might be wondering how are we able to avoid floating point, when functions like <code>sin(x)</code> produce values between -1.0 and 1.0? Well, floating point is not the only way of representing rational numbers. In fact, before IEEE 754 became the popular standard that it is today, <em>fixed point</em> was used all the time (go and ask any gamedev who worked on stuff between 1980 and 2000ish and they'll tell you all about it).</p>
<p dir="auto">In fact, I got nerd-sniped into this whole CORDIC investigation after listening to <a href="https://twitter.com/MicroarchClub/status/1759606520713453630" rel="nofollow">Dan Mangum's fantastic Microarch Club podcast</a>, where Philip Freidin dropped the spicy hot-take that "Floating point is a crutch", and that using it might be a sign that you don't <em>really</em> understand the algorithm you're working on. Of course I should mention this was more in the context of custom ASICs rather than your run-of-the-mill webapp, but the quote really stuck with me.</p>
<p dir="auto">So how does fixed point work? Well you take an integer type like <code>int32_t</code>, and say the top 16 bits are the whole part of the number, and the bottom 16 bits are the fractional part. You could divide the number up differently (e.g. 10 bits for the whole part and 24 for the fractional), but we'll use 16/16 as an example here.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/fixed-whole-fractional.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/fixed-whole-fractional.png"></a></p>
<p dir="auto">That gives a range of around <code>-32768.99997</code> to <code>32767.99997</code>. We've <em>fixed</em> the radix point at the 16th bit, though again, we could have put it anywhere. Moving the point allows us to trade off for precision where it makes sense (i.e. more bits for whole numbers, or more bits for fractional representation).</p>
<p dir="auto">Something worth noting here is that the number is still an <code>int32_t</code> - we the programmers have assigned the extra meaning here (though this is also true of literally every data type in computing - there are only bits in the end!).</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/fixed-point.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/fixed-point.png"></a></p>
<p dir="auto">How do we get a number into this format? Well, we've got 16 bits of fractional precision, so take a float like&nbsp;<code>42.01</code>, and scale it up by <code>(1 &lt;&lt; 16)</code>. That gives us <code>2753167</code> when cast into an <code>int32_t</code>. If we want to go from fixed point back to floating point, we just do the opposite. <code>2753167 / (1 &lt;&lt; 16)</code> gives us <code>~42.0099945</code>, which is very close to <code>42.01</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="#define SCALING_FACTOR (16)

static inline int32_t fixed_from_float(float a) {
  return (int32_t)(a * (float)(1 << SCALING_FACTOR));
}

static inline float fixed_to_float(int32_t a) {
  return (float)a / (float)(1 << SCALING_FACTOR);
}"><pre><span>#define</span> <span>SCALING_FACTOR</span> (16)

<span>static</span> <span>inline</span> <span>int32_t</span> <span>fixed_from_float</span>(<span>float</span> <span>a</span>) {
  <span>return</span> (<span>int32_t</span>)(<span>a</span> <span>*</span> (<span>float</span>)(<span>1</span> &lt;&lt; <span>SCALING_FACTOR</span>));
}

<span>static</span> <span>inline</span> <span>float</span> <span>fixed_to_float</span>(<span>int32_t</span> <span>a</span>) {
  <span>return</span> (<span>float</span>)<span>a</span> / (<span>float</span>)(<span>1</span> &lt;&lt; <span>SCALING_FACTOR</span>);
}</pre></div>
<p dir="auto">We could also forgo floating point altogether and encode a number like <code>1.5</code> manually. The whole part is just <code>1</code>, so we shift that up (<code>(1 &lt;&lt; 16)</code>), and the fractional part is the halfway point between <code>0x0000</code> and <code>0xffff</code>, so call it <code>0x7fff</code>. That gives us <code>98303</code> in decimal.</p>
<p dir="auto">Operations like addition and subtraction Just Work™ - assuming you're using the same scaling factor for whichever numbers you're operating on. It is possible to mix and match scaling factors, but it increases the complexity.</p>
<p dir="auto">Multiplication is only marginally trickier. Multiplying the two fixed point numbers together essentially scales everything up by scaling factor. This can be resolved by just shifting the result back down.</p>
<div dir="auto" data-snippet-clipboard-copy-content="static inline int32_t fixed_multiply(int32_t a, int32_t b) {
  return ((int64_t)a * (int64_t)b) >> SCALING_FACTOR;
}"><pre><span>static</span> <span>inline</span> <span>int32_t</span> <span>fixed_multiply</span>(<span>int32_t</span> <span>a</span>, <span>int32_t</span> <span>b</span>) {
  <span>return</span> ((<span>int64_t</span>)<span>a</span> <span>*</span> (<span>int64_t</span>)<span>b</span>) &gt;&gt; <span>SCALING_FACTOR</span>;
}</pre></div>
<p dir="auto">Division is basically the same story, except in reverse. There's a trick to squeeze out some extra precision by prescaling the dividend by the scaling factor, and then dividing by the divisor.</p>
<div dir="auto" data-snippet-clipboard-copy-content="static inline int32_t fixed_divide(int32_t a, int32_t b) {
  return ((int64_t)a << SCALING_FACTOR) / (int64_t)b;
}"><pre><span>static</span> <span>inline</span> <span>int32_t</span> <span>fixed_divide</span>(<span>int32_t</span> <span>a</span>, <span>int32_t</span> <span>b</span>) {
  <span>return</span> ((<span>int64_t</span>)<span>a</span> &lt;&lt; <span>SCALING_FACTOR</span>) / (<span>int64_t</span>)<span>b</span>;
}</pre></div>
<p dir="auto">OK we can do basic operations, but what if I need something more complex, like I don't know, a trig function? This is where CORDIC comes in.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">The CORDIC algorithm</h2><a id="user-content-the-cordic-algorithm" aria-label="Permalink: The CORDIC algorithm" href="#the-cordic-algorithm"></a></p>
<p dir="auto">CORDIC stands for "co-ordinate rotation digital computer", and was cooked up back in the mid 50s (though the general algorithm has been known to mathematicians for hundreds of years). The core idea is that we can rotate a vector around a unit circle by progressively smaller and smaller angles, and the vector components will end up being the sine and cosine of the angle we're interested in.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/cordic.gif"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/cordic.gif" data-animated-image=""></a></p>
<p dir="auto">It's sort of like a binary search:  You move towards the target angle by some large angle and check if you're ahead or behind, and then move by half that angle either clockwise or anticlockwise. This process repeats with smaller and smaller angles until the result converges.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/binary-search.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/binary-search.png"></a></p>
<p dir="auto">If you've worked with these kinds of operations before, you'll know that rotating a vector involves multiplying it with a matrix consisting of sines and cosines of the angle to be rotated to. That seems counter productive, since those are the functions we're trying to compute!</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="a06b8c9a079b4f08cd9a0a931ce8bf23">$$
\begin{bmatrix}
x' \\
y'
\end{bmatrix} = \begin{bmatrix}
\cos(\theta) &amp; -\sin(\theta) \\
\sin(\theta) &amp; \cos(\theta)
\end{bmatrix} \begin{bmatrix}
x \\
y
v\end{bmatrix}
$$</math-renderer></p>
<p dir="auto">We'll put that aside for a second, and get a big picture overview before solving this problem. Now, it's fairly obvious that rotating by say <code>22.75˚</code> is the same as rotating by <code>45˚</code> and then <code>-22.5˚</code> - i.e. we can break up a rotation into smaller parts, with both positive and negative components.</p>
<p dir="auto">Let's say that we have a maximum rotation of <code>90˚</code> (𝚷/2 radians), and we're trying to figure out <code>sin(0.7)</code> (about <code>40˚</code>). Starting with a vector <code>(1, 0)</code> and a target of <code>0.7</code> radians, we rotate <code>0.7853</code> rads (<code>45˚</code>) anti-clockwise.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/0r.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/0r.png"></a></p>
<p dir="auto">Target now becomes <code>0.7 - 0.7853 = -0.0853</code>. Since it's negative, we now rotate clockwise by 0.3926 rads (22.5˚). Target becomes -0.0853 + 0.3926 = 0.3073, which is positive, so the next rotation will be anti-clockwise by 0.1963 rads (11.25˚).</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/1r.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/1r.png"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/2r.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/2r.png"></a></p>
<p dir="auto">If we continue this process for a total of 16 iterations, the vector lines up almost perfectly with the original target angle. The <code>y</code> value of the vector is ~= <code>sin(a)</code>, while <code>x</code> ~= <code>cos(a)</code>! This is how CORDIC works; we rotate a vector around, and the state we keep is an approximation of various trigonometric functions.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/3r.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/3r.png"></a></p>
<p dir="auto">With some understanding in hand, we can return to the issue of, well, rotations actually requiring the functions we're trying to compute! We can use trigonometry to simplify the matrix.</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="a06b8c9a079b4f08cd9a0a931ce8bf23">$$
\cos(\theta) = \frac{1}{\sqrt{1 + tan^2(\theta)}}
$$</math-renderer></p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="a06b8c9a079b4f08cd9a0a931ce8bf23">$$
\sin(\theta) = \frac{\tan(\theta)}{\sqrt{1 + tan^2(\theta)}}
$$</math-renderer></p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="a06b8c9a079b4f08cd9a0a931ce8bf23">$$
\begin{bmatrix}
x' \\
y'
\end{bmatrix} = \cos(\theta)\begin{bmatrix}
1 &amp; -\tan(\theta) \\
\tan(\theta) &amp; 1
\end{bmatrix} \begin{bmatrix}
x \\
y
\end{bmatrix}
$$</math-renderer></p>
<p dir="auto">We have a few constants ones now, but we still have the <code>tan(a)</code>, plus the <code>cos(a)</code> out front. Let's ignore the <code>cos(a)</code> and focus on getting rid of <code>tan(a)</code>. As you saw when we ran through the algorithm, we're always rotating by a total of <code>~90˚</code>: First by <code>45˚</code>, then <code>22.5˚</code>, then <code>11.25˚</code>, and so on. Since we're doing this a fixed number of times, we can just precompute those values, and put them in a table. You might be thinking: <em>"You said there wouldn't be any tables!"</em>. Well, no. I said there wouldn't be any <em>expensive</em> tables. This table, in our case, will only contain 16 <code>uint32_t</code>s - a whopping 64 bytes! Even the most stripped down embedded projects can <em>usually</em> afford that. (In contrast, an <em>unoptimised</em> table for <code>sin(x)</code> that contains 4096 entries covering values from -1 to 1 would need 16KiB - and that's pretty poor precision!)</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="a06b8c9a079b4f08cd9a0a931ce8bf23">$$
\begin{bmatrix}
x' \\
y'
\end{bmatrix} = \cos(\theta)\begin{bmatrix}
1 &amp; -table[i] \\
table[i] &amp; 1
\end{bmatrix} \begin{bmatrix}
x \\
y
\end{bmatrix}
$$</math-renderer></p>
<p dir="auto">That means our rotation matrix now only contains constants! We do however still have that <code>cos(a)</code> term. In fact, every iteration brings it's own new <code>cos(a)</code> term. But because of algebra, we can simply multiply all those terms together and apply them at the end.</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="a06b8c9a079b4f08cd9a0a931ce8bf23">$$
\cos(\theta_0) \cdot \cos(\theta_1) \cdot \cos(\theta_2) \cdot ... \cdot \cos(\theta_N)
$$</math-renderer></p>
<p dir="auto">Still, that's not great. But! No matter whether we take positive or negative steps, or the number of iterations, this multiplied out series of cosines actually converge to a constant value: <code>~0.6366</code>. All we need to do is to multiply out by this value after all iterations.</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="a06b8c9a079b4f08cd9a0a931ce8bf23">$$
~0.6366 = \cos(\pm45˚) \cdot \cos(\pm22.5˚) \cdot \cos(\pm11.25˚) \cdot ... \cdot \cos(\pm\theta_N)
$$</math-renderer></p>
<p dir="auto">So that gives us only multiplications by constants over a number of iterations! Not bad. But didn't I say that CORDIC only used bit shifts and addition? For that, we need to go a little deeper into the rabbit hole.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Shifts and Adds</h2><a id="user-content-shifts-and-adds" aria-label="Permalink: Shifts and Adds" href="#shifts-and-adds"></a></p>
<p dir="auto">What the angles we plugged into <code>tan(a)</code> could instead be strategically chosen so that the result would always be an inverse power-of-2? This would be great, since multiplying or dividing by a power-of-2 is just a left or right shift for integers.</p>
<p dir="auto">Well, the <code>atan(x)</code> (arc-tangent or inverse tangent) function can do that for us. We can build a new 16-entry table, where each value is <code>atan(2**-i)</code>, for i=0 to 15. The actual rotation values for each iteration are now (<code>45˚</code>, <code>26.565˚</code>, <code>14.036˚</code>, <code>7.125˚</code>, etc).</p>
<p dir="auto">It doesn't actually half the angle each time, but as it turns out: using these angles, the process will <em>still</em> converge on the correct result! Now all those multiplications by <code>tan(a)</code> have become bit shifts by the iteration number.</p>
<p dir="auto">We still need to recompute our constant for the <code>cos(a)</code> terms. That now comes out to be around <code>0.60725</code>, which would be converted to the fixed point number <code>39796</code>.
And! It turns out there's a trick that means we don't even need to multiply by this value at the end. When we initialise the vector, we set <code>x</code> to this constant instead of 1.</p>
<p dir="auto"><math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="a06b8c9a079b4f08cd9a0a931ce8bf23">$$
~0.60725 = \cos(\pm\arctan(2^{0})) \cdot \cos(\pm\arctan(2^{-1})) \cdot \cos(\pm\arctan(2^{-1})) \cdot ... \cdot \cos(\pm\arctan(2^{-N}))
$$</math-renderer></p>
<p dir="auto">So now the CORDIC algorithm looks like this:</p>
<p dir="auto">Precompute a table for <code>tan(a)</code>, where each entry is <code>atan(2**-i)</code>. These values are, of course, converted to fixed point, so: <code>atan(2**-i) * (1 &lt;&lt; 16)</code></p>
<p dir="auto">Then, when we want to compute a sine or a cosine, we take the angle (e.g. <code>0.9152</code>), convert it to fixed point: <code>0.9152 * (1 &lt;&lt; 16) = 59978</code></p>
<p dir="auto">Then setup initial parameters:</p>
<div data-snippet-clipboard-copy-content="x = 39796
y = 0
z = 59978"><pre><code>x = 39796
y = 0
z = 59978
</code></pre></div>
<p dir="auto">The <code>z</code> parameter here is not part of the vector, but rather tracks our target angle over time. The sign of this parameter determines if we rotate clockwise or anti-clockwise.</p>
<p dir="auto">With the parameters set up, each iteration looks like this (in pseudocode):</p>
<div dir="auto" data-snippet-clipboard-copy-content="if z >= 0:
    x_next = x - (y >> i)
    y_next = y + (x >> i)
    z -= table[i]
else:
    x_next = x + (y >> i)
    y_next = y - (x >> i)
    z += table[i]
x = x_next
y = y_next"><pre><span>if</span> <span>z</span> <span>&gt;=</span> <span>0</span>:
    <span>x_next</span> <span>=</span> <span>x</span> <span>-</span> (<span>y</span> <span>&gt;&gt;</span> <span>i</span>)
    <span>y_next</span> <span>=</span> <span>y</span> <span>+</span> (<span>x</span> <span>&gt;&gt;</span> <span>i</span>)
    <span>z</span> <span>-=</span> <span>table</span>[<span>i</span>]
<span>else</span>:
    <span>x_next</span> <span>=</span> <span>x</span> <span>+</span> (<span>y</span> <span>&gt;&gt;</span> <span>i</span>)
    <span>y_next</span> <span>=</span> <span>y</span> <span>-</span> (<span>x</span> <span>&gt;&gt;</span> <span>i</span>)
    <span>z</span> <span>+=</span> <span>table</span>[<span>i</span>]
<span>x</span> <span>=</span> <span>x_next</span>
<span>y</span> <span>=</span> <span>y_next</span></pre></div>
<p dir="auto">Now we can follow a few iterations through, and see the algorithm converge on the correct sine and cosine values. Values in parentheses are fixed point.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/0.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/0.png"></a></p>
<p dir="auto">During the first iteration, <code>z</code> was positive, so the vector is rotated anti-clockwise by <code>~0.785</code> rads. Note that the magnitude of the vector increased.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/1.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/1.png"></a></p>
<p dir="auto">In the second iteration, <code>z</code> was still positive, so again the vector is rotated anti-clockwise, by <code>~0.436</code> rads, though this time it overshot the mark. The magnitude of the vector is almost one now - that's the cos(a) product term starting to converge after we set the initial <code>x</code> value!</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/2.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/2.png"></a></p>
<p dir="auto">On iteration 3, <code>z</code> was negative, so the vector is rotated clockwise by <code>~0.244</code> rads. It's clearly starting to creep up on that mark, and you can see that just a handful of iterations, we'd be able to get a fairly close approximation!</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/3.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/3.png"></a></p>
<p dir="auto">On iteration 4, <code>z</code> was again negative, so clockwise rotation by <code>~0.124</code> rads. Now that the angular change is getting pretty small, and the vector is very close to the actual result, the rotations ping back and forth, getting closer and closer to the real value.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/4.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/4.png"></a></p>
<p dir="auto">Skipping forward to the last iteration, <code>y</code> now contains a very accurate approximation for <code>sin(0.9152)</code> - with an absolute deviation of just <code>0.00000956</code>. The cosine value (in <code>x</code>) deviation is slightly higher, at <code>0.0000434</code>, but still pretty good!</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/francisrstokes/githublog/blob/main/assets/cordic/16.png"><img src="https://github.com/francisrstokes/githublog/raw/main/assets/cordic/16.png"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Wrapping up</h2><a id="user-content-wrapping-up" aria-label="Permalink: Wrapping up" href="#wrapping-up"></a></p>
<p dir="auto">There is <em>a lot</em> more to CORDIC than this, which I may cover in a future post. For instance, I didn't mention the special considerations you have to make if the angle of interest is outside of the first or fourth quadrant of the unit circle. I also didn't talk about how, with a few modifications, CORDIC can be used to compute many other functions, including <code>tan</code>, <code>atan</code>, <code>asin</code>, <code>acos</code>, <code>sinh</code>, <code>cosh</code>, <code>tanh</code>, <code>sqrt</code>, <code>ln</code>, <code>e^x</code>. Related algorithms also exist, such as <a href="https://en.wikipedia.org/wiki/BKM_algorithm" rel="nofollow">BKM</a>, designed specifically for computing logs and exponentials.</p>
<p dir="auto">I'm planning on covering this in some detail on the <a href="https://www.youtube.com/@LowByteProductions?subscribe" rel="nofollow">Low Byte Productions YouTube channel</a>, so follow me there if this kind of thing is something you'd like to learn more about.</p>
</article></div></div>]]></description>
        </item>
    </channel>
</rss>