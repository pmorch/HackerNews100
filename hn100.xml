<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 15 Dec 2024 10:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Tenstorrent and the State of AI Hardware Startups (119 pts)]]></title>
            <link>https://irrationalanalysis.substack.com/p/tenstorrent-and-the-state-of-ai-hardware</link>
            <guid>42421157</guid>
            <pubDate>Sun, 15 Dec 2024 02:59:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://irrationalanalysis.substack.com/p/tenstorrent-and-the-state-of-ai-hardware">https://irrationalanalysis.substack.com/p/tenstorrent-and-the-state-of-ai-hardware</a>, See on <a href="https://news.ycombinator.com/item?id=42421157">Hacker News</a></p>
Couldn't get https://irrationalanalysis.substack.com/p/tenstorrent-and-the-state-of-ai-hardware: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[School smartphone ban results in better sleep and improved mood (573 pts)]]></title>
            <link>https://www.york.ac.uk/news-and-events/news/2024/research/school-smartphone-ban-better-sleep/</link>
            <guid>42420352</guid>
            <pubDate>Sat, 14 Dec 2024 23:51:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.york.ac.uk/news-and-events/news/2024/research/school-smartphone-ban-better-sleep/">https://www.york.ac.uk/news-and-events/news/2024/research/school-smartphone-ban-better-sleep/</a>, See on <a href="https://news.ycombinator.com/item?id=42420352">Hacker News</a></p>
Couldn't get https://www.york.ac.uk/news-and-events/news/2024/research/school-smartphone-ban-better-sleep/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Llama.cpp Now Supports Qwen2-VL (Vision Language Model) (117 pts)]]></title>
            <link>https://github.com/ggerganov/llama.cpp/pull/10361</link>
            <guid>42419505</guid>
            <pubDate>Sat, 14 Dec 2024 21:15:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ggerganov/llama.cpp/pull/10361">https://github.com/ggerganov/llama.cpp/pull/10361</a>, See on <a href="https://news.ycombinator.com/item?id=42419505">Hacker News</a></p>
<div id="readability-page-1" class="page"><div disabled="" sortable="">
          <p dir="auto">Some of the ROPE tests are failing with the Metal backend:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cmake --build build --config Release -j &amp;&amp; ./build/bin/test-backend-ops -o ROPE -b Metal

  Device description: Apple M4 Max
  Device memory: 27648 MB (27642 MB free)

  ROPE(type=f32,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,40,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,52,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,64,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[64,1,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[64,71,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[64,8,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[80,32,2,1],n_dims=20,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[80,32,2,1],n_dims=32,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,12,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.622169948 > 0.000000100 FAIL
  ROPE(type=f32,ne_a=[128,28,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.660567534 > 0.000000100 FAIL
  ROPE(type=f32,ne_a=[80,16,2,1],n_dims=80,mode=24,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.480886705 > 0.000000100 FAIL
  ROPE(type=f32,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[128,40,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[128,52,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[128,64,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[64,1,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[64,71,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[64,8,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[80,32,2,1],n_dims=20,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[80,32,2,1],n_dims=32,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[128,12,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.622750840 > 0.000000100 FAIL
  ROPE(type=f32,ne_a=[128,28,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.725527553 > 0.000000100 FAIL
  ROPE(type=f32,ne_a=[80,16,2,1],n_dims=80,mode=24,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.300756924 > 0.000000100 FAIL
  ROPE(type=f32,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[128,40,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[128,52,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[128,64,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[64,1,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[64,71,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[64,8,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[80,32,2,1],n_dims=20,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[80,32,2,1],n_dims=32,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[128,12,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.697528381 > 0.000000100 FAIL
  ROPE(type=f16,ne_a=[128,28,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.553534330 > 0.000000100 FAIL
  ROPE(type=f16,ne_a=[80,16,2,1],n_dims=80,mode=24,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.381603012 > 0.000000100 FAIL
  ROPE(type=f16,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,40,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,52,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,64,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[64,1,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[64,71,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[64,8,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[80,32,2,1],n_dims=20,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[80,32,2,1],n_dims=32,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,12,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.514347476 > 0.000000100 FAIL
  ROPE(type=f16,ne_a=[128,28,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.493765808 > 0.000000100 FAIL
  ROPE(type=f16,ne_a=[80,16,2,1],n_dims=80,mode=24,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.395612488 > 0.000000100 FAIL
  ROPE(type=f16,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.424500,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.424500,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.424500,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.424500,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.424500,ff=0,v=0): OK"><pre>cmake --build build --config Release -j <span>&amp;&amp;</span> ./build/bin/test-backend-ops -o ROPE -b Metal

  Device description: Apple M4 Max
  Device memory: 27648 MB (27642 MB free)

  ROPE(type=f32,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,40,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,52,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,64,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[64,1,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[64,71,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[64,8,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[80,32,2,1],n_dims=20,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[80,32,2,1],n_dims=32,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,12,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.622169948 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f32,ne_a=[128,28,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.660567534 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f32,ne_a=[80,16,2,1],n_dims=80,mode=24,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.480886705 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f32,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[128,40,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[128,52,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[128,64,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[64,1,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[64,71,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[64,8,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[80,32,2,1],n_dims=20,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[80,32,2,1],n_dims=32,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[128,12,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.622750840 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f32,ne_a=[128,28,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.725527553 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f32,ne_a=[80,16,2,1],n_dims=80,mode=24,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.300756924 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f32,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[128,40,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[128,52,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[128,64,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[64,1,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[64,71,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[64,8,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[80,32,2,1],n_dims=20,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[80,32,2,1],n_dims=32,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[128,12,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.697528381 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f16,ne_a=[128,28,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.553534330 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f16,ne_a=[80,16,2,1],n_dims=80,mode=24,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): [ROPE] NMSE = 1.381603012 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f16,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=0,v=0): OK
  ROPE(type=f16,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,40,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,52,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,64,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[64,1,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[64,71,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[64,8,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[80,32,2,1],n_dims=20,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[80,32,2,1],n_dims=32,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,12,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.514347476 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f16,ne_a=[128,28,2,1],n_dims=128,mode=8,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.493765808 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f16,ne_a=[80,16,2,1],n_dims=80,mode=24,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): [ROPE] NMSE = 1.395612488 <span>&gt;</span> 0.000000100 FAIL
  ROPE(type=f16,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.000000,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.424500,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.424500,ff=0,v=0): OK
  ROPE(type=f32,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.424500,ff=1,v=0): OK
  ROPE(type=f32,ne_a=[64,128,2,1],n_dims=64,mode=2,n_ctx=512,fs=1.000000,ef=0.000000,af=1.424500,ff=1,v=0): OK
  ROPE(type=f16,ne_a=[128,32,2,1],n_dims=128,mode=0,n_ctx=512,fs=1.000000,ef=0.000000,af=1.424500,ff=0,v=0): OK</pre></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[They See Your Photos (269 pts)]]></title>
            <link>https://theyseeyourphotos.com/</link>
            <guid>42419469</guid>
            <pubDate>Sat, 14 Dec 2024 21:09:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://theyseeyourphotos.com/">https://theyseeyourphotos.com/</a>, See on <a href="https://news.ycombinator.com/item?id=42419469">Hacker News</a></p>
Couldn't get https://theyseeyourphotos.com/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[IRATA.ONLINE: A Community for Retro-Computing Enthusiasts (173 pts)]]></title>
            <link>https://irata.online/</link>
            <guid>42418982</guid>
            <pubDate>Sat, 14 Dec 2024 19:42:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://irata.online/">https://irata.online/</a>, See on <a href="https://news.ycombinator.com/item?id=42418982">Hacker News</a></p>
<div id="readability-page-1" class="page">
      

    <!-- Navigation -->
    <nav id="navbar">
      
    </nav>

    
    <header>
      
    </header>

    <div id="pwa-section">
          <div>
            <p><img alt="" src="https://irata.online/assets/install_irata_online-9a9d652d04048a6b4e88e7d1f561818a525b646f6c83f256baaa039d09d39d4c.png">
            </p>
          </div>
          <div>
              <h2>IRATA.ONLINE Web Terminal now Installable!</h2>
	      <p>The Web terminal (aka the big orange button) can now be installed as a web application. Simply click on the
	      orange button, and select Install... from your browser's menu.</p>
	    </div>
        </div>
    
    <div id="pt14_atari">
          <div>
            <p><img alt="" src="https://irata.online/assets/pt14_atari-451647a11e790415d7cacac9195d9ff69a5e5ff36f7064ffe436f5a6933948d0.jpg">
            </p>
          </div>
          <div>
              <h2>PLATOTERM 1.4 For Atari 8-bit #FujiNet Released!</h2>
	      <p>The latest #FujiNet version of PLATOTERM has been released for Atari 8-bit
		users with FujiNet adapters! You can run the latest copy by using TNFS server
		atari-apps.irata.online, and loading plato.atr from inside the Comms folder.</p>
	      <p>The source code can be found here: <a href="https://github.com/FujiNetWIFI/fujinet-apps/tree/master/platoterm">Source on GitHub</a></p>
	    </div>
        </div>
    
    <div id="platoterm64">
          <div>
            <p><img alt="" src="https://irata.online/assets/a8cart-1f451d4fe324542a2a61c64e8890b6f35419fde7f0c4c16ff1527cafda63804e.png">
            </p>
          </div>
          <div>
              <h2>PLATOTERM 1.3 LITE Cart for Atari 8-bit Released</h2>
	      <p>PLATOTERM 1.3 LITE for Atari 8-bit Computers has been released. This version fits in a 16K cartridge ROM by
		removing preferences support, but otherwise is the complete terminal program. New features in this version
		include a 2048 byte input buffer, support for higher baud rates, and all of the various supported pointing
		devices. The disk version will be updated soon to match.</p>
	      <p><a href="https://github.com/tschak909/platoterm-atari-cart/releases/tag/PLATOTERM-ATARI-LITE-1.3">Release page on Github.</a></p>
	      <p><a href="https://github.com/tschak909/platoterm-atari-cart/releases/download/PLATOTERM-ATARI-LITE-1.3/PLATOTERM-LITE-ATARI-1.3-ALL.zip">ZIP containing all ROM variants</a></p>
            </div>
        </div>

    <div id="androidapp">
          <div>
            <p><img alt="" src="https://irata.online/assets/android-3ce9a82895424a766d077e31ef4d17a8a21311f60ab8a81ee4cedfa82a66c424.png">
            </p>
          </div>
          <div>
              <h2>PLATOTERM for Android Released!</h2>
	      <p>The Android app wrapper for the JavaScript version of PLATOTERM has been released!
		You can get it on the Google Play App store! Just search for "IRATA ONLINE" or
		use the link, below.</p>
	      <p><a href="https://play.google.com/store/apps/details?id=online.irata.irataonline"><img src="https://play.google.com/intl/en_us/badges/images/badge_new.png"></a></p>
	      <p><a href="https://github.com/tschak909/platotermjs">PLATOTERM JS Source code</a></p>
	    </div>
        </div>
    
    <div id="platoterm64">
          <div>
            <p><img alt="" src="https://irata.online/assets/p6413-c5bf0bd11f0407c7c32bf4b4cc755d84a57539d503bd25dbfb6746cd85f3146a.png">
            </p>
          </div>
          <div>
              <h2>PLATOTERM 1.3 for C64 Released</h2>
	      <p>PLATOTERM 1.3 for Commodore 64 has been released, which includes many
		fixes including improved character set image processing and the addition
		of basic color support for text (for the 8 basic PLATO system colors),
		much like the ZX Spectrum version.</p>
	      <ul>
		<li><a href="https://github.com/tschak909/platoterm64/releases/tag/PLATOTERM-C64-1.3">Release Page on Github.</a></li>
		<li><a href="https://github.com/tschak909/platoterm64/releases/download/PLATOTERM-C64-1.3/platoterm-1_3-C64.d64">D64 Disk Image</a></li>
	      </ul>
            </div>
        </div>
    
    <div id="platotermgs">
          <div>
            <p><img alt="" src="https://irata.online/assets/iigs-defe6b4fa9a1d47297bb13396ab9e567f6529cedc96e08249ca6893b9bad70b0.png">
            </p>
          </div>
          <div>
              <h2>PLATOTERM for Apple IIgs Ready for alpha Testing!</h2>
	      <p>The Apple IIgs version of PLATOTERM is ready for alpha testing! Please test, if you can! You will need
		an Apple IIgs with at least 512K of RAM, Marinetti, and a supported Ethernet card such as the Uthernet
		or Uthernet II. Serial is not yet supported, but will be added in an upcoming release.</p>
	      <p><a href="https://github.com/tschak909/platotermgs/releases/tag/PLATOTERMGS-0.5-ALPHA">Release page on Github.</a></p>
	      <p><a href="https://github.com/tschak909/platotermgs/releases/download/PLATOTERMGS-0.5-ALPHA/PLATOTERMGS-0.5-ALPHA.2mg">2MG Format disk (800k)</a></p>
	    </div>
        </div>
    
    <div id="platotermST">
          <div>
            <p><img alt="" src="https://irata.online/assets/platotermst-374b6e4d16c84b1257e3401833353dcf2f117c4e8b2c895ccff1c16be62bd5f2.png">
            </p>
          </div>
          <div>
              <h2>PLATOTERM 0.8 for Atari ST</h2>
	      <p>Thanks to feedback from users, and additional dev work, there is now a beta release of
		PLATOTERM for the Atari ST. It is now considered feature complete.</p>
	      <h3>Changes since 0.5:</h3>
	      <ul>
		<li>Addition of dial directory functionality</li>
		<li>Hang-up now works correctly (DTR)</li>
		<li>Arrow keys mapped to w a d x</li>
		<li>Restore palette when untopped</li>
		<li>Lots of resource fixes.</li>
		<li>Improved 5x6 font processing (used in ST Low res mode)</li>
	      </ul>
	      <p>Please download and test, hopefully a 1.0 release soon, especially once
		I figure out how to make it play nice under MiNT!</p>
	      <p><a href="https://github.com/tschak909/platotermst/releases/tag/PLATOTERM-ST-0.8.0">Release page on Github</a></p><p><a href="https://github.com/tschak909/platotermst/releases/tag/PLATOTERM-ST-0.8.0"></a><a href="https://github.com/tschak909/platotermst/releases/download/PLATOTERM-ST-0.8.0/PLATOTERM-ST-0.8-beta.zip">ZIP Archive</a></p>
	      <p><a href="https://github.com/tschak909/platotermst/archive/PLATOTERM-ST-0.8.0.zip">Souce code in ZIP Archive</a></p>
	      <p><a href="https://github.com/tschak909/platotermst/archive/PLATOTERM-ST-0.8.0.tar.gz">Source code in TAR (GZ) Archive</a></p>
            </div>
        </div>
    
    <div id="platotermamiga">
            <p><img alt="" src="https://irata.online/assets/platotermamiga-c122043eddeff1fa3f5a39523ad7b94162cea549428b3a6af58e051fb7d8e736.png">
            </p>
          </div>
    
    <div id="news">
          <div>
            <p><img alt="" src="https://irata.online/assets/facebook_logo-9b708c4b1e3b7bf1113f9ac08ef9ec43f3d5c53f0b694c05748c0a4aa7355ecf.png">
            </p>
          </div>
          <div>
              <h2>CHECK FACEBOOK FOR NEWS</h2>
	      <p>New developments on IRATA.ONLINE happen fast! Check the <a href="http://www.facebook.com/irataonline/">Facebook group</a> for
		everything from new PLATOTerm ports, scheduling workshops and events, to announcements of new content on the service
		itself!</p>
	      <p><a href="http://www.facebook.com/irataonline/">The IRATA.ONLINE Facebook Page</a></p>
            </div>
        </div>

    <div id="about">
          <div>
            <p><img alt="" src="https://irata.online/assets/01-744429fb80e1df3aecf09372b1b0c9261955d88412ddc9f5641058725aa93855.png">
            </p>
          </div>
          <div>
              <h2>ABOUT <br>Fun, Social, Creative, Retro.</h2>
	      <p>IRATA.ONLINE is provided for the benefit of retro-computing users to have a place to socialize, and
		develop interesting multi-user, interactive, and graphical games and social applications. It descends
		from the historical PLATO system, a massive time-sharing system that lasted from 1962 until
	        NovaNET was closed in 2015. <a href="https://en.wikipedia.org/wiki/PLATO_(computer_system)">Wikipedia entry.</a></p>
	      <p>It is vital that communities grow, and to that end, IRATA.ONLINE is part of a rebirth of the PLATO system
		that started with the launching of <a href="http://cyber1.org/">Cyber1.org</a> in 2004, and is the direct
		result of the efforts of that community to provide a distribution of the PLATO system that could be run
		on other systems. IRATA.ONLINE
		was initially intended to provide users of Atari 8-bit computer systems a customized experience that
		was easy to use. It is hoped that with the introduction of more PLATO terminals for other platforms that
		IRATA.ONLINE's reach can extend even further.</p>
	      <p>Where will it go? Who knows. This is an experiment to provide something better than a BBS, by
		making something that is not only multi-user, but provides a complete social development experience
		for its users.</p>
            </div>
        </div>

    <div id="features">
          <div>
            <p><img alt="" src="https://irata.online/assets/fr2-6dd708d280e93c45b88eac1e70bbaa5daefa70b55765bdeb7f1e577801c4f10d.png">
            </p>
          </div>
          <div>
              <h2>FEATURES</h2>
	      <p>IRATA.ONLINE is a PLATO based system, which has the following pervasive features:
		</p><ul>
		  <li>Multi-User</li>
		  <li>Graphical, with combinations of text, line graphics, and custom character sets, as well as 24-bit color (on supported terminals)</li>
		  <li>Touch screen support</li>
		  <li>Terminals available for PC, Mac, Linux, Atari 8-bit, and soon Android and iOS.
		  </li><li>Multi-Player Games</li>
		  <li>Notes files for social posting on a growing variety of topics</li>
		  <li>Talk with other users, anywhere in the system, even in games!</li>
		  <li>Help with tutorials to introduce you to the system.</li>
		  <li>Development environment to make new programs for the system.</li>
		  <li>Lots of existing educational content, because it's a PLATO system.</li>
		  <li>Screen sharing facilities, even with multiple participants!</li>
		  <li>and more!</li>
		</ul>
            </div>
        </div>
    
    <div id="requirements">
          <div>
            <p><img alt="" src="https://irata.online/assets/pr23-f8f6f8dab8a05fe7d748b523316070962fb5614e60332c8040b61bf2db344299.png">
            </p>
          </div>
          <div>
              <h2>REQ'S</h2>
	      <h3>If you have a PC, Mac, or Linux System:</h3>
	      <p>If you have a PC or Mac that is already internet connected, all you need is the
		PTERM software, available from <a href="http://cyber1.org/">Cyber1.org</a></p>
	      <p><a href="https://cyber1.org/download/Win/pterm-5.0.8.exe">Download PTERM 5.0.8 for Windows</a></p>
	      <p><a href="https://cyber1.org/download/mac/pterm-5.0.9.dmg">Download PTERM 5.0.9 for MacOS</a></p>
	      <p><a href="https://cyber1.org/download/linux/pterm-5.0.8.tar.bz2">Download PTERM 5.0.8 Source Code</a></p>
	      <p><a href="http://rpi.irata.online/">Raspbian Jessie and Stretch APT repo for Raspberry Pi</a></p>
	      <p>(Linux binary builds coming soon. Setting up Package Repositories!)</p>
	      <h3>If you have a vintage computer</h3>
	      <p>IRATA.ONLINE provides PLATOTerm, a terminal emulator for PLATO systems such as <b>IRATA.ONLINE</b>, and
		<b><a href="http://www.cyber1.org/">CYBER1.ORG</a></b> PLATOTerm is being ported to dozens of systems, and
		many targets are already available. The source code is also available for all of these targets, so that
		the terminal can not only be improved, each target can be used as a concrete example of how to realize a PLATO
		terminal for a platform currently not covered by PLATOTerm.</p>
	      <table>
		<tbody><tr>
		  <th scope="col">Relnotes</th>
		  <th scope="col">Bin?</th>
		  <th scope="col">Src?</th>
		</tr>
		<tr>
		  <td><a href="https://github.com/tschak909/platoterm64/releases/tag/PLATOTerm-1.0">Apple ][</a></td>
		  <td><a href="https://github.com/tschak909/platoterm64/releases/download/PLATOTerm-1.0/PLATOTerm-1_0-AppleII.po">[PO]</a></td>
		  <td><a href="https://github.com/tschak909/platoterm64/archive/PLATOTerm-1.0.zip">[ZIP]</a><a href="https://github.com/tschak909/platoterm64/archive/PLATOTerm-1.0.tar.gz">[TGZ]</a></td>
		</tr>
		<tr>
		  <td><a href="https://github.com/tschak909/platoterm64/releases/tag/PLATOTerm-1.0">Apple IIgs</a></td>
		  <td><a href="https://github.com/tschak909/platotermgs/releases/download/PLATOTERMGS-0.5-ALPHA/PLATOTERMGS-0.5-ALPHA.2mg">[PO]</a></td>
		  <td><a href="https://github.com/tschak909/platotermgs/archive/PLATOTERMGS-0.5-ALPHA.zip">[ZIP]</a><a href="https://github.com/tschak909/platotermgs/archive/PLATOTERMGS-0.5-ALPHA.tar.gz">[TGZ]</a></td>
		</tr>	
		<tr>
		  <td>Atari 8-bit (#FujiNet)</td>
		  <td colspan="2">#FujiNet users just need to mount into a host slot:
		    <p><kbd>atari-apps.irata.online</kbd></p>
		    <p>Change to the <kbd>Networking</kbd> folder.</p>
		    <p>and mount and boot <kbd>plato.atr</kbd></p></td>
		</tr>
		<tr>
		  <td><a href="https://github.com/tschak909/platoterm64/releases/tag/PLATOTerm-1.0">Atari 8-bit (cart)</a></td>
		  <td><a href="https://github.com/tschak909/platoterm-atari-cart/releases/download/PLATOTERM-ATARI-LITE-1.3/PLATOTERM-LITE-ATARI-1.3-ALL.zip">[ROM]</a></td>
		  <td><a href="https://github.com/tschak909/platoterm-atari-cart/archive/PLATOTERM-ATARI-LITE-1.3.zip">[ZIP]</a><a href="https://github.com/tschak909/platoterm-atari-cart/archive/PLATOTERM-ATARI-LITE-1.3.tar.gz">[TGZ]</a></td>
		</tr>
		<tr>
		  <td><a href="https://github.com/tschak909/platoterm64/releases/tag/PLATOTerm-1.0">Atari 8-bit (disk)</a></td>
		  <td><a href="https://github.com/tschak909/platoterm64/releases/download/PLATOTerm-1.0/PLATOTerm-1_0-Atari.atr">[ATR]</a></td>
		  <td><a href="https://github.com/tschak909/platoterm64/archive/PLATOTerm-1.0.zip">[ZIP]</a><a href="https://github.com/tschak909/platoterm64/archive/PLATOTerm-1.0.tar.gz">[TGZ]</a></td>
		</tr>
		<tr>
		  <td><a href="https://github.com/tschak909/platoterm64/releases/tag/PLATOTERM-C64-1.3">Commodore 64</a></td>
		  <td><a href="https://github.com/tschak909/platoterm64/releases/download/PLATOTERM-C64-1.3/platoterm-1_3-C64.d64">[D64]</a></td>
		  <td><a href="https://github.com/tschak909/platoterm64/archive/PLATOTERM-C64-1.3.zip">[ZIP]</a><a href="https://github.com/tschak909/platoterm64/archive/PLATOTERM-C64-1.3.tar.gz">[TGZ]</a></td>
		</tr>
		<tr>
		  <td><a href="https://github.com/tschak909/platoterm64/releases/tag/PLATOTerm-1.0">Commodore 128</a><br><i>(64k VDC req'd)</i></td>
		  <td><a href="https://github.com/tschak909/platoterm64/releases/download/PLATOTerm-1.0/PLATOTerm-1_0-C128.d64">[D64]</a></td>
		  <td><a href="https://github.com/tschak909/platoterm64/archive/PLATOTerm-1.0.zip">[ZIP]</a><a href="https://github.com/tschak909/platoterm64/archive/PLATOTerm-1.0.tar.gz">[TGZ]</a></td>
		</tr>
		<tr>
		  <td><a href="https://github.com/tschak909/platotermpc/releases/tag/0.1-ALPHA">IBM 5150 PC (MS-DOS)</a></td>
		  <td><a href="https://github.com/tschak909/platotermpc/releases/download/0.1-ALPHA/PT-0_1.ZIP">[ZIP]</a></td>
		  <td><a href="https://github.com/tschak909/platotermpc/archive/0.1-ALPHA.zip">[ZIP]</a><a href="https://github.com/tschak909/platotermpc/archive/0.1-ALPHA.zip">[TGZ]</a></td>
		</tr>
		<tr>
		  <td><a href="https://github.com/tschak909/platotermpcjr/releases/tag/20180924">IBM PCjr or Tandy 1000</a></td>
		  <td><a href="https://github.com/tschak909/platotermpcjr/releases/download/20180924/ptjr-0_01.zip">[ZIP]</a></td>
		  <td><a href="https://github.com/tschak909/platotermpcjr/archive/20180924.zip">[ZIP]</a><a href="https://github.com/tschak909/platotermpcjr/archive/20180924.tar.gz">[TGZ]</a></td>
		</tr>		
		<tr>
		  <td><a href="https://github.com/tschak909/platotermzx/releases/tag/PLATOTERMZX_1_2">ZX Spectrum (RS232)</a></td>
		  <td><a href="https://github.com/tschak909/platotermzx/releases/download/PLATOTERMZX_1_2/PLATOTermZX-1.2-IF1.tap">ZX Interface1 [TAP]</a><br>
		  <a href="https://github.com/tschak909/platotermzx/releases/download/PLATOTERMZX_1_2/PLATOTermZX-1.2-PLUS.tap">Plus systems [TAP]</a></td>
		  <td><a href="https://github.com/tschak909/platotermzx/archive/PLATOTERMZX_1_2.zip">[ZIP]</a><a href="https://github.com/tschak909/platotermzx/archive/PLATOTERMZX_1_2.tar.gz">[TGZ]</a></td>
		</tr>		
		<tr>
		  <td>ZX Spectrum (Spectranet)</td>
		  <td colspan="2">Spectranet users just need to type:
		    <p><kbd>%mount 0,"IRATA.ONLINE"</kbd></p>
		    <p><kbd>%load ""</kbd></p></td>
		</tr>
		<tr>
		  <td><a href="http://github.com/tschak909/platotermst/releases">Atari ST</a></td>
		  <td><a href="https://github.com/tschak909/platotermst/releases/download/PLATOTERM-ST-0.8.0/PLATOTERM-ST-0.8-beta.zip">[zip]</a></td>
		  <td><b><a href="https://github.com/tschak909/platotermst/archive/PLATOTERM-ST-0.8.0.zip">[zip]</a><a href="https://github.com/tschak909/platotermst/archive/PLATOTERM-ST-0.8.0.tar.gz">[tgz]</a></b></td>
		</tr>
		<tr>
		  <td><a href="https://github.com/tschak909/platotermamiga/releases/tag/PLATOTERM-AMIGA-0_5">Commodore Amiga</a></td>
		  <td><a href="https://github.com/tschak909/platotermamiga/releases/download/PLATOTERM-AMIGA-0_5/PLATOTerm-0.5-1x-bootable.adf">[1.3 adf]</a><a href="https://github.com/tschak909/platotermamiga/releases/download/PLATOTERM-AMIGA-0_5/PLATOTerm-0.5-2x.adf">[2.x+ adf]</a></td>
		  <td><b><a href="https://github.com/tschak909/platotermamiga/archive/PLATOTERM-AMIGA-0_5.zip">[zip]</a><a href="https://github.com/tschak909/platotermamiga/archive/PLATOTERM-AMIGA-0_5.tar.gz">[tgz]</a></b></td>
		</tr>		
		<tr>
		  <td><a href="https://github.com/tschak909/platoterm99/releases/tag/PLATOTERM99-0.1">TI 99/4A</a></td>
		  <td><a href="https://github.com/tschak909/platoterm99/releases/download/PLATOTERM99-0.1/PLATOTerm99-0.1-TEST.dsk">[DSK]</a></td>
		  <td><a href="https://github.com/tschak909/platoterm99/archive/PLATOTERM99-0.1.zip">[ZIP]</a><a href="https://github.com/tschak909/platoterm99/archive/PLATOTERM99-0.1.tar.gz">[TGZ]</a></td>
		</tr>		
		<tr>
		  <td>TI-99/4A (TIPI)</td>
		  <td colspan="2">TIPI users can simply do:
		    <p><kbd>CALL TIPI("PI.HTTP://TI99.IRATA.ONLINE/PLATO")</kbd></p>
		</td></tr>
		<tr>
		  <td><a href="https://github.com/tschak909/platotermx68000/releases/tag/PLATOTERM-X68000-V1.0">Sharp X68000</a></td>
		  <td><a href="https://github.com/tschak909/platotermx68000/releases/download/PLATOTERM-X68000-V1.0/PLATOTerm-X68000-V1.0.xdf">[XDF]</a></td>
		  <td><a href="https://github.com/tschak909/platotermx68000/archive/PLATOTERM-X68000-V1.0.zip">[ZIP]</a><a href="https://github.com/tschak909/platotermx68000/archive/PLATOTERM-X68000-V1.0.tar.gz">[TGZ]</a></td>
		</tr>		
		<tr>
		  <td><a href="http://github.com/tschak909/platotermzx">Amstrad CPC</a></td>
		  <td><a href="http://github.com/tschak909/platotermzx">[git]</a></td>
		  <td><b>Soon!</b></td>
		</tr>
		<tr>
		  <td><a href="http://github.com/tschak909/platotermzx">MSX</a></td>
		  <td><a href="http://github.com/tschak909/platotermzx">[git]</a></td>
		  <td><b>Soon!</b></td>
		</tr>
		<tr>
		  <td><a href="http://github.com/tschak909/platotermzx">Spectravideo SVI-3x8</a></td>
		  <td><a href="http://github.com/tschak909/platotermzx">[git]</a></td>
		  <td><b>Soon!</b></td>
		</tr>
		<tr>
		  <td><a href="http://github.com/tschak909/platotermzx">Memotech MTX-512</a></td>
		  <td><a href="http://github.com/tschak909/platotermzx">[git]</a></td>
		  <td><b>Soon!</b></td>
		</tr>
		<tr>
		  <td><a href="http://github.com/tschak909/platotermzx">Microbee</a></td>
		  <td><a href="http://github.com/tschak909/platotermzx">[git]</a></td>
		  <td><b>Soon!</b></td>
		</tr>
		<tr>
		  <td><a href="http://github.com/tschak909/platotermst">Tatung Einstein</a></td>
		  <td><a href="http://github.com/tschak909/platotermst">[git]</a></td>
		  <td><b>Soon!</b></td>
		</tr>
	      </tbody></table>
	      <h3>If you have something else?</h3>
	      <p>We not only provide a complete protocol specification, but also multiple complete implementations in C,
		as well as the source code to the above Atari PLATO cartridge.</p>
	      <p>More details in the <a href="#technical">TECH</a> section.</p>
            </div>
        </div>
    
    <div id="connecting">
          <div>
            <p><img alt="" src="https://irata.online/assets/connecting-0ca74aaabe1229c728b9a6f6e2559547ddfdd7edebea8aa2d1404ac57d390863.png">
            </p>
          </div>
          <div>
              <h2>CONNECT</h2>
	      <p>To connect to IRATA.ONLINE, use the following connection information:</p>
	      <ul>
		<li>Host: IRATA.ONLINE</li>
		<li>Port: 8005 (ASCII Protocol)</li>
	      </ul>
	      <h3>Guest Sign-On</h3>
	      <p>If you want to try the system, before your account is approved, you can log in with the following
		sign-on:</p>
	      <p><b>user name: </b>guest<br>
	      <b>group: </b>guest</p>
	      <p>While this won't give you access to every part of the system (you will not be able to see users, or to use
	      term-talk, for example), it will allow you to see the system, before your account is approved.</p>
            </div>
        </div>
    
    <div id="screenshots">
          <div id="carouselScreenshots" data-ride="carousel">
		<ol>
		  <li data-target="#carouselScreenshots" data-slide-to="0"></li>
		  <li data-target="#carouselScreenshots" data-slide-to="1"></li>
		  <li data-target="#carouselScreenshots" data-slide-to="2"></li>
		  <li data-target="#carouselScreenshots" data-slide-to="3"></li>
		  <li data-target="#carouselScreenshots" data-slide-to="4"></li>
		  <li data-target="#carouselscreenshots" data-slide-to="5"></li>
		  <li data-target="#carouselScreenshots" data-slide-to="6"></li>
		  <li data-target="#carouselScreenshots" data-slide-to="7"></li>
		  <li data-target="#carouselScreenshots" data-slide-to="8"></li>
		  <li data-target="#carouselscreenshots" data-slide-to="9"></li>
		</ol>
		<div>
		  <div>
		    <p><img alt="Main Menu - Pterm" src="https://irata.online/assets/01_main_menu-7e6e42e22db4f31b09609571fa759a07014d43ac93e7c534c0f94061f8970ad6.png"></p><div>
		      <h5>Main Menu - As shown in PTERM</h5>
		      <p>This is the entry point for sign-ons, which branches out into the other parts of the system.</p>
		    </div>
		  </div>
		  <div>
		    <p><img alt="Main Menu - Atari" src="https://irata.online/assets/01a_main.menu-df43eab47919a38aa666ae01e3d033fd7d9bb03c533eb5a6af01f8c29872808e.png"></p><div>
		      <h5>Main Menu - As shown on Atari</h5>
		      <p>The same menu as shown on the Atari PLATO cartridge.</p>
		    </div>
		  </div>
		  <div>
		    <p><img alt="Games Menu - Pterm" src="https://irata.online/assets/02_games-cec97f27fbbde7375806c8efda34d8694529a7b28d470a11bd8606fd75d6997c.png"></p><div>
		      <h5>Games Menu</h5>
		      <p>IRATA.ONLINE is a fantastic platform for multi-player online games, many games from the PLATO
			tradition are available here, with more to come, both from PLATO's past, and from users like you!</p>
		    </div>
		  </div>
		  <div>
		    <p><img alt="Notes Menu - Pterm" src="https://irata.online/assets/03_notes-c1e8c65d895f7ade2d0b58b5a7e7d396d24ac14a1261a20b897257a3105e94a8.png"></p><div>
		      <h5>Notes Menu</h5>
		      <p>Notesfiles are the PLATO equivalent of forum posts. Anyone can post and reply to them, and
			anyone can request for notesfiles to be made. They can be private to a single person, a group
			or to the public.</p>
		    </div>
		  </div>
		  <div>
		    <p><img alt="Help Menu - Pterm" src="https://irata.online/assets/04_help-7a275d4851ff16308a1da50b944cf98d0ea5ca21b2611427aacdaf1a63c89227.png"></p><div>
		      <h5>Help Menu</h5>
		      <p>A help menu is provided, with tutorials showing how to use the system.</p>
		    </div>
		  </div>
		  <div>
		    <p><img alt="Playing Airfight - Pterm" src="https://irata.online/assets/05_airfight-43b8fcc52f709f71f8a0d4c94282e2d0cd53d9bd177f5708f74629ea6c69f9f1.png"></p><div>
		      <h5>Airfight</h5>
		      <p>One of the games available, is Airfight, where you participate in a multi-player 3D dogfight
			simulation!</p>
		    </div>
		  </div>
		  <div>
		    <p><img alt="Editing TUTOR code - Pterm" src="https://irata.online/assets/06_programming-01ea21b9271d1fd4533cd0b2f7b9fe36787571ca13807aa82cd0300637f697c1.png"></p><div>
		      <h5>Programming Tools</h5>
		      <p>IRATA.ONLINE is written in the TUTOR language, and a complete programming environment, with
			lots of programming tools, and context sensitive help is pervasively available.</p>
		    </div>
		  </div>
		  <div>
		    <p><img alt="Screen Editor - Pterm" src="https://irata.online/assets/07_screen_editor-adfac708f3103d32492a148032cc859ec85bbcd46b9ab86ddfa286c8ff8c545b.png"></p><div>
		      <h5>Screen Designer</h5>
		      <p>Screens can be visually drawn, and when done, translated into TUTOR code for your game,
			lesson, or other tool.</p>
		    </div>
		  </div>
		  <div>
		    <p><img alt="Character Editor - Pterm" src="https://irata.online/assets/08_character_editor-78ec2cd02e1d176d15e3f3ae5af61082033f5c8c0690b9220482be9de3cb4f57.png"></p><div>
		      <h5>Character Set Designer</h5>
		      <p>Programmable character sets are an integral part of the PLATO experience, they allow you to
			design graphics that can be quickly transmitted, and the system provides a way to create not
			just individual character cells, but combine them together to produce more complex graphics.</p>
		    </div>
		  </div>
		  <div>
		    <p><img alt="Playing Empire - Pterm" src="https://irata.online/assets/09_empire-be2b61aa176cffe70c184cf60a7238a6979db4c20da9e3faab321470a995fd88.png"></p><div>
		      <h5>Games: Empire</h5>
		      <p>Empire is an example of a multi-player space conquest game. You play various teams, bent on
			planetary conquest.</p>
		    </div>
		  </div>
		</div>
		<p><a href="#carouselScreenshots" role="button" data-slide="prev">
		  
		  <span>Previous</span>
		</a>
		<a href="#carouselScreenshots" role="button" data-slide="next">
		  
		  <span>Next</span>
		</a>
	      </p></div>
          <div>
              <h2>SHOTS</h2><p>
	      Here are some example screenshots showcasing the IRATA.ONLINE experience. The majority
	      of these screenshots were taken with the PTERM emulator linked to above. PTERM provides
	      an authentic PLATO experience, either in pure orange and black, or with color!
	      Some screenshots of other terminal emulators, such as the Atari PLATO cartridge, are also
	      included.
           </p></div>
        </div>

    <div id="videos">
          <div>

	      <p>
		<iframe src="https://www.youtube.com/embed/NM7T2G-V3So?rel=0" allowfullscreen=""></iframe>
	      </p>
	      
            </div>
          <div>
              <h2>VIDEOS</h2>
	      <p>Shown here is a video providing an overview of IRATA.ONLINE, and its most basic and
		pervasive features. We log onto the system using both the PTERM and Atari clients, and
		walk through the various menus, showing quickly how notes (and personal notes) work, as
		well as show a quick glance of the games available, and a quick introduction to the unique
		programming environment available on PLATO systems.</p>
	      <p><a href="https://irata.online/videos">More Videos...</a></p>
            </div>
        </div>
    
    <div id="technical">
          <div>
            <p><img alt="" src="https://irata.online/assets/technical_circle-fbbe1ef3869f9be1d8e810b5759b087c5d7e1330687162adc791650c31b885d1.png">
            </p>
          </div>
          <div>
              <h2>TECH</h2>
	      <h3>How do I make a terminal for this service?</h3>
	      <p>The Protocol that IRATA.ONLINE uses is an ASCII based protocol developed for PLATO.
		it is ASCII in that it uses 7-bit characters and does not use the 8th bit of the byte.
		The protocol is completely documented in the "s0ascers" document, provided both below
		and accessible using either author mode or Go in the menu system. If you wish to make
		terminal software to access this service, this document is most useful.</p>
	      <p><a href="https://irata.online/assets/s0ascers-045c83081e9ada2008378c3ae6aa62564b213a71decf9fe04608909b91d20ad1.html">S0ASCERS Document (HTML format)</a></p>
	      <p><a href="https://irata.online/assets/s0ascers-87929471a98d4887004e2afbbade675d77d53320f8112d9dbbe95fd433949564.txt">S0ASCERS Document (ASCII text format)</a></p>
	      <h4>Example Terminal Code</h4>
	      <p>To help foster adoption of the service, alongside the protocol implementation documentation
		above, and the pterm source code, also above. Steve Peltz also provided example implementations
		of a classic 68K Macintosh terminal (MacPAD) and a Sun SPARC terminal (XPad), both of these
		are sample implementations written in easy to understand C, that can be brought over to bootstrap
		other terminal program efforts. A big thank you to Steve Peltz.</p>
	      <p><a href="https://irata.online/assets/macpad.tar-f7d50fe7c4d3fe2a2b6d8d6d0a15981ec197fcb595efaffb0b56f1d42b5d3ab4.gz">MacPAD Source Code (1990)</a></p>
	      <p><a href="https://irata.online/assets/sparcpad.tar-8d66d2eb6acd0e1ce7b25971ff98f44572d890d2c325a0e97a27687454384dba.gz">SPARCPAD Source Code (1990)</a></p>
	      <p><a href="http://www.github.com/jduerstock/tlp">Atari PLATO Cartridge (The Learning Phone) Source Code at github.</a></p>
	      <h4>Micro Tutor Source Code</h4>
	      <p>While not needed, it is possible for PLATO terminals to receive code from IRATA and execute it locally, possibly while interacting with code running on IRATA. A Micro Tutor interpreter exists within PTerm 6.0, and thus can be used to run Micro-Tutor lessons, and with appropriate implementations on other processors (6502, 6809, 68000, etc.), Micro-TUTOR could be extended to a wide variety of retro-computing systems. Source code in assembly for the Z80 Micro-Tutor interpreter is below:</p>
	      <p><a href="http://www.control-data.info/plaopl_source.zip">Micro-PLATO Source Code extracted from IRATA's filesystem</a></p>
	      <p><a href="http://drs.ddns.net/index/mtutor/mtutorCompleteLvl2.zip">Complete Level-2 Micro-TUTOR source code</a></p>
	      <p><a href="http://drs.ddns.net/index/mtutor/ppttutLvl4.zip">The core interpreter for Micro-TUTOR level 4</a></p>
	      <h3>How do I write software for this service?</h3>
	      <p>IRATA.ONLINE like all PLATO systems, utilizes the TUTOR language for the majority of its
		programs and lessons. It is a very simple language to learn, and is designed to leverage
		the unique aspects of the service. The editor, debugger, and visual editors needed to make
		excellent programs for this service, are all built in, and available to users that ask for
		an Author sign-on. </p>
	      <p>There is also the <b>=0introtut=</b> lesson available from the Help menu and in
		author mode, as well as the <b>=aids=</b> lesson, which serves as a reference guide.</p>
	      <p>In addition, the fine folks at bitsavers.org and control-data.info provided a copy of
		<i>The Tutor Language</i> in PDF format, so you can teach yourself TUTOR quickly!</p>
	      <p><a href="https://irata.online/assets/The_TUTOR_Language_1978_ocr-cb84937db5ac9e6bb387028c56eb2c5d70844658edf58447a090abfb1bb4eea0.pdf">The Tutor Language (PDF Format)</a></p>
	      <p><a href="https://irata.online/assets/Introduction_to_Tutor-937ef6097482f2c79f790977c80516e1bd11bb52178baec607a4c34860b3969b.pdf">Introduction to Tutor (PDF Format)</a></p>
	    </div>
        </div>
    <a rel="me" href="https://oldbytes.space/@tschak">Mastodon</a>


    <!-- Footer -->
    
    
    
  

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hacking physics from the back of a napkin (2020) (106 pts)]]></title>
            <link>https://hapax.github.io/physics/teaching/hacks/napkin-hacks/</link>
            <guid>42418309</guid>
            <pubDate>Sat, 14 Dec 2024 17:31:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hapax.github.io/physics/teaching/hacks/napkin-hacks/">https://hapax.github.io/physics/teaching/hacks/napkin-hacks/</a>, See on <a href="https://news.ycombinator.com/item?id=42418309">Hacker News</a></p>
Couldn't get https://hapax.github.io/physics/teaching/hacks/napkin-hacks/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Humans are unreliable models of mouse disease (192 pts)]]></title>
            <link>https://www.cell.com/cell/abstract/S0092-8674(24)00897-3</link>
            <guid>42418272</guid>
            <pubDate>Sat, 14 Dec 2024 17:23:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cell.com/cell/abstract/S0092-8674(24)00897-3">https://www.cell.com/cell/abstract/S0092-8674(24)00897-3</a>, See on <a href="https://news.ycombinator.com/item?id=42418272">Hacker News</a></p>
Couldn't get https://www.cell.com/cell/abstract/S0092-8674(24)00897-3: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Antimatter Production, Storage, Control, Annihilation Applications in Propulsion (133 pts)]]></title>
            <link>https://www.sciencedirect.com/science/article/pii/S2666202724004518</link>
            <guid>42418264</guid>
            <pubDate>Sat, 14 Dec 2024 17:21:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sciencedirect.com/science/article/pii/S2666202724004518">https://www.sciencedirect.com/science/article/pii/S2666202724004518</a>, See on <a href="https://news.ycombinator.com/item?id=42418264">Hacker News</a></p>
Couldn't get https://www.sciencedirect.com/science/article/pii/S2666202724004518: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[The 1955 Le Mans disaster changed motorsport (136 pts)]]></title>
            <link>https://www.essesmag.com/articles/racings-deadliest-day</link>
            <guid>42417480</guid>
            <pubDate>Sat, 14 Dec 2024 14:52:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.essesmag.com/articles/racings-deadliest-day">https://www.essesmag.com/articles/racings-deadliest-day</a>, See on <a href="https://news.ycombinator.com/item?id=42417480">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><section><div><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725.jpg" loading="lazy" sizes="(max-width: 479px) 100vw, (max-width: 767px) 90vw, (max-width: 1439px) 100vw, 1200px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376755c70594649467689c_C43725.jpg 2500w" alt=""></p></div><p><h2>How the 1955 Le Mans disaster changed motorsport forever</h2></p></section><section><div><div data-w-id="427ce4fb-b525-fa77-7840-9b60be473c41"><div><p><span>WORDS</span> Darrell Hartman</p><p><span>NOVEMBER 15, 2024</span></p></div><p><span>I</span>t is often said that the Le Mans 24-hour endurance race is more about stamina than speed, but in the days leading up to the 1955 edition, which would go down as one of the worst tragedies in motorsport history, you couldn’t help but notice how fast the cars were going.&nbsp;</p><p>The D-shaped Circuit de la Sarthe, located in the French countryside 120 miles southwest of Paris, consisted of public roads that were still regularly used by horse-drawn hay wagons. In 1950, the quickest lap around it had been done at an average speed of 102.7 mph. Four years later, a Jaguar and a Ferrari both surpassed 115 mph. In 1955, Ferrari’s Eugenio Castellotti demolished that record during practice, hitting 118.56 mph. The flat-out speeds achieved in practice were equally astonishing, with Juan Manuel Fangio, the driver widely agreed to be the world’s best, getting his Mercedes-Benz 300 SLR up to 181.57 mph on the 3.6-mile Mulsanne Straight.</p><p>After two years away from sportscar racing, Mercedes had returned with a masterfully engineered new machine. One of its drivers at Le Mans that year, John Fitch, later described the 300 SLR as “a ferocious racing car” with “a staggering complexity of parts.” Its body was made of ultralight magnesium alloy; <em>Motor Sport</em> reported that its fuel-injected 3-liter engine emitted an “unholy scream.” One month earlier, Fangio and the 25-year-old English driver Stirling Moss had powered theirs to a one-two finish at the Mille Miglia. In the hands of elite drivers like these, it seemed almost unbeatable.</p></div><div><div data-w-id="143281a4-5fd8-da83-2fe9-8357ea78b16e" data-ix="new-interaction-2"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H.jpg" loading="lazy" sizes="(max-width: 991px) 100vw, (max-width: 1439px) 44vw, 650px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H-p-3200.jpg 3200w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767581b9540b731343869_DDMD2H.jpg 5085w" alt=""></p><div><p>Alfred Neubauer (Left) with Juan Manuel Fangio (Center). </p><p>Heritage Image Partnership Ltd / Alamy</p></div></div><div><p data-w-id="ca0f7162-993c-8bfa-82e7-e87e8c793677"><h2>Though notoriously grueling for car and driver, Le Mans was not considered all that dangerous.</h2></p><p>The 300 SLR was virtually identical to the company’s championship-winning W196 Formula 1 car. Like Ferrari and others, though, Mercedes dubiously classified it as a consumer “prototype” in order to enter it at Le Mans. The disparity between these specialized racers and the slower production models on the track rankled some. For the second year running, Austin-Healey had withdrawn its team of near-standard production cars in protest over the proliferation of bogus “prototypes.” For many others, though, the enormous gap in vehicle capabilities was just another defining element of the classic race also known as <em>La Ronde Infernale</em>.</p><p>Though notoriously grueling for car and driver, Le Mans was not considered all that dangerous. The eight-mile circuit had been rebuilt in 1949 to modern specifications after the old track was destroyed by German bombing. In the six years since, four drivers had been killed there, an unremarkable number by period standards. Tunnels ran under the track so that spectators could cross safely, and the viewing areas were protected by four-foot-tall earthen barriers.</p></div></div><div><p>Some of the best action was to be seen at the start-finish line, where a straightaway encouraged dramatic overtakes as other cars entered and exited the pits. A handful of naysayers had begun to complain that this section of the racecourse was unsafe. The quarter-mile-long pit area was undivided from the main track; it was also narrow, with no deceleration lane, and a right kink leading up to it gave harried drivers one more thing to think about as they approached this busy area at speed. Mercedes team director Alfred Neubauer later claimed that he had, for this reason, warned his drivers to pull over well in advance when pitting. Some of Neubauer’s fears were confirmed during the Wednesday evening test drive, when a DB-Panhard entering the pits collided with Moss’s Mercedes. French driver Jean Behra, who was standing nearby with two journalists, sustained head and leg injuries that prevented him from racing for Gordini that weekend.</p><p>Another topic of discussion leading up to the race was the hinged fap that Mercedes had attached to the rear deck of its cars. The driver pulled a dashboard lever to raise it, creating drag and an additional boost of stopping power that was sure to come in handy at the end of the Mulsanne Straight, where the dramatic comedown from speeds of around 180 mph created overtaking opportunities. An impressed Moss called the system “unbelievable,” but it left rivals confused. Seeing a Mercedes “wind brake” flip up for the first time, a Porsche driver assumed the car’s trunk latch had broken. Others complained that it obstructed their views on corners. The night before the race, Mercedes complied with an official request to cut a second Plexiglas window in its metal braking faps. This sort of compromise was typical during an age of motorsport in which teams were free to conduct experiments, including strange ones, and worry about the safety implications later.</p></div><div data-w-id="430014d9-f525-4071-0a52-ef86b180800f"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 767px) 90vw, (max-width: 1439px) 92vw, 1320px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52-p-3200.jpg 3200w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376758fb4b94598694220a_E0RC52.jpg 5575w" alt=""></p><div><p>Mike Hawthorn pictured at Silverstone in 1956. </p><p>Keystone Press / Alamy</p></div></div><div><p>Mercedes’ wind brakes were its answer to the powerful disc brakes used by Jaguar, whose highly aerodynamic D-Type was one of the other fastest cars on the circuit. Jaguar had become a force at Le Mans in recent years, winning in 1953 and losing to Ferrari by less than three minutes in 1954. For Jaguar, the fact that it had no Formula 1 team made the 24 Hours an especially important prize.</p><p>Its star driver in 1955 was 26-year-old Englishman Mike Hawthorn. Fangio had decimated the Grand Prix competition the year before with Mercedes, but Hawthorn, racing for Ferrari, had finished third. People were still talking about the French Grand Prix of 1953, when he’d won a sixty-lap duel against Fangio by a single second after overtaking the unflappable Argentine on the last corner.</p></div><div><div><p>The six-foot-two Hawthorn was blonde, handsome, rowdy, and stylish. His habit of wearing butterfly-shaped bow ties in the cockpit had earned him the nickname Le Papillon. His Jaguar teammate Norman Dewis later remembered him as “genuinely debonair.” Hawthorn embraced the oftrack hedonism that was typical of the era. He liked beer and women, and often disappeared after a day of driving to indulge in both, sometimes with carousing buddies who drove for other teams. These included Moss and the lesser-known Lance Macklin, who was also competing at that year’s Le Mans. Macklin had a privileged and well-traveled background; he’d spent part of his childhood in Monte Carlo, attended Eton, and gone to college in Switzerland. Though talented, the playboyish Macklin had never taken the profession as seriously as Moss or Hawthorn. “Sometimes it was a nightmare to make him practice at all,” one of his Aston Martin teammates later recalled. “If there was some blonde he was after, he just wouldn’t show up.”</p><p>One of the best results of Macklin’s career had been at Le Mans, in 1951, when he’d logged a third-place finish in an Aston Martin. The Austin-Healey 100S he’d secured for 1955 was a private entry, since the manufacturer’s team was once again sitting out the race. Macklin’s was the first Austin-Healey to be outfitted with disc brakes, but these were far less impressive than the Jaguar’s, and the experienced Macklin was realistic about his prospects. He could compete with other roadsters, but one of his main tasks would be to keep out of the way of faster cars like Hawthorn’s.</p></div><div data-w-id="56f44674-a9cc-ae78-18da-432399729355" data-ix="new-interaction-2"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 767px) 90vw, (max-width: 991px) 92vw, (max-width: 1439px) 44vw, 650px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767865f2f6a4a6a6e340a_1017471912-LAT-19550611-C43741.jpg 3000w" alt=""></p><div><p>The “wind brake” in action on Fangio/Moss Mercedes. </p><p>LAT Photographic</p></div></div></div></div><div data-w-id="72e8d0f8-997c-42a1-41df-3d146436203c"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113.png" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 991px) 90vw, 800px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113-p-500.png 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113-p-800.png 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113-p-1080.png 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113-p-1600.png 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67362975ffe2bf9fea09cfbf_184340153113.png 2000w" alt=""></p><div><p>Memories of the war were still fresh in the minds of the public. </p><p>Francois Mori / AP</p></div></div><div><div><p>Hawthorn’s celebrated French Grand Prix victory over Fangio had been in a Ferrari. This time around, he was driving a British car against a German one, and there was more national pride involved. Hawthorn’s anti-German prejudice was one of his defining passions. He was known to confront British motor enthusiasts and chew them out for buying “bloody Kraut cars,” and when driving himself to races in Germany, he timed his refueling stops to avoid buying gas in a country that he still, in many ways, viewed as the enemy. These feelings were no secret; they were, in fact, probably the reason that Neubauer had never approached him about driving for Mercedes and had signed Moss instead.</p><p>Nor was this sentiment unique to Hawthorn. Memories of the war were still fresh in the minds of the public; Nazis had imprisoned French resistance fighters in an internment camp just a few miles away from the Circuit de la Sarthe. The prospect of a Le Mans victory for Mercedes, the German powerhouse, ignited national sentiment in the French and British that can be hard to appreciate today. Aware of these sensitivities, Neubauer had assembled a six-man driving team for Le Mans that included just two Germans, Karl Kling and Hans Herrmann. Its biggest stars were Fangio and Moss. Its biggest curiosity was a 49-year-old Frenchman named Pierre Levegh.</p><p>Levegh was known to French racing fans, and his selection made sense from a PR perspective. Otherwise, the balding Parisian garage owner was a surprising choice. He was past his prime, and he hadn’t exactly distinguished himself in his prime, either. He had, however, shown himself to be capable of near-greatness at Le Mans.</p></div><div><p>Levegh had dreamed of winning the prestigious French race since adolescence. He’d attended every edition of Le Mans since 1930 and, beginning in 1938, had driven in it six times. After failing to secure a car for the first two postwar races, he had co-driven a factory Talbot to a fourth-place finish in 1951. The following year, aged 46, Levegh entered a Talbot that he’d done all the work on himself – and insisted on going the distance alone. When dawn broke on Sunday morning, many of the other fastest cars had retired, leaving Levegh and his Talbot with an astonishing three-lap lead. Each time he came in for refueling, he refused to hand the wheel over to his increasingly frustrated partner. His mileage total surpassed 2,000. He was 70 minutes away from glory, and borderline catatonic from exhaustion, when his car stopped running. Shortly after his race ended, Levegh was seen lying motionless on the grass behind the pits with a rug draped over him. Most chroniclers report that he made a shifting error that destroyed his crankshaft, although this account is disputed. Levegh himself never explained what happened.</p><p>That year, Mercedes finished first and second in front of a devastated and somewhat hostile French crowd. (The next year, the rules were changed to limit each driver’s time at the wheel to 18 hours.) The politically astute Neubauer, who’d brought all German drivers that year, made a mental note to put Levegh in a Mercedes when the team returned to Le Mans. When it did, in 1955, he followed through, pairing Levegh with another amateur driver, an American named John Fitch. Unlike the rest of the Mercedes team, Fitch got to know Levegh a little during the lead-up to the race. The Frenchman had a “habitually solemn demeanor,” he later wrote, and a “general air of deep reflection.” He spoke no English, and it only added to his air of somber mystery that Pierre Levegh was not his real name. He had changed his name from Pierre Bouillin to Pierre Levegh as a young man, in tribute to an uncle who’d been a race car driver – and originally, it was said, to keep his mother from knowing about the dangerous hobby he’d taken up.</p><p>Though he was generally not one for mingling, Levegh confided to Fitch before the 1955 Le Mans that he felt uncomfortable in the SLR. When the head of the Mercedes press department, Arthur Keser, teased Levegh for his oversized crash helmet, the Frenchman was unamused. It was the type worn by American fighter pilots, he explained, and offered “special protection.”</p><p>The Mercedes drivers Levegh, Fitch, Kling, and André Simon (a Frenchman who’d been brought in last-minute as a replacement for the injured Hermann) were expected to circulate, not win. These lower-tier drivers would be racing in the shadow of the 300 SLR being piloted by Moss and Fangio, a dream team that gave Mercedes even more of a presumptive edge against Ferrari and Jaguar. Hawthorn, for his part, had more confidence in his own abilities and his D-Type than he did in his co-driver, Ivor Bueb, who was competing in his first endurance race. Surely whatever small lead he could gain over Mercedes would start to disappear once the drivers swapped. Fangio took the first stint in his Mercedes car. Neubauer spat on the ground to wish him luck.</p></div></div><div data-w-id="7a9032a7-7a6a-56b8-4262-13ed44d741bb"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 991px) 90vw, 800px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521-p-3200.jpg 3200w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628907bb5067c9a3c5c32_2E26521.jpg 3548w" alt=""></p><div><p>Drivers sprinting to their cars at the start of the 1955 24 Hours of Le Mans. </p><p>Shawshots / Alamy</p></div></div><div><div><div><p>The drivers dashed across the pits and into their cars at 4 p.m. exactly. (The theatrical ‘Le Mans Start’ was discontinued for safety reasons in 1970.) Fangio’s luck failed him immediately: his gear stick got stuck inside his trouser leg, and he started in the rear of the pack.</p><p>Castellotti took an early lead in his Ferrari, setting a new lap record on his first flying lap. Hawthorne slid into second after passing the Ferrari driven by Umberto Maglioli on the Mulsanne Straight. Fangio, once he’d gotten his khakis clear of his machinery, spent his first two laps battling all the way into fourth. Then he overtook Maglioli, in full view of the grandstand crowd, at the end of another record lap.</p><div><p>Ten new lap records would be set – by Castellotti, Fangio, and Hawthorn – within the first two hours. The pace at the front was bone-rattling, more like a Grand Prix than an endurance race, and spectators were transfixed. Around the grandstand area and elsewhere, they stood on tables, chairs, and boxes in order to get a better view over the four-foot-tall earth barriers.</p><p>Half an hour in, the top three cars had pulled away from the next-fastest group and begun lapping others. At 5:10 p.m., 70 minutes into the race, Castellotti’s foot slipped off his brake pedal. As he struggled to avoid spinning out, Hawthorn, and then Fangio, overtook him.</p></div><p>The race now became a duel for the ages, with Hawthorn fighting tenaciously to stay ahead. Fangio took the lead and promptly lost it. He took the lead again on the 18th lap and held it longer, causing Hawthorn to succumb to a moment of mental weakness. Hawthorn later recalled thinking that it was perhaps inevitable for him to be overtaken by a man-and-machine combo as awesome as Fangio in a 300SLR. “Then I came to my senses and thought: ‘Damn it, why should a German car beat a British car?’” He reclaimed the lead on the Mulsanne Straight.</p><p>The battle between Hawthorn and Fangio that kicked off that year’s Le Mans was all the more compelling because it represented a “clash of personalities,” Neubauer later wrote. “The small, wiry Argentinian took the bends with consummate artistry, never risking too much, yet never losing the slightest chance. The fair-haired Englishman, on the other hand, had something hard, almost brutal, in his driving, that demanded the maximum from his car and from himself.” Was his go-for-broke driving emotional, or part of a predetermined strategy to force the Fangio-Moss Mercedes beyond its limits? This point would be debated for years afterward. Norman Dewis, co-driver of the third Jaguar, claimed that Hawthorn had been instructed to “push on as hard as hell with no thought of finishing.” Others who knew the fiery Englishman disagreed. Aston Martin driver Tony Brooks believed that Hawthorn let his emotions get the better of him when he made his fateful first pit entry at 6:29 p.m. “I think it was a rush of blood to the head,” he said.</p></div><div><div data-w-id="5087366b-7add-d47f-4f83-4d8012ab0c44" data-ix="new-interaction-2"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 767px) 90vw, (max-width: 991px) 92vw, (max-width: 1439px) 44vw, (max-width: 1919px) 650px, 630px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0-p-3200.jpg 3200w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767582fbc8a1908aa6141_E0MJM0.jpg 5304w" alt=""></p><div><p>The Hawthorn/Bueb Jaguar at the 1955 24 Hours of Le Mans. </p><p>Keystone Press / Alamy</p></div></div><p>“I think it was a rush of blood to the head.”</p></div></div><div data-w-id="51951bcb-b476-6bbb-34e4-005c42b4c39f"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 767px) 90vw, (max-width: 1439px) 92vw, 1320px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673767e72126094e17c90546_55LEMANS05.jpg 2000w" alt=""></p><div><p>The aftermath of the worst tragedy in motorsport history. </p><p>LAT Photographic</p></div></div><div><p>Hawthorn got the signal to refuel and change drivers after completing his 32nd lap. On the upward slope leading to the pit straight, with the grandstand approaching, he lapped Levegh’s Mercedes for the first time and began to gain rapidly on a slower car that he had lapped three times already: Lance Macklin’s Austin-Healey.</p><p>Macklin, traveling at about 135 mph, had glimpsed a green Jaguar and a silver Mercedes in his rearview mirror and edged to the right to let the faster cars pass. Hawthorn overtook him, as expected, and then did something that Macklin later characterized as a misjudgment: he pulled back in front of the Austin-Healey — “rather violently,” Fangio claimed — and braked for his pit entry. Macklin slammed on his brakes. Realizing he was about to rear-end the Jaguar, he swerved left to avoid it.</p><p>Levegh’s Mercedes collided with the sloping rear of the Austin-Healey at 150 mph and launched into the air. Macklin remembered feeling the “searing heat” of its exhaust on his face as it sailed over him, and seeing Levegh hunched over the wheel as his Mercedes flew off the track. It landed on an earth embankment, crashed into a concrete stairwell, and exploded like a grenade, sending shards of hot metal hurtling into an open public enclosure next to the grandstand.&nbsp;</p><p>Survivors positioned on both sides of the track said that the impact sounded like a bomb going off. What they heard next was screaming chaos. The enormous impact had torn the engine mount and front axle from the SLR’s chassis and sent both of these large pieces scything through a shoulder-to-shoulder crowd. Fifty people were killed in an instant, many of them decapitated. In the words of one eyewitness, the approximately ten-by-forty-foot area in which they had been standing had become “a clear patch with lots of bits.”</p></div><div><div><p>It began raining at dawn, and the grounds had turned to mud by the time Hawthorn and Bueb claimed a hollow victory.</p></div><div><p>The burning chassis of Levegh’s Mercedes sat atop the embankment; his dead body lay beneath it. Marshals sprayed water on the flames, which only made the magnesium components burn stronger. It would be hours before the blaze went out.&nbsp;</p><p>The collision had sent Macklin’s Austin-Healey spinning backwards through the pits. It mowed down a gendarme, a photographer, and two race officials; all four were gravely injured. Miraculously, Macklin exited his vehicle unhurt.</p><p>Fangio, who’d been roaring up behind Levegh, had cut such a tight path through the careening vehicles that a streak of green paint from one of the British cars was later found on his Mercedes. He later said that Levegh, by raising his arm in warning right before the collision, had saved his life.</p><p>Hawthorn overshot the Jaguar pits and got out of his car looking distraught. Because the rules prohibited driving backwards, team manager Lofty England ordered him to do another lap before handing the car over to Bueb.</p></div></div><div><p>It took hours for the full scale of the disaster to become known. Life mostly went on as usual outside the area that now resembled a warzone, and jaunty accordion music continued to play over the PA system as panicked spectators fled and gendarmes and volunteers entered the carnage, using advertising boards as stretchers. Doctors attended to the dead and wounded; priests administered last rites in French and German.</p><p>The organizers kept the race going and made no public announcement, reasoning that the ensuing panic and mass exodus would impede emergency vehicles. Radio listeners and television viewers learned that dozens had been killed before most people at the race did. Neubauer approached Jaguar about doing a joint withdrawal and was rebuffed. After holding an emergency meeting in Stuttgart, the Daimler-Benz board of directors told him to pull the two other cars from the race at around midnight. By the time he finally did, at 1:45, they were running first and third. Having held the lead for several hours, Nebauer later explained, the team “could now afford to retire.” It had packed up and left the track by daybreak.</p><p>It began raining at dawn, and the grounds had turned to mud by the time the Hawthorn-Bueb Jaguar claimed a hollow victory. The death toll had risen into the eighties, with more than one hundred injured. Front-page newspaper photos of Hawthorn sipping from a bottle of champagne would come back to haunt him. He later wrote of the disaster: “It was as though we were at the point where a great rock had been hurled into a pond, sending out waves of shock and horror and indignation which would later flow back, bringing consequences which no one could foresee.”</p></div></div><div data-w-id="9abe1c07-0eb6-c1ed-fa35-21a9b4589062"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A.jpg" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 991px) 90vw, 800px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-500.jpg 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-800.jpg 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-1080.jpg 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-1600.jpg 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-2000.jpg 2000w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-2600.jpg 2600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A-p-3200.jpg 3200w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/673628921124ef4fb20119fb_E0MJ1A.jpg 5592w" alt=""></p><div><p>Mike Hawthorn and Ivor Bueb after winning the 1955 24 Hours of Le Mans. </p><p>Keystone Press / Alamy</p></div></div><div><div><div><p>The rush to assign blame began immediately. Mercedes and Jaguar declared their innocence in press statements, but the early prevailing sentiment ran against the Germans and the supposedly incompetent Levegh. In his 1958 memoir, Hawthorn implicitly blamed Macklin, who in turn sued his ex-friend for libel. The proceedings ended a year later, when Hawthorn died in a road accident near his home in Surrey.&nbsp;</p><p>The scholarship of the intervening decades — including whole books on the 1955 Le Mans disaster by Mark Kahn and Chris Hilton — seems to agree that the driver who set the deadly chain of events in motion was Hawthorn. (Macklin, who died in 2002, claimed that Hawthorn admitted as much right after the accident and even apologized to him for it.) Years after the heat of the moment, the pointlessness of Hawthorn’s risky maneuver outside the pits stands out. Endurance races are decided by minutes, not seconds. By pulling ahead of Macklin instead of tucking in behind him, Hawthorn could not have hoped to gain more than a couple seconds on Fangio.</p></div><div><p>Years after the heat of the moment, the pointlessness of Hawthorn’s risky maneuver outside the pits stands out.</p></div></div><div><p>An official inquiry exonerated all drivers. The decision to continue the race, initially criticized as heartless, has come to be viewed as the right one. It almost certainly saved lives. The editors of <em>Motor Sport</em> argued in an editorial later that summer that it also probably preserved the existence of Le Mans. The racing press accused governments and the popular press of overreacting — “DEATH RACE,” blared the <em>Daily Mail</em> — but in hindsight, clearly something had to be done about the fact that a split-second misjudgment by an elite driver could create mass carnage. France banned all motor racing pending an investigation of the incident. Switzerland banned all motor racing, period, a restriction that endured until 2018. The 1955 Italian and Spanish Grand Prix were canceled. Races with a reputation for being dangerous came under special scrutiny: Nürburgring was called off that year, and the deadly Carrera Panamericana was discontinued.</p><p>The Automobile Club de l’Ouest, organizer of Le Mans, redesigned the track and spectator areas in light of the tragedy, moving the pits back nearly 50 feet and making other safety improvements. The 1956 race featured no fatal incidents – and drew even bigger crowds.</p></div></div><div data-w-id="c794cccd-ee1d-5dc0-e8d2-86a42d1f347a" data-ix="new-interaction-2"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A.png" loading="lazy" data-w-id="c794cccd-ee1d-5dc0-e8d2-86a42d1f347b" sizes="100vw" alt="Daniel Riccardo shot during the 2022 French Grand Prix, Circuit Paul Ricard. July 24, 2023 at 2:22 p.m." srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A-p-500.png 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A-p-800.png 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A-p-1080.png 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A-p-1600.png 1600w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/67376759b1486dca3e32e927_1017515805-SCH-19690615-602_3A.png 2000w"></p><div><p>A memorial plaque near the grandstand area where the crash took place, photographed in 1969. </p><p>Rainer Schlegelmilch / LAT Photographic</p></div></div><div><div><p>Not that the lessons of 1955 ended here. In many ways, they were just beginning. The Le Mans disaster laid bare the grand illusion that motorsport had evolved beyond the bloodiness of its early years. The primitive scenes of violence from the grandstand area, which appeared in newsreels around the world, made it gruesomely clear that the sport’s safety standards had failed to keep up with the increasing speed and deadliness of its cars.</p><p>The moment marked the end of an age of innocence, which is probably one reason the scale of the 1955 Le Mans disaster has never been surpassed. Though it stands alone in this respect, the incident also served as just one example in a larger argument. Were horrific crashes like this one unavoidable? Or could more be done to prevent them without compromising the fundamental draw of the sport? The racing establishment of this era resisted self-reform, and only got serious about redefining safety standards following crashes in which innocent bystanders were killed and public outrage ensued. Le Mans was the most devastating of these disasters, but not the only one. Another was the 1957 crash during the Mille Miglia that killed two drivers and nine spectators, which led the Italian government to outlaw racing on public roads, and landed Enzo Ferrari on trial for manslaughter.&nbsp;</p><p>Change did not come swiftly. On the contrary, Formula 1’s deadliest season, in which separate accidents claimed the lives of four drivers in five months, occurred in 1958. Ferrari’s Wolfgang Von Trips and 15 spectators were killed at the 1961 Italian Grand Prix. It would take years before elite drivers stopped dying at alarming rates, and for the popular image of them as peacetime fighter pilots — fast, courageous, likely to be killed in action — to fade away. Even then, the argument that death had always been part of racing hindered efforts to protect drivers and contributed to a lingering expectation of self-sacrifice. World champions like Jackie Stewart could raise safety concerns, but they continued to be ignored until the death or near-death of a famous driver called attention to them. For example, Formula 1 drivers considered the Nürburgring so dangerous that they boycotted it for the 1970 Grand Prix, but it was not until Niki Lauda’s near-fatal crash there, six years later, that the track was comprehensively reimagined.</p></div><div><div><p>Safety considerations are paramount at the top levels of racing now. Since Ayrton Senna’s shocking death in 1994, only one Formula 1 driver, Jules Bianchi, has been killed while racing. Both tragedies forced the adoption of universal safety measures — including new standards for safety barriers, reductions in pit-lane speeds, the adoption of virtual safety cars, the halo, and more — far quicker and more comprehensively than the old disasters ever did.</p><p>Mercedes abandoned racing at the end of the 1955 season. It already had plans to do so, having proven itself as an all-conquering force in Formula 1, but the Le Mans disaster certainly made this a harder decision to reverse. Fangio went on to win that season’s Formula 1 title, his third and last for Mercedes. (He won again in 1956, with Ferrari, and in 1957, with Maserati.) In the short term, the Mercedes recusal helped Jaguar to dominate Le Mans and Ferrari to become more of a force in Formula 1. It was also part of a multi-decade identity shift for Mercedes, which would go on to pioneer anti-lock brakes, anti-collision radar systems, and other consumer safety technologies. It would be another 40 years before Mercedes got back into racing, and it did not win its next Formula 1 championship until 2014, with drivers Lewis Hamilton and Nico Rosberg.</p><p>Its cars were terrifyingly fast all over again. This time, though, they were far less deadly.<br></p></div><div data-w-id="33117215-f22a-c4cf-ee3b-c6dde1ec391a" data-ix="new-interaction-2"><p><img src="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/6737675994522935e6b00b71_Lauda_print.png" loading="lazy" sizes="(max-width: 479px) 92vw, (max-width: 767px) 90vw, (max-width: 991px) 92vw, (max-width: 1439px) 44vw, 650px" srcset="https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/6737675994522935e6b00b71_Lauda_print-p-500.png 500w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/6737675994522935e6b00b71_Lauda_print-p-800.png 800w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/6737675994522935e6b00b71_Lauda_print-p-1080.png 1080w, https://cdn.prod.website-files.com/65c285cc79c5b493a025f308/6737675994522935e6b00b71_Lauda_print.png 1500w" alt=""></p><div><p>Niki Lauda’s near-fatal crash at Nürburgring in 1976 led to a redesign of the track.</p><p>dpa picture alliance / Alamy</p></div></div></div></div></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Open-sourcing my failed startup Buzee – A file search application (158 pts)]]></title>
            <link>https://github.com/gsidhu/buzee-tauri</link>
            <guid>42417330</guid>
            <pubDate>Sat, 14 Dec 2024 14:24:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/gsidhu/buzee-tauri">https://github.com/gsidhu/buzee-tauri</a>, See on <a href="https://news.ycombinator.com/item?id=42417330">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto">
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/gsidhu/buzee-tauri/blob/main/static/Buzee%20Logo.png"><img height="150" src="https://github.com/gsidhu/buzee-tauri/raw/main/static/Buzee%20Logo.png"></a></p><p dir="auto"><span>Full-text search app for Mac and Windows</span></p>
<p dir="auto">Download the latest release from the <a href="https://buzee.co/" rel="nofollow">Buzee website</a>.</p>
</div>
<blockquote>
<p dir="auto"><g-emoji alias="warning">⚠️</g-emoji> I have <em>just</em> open sourced Buzee. The documentation is lacking. Please open an issue and I'd be happy to help! <g-emoji alias="warning">⚠️</g-emoji></p>
</blockquote>
<blockquote>
<p dir="auto">The OCR capabilities in Buzee are built on top of <a href="https://github.com/freedmand/textra">Textra on Mac</a> and <a href="https://github.com/gsidhu/winocr_cli">WinOCR on Windows</a>. Do check these repos out! I feel the native OCR capabilities of Mac and Windows are really good and should be used more!</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is Buzee?</h2><a id="user-content-what-is-buzee" aria-label="Permalink: What is Buzee?" href="#what-is-buzee"></a></p>
<p dir="auto">Buzee (pronounced <em>boozey</em>) is a eight-year-old labrador retriever who can't play fetch but can love you like no other.</p>
<p dir="auto">Buzee is also a full-text search application for your life. It helps you find your files, effortlessly.</p>
<p dir="auto">Download v0.2.0 from this <a href="https://github.com/gsidhu/buzee-releases/releases">Releases</a> page.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Screenshots</h2><a id="user-content-screenshots" aria-label="Permalink: Screenshots" href="#screenshots"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/gsidhu/buzee-tauri/blob/main/static/Screenshot1.png"><img src="https://github.com/gsidhu/buzee-tauri/raw/main/static/Screenshot1.png" width="25%"></a>
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/gsidhu/buzee-tauri/blob/main/static/Screenshot2.png"><img src="https://github.com/gsidhu/buzee-tauri/raw/main/static/Screenshot2.png" width="25%"></a>
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/gsidhu/buzee-tauri/blob/main/static/Screenshot3.png"><img src="https://github.com/gsidhu/buzee-tauri/raw/main/static/Screenshot3.png" width="25%"></a>
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/gsidhu/buzee-tauri/blob/main/static/Screenshot4.png"><img src="https://github.com/gsidhu/buzee-tauri/raw/main/static/Screenshot4.png" width="25%"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>Fast, full-text search for all your documents, images, audio, video, folders, and browser history.</li>
<li>Search all local documents and folders by keyword, time, type, or any combination of these.</li>
<li>Ignore specific files or folders from being indexed. Or ignore only their content.</li>
<li>View search results in a list or icon view.</li>
<li>View statistics about your files.</li>
<li>Sub-features:
<ul dir="auto">
<li>Extract text from PDFs and Images using OCR.</li>
<li>Use a Scratch Pad to quickly jot down notes.</li>
</ul>
</li>
<li>Automatically syncs with changes on your filesystem.</li>
<li>Lightweight installation package and low memory usage.</li>
<li>Supports these default file types:</li>
</ul>
<div data-snippet-clipboard-copy-content="Documents: csv, docx, key, md, numbers, pages, pdf, pptx, txt, xlsx, xls
Images: jpg, jpeg, png, gif
Books: epub, mobi, azw3, pdf
Audio: mp3, wav, aac, flac, ogg
Video: mp4, mkv, avi, mov, wmv"><pre><code>Documents: csv, docx, key, md, numbers, pages, pdf, pptx, txt, xlsx, xls
Images: jpg, jpeg, png, gif
Books: epub, mobi, azw3, pdf
Audio: mp3, wav, aac, flac, ogg
Video: mp4, mkv, avi, mov, wmv
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Building from Source</h2><a id="user-content-building-from-source" aria-label="Permalink: Building from Source" href="#building-from-source"></a></p>
<p dir="auto">Buzee works best on Mac. Windows may throw up some issues because I haven't had a change to properly test it. Linux is untested entirely, so you're on your own there.</p>
<ol dir="auto">
<li>Clone the repository.</li>
<li>Install Rust and NodeJS.</li>
<li>Run <code>npm install</code> in the root directory.</li>
<li>Run <code>cargo install</code> in the <code>src-tauri</code> directory.</li>
<li>Run <code>npm run tauri dev</code> in the root directory to run the app in development mode.</li>
<li>Run <code>npm run tauri build</code> in the root directory to build the app for production.</li>
</ol>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">TODO / Known Issues</h2><a id="user-content-todo--known-issues" aria-label="Permalink: TODO / Known Issues" href="#todo--known-issues"></a></p>
<div data-snippet-clipboard-copy-content="Index:
(~) : partly implemented
(+) : has to be built from scratch
(?) : not sure if it will add great value"><pre><code>Index:
(~) : partly implemented
(+) : has to be built from scratch
(?) : not sure if it will add great value
</code></pre></div>
<ul dir="auto">
<li>(~) Show matching text for search results by reading from the <code>body</code> table.</li>
<li>(~) Browser history search should support complex queries the way document search does.</li>
<li>(~) Icon view should load thumbnails in an efficient, non-blocking manner. Thumbnails should show up on the page as they are loaded.</li>
<li>(~) Enable adding 'comments' to documents.</li>
<li>(~) Enable pinning documents/folders to the top of search results.</li>
<li>(~) Allow user to add or remove supported file types.</li>
<li>(~) Allow user to switch between profiles on Arc and Chrome. (Currently uses the default profile)</li>
<li>(~) Test for Linux.</li>
<li>(~) Improve the speed of parsing PDFs, Images and XLSX files. Especially OCR operations.</li>
<li>(+) Enable adding 'tags' to documents.</li>
<li>(+) Create a 'Dashboard' view that shows statistics, pinned documents, and recent searches.</li>
<li>(+) Add tests to the codebase.</li>
<li>(?) Record frecency of documents and use it to sort search results.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tech Stack</h2><a id="user-content-tech-stack" aria-label="Permalink: Tech Stack" href="#tech-stack"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Dependencies</h3><a id="user-content-dependencies" aria-label="Permalink: Dependencies" href="#dependencies"></a></p>
<p dir="auto">Back-end:</p>
<ul dir="auto">
<li>Rust</li>
<li>Tauri v2</li>
<li>SQLite</li>
<li>Tantivy</li>
</ul>
<p dir="auto">Front-end:</p>
<ul dir="auto">
<li>Svelte 4 using TypeScript</li>
<li>shadcn-svelte</li>
<li>TailwindCSS</li>
</ul>
<p dir="auto">See all dependencies in the <a href="https://github.com/gsidhu/buzee-tauri/blob/main/src-tauri/Cargo.toml">Cargo.toml</a> and <a href="https://github.com/gsidhu/buzee-tauri/blob/main/package.json">package.json</a> files.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Architecture</h3><a id="user-content-architecture" aria-label="Permalink: Architecture" href="#architecture"></a></p>
<ul dir="auto">
<li>All file metadata is stored in SQLite in the <code>document</code> table. A central <code>metadata</code> table stores the metadata from files and eventually cloud services, emails etc.</li>
<li>A full-text index is created on <code>metadata</code> and stored as the <code>metadata_fts</code> table.</li>
<li>Parsed text from documents is stored in the <code>body</code> table.</li>
<li>A full-text index is created in Tantivy at the same time.</li>
<li>The Firefox, Chrome and Arc history is searched using their respective history databases directly.</li>
<li>All front-end code is in the <code>src</code> directory. All back-end code is in the <code>src-tauri</code> directory.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing / Way Forward</h2><a id="user-content-contributing--way-forward" aria-label="Permalink: Contributing / Way Forward" href="#contributing--way-forward"></a></p>
<p dir="auto">Read the <a href="https://github.com/gsidhu/buzee-tauri/blob/main/VISION&amp;ROADMAP">Vision and Roadmap</a>.</p>
<p dir="auto">I have spent two years building this project. It started as an Electron app, then I switched to Tauri for performance gains. When I started I barely new JavaScript and Svelte. Over the course of development, I learned NodeJS, TypeScript, SQLite, Rust, Tauri, Tantivy, and many other technologies. I learned so much about managing a project of this size and complexity. I am proud of what I have built but I am more proud of what I have learned.</p>
<p dir="auto">I am now letting go of this project because I have other priorities. Please feel free to do with this project as you wish. I am happy to help you get started with the codebase.</p>
<p dir="auto">If nothing else, this project can serve as an example of how to build a full-text search engine using Tauri and Tantivy. There are several tiny features and performance workarounds that I have implemented that you might find useful.</p>
<p dir="auto">If you do do something with this project, please let me know. I would love to see what you build!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">MIT</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: A simple web game to help learn chords and basic progressions (120 pts)]]></title>
            <link>https://chords.yottanami.com/</link>
            <guid>42416258</guid>
            <pubDate>Sat, 14 Dec 2024 11:05:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://chords.yottanami.com/">https://chords.yottanami.com/</a>, See on <a href="https://news.ycombinator.com/item?id=42416258">Hacker News</a></p>
Couldn't get https://chords.yottanami.com/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Svader – Create GPU-rendered Svelte components (168 pts)]]></title>
            <link>https://github.com/sockmaster27/svader</link>
            <guid>42416230</guid>
            <pubDate>Sat, 14 Dec 2024 11:00:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/sockmaster27/svader">https://github.com/sockmaster27/svader</a>, See on <a href="https://news.ycombinator.com/item?id=42416230">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
  <themed-picture data-catalyst-inline="true"><picture>
    <source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/logoDark.png">
    <img width="150" alt="Svader Logo" src="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/logoLight.png">
  </picture></themed-picture>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Svader</h2><a id="user-content-svader" aria-label="Permalink: Svader" href="#svader"></a></p>
<p dir="auto">Create GPU-rendered Svelte components with WebGL and WebGPU fragment shaders.</p>
<p dir="auto">Supports Svelte 4 and Svelte 5.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is a fragment shader?</h2><a id="user-content-what-is-a-fragment-shader" aria-label="Permalink: What is a fragment shader?" href="#what-is-a-fragment-shader"></a></p>
<p dir="auto">In short, a <em>fragment shader</em> can be written as a program that takes the coordinates of a pixel on the screen and returns the color that this pixel should have.
This program can be executed on the GPU, ensuring massive parallelism and speed.</p>
<p dir="auto">To learn more about how to write fragment shaders, check out <a href="https://thebookofshaders.com/" rel="nofollow">The Book of Shaders</a>.</p>
<p dir="auto">The following is a collection of examples all made using Svader. The live version of all of these can be previewed on <a href="https://svader.vercel.app/" rel="nofollow">svader.vercel.app</a>,
and the source code can be found in the <a href="https://github.com/sockmaster27/svader/tree/master/src/routes"><code>src/routes/</code></a> directory.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/collage.png"><img src="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/collage.png" alt="Shader example collage"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# npm
npm i -D svader

# pnpm
pnpm i -D svader

# Bun
bun i -D svader

# Yarn
yarn add -D svader"><pre><span><span>#</span> npm</span>
npm i -D svader

<span><span>#</span> pnpm</span>
pnpm i -D svader

<span><span>#</span> Bun</span>
bun i -D svader

<span><span>#</span> Yarn</span>
yarn add -D svader</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">To use a fragment shader component, you first need to decide whether to use WebGL or WebGPU.
If you're unsure about what to use, see the <a href="#webgl-vs-webgpu">WebGL vs. WebGPU</a> section.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Sections</h3><a id="user-content-sections" aria-label="Permalink: Sections" href="#sections"></a></p>
<ul dir="auto">
<li><a href="#webgl">WebGL</a>
<ul dir="auto">
<li><a href="#webgl-parameters">WebGL parameters</a>
<ul dir="auto">
<li><a href="#webgl-built-in-values">WebGL built-in values</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#webgpu">WebGPU</a>
<ul dir="auto">
<li><a href="#webgpu-parameters">WebGPU parameters</a>
<ul dir="auto">
<li><a href="#webgpu-built-in-values">WebGPU built-in values</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">WebGL</h3><a id="user-content-webgl" aria-label="Permalink: WebGL" href="#webgl"></a></p>
<p dir="auto">The following is a minimal example of a WebGL fragment shader component.</p>
<p dir="auto"><a href="https://svelte.dev/repl/3e4a38bca5ca49fa94e1106a841063d5?version=5.1.10" rel="nofollow"><strong>View in REPL</strong></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="<script>
    import { WebGlShader } from &quot;svader&quot;;

    const shaderCode = `#version 300 es

        precision mediump float;

        out vec4 fragColor;

        uniform vec2 u_resolution;
        uniform vec2 u_offset;

        void main() {
            vec2 pos = gl_FragCoord.xy + u_offset;
            vec2 st = pos / u_resolution;
            fragColor = vec4(st, 0.0, 1.0);
        }
    `;
</script>

<WebGlShader
    width=&quot;500px&quot;
    height=&quot;500px&quot;
    code={shaderCode}
    parameters={[
        {
            name: &quot;u_resolution&quot;,
            value: &quot;resolution&quot;,
        },
        {
            name: &quot;u_offset&quot;,
            value: &quot;offset&quot;,
        },
    ]}
>
    <div class=&quot;fallback&quot;>WebGL not supported in this environment.</div>
</WebGlShader>"><pre>&lt;<span>script</span>&gt;<span></span>
<span>    <span>import</span> { <span>WebGlShader</span> } <span>from</span> <span><span>"</span>svader<span>"</span></span>;</span>
<span></span>
<span>    <span>const</span> <span>shaderCode</span> <span>=</span> <span><span>`</span>#version 300 es</span></span>
<span><span></span></span>
<span><span>        precision mediump float;</span></span>
<span><span></span></span>
<span><span>        out vec4 fragColor;</span></span>
<span><span></span></span>
<span><span>        uniform vec2 u_resolution;</span></span>
<span><span>        uniform vec2 u_offset;</span></span>
<span><span></span></span>
<span><span>        void main() {</span></span>
<span><span>            vec2 pos = gl_FragCoord.xy + u_offset;</span></span>
<span><span>            vec2 st = pos / u_resolution;</span></span>
<span><span>            fragColor = vec4(st, 0.0, 1.0);</span></span>
<span><span>        }</span></span>
<span><span>    <span>`</span></span>;</span>
<span></span>&lt;/<span>script</span>&gt;

&lt;<span>WebGlShader</span>
    <span>width</span>=<span><span>"</span>500px<span>"</span></span>
    <span>height</span>=<span><span>"</span>500px<span>"</span></span>
    <span>code</span>={<span>shaderCode</span>}
    <span>parameters</span>={[
        {
            name: <span><span>"</span>u_resolution<span>"</span></span>,
            value: <span><span>"</span>resolution<span>"</span></span>,
        },
        {
            name: <span><span>"</span>u_offset<span>"</span></span>,
            value: <span><span>"</span>offset<span>"</span></span>,
        },
    ]}
&gt;
    &lt;<span>div</span> <span>class</span>=<span><span>"</span>fallback<span>"</span></span>&gt;WebGL not supported in this environment.&lt;/<span>div</span>&gt;
&lt;/<span>WebGlShader</span>&gt;</pre></div>
<p dir="auto">This produces the following output:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/debugShaderWebGl.png"><img src="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/debugShaderWebGl.png" alt="Output of the WebGL shader"></a></p>
<p dir="auto">Here, the <code>shaderCode</code> variable is a string containing the <a href="https://en.wikipedia.org/wiki/OpenGL_ES" rel="nofollow">GLES</a> shader code.
For simplicity, this is stored as a string, but it would typically be stored in a separate <code>myShader.frag</code> file.
When loading the shader from a file, it might be useful to know that the <code>code</code> property accepts both a <code>string</code> and a <code>Promise&lt;string&gt;</code>.</p>
<p dir="auto">What this code does is:</p>
<ol dir="auto">
<li>Add the given <code>u_offset</code> uniform to the 2D coordinates of the pixel given by <code>gl_FragCoord.xy</code>.</li>
<li>Divide the resulting coordinates entrywise by the <code>u_resolution</code> uniform to normalize the coordinates between 0 and 1.</li>
<li>Return the normalized coordinates as the color of the pixel, such that the <code>x</code> coordinate becomes the red channel and the <code>y</code> coordinate becomes the green channel. The blue channel is always set to 0, and the alpha (opacity) channel is always set to 1 (fully opaque).</li>
</ol>
<p dir="auto">In GLES, <em>uniforms</em> are inputs to the function, that are the same for every pixel on the screen.
These need to be passed in via the <code>parameters</code> property of the <code>&lt;WebGlShader&gt;</code> component.
In this case, we need to pass in two uniforms: <code>u_resolution</code> and <code>u_offset</code>.
Since these specific parameters are very commonly used, they are specially implemented in Svader
such that the <code>value</code> property of each parameter can simply be set to <code>"resolution"</code> and <code>"offset"</code> respectively.</p>
<p dir="auto">Lastly, the <code>&lt;WebGlShader&gt;</code> component accepts a fallback slot, which is rendered when the browser cannot render the shader.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">WebGL parameters</h4><a id="user-content-webgl-parameters" aria-label="Permalink: WebGL parameters" href="#webgl-parameters"></a></p>
<p dir="auto">The <code>parameters</code> property is an array of objects with the following properties:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong><code>name</code></strong>: The name of the uniform parameter, e.g. <code>"my_uniform"</code>.
This must match the name of the parameter in the shader code.</p>
</li>
<li>
<p dir="auto"><strong><code>type</code></strong>: The type of the uniform parameter as it is written in the shader code, e.g. <code>"float"</code>.
If the <code>value</code> property is a <a href="#webgl-built-in-values">built-in value</a>, such as <code>"resolution"</code>,
the <code>type</code> will be determined automatically and should not be set.</p>
</li>
<li>
<p dir="auto"><strong><code>value</code></strong>: The value of the uniform parameter, or a string specifying a <a href="#webgl-built-in-values">built-in value</a>.
If not a built-in value, the type of this property must correspond to the <code>type</code> property, such that:</p>
<ul dir="auto">
<li><strong><code>float</code>, <code>int</code>, <code>uint</code></strong> is a <code>number</code>,</li>
<li><strong><code>vecN</code>, <code>ivecN</code>, <code>uvecN</code></strong> is a <code>number[]</code> with a length of <code>N</code>, e.g. <code>vec2</code> -&gt; <code>[1.2, 3.4]</code>.</li>
<li><strong><code>matN</code></strong> is a <code>number[]</code> with a length of <code>N * N</code>, e.g. <code>mat2</code> -&gt; <code>[1, 2, 3, 4]</code>.</li>
</ul>
</li>
</ul>
<p dir="auto"><h5 tabindex="-1" dir="auto">WebGL built-in values</h5><a id="user-content-webgl-built-in-values" aria-label="Permalink: WebGL built-in values" href="#webgl-built-in-values"></a></p>
<p dir="auto">Some types of uniforms are used very often. These are implemented in Svader itself, and referred to as <em>built-in values</em>.
To use these, the <code>value</code> property of the parameter object must be set to a string matching one of the following:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong><code>"resolution"</code></strong>: A <code>vec2</code> of the canvas width and height in physical device pixels.</p>
</li>
<li>
<p dir="auto"><strong><code>"scale"</code></strong>: A <code>float</code> of the ratio between CSS pixels and physical device pixels, i.e. zoom level.
For example, if the browser has been zoomed to 150%, the <code>scale</code> parameter will be <code>1.5</code>.</p>
</li>
<li>
<p dir="auto"><strong><code>"time"</code></strong>: A <code>float</code> of the current time in seconds.
NOTE: Passing this parameter to the shader will cause it to rerender every frame.</p>
</li>
<li>
<p dir="auto"><strong><code>"offset"</code></strong>: A <code>vec2</code> to be added to the <code>gl_FragCoord.xy</code> of the fragment shader.
Sometimes the size of the canvas is limited by hardware.
To compensate for this, Svader creates a virtual canvas with a smaller cutout shifting around to cover the screen.
The <code>"resolution"</code> parameter is automatically adjusted to match the size of this virtual canvas, but for technical reasons,
the <code>gl_FragCoord.xy</code> cannot be adjusted from the outside.
Therefore, the <code>"offset"</code> parameter is provided to be manually added to these coordinates.</p>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">WebGPU</h3><a id="user-content-webgpu" aria-label="Permalink: WebGPU" href="#webgpu"></a></p>
<p dir="auto">The following is a minimal example of a WebGPU fragment shader component.</p>
<p dir="auto"><a href="https://svelte.dev/repl/498446d091964bb199e6a88bce90feae?version=5.1.10" rel="nofollow"><strong>View in REPL</strong></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="<script>
    import { WebGpuShader } from &quot;svader&quot;;

    const shaderCode = `
        @group(0) @binding(0) var<uniform> resolution: vec2f;
        @group(0) @binding(1) var<uniform> offset: vec2f;

        @fragment
        fn main(@builtin(position) raw_pos: vec4f) -> @location(0) vec4f {
            let pos = raw_pos.xy + offset;
            let st = pos / resolution;
            return vec4f(st, 0.0, 1.0);
        }
    `;
</script>

<WebGpuShader
    width=&quot;500px&quot;
    height=&quot;500px&quot;
    code={shaderCode}
    parameters={[
        {
            label: &quot;Resolution&quot;,
            binding: 0,
            value: &quot;resolution&quot;,
        },
        {
            label: &quot;Offset&quot;,
            binding: 1,
            value: &quot;offset&quot;,
        },
    ]}
>
    <div class=&quot;fallback&quot;>WebGPU not supported in this environment.</div>
</WebGpuShader>"><pre>&lt;<span>script</span>&gt;<span></span>
<span>    <span>import</span> { <span>WebGpuShader</span> } <span>from</span> <span><span>"</span>svader<span>"</span></span>;</span>
<span></span>
<span>    <span>const</span> <span>shaderCode</span> <span>=</span> <span><span>`</span></span></span>
<span><span>        @group(0) @binding(0) var&lt;uniform&gt; resolution: vec2f;</span></span>
<span><span>        @group(0) @binding(1) var&lt;uniform&gt; offset: vec2f;</span></span>
<span><span></span></span>
<span><span>        @fragment</span></span>
<span><span>        fn main(@builtin(position) raw_pos: vec4f) -&gt; @location(0) vec4f {</span></span>
<span><span>            let pos = raw_pos.xy + offset;</span></span>
<span><span>            let st = pos / resolution;</span></span>
<span><span>            return vec4f(st, 0.0, 1.0);</span></span>
<span><span>        }</span></span>
<span><span>    <span>`</span></span>;</span>
<span></span>&lt;/<span>script</span>&gt;

&lt;<span>WebGpuShader</span>
    <span>width</span>=<span><span>"</span>500px<span>"</span></span>
    <span>height</span>=<span><span>"</span>500px<span>"</span></span>
    <span>code</span>={<span>shaderCode</span>}
    <span>parameters</span>={[
        {
            label: <span><span>"</span>Resolution<span>"</span></span>,
            binding: <span>0</span>,
            value: <span><span>"</span>resolution<span>"</span></span>,
        },
        {
            label: <span><span>"</span>Offset<span>"</span></span>,
            binding: <span>1</span>,
            value: <span><span>"</span>offset<span>"</span></span>,
        },
    ]}
&gt;
    &lt;<span>div</span> <span>class</span>=<span><span>"</span>fallback<span>"</span></span>&gt;WebGPU not supported in this environment.&lt;/<span>div</span>&gt;
&lt;/<span>WebGpuShader</span>&gt;</pre></div>
<p dir="auto">This produces the following output:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/debugShaderWebGpu.png"><img src="https://raw.githubusercontent.com/sockmaster27/svader/master/resources/debugShaderWebGpu.png" alt="Output of the WebGPU shader"></a></p>
<p dir="auto">Here, the <code>shaderCode</code> variable is a string containing the <a href="https://google.github.io/tour-of-wgsl/" rel="nofollow">WGSL</a> shader code.
For simplicity, this is stored as a string, but it would typically be stored in a separate <code>myShader.wgsl</code> file.
When loading the shader from a file, it might be useful to know that the <code>code</code> property accepts both a <code>string</code> and a <code>Promise&lt;string&gt;</code>.</p>
<p dir="auto">What this code does is:</p>
<ol dir="auto">
<li>Add the given <code>offset</code> uniform variable to the 2D coordinates of the pixel given by <code>raw_pos.xy</code>.</li>
<li>Divide the resulting coordinates entrywise by the <code>resolution</code> uniform to normalize the coordinates between 0 and 1.</li>
<li>Return the normalized coordinates as the color of the pixel, such that the <code>x</code> coordinate becomes the red channel and the <code>y</code> coordinate becomes the green channel. The blue channel is always set to 0, and the alpha (opacity) channel is always set to 1 (fully opaque).</li>
</ol>
<p dir="auto">In WGSL, these <code>var&lt;uniform&gt;</code>s are the primary way to pass in parameters to the shader.
These need to be passed in via the <code>parameters</code> property of the <code>&lt;WebGpuShader&gt;</code> component.
In this case, we need to pass in two uniforms: <code>resolution</code> and <code>offset</code>.
Since these specific parameters are very commonly used, they are specially implemented in Svader
such that the <code>value</code> property of each parameter can simply be set to <code>"resolution"</code> and <code>"offset"</code> respectively.</p>
<p dir="auto">Lastly, the <code>&lt;WebGpuShader&gt;</code> component accepts a fallback slot, which is rendered when the browser cannot render the shader.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">WebGPU parameters</h4><a id="user-content-webgpu-parameters" aria-label="Permalink: WebGPU parameters" href="#webgpu-parameters"></a></p>
<p dir="auto">The <code>parameters</code> property is an array of objects with the following properties:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong><code>label</code></strong>: The name of the parameter to be used for debugging.
This does not have to correspond to the name of the parameter in the shader code.</p>
</li>
<li>
<p dir="auto"><strong><code>binding</code></strong>: An integer used to match the parameter to the variable in the shader code.
This has to match the <code>binding</code> property of the parameter in the shader code, e.g. for the variable declaration</p>
<div dir="auto" data-snippet-clipboard-copy-content="@group(0) @binding(42) var<uniform> my_variable: f32;"><pre>@<span>group</span>(<span>0</span>) @<span>binding</span>(<span>42</span>) <span>var</span>&lt;<span>uniform</span>&gt; <span>my_variable</span>: <span>f32</span>;</pre></div>
<p dir="auto">the <code>binding</code> property should be <code>42</code>.</p>
</li>
<li>
<p dir="auto"><strong><code>value</code></strong>: The value of the parameter, or a string specifying a <a href="#webgpu-built-in-values">built-in value</a>.
If not a built-in value, this parameter should be an <code>ArrayBuffer</code>/<code>ArrayBufferView</code>.
For example, to pass in a number to an <code>f32</code> parameter, it can be constructed like <code>new Float32Array([myNumberValue])</code>.</p>
</li>
<li>
<p dir="auto"><strong><code>storage</code></strong>: [Optional - defaults to <code>false</code>] Whether the parameter is a storage variable rather than a uniform variable.
This has to match the declaration in the shader code, e.g. for the variable declaration</p>
<div dir="auto" data-snippet-clipboard-copy-content="@group(0) @binding(0) var<uniform> my_variable: f32;"><pre>@<span>group</span>(<span>0</span>) @<span>binding</span>(<span>0</span>) <span>var</span>&lt;<span>uniform</span>&gt; <span>my_variable</span>: <span>f32</span>;</pre></div>
<p dir="auto">the <code>storage</code> property should be <code>false</code> or omitted, and for</p>
<div dir="auto" data-snippet-clipboard-copy-content="@group(0) @binding(0) var<storage, read> my_variable: f32;"><pre>@<span>group</span>(<span>0</span>) @<span>binding</span>(<span>0</span>) <span>var</span>&lt;<span>storage</span>, <span>read</span>&gt; <span>my_variable</span>: <span>f32</span>;</pre></div>
<p dir="auto">it should be <code>true</code>.
Note that Svader currently only supports <code>var&lt;storage, read&gt;</code> and not <code>var&lt;storage, read_write&gt;</code>.</p>
</li>
</ul>
<p dir="auto"><h5 tabindex="-1" dir="auto">WebGPU built-in values</h5><a id="user-content-webgpu-built-in-values" aria-label="Permalink: WebGPU built-in values" href="#webgpu-built-in-values"></a></p>
<p dir="auto">Some types of inputs are used very often. These are implemented in Svader itself, and referred to as <em>built-in values</em>.
To use these, the <code>value</code> property of the parameter object must be set to a string matching one of the following:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong><code>"resolution"</code></strong>: A <code>vec2f</code> of the canvas width and height in physical device pixels.</p>
</li>
<li>
<p dir="auto"><strong><code>"scale"</code></strong>: An <code>f32</code> of the ratio between CSS pixels and physical device pixels, i.e. zoom level.
For example, if the browser has been zoomed to 150%, the <code>scale</code> parameter will be <code>1.5</code>.</p>
</li>
<li>
<p dir="auto"><strong><code>"time"</code></strong>: An <code>f32</code> of the current time in seconds.
NOTE: Passing this parameter to the shader will cause it to rerender every frame.</p>
</li>
<li>
<p dir="auto"><strong><code>"offset"</code></strong>: A <code>vec2f</code> to be added to the <code>@builtin(position)</code> of the fragment shader.
Sometimes the size of the canvas is limited by hardware.
To compensate for this, Svader creates a virtual canvas with a smaller cutout shifting around to cover the screen.
The <code>"resolution"</code> parameter is automatically adjusted to match the size of this virtual canvas, but for technical reasons,
the <code>@builtin(position)</code> cannot be adjusted from the outside.
Therefore, the <code>"offset"</code> parameter is provided to be manually added to these coordinates.</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">WebGL vs. WebGPU</h2><a id="user-content-webgl-vs-webgpu" aria-label="Permalink: WebGL vs. WebGPU" href="#webgl-vs-webgpu"></a></p>
<p dir="auto"><strong>For practical applications, default to using WebGL.</strong></p>
<p dir="auto">WebGL and WebGPU are both rendering APIs that allow web applications to render GPU-accelerated graphics.</p>
<p dir="auto">WebGL is the older of the two and is supported by <a href="https://caniuse.com/webgl" rel="nofollow">all modern browsers</a>.</p>
<p dir="auto">WebGPU is still in the experimental stage and is only supported in a <a href="https://caniuse.com/webgpu" rel="nofollow">few browsers</a>.
However, it supports certain features that WebGL does not. For example, as of writing, WebGL in Google Chrome only supports having 8 canvases active in the document at once, while WebGPU supports a practically unlimited number.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Svader is licensed under the <a href="https://github.com/sockmaster27/svader/blob/master/LICENSE.md">MIT License</a>.</p>
</article></div></div>]]></description>
        </item>
    </channel>
</rss>