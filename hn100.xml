<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 09 Apr 2024 00:00:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[llm.c – LLM training in simple, pure C/CUDA (397 pts)]]></title>
            <link>https://github.com/karpathy/llm.c</link>
            <guid>39973467</guid>
            <pubDate>Mon, 08 Apr 2024 20:38:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/karpathy/llm.c">https://github.com/karpathy/llm.c</a>, See on <a href="https://news.ycombinator.com/item?id=39973467">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">llm.c</h2><a id="user-content-llmc" aria-label="Permalink: llm.c" href="#llmc"></a></p>
<p dir="auto">LLM training in simple, pure C/CUDA. There is no need for 245MB of PyTorch or 107MB of cPython. For example, training GPT-2 (CPU, fp32) is ~1,000 lines of clean code in a single file. It compiles and runs instantly, and exactly matches the PyTorch reference implementation. I chose GPT-2 as the first working example because it is the grand-daddy of LLMs, the first time the modern stack was put together.</p>
<p dir="auto">Currently, I am working on:</p>
<ul dir="auto">
<li>direct CUDA implementation, which will be significantly faster and probably come close to PyTorch.</li>
<li>speed up the CPU version with SIMD instructions, AVX2 on x86 / NEON on ARM (e.g. Apple Silicon).</li>
<li>more modern architectures, e.g. Llama2, Gemma, etc.</li>
</ul>
<p dir="auto">For the repo, I'd like to maintain both clean, simple reference implementations alongside a also lot more optimized versions that can come close to PyTorch, but in a tiny fraction of the code and dependencies.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">quick start</h2><a id="user-content-quick-start" aria-label="Permalink: quick start" href="#quick-start"></a></p>
<p dir="auto">Download and tokenize a dataset. The <a href="https://raw.githubusercontent.com/karpathy/char-rnn/master/data/tinyshakespeare/input.txt" rel="nofollow">tinyshakespeare</a> dataset is the fastest to download and tokenize:</p>
<div dir="auto" data-snippet-clipboard-copy-content="python prepro_tinyshakespeare.py"><pre>python prepro_tinyshakespeare.py</pre></div>
<p dir="auto">This prints:</p>
<div data-snippet-clipboard-copy-content="Saved 32768 tokens to data/tiny_shakespeare_val.bin
Saved 305260 tokens to data/tiny_shakespeare_train.bin"><pre><code>Saved 32768 tokens to data/tiny_shakespeare_val.bin
Saved 305260 tokens to data/tiny_shakespeare_train.bin
</code></pre></div>
<p dir="auto">The .bin files are raw byte streams of int32 numbers indicating the token ids with the GPT-2 tokenizer. Alternatively you could also tokenize the <a href="https://huggingface.co/datasets/roneneldan/TinyStories" rel="nofollow">TinyStories</a> dataset with <code>prepro_tinystories.py</code>.</p>
<p dir="auto">In principle we'd be ready to the train the model right here. However the baseline CPU/fp32 reference code is so inefficient that it's not practical to train these models from scratch yet. Instead, we initialize with the GPT-2 weights released by OpenAI and just do finetuning. For that, we have to download the GPT-2 weights and save them as a checkpoint we can load in C:</p>

<p dir="auto">You'll recognize this code from nanoGPT as a simple GPT-2 reference implementation in PyTorch. This script will download the GPT-2 (124M) model, overfit a single batch of data for 10 iterations, run a few steps of generation, and most importantly it will save two files: 1) the <code>gpt2_124M.bin</code> file that contains the raw model weights for loading in C, and <code>gpt2_124M_debug_state.bin</code>, which also contains more debug state: the inputs, targets, logits and loss. This is very useful for debugging C code, for unit testing, and making sure we're exactly matching the PyTorch reference implementation. For now all we care about are the model weights in <code>gpt2_124M.bin</code>. We can now initialize with them and train in raw C. First compile the code:</p>

<p dir="auto">You can have a look inside the <code>Makefile</code> and its comments. It will try to autodetect if OpenMP is available on your system, which is very helpful for speeding up the code at very low cost of code complexity. Once <code>train_gpt2</code> is compiled, you can run it:</p>
<div dir="auto" data-snippet-clipboard-copy-content="OMP_NUM_THREADS=8 ./train_gpt2"><pre>OMP_NUM_THREADS=8 ./train_gpt2</pre></div>
<p dir="auto">You should tune the number of threads depending on how many cores your CPU has. The program will load the model weights, the tokens, it will run a finetuning loop for a few iterations with Adam lr 1e-4, and then generate a sample from the model. The file is (I think) very readable and you should have a look. Simply, there are implementations for the forward and backward pass of all the layers, and they get strung together into a large, manual, forward/backward/update loop. The output looks like this on my MacBook Pro (Apple Silicon M3 Max):</p>
<div data-snippet-clipboard-copy-content="[GPT-2]
max_seq_len: 1024
vocab_size: 50257
num_layers: 12
num_heads: 12
channels: 768
num_parameters: 124439808
train dataset num_batches: 1192
val dataset num_batches: 128
num_activations: 73323776
val loss 5.252026
step 0: train loss 5.356189 (took 1452.121000 ms)
step 1: train loss 4.301069 (took 1288.673000 ms)
step 2: train loss 4.623322 (took 1369.394000 ms)
step 3: train loss 4.600470 (took 1290.761000 ms)
... (trunctated) ...
step 39: train loss 3.970751 (took 1323.779000 ms)
val loss 4.107781
generated: 50256 16773 18162 21986 11 198 13681 263 23875 198 3152 262 11773 2910 198 1169 6002 6386 2583 286 262 11858 198 20424 428 3135 7596 995 3675 13 198 40 481 407 736 17903 11 329 703 6029 706 4082 198 42826 1028 1128 633 263 11 198 10594 407 198 2704 454 680 1028 262 1027 28860 286 198 3237 323
step 40: train loss 4.377757 (took 1366.368000 ms)"><pre><code>[GPT-2]
max_seq_len: 1024
vocab_size: 50257
num_layers: 12
num_heads: 12
channels: 768
num_parameters: 124439808
train dataset num_batches: 1192
val dataset num_batches: 128
num_activations: 73323776
val loss 5.252026
step 0: train loss 5.356189 (took 1452.121000 ms)
step 1: train loss 4.301069 (took 1288.673000 ms)
step 2: train loss 4.623322 (took 1369.394000 ms)
step 3: train loss 4.600470 (took 1290.761000 ms)
... (trunctated) ...
step 39: train loss 3.970751 (took 1323.779000 ms)
val loss 4.107781
generated: 50256 16773 18162 21986 11 198 13681 263 23875 198 3152 262 11773 2910 198 1169 6002 6386 2583 286 262 11858 198 20424 428 3135 7596 995 3675 13 198 40 481 407 736 17903 11 329 703 6029 706 4082 198 42826 1028 1128 633 263 11 198 10594 407 198 2704 454 680 1028 262 1027 28860 286 198 3237 323
step 40: train loss 4.377757 (took 1366.368000 ms)
</code></pre></div>
<p dir="auto">The generation just gives you the token ids for now, which we have to decode back to text. We can implement this in C quite easily also, because decoding is very straight-forward, it's just string chunk lookups and prints. For now we can use tiktoken:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import tiktoken
enc = tiktoken.get_encoding(&quot;gpt2&quot;)
print(enc.decode(list(map(int, &quot;50256 16773 18162 21986 11 198 13681 263 23875 198 3152 262 11773 2910 198 1169 6002 6386 2583 286 262 11858 198 20424 428 3135 7596 995 3675 13 198 40 481 407 736 17903 11 329 703 6029 706 4082 198 42826 1028 1128 633 263 11 198 10594 407 198 2704 454 680 1028 262 1027 28860 286 198 3237 323&quot;.split()))))"><pre><span>import</span> <span>tiktoken</span>
<span>enc</span> <span>=</span> <span>tiktoken</span>.<span>get_encoding</span>(<span>"gpt2"</span>)
<span>print</span>(<span>enc</span>.<span>decode</span>(<span>list</span>(<span>map</span>(<span>int</span>, <span>"50256 16773 18162 21986 11 198 13681 263 23875 198 3152 262 11773 2910 198 1169 6002 6386 2583 286 262 11858 198 20424 428 3135 7596 995 3675 13 198 40 481 407 736 17903 11 329 703 6029 706 4082 198 42826 1028 1128 633 263 11 198 10594 407 198 2704 454 680 1028 262 1027 28860 286 198 3237 323"</span>.<span>split</span>()))))</pre></div>
<p dir="auto">which prints:</p>
<div data-snippet-clipboard-copy-content="<|endoftext|>Come Running Away,
Greater conquer
With the Imperial blood
the heaviest host of the gods
into this wondrous world beyond.
I will not back thee, for how sweet after birth
Netflix against repounder,
will not
flourish against the earlocks of
Allay"><pre><code>&lt;|endoftext|&gt;Come Running Away,
Greater conquer
With the Imperial blood
the heaviest host of the gods
into this wondrous world beyond.
I will not back thee, for how sweet after birth
Netflix against repounder,
will not
flourish against the earlocks of
Allay
</code></pre></div>
<p dir="auto">I like how Netflix comes up, it's clear that the shadow of the training past is still lurking in the model. I did not attempt to tune the finetuning hyperparameters so it's quite likely this can be improved quite a bit, most likely especially if one was to train a bit longer.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">test</h2><a id="user-content-test" aria-label="Permalink: test" href="#test"></a></p>
<p dir="auto">I am also attaching a simple unit test for making sure our C code agrees with the PyTorch code. Compile and run with:</p>
<div data-snippet-clipboard-copy-content="make test_gpt2
./test_gpt2"><pre><code>make test_gpt2
./test_gpt2
</code></pre></div>
<p dir="auto">This now loads the <code>gpt2_124M_debug_state.bin</code> file, runs a forward pass, compares the logits and loss with the PyTorch reference implementation, then it does 10 iterations of training with Adam and makes sure the losses match PyTorch.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">license</h2><a id="user-content-license" aria-label="Permalink: license" href="#license"></a></p>
<p dir="auto">MIT</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I looking into an apparently scammy looking zsh plugin manager called “zi” (117 pts)]]></title>
            <link>https://recurse.social/@dylnuge/112224580867240812</link>
            <guid>39973341</guid>
            <pubDate>Mon, 08 Apr 2024 20:25:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://recurse.social/@dylnuge/112224580867240812">https://recurse.social/@dylnuge/112224580867240812</a>, See on <a href="https://news.ycombinator.com/item?id=39973341">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[After AI beat them, professional Go players got better and more creative (214 pts)]]></title>
            <link>https://www.henrikkarlsson.xyz/p/go</link>
            <guid>39972990</guid>
            <pubDate>Mon, 08 Apr 2024 19:42:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.henrikkarlsson.xyz/p/go">https://www.henrikkarlsson.xyz/p/go</a>, See on <a href="https://news.ycombinator.com/item?id=39972990">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg" width="1024" height="825" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:825,&quot;width&quot;:1024,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:277381,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><h6>A game of the board game Go in Japan 1876</h6><p>For many decades, it seemed professional Go players had reached a hard limit on how well it is possible to play. They were not getting better. Decision quality was largely plateaued from 1950 to the mid-2010s:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif" width="918" height="616" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:616,&quot;width&quot;:918,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1700056,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/tiff&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 1456w" sizes="100vw"></picture></div></a></figure></div><p>Then, in May 2016, DeepMind demonstrated AlphaGo, an AI that could beat the best human Go players. This is how the humans reacted:</p><p>After a few years, the weakest professional players were better than the strongest players before AI. The strongest players pushed beyond what had been thought possible.</p><p><span>Or were they cheating by using the AI? No.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-140954444" href="https://www.henrikkarlsson.xyz/p/go#footnote-1-140954444" target="_self" rel="">1</a></span><span> They really were getting better.</span></p><p><span>And it wasn’t simply that they imitated the AI, in a mechanical way. They got more creative, too. There was an uptick in historically novel moves and sequences.&nbsp;</span><a href="https://www.pnas.org/doi/epdf/10.1073/pnas.2214840120" rel="">Shin et al</a><span>&nbsp;calculate about 40 percent of the improvement came from moves that could have been memorized by studying the AI. But moves that deviated from what the AI would do also improved, and these “human moves” accounted for 60 percent of the improvement.</span></p><p>My guess is that AlphaGo’s success forced the humans to reevaluate certain moves and abandon weak heuristics. This let them see possibilities that had been missed before.</p><p>Something is considered impossible. Then somebody does it. Soon it is standard. This is a common pattern. Until Roger Bannister ran the 4-minute mile, the best runners clustered just above 4 minutes for decades. A few months later Bannister was no longer the only runner to do a 4-minute mile. These days, high schoolers do it. The same story can be told about the French composer Pierre Boulez. His music was considered unplayable until recordings started circulating on YouTube and elsewhere. Now it is standard repertoire at concert houses.</p><p>The recent development in Go suggests that superhuman AI systems can have this effect, too. They can prove something is possible and lift people up. This doesn’t mean that AI systems will not displace humans at many tasks, and it doesn’t mean that humans can always adapt to keep up with the systems—in fact, the human Go players are not keeping up. But the flourishing of creativity and skills tells us something about what might happen at the tail end of the human skill distribution when more AI systems come online. As humans learn from AIs, they might push through blockages that have kept them stalled and reach higher.</p><p><span>Another interesting detail about the flourishing in Go, which is teased out in&nbsp;</span><a href="https://escholarship.org/content/qt6q05n7pz/qt6q05n7pz.pdf" rel="">this paper by Shin, Kim, and Kim</a><span>, is that the trend shift actually happened 18 months&nbsp;</span><em>after</em><span>&nbsp;AlphaGo. This coincides with the release of </span><a href="https://en.wikipedia.org/wiki/Leela_Zero" rel="">Leela Zero</a><span>, an open source Go engine. Being open source Leela Zero allowed Go players to build tools, like Lizzie, that show the AI’s reasoning when picking moves. Also, by giving people direct access, it made it possible to do massive input learning</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-140954444" href="https://www.henrikkarlsson.xyz/p/go#footnote-2-140954444" target="_self" rel="">2</a></span><span>. This is likely what caused the machine-mediated unleash of human creativity.</span></p><p><span>This is not the first time this kind of machine-mediated flourishing has happened. When DeepBlue beat the chess world champion Kasparov in 1997, it was assumed this would be a blow to human chess players. It wasn’t. Chess became more popular than ever. And the games did not become machine-like and predictable. Instead, top players like Magnus Carlsen became&nbsp;</span><a href="https://www.wsj.com/articles/magnus-carlsen-ian-nepomniachtchi-world-chess-championship-computer-analysis-11639003641" rel="">more inventive than ever</a><span>.</span></p><p><span>Our potential is greater than we realize. Even in highly competitive domains, like chess and GO, performance can be operating far below the limit of what is possible. </span><em>Perhaps</em><span> AI will give us a way to push through these limits in more domains.</span></p><p><span>Warmly</span><br><span>Henrik</span></p><p><span>Several of the points here build on comments made on a Twitter thread I made about this yesterday. Nabeel S. Qureshi (</span><a href="https://twitter.com/nabeelqu" rel="">Twitter</a><span>, </span><a href="https://nabeelqu.co/" rel="">blog</a><span>) read a draft and gave useful pointers.</span></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Find My Device on Android (120 pts)]]></title>
            <link>https://blog.google/products/android/android-find-my-device/</link>
            <guid>39971673</guid>
            <pubDate>Mon, 08 Apr 2024 17:03:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.google/products/android/android-find-my-device/">https://blog.google/products/android/android-find-my-device/</a>, See on <a href="https://news.ycombinator.com/item?id=39971673">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="jump-content" tabindex="-1">
            

    
    

    <article ng-init="drawerToggle = {'open': true}">

    
    





    

    
      

<div data-analytics-module="{
    &quot;module_name&quot;: &quot;Hero Menu&quot;,
    &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
  }">
      <div>
          <p>Apr 08, 2024</p>
          
            <p data-reading-time-render="">[[read-time]] min read</p>
          
        </div>
      
        <p>
          The new Find My Device experience helps you easily find your misplaced Android devices and other belongings.
        </p>
      
    </div>

    

    
      







<div>
    <figure>
      <div>
  <p><img srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/find_device_keyword_illustration_.width-600.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/find_device_keyword_illustration.width-1200.format-webp.webp 1200w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/find_device_keyword_illustration.width-1600.format-webp.webp 1600w" sizes="(max-width: 599px) 100vw, (max-width: 1023px) 600px, 1024px" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/find_device_keyword_illustration.width-1200.format-webp.webp" fetchpriority="high" alt="Illustration of headphones, a wallet, keys, a TV remote control, luggage and Bluetooth tags.">
  </p>
</div>

      
    </figure>
  </div>


    

    
    <div data-reading-time="true" data-component="uni-drop-cap|uni-tombstone">

            
              


<google-read-aloud-player data-analytics-module="{
        &quot;event&quot;: &quot;module_impression&quot;,
        &quot;module_name&quot;: &quot;ai_audio&quot;,
        &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
    }" data-date-modified="2024-04-08T17:47:14.052567+00:00" data-progress-bar-style="half-wave" data-api-key="AIzaSyBLT6VkYe-x7sWLZI2Ep26-fNkBKgND-Ac" data-article-style="style9" data-tracking-ids="G-HGNBTNCHCQ,G-6NKTLKV14N" data-voice-list="en.ioh-pngnat:Cyan,en.usb-pngnat:Lime" data-layout-style="style1" data-highlight-mode="word-over-paragraph" data-highlight-text-color="#000000" data-highlight-word-background="#8AB4F8" data-highlight-paragraph-background="#D2E3FC" data-background="linear-gradient(180deg, #F1F3F4 0%, #F8F9FA 100%)" data-foreground-color="#202124" data-font="600 16px Google Sans, sans-serif" data-box-shadow="0px 1px 3px 1px rgba(60, 64, 67, 0.15)">
</google-read-aloud-player>




            

            
            
<!--article text-->

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }">
        <p data-block-key="g4c3e">Today, the all-new Find My Device is rolling out to Android devices around the world, starting in the U.S. and Canada. With a new, crowdsourced network of over a billion Android devices, Find My Device can help you find your misplaced Android devices and everyday items quickly and securely. Here are five ways you can try it out.</p>
      </div>
  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><h2 data-block-key="g4c3e">1. Locate offline devices</h2><p data-block-key="1hpqn">Locate your compatible Android phone and tablet by ringing them or viewing their location on a map in the app — even when they’re offline. And thanks to specialized Pixel hardware, Pixel 8 and 8 Pro owners will also be able to find their devices if they’re powered off or the battery is dead.</p></div>
  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><h2 data-block-key="w3l5r">2. Keep track of everyday items with compatible Bluetooth tags</h2><p data-block-key="dl4c6">Starting in May, you’ll be able to locate everyday items like your keys, wallet or luggage with Bluetooth tracker tags from <a href="https://chipolo.net/en-us/products/category/chipolo-point" rt-link-type="external">Chipolo</a> and <a href="https://pebblebee.com/pages/google-find-my-device" rt-link-type="external">Pebblebee</a> in the Find My Device app. These tags, built specifically for the Find My Device network, will be compatible with <a href="https://blog.google/products/android/unknown-tracker-alert-google-android/" rt-link-type="external">unknown tracker alerts across Android</a> and iOS to help protect you from unwanted tracking. Keep an eye out later this year for additional Bluetooth tags from eufy, Jio, Motorola and more.</p></div>
  

  
    







  
      <div data-analytics-module="{
          &quot;module_name&quot;: &quot;Inline Images&quot;,
          &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
        }">
  

  <p><img alt="A phone screen shows the Find My Device user interface with a list of devices, including a Pixel 8, house key and family tablet." src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/2._Keep_track_of_everyday_items_w.width-100.format-webp_kIa4MPR.webp" loading="lazy" data-loading="{
                &quot;mobile&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/2._Keep_track_of_everyday_items_w.width-500.format-webp_FxdNqKI.webp&quot;,
                &quot;desktop&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/2._Keep_track_of_everyday_items_.width-1000.format-webp_HC0rRT2.webp&quot;
              }">
        
      
    
    </p>
    
  
    </div>
  



  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><h2 data-block-key="w3l5r">3. Find nearby items</h2><p data-block-key="a9le">Sometimes what we’re looking for is right under our noses. If you're close to your lost device but need a little extra help tracking it down, a “Find nearby” button will appear to help you figure out exactly where it’s hiding. You’ll also be able to use this to find everyday items, like your wallet or keys, when Bluetooth tags launch in May.</p></div>
  

  
    







  
      <div data-analytics-module="{
          &quot;module_name&quot;: &quot;Inline Images&quot;,
          &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
        }">
  

  <p>

      
      
        
          <video tabindex="0" autoplay="" loop="" muted="" playsinline="" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/3._Find_nearby_items_3.mp4" type="video/mp4" title="Animation of the Find My Device app showing how to locate a nearby house key." alt="3 Find nearby items">
            Video format not supported
          </video>
        
      
    
    </p>
    
  
    </div>
  



  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><h2 data-block-key="w3l5r">4. Pinpoint devices at home with Nest</h2><p data-block-key="7qrh0">More often than not, we lose everyday items like our keys or phone right at home. So the Find My Device app now shows a lost device’s proximity to your home Nest devices, giving you an easy reference point.</p></div>
  

  
    







  
      <div data-analytics-module="{
          &quot;module_name&quot;: &quot;Inline Images&quot;,
          &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
        }">
  

  <p>

      
      
        
          <video tabindex="0" autoplay="" loop="" muted="" playsinline="" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/4._Pinpoint_devices_at_home_with_Nest_1.mp4" type="video/mp4" title="Animation of the Find My Device app indicating that a house key was last seen near a living room speaker" alt="4 pinpoint devices at home with nest">
            Video format not supported
          </video>
        
      
    
    </p>
    
  
    </div>
  



  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><h2 data-block-key="w3l5r">5. Share accessories with friends and family</h2><p data-block-key="cr9v">Share an accessory so everyone can keep an eye on it in the app. For instance, share your house key with your roommate, the TV remote with your friend or luggage with a travel buddy so you can easily divide and conquer if something goes missing.</p></div>
  

  
    







  
      <div data-analytics-module="{
          &quot;module_name&quot;: &quot;Inline Images&quot;,
          &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
        }">
  

  <p><img alt="A phone screen shows a shared device prompt in the Find My Device app." src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/5._Share_accessories_with_friends.width-100.format-webp_sIdCkYl.webp" loading="lazy" data-loading="{
                &quot;mobile&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/5._Share_accessories_with_friends.width-500.format-webp_lVC3a8b.webp&quot;,
                &quot;desktop&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/5._Share_accessories_with_friend.width-1000.format-webp_emfeN0x.webp&quot;
              }">
        
      
    
    </p>
    
  
    </div>
  



  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><p data-block-key="w3l5r">Find My Device is secure by default and private by design. Multi-layered protections built into the Find My Device network help keep you safe and your personal information private, while keeping you in control of the devices connected to the Find My Device network. This includes end-to-end encryption of location data as well as aggregated device location reporting, a first-of-its-kind safety feature that provides additional protection against unwanted tracking back to a home or private location. <a href="https://security.googleblog.com/2024/04/find-my-device-network-security-privacy-protections.html" rt-link-type="external">Read more</a> about how our multi-layered protections for the Find My Device network work.</p><p data-block-key="ef08k">The new Find My Device works with devices running Android 9+. Learn more about <a href="https://www.android.com/find-my-device" rt-link-type="external">Find My Device-compatible devices</a> and all the ways the Find My Device network can <a href="https://support.google.com/android/answer/3265955?hl=en&amp;ref_topic=7651004&amp;sjid=3104889368197014343-NC" rt-link-type="external">help you find a lost device or item</a>. And look out for software updates coming to headphones from JBL, Sony and others, which will join the Find My Device network soon.</p></div>
  


            
            

            
              




            
          </div>
  </article>
  





  

  


<div data-component="uni-related-articles" data-analytics-module="{
    &quot;module_name&quot;: &quot;Article Footer Related Stories&quot;,
    &quot;section_header&quot;: &quot;Related stories&quot;
  }">
    <div>
        <h3>
          <p>
            Related stories
          </p>
        </h3>
      </div>
    <div>
      <ul aria-role="menu" aria-label="Related articles">
        
          <li>
            <a href="https://blog.google/products/android/google-ai-android-mwc-barcelona/" data-index="1" data-target="card" data-primarytag="products - android" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;6 Android experiences to see at MWC Barcelona&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/products/android/google-ai-android-mwc-barcelona/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;1&quot;,
                &quot;related_article_tag&quot;: &quot;products - android&quot;,
                &quot;article_name&quot;: &quot;6 Android experiences to see at MWC Barcelona&quot;,
                &quot;author_name&quot;: &quot;Menaka Shroff&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/001_CM301076_MWC_2024_Highlight.max-600x208.format-webp.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/001_CM301076_MWC_2024_Highligh.max-1200x416.format-webp.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/001_CM301076_MWC_2024_Highligh.max-1200x416.format-webp.webp" alt="001_CM301076_MWC 2024_Highlightlights_Blog Post_ Header_SM3_dims" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/001_CM301076_MWC_2024_Highlight.max-600x208.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/001_CM301076_MWC_2024_Highligh.max-1200x416.format-webp.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Android</span></p><h4 data-target="title">6 Android experiences to see at MWC Barcelona</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    Menaka Shroff
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Feb 26, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
          <li>
            <a href="https://blog.google/products/android/new-android-features-february-2024/" data-index="2" data-target="card" data-primarytag="products - android" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;9 new Android features to help you stay productive&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/products/android/new-android-features-february-2024/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;2&quot;,
                &quot;related_article_tag&quot;: &quot;products - android&quot;,
                &quot;article_name&quot;: &quot;9 new Android features to help you stay productive&quot;,
                &quot;author_name&quot;: &quot;John Renaldi&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Blog_Keyframe_Image_16x9_Thumbn.max-600x208.format-webp.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Blog_Keyframe_Image_16x9_Thumb.max-1200x416.format-webp.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Blog_Keyframe_Image_16x9_Thumb.max-1200x416.format-webp.webp" alt="Blog_Keyframe Image_16x9_Thumbnail03" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Blog_Keyframe_Image_16x9_Thumbn.max-600x208.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Blog_Keyframe_Image_16x9_Thumb.max-1200x416.format-webp.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Android</span></p><h4 data-target="title">9 new Android features to help you stay productive</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    John Renaldi
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Feb 26, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
          <li>
            <a href="https://blog.google/products/android/how-to-use-quick-share-android/" data-index="3" data-target="card" data-primarytag="products - android" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;How to quickly share content with nearby devices&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/products/android/how-to-use-quick-share-android/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;3&quot;,
                &quot;related_article_tag&quot;: &quot;products - android&quot;,
                &quot;article_name&quot;: &quot;How to quickly share content with nearby devices&quot;,
                &quot;author_name&quot;: &quot;Alice Zheng&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/quickshare_4.max-600x208.format-webp.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/quickshare_4.max-1200x416.format-webp.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/quickshare_4.max-1200x416.format-webp.webp" alt="quickshare_4" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/quickshare_4.max-600x208.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/quickshare_4.max-1200x416.format-webp.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Android</span></p><h4 data-target="title">How to quickly share content with nearby devices</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    Alice Zheng
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Feb 08, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
          <li>
            <a href="https://blog.google/products/google-tv/google-tv-movies-valentines-day-2024/" data-index="4" data-target="card" data-primarytag="products - google tv" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;Find your perfect match this Valentine\u0027s Day on Google TV&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/products/google-tv/google-tv-movies-valentines-day-2024/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;4&quot;,
                &quot;related_article_tag&quot;: &quot;products - google tv&quot;,
                &quot;article_name&quot;: &quot;Find your perfect match this Valentine\u0027s Day on Google TV&quot;,
                &quot;author_name&quot;: &quot;Stacey Herron&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GoogleTV_Valentines-Day_b4vn9or.max-600x208.format-webp.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GoogleTV_Valentines-Day_b4vn9o.max-1200x416.format-webp.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GoogleTV_Valentines-Day_b4vn9o.max-1200x416.format-webp.webp" alt="GTV_VDay Hero" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GoogleTV_Valentines-Day_b4vn9or.max-600x208.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GoogleTV_Valentines-Day_b4vn9o.max-1200x416.format-webp.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Google TV</span></p><h4 data-target="title">Find your perfect match this Valentine's Day on Google TV</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    Stacey Herron
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Feb 08, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
          <li>
            <a href="https://blog.google/technology/safety-security/online-safety-tips-cybersecurity-mistakes/" data-index="5" data-target="card" data-primarytag="topics - safety &amp; security" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;6 cybersecurity mistakes people make — and what to do instead&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/technology/safety-security/online-safety-tips-cybersecurity-mistakes/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;5&quot;,
                &quot;related_article_tag&quot;: &quot;topics - safety &amp; security&quot;,
                &quot;article_name&quot;: &quot;6 cybersecurity mistakes people make — and what to do instead&quot;,
                &quot;author_name&quot;: &quot;Ladan Mohamed&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/CybersecurityMistakes_Hero-1.max-600x208.format-webp.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/CybersecurityMistakes_Hero-1.max-1200x416.format-webp.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/CybersecurityMistakes_Hero-1.max-1200x416.format-webp.webp" alt="CybersecurityMistakes_Hero-1" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/CybersecurityMistakes_Hero-1.max-600x208.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/CybersecurityMistakes_Hero-1.max-1200x416.format-webp.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Safety &amp; Security</span></p><h4 data-target="title">6 cybersecurity mistakes people make — and what to do instead</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    Ladan Mohamed
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Feb 06, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
          <li>
            <a href="https://blog.google/products/android/google-ai-samsung-galaxy-s24/" data-index="6" data-target="card" data-primarytag="products - android" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;The power of Google AI comes to the new Samsung Galaxy S24 series&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/products/android/google-ai-samsung-galaxy-s24/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;6&quot;,
                &quot;related_article_tag&quot;: &quot;products - android&quot;,
                &quot;article_name&quot;: &quot;The power of Google AI comes to the new Samsung Galaxy S24 series&quot;,
                &quot;author_name&quot;: &quot;Hiroshi Lockheimer&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/21424_ANC_Unpacked_blog_post_he.max-600x208.format-webp_MwYIMRd.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/21424_ANC_Unpacked_blog_post_h.max-1200x416.format-webp_MroMQQq.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/21424_ANC_Unpacked_blog_post_h.max-1200x416.format-webp_MroMQQq.webp" alt="21424_ANC_Unpacked blog post header_OP1@3x" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/21424_ANC_Unpacked_blog_post_he.max-600x208.format-webp_MwYIMRd.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/21424_ANC_Unpacked_blog_post_h.max-1200x416.format-webp_MroMQQq.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Android</span></p><h4 data-target="title">The power of Google AI comes to the new Samsung Galaxy S24 series</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    Hiroshi Lockheimer
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Jan 17, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
        <li>.</li>
      </ul>
    </div>
    
      
    
 </div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[She Built a Microcomputer Empire from Her Suburban Home (345 pts)]]></title>
            <link>https://every.to/the-crazy-ones/the-woman-that-tech-history-forgot</link>
            <guid>39970915</guid>
            <pubDate>Mon, 08 Apr 2024 15:48:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://every.to/the-crazy-ones/the-woman-that-tech-history-forgot">https://every.to/the-crazy-ones/the-woman-that-tech-history-forgot</a>, See on <a href="https://news.ycombinator.com/item?id=39970915">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <p><em>If history is written by the victors, Lore Harp McGovern should have volumes devoted to her contributions to the personal computing industry. In the mid-1970s, from her suburban California home, Harp McGovern—a housewife and mother of two—began assembling memory boards and other computer expansions to sell to the growing hobbyist and business markets. With her friend Carole Ely, she grew their company, Vector Graphic, into a major manufacturer of microcomputers, eventually taking it public before before Big Blue—IBM—muscled into the market. In the latest installment of his column The Crazy Ones, </em><strong><em>Gareth Edwards</em></strong><em> tells the untold story of one of the last remaining original founders of Silicon Valley.—</em><a href="https://every.to/news/kate-lee-joins-every-as-editor-in-chief" rel="noopener noreferrer" target="_blank"><em>Kate Lee</em></a></p><hr><p>London. 1981. A young, smartly dressed woman watches from the sidelines as a stage is prepared. Everyone is there to hear about a hotly anticipated IPO out of Silicon Valley. An investor approaches the woman and asks for a coffee refill from the table behind her. Her train of thought broken, she looks up at him. For a second, she holds his gaze. Then she turns and pours him a coffee. A few minutes later, the host announces that the CEO is ready to speak.</p><p>Tucking her short brown hair behind her ears, the same young woman straightens her suit and walks confidently up onto the stage. A murmur of surprise spreads across the room, which soon gives way to polite applause. She nods in acknowledgement, her eyes scanning the audience, searching.</p><p>“My name is Lore Harp, CEO and founder of Vector Graphic,” she says, her accent a mix of German and Californian. She locks eyes with the investor who asked her to refill his cup. “Sir, do you need me to get you any more coffee?”</p><p>The crowd looks at the embarrassed investor. He shakes his head.</p><p>“Good,” Lore Harp says with a thin smile. “Let’s continue, then, shall we?”</p><p>This is the story of Lore Harp McGovern, founder of Vector Graphic. With her friend Carole Ely, she launched a multi-million-dollar computer company from her suburban home and became one of the most important founders of the microcomputer age. It is based on contemporary accounts in publications such as the <em>Harvard Business Review, Interface Age, Kilobaud, Time, </em>and the <em>Los Angeles Times</em>, as well as books such as <em>Women, Technology and Power </em>by Marguerite Zientara; <em>Future Rich</em> by Jacqueline Thompson; and <em>The Untold Story of the Computer Revolution </em>by G.H. Stine. It is also based on the words of Lore Harp McGovern herself.</p><h2><strong>‘You can do anything you want’</strong></h2><p>Like many of Silicon Valley’s pioneers, Harp was an immigrant. Born Lore Lange-Hegermann, she grew up in Bottrop, Germany amid World War II, where she shared a bombed-out building with her parents and grandfather, Hermann Lange-Hegermann.</p><p>Lange-Hegermann had been a businessman and politician during the pre-war Weimar Republic, but the rise of Hitler and the war had cost him his political career and much of his business empire. He believed in the importance of a proper education for all of his children and grandchildren, regardless of gender. As a result, Lore grew up watching her aunt become a successful lawyer and her father take over what remained of her grandfather’s businesses.</p><p>Lore’s grandfather was her biggest influence. “I remember, as a seven-year-old, getting a little book from him,” she recalled later in an interview with the Computer History Museum. “In my child’s mind’s eye, it was gigantic. And it was a photographic book of people from all over the world in their native costumes, their traditions and all this. And I was so enthused about the book that I said, ‘I will see all these people!’”</p><p>“You can do anything you want,” her grandfather responded.</p><p>What her family hadn’t entirely grasped was just how determined Lore was to achieve this goal. Smart and observant, it hadn’t taken long for her to spot that reality didn’t always match the ideal. Her mother was a talented photographer and had studied the subject in college, but society expected her to become a housewife, which she did. So while Lore studied hard, she also watched for an opportunity to do something different. In February 1964, one of her friends pulled out of a planned six-month exchange visit with an American family. It was the opportunity Lore had been waiting for. She went instead.&nbsp;</p><h2><strong>A land of opportunity</strong></h2><p>On February 8, 1964, Lore Lange-Hegermann arrived in Santa Cruz, California. She was 19 years old and had promised her family that she would only stay for six months.</p><p>Six months later, to her parents’ surprise and disappointment, Lore sold her return ticket to West Germany and hitchhiked to Mexico. After that, she headed to San Francisco. When her tourist visa expired, she became undocumented, unable to officially work. She crashed in a shared house with four other women and took off-the-books jobs to pay rent and survive, while immersing herself in the growing sixties counterculture.</p><p>During this time, she met Bob Harp. Bob was a young computing researcher and engineer whose talents had secured him a well-paid role at a prestigious research institute in Germany. On his return to the U.S., his path crossed with Lore’s. She was attending a friend’s party when a British sports car roared up outside. It was Bob.</p><p>Bob was as outgoing as he was brilliant, and the two soon fell into conversation. The fact that Bob had broader horizons than most of his peers and spoke fluent German, thanks to his time in Europe, also helped. He made an instant impression on Lore, and she on him. It wasn’t long before they began dating and fell in love. When he was offered a research job at the California Institute of Technology, she agreed to go with him. For the next year, the pair enjoyed living a bohemian life in Los Angeles, until the inevitable happened—immigration services caught up with Lore. Threatened with deportation and summoned to an interview, the couple hatched a plan.</p><p>“I put on my little black shift dress,” Lore later said. “My hair was down. I put it in a big bun. I put on my pearl necklace, my father’s gold bracelet, my grandmother’s ring. I sat there like Miss Prim and Proper. And we said, ‘Oh, we just got engaged, and we’re getting married.’”</p><p>And they did. Lore Lange-Hegermann became Lore Harp. “We found some minister in our neighborhood, and then we went to McDonald’s and had a hamburger.”</p><h2><strong>The gilded cage</strong></h2><p>While Bob had worked at Caltech, Lore was able to immerse herself in the flourishing local art community. But over time the gears of his career began to turn. In the early seventies, Bob was offered a better-paid aeronautical research role at Hughes Research Laboratories, which he accepted. For Harp, this meant leaving vibrant Los Angeles for a more traditional suburban life in Westlake Village, California. “We moved from there to way out in the boonies,” Harp recalled. “Westlake Village which is…oh my God.”</p><p>By 1975, this lifestyle had begun to take a toll on her mental health. Harp had stayed in America to escape a future where her only option was to be a housewife.Yet in Westlake Village, this was the only role it seemed possible for her to play. While Bob worked, she was required to manage the home and join the various women’s groups and their activities like charity fundraisers and dinner parties—obligations expected by her community and Bob’s employer. To try and prevent this from taking over her whole life, she started studying anthropology. But then she became pregnant with their first child and was forced to abandon her studies. A second—another daughter—followed two years later. When the children were three and five, Harp tried to pursue school again, this time hoping to follow in her aunt’s footsteps and become a lawyer. But law school was not friendly to young mothers.&nbsp;</p><p>“My husband was not the kind of person who would take over half the chores while I studied, even though he was otherwise supportive,” she said. Forced to quit, Harp felt frustrated and isolated. The social activities that seemed to provide a sense of value and purpose for many of her neighbors just didn’t feel satisfying for her.</p><p>“I was 32 at the time, and I felt…‘My God, suddenly I’ll be 40, the children will be gone, and where am I going to be?'”&nbsp;</p><h2><strong>The product</strong></h2><p>Harp first met Carole Ely while they were waiting to pick up their children from school. Ely had started a promising career as a bond trader when marriage and children intervened. Now, like Harp, she was stuck living the life of a Westlake Village housewife. She, too, felt caged.</p><p>The duo talked about starting a business together. Their first idea was a travel agency. However, the travel industry in California was one of entrenched interests—when it came to securing partnerships and permits, who you knew mattered just as much as how good your product was. Networking required membership of the kind of business and social clubs that would never allow two women like Harp and Ely to join.</p><p>Then, in January 1975, <em>Popular Electronics </em>published a picture of the <a href="https://every.to/the-crazy-ones/the-secret-father-of-modern-computing" rel="noopener noreferrer" target="_blank">Altair 8800</a> on its cover. Bob Harp, like many who worked with large computers in their workplace, had never imagined that he might one day own a machine of his own. He placed an order for the Altair, which was billed as the world’s first mass-market “microcomputer.” When the machine arrived in kit form, Bob quickly assembled it and it became one of his obsessions. The Harp house was soon filled with pamphlets, newsletters, and how-to guides about microcomputers, and Bob discovered, to his delight, that the Altair’s creator Ed Roberts had built it around a principle of “open architecture” via its S-100 expansion socket. Anyone could create memory boards or peripherals that could expand the functionality of the machine . A few third-party expansions were already on the market and more were being released regularly, but Bob decided it would be more interesting (and a fun test of his skills) to design his own expansion board. Over the course of a few months, he created a board for his own use, one that would double the amount of RAM in his Altair from 4K to a mighty 8K.</p><p>While Bob was at work, Harp would read the computing materials that littered the house. Dinner table conversations would routinely include discussion of the latest trends in technology. Through a form of osmosis, she became versed in the growing computer industry herself. “[Bob] was reading tech publications all the time, and I kind of read them as well, and looked at them, and saw what was going on,” she said.</p><p>Harp decided that Bob’s 8K RAM board was the opportunity that she and Ely had been waiting for. They would make and sell them from home. In return, Bob would receive a royalty payment on every sale. She called her prospective business partner and asked her if she wanted to team up and sell memory boards.</p><p>“Sure,” Ely replied. “What’s a memory board?”</p><p>Two days after that phone call, Lore Harp and Ely attended the Southern California Computer Society’s monthly show. They were there to scout out their potential market. They watched vendors try to sell bags of chips and parts for memory boards and other expansions, often with poorly composed hand-written instructions on how to build them. The whole operation seemed distinctly amateur, yet it seemed to work. Attendees would hand over bundles of money—sometimes as much as $1,000 (about $5,000 today)—in exchange for these products.</p><p>Two days later, on August 23, 1976, Vector Graphic was incorporated. Its head of marketing was Carole Ely. Lore Harp was the CEO.</p><p><strong><a href="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_P3I9vJOqpHx-NNqFeebVsxGCtY1LkjgN8Jm9jKXPsiWuVOOs-A7H3R0c0KYgyFpF2Pn6SCyRc6xL_EffIA5HEH0L6V6m4udVqFylwjx78SMVcNARJng7sYqCBeP3lFBPL_MpvieYeWFs130TSTQ8ew.png?link=true" target="_blank"><img src="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_P3I9vJOqpHx-NNqFeebVsxGCtY1LkjgN8Jm9jKXPsiWuVOOs-A7H3R0c0KYgyFpF2Pn6SCyRc6xL_EffIA5HEH0L6V6m4udVqFylwjx78SMVcNARJng7sYqCBeP3lFBPL_MpvieYeWFs130TSTQ8ew.png"></a></strong></p><p><em>Carole Ely (left) and Lore Harp. Source: Vector Graphic.</em></p><h2><strong>The deal</strong></h2><p>“It’s Lore Harp from Vector Graphic. We have a new memory board and need about 50,000 chips.”&nbsp;</p><p>Harp was seated in the family room of her Westlake home on the phone with a sales representative at chip manufacturer AMD. The company was one of a small number of independent U.S. chip manufacturers that were prepared to supply third parties. Harp and Ely needed these chips so they could package them into kits in Harp’s house and sell them as memory board kits.</p><p>“Oh!” The sales representative on the other end of the phone sounded keen. “I’d be happy to come to your office to discuss it.” Harp looked around the room and across to the kitchen beyond, where a large pot of stew was cooking on the stove.&nbsp;</p><p>“We’d love to meet you in our office, but we’re in the middle of moving,” she replied, thinking on her feet. Harp told the representative they were in Westlake and suggested they meet at the Westlake Inn. The sales representative agreed. After calling Carole and telling her the news, Harp called Bob at work.</p><p>“You’ve got to get home from Hughes,” she told him. “You’ve got to be here at a quarter to five to care for the kids. We have to go meet a guy from AMD.”</p><p>The memory of that first meeting was seared into Harp’s brain. “He had these little monogrammed cufflinks and that aftershave everybody had. Some Old Spice thing,” she remembered about the salesman later. “And he gave us this up-and-down look. I never forget this.”</p><p>The three of them sat down in the hotel’s restaurant area and tried to negotiate a deal. Harp told the man from AMD that they planned to manufacture memory boards and sell them to the growing hobbyist market. The salesman nodded along, then gave them a price. It was far too high. “He didn’t even know what an Altair was,” Harp said. As a result, he didn’t believe their assertions that there was a large enough market for their product to make a discount worthwhile. They refused AMD’s terms.</p><p>Not to be deterred, Harp called Fairchild Semiconductor, another major chip manufacturer. Once again, it led to a meeting at the Westlake Inn.</p><p>“You know what,” the Fairchild representative replied after Harp had explained their plan. “I’ll help you.”</p><p>Now Harp took her biggest gamble. They didn’t have enough money to pre-pay for the chips, so she decided to be honest.</p><p>“We will pay within 30 days because we cannot afford to prepay,” she told him. Harp knew that they’d need to sell enough boards first to cover the cost. “We promise we’ll pay in 30 days or before.”</p><p>The Fairchild man was silent. Then he laughed. “You know what? I trust you.”</p><p>They shook hands and went their separate ways. A few weeks later, there was a knock on the Harp family door. When Lore opened it, a man named Dick Kirkpatrick introduced himself. He explained that he was their Fairchild distributor and pointed to the boxes of chips in the back of his rental car. Harp helped him carry the boxes into the back bedroom that they had begun converting into an assembly space.</p><h2><strong>The sell</strong></h2><p>Stan Veit had just opened up his computer store one autumn morning in New York when the phone rang. It was a woman calling from California. She wanted to sell him some memory boards.</p><p>“I listened because a woman selling computer equipment was indeed a novelty,” he wrote later. “After speaking with her, I found out that her name was Lore Harp.”</p><p>Veit didn’t know it, but he was about to be subject to a sales pitch created by Carole Ely to make Vector stand out.</p><p>Harp told Veit that the Vector boards were not only superior to anything else on the market—they were cheaper as well. She made Veit a simple offer.</p><p>“She would ship me two boards, and if I liked them, I would call her and she would ship me six more and I would pay cash on delivery for the six,” Veit recalled. “If I didn’t want them I just had to send her boards back. Well, that seemed like a fair offer, so I agreed.” When the boards arrived, they were as good as Harp had claimed.&nbsp;</p><p>Veit made the call. “Thus, I became a dealer for Vector Graphic, a company run by two women,” <a href="https://archive.org/details/stan-veits-history-of-the-personal-computer/page/218/mode/2up" rel="noopener noreferrer" target="_blank">he wrote later</a>.</p><p>Veit wasn’t the only one. Harp and Ely systematically went through computer hobbyist magazines like <em>Byte </em>and <em>Interface Age</em>, which were full of advertisements from dealers like Veit. It was from these computer dealers that most hobbyists purchased their microcomputers and parts, so the Vector Graphic team targeted them aggressively. They would call them and pitch the same arrangement that they had offered Veit. By October 1976, orders were flooding in. Harp and Ely’s product wasn’t revolutionary, nor were their boards significantly cheaper than their rivals, but their approach to the process of sales and ordering was more professional. This also extended to the board kits themselves. The pair hadn’t forgotten the poor-quality instructions and packaging they’d seen at computer fairs when starting out. They put extra effort into making sure that the packaging for their own boards was of a high quality, providing clear instructions for assembly, and even color-coded their chips. Overall, Vector’s commitment to high standards made them stand out.</p><p>By the end of the year, they were almost overwhelmed with orders for their memory boards, with demand starting to exceed the number of kits the two women could assemble themselves at Harp’s home. They were also attracting neighborhood attention. It was hard not to. Every weekday morning, Bob Harp would depart for work and Lore would take the children to school. Shortly after, Lore would return home and Ely would knock on her door.</p><p>The rest of the day would see a steady stream of men in suits visiting the house. A short while later, they would leave. It would stop when Lore left to pick up the children and Bob got home. The men were computer parts dealers, but the neighbors didn’t know that.</p><p>“I think our neighbors thought we had a brothel going,” Harp said.</p><p>Eventually Harp’s next-door neighbor, Jean, grew too curious to remain silent. She knocked on the door and asked what they were up to. Harp invited her in. Jean was stunned by the operation. The rear bedroom and family room of Harp’s house had been converted into a production line for memory boards and board kits. Boxes of chips and parts were stacked on the floor, while the table was covered in fruit bowls into which the correct chips for each board had been carefully sorted, ready to be packaged. In the kitchen, salesmen helped themselves to coffee while discussing orders with the women. Toward the end of the afternoon, local high school students would arrive, paid by Harp and Ely to help with packaging and distribution. Watching, Jean admitted she had never had a job, although she had always wanted one. After a brief discussion, Harp and Ely told Jean that they were expanding and offered her a job as their receptionist. She became one of their first full-time employees. Forty years later, Harp would still vividly recall the joy of giving Jean her first ever paycheck.</p><p>“It…it was just great,” Harp said, a smile on her face.</p><p>By December 1976, Harp and Ely had built Vector Graphic into a million-dollar company. In 1977, Harp decided they should go one step further: They should release a desktop microcomputer themselves. This would go from a company oriented around building add-ons for other company’s machines to making machines themselves.</p><h2><strong>The Vector 1</strong></h2><p>Harp persuaded Bob to leave his job at Hughes and join Vector Graphic full time. Harp and Ely had already employed a number of engineers to design parts, but building a computer would require someone to manage them and create an overarching design. Bob possessed the right skills and vision to do this.</p><p>The type of computer the company would build was determined by a growing demand for business machines that had been identified by their dealer network. The pair had a reputation for treating the dealers that sold Vector products fairly, so they were happy to be regularly canvassed for their opinion on what products would sell. Vector had an advantage over its competitors when it came to market intelligence. Vector’s dealers reported that their clientele was expanding. The hobbyist market was still the primary driver for sales of first-generation computers like the Altair, but small-to-medium-sized businesses were becoming interested in owning a microcomputer to use for word processing, accounting, and other business-related tasks. Unlike the hobbyists, they were often leaving stores empty-handed.</p><p>This wasn’t due to fears over price—quite the opposite. These buyers were prepared to pay more than $3,000 (roughly $16,000 today) for the right machine coupled with the right hardware add-ons or business software. It was that they wanted a microcomputer that was reliable, powerful, expandable, and pre-built—unlike hobbyists, most businesses had no desire to assemble their own machines from a kit. It also wouldn’t hurt if it was something that could serve as an office centerpiece around important clients. A machine that ticked all these boxes didn’t yet exist. The market was machines like the Altair or Apple at the low end or expensive, room-sized computers by IBM or others at the high end. There was nothing in between, so Vector decided to fill that gap.</p><p>At the 1977 West Coast Computer Faire, Steve Jobs and Steve Wozniak set the home computer world abuzz with the announcement of the Apple II, a pre-built machine for home users. Just a few booths down, Lore Harp and Carole Ely did the same thing for businesses with the announcement of the Vector 1, designed by Bob Harp. In terms of CPU and RAM, it wasn’t anything special, launching with the same specifications as the Altair 8800. What differentiated it was that it could be easily expanded—well beyond the limits of the Altair. It also came pre-built.&nbsp;</p><p><a href="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_1imEIsNaUtLoWzA53tJegncGKXXr1E11Xdzsd5E2SFTCdplx6an4HqGQa-W7tv8JQJzYbsEu6xsS9x5bfuHRdB0QDgdU5m1IY4lHsq1GhghOT4ggw3Moa6JoCTM8K6RXKVz5VK_yQvL1NIC-ZbWvzw.png?link=true" target="_blank"><img src="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_1imEIsNaUtLoWzA53tJegncGKXXr1E11Xdzsd5E2SFTCdplx6an4HqGQa-W7tv8JQJzYbsEu6xsS9x5bfuHRdB0QDgdU5m1IY4lHsq1GhghOT4ggw3Moa6JoCTM8K6RXKVz5VK_yQvL1NIC-ZbWvzw.png"></a></p><p><em>Carole Ely (left) and Lore Harp holding a Vector 1. Source: Vector Graphic.</em></p><p>“Maybe people are really interested in having a computer that doesn't have all the switches,” Harp told an excited <a href="https://archive.org/details/PersonalComputing19770506/page/n109/mode/2up" rel="noopener noreferrer" target="_blank"><em>Personal Computing World </em>journalist</a>. “Maybe it’s a little beyond the hobbyist who likes to fiddle with all that and likes to see everything work.”</p><p>The Vector 1 was a no-nonsense, ready-to-use computer designed for businesses that wanted a machine that would just work. It also had style, featuring a sleek metal case with rounded corners. It was even available in four colors—burnt orange, dark green, black, and beige. “It was not Apple that did colors first,” Harp remembered later.</p><p>“The folks at Vector have managed to come up with a rather slick-looking entry into the market,” <em>Kilobaud Microcomputing </em>wrote. “And, it’s all theirs.”</p><p>Other reviews of the Vector 1 were equally impressive. So, too, were those for the Vector 2—a machine that kept to the same principles but was faster and had more RAM—that followed soon after. Together, the machines pushed Vector Graphic to the top of the second tier of microcomputer manufacturers that almost exclusively focused on business customers. Companies like Apple and Commodore could boast larger unit sales if figures for both the business and home markets were combined, but when it came to more expensive machines for medium-sized businesses, Vector was the dominant player. By 1980, it was achieving $25 million (about $95 million today) in annual sales. The company that had been started in Harp’s converted back bedroom was now a well-known brand within the computing industry.&nbsp;</p><p>Wall Street also began to notice.</p><h2>From the ground up</h2><p>It wasn’t just the functionality of Vector’s machines that impressed the business market. It was also that they reliably worked.&nbsp;</p><p><a href="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_K1Q4r7huvZ8XXgUs1VK99J1Yu0P7cNoRSBuoLhuxW9eGvXBVa_2dEJCgAVGPAw0yWhFfWs4jfHTaL5-sCXqoHlXtlC5NKomZQbHivjacCYpK7DB4U0r4PIIgbMMbT8igpIKu-p-ci-Wb7YD97ZJqNw.png?link=true" target="_blank"><img src="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_K1Q4r7huvZ8XXgUs1VK99J1Yu0P7cNoRSBuoLhuxW9eGvXBVa_2dEJCgAVGPAw0yWhFfWs4jfHTaL5-sCXqoHlXtlC5NKomZQbHivjacCYpK7DB4U0r4PIIgbMMbT8igpIKu-p-ci-Wb7YD97ZJqNw.png"></a></p><p><em>An advertisement for the 1979 Vector MZ, championing its reliability. Source: Author’s collection.</em></p><p>In customer surveys of the time, Vector Graphic consistently outperformed Apple, Commodore, Tandy, and others in terms of customer satisfaction among business users, largely due to reliability. Lore Harp had mastered running microcomputer production lines, something most other computer startups struggled with. Under her leadership, Vector rarely suffered any workforce issues, and the quality of output from the production lines themselves was high. Her success wasn’t just due to her eye for detail. It was also because she recognized that production is, fundamentally, about people.</p><p>In an era in which production-line staff was largely treated as unskilled labor and corporate benefits were reserved for the C-suite, Vector Graphic bucked the trend. When the company hit its first $1 million sales month, Harp closed the factory and took all 500 employees out to play baseball and drink beer. The company also paid well. It even had a daycare and offered home cleaning services to employees who were struggling to balance household responsibilities with their work.&nbsp;</p><p>These benefits did not go unnoticed in the trade and business press, nor that, as a result, Vector had a higher-than-average number of female employees. In interviews, magazines would ask if Harp’s approach was intended as some kind of feminist experiment. Alternatively, they would ask if it was evidence that female CEOs managed more emotionally than strategically—often with the implicit accusation that the company benefits were a sign of weakness. Harp’s answer was always the same: These benefits and policies were in place because they made economic sense.</p><p>Harp’s philosophy was made clear when Vector went public in 1981. In the first meeting with the IPO’s prospective underwriters, she dropped a bombshell—she wanted <em>every</em><strong> </strong>Vector employee to receive stock options.</p><p>“That guy in assembly who puts in the last screw? If he is really mad, and he doesn’t do it properly, and Quality Assurance misses it, it’s not just the guy back there who hears about it. It’s the VP of sales,” Harp explained. “Because soon it is sales going down because suddenly you’re no longer delivering quality product. <em>Everybody</em> is deserving, not just those of us sitting at the front office.”</p><p>She was told it wasn’t normal. Share options for senior staff was fine, but offering them to the entire staff would harm the value of the offering.</p><p>Harp wouldn’t budge. “Well, you’ve got five minutes,” she told them. “We must have a deal at the end of that time, or we walk.”</p><p>The underwriters protested again.</p><p>“Okay,” Harp said calmly, looking at her watch. “Well, that’s 30 seconds gone.”</p><p>After a frantic discussion, the underwriters agreed to find a way to make it work. In the end, Vector’s staff received stock options based on their time at the company, priced at $1 per share. When the IPO was successful, these shares increased in value by a factor of 13.</p><p>“People couldn’t believe it,” Harp said later. “They were thrilled.”</p><p>The IPO also made Harp the second-ever female founder to take a company public on the Nasdaq stock exchange. Fellow Silicon Valley tech entrepreneur Sandra Kurtzig beat her by just a few days. Harp didn’t mind. Kurtzig was the founder of ASK, a software company focused on business productivity applications. As the two most prominent female founders in the industry, they had become good friends and business allies.</p><p>Although the IPO would represent a major achievement for both Harp and Ely, running Vector was taking a toll on their marriages. Ely’s husband had tolerated her role at Vector as an outlet for her boredom, but as she continued to invest more of her time in the company, their relationship began to deteriorate. For the Harps, cracks were also appearing. Bob had also initially seen Vector as a side project for Lore Harp, and his direct involvement created further problems when the two began to hold different opinions on how the company should be run. He was resentful of the level of attention she received in the press, feeling it diminished his own role at Vector.</p><h2><strong>The Ice Maiden</strong></h2><p>In the beginning, both Harp and Ely were treated as a curious novelty by the rest of Silicon Valley. Their impressive range of products allowed them access to the right circles and markets, but that often came at a price. At best, they were treated with a sort of benign paternalism by competitors that Harp was often all too happy to exploit. Often, the first time a competitor realized how ruthless she could be was when they discovered their customers were now Vector’s customers instead.</p><p>Deals and product demos often took place in hotel rooms during industry shows or on sales tours. Unfortunately, Harp and Ely were often left having to deal with attempts at abuse or exploitation.</p><p>“They either just loved you, or they were trying to be after you,” Harp said later. “One guy actually got slapped. I said, ‘I’m here for one purpose only.’”</p><p>As Harp climbed higher within American industry, the paradigm started to shift. Senior figures within other companies began to resent her presence at the top of the tech pyramid. What had begun as an unthreatening story of two housewives running an odd little business became one instead of two women successfully building and expanding their empire. To many, this didn’t seem possible, and articles of the time suggested that Harp’s husband Bob played a larger role than he actually did. By diminishing the role of the two women in the success of their own company, readers were reassured—whether purposely or not—that behind every successful woman, there must be a man.</p><p>This attitude wasn’t universal. There were those who saw Harp’s skills clearly for what they were. In late 1980, it was Harp—and Vector—who Adam Osborne approached while looking for a manufacturer for his revolutionary portable computer. Osborne was making the jump from writing about computers to designing them. He knew that manufacturing his new machine—the Osborne 1—would be difficult and complex, so he wanted it to be made by the best. In his mind, the best was Lore Harp. Harp was skeptical and wanted to wait until Osborne had a production prototype. Unwilling to wait, Adam Osborne <a href="https://every.to/the-crazy-ones/the-rise-and-fall-of-steve-jobs-s-greatest-rival" rel="noopener noreferrer" target="_blank">pushed ahead</a> on his own.</p><p>After Vector went public in August 1981, the negative perception of Harp held by some executives only grew stronger. Female business icons were allowed, as long as they followed the unwritten rules and remained quiet and humble. Harp was proud of her company and her success, and was happy to call out individuals who treated her poorly, as she had done at that London meeting for Vector’s IPO.</p><p>Soon, she was referred to as the <a href="https://archive.org/details/trialsrewardsofe0000unse/page/84/mode/2up" rel="noopener noreferrer" target="_blank">“Ice Maiden”</a> within the industry. Early in 1982, a female employee wrote to Harp, congratulating her on her success. However, the employee expressed her dismay at some of the things she would hear from male industry figures when she mentioned that she worked at Vector. She told Harp that one man had complained to her about “the awful bitch who was running the company.”</p><p>“I sent a nice note back,” Harp remembered later, “and said I especially enjoyed the comment about this bitch running the company because that poor guy is either so jealous or he’s so stupid that he doesn’t have anything else to talk about, and I must be terribly important in his eyes.”</p><p>Long before the phrase was coined, Lore Harp was busy living rent-free in many male executives’ heads.&nbsp;</p><h2><strong>The breakup</strong></h2><p>Harp and Ely’s success came at a cost. By the end of 1981, Carole Ely was divorced; her husband was unhappy with how much of her time was occupied by her career. Lore and Bob Harp had already effectively separated by the end of 1980, and the possibility of a divorce was even declared as a business risk in the company’s IPO documents. Any faint chance of reconciliation ended with the positive press Vector received after the company went public. Much of this focused on Harp’s leadership role and impact on the company’s success, including an <a href="https://archive.org/details/time-1982-11-15/Time%201982-03-22/page/58/mode/2up" rel="noopener noreferrer" target="_blank">interview in <em>Time</em> magazine</a>. Bob, annoyed at the attention his then-wife was receiving, burned a number of copies of <em>Inc. </em>magazine—which had featured Harp on its cover—in front of her.</p><p>Official divorce proceedings began not long after, eventually concluding in the summer of 1982. In the end, Harp would be divorced for only a single day. She had already begun a relationship with the man who would become her second husband—publishing mogul Pat McGovern. She became Lore Harp McGovern. They proved to be a good match, enjoying their time together but respecting each other’s boundaries. The marriage would last until McGovern’s death in 2014.</p><h2><strong>‘Big Blue’ awakens</strong></h2><p>Adam Osborne was not the only person in Silicon Valley impressed with what Lore Harp McGovern had built at Vector. Just before she took the company public, a man named Don Estridge led a delegation from IBM to pay her a visit. Estridge indicated that IBM was thinking about making a small move into the microcomputer market, and suggested that Vector could supply computers for IBM to badge and sell under an original equipment manufacturer (OEM) arrangement. Rather than designing and selling its own microcomputer, IBM would be happy to confine itself to purchasing stock from Vector that it would sell—with a mark-up—as IBM products.</p><p>“Let me get this straight,” Harp McGovern asked him. “You are a $25 billion business. We’re a $25 million business. And you are interested in potentially buying OEM products <em>from us</em>? That seems like a highly unlikely proposition.”</p><p>Estridge insisted it was true, and Harp McGovern played along. Estridge left with a number of Vector machines as samples. Harp McGovern was smart enough though to know what this really meant: IBM was building a microcomputer. She called an emergency meeting of her senior executives.</p><p>“We have one year, if that,” she said. “The world is going to change.”</p><p>Vector Graphic knew that if IBM (“Big Blue” to its friends and enemies) entered the market, it would target business clients—Vector’s bread and butter. This couldn’t have come at a worse time. Bob Harp, who despite the divorce was still an intrinsic part of the company’s design team, had recently overseen two major technical missteps.</p><p>Vector was late in moving from machines with 8K processing to 16K, which had become the new industry standard. This left Vector—and its dealer network—selling a range of machines based on dated technology longer than other manufacturers. As a result, its customer base was slow to upgrade to new machines, choosing to wait until Vector released one based on 16K technology. This problem was compounded by the release of the Vector 3, its final 8K machine. The computer itself was as reliable as ever, but its keyboard wasn’t detachable and instead was <a href="https://www.computerhistory.org/collections/catalog/X1092.92" rel="noopener noreferrer" target="_blank">built into</a> the computer’s case. Users found this design uncomfortable to use and the Vector 3 became the first of the company’s machines to garner negative reviews.</p><p>Because of these mistakes, Vector failed to sufficiently expand its business before Big Blue arrived—even though Harp McGovern had correctly guessed that IBM was about to enter the game. Vector had little financial room to maneuver once the first IBM PC was released in August 1981.</p><p>Vector made another bad decision later that year, even after the impact of the IBM PC on the business microcomputer market became apparent: Vector continued to use the CP/M operating system rather than switch to Microsoft DOS.</p><p>CP/M had been the operating system of choice within the business sector for some time. Most business software was written to work with it, which made it the obvious choice for any microcomputer manufacturer around which to build their machine. Despite this, Vector had always enjoyed a close relationship with Microsoft, which had its own aspirations to be a power player in the operating system market. Indeed, Bill Gates occasionally worked out of Harp McGovern’s office when he was in town.</p><p>As a result, Harp McGovern had the opportunity to see, sooner than most other companies, what Microsoft was adding to its own operating system in an effort to capture the market. Once the IBM PC debuted with Microsoft DOS—not CP/M—installed, building future machines around this upstart operating system began to look more attractive. It could offer more functionality, while IBM’s adoption of DOS all but guaranteed that software companies would rewrite their business software to support it. It was a switch that Harp McGovern herself was inclined to make, so she contacted Gates and negotiated a provisional contract for Vector to pivot to using DOS instead of CP/M on far sweeter terms—and at a much faster pace—than were being offered to other manufacturers.</p><p>“We had an amazing relationship with Microsoft. I’d signed a contract where every update and every new system in perpetuity we would get at no increased royalty,“ she explained.</p><p>The deal was taken to the board, but the collective decision was made that it was better to stick with the known quantity that was CP/M for the in-development Vector 4. Switching would potentially mean redesigning the next line of machines. It meant re-educating their dealers and clients in the new operating system, and there was no guarantee that every piece of software they needed would be ported to it. The board, which included a number of ex-IBM employees, was also convinced that IBM would soon lose interest in the microcomputer market, leaving it entirely. If that happened, it would leave Vector alone on DOS—a precarious position to be in. In the end, the board agreed that moving to DOS was the bigger risk. This decision robbed Vector of the chance to be one of the first manufacturers to offer “IBM compatibility.” The window for survival in the post-IBM world would be narrow, and Vector had just narrowed it even further.</p><p>“I would say not having forced this through to make it happen was probably a flaw on my part,” Harp McGovern reflected. “By kind of going against my instinct that this needed to happen in order to be competitive. Because IBM was lusting after our dealer network.”</p><p>1982 was a tough year for Vector and the microcomputer industry in general. IBM aggressively pushed to gain market share with its PC, squeezing out many of the smaller players in this space. Harp McGovern worked hard, and successfully, to defend Vector’s share of the market in this hostile environment. Margins were squeezed, but the company’s commitment to quality and support gaveVector a fiercely loyal customer base and dealer network. Sales remained strong, and the company remained profitable. Vector seemed to have secured its niche. So at the end of 1982, Harp McGovern stepped back, relinquishing the role of CEO that she had held since founding the company in 1976. She oversaw the appointment of Fred Snow, an experienced industry hand from Honeywell, as Vector’s new CEO. Since the divorce from Bob, Harp McGovern had wanted to find more time to spend with her own children. She also wanted to fulfill the promise she had made herself as a child and travel the world in her spare time. Both Bob and Carole Ely had left the company by this point, and she decided it was her turn, too. She thought Vector no longer needed Lore Harp McGovern. She was wrong.</p><h2><strong>The final roll of the dice</strong></h2><p>In 1983, the Vector board petitioned Lore Harp McGovern to retake the position of CEO. In her absence, the company had lost more ground to IBM. Countering its moves required quick, decisive action, which the new CEO was unable to provide. The company’s market share had declined precipitously, and it was losing money at an alarming rate.</p><p>Harp McGovern was reluctant to step back into the fray.</p><p>“I had moved up to northern California at the time,” she said later in an interview. “I’d just moved up here a few months earlier with small children, nine and eleven, right after school was out, no friendship, no circle for them.”</p><p>Harp McGovern had promised to spend more time with her children. It was not a promise she was prepared to break. The board pleaded with her to return anyway, stressing that layoffs were already necessary. Without her back at the helm, they likely faced bankruptcy. Harp McGovern relented.</p><p>For almost nine months, Harp McGovern worked to save what was left of the business she and Ely had built. She oversaw a round of layoffs, which was painful for someone who believed the employees were the heart of the business. It was clear to everyone now that the future lay in IBM-compatible machines running DOS—the boat that Vector missed in 1982. Harp negotiated new investment to enable the development of IBM compatibility for the Vector 5 and beyond. . With gargantuan effort, Harp McGovern managed to drag Vector back close to profitability.&nbsp;</p><p>The personal toll, however, was enormous. Keeping the company alive took all of her talent, but it also took her away from her children. When she had agreed to become CEO again, it was conditioned on her not having to move back to LA. She wanted her now school-age children to have a stable home life. To achieve that, she endured multi-hour, long commutes to Vector’s headquarters in southern California.</p><p>“I commuted every day to Los Angeles between here and Burbank,” she said. “I would take a 6 a.m. flight. I’d get to Burbank, have my car in the parking lot, got to the office at 8:30. And at night, I’d try to get the 6 o’clock flight back so I could have dinner with my kids a little late but still have dinner, and the next day, do the same thing again.”</p><p>Soon, Harp McGovern wasn’t just fighting external battles. Friction grew with the board over where savings should be found. Where they wanted to find more cost efficiencies in staffing or production, she argued instead that they should seek new investment and expand into markets yet to be targeted by IBM. They rejected her plan to develop a new machine that would focus on networking and telecommunications, which she saw as the future of computing.&nbsp;</p><p>In the end, Harp McGovern was worn down. In 1984 she walked away (again) from her own company: “I finally said, ‘Guys, I’ve had it. I’m out of here.’ I dumped all my stock, had a good cry at my lawyer’s office because it was just…Oh, it was just…”</p><h2><strong>Life after Vector</strong></h2><p>Harp McGovern’s departure sealed the fate of Vector Graphic, although the company would limp on for a few more years. In October 1987 Vector Graphic finally declared bankruptcy. By that point, Harp McGovern herself had been out of the picture for three years. That didn’t stop a number of journalists from treating its failure as unspoken vindication that housewives—and Ice Maidens—lacked the mettle to succeed. The departure of Bob was often pushed as the turning point. Bob himself was often on hand to provide a useful quote in support of this idea.</p><p>“They didn’t develop any successful products after I left there,” he told the <a href="https://www.latimes.com/archives/la-xpm-1985-08-20-fi-2173-story.html" rel="noopener noreferrer" target="_blank"><em>Los Angeles Times</em></a> in 1985 after Vector filed for Chapter 11 bankruptcy protection. “If the proper decisions had been made, it would be quite successful.”</p><p>By contrast, Harp McGovern refused to talk much about Vector for a long time after her departure. To her, Vector wasn’t just a company. It was more than that. It was something she and Ely had built from nothing into a profitable community of people.</p><p>Harp McGovern had only intended her absence from the business world to be temporary. By 1987, she was back. With Vector gone, she founded (and funded) one of the first companies attempting to develop disposable urinal funnels that would allow women to urinate standing up. Then, in partnership with her husband Pat, she launched a venture capital fund. In 1994, she became one of the original <a href="https://www.bandangels.com/" rel="noopener noreferrer" target="_blank">“Band of Angels”</a>—one of the first angel investor groups in California focused on technology and life sciences.&nbsp;</p><p>“What I really enjoy is growing the company,” Harp McGovern said when asked what drove her. “Growing people within the company, accepting the challenge of being out there, competing against other companies and making an impact.”</p><p>At first, venture capital and angel investment seemed to offer those opportunities for growth, but over time she became disillusioned with this world. Many investors were happy to take her money, but they refused to accept that she might have useful advice to offer.</p><p>“After I’d done Vector—building a company from totally nothing to fairly good size with an international distribution network, having gone through raising venture capital, having gone through taking the company public and that sort of thing—I felt I could make a great contribution to other young companies that wanted to start in business,” she said later. The reality was quite different. Most entrepreneurs don’t want all the help I thought I could bring.”</p><p>Providing funding without hands-on advice held little interest for Harp. She eventually moved away from this industry as well.</p><p>In the end, Harp McGovern’s legacy would end up being something different. In 2000, alongside her husband Pat, she gave $350 million to endow the McGovern Institute at MIT. She played an active role in establishing it as one of the foremost research institutes into the brain in the world.</p><p>Of all the figures we have explored so far in this series, and of all those we are yet to explore, Lore Harp McGovern is likely the one who has been overlooked the most. Perhaps only Harp McGovern’s friend Sandy Kurtzig runs close. While Steve Jobs and Steve Wozniak were building a computer empire in the suburbs of California, Lore Harp McGovern and Carole Ely were doing the same. As with Adam Osborne, however, the history of Silicon Valley likes to focus on its winners.&nbsp;</p><p>But the voices that are the most outspoken about the need for women to step up and beat men at their own game are often those that are the quietest when that actually happens. Harp McGovern didn’t just shatter Silicon Valley’s glass ceiling—the Ice Maiden (or “the awful bitch”) used its broken shards to carve out a place for herself, her company, and her employees along the way. All too often, her successes have been allocated to other people, while her failures have been attributed to her alone. For all these reasons, one of Silicon Valley’s true pioneers has been granted only a single <a href="https://en.wikipedia.org/wiki/Lore_Harp_McGovern" rel="noopener noreferrer" target="_blank">inaccurate paragraph</a> on Wikipedia.&nbsp;</p><p>In 2016, Harp McGovern <a href="https://www.youtube.com/watch?v=PKLmJ5kQ5pw" rel="noopener noreferrer" target="_blank">recorded an interview</a> with the Computer History Museum. “I'm delighted to do this, mainly because there were so few women in the industry at the time,” she said, when thanked for her contribution to the museum’s archive. “And also for my grandchildren to see that their grandmother actually did things that not a lot of women did in those days.”</p><p>It’s not just Harp McGovern’s grandchildren who should be aware of her achievements. Because unlike many of those who kickstarted the golden age of computing, Lore Harp McGovern, in her late seventies, is still with us today.</p><p>If you are a young founder today who finds themselves in her presence, you would do well to ask one of Silicon Valley’s last remaining original founders for her advice. If she’s prepared to offer it, then listen.</p><hr><p><em>Gareth Edwards is a digital strategist, writer, and historian. He has worked for startups and corporations in both the UK and U.S. He is an avid collector of old computers, rare books and interviews, and abandoned cats. Follow him on </em><a href="https://twitter.com/garius" rel="noopener noreferrer" target="_blank"><em>X</em></a><em>, </em><a href="https://mastodon.me.uk/@garius" rel="noopener noreferrer" target="_blank"><em>Mastodon</em></a><em>, and </em><a href="https://bsky.app/profile/garius.bsky.social" rel="noopener noreferrer" target="_blank"><em>BlueSky</em></a><em>.</em></p><p><em>To read more essays like this, subscribe to </em><a href="https://every.to/subscribe" rel="noopener noreferrer" target="_blank"><em>Every</em></a><em>, and follow us on X at </em><a href="http://twitter.com/every" rel="noopener noreferrer" target="_blank"><em>@every</em></a><em> and on </em><a href="https://www.linkedin.com/company/everyinc/" rel="noopener noreferrer" target="_blank"><em>LinkedIn</em></a>.</p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Reverst: Reverse Tunnels in Go over HTTP/3 and QUIC (138 pts)]]></title>
            <link>https://github.com/flipt-io/reverst</link>
            <guid>39970501</guid>
            <pubDate>Mon, 08 Apr 2024 15:04:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/flipt-io/reverst">https://github.com/flipt-io/reverst</a>, See on <a href="https://news.ycombinator.com/item?id=39970501">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">reverst: HTTP reverse tunnels over QUIC</h2><a id="user-content-reverst-http-reverse-tunnels-over-quic" aria-label="Permalink: reverst: HTTP reverse tunnels over QUIC" href="#reverst-http-reverse-tunnels-over-quic"></a></p>
<blockquote>
<p dir="auto">Ti esrever dna ti pilf nwod gnaht ym tup i</p>
</blockquote>
<p dir="auto">Reverst is a (load-balanced) reverse-tunnel server and Go server-client library built on QUIC and HTTP/3.</p>
<ul dir="auto">
<li>Go Powered: Written in Go using <a href="https://github.com/quic-go/quic-go">quic-go</a></li>
<li>Compatible: The Go <code>client</code> package is built on <code>net/http</code> standard-library abstractions</li>
<li>Load-balanced: Run multiple instances of your services behind the same tunnel</li>
<li>Performant: Built on top of QUIC and HTTP/3</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Use-case</h2><a id="user-content-use-case" aria-label="Permalink: Use-case" href="#use-case"></a></p>
<p dir="auto">Reverst is for exposing services on the public internet from within restrictive networks (e.g. behind NAT gateways).
The tunnel binary is intended to be deployed on the public internet.
Client servers then dial out to the tunnels and register themselves on target tunnel groups.
A tunnel group is a load-balanced set of client-servers, which is exposed through the reverst tunnel HTTP interface.</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/flipt-io/reverst/blob/main/diagram.png"><img width="800" height="1199" src="https://github.com/flipt-io/reverst/raw/main/diagram.png" alt="Tunnel Lifecycle"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><code>reverst</code> tunnel server</h3><a id="user-content-reverst-tunnel-server" aria-label="Permalink: reverst tunnel server" href="#reverst-tunnel-server"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="➜  reverst -h
COMMAND
  reverst

USAGE
  reverst [FLAGS]

FLAGS
  -l, --log LEVEL                    debug, info, warn or error (default: INFO)
  -a, --tunnel-address STRING        address for accepting tunnelling quic connections (default: 127.0.0.1:7171)
  -s, --http-address STRING          address for serving HTTP requests (default: 127.0.0.1:8181)
  -g, --tunnel-groups STRING         path to tunnel groups configuration file (default: groups.yml)
  -n, --server-name STRING           server name used to identify tunnel via TLS (required)
  -k, --private-key-path STRING      path to TLS private key PEM file (required)
  -c, --certificate-path STRING      path to TLS certificate PEM file (required)
      --max-idle-timeout DURATION    maximum time a connection can be idle (default: 1m0s)
      --keep-alive-period DURATION   period between keep-alive events (default: 30s)"><pre>➜  <span>reverst -h</span>
<span>COMMAND</span>
<span>  reverst</span>

<span>USAGE</span>
<span>  reverst [FLAGS]</span>

<span>FLAGS</span>
<span>  -l, --log LEVEL                    debug, info, warn or error (default: INFO)</span>
<span>  -a, --tunnel-address STRING        address for accepting tunnelling quic connections (default: 127.0.0.1:7171)</span>
<span>  -s, --http-address STRING          address for serving HTTP requests (default: 127.0.0.1:8181)</span>
<span>  -g, --tunnel-groups STRING         path to tunnel groups configuration file (default: groups.yml)</span>
<span>  -n, --server-name STRING           server name used to identify tunnel via TLS (required)</span>
<span>  -k, --private-key-path STRING      path to TLS private key PEM file (required)</span>
<span>  -c, --certificate-path STRING      path to TLS certificate PEM file (required)</span>
<span>      --max-idle-timeout DURATION    maximum time a connection can be idle (default: 1m0s)</span>
<span>      --keep-alive-period DURATION   period between keep-alive events (default: 30s)</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Client</h2><a id="user-content-client" aria-label="Permalink: Client" href="#client"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Building</h3><a id="user-content-building" aria-label="Permalink: Building" href="#building"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Usage</h3><a id="user-content-usage-1" aria-label="Permalink: Usage" href="#usage-1"></a></p>
<p dir="auto">See <a href="https://github.com/flipt-io/reverst/blob/main/client">./client</a> directory for more details.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Server</h2><a id="user-content-server" aria-label="Permalink: Server" href="#server"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Building</h3><a id="user-content-building-1" aria-label="Permalink: Building" href="#building-1"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Testing</h3><a id="user-content-testing" aria-label="Permalink: Testing" href="#testing"></a></p>
<p dir="auto">Reverst uses Dagger to setup and run an integration test suite.</p>
<div dir="auto" data-snippet-clipboard-copy-content="dagger call test --source=."><pre><span>dagger call test --source=.</span></pre></div>
<p dir="auto">The test suite sets up a tunnel, registers a server-client to the tunnel and then requests the service through the tunnels HTTP interface.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Running</h3><a id="user-content-running" aria-label="Permalink: Running" href="#running"></a></p>
<p dir="auto">The following walks through experimenting with the <a href="https://github.com/flipt-io/reverst/blob/main/examples/simple">./examples/simple</a> server example.
This directory contains a number of things needed to stand up reverst and a registering client server:</p>
<ul dir="auto">
<li>The example service in <a href="https://github.com/flipt-io/reverst/blob/main/examples/simple/main.go">./examples/simple/main.go</a>.</li>
<li>Simple self-signed TLS private key and certificate.</li>
<li>A tunnel-groups file for routing decisions.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Running <code>reverst</code></h4><a id="user-content-running-reverst" aria-label="Permalink: Running reverst" href="#running-reverst"></a></p>
<p dir="auto">The following runs the tunnel server with:</p>
<ul dir="auto">
<li>The QUIC tunnel listener on <code>127.0.0.1:7171</code></li>
<li>The HTTP serving listener on <code>127.0.0.1:8181</code></li>
<li>Logging with <code>debug</code> level</li>
<li>A TLS server-name of <code>flipt.dev.local</code></li>
<li>Some tunnel group definitions with a single tunnel group
<ul dir="auto">
<li>The group has the name <code>flipt.dev.local</code></li>
<li>The group is reachable under the same host name</li>
<li>The group requires basic username and password authentication</li>
</ul>
</li>
<li>The dummy TLS certificates</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="go run ./cmd/reverst/... -l debug \
    -n flipt.dev.local \
    -g examples/simple/group.yml \
    -k examples/simple/server.key \
    -c examples/simple/server.crt"><pre><span>go run ./cmd/reverst/... -l debug \</span>
<span>    -n flipt.dev.local \</span>
<span>    -g examples/simple/group.yml \</span>
<span>    -k examples/simple/server.key \</span>
<span>    -c examples/simple/server.crt</span></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Running example server</h4><a id="user-content-running-example-server" aria-label="Permalink: Running example server" href="#running-example-server"></a></p>
<p dir="auto">Now you can run the example server.
This is a simple HTTP server that responds to all requests with <code>PONG</code>.
It is setup to use the server client to register as a listener on the tunnel.</p>
<div dir="auto" data-snippet-clipboard-copy-content="go run ./examples/simple/main.go --username user --password pass"><pre><span>go run ./examples/simple/main.go --username user --password pass</span></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Making requests</h4><a id="user-content-making-requests" aria-label="Permalink: Making requests" href="#making-requests"></a></p>
<p dir="auto">You can now curl the tunnel and requests will be forward all the way through to the example server.
Be sure to include the <code>Host</code> header, as this is used to route requests to the respective tunnel-group.</p>
<div data-snippet-clipboard-copy-content="curl -H 'Host: flipt.dev.local' 127.0.0.1:8181/fo"><pre lang="curl"><code>curl -H 'Host: flipt.dev.local' 127.0.0.1:8181/fo
</code></pre></div>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Major data center power failure (again): Cloudflare Code Orange tested (126 pts)]]></title>
            <link>https://blog.cloudflare.com/major-data-center-power-failure-again-cloudflare-code-orange-tested</link>
            <guid>39969448</guid>
            <pubDate>Mon, 08 Apr 2024 13:20:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.cloudflare.com/major-data-center-power-failure-again-cloudflare-code-orange-tested">https://blog.cloudflare.com/major-data-center-power-failure-again-cloudflare-code-orange-tested</a>, See on <a href="https://news.ycombinator.com/item?id=39969448">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post"><article><p>04/08/2024</p><section><p>9 min read</p><div><figure><img src="https://blog.cloudflare.com/content/images/2024/04/image3-11.png" alt="Major data center power failure (again): Cloudflare Code Orange tested" loading="lazy" width="1800" height="1013"></figure><p>Here's a post we never thought we'd need to write: less than five months after one of our major data centers lost power, it happened again to the exact same data center. That sucks and, if you're thinking "why do they keep using this facility??," I don't blame you. We're thinking the same thing. But, here's the thing, while a lot may not have changed at the data center, a lot changed over those five months at Cloudflare. So, while five months ago a major data center going offline was really painful, this time it was much less so.</p><p>This is a little bit about how a high availability data center lost power for the second time in five months. But, more so, it's the story of how our team worked to ensure that even if one of our critical data centers lost power it wouldn't impact our customers.</p><p>On November 2, 2023, one of our critical facilities in the Portland, Oregon region lost power for an extended period of time. It happened because of a cascading series of faults that appears to have been caused by maintenance by the electrical grid provider, climaxing with a ground fault at the facility, and was made worse by a series of unfortunate incidents that prevented the facility from getting back online in a timely fashion.</p><p>If you want to read all the gory details, they're available <a href="https://blog.cloudflare.com/post-mortem-on-cloudflare-control-plane-and-analytics-outage/">here</a>.</p><p>It's painful whenever a data center has a complete loss of power, but it's something that we were supposed to expect. Unfortunately, in spite of that expectation, we hadn't enforced a number of requirements on our products that would ensure they continued running in spite of a major failure.</p><p>That was a mistake we were never going to allow to happen again.</p><h3 id="code-orange">Code Orange</h3><p>The incident was painful enough that we declared what we called Code Orange. We borrowed the idea from Google which, when they have an existential threat to their business, reportedly declares a Code Yellow or Code Red. Our logo is orange, so we altered the formula a bit.</p><p>Our conception of Code Orange was that the person who led the incident, in this case our SVP of Technical Operations, Jeremy Hartman, would be empowered to charge any engineer on our team to work on what he deemed the highest priority project. (Unless we declared a Code Red, which we actually ended up doing due to a hacking incident, and which would then take even higher priority. If you're interested, you can read more about that <a href="https://blog.cloudflare.com/thanksgiving-2023-security-incident/">here</a>.)</p><p>After getting through the immediate incident, Jeremy quickly triaged the most important work that needed to be done in order to ensure we'd be highly available even in the case of another catastrophic failure of a major data center facility. And the team got to work.</p><figure><img src="https://blog.cloudflare.com/content/images/2024/04/image2-15.png" alt="" loading="lazy" width="1800" height="338"></figure><h3 id="howd-we-do">How'd we do?</h3><p>We didn’t expect such an extensive real-world test so quickly, but the universe works in mysterious ways. On Tuesday, March 26, 2024, — just shy of five months after the initial incident — the same facility had another major power outage. Below, we'll get into what caused the outage this time, but what is most important is that it provided a perfect test for the work our team had done under Code Orange. So, what were the results?</p><p>First, let’s revisit what functions the Portland data centers at Cloudflare provide. As described in the November 2, 2023, <a href="https://blog.cloudflare.com/post-mortem-on-cloudflare-control-plane-and-analytics-outage/">post</a>, the control plane of Cloudflare primarily consists of the customer-facing interface for all of our services including our website and API. Additionally, the underlying services that provide the Analytics and Logging pipelines are primarily served from these facilities.</p><p>Just like in November 2023, we were alerted immediately that we had lost connectivity to our PDX01 data center. Unlike in November, we very quickly knew with certainty that we had once again lost all power, putting us in the exact same situation as five months prior. We also knew, based on a successful internal cut test in February, how our systems should react. We had spent months preparing, updating countless systems and activating huge amounts of network and server capacity, culminating with a test to prove the work was having the intended effect, which in this case was an automatic failover to the redundant facilities.</p><p>Our Control Plane consists of hundreds of internal services, and the expectation is that when we lose one of the three critical data centers in Portland, these services continue to operate normally in the remaining two facilities, and we continue to operate primarily in Portland. We have the capability to fail over to our European data centers in case our Portland centers are completely unavailable. However, that is a secondary option, and not something we pursue immediately.</p><p>On March 26, 2024, at 14:58 UTC, PDX01 lost power and our systems began to react. By 15:05 UTC, our APIs and Dashboards were operating normally, all without human intervention. Our primary focus over the past few months has been to make sure that our customers would still be able to configure and operate their Cloudflare services in case of a similar outage. There were a few specific services that required human intervention and therefore took a bit longer to recover, however the primary interface mechanism was operating as expected.</p><p>To put a finer point on this, during the November 2, 2023, incident the following services had at least six hours of control plane downtime, with several of them functionally degraded for days.</p><p>API and Dashboard<br>Zero Trust<br>Magic Transit<br>SSL<br>SSL for SaaS<br>Workers<br>KV<br>Waiting Room<br>Load Balancing<br>Zero Trust Gateway<br>Access<br>Pages<br>Stream<br>Images</p><p>During the March 26, 2024, incident, all of these services were up and running within minutes of the power failure, and many of them did not experience any impact at all during the failover.</p><p>The data plane, which handles the traffic that Cloudflare customers pass through our data centers in over 300 cities worldwide, was not impacted.</p><p>Our Analytics platform, which provides a view into customer traffic, was impacted and wasn’t fully restored until later that day. This was expected behavior as the Analytics platform is reliant on the PDX01 data center. Just like the Control Plane work, we began building new Analytics capacity immediately after the November 2, 2023, incident. However, the scale of the work requires that it will take a bit more time to complete. We have been working as fast as we can to remove this dependency, and we expect to complete this work in the near future.</p><p>Once we had validated the functionality of our Control Plane services, we were faced yet again with the cold start of a very large data center. This activity took roughly 72 hours in November 2023, but this time around we were able to complete this in roughly 10 hours. There is still work to be done to make that even faster in the future, and we will continue to refine our procedures in case we have a similar incident in the future.</p><figure><img src="https://blog.cloudflare.com/content/images/2024/04/Incident-inspection.png" alt="" loading="lazy" width="1600" height="284"></figure><h3 id="how-did-we-get-here">How did we get here?</h3><p>As mentioned above, the power outage event from last November led us to introduce Code Orange, a process where we shift most or all engineering resources to addressing the issue at hand when there’s a significant event or crisis. Over the past five months, we shifted all non-critical engineering functions to focusing on ensuring high reliability of our control plane.</p><p>Teams across our engineering departments rallied to ensure our systems would be more resilient in the face of a similar failure in the future. Though the March 26, 2024, incident was unexpected, it was something we’d been preparing for.</p><p>The most obvious difference is the speed at which the control plane and APIs regained service. Without human intervention, the ability to log in and make changes to Cloudflare configuration was possible seven minutes after PDX01 was lost. This is due to our efforts to move all of our configuration databases to a Highly Available (HA) topology, and pre-provision enough capacity that we could absorb the capacity loss. More than 100 databases across over 20 different database clusters simultaneously failed out of the affected facility and restored service automatically. This was actually the culmination of over a year’s worth of work, and we make sure we prove our ability to failover properly with weekly tests.</p><p>Another significant improvement is the updates to our Logpush infrastructure. In November 2023, the loss of the PDX01 datacenter meant that we were unable to push logs to our customers. During Code Orange, we invested in making the Logpush infrastructure HA in Portland, and additionally created an active failover option in Amsterdam. Logpush took advantage of our massively expanded Kubernetes cluster that spans all of our Portland facilities and provides a seamless way for service owners to deploy HA compliant services that have resiliency baked in. In fact, during our February chaos exercise, we found a flaw in our Portland HA deployment, but customers were not impacted because the Amsterdam Logpush infrastructure took over successfully. During this event, we saw that the fixes we’d made since then worked, and we were able to push logs from the Portland region.</p><p>A number of other improvements in our Stream and Zero Trust products resulted in little to no impact to their operation. Our Stream products, which use a lot of compute resources to transcode videos, were able to seamlessly hand off to our Amsterdam facility to continue operations. Teams were given specific availability targets for the services and were provided several options to achieve those targets. Stream is a good example of a service that chose a different resiliency architecture but was able to seamlessly deliver their service during this outage. Zero Trust, which was also impacted in November 2023, has since moved the vast majority of its functionally to our hundreds of data centers, which kept working seamlessly throughout this event. Ultimately this is the strategy we are pushing all Cloudflare products to adopt as our data centers in <a href="https://www.cloudflare.com/network">over 300 cities worldwide</a> provide the highest level of availability possible.</p><figure><img src="https://blog.cloudflare.com/content/images/2024/04/image1-12.png" alt="" loading="lazy" width="1800" height="320"></figure><h3 id="what-happened-to-the-power-in-the-data-center">What happened to the power in the data center?</h3><p>On March 26, 2024, at 14:58 UTC, PDX01 experienced a total loss of power to Cloudflare’s physical infrastructure following a reportedly simultaneous failure of four Flexential-owned and operated switchboards serving all of Cloudflare’s cages. This meant both primary and redundant power paths were deactivated across the entire environment. During the Flexential investigation, engineers focused on a set of equipment known as Circuit Switch Boards, or CSBs. CSBs are likened to an electrical panel board, consisting of a main input circuit breaker and series of smaller output breakers. Flexential engineers reported that infrastructure upstream of the CSBs (power feed, generator, UPS &amp; PDU/transformer) was not impacted and continued to act normally. Similarly, infrastructure downstream from the CSBs such as Remote Power Panels and connected switchgear was not impacted – thus implying the outage was isolated to the CSBs themselves.</p><p>Initial assessment of the root cause of Flexential’s CSB failures points to incorrectly set breaker coordination settings within the four CSBs as one contributing factor. Trip settings which are too restrictive can result in overly sensitive overcurrent protection and the potential nuisance tripping of devices. In our case, Flexential’s breaker settings within the four CSBs were reportedly too low in relation to the downstream provisioned power capacities. When one or more of these breakers tripped, a cascading failure of the remaining active CSB boards resulted, thus causing a total loss of power serving Cloudflare’s cage and others on the shared infrastructure. During the triage of the incident, we were told that the Flexential facilities team noticed the incorrect trip settings, reset the CSBs and adjusted them to the expected values, enabling our team to power up our servers in a staged and controlled fashion. We do not know when these settings were established – typically, these would be set/adjusted as part of a data center commissioning process and/or breaker coordination study before customer critical loads are installed.</p><figure><img src="https://blog.cloudflare.com/content/images/2024/04/Incident-inspection-3.png" alt="" loading="lazy" width="1600" height="284"></figure><h3 id="what%E2%80%99s-next">What’s next?</h3><p>Our top priority is completing the resilience program for our Analytics platform. Analytics aren’t simply pretty charts in a dashboard. When you want to check the status of attacks, activities a firewall is blocking, or even the status of Cloudflare Tunnels - you need analytics. We have evidence that the resiliency pattern we are adopting works as expected, so this remains our primary focus, and we will progress as quickly as possible.</p><p>There were some services that still required manual intervention to properly recover, and we have collected data and action items for each of them to ensure that further manual action is not required. We will continue to use production cut tests to prove all of these changes and enhancements provide the resiliency that our customers expect.</p><p>We will continue to work with Flexential on follow-up activities to expand our understanding of their operational and review procedures to the greatest extent possible. While this incident was limited to a single facility, we will turn this exercise into a process that ensures we have a similar view into all of our critical data center facilities.</p><p>Once again, we are very sorry for the impact to our customers, particularly those that rely on the Analytics engine who were unable to access that product feature during the incident. Our work over the past four months has yielded the results that we expected, and we will stay absolutely focused on completing the remaining body of work.</p></div></section><div><p>We protect <a target="_blank" href="https://www.cloudflare.com/network-services/" rel="noreferrer">entire corporate networks</a>, help customers build <a target="_blank" href="https://workers.cloudflare.com/" rel="noreferrer">Internet-scale applications efficiently</a>, accelerate any <a target="_blank" href="https://www.cloudflare.com/performance/accelerate-internet-applications/" rel="noreferrer">website or Internet application</a>, <a target="_blank" href="https://www.cloudflare.com/ddos/" rel="noreferrer">ward off DDoS attacks</a>, keep <a target="_blank" href="https://www.cloudflare.com/application-security/" rel="noreferrer">hackers at bay</a>, and can help you on <a target="_blank" href="https://www.cloudflare.com/products/zero-trust/" rel="noreferrer">your journey to Zero Trust</a>.</p><p>Visit <a target="_blank" href="https://one.one.one.one/" rel="noreferrer">1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.</p><p>To learn more about our mission to help build a better Internet, <a target="_blank" href="https://www.cloudflare.com/learning/what-is-cloudflare/" rel="noreferrer">start here</a>. If you're looking for a new career direction, check out <a target="_blank" href="https://www.cloudflare.com/careers" rel="noreferrer">our open positions</a>.</p></div><a href="https://blog.cloudflare.com/tag/post-mortem">Post Mortem</a><a href="https://blog.cloudflare.com/tag/outage">Outage</a></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Vala Programming Language (222 pts)]]></title>
            <link>https://vala.dev/</link>
            <guid>39969131</guid>
            <pubDate>Mon, 08 Apr 2024 12:44:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://vala.dev/">https://vala.dev/</a>, See on <a href="https://news.ycombinator.com/item?id=39969131">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <main id="main-content">
      
  <pre data-lang="vala"><code data-lang="vala"><span><span><span>//</span> ExampleApp.vala
</span></span><span>
</span><span><span>public</span> <span><span>class</span> <span>ExampleApp </span><span>:</span> <span>Gtk</span><span><span>.</span></span><span>Application</span> </span><span><span><span>{</span>
</span></span></span><span><span><span>  <span>public</span> <span><span>ExampleApp</span> <span><span>(</span></span></span><span><span><span>)</span></span> </span><span><span><span>{</span>
</span></span></span></span></span><span><span><span><span><span>    <span><span>Object</span> <span><span>(</span></span></span><span><span><span>application_id</span><span>:</span> <span><span>"</span>com.example.App<span>"</span></span></span></span><span><span><span>)</span></span></span><span>;</span>
</span></span></span></span></span><span><span><span><span><span>  <span>}</span></span></span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  <span>public</span> <span>override</span> <span>void</span> <span><span>activate</span> <span><span>(</span></span></span><span><span><span>)</span></span> </span><span><span><span>{</span>
</span></span></span></span></span><span><span><span><span><span>    <span>var</span> <span>win</span> <span>=</span> <span><span>new</span></span><span> </span><span><span>Gtk</span><span>.</span><span>ApplicationWindow</span> <span><span>(</span></span></span><span><span><span>this</span><span>)</span></span></span><span></span><span>;</span>
</span></span></span></span></span><span><span><span><span><span>
</span></span></span></span></span><span><span><span><span><span>    <span>var</span> <span>btn</span> <span>=</span> <span><span>new</span></span><span> </span><span><span>Gtk</span><span>.</span><span>Button</span><span>.</span><span>with_label</span> <span><span>(</span></span></span><span><span><span><span>"</span>Hello World<span>"</span></span><span>)</span></span></span><span></span><span>;</span>
</span></span></span></span></span><span><span><span><span><span>    <span>btn</span><span>.</span><span>clicked</span><span>.</span><span><span>connect</span> <span><span>(</span></span></span><span><span><span>win</span><span>.</span><span>close</span></span></span><span><span><span>)</span></span></span><span>;</span>
</span></span></span></span></span><span><span><span><span><span>
</span></span></span></span></span><span><span><span><span><span>    <span>win</span><span>.</span><span>child</span> <span>=</span> <span>btn</span><span>;</span>
</span></span></span></span></span><span><span><span><span><span>    <span>win</span><span>.</span><span><span>present</span> <span><span>(</span></span></span><span></span><span><span><span>)</span></span></span><span>;</span>
</span></span></span></span></span><span><span><span><span><span>  <span>}</span></span></span>
</span></span></span><span><span><span>
</span></span></span><span><span><span>  <span>public</span> <span>static</span> <span>int</span> <span><span>main</span> <span><span>(</span></span></span><span><span><span>string</span><span><span>[</span><span>]</span></span> <span>args</span></span><span><span>)</span></span> </span><span><span><span>{</span>
</span></span></span></span></span><span><span><span><span><span>    <span>var</span> <span>app</span> <span>=</span> <span><span>new</span></span><span> </span><span><span>ExampleApp</span> <span><span>(</span></span></span><span><span><span>)</span></span></span><span></span><span>;</span>
</span></span></span></span></span><span><span><span><span><span>    <span>return</span> <span>app</span><span>.</span><span><span>run</span> <span><span>(</span></span></span><span><span><span>args</span></span></span><span><span><span>)</span></span></span><span>;</span>
</span></span></span></span></span><span><span><span><span><span>  <span>}</span></span></span>
</span></span></span><span><span><span><span>}</span></span></span>
</span><span>
</span><span><span><span>//</span> Compile command (requires gtk4 package to be installed):
</span></span><span><span><span>//</span> valac --pkg gtk4 ExampleApp.vala
</span></span></code></pre>


  
<div>
  <p><a href="https://wiki.gnome.org/Projects/Vala/Documentation#Getting_Started">Get Started</a>

  
  <a href="https://gitlab.gnome.org/GNOME/vala">View Source Code</a>
  
</p></div>


  <section>
    <h2>Why Vala?</h2>
<dl>
  <div>
    <dt>
      <div>
        

<p>

        Productivity
      </p></div>
    </dt>
    <dd>Comfortably write your code in an object-oriented way with high level abstractions, while having access to deep integrations with <a href="https://www.gnome.org/">GNOME</a> technologies such as: <a href="https://docs.gtk.org/gobject/">GObject</a>, <a href="https://www.gtk.org/">GTK</a> and more!</dd>
  </div>
  <div>
    <dt>
      <div>
        

<p>

        Performance
      </p></div>
    </dt>
    <dd>Vala compiles code down to blazingly fast, fully native binaries. You're also able to reuse existing C Code in your Vala programs as well as generate C Code from Vala.</dd>
  </div>
  <div>
    <dt>
      <div>
        

<p>

        Open-Source
      </p></div>
    </dt>
    <dd>Vala is free and open-source software. It has a great community that contributes to the compiler and develops lots of tooling.</dd>
    <dd><a href="https://wiki.gnome.org/Projects/Vala/Tools">Tooling Documentation</a></dd>
  </div>
</dl>
<a href="https://vala.dev/about/">Learn more about Vala</a>

  </section>

  <section>
    <h2>What can you build?</h2>
<dl>
  <div>
    <dt>
      <div>
        

<p>

        GUI Applications
      </p></div>
    </dt>
    <dd>Perfect integration of GTK, Libadwaita and Granite makes development super simple. Easily publish your apps on Flathub without bloated packages.</dd>
    <dd>
     <ul>
        <li>
          <a href="https://developer.gnome.org/documentation/tutorials/beginners/getting_started.html">GNOME Getting Started Tutorial</a>
        </li>
        <li>
          <a href="https://docs.elementary.io/develop/">elementary OS App Tutorial</a>
        </li>
      </ul>
    </dd>
  </div>
  <div>
    <dt>
      <div>
        



        <p><span>Command Line Programs</span>
        
      </p></div>
    </dt>
    <dd>Use a large standard library and many third-party libraries available for use in Vala.</dd>
  </div>
  <div>
    <dt>
      <div>
        

<p>

        Libraries
      </p></div>
    </dt>
    <dd>Provide bindings for many other languages and API documentation without manual work. Also, dynamic and static linking are both supported.</dd>
  </div>
</dl>

  </section>

  <section>
    



<h2>What's new?</h2>
<div>
  
    

    <a href="https://vala.dev/blog/planet-gnome/">
      <img src="https://vala.dev/processed_images/vala-hero.dd48a5dee00a3fe8.png" alt="Purple background with white text on center that says 'Vala'.">
      <div>
        <p>print("Hello Planet GNOME");</p>
        <p><span>
  
    
      Lorenz Wildberg
  
</span>
        <time datetime="2023-10-11">2023-10-11</time>
      </p></div>
    </a>
  
    

    <a href="https://vala.dev/blog/vala-0-56/">
      <img src="https://vala.dev/processed_images/vala-hero.dd48a5dee00a3fe8.png" alt="Purple background with white text on center that says 'Vala'.">
      <div>
        <p>Vala 0.56</p>
        <p><span>
  
    
      Lorenz Wildberg
  
</span>
        <time datetime="2022-03-18">2022-03-18</time>
      </p></div>
    </a>
  
</div>
<a href="https://vala.dev/blog/">View Blog</a>

  </section>

  <section>
    <h2>Current Versions</h2>
<ul>
  
  <li>
    <a href="https://gitlab.gnome.org/GNOME/vala/-/blob/0.56.13/NEWS">Vala 0.56.13</a> (Stable Long-term Support)
  </li>
  <li>
    <a href="https://gitlab.gnome.org/GNOME/vala/-/commits/main">Vala main</a> (Development)
  </li>
</ul>
<a href="https://wiki.gnome.org/Projects/Vala/ValaPlatforms">How to install</a>

  </section>

  <section>
    

<h2>Showcase</h2>
<ul>
  
  <li>
    <a href="https://tuba.geopjr.dev/">
      <p><img width="640" height="548" srcset="https://vala.dev/processed_images/tuba.7a1c7aac49ae2923.png, https://vala.dev/processed_images/tuba.da9198ab70f554c6.png 2x" src="https://vala.dev/processed_images/tuba.7a1c7aac49ae2923.png" alt="Tuba">
      </p>

      <div>
          <p>Tuba</p>
          <p>Browse the Fediverse</p>
        </div>
    </a>
  </li>
  
  <li>
    <a href="https://apps.gnome.org/Workbench/">
      <p><img width="640" height="479" srcset="https://vala.dev/processed_images/workbench.9949eab6a62a9842.png, https://vala.dev/processed_images/workbench.8c3b3fa5950aed35.png 2x" src="https://vala.dev/processed_images/workbench.9949eab6a62a9842.png" alt="Workbench">
      </p>

      <div>
          <p>Workbench</p>
          <p>Learn and prototype with Vala and other GNOME technologies</p>
        </div>
    </a>
  </li>
  
  <li>
    <a href="https://dino.im/">
      <p><img width="640" height="380" srcset="https://vala.dev/processed_images/dino.df6bf1856311f7f6.png, https://vala.dev/processed_images/dino.8d105749f739e8e0.png 2x" src="https://vala.dev/processed_images/dino.df6bf1856311f7f6.png" alt="Dino">
      </p>

      <div>
          <p>Dino</p>
          <p>A modern open-source chat client for the desktop. Focuses on providing a clean and reliable Jabber/XMPP experience while having your privacy in mind.</p>
        </div>
    </a>
  </li>
  
  <li>
    <a href="https://github.com/stsdc/monitor">
      <p><img width="640" height="370" srcset="https://vala.dev/processed_images/monitor.3a1b6d01834c25b7.png, https://vala.dev/processed_images/monitor.fb35e2a5ac300df1.png 2x" src="https://vala.dev/processed_images/monitor.3a1b6d01834c25b7.png" alt="Monitor">
      </p>

      <div>
          <p>Monitor</p>
          <p>Manage processes and monitor system resources</p>
        </div>
    </a>
  </li>
  
  <li>
    <a href="https://github.com/RajSolai/TextSnatcher">
      <p><img width="640" height="456" srcset="https://vala.dev/processed_images/textsnatcher.8ae2b60321ed0a4a.png, https://vala.dev/processed_images/textsnatcher.394325ae8c65c222.png 2x" src="https://vala.dev/processed_images/textsnatcher.8ae2b60321ed0a4a.png" alt="TextSnatcher">
      </p>

      <div>
          <p>TextSnatcher</p>
          <p>Copy Text from Images with ease, Perform OCR operations in seconds.</p>
        </div>
    </a>
  </li>
  
  <li>
    <a href="https://github.com/linuxmint/timeshift">
      <p><img width="640" height="465" srcset="https://vala.dev/processed_images/timeshift.0c93e88769a287be.png, https://vala.dev/processed_images/timeshift.37674251bf830d9f.png 2x" src="https://vala.dev/processed_images/timeshift.0c93e88769a287be.png" alt="Timeshift">
      </p>

      <div>
          <p>Timeshift</p>
          <p>System restore tool for Linux. Creates filesystem snapshots using rsync+hardlinks, or BTRFS snapshots.</p>
        </div>
    </a>
  </li>
  
</ul>
<a href="https://github.com/desiderantes/awesome-vala">View More Vala Projects</a>

  </section>

  <section>
    <h2 id="community">Community</h2>
<dl>
  <div>
    <dt>
      <div>
        

<p>

        Forums
      </p></div>
    </dt>
    <dd>Ask questions related to Vala in the GNOME Discourse forums under the 'vala' tag.</dd>
    <dd><a href="https://discourse.gnome.org/tag/vala">Discourse Forums</a></dd>
  </div>
  <div>
    <dt>
      <div>
        

<p>

        Internals Chat
      </p></div>
    </dt>
    <dd>Talk to the developers or ask questions about how to contribute to Vala, use the Vala Matrix channel. It also has a IRC bridge.</dd>
    <dd><a href="https://matrix.to/#/#vala:gnome.org">Matrix Room</a></dd>
  </div>
  <div>
    <dt>
      <div>
        

<p>

        Community Server
      </p></div>
    </dt>
    <dd>Connect with the community on the Discord server.</dd>
    <dd><a href="https://discord.gg/YFAzjSVHt7">Discord Server</a></dd>
  </div>
</dl>

<h2>Social Media</h2>
<div>
  <p>Follow the Vala project across these platforms</p>
  <ul>
    <li><a rel="me" href="https://mastodon.social/@vala_lang">


Mastodon</a></li>
    <li><a href="https://www.twitter.com/vala_lang">


Twitter</a></li>
    <li><a href="https://t.me/vala_lang">


Telegram</a></li>
    <li><a href="https://www.reddit.com/r/vala">


Reddit</a></li>
  </ul>
</div>

  </section>

  
<div>
  <p><a href="https://wiki.gnome.org/Projects/Vala/Documentation#Getting_Started">Get Started</a>

  
  <a href="https://gitlab.gnome.org/GNOME/vala">View Source Code</a>
  
</p></div>



    </main>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cultivating minds: The psychological consequences of rice versus wheat farming (108 pts)]]></title>
            <link>https://marginalrevolution.com/marginalrevolution/2024/04/cultivating-minds-the-psychological-consequences-of-rice-versus-wheat-farming.html</link>
            <guid>39968973</guid>
            <pubDate>Mon, 08 Apr 2024 12:26:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://marginalrevolution.com/marginalrevolution/2024/04/cultivating-minds-the-psychological-consequences-of-rice-versus-wheat-farming.html">https://marginalrevolution.com/marginalrevolution/2024/04/cultivating-minds-the-psychological-consequences-of-rice-versus-wheat-farming.html</a>, See on <a href="https://news.ycombinator.com/item?id=39968973">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

      <main id="site-main" role="main">
        
        
  <article id="post-88054">
  <!-- /.entry-header -->
  <div>
    <p>It’s long been argued that the means of production influence social, cultural and psychological processes. Rice farming, for example, requires complex irrigation systems under communal management and intense, coordinated labor. Thus, it has been argued that successful rice farming communities tend to develop people with collectivist orientations, and cultural ways of thinking that emphasize group harmony and interdependence. In contrast, wheat farming, which requires less labor and coordination <span>is associated with more individualistic cultures that value independence and personal autonomy. Implicit in Turner’s Frontier hypothesis, for example, is the idea that not only could a young man say ‘take this job and shove it’ and go west but once there they could establish a small, viable wheat farm (or other dry crop).</span></p>
<p>There is <a href="https://scholarworks.gvsu.edu/orpc/vol4/iss1/7/">plenty of evidence</a> for these theories. Rice cultures around the world do tend to exhibit similar cultural characteristics, including less focus on self, more relational or holistic thinking and greater in-group favoritism than wheat cultures. <a href="https://www.science.org/doi/10.1126/science.1246850">Similar differences exist</a> between the rice and dry crop areas of China. The differences exist but is the explanation rice and wheat farming or are there are other genetic, historical or random factors at play?</p>
<p>A <a href="https://www.nature.com/articles/s41467-024-44770-w">new paper</a> by Talhelm and Dong in Nature Communications uses the craziness of China’s Cultural Revolution to provide causal evidence in favor of the rice and wheat farming theory of culture. After World War II ended, the communist government in China turned soldiers into farmers arbitrarily assigning them to newly created farms around the country–including two farms in Northern Ningxia province that were nearly identical in temperature, rainfall and acreage but one of the firms lay slightly above the river and one slightly below the river making the latter more suitable for rice farming and the former for wheat. During the Cultural Revolution, youth were shipped off to the farms “with very little preparation or forethought”. Thus, the two farms ended up in similar environments with similar people but different modes of production.</p>
<p><img loading="lazy" decoding="async" src="https://marginalrevolution.com/wp-content/uploads/2024/04/rice-and-wheat-thinking.png" alt="" width="570" height="458" srcset="https://marginalrevolution.com/wp-content/uploads/2024/04/rice-and-wheat-thinking.png 916w, https://marginalrevolution.com/wp-content/uploads/2024/04/rice-and-wheat-thinking-300x241.png 300w, https://marginalrevolution.com/wp-content/uploads/2024/04/rice-and-wheat-thinking-768x617.png 768w" sizes="(max-width: 570px) 100vw, 570px">Talhelm and Dong measure thought style with a variety of simple experiments which have been shown in earlier work to be associated with collectivist and individualist thinking. When asked to draw circles representing themselves and friends or family, for example, people tend to self-inflate their own circle but they self-inflate more in individualist cultures.</p>
<p>The authors find that consistent with the differences across East and West and across rice and wheat areas in China, the people on the rice farm in Ningxia are more collectivistic in their thinking than the people on the wheat farm.</p>
<p>The differences are all in the same direction but somewhat moderated suggesting that the effects can be created quite quickly (a few generations) but become stronger the longer and more embedded they are in the wider culture.</p>
<p>I am reminded of an another <a href="https://www.pnas.org/doi/10.1073/pnas.1300431110">great paper</a>, this one by <span role="listitem">Leibbrandt,</span><span role="listitem">&nbsp;Gneezy</span>, and <span role="listitem">List (LGL) that I wrote about in <a href="https://marginalrevolution.com/marginalrevolution/2013/10/learning-to-compete-or-cooperate.html">Learning to Compete and Cooperate</a>. LGL look at two types of fishing villages in Brazil. The villages are close to one another but some of them are on the lake and some of them are on the sea coast. Lake fishing is individualistic but sea fishing requires a collective effort. LGL find that the lake fishermen are much more willing to engage in competition–perhaps having seen that individual effort pays off–than the sea fishermen for whom individual effort is much less efficacious. Unlike Talhelm and Dong, LGL don’t have random assignment, although I see no reason why the lake and sea fishermen should otherwise be different, but they do find that women, who neither lake nor sea fish, do not show the same differences. Thus, the differences seem to be tied quite closely to production learning rather than to broader culture.</span></p>
<p>How long does it take to imprint these styles of thinking? How long does it last? Is imprinting during child or young adulthood more effective than later imprinting? Can one find the same sorts of differences between athletes of different sports–e.g. rowing versus running? It’s telling, for example, that the only famous rowers I can think are the Winklevoss <em>twins. </em>Are attempts to inculcate these types of thinking successful on a more than surface level. I have difficulty believing that “you didn’t build that,” changes say relational versus holistic thinking but would styles of thinking change during a war?</p>

  </div><!-- /.entry-content -->
  <!-- /.entry-footer -->
</article><!-- /.post -->

















      </main> <!-- /#site-main -->

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Notepad++: Help us to take down the parasite website (323 pts)]]></title>
            <link>https://notepad-plus-plus.org/news/help-to-take-down-parasite-site/</link>
            <guid>39968761</guid>
            <pubDate>Mon, 08 Apr 2024 11:52:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://notepad-plus-plus.org/news/help-to-take-down-parasite-site/">https://notepad-plus-plus.org/news/help-to-take-down-parasite-site/</a>, See on <a href="https://news.ycombinator.com/item?id=39968761">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
    
    

<p>2024-04-03</p>

<p>I’ve received numerous complaints via email, social media, and forums regarding a website that poses a significant threat to our community. The site in question is <code>https://notepad.plus/</code> which appears prominently when users google for “download Notepad++”.</p>

<p><img src="https://notepad-plus-plus.org/assets/images/downloadNppGoogling.png"></p>

<p>Some users have mistakenly believed that <code>https://notepad.plus/</code> is the official Notepad++ website. This confusion has led to frustration and potential security risks.</p>

<p>Despite declaring itself an “<em>unofficial fan website created for general information/educational purposes only</em>”, this site harbors a hidden agenda. It is riddled with malicious advertisements on every page. These advertisements aim to deceive unsuspecting Notepad++ users into clicking on them, generating profits for the site owners.</p>

<p>The true purpose of <code>https://notepad.plus/</code> becomes evident when we recognize that it seeks to divert traffic away from the legitimate Notepad++ website, notepad-plus-plus.org. By doing so, it compromises user safety and undermines the integrity of our community.</p>

<h3 id="action-needed-report-the-parasite-site">Action Needed: Report the Parasite Site</h3>

<p>We urgently request your assistance in reporting this malicious website. By doing so, you contribute not only to the protection of the Notepad++ community but also to the preservation of a safe internet environment for all users.</p>

<p>Please use the following link to report <code>https://notepad.plus/</code> as a harmful site:<br>
<a href="https://safebrowsing.google.com/safebrowsing/report_badware/?hl=en" target="blank"><strong>Report malicious software</strong></a></p>

<p>Your vigilance matters. Let’s stand together to safeguard our community and maintain a secure online ecosystem.</p>

<p>Thank you for your prompt action.</p>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[KDE6 release: D-Bus and Polkit Galore (149 pts)]]></title>
            <link>https://security.opensuse.org/2024/04/02/kde6-dbus-polkit.html</link>
            <guid>39968384</guid>
            <pubDate>Mon, 08 Apr 2024 10:52:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://security.opensuse.org/2024/04/02/kde6-dbus-polkit.html">https://security.opensuse.org/2024/04/02/kde6-dbus-polkit.html</a>, See on <a href="https://news.ycombinator.com/item?id=39968384">Hacker News</a></p>
<div id="readability-page-1" class="page"><div aria-label="Content">
        <article itemscope="" itemtype="http://schema.org/BlogPosting">

  

  <div itemprop="articleBody">
    <h2 id="table-of-contents">Table of Contents</h2>

<ul id="markdown-toc">
  <li><a href="#introduction" id="markdown-toc-introduction">Introduction</a>    <ul>
      <li><a href="#d-bus-overview" id="markdown-toc-d-bus-overview">D-Bus Overview</a></li>
      <li><a href="#polkit-overview" id="markdown-toc-polkit-overview">Polkit Overview</a></li>
      <li><a href="#security-relevance-of-d-bus-and-polkit" id="markdown-toc-security-relevance-of-d-bus-and-polkit">Security Relevance of D-Bus and Polkit</a></li>
    </ul>
  </li>
  <li><a href="#the-kde-kauth-framework" id="markdown-toc-the-kde-kauth-framework">The KDE KAuth Framework</a>    <ul>
      <li><a href="#problematic-use-of-qvariantmap-serialized-data" id="markdown-toc-problematic-use-of-qvariantmap-serialized-data">Problematic use of QVariantMap Serialized Data</a></li>
      <li><a href="#problems-with-generated-d-bus-drop-in-configuration-snippets" id="markdown-toc-problems-with-generated-d-bus-drop-in-configuration-snippets">Problems with generated D-Bus drop-in Configuration Snippets</a></li>
    </ul>
  </li>
  <li><a href="#legacy-fontinst-d-bus-service" id="markdown-toc-legacy-fontinst-d-bus-service">Legacy fontinst D-Bus service</a>    <ul>
      <li><a href="#woes-with-unexpected-polkit-settings" id="markdown-toc-woes-with-unexpected-polkit-settings">Woes with “unexpected” Polkit Settings</a></li>
    </ul>
  </li>
  <li><a href="#problematic-file-system-operations-in-sddm-kcm6" id="markdown-toc-problematic-file-system-operations-in-sddm-kcm6">Problematic File System Operations in sddm-kcm6</a>    <ul>
      <li><a href="#unsafe-operations-on-file-system-paths-provided-by-the-unprivileged-d-bus-client" id="markdown-toc-unsafe-operations-on-file-system-paths-provided-by-the-unprivileged-d-bus-client">Unsafe Operations on File System Paths Provided by the Unprivileged D-Bus Client</a></li>
      <li><a href="#changes-in-configuration-files-owned-by-the-sddm-service-user" id="markdown-toc-changes-in-configuration-files-owned-by-the-sddm-service-user">Changes in configuration files owned by the <code>sddm</code> service user</a></li>
      <li><a href="#going-forward-from-here" id="markdown-toc-going-forward-from-here">Going Forward from Here</a></li>
    </ul>
  </li>
  <li><a href="#kwalletmanager-pseudo-authentication-to-protect-the-configuration" id="markdown-toc-kwalletmanager-pseudo-authentication-to-protect-the-configuration">KWalletManager: Pseudo-Authentication to Protect the Configuration</a></li>
  <li><a href="#improvements-in-drkonqi" id="markdown-toc-improvements-in-drkonqi">Improvements in DrKonqi</a></li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
  <li><a href="#references" id="markdown-toc-references">References</a></li>
  <li><a href="#change-history" id="markdown-toc-change-history">Change History</a></li>
</ul>

<h2 id="introduction">Introduction</h2>

<p>The SUSE security team restricts the installation of system wide D-Bus
services and Polkit policies in openSUSE distributions and derived SUSE
products. Any package that ships these features needs to be reviewed by us
first, before it can be added to production repositories.</p>

<p>In November, openSUSE KDE packagers approached us <a href="https://bugzilla.suse.com/show_bug.cgi?id=1217076">with a long list of KDE
components</a> for an upcoming KDE6 major release. The packages
needed adjusted D-Bus and Polkit whitelistings due to renamed interfaces or
other breaking changes. Looking into this many components at once was a unique
experience that also led to new insights, which will be discussed in this
article.</p>

<p>For readers that are new to D-Bus and/or Polkit, the following sections offer
a summary to get a better idea about these systems.</p>

<h2 id="d-bus-overview">D-Bus Overview</h2>

<p>The <a href="https://www.freedesktop.org/wiki/Software/dbus/">D-Bus message bus system</a> provides a defined way to implement
remote procedure calls in applications. On Linux it is usually only used
locally, although the D-Bus specification also allows for operation over the
network.</p>

<p>A D-Bus service is a program that provides one or more interfaces that can be
invoked by clients to obtain information, trigger operations and so on. The
D-Bus specification defines a set of data types that can be passed to and
returned from D-Bus method calls.</p>

<p>D-Bus applications reach each other by connecting to a shared bus of which
there exist two predefined types: the system bus and the session bus. Services
that perform system wide tasks connect to the system bus. These services often
run as <code>root</code> or as dedicated service users. A session bus, on the other hand,
is created for each (graphical) user session, and only applications running
with the privileges of the logged-in user can connect to it. No special
privileges are involved with the session bus. Its main purpose is to provide a
defined API for session wide services, like a desktop search engine.</p>

<h2 id="polkit-overview">Polkit Overview</h2>

<p><a href="https://www.freedesktop.org/software/polkit/docs/latest/polkit.8.html">Polkit</a> is an authorization framework that allows (privileged)
applications to decide whether a user in the system is allowed to perform a
specific action. These actions allow for a more fine-grained authorization
model when compared to a plain <code>root</code> vs. non-<code>root</code> decision. Examples could be
an action to enable a Bluetooth device in the system, or to mount a removable
storage device.</p>

<p>A Polkit policy configuration file declares actions used by a certain
application domain and the authentication requirements for it. When an actor
in the system asks an application that uses Polkit to perform an action, then
this application in turns asks the system-wide Polkit daemon whether this
actor is privileged to do so. Depending on the context this can, for example,
lead to a password prompt being displayed in a user’s graphical session to
authorize the operation.</p>

<p>Polkit is independent of D-Bus, but the combination of both is a very common
pattern. Other manners in which Polkit can be used is in setuid-root binaries
or via the sudo-like <code>pkexec</code> utility.</p>

<h2 id="security-relevance-of-d-bus-and-polkit">Security Relevance of D-Bus and Polkit</h2>

<p>The typical setup of D-Bus and Polkit is as follows: a system daemon is
running with full root privileges and registers a service on the D-Bus system
bus. An unprivileged user that is logged into a graphical session asks the
daemon via D-Bus to perform an activity. This triggers the Polkit
authentication process to determine whether the caller is allowed to do this.</p>

<p>Security-wise, there is quite a number of things that can go wrong in this
scenario. The following sections investigate typical issues that can arise.</p>

<h3 id="covering-all-privileged-code-paths">Covering all Privileged Code Paths</h3>

<p>The system daemon actually needs to implement the Polkit authorization check
properly for every sensitive D-Bus method it offers. Polkit is not something
that is magically turned on, but the privileged component needs to identify
all the code paths that need to be protected by it.</p>

<p>Some applications deliberately offer a mix of unauthenticated and
authenticated D-Bus methods. In these cases it can sometimes be hard to keep
all the possible side effects and outcomes in mind, which can lead to security
issues when something is overlooked.</p>

<h3 id="acting-as-root-on-behalf-of-unprivileged-users">Acting as root on Behalf of Unprivileged Users</h3>

<p>The privileged D-Bus service component often needs to act on behalf of an
unprivileged client. An example could be mounting a file system in the
caller’s home directory, or processing a file provided by the caller. This is
a classic crossing of privilege boundaries. Developers of such services are
often not aware of the problems that can arise, especially when accessing user
controlled paths as <code>root</code>.</p>

<p>Similarly, if a privileged D-Bus service stores data from multiple users in a
shared system directory, then information leaks can occur by storing files with
too open permissions, or by mixing up different user contexts.</p>

<h3 id="the-integration-of-polkit-can-be-hard">The Integration of Polkit can be Hard</h3>

<p>Polkit has its own nomenclature and design principles that one needs to get
into, to fully understand it. Apart from this, even if Polkit is correctly
asked for permissions, the privileged service still needs to correctly
evaluate the result. A typical mistake that can happen in this area is when a
privileged service <em>does</em> ask Polkit correctly for authentication, but the
result is simply ignored and the privileged operation continues regardless.</p>

<h3 id="everybody-can-access-the-d-bus-system-bus">Everybody can Access the D-Bus System Bus</h3>

<p>By default, all local users can access the D-Bus system bus and talk to most
of the privileged services. Individual D-Bus service configuration files can
limit the scope of users that are allowed to invoke a D-Bus service’s methods.
This setup is the exception, however, as the majority of D-Bus services is
accessible to all users.</p>

<p>This increases the attack surface notably, as not only an interactive user
account that is running an authorized local session can talk to these
services, but also e.g. the <code>nobody</code> user account. These days, many system
daemons running on the network only have limited privileges or even use
dynamically allocated users provided by systemd. If one of these network
daemons with low privileges can be exploited, then weaknesses in privileged
D-Bus system services can offer the possibility to further escalate
privileges.</p>

<p>This is one of the reasons why, as part of a defense-in-depth strategy, the
SUSE security team looks closely also into these components that aren’t
directly attached to the network.</p>

<h2 id="the-kde-kauth-framework">The KDE KAuth Framework</h2>

<p>The KDE desktop environment is a heavy user of D-Bus services both on the
system and on the session bus. It adds further abstractions on top of D-Bus
and on top of Polkit. The base component for this is the <a href="https://api.kde.org/frameworks/kauth/html/">KAuth
framework</a>. KAuth generates D-Bus configuration files and some
glue code to integrate D-Bus and Polkit into KDE applications. In KAuth, a
privileged D-Bus service running as <code>root</code> is called a KAuth helper.</p>

<p>We performed a <a href="https://bugzilla.suse.com/show_bug.cgi?id=1217178">dedicated follow-up review</a> of it for the KDE6
release. A former member of the SUSE security team had found <a href="https://bugzilla.suse.com/show_bug.cgi?id=1036244">a major security
flaw</a> in this glue code in 2017. Since the audit at the time was
comprehensive, we did not expect to find any major issues in the core
authorization logic anymore, and in fact we didn’t.</p>

<h2 id="problematic-use-of-qvariantmap-serialized-data">Problematic use of QVariantMap Serialized Data</h2>

<p>A peculiarity of KAuth is that, instead of the native D-Bus data types, only
binary blob objects are transferred on D-Bus level, that are based on the
<code>QVariantMap</code> data type offered by the Qt framework.</p>

<p>During the review we noticed that the implementation of this feature in KAuth
<a href="https://invent.kde.org/frameworks/kauth/-/blob/4e94f01d3a191861c8095f673d70291dc225f23e/src/backends/dbus/DBusHelperProxy.cpp#L218">is a bit shaky</a>, since potentially attacker controlled data
is processed during Qt data type deserialization, before the actual D-Bus
function callbacks are even invoked. In 2019, the upstream authors
<a href="https://invent.kde.org/frameworks/kauth/-/commit/fc70fb0161c1b9144d26389434d34dd135cd3f4a">had already identified this problem</a>, that can lead
to side effects like image data being deserialized, where actually only
strings and integers are expected. The KAuth code currently meddles with
internal Qt framework state to prevent such side effects.</p>

<h2 id="problems-with-generated-d-bus-drop-in-configuration-snippets">Problems with generated D-Bus drop-in Configuration Snippets</h2>

<p>Only late in our review efforts we realized that a change introduced with the
KDE6 release of KAuth leads to <a href="https://bugzilla.suse.com/show_bug.cgi?id=1220215">overly open D-Bus configuration files being
generated</a>. Per-package configuration snippets for
D-Bus are installed in “/usr/share/dbus-1/system.d”. These configuration files
serve as a kind of firewall configuration for the D-Bus system bus. They
define who is allowed to register a D-Bus service for a certain interface and
also who is allowed to talk to it.</p>

<p>Here is a proper example taken from systemd-network’s “org.freedesktop.network1.conf”:</p>

<div><pre><code>&lt;busconfig&gt;
        &lt;policy user="systemd-network"&gt;
                &lt;allow own="org.freedesktop.network1"/&gt;
        &lt;/policy&gt;

        &lt;policy context="default"&gt;
                &lt;allow send_destination="org.freedesktop.network1"/&gt;
                &lt;allow receive_sender="org.freedesktop.network1"/&gt;
        &lt;/policy&gt;
&lt;/busconfig&gt;
</code></pre></div>

<p>This allows only the dedicated service user “systemd-network” to register the
D-Bus interface “org.freedesktop.network1”, while any other users in the
system may talk to it.</p>

<p>The KAuth KDE6 release candidate generated this configuration instead:</p>

<div><pre><code>&lt;policy context="default"&gt;
  &lt;allow send_destination="*"/&gt;
&lt;/policy&gt;
</code></pre></div>

<p>The ramifications of this can easily be overlooked: this states that everybody
is allowed to talk to everything on the D-Bus system bus. It also affects
other D-Bus services that should not be influenced by the drop-in
configuration snippet shipped for individual KDE packages. While most D-Bus
services running on the system bus are “public”, i.e. everybody is allowed to
talk to them, some services follow a different security model in which only
dedicated users are allowed to interact with the service. We identified 
<a href="https://github.com/libratbag/libratbag/blob/v0.17/ratbagd/org.freedesktop.ratbag1.conf">ratbagd</a> as one such D-Bus service that would be
negatively affected by this defect in KAuth. This shows that the security
posture of unrelated packages is at stake. Luckily we identified this
issue in time before the KDE6 release was finished, and the issue was fixed
before it reached production systems. We also checked any non-KDE D-Bus
configuration files we ship on openSUSE Tumbleweed for the same issue, but
luckily found no further files containing this issue.</p>

<p>These side effects are also in some sense shortcomings of the D-Bus
configuration scheme, since developers of a specific D-Bus service don’t
expect that their configuration file has a global influence. A similar issue
exists for <a href="https://bugzilla.suse.com/show_bug.cgi?id=1180525">logrotate</a> where settings in drop-in
configuration files in “/etc/logrotate.d” can influence global settings that
affect the complete system. This can lead to hard to find bugs in both cases,
D-Bus and logrotate, because the outcome also depends on the order in which
the configuration file snippets are parsed.</p>

<h2 id="legacy-fontinst-d-bus-service">Legacy fontinst D-Bus service</h2>

<p>Most of the KDE components that we have been requested to look into for the
KDE6 release had already been reviewed by us in recent years. A few of them
are legacy packages though, since they were already in stock when we
introduced packaging restrictions for D-Bus and Polkit. At the time we didn’t
have enough resources to check all of them in one go.</p>

<p>One such legacy component <a href="https://bugzilla.suse.com/show_bug.cgi?id=1217186">we encountered</a> while looking into
the KDE6 release was the “org.kde.fontinst.service” which is part of the
“plasma6-workspace” package. What we found there is a single D-Bus method
“org.kde.fontinst.manage” that actually multiplexes a whole range of
sub-methods, based on a “method” string input parameter. This is bad design
since it undermines the D-Bus protocol, and thus makes the individual method
calls less visible and less manageable. This is reinforced by the fact that
also only a single Polkit action is used to authenticate all the sub-methods.
This way there is only an all-or-nothing setting for the various code paths
that are hidden behind this single D-Bus method call.</p>

<p>The available sub-methods in this service nearly make up a generic file system
I/O layer, especially when we remember that this service is running with full
root privileges:</p>

<ul>
  <li>install: this can be used to copy arbitrary file paths to arbitrary
locations, the new files end up with mode 0644.</li>
  <li>uninstall: this allows to remove arbitrary file paths, as long as their
parent directories have a writable bit set.</li>
  <li>move: this allows to move arbitrary paths complete with new owner uid and
group gid to arbitrary new locations.</li>
  <li>toggle: this takes raw XML that also seems to specify font paths that are
to be enabled or disabled.</li>
  <li>removeFile: does what is says on the label; another way to remove files.</li>
  <li>configure: saves modified font directories and invokes a small bash script
<code>fontinst_x11</code> that prepares font directories and triggers a font refresh at
the X server.</li>
</ul>

<p>The core business logic of the fontinst service should be managing system wide
fonts provided in the system. To achieve this, ideally only the necessary high
level logical operations should be offered like: Install a font from provided
data, remove a system font by name. Copying, removing and moving arbitrary
files is way outside of the scope of what this service is supposed to do.</p>

<p>The single Polkit action “org.kde.fontinst.manage” requires <code>auth_admin_keep</code>
authorization by default i.e. anybody that wants to invoke this method needs
to provide admin credentials. Still, if an admin decides to lower these
requirements, because users should be able to e.g. install new fonts in the
system, then this interface does not only allow that, but also allows to gain
full root privileges by copying arbitrary files around (e.g. by creating a new
“/etc/shadow” file).</p>

<p>This service requires a larger redesign. KDE upstream was not able to come up
with that in time for the KDE6 release. We hope that it will still happen
though, as the API is in a rather worrying state.</p>

<h2 id="woes-with-unexpected-polkit-settings">Woes with “unexpected” Polkit Settings</h2>

<p>The situation in the fontinst service regarding the <code>auth_admin</code> setting is a
common pattern that we see when reviewing D-Bus services and Polkit actions.
Developers believe that requiring <code>auth_admin</code> authentication for a Polkit
action is enough to justify overly generic APIs or unsafe file system
operations carried out as <code>root</code>. In some cases it might be justifiable to say
that an action should never have weaker authentication requirements than
<code>auth_admin</code>, since it otherwise causes uncontrollable security issues. One
should not forget that Polkit is a <em>configurable</em> authentication framework,
though. There are default settings shipped by applications, but system
integrators and admins are allowed to change these requirements.</p>

<p>The (open)SUSE Linux distributions are the only ones we know of, that offer a
<a href="https://en.opensuse.org/openSUSE:Security_Documentation#Configuration_of_Polkit_Settings">defined mechanism</a> for admins to override the
Polkit defaults for individual actions via profiles and overrides. This works
via the <a href="https://github.com/openSUSE/polkit-default-privs">polkit-default-privs</a> package. Our experience
with this shows that upstream developers mostly neither consider the security
consequences of lowering the Polkit authentication requirements, nor test what
happens when the authentication requirements are raised for hardening
purposes. Raised authentication requirements lead to additional password
prompts, and some applications implement workflows involving Polkit actions
that lead to very unfortunate behaviour in such cases.</p>

<p>A common example of this is a package manager like Flatpak, that attempts to
acquire Polkit authentication for a repository refresh action upon login into
a graphical session. The developers only test this with the default <code>yes</code>
Polkit authentication requirement, which makes this authentication process
invisible to users. When raising this to <code>auth_admin</code>, then suddenly a password
prompt pops up during login and users are confused and annoyed. There are ways
to deal with this: for example, services using Polkit can ask it whether an
action can be authorized without user interaction. If this is not the case,
then a package manager could choose <em>not</em> to refresh repositories just now.
Also multiple actions can be authenticated in groups using the
“org.freedesktop.policykit.imply” annotation to avoid multiple password
prompts coming up for a single workflow.</p>

<p>It is understandable that the configuration management of many different
Polkit configurations is hard to test for upstream developers. Increased
awareness of the general problems in this area would help to avoid these
issues in the first place. It seems that developers just want to “cram in”
authentication into their software, though, and stop thinking about it once
they’re done. Granted, Polkit and D-Bus are far from simple when you’re new to
them. Still, every authentication procedure should be given careful thought.
The take home lessons for developers implementing Polkit should be:</p>

<ul>
  <li>Polkit is a <em>configurable</em> authentication framework and the settings
intended by developers might not be what actually happens during runtime.</li>
  <li>When modelling Polkit actions, one should take advantage of the possibility
to make them fine grained, to allow users to fine tune the requirements for
individual activities.</li>
  <li>Each Polkit authorization that happens in an application should be given
some thought in both directions: what happens if the authentication
requirement is lowered and what happens if it is raised?</li>
  <li>Another aspect that hasn’t been discussed yet is the topic of authentication
messages shown to the user. They should clearly state what exactly is being
authorized in a form that non-technical users can understand. Polkit also
supports placeholders in messages to fill in runtime information, like a file
that is being operated on. Sadly, this feature is used very rarely in
practice.</li>
</ul>

<h2 id="problematic-file-system-operations-in-sddm-kcm6">Problematic File System Operations in sddm-kcm6</h2>

<p>This component is a KDE Configuration Module (KCM) for the SDDM display
manager. It contains a D-Bus service “org.kde.kcontrol.kcmsddm.conf”. We
reviewed it already in the past and <a href="https://bugzilla.suse.com/show_bug.cgi?id=1217188">did so again</a> for the
KDE6 release. The service has two major problems, discussed in the following
sections.</p>

<h2 id="unsafe-operations-on-file-system-paths-provided-by-the-unprivileged-d-bus-client">Unsafe Operations on File System Paths Provided by the Unprivileged D-Bus Client</h2>

<p>Multiple of the D-Bus methods provided by the sddm-kcm6 KAuth helper expect
file system paths as input parameters. Such passing of paths to privileged
D-Bus services is another problematic pattern that is often encountered. In
the <a href="https://invent.kde.org/plasma/sddm-kcm/-/blob/Plasma/6.0/sddmauthhelper.cpp?ref_type=heads#L30"><code>openConfig()</code></a> function, the provided path to a <a href="https://invent.kde.org/plasma/sddm-kcm/-/blob/Plasma/6.0/sddmauthhelper.cpp?ref_type=heads#L280">SDDM
theme configuration file</a> will be created by the helper, if
necessary.  If it already exists, then a <code>chmod()</code> of the path to mode <code>0600</code>
is performed, which is also following symlinks. To see how this can be
problematic, consider what happens if “/etc/shadow” is passed as theme
configuration path.</p>

<p>Operating as <code>root</code>, on files that are under control of an unprivileged user, is
notoriously hard to get right, and requires careful use of lower level system
calls. Often developers aren’t even aware of this problem. KDE components have
had a number of problems in this area in the past. We believe this has
deeper roots, namely in the design of the Qt framework’s file system API, which
on the one hand doesn’t allow full control over the lower level system calls
(owed to the fact that Qt is also a platform abstraction layer), and on the
other hand does not document exactly what can be expected of its APIs
in this regard. Furthermore the Qt framework itself isn’t aware of the fact
that it runs as root, possibly operating on files owned by other users. The Qt
libraries are designed for implementing feature rich GUI applications and
don’t really consider handling untrusted input, operating with raised
privileges and crossing privilege boundaries.</p>

<p>An elegant way to avoid the path access issue in the first place is by not
passing file paths, but already opened file descriptors over D-Bus. This is
possible since D-Bus uses UNIX domain sockets internally, and they can be used
to pass file descriptors. So instead of passing a string from client to
service suggesting “Open this file, trust me, it’s fine”, the client passes a
file descriptor, opened using its own low privileges, to the privileged
service. With this, many path access issues are gone in an instant. There
are cases that still require care, however, for example if recursive file
system operations need to be carried out.</p>

<p>Unfortunately the KAuth framework used by KDE <a href="https://invent.kde.org/frameworks/kauth/-/issues/3#note_826581">shows a limitation in
this area</a>. Since the KAuth helper’s D-Bus API only
transfers binary blobs that result from serializing <code>QVariantMap</code>, there
is currently no possibility to pass an open file descriptor.</p>

<h2 id="changes-in-configuration-files-owned-by-the-sddm-service-user">Changes in configuration files owned by the <code>sddm</code> service user</h2>

<p>The other problem is not found in the D-Bus API, but in the implementation of
the <code>sync()</code> and <code>reset()</code> D-Bus methods. Once any input parameters from the
client are processed, the helper operates in the home directory belonging to
the <code>sddm</code> service user. Here is some condensed code taken from the reset()
and sync() functions:</p>

<div><pre><code>// from SddmAuthHelper::reset()
QString sddmHomeDirPath = KUser("sddm").homeDir();
QDir sddmConfigLocation(sddmHomeDirPath + QStringLiteral("/.config"));
QFile::remove(sddmConfigLocation.path() + QStringLiteral("/kdeglobals"));
QFile::remove(sddmConfigLocation.path() + QStringLiteral("/plasmarc"));
QDir(sddmHomeDirPath + "/.local/share/kscreen/").removeRecursively();
</code></pre></div>

<div><pre><code>// from SddmAuthHelper::sync()
QString sddmHomeDirPath = KUser("sddm").homeDir();

QDir sddmCacheLocation(sddmHomeDirPath + QStringLiteral("/.cache"));
if (sddmCacheLocation.exists()) {
    sddmCacheLocation.removeRecursively();
}

QDir sddmConfigLocation(sddmHomeDirPath + QStringLiteral("/.config"));

if (!args[QStringLiteral("kscreen-config")].isNull()) {
    const QString destinationDir = sddmHomeDirPath + "/.local/share/kscreen/";
    QSet&lt;QString&gt; done;
    copyDirectoryRecursively(args[QStringLiteral("kscreen-config")].toString(), destinationDir, done);
}
</code></pre></div>

<p>A compromised <code>sddm</code> service user can exploit these operations to its advantage:</p>

<ul>
  <li>it can cause a denial-of-service by e.g. placing directory symlinks
to have the D-Bus service operate in completely different file system
locations. This attack is limited though, since the final path components
used in removal calls need to match, like <code>kscreen</code>.</li>
  <li>it can cause the “kscreen-config” to be copied to arbitrary locations by
placing a symlink in “~/.local/share/kscreen”.</li>
</ul>

<p>To make these operations safe, it would be best to temporarily drop privileges
to the <code>sddm</code> user.</p>

<h2 id="going-forward-from-here">Going Forward from Here</h2>

<p>KDE upstream was not able to come up with a redesign of this D-Bus service in
time for the KDE6 release. In this instance, the unsafe operations in the <code>sddm</code>
user’s home directory would formally even justify assignment of a CVE. Since
all the D-Bus methods are guarded by <code>auth_admin</code> Polkit authentication
requirements, the issues can at least not be exploited in default installations.</p>

<h2 id="kwalletmanager-pseudo-authentication-to-protect-the-configuration">KWalletManager: Pseudo-Authentication to Protect the Configuration</h2>

<p>KWalletManager is KDE’s password manager. It features a GUI and, as one would
expect, runs in the context of the graphical user session of a logged-in user.
It ships a “savehelper” service that offers a single D-Bus method
“org.kde.kcontrol.kcmkwallet5.save”. So what does a service helper running as
<code>root</code> need to save here? Let’s look <a href="https://invent.kde.org/utilities/kwalletmanager/-/blob/master/src/konfigurator/savehelper.cpp">at the implementation</a>:</p>

<div><pre><code>ActionReply SaveHelper::save(const QVariantMap &amp;args)
{
    Q_UNUSED(args);
    const qint64 uid = QCoreApplication::applicationPid();
    qDebug() &lt;&lt; "executing uid=" &lt;&lt; uid;
    return ActionReply::SuccessReply();
}
</code></pre></div>

<p>Turning this piece of code carefully to all sides will lead to the insight
that it does <em>nothing</em>. We <a href="https://invent.kde.org/utilities/kwalletmanager/-/issues/4">asked upstream</a> to remove
this unused helper, but we’ve been told that this is not a mistake, but on
purpose. They want to protect against the following attack scenario: a user
leaves their computer alone and unlocked, a random person gets by and, of all
things, wants to change KWalletManager’s settings. To prevent this from
happening, the GUI is asking the service helper to authenticate the action
requiring Polkit’s <code>auth_self</code> authorization, and doesn’t continue if this
fails.</p>

<p>This cannot stop a real attacker, though, since the KWalletManager
configuration is stored in the unprivileged user’s home directory and can
still be edited directly, or using a modified version of KWalletManager that
simply does not ask for this authentication. Not to talk about <em>all the other
things</em> that an attacker could do in such a situation. So where should one
draw a line to stop? We don’t even see this as a hardening, it is fake security
and confusing. If such a fake authentication is really needed then at least a
way should be found to implement it, without requiring an authentication helper
running as <code>root</code> that does nothing. Upstream seems to disagree, but we asked our
packagers to remove this logic from our packaging via patches.</p>

<h2 id="improvements-in-drkonqi">Improvements in DrKonqi</h2>

<p>DrKonqi is KDE’s crash handling utility. These days, it interacts with
systemd-coredump to access core dumps of applications. Our <a href="https://bugzilla.suse.com/show_bug.cgi?id=1203493">previous 2022
review</a> of it led to <a href="https://www.openwall.com/lists/oss-security/2022/12/21/3">a finding in
systemd-coredump itself</a>. In the meantime DrKonqi
obtained additional D-Bus service logic to copy a private core dump (e.g. from
a process that was running as <code>root</code>) into the session of an unprivileged user
for analysis.</p>

<p>The <a href="https://invent.kde.org/plasma/drkonqi/-/blob/Plasma/6.0/src/coredump/polkit/main.cpp?ref_type=heads#L34">implementation of this</a> is unusual for a KDE component
in so far as it doesn’t rely on KAuth: it directly uses the Qt framework’s D-Bus
and Polkit facilities. The likely reason for this is the shortcoming of KAuth
with regard to passing file descriptors, as discussed above. The single
<code>excavateFromToDirFd()</code> D-Bus method actually accepts a file descriptor.
It is supposed to be a file descriptor referring to a directory under control
of the unprivileged caller, where the selected core dump is to be copied to.
Even though this means that DrKonqi cannot benefit from the common framework
features of KAuth, it is security-wise a good example of how to improve the
robustness of a D-Bus service running as <code>root</code> and operating in the file
system.</p>

<p>Unfortunately, even with file descriptors issues can arise, as this example
also shows. The permission handling for directories is different from regular
files. Directories generally can only be opened in read-only mode
(<code>O_RDONLY</code>). Write permissions are only checked at the time a write attempt
is made, like when calling <code>renameat()</code> in the case of the DrKonqi helper.
This is too late. The unprivileged caller can open just any directory it has
read access for and pass it to the D-Bus service. The D-Bus service running as
<code>root</code> will now happily create new files in the directory even if the caller
doesn’t have any write permissions for it.</p>

<p>There is a <a href="https://bugzilla.suse.com/show_bug.cgi?id=1220190#c6">constructive discussion</a> discussion going on
with upstream that led to various improvements in detail in this D-Bus service
<a href="https://invent.kde.org/plasma/drkonqi/-/merge_requests/217">that are about to be merged</a>. The issue with the dir file
descriptor was only found late in the process, but hopefully a solution for
the problem will be found soon.</p>

<h2 id="conclusion">Conclusion</h2>

<p>D-Bus and Polkit have their share of complexities that need to be understood
and managed well. This is important as a defense in depth measure even beyond
the local security of a Linux system. Putting additional layers on top, like in
the KAuth framework, can cause long-term problems, as can be seen from the lack
of support for passing file descriptors with the current KAuth API.</p>

<p>It was helpful that our KDE packagers and upstream approached us early about
the KDE6 release candidate and the changes it introduces. In some areas, like
the badly generated D-Bus KAuth configuration files, upstream quickly reacted
and applied fixes, thus avoiding that the problematic code was ever released
in a production version of KDE6. In other areas, like the legacy fontinst
D-Bus service or the sddm-kcm D-Bus service, the complexity of fixing API
issues has obviously been too high for upstream to come up with something
better in time. We decided not to ask for CVE assignments for the findings in
these services, since the attack vectors are not reachable to regular users in
the default Polkit configuration.</p>

<p>By now most KDE6 packages should have reached openSUSE Tumbleweed and can be
used in production.</p>

<h2 id="references">References</h2>

<ul>
  <li><a href="https://www.freedesktop.org/wiki/Software/dbus/">D-Bus Project Page</a></li>
  <li><a href="https://www.freedesktop.org/software/polkit/docs/latest/polkit.8.html">Polkit Manual</a></li>
  <li><a href="https://api.kde.org/frameworks/kauth/html/">KDE KAuth Framework Documentation</a></li>
</ul>

<h2 id="change-history">Change History</h2>

<table>
  <tbody>
    <tr>
      <td>2024-04-05</td>
      <td>Minor spelling fixes; inserted an introductory paragraph to <a href="#unsafe-operations-on-file-system-paths-provided-by-the-unprivileged-d-bus-client">Unsafe Operations in sddm-kcm6</a>.</td>
    </tr>
  </tbody>
</table>


  </div>
</article>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How engineers at Digital Equipment Corp. saved Ethernet (123 pts)]]></title>
            <link>https://spectrum.ieee.org/how-dec-engineers-saved-ethernet</link>
            <guid>39968382</guid>
            <pubDate>Mon, 08 Apr 2024 10:52:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://spectrum.ieee.org/how-dec-engineers-saved-ethernet">https://spectrum.ieee.org/how-dec-engineers-saved-ethernet</a>, See on <a href="https://news.ycombinator.com/item?id=39968382">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-headline="How Engineers at Digital Equipment Corp. Saved Ethernet" data-elid="2667704182" data-post-url="https://spectrum.ieee.org/how-dec-engineers-saved-ethernet" data-authors="Alan Kirby" data-page-title="How Engineers at Digital Equipment Corp. Saved Ethernet - IEEE Spectrum"><p>I’ve enjoyed reading magazine articles about Ethernet’s 50th anniversary, including one in the <a href="https://spectrum.ieee.org/ethernet-ieee-milestone" target="_self"><em>The Institute</em></a>. Invented by computer scientists <a href="https://ethw.org/Robert_M._Metcalfe" rel="noopener noreferrer" target="_blank">Robert Metcalfe</a> and <a href="https://ethw.org/David_Boggs" rel="noopener noreferrer" target="_blank">David Boggs</a>, Ethernet has been extraordinarily impactful. Metcalfe, an IEEE Fellow, received the 1996 <a href="https://corporate-awards.ieee.org/recipients/ieee-medal-of-honor-recipients/" rel="noopener noreferrer" target="_blank">IEEE Medal of Honor</a> as well as the 2022 <a href="https://amturing.acm.org/" rel="noopener noreferrer" target="_blank">Turing Award</a> from the <a href="https://www.acm.org/" rel="noopener noreferrer" target="_blank">Association for Computing Machinery</a> for his work. But there is more to the story that is not widely known.</p><p>During the 1980s and early 1990s, I led <a href="https://en.wikipedia.org/wiki/Digital_Equipment_Corporation" rel="noopener noreferrer" target="_blank">Digital Equipment Corp.</a>’s networking advanced development group in Massachusetts. I was a firsthand witness in what was a period of great opportunity for LAN technologies and intense competition between standardization efforts.</p><p>DEC, <a href="https://www.google.com/aclk?sa=l&amp;ai=DChcSEwi2hOvzgu-EAxWZH60GHXwkAToYABAAGgJwdg&amp;ase=2&amp;gclid=Cj0KCQjw-r-vBhC-ARIsAGgUO2DU3b9FN2WnvoVFOiwwrcDDz5q7PPS2MiSG6DRs-u-xJc9j5_yBWkcaAn2LEALw_wcB&amp;ei=dHLwZY3bOdDB0PEP7_WwiAU&amp;sig=AOD64_3OM2YVYFwaHUS5T6_5SPLa3qL80Q&amp;q&amp;sqi=2&amp;nis=4&amp;adurl&amp;ved=2ahUKEwiN5ePzgu-EAxXQIDQIHe86DFEQ0Qx6BAgIEAE" rel="noopener noreferrer" target="_blank">Intel</a>, and <a href="https://www.xerox.com/en-us/about" rel="noopener noreferrer" target="_blank">Xerox</a> poised themselves to profit from Ethernet’s launch in the 1970s. But during the 1980s other LAN technologies emerged as competitors. Prime contenders included the <a href="https://www.geeksforgeeks.org/efficiency-of-token-ring/" rel="noopener noreferrer" target="_blank">token ring</a>, promoted by <a href="https://www.ibm.com/about" rel="noopener noreferrer" target="_blank">IBM</a>, and the <a href="https://www.sciencedirect.com/topics/computer-science/token-bus" rel="noopener noreferrer" target="_blank">token bus</a>. (Today Ethernet and both token-based technologies are part of the <a href="https://www.ieee802.org/" rel="noopener noreferrer" target="_blank">IEEE 802</a> family of standards.)</p><p>All those LANs have some basic parts in common. One is the 48-bit media access control (MAC) address, a unique number assigned during a computer’s network port manufacturing process. The MAC addresses are used inside the LAN only, but they are critical to its operation. And usually, along with the general-purpose computers on the network, they have at least one special-purpose computer: a router, whose main job is to send data to—and receive it from—the Internet on behalf of all the other computers on the LAN.</p><p>In a decades-old conceptual model of networking, the LAN itself (the wires and low-level hardware) is referred to as Layer 2, or the data link layer. Routers mostly deal with another kind of address: a network address that is used both within the LAN and outside it. Many readers likely have heard the terms <em>Internet Protocol</em> and <em>IP address</em>. With some exceptions, the IP address (a network address) in a data packet is sufficient to ensure that packet can be delivered anywhere on the Internet by a sequence of other routers operated by service providers and carriers. Routers and the operations they perform are referred to as Layer 3, or the network layer.</p><p>In a token ring LAN, shielded twisted-pair copper wires connect each computer to its upstream and downstream neighbors in an endless ring structure. Each computer forwards data from its upstream neighbor to its downstream one but can send its own data to the network only after it receives a short data packet—a token—from the upstream neighbor. If it has no data to transmit, it just passes the token to its downstream neighbor, and so on.</p><p>In a token bus LAN, a coaxial cable connects all the network’s computers, but the wiring doesn’t control the order in which the computers pass the token. The computers agree on the sequence in which they pass the token, forming an endless virtual ring around which data and tokens circulate.</p><p>Ethernet, meanwhile, had become synonymous with coaxial cable connections that used a method called <em>carrier sense multiple access with collision detection</em> for managing transmissions. In the CSMA/CD method, computers that want to transmit a data packet first listen to see if another computer is transmitting. If not, the computer sends its packet while listening to determine whether that packet collides with one from another computer. Collisions can happen because signal propagation between computers is not instantaneous. In the case of a collision, the sending computer resends its packet with a delay that has both a random component and an exponentially increasing component that depends on the number of collisions.</p><p>The need to detect collisions involves tradeoffs among data rate, physical length, and minimum packet size. Increasing the data rate by an order of magnitude means either reducing the physical length or increasing the minimum packet size by roughly the same factor. The designers of Ethernet had wisely chosen a sweet spot among the tradeoffs: 10 megabits per second and a length of 1,500 meters. </p><h2>A threat from fiber</h2><p>Meanwhile, a coalition of companies—including my employer, DEC—was developing a new ANSI LAN standard: the <a href="https://www.techtarget.com/searchnetworking/definition/FDDI" rel="noopener noreferrer" target="_blank">Fiber Distributed Data Interface</a>. The FDDI approach used a variation of the token bus protocol to transmit data over optical fiber, promising speeds of 100 Mb/s, far faster than Ethernet’s 10 Mb/s.</p><p>A barrage of technical publications released analyses of the throughputs and latencies of competing LAN technologies under various workloads. Given the results and the much greater network performance demands expected from speedier processors, RAM, and nonvolatile storage, Ethernet’s limited performance was a serious problem.</p><p>FDDI seemed a better bet for creating higher speed LANs than Ethernet, although FDDI used expensive components and complex technology, especially for fault recovery. But all shared media access protocols had one or more unattractive features or performance limitations, thanks to the complexity involved in sharing a wire or optical fiber.</p><h2>A solution emerges</h2><p>I thought that a better approach than either FDDI or a faster version of Ethernet would be to develop a LAN technology that performed store-and-forward switching.</p><p>One evening in 1983, just before leaving work to go home, I visited the office of <a href="https://www.linkedin.com/in/mark-kempf-4a2668b7" rel="noopener noreferrer" target="_blank">Mark Kempf</a>, a principal engineer and a member of my team. Mark, one of the best engineers I have ever worked with, had designed the popular and profitable DECServer 100 terminal server, which used the local-area transport (LAT) protocol created by Bruce Mann from DEC’s corporate architecture group. Terminal servers connect groups of dumb terminals, with only RS-232 serial ports, to computer systems with Ethernet ports.</p><p>I told Mark about my idea of using store-and-forward switching to increase LAN performance.</p><p>The next morning he came in with an idea for a learning bridge (also known as a Layer 2 switch or simply a switch). The bridge would connect to two Ethernet LANs. By listening to all traffic on each LAN, the device would learn the MAC addresses of the computers on both Ethernets (remembering which computer was on which Ethernet) and then selectively forward the appropriate packets between the LANs based upon the destination MAC address. The computers on the two networks didn’t need to know which path their data would take on the extended LAN; to them, the bridge was invisible.</p><p>The bridge would need to receive and process some 30,000 packets per second (15,000 pp/s per Ethernet) and decide whether to forward each one. Although the 30,000 pp/s requirement was near the limit of what could be done using the best microprocessor technology of the time, the Motorola 68000, Mark was confident he could build a two-Ethernet bridge using only off-the-shelf components including a specialized hardware engine he would design using programmable array logic (PAL) devices and dedicated static RAM to look up the 48-bit MAC addresses.</p><p>Mark’s contributions have not been widely recognized. One exception is the textbook <a href="https://www.amazon.com/Network-Algorithmics-Interdisciplinary-Designing-Networking/dp/0120884771" rel="noopener noreferrer" target="_blank"><em>Network Algorithmics</em></a> by George Varghese.</p><p>In a misconfigured network—one with bridges connecting Ethernets in a loop—packets could circulate forever. We felt confident that we could figure out a way to prevent that. In a pinch, a product could ship without the safety feature. And clearly a two-port device was only the starting point. Multiple-port devices could follow, though they would require custom components.</p><p>I took our idea to three levels of management, looking for approval to build a prototype of the learning bridge that Mark envisioned. Before the end of the day, we had a green light with the understanding that a product would follow if the prototype was successful.</p><h2>Developing the bridge</h2><p>My immediate manager at DEC, Tony Lauck, challenged several engineers and architects to solve the problem of packet looping in misconfigured networks. Within a few days, we had several potential solutions. <a href="https://en.wikipedia.org/wiki/Radia_Perlman" rel="noopener noreferrer" target="_blank">Radia Perlman</a>, an architect in Tony’s group, provided the clear winner: the spanning tree protocol.</p><p>In Perlman’s approach, the bridges detect each other, select a root bridge according to specified criteria, and then compute a minimum spanning tree. An MST is a mathematical structure that, in this case, describes how to efficiently connect LANs and bridges without loops. The MST was then used to place any bridge whose presence would create a loop into backup mode. As a side benefit, it provided automated recovery in the case of a bridge failure.</p><p><img id="53825" data-rm-shortcode-id="994b2afc7011f34ffd78cc678663b727" data-rm-shortcode-name="rebelmouse-image" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/a-big-green-box-with-little-boxes-within-with-gold-dots-and-different-colored-wires.jpg?id=51927566&amp;width=980" data-runner-src="https://spectrum.ieee.org/media-library/a-big-green-box-with-little-boxes-within-with-gold-dots-and-different-colored-wires.jpg?id=51927566&amp;width=980" width="3000" height="2250" alt="a big green box with little boxes within with gold dots and different colored wires"><small placeholder="Add Photo Caption...">The logic module of a disassembled LANBridge 100, which was released by Digital Equipment Corp. in 1986. </small><small placeholder="Add Photo Credit...">Alan Kirby</small></p><p>Mark designed the hardware and timing-sensitive low-level code, while software engineer Bob Shelly wrote the remaining programs. And in 1986, DEC introduced the technology as the LANBridge 100, product code DEBET-AA.</p><p>Soon after, DEC developed DEBET-RC, a version that supported a 3-kilometer optical fiber span between bridges. Manuals for some of the DEBET-RCs can be found on the <a href="https://bitsavers.org/" rel="noopener noreferrer" target="_blank">Bitsavers website</a>.</p><p>Mark’s idea didn’t replace Ethernet—and that was its brilliance. By allowing store-and-forward switching between existing CSMA/CD coax-based Ethernets, bridges allowed easy upgrades of existing LANs. Since any collision would not propagate beyond the bridge, connecting two Ethernets with a bridge would immediately double the length limit of a single Ethernet cable alone. More importantly, placing computers that communicated heavily with each other on the same Ethernet cable would isolate that traffic to that cable, while the bridge would still allow communication with computers on other Ethernet cables.</p><p>That reduced the traffic on both cables, increasing capacity while reducing the frequency of collisions. Taken to its limit, it eventually meant giving each computer its own Ethernet cable, with a multiport bridge connecting them all.</p><p>That is what led to a gradual migration away from CSMA/CD over coax to the now ubiquitous copper and fiber links between individual computers and a dedicated switch port.</p><p>The speed of the links is no longer limited by the constraints of collision detection. Over time, the change completely transformed how people think of Ethernet.</p><p>A bridge could even have ports for different LAN types if the associated packet headers were sufficiently similar.</p><p>Our team later developed GIGAswitch, a multiport device supporting both Ethernet and FDDI.</p><p>The existence of bridges with increasingly higher performance took the wind out of the sails of those developing new shared media LAN access protocols. FDDI later faded from the marketplace in the face of faster Ethernet versions.</p><p>Bridge technology was not without controversy, of course. Some engineers continue to believe that Layer 2 switching is a bad idea and that all you need are faster Layer 3 routers to transfer packets between LANs. At the time, however, IP had not won at the network level, and DECNet, IBM’s SNA, and other network protocols were fighting for dominance. Switching at Layer 2 would work with any network protocol.</p><p>Mark received a <a href="https://patents.google.com/patent/US4597078A/en" rel="noopener noreferrer" target="_blank">U.S. patent</a> for the device in 1986. DEC offered to license it on a no-cost basis, allowing any company to use the technology.</p><p>That led to an IEEE standardization effort. Established networking companies and startups adopted and began working to improve the switching technology. Other enhancements—including switch-specific ASICs, virtual LANs, and the development of faster and less expensive physical media and associated electronics—steadily contributed to Ethernet’s longevity and popularity.</p><p>The lasting value of Ethernet lies not in CSMA/CD or its original coaxial media but in the easily understood and functional service that it provided for protocol designers.</p><p>The switches in many home networks today are directly descended from the innovation. And modern data centers have numerous switches with individual ports running between 40 and 800 gigabits per second. The data center switch market alone accounts for more than US $10 billion in annual revenue.</p><p>Lauck, my DEC manager, once said that the value of an architecture can be measured by the number of technology generations over which it is useful. By that measure, Ethernet has been enormously successful. The same can be said of Layer 2 switching.</p><p>No one knows what would have happened to Ethernet had Mark not invented the learning bridge. Perhaps someone else would have come up with the idea. But it’s also possible that Ethernet would have slowly withered away.</p><p>To me, Mark saved Ethernet.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Working from home isn't going away, even if some CEOs wish it would (107 pts)]]></title>
            <link>https://techcrunch.com/2024/04/07/working-from-home-isnt-going-away-even-if-some-ceos-wish-it-would/</link>
            <guid>39968205</guid>
            <pubDate>Mon, 08 Apr 2024 10:22:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://techcrunch.com/2024/04/07/working-from-home-isnt-going-away-even-if-some-ceos-wish-it-would/">https://techcrunch.com/2024/04/07/working-from-home-isnt-going-away-even-if-some-ceos-wish-it-would/</a>, See on <a href="https://news.ycombinator.com/item?id=39968205">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				<p id="speakable-summary"><span>When I started</span> working from home in the late 1980s as a freelance technical writer, I was clearly an outlier. Even contractors mostly went into the office in those days. Over time, though, that slowly changed, and the pandemic — along with generationally shifting views on work-life balance — accelerated worker sentiment away from going into a formal office every day, even if some CEOs wish it weren’t so.</p>
<p>Today, 14% of U.S. workers work at home full time (including me), and that number is expected to <a href="https://www.usatoday.com/money/blueprint/business/hr-payroll/remote-work-statistics/">increase to 20% by next year</a>, according to data published by USA Today. In total, 58% of white collar employees want flexibility in their work schedules to work at home a few days a week, per that same USA Today data. Yet, we are continually getting post-pandemic mixed messages about returning to the office.</p>
<p>Some companies like <a href="https://www.crn.com/news/cloud/2024/ibm-orders-more-employees-to-spend-time-in-the-office">IBM</a> and Amazon have been pushing hard to get people back to the office, with Amazon CEO Andy Jassy reportedly telling employees if they wanted to stay remote, it probably <a href="https://fortune.com/2023/08/29/amazon-ceo-andy-jassy-return-to-office-mandate-or-face-consequences/">wouldn’t work out well</a> for them. Wayfair, the Boston-based online furniture company, <a href="https://www.wsj.com/business/wayfair-layoffs-focused-on-remote-workers-9ec2f037">concentrated on remote workers </a>over in-office folks in a layoff earlier this year, according to a WSJ report.</p>
<p>Big tech CEOs like Jassy and Elon Musk have been pushing back hard against remote work; Musk called it <a href="https://www.cnbc.com/2023/05/16/elon-musk-work-from-home-morally-wrong-when-some-have-to-show-up.html">“morally wrong”</a> for some people to work at home while service workers had to show up. Meanwhile <a href="https://www.businessinsider.com/michael-bloomberg-implies-remote-workers-golfing-must-return-to-office-2023-9">Michael Bloomberg suggested</a> remote workers weren’t actually working, but playing golf (which honestly sounds like projecting to me). Even Salesforce CEO Marc Benioff, whose company pushed the notion of a digital HQ during the pandemic, began <a href="https://techcrunch.com/2022/12/19/benioffs-reported-slack-statement-muddles-message-about-salesforces-view-of-wfh/">preaching about a return to the office</a>, blaming working from home for lack of productivity, especially among new employees.</p>
<p>That’s a lot of executive energy being directed against working from home and toward working in the office. Some have suggested that it’s because these companies have invested heavily in office buildings and need people to fill them. Maybe it’s just a need to have the employees in front of managers for control purposes, or they genuinely believe that workers are more productive in the office. Whatever the reason, they seem quite committed to getting back to the office.</p>
<p>Do they have a point? Will workers be more productive under the watchful eye of their managers sitting in cubicles instead of the comfort of their homes? Perhaps more importantly to results-driven CEOs, will their companies make more money? Research from the University of Pittsburgh Katz School of Business published earlier this year <a href="https://business.pitt.edu/return-to-office-mandates-dont-improve-employee-or-company-performance/">suggests not necessarily</a>.</p>
<p>“Our findings are consistent with employees’ concerns that managers use RTO (return to office mandates) for power grabbing and blaming employees for poor performance. We provide evidence that RTO mandates hurt employee satisfaction but do not improve firm performance,” the report found.</p>
<p>Karen Mangia, president and chief strategy officer at the Engineered Innovation Group, who has studied and written extensively about remote work, says she was surprised to find that workers tended to value flexibility over place; it wasn’t so much where you needed to be, so much as your ability to control when you worked, to maintain a proper work-life balance.</p>
<p>“All of the research I’ve been looking at shows the same thing: that employees who have some degree of flexibility over where and when they work, are reporting higher levels of employee engagement. That is the group of people that is demonstrating to be more engaged and more productive,” she said.</p>
<p>What’s more, Mangia has found that those companies forcing employees to go back to the office are unsurprisingly having to deal with more employee burnout. “The argument so many times behind this return to office mandate is that employees will be more productive because we can collaborate in person and, and things get done. Well, being burnt out and sustaining a burnout level is the opposite of being more productive,” she said.</p>
<p>There are also good reasons to encourage hiring more remote employees, including access to a much broader and diverse employee base than you could get from one geographical location.</p>
<p>“I’ve had a big Midwestern consumer packaged goods company say ‘we’re finding all sorts of talent. Whereas before we insisted all employees must be local or must be in the city, now we’ve opened it up more broadly, and we got way better candidates. We don’t ever want to go back and we’re going to open that up permanently,’” said Dion Hinchcliffe, an analyst at Constellation Research, who has been watching this trend for a long time.</p>
<p>The next debate is how much, if any, time should employees be required to spend in the office and for what reasons. There are many tech companies that are leaving it up to their employees to decide where they want to work, and it seems to work quite well.</p>
<p>Gitlab is a prime example of a company that has been fully remote from the day it was founded a decade ago. Other tech companies with a flexible approach include Dropbox, Atlassian and Okta, none of which require a specific number of days in the office.</p>
<p>As for startups, anecdotally the vast majority of founders I speak to are remote first. Hinchcliffe says this is part of a shift to a decentralized workplace where startups in particular avoid the regular overhead of having an office. Instead they often rent space in the WeWork model to get together with customers, press and analysts, or each other, as needed.</p>
<p>Mangia says that the one worker demographic that does tend to struggle in all-virtual environments is new hires out of college, who benefit from being in an office. “When you have new-hire employees, especially early in their career, they do ramp up faster and report a better experience with a lower degree of burnout when they can come into a place where there are other people to help them,” she said, giving some credence to what Benioff was saying.</p>
<p>Even the most ardent work-from-home advocates understand there will be times when there is value in getting together for team building, to meet customers or to collaborate and brainstorm in person, but in spite of the cries from big CEOs, employees have tasted this flexibility, and it’s going to be hard to get the genie back in the bottle. For now, it continues to be a debate between labor and management about where and how work gets done.</p>
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Blocky – a DNS proxy and ad-blocker for the local network (199 pts)]]></title>
            <link>https://0xerr0r.github.io/blocky/</link>
            <guid>39968103</guid>
            <pubDate>Mon, 08 Apr 2024 10:07:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://0xerr0r.github.io/blocky/">https://0xerr0r.github.io/blocky/</a>, See on <a href="https://news.ycombinator.com/item?id=39968103">Hacker News</a></p>
<div id="readability-page-1" class="page">
  Redirecting to <a href="https://0xerr0r.github.io/blocky/latest/">latest/</a>...


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hello World (200 pts)]]></title>
            <link>https://thecoder08.github.io/hello-world.html</link>
            <guid>39967709</guid>
            <pubDate>Mon, 08 Apr 2024 09:07:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thecoder08.github.io/hello-world.html">https://thecoder08.github.io/hello-world.html</a>, See on <a href="https://news.ycombinator.com/item?id=39967709">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
      
      

      <p>April 6, 2024</p>
<h2 id="hello-world">Hello World</h2>
<p>A deep dive into the world of abstraction behind a modern Hello World program.</p>

<h2 id="before-we-start">Before we start</h2>
<p>This article is written about a Hello World program written in C. This is about as high as you can go as a high-level language without having to worry about what your specific language is doing in the interpreter/compiler/JIT before your Hello World proper actually runs.</p>

<p>I originally started writing this with the intent of making it understandable to anyone with some coding background, but I now think it would be helpful to have at least some knowledge of C or assembly.</p>
<h2 id="the-start">The start</h2>
<p>Everyone should be familiar with a Hello World program. In python, the very first program you wrote may have been:</p>

<p>It simply prints the text “Hello World!” onto the screen.</p>

<p>In this article, we’re going to look at a Hello World in the C programming language. If you’re unfamiliar, it’s:</p>
<div><pre><code><span>#include</span> <span>&lt;stdio.h&gt;</span><span>
</span>
<span>int</span> <span>main</span><span>()</span> <span>{</span>
    <span>printf</span><span>(</span><span>"Hello World!</span><span>\n</span><span>"</span><span>);</span>
    <span>return</span> <span>0</span><span>;</span>
<span>}</span>
</code></pre></div>
<p>This program does the exact same thing as the python one. Unlike python, however, you can’t just call an interpreter to run this program. You have to run the compiler first to convert this code into machine code that the computer’s processor can run directly. All modern big and important programs that make a computer work are written this way.</p>

<p>So to do this, we run the following command:</p>

<p>This take our C code from the file <code>hello.c</code> and generates a machine code program in the file called <code>hello</code>. We can then run it by running the following command:</p>

<p>which gives:</p>

<p>Neat.</p>

<h2 id="our-program">Our program</h2>
<p>OK, so how did it do that? Well, the first place to look is our program. What exactly is it?</p>
<div><pre><code><span>$ </span>file hello
hello: ELF 64-bit LSB pie executable, x86-64, version 1 <span>(</span>SYSV<span>)</span>, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]<span>=</span>b74da2c9c77d221eeaa98f87f4a7a529782db280, <span>for </span>GNU/Linux 3.2.0, not stripped
</code></pre></div>
<p>This is mostly stuff we won’t worry about, or don’t need to worry about until later. The important part is just the</p>
<blockquote>
  <p>ELF executable, x86-64</p>
</blockquote>

<p>This tells us that the program is an ELF executable file for the x86_64 instruction set architecture. What does that mean?</p>

<p>An ELF executable is the Linux equivalent to a windows <code>.exe</code> file. It’s just a program that your computer can run. But we already knew that. The other part tells us that it’s a machine code program meant to run on a 64-bit x86 processor, which is the CPU architecture that has been used in PCs since the introduction of the IBM PC in 1981. That wasn’t 64-bit, mind you, but our modern processors can still run code written for the IBM PC (kind of). I digress.</p>

<p>So this file contains machine code, a sort of language, and the only language that the CPU can understand. So where does the CPU start running it’s code?</p>
<div><pre><code><span>$ </span>readelf <span>-h</span> hello
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2<span>'s complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              DYN (Position-Independent Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x1060
  Start of program headers:          64 (bytes into file)
  Start of section headers:          13976 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         13
  Size of section headers:           64 (bytes)
  Number of section headers:         31
  Section header string table index: 30
</span></code></pre></div>
<p>The important part here is <code>Entry point address:</code>, which is set to <code>0x1060</code>. This is a hexadecimal number which represents a location in our program, or, once it gets loaded, in our computer’s memory. So what exactly is there?</p>

<h2 id="the-code">The code</h2>

<p>I’m not going to put the entire output of this command in here, because it would be too long. But if we scroll through it, we eventually find some lines of text, where the first line starts with <code>1060:</code></p>
<div><pre><code>Disassembly of section .text:

0000000000001060 &lt;_start&gt;:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	45 31 c0             	xor    %r8d,%r8d
    1076:	31 c9                	xor    %ecx,%ecx
    1078:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 1149 &lt;main&gt;
    107f:	ff 15 53 2f 00 00    	call   *0x2f53(%rip)        # 3fd8 &lt;__libc_start_main@GLIBC_2.34&gt;
    1085:	f4                   	hlt    
    1086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    108d:	00 00 00
</code></pre></div>
<p>What does this mean? The first numbers before the colons are the addresses of the following bytes, essentially their position in the file. The next numbers are bytes of data in our program file, which in this case represent machine code. The following text is the dissassembly of that code. Assembly language is a human-readable representation of machine code. Note that even if the bytes on the left don’t represent code, the disassembler will still try to dissassemble them. This leads to garbage and nonsensical assembly code.</p>

<p>So we’ve found some code! But not code that we wrote. It was added to our program automatically by the compiler (technically the linker). Basically, this code does some initialization, and then runs an important instruction:</p>
<div><pre><code>call *0x2f53(%rip)        # 3fd8 &lt;__libc_start_main@GLIBC_2.34&gt;
</code></pre></div>
<p>This instruction tells the computer to go execute some code somewhere else, in this case at address <code>0x2f53</code>, which is changed to address <code>0x3fd8</code> when our program is loaded by the dynamic linker. I won’t get into that.</p>

<p>But no matter how hard you look, you won’t be able to find either of these addresses in our file. The <code>0x3fd8</code> is technically there in the global offset table, again, beyond the scope of this article, but it’s empty right now. That’s because this code isn’t defined in our program, it’s somewhere else.</p>
<h2 id="the-c-library">The C library</h2>
<p>So where is it?</p>
<div><pre><code><span>$ </span>readelf <span>-d</span> hello

Dynamic section at offset 0x2dc8 contains 27 entries:
  Tag        Type                         Name/Value
 0x0000000000000001 <span>(</span>NEEDED<span>)</span>             Shared library: <span>[</span>libc.so.6]
 0x000000000000000c <span>(</span>INIT<span>)</span>               0x1000
 0x000000000000000d <span>(</span>FINI<span>)</span>               0x1168
 0x0000000000000019 <span>(</span>INIT_ARRAY<span>)</span>         0x3db8
 0x000000000000001b <span>(</span>INIT_ARRAYSZ<span>)</span>       8 <span>(</span>bytes<span>)</span>
 0x000000000000001a <span>(</span>FINI_ARRAY<span>)</span>         0x3dc0
 0x000000000000001c <span>(</span>FINI_ARRAYSZ<span>)</span>       8 <span>(</span>bytes<span>)</span>
 0x000000006ffffef5 <span>(</span>GNU_HASH<span>)</span>           0x3b0
 0x0000000000000005 <span>(</span>STRTAB<span>)</span>             0x480
 0x0000000000000006 <span>(</span>SYMTAB<span>)</span>             0x3d8
 0x000000000000000a <span>(</span>STRSZ<span>)</span>              141 <span>(</span>bytes<span>)</span>
 0x000000000000000b <span>(</span>SYMENT<span>)</span>             24 <span>(</span>bytes<span>)</span>
 0x0000000000000015 <span>(</span>DEBUG<span>)</span>              0x0
 0x0000000000000003 <span>(</span>PLTGOT<span>)</span>             0x3fb8
 0x0000000000000002 <span>(</span>PLTRELSZ<span>)</span>           24 <span>(</span>bytes<span>)</span>
 0x0000000000000014 <span>(</span>PLTREL<span>)</span>             RELA
 0x0000000000000017 <span>(</span>JMPREL<span>)</span>             0x610
 0x0000000000000007 <span>(</span>RELA<span>)</span>               0x550
 0x0000000000000008 <span>(</span>RELASZ<span>)</span>             192 <span>(</span>bytes<span>)</span>
 0x0000000000000009 <span>(</span>RELAENT<span>)</span>            24 <span>(</span>bytes<span>)</span>
 0x000000000000001e <span>(</span>FLAGS<span>)</span>              BIND_NOW
 0x000000006ffffffb <span>(</span>FLAGS_1<span>)</span>            Flags: NOW PIE
 0x000000006ffffffe <span>(</span>VERNEED<span>)</span>            0x520
 0x000000006fffffff <span>(</span>VERNEEDNUM<span>)</span>         1
 0x000000006ffffff0 <span>(</span>VERSYM<span>)</span>             0x50e
 0x000000006ffffff9 <span>(</span>RELACOUNT<span>)</span>          3
 0x0000000000000000 <span>(</span>NULL<span>)</span>               0x0
</code></pre></div>
<p>This is a list of, among other things, the libraries that our code depends on. In this case, we see the line</p>
<div><pre><code>0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]
</code></pre></div>
<p>The is our system’s standard C library, a collection of routines and functions used by nearly all of the programs on our computer. In Windows-land, this is equivalent to the C runtime, either <code>msvcrt.dll</code> or <code>ucrt&lt;something&gt;.dll</code>. One thing to note is that files in Linux with the extension <code>.so</code>, called Shared Objects, are equivalent to files in Windows with the extension <code>.dll</code>, called Dynamically Linked Libraries. They both contain code that can be shared between muliple programs.</p>

<p>So we could repeat the process of using <code>objdump</code> to find where this code is in our C library, and what it does, but the C library is huge and complex, and we haven’t even got to the code we wrote yet. So I’ll save you the trouble: it does some initialisation, like getting our program’s command-line parameters and environment variables, and calls our <code>main()</code> function. Then when we return from <code>main()</code>, it exits our progran with the status code we provide.</p>

<p>So where is our main function?</p>
<h2 id="main">main()</h2>
<p>It’s in our program, of course. Returning to our disassembly, we see:</p>
<div><pre><code>0000000000001149 &lt;main&gt;:
    1149:	f3 0f 1e fa          	endbr64 
    114d:	55                   	push   %rbp
    114e:	48 89 e5             	mov    %rsp,%rbp
    1151:	48 8d 05 ac 0e 00 00 	lea    0xeac(%rip),%rax        # 2004 &lt;_IO_stdin_used+0x4&gt;
    1158:	48 89 c7             	mov    %rax,%rdi
    115b:	e8 f0 fe ff ff       	call   1050 &lt;puts@plt&gt;
    1160:	b8 00 00 00 00       	mov    $0x0,%eax
    1165:	5d                   	pop    %rbp
    1166:	c3                   	ret    
</code></pre></div>
<p>Finally, our code! So what does it do? It:</p>
<ol>
  <li>Sets up a stack frame</li>
  <li>Sets up the arguments to our function call</li>
  <li>Calls our Hello World</li>
  <li>Cleans up the stack frame</li>
  <li>Returns from the function with exit code 0</li>
</ol>

<p>This is what we see in our source code. But what is a stack frame? It’s a part of the computer’s memory that our program uses to store local variables, i.e. variables declared inside our main function. Luckily, we don’t declare any variables, so we don’t really have to worry about that. The important parts here are:</p>
<div><pre><code>lea    0xeac(%rip),%rax

call   1050 &lt;puts@plt&gt;
</code></pre></div>
<p>These instructions:</p>
<ol>
  <li>Set the memory address of our Hello World string as the first argument to our function call (indirectly)</li>
  <li>Call the <code>puts()</code> function</li>
</ol>

<p>Wait, <code>puts()</code>? Didn’t we call <code>printf()</code>?</p>

<p>Yes. However, the compiler performed an optimisation. The printf function is complex, because it’s able to print “formatted output”, which means that we can embed variables in our output. The function will handle converting them to strings and printing them for us, but we aren’t using any of that. So that compiler replaces <code>printf()</code> with the much simpler <code>puts()</code>, which just prints a string of unformatted text. So where is our text?</p>

<h2 id="the-string">The string</h2>
<p>According to the disassembler, it’s in address <code>0x0eac</code>, which gets converted to address <code>0x2004</code> upon loading. So what does that look like?</p>

<div><pre><code>Disassembly of section .rodata:

0000000000002000 &lt;_IO_stdin_used&gt;:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	48                   	rex.W
    2005:	65 6c                	gs insb (%dx),%es:(%rdi)
    2007:	6c                   	insb   (%dx),%es:(%rdi)
    2008:	6f                   	outsl  %ds:(%rsi),(%dx)
    2009:	20 57 6f             	and    %dl,0x6f(%rdi)
    200c:	72 6c                	jb     207a &lt;__GNU_EH_FRAME_HDR+0x66&gt;
    200e:	64 21 00             	and    %eax,%fs:(%rax)
</code></pre></div>
<p>Remember earlier how I said that the disassembler tries to disassemble code even if it isn’t code? This is a good example. Ignore the assembly language, it’s complete gibberish. But if we look at address <code>0x2004</code>, we see the hex bytes <code>48 65 6c 6c 6f 20 57 6f 72 6c 64 21 00</code>, which translates to the string “Hello World!”, followed by a NULL terminator.</p>

<p>But didn’t our string also include a newline, <code>\n</code>, which should be translated to ASCII <code>0x0a</code>? Yes, but this is another artifact of the compiler’s optimisation. The <code>puts()</code> function prints out the string with a trailing newline, while <code>printf()</code> doesn’t. So it removes our newline so we only end up with one in the output.</p>

<p>Then we see a <code>0x00</code> NULL byte. This is called a NULL terminator, and it appears at the end of all C strings. in C, our string isn’t associated with any length information. So a function that takes a string of any length as an argument will act on it one byte a time, until it sees a NULL terminator. If we had multiple string in memory and no NULL terminators between them, then C functions would operate on all of the strings together. Eventually the functions would get to the end and start reading memory that they aren’t allowed to read, and your program would crash with the dreaded “Segmentation Fault”.</p>

<h2 id="following-the-puts">following the puts()</h2>
<p>So puts() is located at <code>0x1050</code>.</p>
<div><pre><code>Disassembly of section .plt.sec:

0000000000001050 &lt;puts@plt&gt;:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmp *0x2f75(%rip)        # 3fd0 &lt;puts@GLIBC_2.2.5&gt;
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
</code></pre></div>

<p>Okay, so it’s now calling back into the standard library. (technically the global offset table, but eventually the standard library)</p>

<p>Again, we don’t want to read the disassembly of the standard library, but luckily Glibc (our C standard library) is open source. So where does that take us?</p>

<p>Well, puts() is aliased to the function _IO_puts in the standard library.</p>
<div><pre><code><span>int</span>
<span>_IO_puts</span> <span>(</span><span>const</span> <span>char</span> <span>*</span><span>str</span><span>)</span>
<span>{</span>
  <span>int</span> <span>result</span> <span>=</span> <span>EOF</span><span>;</span>
  <span>size_t</span> <span>len</span> <span>=</span> <span>strlen</span> <span>(</span><span>str</span><span>);</span>
  <span>_IO_acquire_lock</span> <span>(</span><span>stdout</span><span>);</span>

  <span>if</span> <span>((</span><span>_IO_vtable_offset</span> <span>(</span><span>stdout</span><span>)</span> <span>!=</span> <span>0</span>
       <span>||</span> <span>_IO_fwide</span> <span>(</span><span>stdout</span><span>,</span> <span>-</span><span>1</span><span>)</span> <span>==</span> <span>-</span><span>1</span><span>)</span>
      <span>&amp;&amp;</span> <span>_IO_sputn</span> <span>(</span><span>stdout</span><span>,</span> <span>str</span><span>,</span> <span>len</span><span>)</span> <span>==</span> <span>len</span>
      <span>&amp;&amp;</span> <span>_IO_putc_unlocked</span> <span>(</span><span>'\n'</span><span>,</span> <span>stdout</span><span>)</span> <span>!=</span> <span>EOF</span><span>)</span>
    <span>result</span> <span>=</span> <span>MIN</span> <span>(</span><span>INT_MAX</span><span>,</span> <span>len</span> <span>+</span> <span>1</span><span>);</span>

  <span>_IO_release_lock</span> <span>(</span><span>stdout</span><span>);</span>
  <span>return</span> <span>result</span><span>;</span>
<span>}</span>
</code></pre></div>
<p>So it gets the length of our string, obtains a lock on the output stream, does some checks, and calls _IO_sputn. It then releases the lock and returns the number of printed characters.</p>

<p>I searched for this function, but couldn’t find it. Apparently it does something through a function called _IO_file_jumps, and calls _IO_new_file_xsputn.</p>
<div><pre><code><span>size_t</span>
<span>_IO_new_file_xsputn</span> <span>(</span><span>FILE</span> <span>*</span><span>f</span><span>,</span> <span>const</span> <span>void</span> <span>*</span><span>data</span><span>,</span> <span>size_t</span> <span>n</span><span>)</span>
<span>{</span>
  <span>const</span> <span>char</span> <span>*</span><span>s</span> <span>=</span> <span>(</span><span>const</span> <span>char</span> <span>*</span><span>)</span> <span>data</span><span>;</span>
  <span>size_t</span> <span>to_do</span> <span>=</span> <span>n</span><span>;</span>
  <span>int</span> <span>must_flush</span> <span>=</span> <span>0</span><span>;</span>
  <span>size_t</span> <span>count</span> <span>=</span> <span>0</span><span>;</span>

  <span>if</span> <span>(</span><span>n</span> <span>&lt;=</span> <span>0</span><span>)</span>
    <span>return</span> <span>0</span><span>;</span>
  <span>/* This is an optimized implementation.
     If the amount to be written straddles a block boundary
     (or the filebuf is unbuffered), use sys_write directly. */</span>

  <span>/* First figure out how much space is available in the buffer. */</span>
  <span>if</span> <span>((</span><span>f</span><span>-&gt;</span><span>_flags</span> <span>&amp;</span> <span>_IO_LINE_BUF</span><span>)</span> <span>&amp;&amp;</span> <span>(</span><span>f</span><span>-&gt;</span><span>_flags</span> <span>&amp;</span> <span>_IO_CURRENTLY_PUTTING</span><span>))</span>
    <span>{</span>
      <span>count</span> <span>=</span> <span>f</span><span>-&gt;</span><span>_IO_buf_end</span> <span>-</span> <span>f</span><span>-&gt;</span><span>_IO_write_ptr</span><span>;</span>
      <span>if</span> <span>(</span><span>count</span> <span>&gt;=</span> <span>n</span><span>)</span>
	<span>{</span>
	  <span>const</span> <span>char</span> <span>*</span><span>p</span><span>;</span>
	  <span>for</span> <span>(</span><span>p</span> <span>=</span> <span>s</span> <span>+</span> <span>n</span><span>;</span> <span>p</span> <span>&gt;</span> <span>s</span><span>;</span> <span>)</span>
	    <span>{</span>
	      <span>if</span> <span>(</span><span>*--</span><span>p</span> <span>==</span> <span>'\n'</span><span>)</span>
		<span>{</span>
		  <span>count</span> <span>=</span> <span>p</span> <span>-</span> <span>s</span> <span>+</span> <span>1</span><span>;</span>
		  <span>must_flush</span> <span>=</span> <span>1</span><span>;</span>
		  <span>break</span><span>;</span>
		<span>}</span>
	    <span>}</span>
	<span>}</span>
    <span>}</span>
  <span>else</span> <span>if</span> <span>(</span><span>f</span><span>-&gt;</span><span>_IO_write_end</span> <span>&gt;</span> <span>f</span><span>-&gt;</span><span>_IO_write_ptr</span><span>)</span>
    <span>count</span> <span>=</span> <span>f</span><span>-&gt;</span><span>_IO_write_end</span> <span>-</span> <span>f</span><span>-&gt;</span><span>_IO_write_ptr</span><span>;</span> <span>/* Space available. */</span>

  <span>/* Then fill the buffer. */</span>
  <span>if</span> <span>(</span><span>count</span> <span>&gt;</span> <span>0</span><span>)</span>
    <span>{</span>
      <span>if</span> <span>(</span><span>count</span> <span>&gt;</span> <span>to_do</span><span>)</span>
	<span>count</span> <span>=</span> <span>to_do</span><span>;</span>
      <span>f</span><span>-&gt;</span><span>_IO_write_ptr</span> <span>=</span> <span>__mempcpy</span> <span>(</span><span>f</span><span>-&gt;</span><span>_IO_write_ptr</span><span>,</span> <span>s</span><span>,</span> <span>count</span><span>);</span>
      <span>s</span> <span>+=</span> <span>count</span><span>;</span>
      <span>to_do</span> <span>-=</span> <span>count</span><span>;</span>
    <span>}</span>
  <span>if</span> <span>(</span><span>to_do</span> <span>+</span> <span>must_flush</span> <span>&gt;</span> <span>0</span><span>)</span>
    <span>{</span>
      <span>size_t</span> <span>block_size</span><span>,</span> <span>do_write</span><span>;</span>
      <span>/* Next flush the (full) buffer. */</span>
      <span>if</span> <span>(</span><span>_IO_OVERFLOW</span> <span>(</span><span>f</span><span>,</span> <span>EOF</span><span>)</span> <span>==</span> <span>EOF</span><span>)</span>
	<span>/* If nothing else has to be written we must not signal the
	   caller that everything has been written.  */</span>
	<span>return</span> <span>to_do</span> <span>==</span> <span>0</span> <span>?</span> <span>EOF</span> <span>:</span> <span>n</span> <span>-</span> <span>to_do</span><span>;</span>

      <span>/* Try to maintain alignment: write a whole number of blocks.  */</span>
      <span>block_size</span> <span>=</span> <span>f</span><span>-&gt;</span><span>_IO_buf_end</span> <span>-</span> <span>f</span><span>-&gt;</span><span>_IO_buf_base</span><span>;</span>
      <span>do_write</span> <span>=</span> <span>to_do</span> <span>-</span> <span>(</span><span>block_size</span> <span>&gt;=</span> <span>128</span> <span>?</span> <span>to_do</span> <span>%</span> <span>block_size</span> <span>:</span> <span>0</span><span>);</span>

      <span>if</span> <span>(</span><span>do_write</span><span>)</span>
	<span>{</span>
	  <span>count</span> <span>=</span> <span>new_do_write</span> <span>(</span><span>f</span><span>,</span> <span>s</span><span>,</span> <span>do_write</span><span>);</span>
	  <span>to_do</span> <span>-=</span> <span>count</span><span>;</span>
	  <span>if</span> <span>(</span><span>count</span> <span>&lt;</span> <span>do_write</span><span>)</span>
	    <span>return</span> <span>n</span> <span>-</span> <span>to_do</span><span>;</span>
	<span>}</span>

      <span>/* Now write out the remainder.  Normally, this will fit in the
	 buffer, but it's somewhat messier for line-buffered files,
	 so we let _IO_default_xsputn handle the general case. */</span>
      <span>if</span> <span>(</span><span>to_do</span><span>)</span>
	<span>to_do</span> <span>-=</span> <span>_IO_default_xsputn</span> <span>(</span><span>f</span><span>,</span> <span>s</span><span>+</span><span>do_write</span><span>,</span> <span>to_do</span><span>);</span>
    <span>}</span>
  <span>return</span> <span>n</span> <span>-</span> <span>to_do</span><span>;</span>
<span>}</span>
</code></pre></div>
<p>Wow. All of this for a Hello World. I am not going to try and understand how this code works, even with comments. So at this point I realised that using Glibc to explain this is going to be a pain. So here, I decided to look at musl libc, which I know is supposed to be smaller.</p>
<h2 id="musl">musl</h2>
<p>So in musl, puts() is defined as follows:</p>
<div><pre><code><span>int</span> <span>puts</span><span>(</span><span>const</span> <span>char</span> <span>*</span><span>s</span><span>)</span>
<span>{</span>
	<span>int</span> <span>r</span><span>;</span>
	<span>FLOCK</span><span>(</span><span>stdout</span><span>);</span>
	<span>r</span> <span>=</span> <span>-</span><span>(</span><span>fputs</span><span>(</span><span>s</span><span>,</span> <span>stdout</span><span>)</span> <span>&lt;</span> <span>0</span> <span>||</span> <span>putc_unlocked</span><span>(</span><span>'\n'</span><span>,</span> <span>stdout</span><span>)</span> <span>&lt;</span> <span>0</span><span>);</span>
	<span>FUNLOCK</span><span>(</span><span>stdout</span><span>);</span>
	<span>return</span> <span>r</span><span>;</span>
<span>}</span>
</code></pre></div>
<p>Okay, so it obtains a lock on the output stream, calls fputs, and unlocks the output stream.</p>

<p>How is fputs() defined?</p>
<div><pre><code><span>#include</span> <span>"stdio_impl.h"</span><span>
#include</span> <span>&lt;string.h&gt;</span><span>
</span>
<span>int</span> <span>fputs</span><span>(</span><span>const</span> <span>char</span> <span>*</span><span>restrict</span> <span>s</span><span>,</span> <span>FILE</span> <span>*</span><span>restrict</span> <span>f</span><span>)</span>
<span>{</span>
	<span>size_t</span> <span>l</span> <span>=</span> <span>strlen</span><span>(</span><span>s</span><span>);</span>
	<span>return</span> <span>(</span><span>fwrite</span><span>(</span><span>s</span><span>,</span> <span>1</span><span>,</span> <span>l</span><span>,</span> <span>f</span><span>)</span><span>==</span><span>l</span><span>)</span> <span>-</span> <span>1</span><span>;</span><span>you</span><span>.</span>
<span>}</span>
</code></pre></div>
<p>It gets the length of our string, and calls fwrite() with the output stream, our string, and its length.</p>

<p>How is fwrite() defined?</p>
<div><pre><code><span>size_t</span> <span>fwrite</span><span>(</span><span>const</span> <span>void</span> <span>*</span><span>restrict</span> <span>src</span><span>,</span> <span>size_t</span> <span>size</span><span>,</span> <span>size_t</span> <span>nmemb</span><span>,</span> <span>FILE</span> <span>*</span><span>restrict</span> <span>f</span><span>)</span>
<span>{</span>
	<span>size_t</span> <span>k</span><span>,</span> <span>l</span> <span>=</span> <span>size</span><span>*</span><span>nmemb</span><span>;</span>
	<span>if</span> <span>(</span><span>!</span><span>size</span><span>)</span> <span>nmemb</span> <span>=</span> <span>0</span><span>;</span>
	<span>FLOCK</span><span>(</span><span>f</span><span>);</span>
	<span>k</span> <span>=</span> <span>__fwritex</span><span>(</span><span>src</span><span>,</span> <span>l</span><span>,</span> <span>f</span><span>);</span>
	<span>FUNLOCK</span><span>(</span><span>f</span><span>);</span>
	<span>return</span> <span>k</span><span>==</span><span>l</span> <span>?</span> <span>nmemb</span> <span>:</span> <span>k</span><span>/</span><span>size</span><span>;</span>
<span>}</span>
</code></pre></div>
<p>It gets another lock on the output stream, calls __fwritex(), and unlocks the output stream.</p>

<p>How is __fwritex() defined?</p>
<div><pre><code><span>size_t</span> <span>__fwritex</span><span>(</span><span>const</span> <span>unsigned</span> <span>char</span> <span>*</span><span>restrict</span> <span>s</span><span>,</span> <span>size_t</span> <span>l</span><span>,</span> <span>FILE</span> <span>*</span><span>restrict</span> <span>f</span><span>)</span>
<span>{</span>
	<span>size_t</span> <span>i</span><span>=</span><span>0</span><span>;</span>

	<span>if</span> <span>(</span><span>!</span><span>f</span><span>-&gt;</span><span>wend</span> <span>&amp;&amp;</span> <span>__towrite</span><span>(</span><span>f</span><span>))</span> <span>return</span> <span>0</span><span>;</span>

	<span>if</span> <span>(</span><span>l</span> <span>&gt;</span> <span>f</span><span>-&gt;</span><span>wend</span> <span>-</span> <span>f</span><span>-&gt;</span><span>wpos</span><span>)</span> <span>return</span> <span>f</span><span>-&gt;</span><span>write</span><span>(</span><span>f</span><span>,</span> <span>s</span><span>,</span> <span>l</span><span>);</span>

	<span>if</span> <span>(</span><span>f</span><span>-&gt;</span><span>lbf</span> <span>&gt;=</span> <span>0</span><span>)</span> <span>{</span>
		<span>/* Match /^(.*\n|)/ */</span>
		<span>for</span> <span>(</span><span>i</span><span>=</span><span>l</span><span>;</span> <span>i</span> <span>&amp;&amp;</span> <span>s</span><span>[</span><span>i</span><span>-</span><span>1</span><span>]</span> <span>!=</span> <span>'\n'</span><span>;</span> <span>i</span><span>--</span><span>);</span>
		<span>if</span> <span>(</span><span>i</span><span>)</span> <span>{</span>
			<span>size_t</span> <span>n</span> <span>=</span> <span>f</span><span>-&gt;</span><span>write</span><span>(</span><span>f</span><span>,</span> <span>s</span><span>,</span> <span>i</span><span>);</span>
			<span>if</span> <span>(</span><span>n</span> <span>&lt;</span> <span>i</span><span>)</span> <span>return</span> <span>n</span><span>;</span>
			<span>s</span> <span>+=</span> <span>i</span><span>;</span>
			<span>l</span> <span>-=</span> <span>i</span><span>;</span>
		<span>}</span>
	<span>}</span>

	<span>memcpy</span><span>(</span><span>f</span><span>-&gt;</span><span>wpos</span><span>,</span> <span>s</span><span>,</span> <span>l</span><span>);</span>
	<span>f</span><span>-&gt;</span><span>wpos</span> <span>+=</span> <span>l</span><span>;</span>
	<span>return</span> <span>l</span><span>+</span><span>i</span><span>;</span>
<span>}</span>
</code></pre></div>
<p>This is a fair bit of code, but the main thing it’s doing it calling write() on the output stream’s FILE object. Our stream is defined as stdout, so where is that defined?</p>
<div><pre><code><span>hidden</span> <span>FILE</span> <span>__stdout_FILE</span> <span>=</span> <span>{</span>
	<span>.</span><span>buf</span> <span>=</span> <span>buf</span><span>+</span><span>UNGET</span><span>,</span>
	<span>.</span><span>buf_size</span> <span>=</span> <span>sizeof</span> <span>buf</span><span>-</span><span>UNGET</span><span>,</span>
	<span>.</span><span>fd</span> <span>=</span> <span>1</span><span>,</span>
	<span>.</span><span>flags</span> <span>=</span> <span>F_PERM</span> <span>|</span> <span>F_NORD</span><span>,</span>
	<span>.</span><span>lbf</span> <span>=</span> <span>'\n'</span><span>,</span>
	<span>.</span><span>write</span> <span>=</span> <span>__stdout_write</span><span>,</span>
	<span>.</span><span>seek</span> <span>=</span> <span>__stdio_seek</span><span>,</span>
	<span>.</span><span>close</span> <span>=</span> <span>__stdio_close</span><span>,</span>
	<span>.</span><span>lock</span> <span>=</span> <span>-</span><span>1</span><span>,</span>
<span>};</span>
</code></pre></div>
<p>So the write function is defined as __stdout_write(). How is that defined?</p>
<div><pre><code><span>size_t</span> <span>__stdout_write</span><span>(</span><span>FILE</span> <span>*</span><span>f</span><span>,</span> <span>const</span> <span>unsigned</span> <span>char</span> <span>*</span><span>buf</span><span>,</span> <span>size_t</span> <span>len</span><span>)</span>
<span>{</span>
	<span>struct</span> <span>winsize</span> <span>wsz</span><span>;</span>
	<span>f</span><span>-&gt;</span><span>write</span> <span>=</span> <span>__stdio_write</span><span>;</span>
	<span>if</span> <span>(</span><span>!</span><span>(</span><span>f</span><span>-&gt;</span><span>flags</span> <span>&amp;</span> <span>F_SVB</span><span>)</span> <span>&amp;&amp;</span> <span>__syscall</span><span>(</span><span>SYS_ioctl</span><span>,</span> <span>f</span><span>-&gt;</span><span>fd</span><span>,</span> <span>TIOCGWINSZ</span><span>,</span> <span>&amp;</span><span>wsz</span><span>))</span>
		<span>f</span><span>-&gt;</span><span>lbf</span> <span>=</span> <span>-</span><span>1</span><span>;</span>
	<span>return</span> <span>__stdio_write</span><span>(</span><span>f</span><span>,</span> <span>buf</span><span>,</span> <span>len</span><span>);</span>
<span>}</span>
</code></pre></div>
<p>It makes a TIOCGWINSZ ioctl on the output stream, and calls __stdio_write(). How is that defined?</p>
<div><pre><code><span>size_t</span> <span>__stdio_write</span><span>(</span><span>FILE</span> <span>*</span><span>f</span><span>,</span> <span>const</span> <span>unsigned</span> <span>char</span> <span>*</span><span>buf</span><span>,</span> <span>size_t</span> <span>len</span><span>)</span>
<span>{</span>
	<span>struct</span> <span>iovec</span> <span>iovs</span><span>[</span><span>2</span><span>]</span> <span>=</span> <span>{</span>
		<span>{</span> <span>.</span><span>iov_base</span> <span>=</span> <span>f</span><span>-&gt;</span><span>wbase</span><span>,</span> <span>.</span><span>iov_len</span> <span>=</span> <span>f</span><span>-&gt;</span><span>wpos</span><span>-</span><span>f</span><span>-&gt;</span><span>wbase</span> <span>},</span>
		<span>{</span> <span>.</span><span>iov_base</span> <span>=</span> <span>(</span><span>void</span> <span>*</span><span>)</span><span>buf</span><span>,</span> <span>.</span><span>iov_len</span> <span>=</span> <span>len</span> <span>}</span>
	<span>};</span>
	<span>struct</span> <span>iovec</span> <span>*</span><span>iov</span> <span>=</span> <span>iovs</span><span>;</span>
	<span>size_t</span> <span>rem</span> <span>=</span> <span>iov</span><span>[</span><span>0</span><span>].</span><span>iov_len</span> <span>+</span> <span>iov</span><span>[</span><span>1</span><span>].</span><span>iov_len</span><span>;</span>
	<span>int</span> <span>iovcnt</span> <span>=</span> <span>2</span><span>;</span>
	<span>ssize_t</span> <span>cnt</span><span>;</span>
	<span>for</span> <span>(;;)</span> <span>{</span>
		<span>cnt</span> <span>=</span> <span>syscall</span><span>(</span><span>SYS_writev</span><span>,</span> <span>f</span><span>-&gt;</span><span>fd</span><span>,</span> <span>iov</span><span>,</span> <span>iovcnt</span><span>);</span>
		<span>if</span> <span>(</span><span>cnt</span> <span>==</span> <span>rem</span><span>)</span> <span>{</span>
			<span>f</span><span>-&gt;</span><span>wend</span> <span>=</span> <span>f</span><span>-&gt;</span><span>buf</span> <span>+</span> <span>f</span><span>-&gt;</span><span>buf_size</span><span>;</span>
			<span>f</span><span>-&gt;</span><span>wpos</span> <span>=</span> <span>f</span><span>-&gt;</span><span>wbase</span> <span>=</span> <span>f</span><span>-&gt;</span><span>buf</span><span>;</span>
			<span>return</span> <span>len</span><span>;</span>
		<span>}</span>
		<span>if</span> <span>(</span><span>cnt</span> <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
			<span>f</span><span>-&gt;</span><span>wpos</span> <span>=</span> <span>f</span><span>-&gt;</span><span>wbase</span> <span>=</span> <span>f</span><span>-&gt;</span><span>wend</span> <span>=</span> <span>0</span><span>;</span>
			<span>f</span><span>-&gt;</span><span>flags</span> <span>|=</span> <span>F_ERR</span><span>;</span>
			<span>return</span> <span>iovcnt</span> <span>==</span> <span>2</span> <span>?</span> <span>0</span> <span>:</span> <span>len</span><span>-</span><span>iov</span><span>[</span><span>0</span><span>].</span><span>iov_len</span><span>;</span>
		<span>}</span>
		<span>rem</span> <span>-=</span> <span>cnt</span><span>;</span>
		<span>if</span> <span>(</span><span>cnt</span> <span>&gt;</span> <span>iov</span><span>[</span><span>0</span><span>].</span><span>iov_len</span><span>)</span> <span>{</span>
			<span>cnt</span> <span>-=</span> <span>iov</span><span>[</span><span>0</span><span>].</span><span>iov_len</span><span>;</span>
			<span>iov</span><span>++</span><span>;</span> <span>iovcnt</span><span>--</span><span>;</span>
		<span>}</span>
		<span>iov</span><span>[</span><span>0</span><span>].</span><span>iov_base</span> <span>=</span> <span>(</span><span>char</span> <span>*</span><span>)</span><span>iov</span><span>[</span><span>0</span><span>].</span><span>iov_base</span> <span>+</span> <span>cnt</span><span>;</span>
		<span>iov</span><span>[</span><span>0</span><span>].</span><span>iov_len</span> <span>-=</span> <span>cnt</span><span>;</span>
	<span>}</span>
<span>}</span>
</code></pre></div>
<p>We’re on the home stretch now. This is doing a lot, but it’s calling syscall() with SYS_writev as its first parameter. So how is syscall() defined?</p>
<div><pre><code><span>long</span> <span>syscall</span><span>(</span><span>long</span> <span>n</span><span>,</span> <span>...)</span>
<span>{</span>
	<span>va_list</span> <span>ap</span><span>;</span>
	<span>syscall_arg_t</span> <span>a</span><span>,</span><span>b</span><span>,</span><span>c</span><span>,</span><span>d</span><span>,</span><span>e</span><span>,</span><span>f</span><span>;</span>
	<span>va_start</span><span>(</span><span>ap</span><span>,</span> <span>n</span><span>);</span>
	<span>a</span><span>=</span><span>va_arg</span><span>(</span><span>ap</span><span>,</span> <span>syscall_arg_t</span><span>);</span>
	<span>b</span><span>=</span><span>va_arg</span><span>(</span><span>ap</span><span>,</span> <span>syscall_arg_t</span><span>);</span>
	<span>c</span><span>=</span><span>va_arg</span><span>(</span><span>ap</span><span>,</span> <span>syscall_arg_t</span><span>);</span>
	<span>d</span><span>=</span><span>va_arg</span><span>(</span><span>ap</span><span>,</span> <span>syscall_arg_t</span><span>);</span>
	<span>e</span><span>=</span><span>va_arg</span><span>(</span><span>ap</span><span>,</span> <span>syscall_arg_t</span><span>);</span>
	<span>f</span><span>=</span><span>va_arg</span><span>(</span><span>ap</span><span>,</span> <span>syscall_arg_t</span><span>);</span>
	<span>va_end</span><span>(</span><span>ap</span><span>);</span>
	<span>return</span> <span>__syscall_ret</span><span>(</span><span>__syscall</span><span>(</span><span>n</span><span>,</span><span>a</span><span>,</span><span>b</span><span>,</span><span>c</span><span>,</span><span>d</span><span>,</span><span>e</span><span>,</span><span>f</span><span>));</span>
<span>}</span>
</code></pre></div>
<p>syscall() takes a system call number as its first argument, and a variable number of additional arguments. The va_arg() calls are reading those arguments into the variables a, b, c, d, e, and f.
we then call __syscall() with those arguments, and the result goes into __syscall_ret().</p>

<p>Unfortunately, I couldn’t find the definition for __syscall(), But I feel that this is because we’re getting into platform-specific territory. Musl is a multi-architecture C library, so from this point the code that runs depends on what architecture we’re using. Before I dove into that, I looked at __syscall_ret():</p>
<div><pre><code><span>long</span> <span>__syscall_ret</span><span>(</span><span>unsigned</span> <span>long</span> <span>r</span><span>)</span>
<span>{</span>
	<span>if</span> <span>(</span><span>r</span> <span>&gt;</span> <span>-</span><span>4096UL</span><span>)</span> <span>{</span>
		<span>errno</span> <span>=</span> <span>-</span><span>r</span><span>;</span>
		<span>return</span> <span>-</span><span>1</span><span>;</span>
	<span>}</span>
	<span>return</span> <span>r</span><span>;</span>
<span>}</span>
</code></pre></div>
<p>It just checks to see if the return value from __syscall() is valid, and if not, the system call failed, so it returns -1.</p>
<h2 id="system-calls">System Calls</h2>
<p>So, the last few stages of our Hello World call have been involving systems calls. What is a system call? Well, no matter how big our C library is, there are some things it will never be able to do for us. One of those things is talking to the hardware. The ability to do that is reserved for the kernel, the part of the operating system that controls and shares access to IO devices, memory, and CPU time. In our case, this is the Linux kernel. In Windows world, this is <code>ntoskrnl.exe</code>, which shows up as System in Task Manager.</p>

<p>This means that our puts() call has to end with us telling the OS to do something for us. In this case, we’re asking the OS to write some text to the output stream. Writing to a stream is done with the <code>write</code> system call. Musl is using a similar system call called <code>writev</code>, which can write multiple buffers in an array. So lets look at how musl makes system calls.</p>
<div><pre><code><span>static</span> <span>__inline</span> <span>long</span> <span>__syscall0</span><span>(</span><span>long</span> <span>n</span><span>)</span>
<span>{</span>
	<span>unsigned</span> <span>long</span> <span>ret</span><span>;</span>
	<span>__asm__</span> <span>__volatile__</span> <span>(</span><span>"syscall"</span> <span>:</span> <span>"=a"</span><span>(</span><span>ret</span><span>)</span> <span>:</span> <span>"a"</span><span>(</span><span>n</span><span>)</span> <span>:</span> <span>"rcx"</span><span>,</span> <span>"r11"</span><span>,</span> <span>"memory"</span><span>);</span>
	<span>return</span> <span>ret</span><span>;</span>
<span>}</span>

<span>static</span> <span>__inline</span> <span>long</span> <span>__syscall1</span><span>(</span><span>long</span> <span>n</span><span>,</span> <span>long</span> <span>a1</span><span>)</span>
<span>{</span>
	<span>unsigned</span> <span>long</span> <span>ret</span><span>;</span>
	<span>__asm__</span> <span>__volatile__</span> <span>(</span><span>"syscall"</span> <span>:</span> <span>"=a"</span><span>(</span><span>ret</span><span>)</span> <span>:</span> <span>"a"</span><span>(</span><span>n</span><span>),</span> <span>"D"</span><span>(</span><span>a1</span><span>)</span> <span>:</span> <span>"rcx"</span><span>,</span> <span>"r11"</span><span>,</span> <span>"memory"</span><span>);</span>
	<span>return</span> <span>ret</span><span>;</span>
<span>}</span>

<span>static</span> <span>__inline</span> <span>long</span> <span>__syscall2</span><span>(</span><span>long</span> <span>n</span><span>,</span> <span>long</span> <span>a1</span><span>,</span> <span>long</span> <span>a2</span><span>)</span>
<span>{</span>
	<span>unsigned</span> <span>long</span> <span>ret</span><span>;</span>
	<span>__asm__</span> <span>__volatile__</span> <span>(</span><span>"syscall"</span> <span>:</span> <span>"=a"</span><span>(</span><span>ret</span><span>)</span> <span>:</span> <span>"a"</span><span>(</span><span>n</span><span>),</span> <span>"D"</span><span>(</span><span>a1</span><span>),</span> <span>"S"</span><span>(</span><span>a2</span><span>)</span>
						  <span>:</span> <span>"rcx"</span><span>,</span> <span>"r11"</span><span>,</span> <span>"memory"</span><span>);</span>
	<span>return</span> <span>ret</span><span>;</span>
<span>}</span>

<span>static</span> <span>__inline</span> <span>long</span> <span>__syscall3</span><span>(</span><span>long</span> <span>n</span><span>,</span> <span>long</span> <span>a1</span><span>,</span> <span>long</span> <span>a2</span><span>,</span> <span>long</span> <span>a3</span><span>)</span>
<span>{</span>
	<span>unsigned</span> <span>long</span> <span>ret</span><span>;</span>
	<span>__asm__</span> <span>__volatile__</span> <span>(</span><span>"syscall"</span> <span>:</span> <span>"=a"</span><span>(</span><span>ret</span><span>)</span> <span>:</span> <span>"a"</span><span>(</span><span>n</span><span>),</span> <span>"D"</span><span>(</span><span>a1</span><span>),</span> <span>"S"</span><span>(</span><span>a2</span><span>),</span>
						  <span>"d"</span><span>(</span><span>a3</span><span>)</span> <span>:</span> <span>"rcx"</span><span>,</span> <span>"r11"</span><span>,</span> <span>"memory"</span><span>);</span>
	<span>return</span> <span>ret</span><span>;</span>
<span>}</span>

<span>static</span> <span>__inline</span> <span>long</span> <span>__syscall4</span><span>(</span><span>long</span> <span>n</span><span>,</span> <span>long</span> <span>a1</span><span>,</span> <span>long</span> <span>a2</span><span>,</span> <span>long</span> <span>a3</span><span>,</span> <span>long</span> <span>a4</span><span>)</span>
<span>{</span>
	<span>unsigned</span> <span>long</span> <span>ret</span><span>;</span>
	<span>register</span> <span>long</span> <span>r10</span> <span>__asm__</span><span>(</span><span>"r10"</span><span>)</span> <span>=</span> <span>a4</span><span>;</span>
	<span>__asm__</span> <span>__volatile__</span> <span>(</span><span>"syscall"</span> <span>:</span> <span>"=a"</span><span>(</span><span>ret</span><span>)</span> <span>:</span> <span>"a"</span><span>(</span><span>n</span><span>),</span> <span>"D"</span><span>(</span><span>a1</span><span>),</span> <span>"S"</span><span>(</span><span>a2</span><span>),</span>
						  <span>"d"</span><span>(</span><span>a3</span><span>),</span> <span>"r"</span><span>(</span><span>r10</span><span>)</span><span>:</span> <span>"rcx"</span><span>,</span> <span>"r11"</span><span>,</span> <span>"memory"</span><span>);</span>
	<span>return</span> <span>ret</span><span>;</span>
<span>}</span>

<span>static</span> <span>__inline</span> <span>long</span> <span>__syscall5</span><span>(</span><span>long</span> <span>n</span><span>,</span> <span>long</span> <span>a1</span><span>,</span> <span>long</span> <span>a2</span><span>,</span> <span>long</span> <span>a3</span><span>,</span> <span>long</span> <span>a4</span><span>,</span> <span>long</span> <span>a5</span><span>)</span>
<span>{</span>
	<span>unsigned</span> <span>long</span> <span>ret</span><span>;</span>
	<span>register</span> <span>long</span> <span>r10</span> <span>__asm__</span><span>(</span><span>"r10"</span><span>)</span> <span>=</span> <span>a4</span><span>;</span>
	<span>register</span> <span>long</span> <span>r8</span> <span>__asm__</span><span>(</span><span>"r8"</span><span>)</span> <span>=</span> <span>a5</span><span>;</span>
	<span>__asm__</span> <span>__volatile__</span> <span>(</span><span>"syscall"</span> <span>:</span> <span>"=a"</span><span>(</span><span>ret</span><span>)</span> <span>:</span> <span>"a"</span><span>(</span><span>n</span><span>),</span> <span>"D"</span><span>(</span><span>a1</span><span>),</span> <span>"S"</span><span>(</span><span>a2</span><span>),</span>
						  <span>"d"</span><span>(</span><span>a3</span><span>),</span> <span>"r"</span><span>(</span><span>r10</span><span>),</span> <span>"r"</span><span>(</span><span>r8</span><span>)</span> <span>:</span> <span>"rcx"</span><span>,</span> <span>"r11"</span><span>,</span> <span>"memory"</span><span>);</span>
	<span>return</span> <span>ret</span><span>;</span>
<span>}</span>

<span>static</span> <span>__inline</span> <span>long</span> <span>__syscall6</span><span>(</span><span>long</span> <span>n</span><span>,</span> <span>long</span> <span>a1</span><span>,</span> <span>long</span> <span>a2</span><span>,</span> <span>long</span> <span>a3</span><span>,</span> <span>long</span> <span>a4</span><span>,</span> <span>long</span> <span>a5</span><span>,</span> <span>long</span> <span>a6</span><span>)</span>
<span>{</span>
	<span>unsigned</span> <span>long</span> <span>ret</span><span>;</span>
	<span>register</span> <span>long</span> <span>r10</span> <span>__asm__</span><span>(</span><span>"r10"</span><span>)</span> <span>=</span> <span>a4</span><span>;</span>
	<span>register</span> <span>long</span> <span>r8</span> <span>__asm__</span><span>(</span><span>"r8"</span><span>)</span> <span>=</span> <span>a5</span><span>;</span>
	<span>register</span> <span>long</span> <span>r9</span> <span>__asm__</span><span>(</span><span>"r9"</span><span>)</span> <span>=</span> <span>a6</span><span>;</span>
	<span>__asm__</span> <span>__volatile__</span> <span>(</span><span>"syscall"</span> <span>:</span> <span>"=a"</span><span>(</span><span>ret</span><span>)</span> <span>:</span> <span>"a"</span><span>(</span><span>n</span><span>),</span> <span>"D"</span><span>(</span><span>a1</span><span>),</span> <span>"S"</span><span>(</span><span>a2</span><span>),</span>
						  <span>"d"</span><span>(</span><span>a3</span><span>),</span> <span>"r"</span><span>(</span><span>r10</span><span>),</span> <span>"r"</span><span>(</span><span>r8</span><span>),</span> <span>"r"</span><span>(</span><span>r9</span><span>)</span> <span>:</span> <span>"rcx"</span><span>,</span> <span>"r11"</span><span>,</span> <span>"memory"</span><span>);</span>
	<span>return</span> <span>ret</span><span>;</span>
<span>}</span>
</code></pre></div>
<p>We have reached the bottom. These are 7 different functions that musl uses for making system calls on the x86_64 platform. Each of them takes a different number of arguments for the system call.</p>

<p>Each function has an __asm__ directive. This embeds inline assembly code into the machine language output of the compiler. We make system calls to the operating system by setting some CPU registers with our parameters, and executing the <code>syscall</code> instruction. Control then gets passed to the kernel, which reads our parameters and executes our system call.</p>

<h2 id="the-kernel">The kernel</h2>
<p>The Linux kernel now has to perform the action requested by the system call. The <code>write</code> system call tells the kernel to write to an opened file on the filesystem, or write to a stream, which is what we are doing in this case.</p>

<p>The <code>write</code> system call takes 3 parameters: the file descriptor to write to, the buffer to write, and the number of bytes to write. The <code>writev</code> system call used by musl is different, but lets focus on <code>write</code> for now.</p>

<p>So where exactly are we writing to?</p>
<div><pre><code><span>$ </span>ps
    PID TTY          TIME CMD
  15705 pts/0    00:00:00 bash
  23332 pts/0    00:00:00 ps
<span>$ </span><span>cd</span> /proc/15705/fd
<span>$ </span><span>readlink </span>1
/dev/pts/0
</code></pre></div>
<p>That depends.</p>

<p>In my case, I’m running the <code>hello</code> program in the GNOME terminal emulator, a graphical application. It appears to the kernel as a pseudo-terminal (pty). So the kernel saves our Hello World message in a buffer, and when the terminal emulator program runs, it reads it and displays it. Voila.</p>

<p>Of course, we aren’t done. The terminal emulator then has to render the text into a frame (potentially using the GPU to do it), send this frame to X server/compositor, which combines it with the other apps I have running (also using the GPU), like the text editor I’m using to write this, and sends it back to the kernel, which then displays it.</p>

<p>Sheesh. I glossed over a lot there, because it doesn’t matter and it may be completely different for you. Maybe you’re logged in remotely, in which case, the kernel sends your text to <code>sshd</code>, which then sends it (encrypted) back to the kernel in a packet to be sent over the internet. Maybe you’re using a physical terminal, connected to a serial-to-USB adapter. The kernel then has to put your text in a USB packet and send it down the line. Maybe you’re using the framebuffer console, which is the default way to interact with the OS if you don’t have a GUI installed. In that case, the kernel has to render to text into a frame and output that to the display.</p>

<p>The point is that it could be anything that happens next, and it really doesn’t matter what it is. Because your Hello World message being sent is only one system call, from one program, out of millions of system calls and thousands of programs running on your computer right now.</p>

<h2 id="conclusion">Conclusion</h2>
<p>So, modern software systems on today’s hardware are so complex and intricate that it really makes no sense to try and fully understand one little thing that your computer did. It’s clear that I glossed over a lot in order to explain everything that I did. I didn’t go over all the edge cases, additional information, and other things that the computer does. I didn’t explain how the kernel works. This is all stuff for other people to explain, or for you to learn about on your own time.</p>

<p>If you actually read this all the way through, congratulations. I’m sorry the ending maybe wasn’t as satisfying as you hoped. I’m happy someone found this interesting. I’m not quite sure why I wrote this, but it’s now after midnight so I should get some sleep.</p>

<p>Thank you for reading.</p>

<blockquote>
  <p>Hey, So how does a Hello World program actually work?</p>
</blockquote>

<blockquote>
  <p>Don’t ask.</p>
</blockquote>


      
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[TSMC Gets $11.6B in US Grants, Loans for Three Chip Fabs (105 pts)]]></title>
            <link>https://www.bloomberg.com/news/articles/2024-04-08/tsmc-gets-11-6-billion-in-us-grants-loans-for-three-chip-fabs</link>
            <guid>39967707</guid>
            <pubDate>Mon, 08 Apr 2024 09:07:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/articles/2024-04-08/tsmc-gets-11-6-billion-in-us-grants-loans-for-three-chip-fabs">https://www.bloomberg.com/news/articles/2024-04-08/tsmc-gets-11-6-billion-in-us-grants-loans-for-three-chip-fabs</a>, See on <a href="https://news.ycombinator.com/item?id=39967707">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
    <section>
        <h3>Why did this happen?</h3>
        <p>Please make sure your browser supports JavaScript and cookies and that you are not
            blocking them from loading.
            For more information you can review our <a href="https://www.bloomberg.com/notices/tos">Terms of
                Service</a> and <a href="https://www.bloomberg.com/notices/tos">Cookie Policy</a>.</p>
    </section>
    <section>
        <h3>Need Help?</h3>
        <p>For inquiries related to this message please <a href="https://www.bloomberg.com/feedback">contact
            our support team</a> and provide the reference ID below.</p>
        <p>Block reference ID:</p>
    </section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Building a Managed Postgres Service in Rust (123 pts)]]></title>
            <link>https://tembo.io/blog/managed-postgres-rust</link>
            <guid>39967199</guid>
            <pubDate>Mon, 08 Apr 2024 07:40:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tembo.io/blog/managed-postgres-rust">https://tembo.io/blog/managed-postgres-rust</a>, See on <a href="https://news.ycombinator.com/item?id=39967199">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>  <p>Tembo was founded in December 2022 with a mission to make the best Postgres service to deploy extensions. That mission has evolved since then to provide <a href="https://tembo.io/blog/tembo-stacks-intro">optimized Postgres instances</a> for your workload, but let’s go back to the start. At the very minimum, we wanted our users to be able to come to <a href="https://cloud.tembo.io/">Tembo Cloud</a>, create a new Postgres instance, install Postgres extensions into that instance, and connect to that Postgres instance over the public internet.</p>
<p>With this early vision in place, we started to sketch out an architecture for our product. Drawing inspiration from other <a href="https://developer.confluent.io/courses/confluent-cloud-networking/overview/#:~:text=There%20are%20two%20main%20ways,maintenance%2C%20and%20operations%20take%20place.">cloud platforms</a>, we quickly decided that we would architect the platform with two high-level components—a control-plane and a data-plane. Two early assumptions were that 1) there could be  many data-planes per control-plane, and 2) the control-plane may not always be able to reach the data plane (for example if the data-plane’s network is private, dedicated for one customer). So, these two components must stay highly decoupled. Making the decision to decouple the infrastructure enabled us to move quickly in the control-plane without risk of impacting the managed infrastructure in the data-plane.</p>
<p><img src="https://tembo.io/_astro/p0.tzDrOqDa_ZUbCoC.webp" alt="alt_text" title="image_tooltip" width="1651" height="458" loading="lazy" decoding="async"></p>
<h2 id="the-control-plane">The Control Plane</h2>
<p>The initial version of the control-plane consisted of just a web UI and a HTTP server. The HTTP server serves the purpose of handling Create, Read, Update, and Delete (CRUD) requests for Tembo instances. The server’s GET endpoints do things like list all the instances that belong to an organization or list all the attributes and configurations for a specific instance. PATCH routes handle updating instances with operations like restarting, installing an extension, or changing a configuration.</p>
<p>All state is persisted in a Postgres instance dedicated to the control-plane. This includes all metadata related to instances in the platform such as their infrastructure requirements (cpu / mem / storage), Postgres extensions installed, and any custom configurations applied to the instance.</p>
<p>Tembo’s clients, the web UI (hosted at <a href="https://cloud.tembo.io/">cloud.tembo.io</a>), the <a href="https://github.com/tembo-io/terraform-provider-tembo">Tembo Terraform provider</a>, and the <a href="https://github.com/tembo-io/tembo/tree/main/tembo-cli">Tembo CLI</a> all communicate with the control-plane through an <a href="https://tembo.io/docs/development/api">HTTP interface</a>.</p>
<p><img src="https://tembo.io/_astro/p1.ouSGuyRX_Z15AocW.webp" alt="alt_text" title="image_tooltip" width="974" height="461" loading="lazy" decoding="async"></p>
<h2 id="a-finite-state-machine">A Finite State Machine</h2>
<p>Managing the lifecycle of Postgres, infrastructure, and its related services is complex. For example, many operations in Postgres require restarts (e.g. changing <code>shared_preload_libraries</code>) and can be highly disruptive. Other changes should be multi-step; for example, a user may be required to suspend or pause an instance before deleting it. Simple HTTP request validation was not enough to model the state changes, and transitions would not only happen on requests. <a href="https://www.citusdata.com/blog/2016/08/12/state-machines-to-run-databases/">Others have implemented</a> state machines to help facilitate the management of databases, which originally led us down this path.</p>
<p>Transitions are events that move an instance from one state to another. These can be thought of as events. For example, when instances are first created they are in the “Submitted” state. When that instance receives a “Created” event back from the data-plane, it can transition to “Up”. Likewise, “Up” instances can move to a “Configuring” state when they receive “Update” events, and do not transition back to “Up” until their configuration is reported as complete via an “Updated” event. Error events can transition an instance into an error state and instances can recover out of an error state when recovered.</p>
<p>The early iterations of the platform were more restrictive on state transitions. We modeled our state transition, as shown below, before implementing the first version of our state machine. As we’ve added more functionality, it has significantly evolved and become less restrictive. For example, instances can now be deleted and configuration changes can be requested from any state. The Stopping and Stopped states were temporarily disabled during the migration from our own Postgres operator to the CNPG Operator. Read more on the Operator decision in our <a href="https://tembo.io/blog/tembo-operator">Tembo Operator blog post</a>. The ability to suspend or stop a Tembo instance is also being added soon.</p>
<p><img src="https://tembo.io/_astro/fsm.Rf3dkXX9_Z1vOSe3.webp" alt="fsm" title="fsm" width="1274" height="781" loading="lazy" decoding="async"></p>
<h2 id="fsm-in-rust">FSM in Rust</h2>
<p>The majority of the Tembo platform is written in Rust, and the state machine is no different. All possible states of a Tembo instance are represented as variants of a single Enum. At any moment in time, a Tembo instance is in exactly one state. This state is persisted in a Postgres instance dedicated to the control-plane.</p>
<pre tabindex="0"><code><span><span>pub</span><span> enum</span><span> State</span><span> {</span></span>
<span><span>   Configuring</span><span>,</span></span>
<span><span>   Deleted</span><span>,</span></span>
<span><span>   Deleting</span><span>,</span></span>
<span><span>   Error</span><span>,</span></span>
<span><span>   Restarting</span><span>,</span></span>
<span><span>   Starting</span><span>,</span></span>
<span><span>   Stopped</span><span>,</span></span>
<span><span>   Stopping</span><span>,</span></span>
<span><span>   Submitted</span></span>
<span><span>   Up</span><span>,</span></span>
<span><span>}</span></span></code></pre>
<p>The transitions between states can be arbitrarily complex. For example, installation of certain extensions requires Postgres to be restarted, while others do not. Therefore, an Update event on an instance in the Up state could result in an instance transitioning to either a Configuring state or the Restarting state. Invalid state transitions result in an error and no transition in state.</p>
<p>Below is a subset of the transition definitions implemented into the Tembo finite state machine that were created with these complexities in mind. Any existing State can attempt to transition to the next state by calling next() on itself, along with the event type and the instance itself. The transition is defined as the pair of the current state and the Event type. As mentioned earlier, arbitrary transition logic can be applied on the transitions but it is not required. For example, <code>(State::Up, Event::Restarted) =&gt; Ok(State::Up)</code> defines the transition from Submitted to Up, via a Restarting event.</p>
<pre tabindex="0"><code><span><span>impl</span><span> State</span><span> {</span></span>
<span><span>   pub</span><span> fn</span><span> next</span><span>(</span></span>
<span><span>       self</span><span>,</span></span>
<span><span>       event</span><span>:</span><span> Event</span><span>,</span></span>
<span><span>       instance</span><span>:</span><span> &amp;</span><span>Instance</span><span>,</span></span>
<span><span>   ) </span><span>-&gt;</span><span> Result</span><span>&lt;</span><span>State</span><span>, </span><span>StateError</span><span>&gt; {</span></span>
<span><span>       match</span><span> (</span><span>self</span><span>, event) {</span></span>
<span><span>           (</span><span>State</span><span>::</span><span>Up</span><span>, </span><span>Event</span><span>::</span><span>Restarted</span><span>) </span><span>=&gt;</span><span> Ok</span><span>(</span><span>State</span><span>::</span><span>Up</span><span>),</span></span>
<span><span>           (</span><span>State</span><span>::</span><span>Up</span><span>, </span><span>Event</span><span>::</span><span>Update</span><span>) </span><span>=&gt;</span><span> {</span></span>
<span><span>               let</span><span> desired </span><span>=</span><span> Some</span><span>(instance</span><span>.</span><span>clone</span><span>()</span><span>.</span><span>desired_spec);</span></span>
<span><span>               let</span><span> actual </span><span>=</span><span> instance</span><span>.</span><span>clone</span><span>()</span><span>.</span><span>actual_spec;</span></span>
<span><span>               match</span><span> restart</span><span>::</span><span>restart_expected</span><span>(</span><span>&amp;</span><span>desired, </span><span>&amp;</span><span>actual)</span><span>.await</span><span> {</span></span>
<span><span>                   true</span><span> =&gt;</span><span> Ok</span><span>(</span><span>State</span><span>::</span><span>Restarting</span><span>),</span></span>
<span><span>                   false</span><span> =&gt;</span><span> Ok</span><span>(</span><span>State</span><span>::</span><span>Configuring</span><span>),</span></span>
<span><span>               }</span></span>
<span><span>           }</span></span>
<span><span>           (</span><span>State</span><span>::</span><span>Up</span><span>, </span><span>Event</span><span>::</span><span>Updated</span><span>) </span><span>=&gt;</span><span> Ok</span><span>(</span><span>State</span><span>::</span><span>Up</span><span>),</span></span>
<span><span>           (</span><span>State</span><span>::</span><span>Restarting</span><span>, </span><span>Event</span><span>::</span><span>Restarted</span><span>) </span><span>=&gt;</span><span> Ok</span><span>(</span><span>State</span><span>::</span><span>Restarting</span><span>),</span></span>
<span></span>
<span><span>           … other state transitions …</span></span>
<span></span>
<span><span>           (</span><span>State</span><span>::</span><span>Deleted</span><span>, _) </span><span>=&gt;</span><span> Err</span><span>(</span><span>StateError</span><span>::</span><span>IllegalTransition</span><span>(</span></span>
<span><span>               format!</span><span>(</span><span>"instance {} is deleted"</span><span>, instance</span><span>.</span><span>instance_id)</span><span>.</span><span>to_owned</span><span>(),</span></span>
<span><span>           )),</span></span>
<span><span>           // undefined states</span></span>
<span><span>           (s, e) </span><span>=&gt;</span><span> Err</span><span>(</span><span>StateError</span><span>::</span><span>UndefinedTransition</span><span>(</span><span>format!</span><span>(</span></span>
<span><span>               "Invalid state-event combination: state: {s:#?} =&gt; event:{e:#?}"</span></span>
<span><span>           ))),</span></span>
<span><span>       }</span></span>
<span><span>   }</span></span>
<span><span>}</span></span></code></pre>
<p>With a finite state machine in place, all CRUD requests pass through basic HTTP request validation and state transitions are validated before any database change is applied. All valid state change requests are emitted as a CRUD event to the data-plane.</p>
<p><img src="https://tembo.io/_astro/p2.Y0laSeuF_1SwGW3.webp" alt="alt_text" title="image_tooltip" width="972" height="353" loading="lazy" decoding="async"></p>
<h2 id="buffer-tasks-between-the-planes">Buffer tasks between the planes</h2>
<p>The task duration for processing events in the data-plane is quite variable. For example, creating a new instance could take seconds to minutes depending on whether an image is cached on a node or whether Kubernetes needs to add a new node to the cluster in order to deploy the instance. Once an instance is created, events like installing an extension could happen within seconds for a small extension. Changing a configuration could happen in milliseconds for a simple change like changing the <code>search_path</code>. In the case of a <code>shared_preload_libraries</code> change, it could take several seconds to over a minute since Postgres will also need to be restarted.</p>
<p>Implementing a queue for these tasks allows us to buffer these requests, and allows the data-plane to determine when and how often tasks are retried. Further, implementing a queue means that complete outages in either the control-plane or the data-plane do not immediately cause system failures (though the queues will begin to build up).</p>
<p>As a Postgres company, like many others (<a href="https://dagster.io/blog/skip-kafka-use-postgres-message-queue">Dagster</a> and <a href="https://www.crunchydata.com/blog/message-queuing-using-native-postgresql">Crunchy Data</a> as a couple examples) we implemented the queue on Postgres. It was initially built as a Rust crate to fit with our tech stack, but we quickly realized that we could share the implementation with all Postgres users if it lived as an extension, so we <a href="https://tembo.io/blog/introducing-pgmq">released it as PGMQ</a>.</p>
<p><img src="https://tembo.io/_astro/p0.tzDrOqDa_ZUbCoC.webp" alt="alt_text" title="image_tooltip" width="1651" height="458" loading="lazy" decoding="async"></p>
<h2 id="conducting-events-in-the-data-plane">Conducting events in the data-plane</h2>
<p>After the control-plane sends CRUD events to PGMQ, <a href="https://github.com/tembo-io/tembo/tree/main/conductor">Conductor</a>, the service that handles all execution of orders from the control-plane and into the data-plane, processes them. Conductor has a critical job but a narrow set of responsibilities. It reads the Spec for an instance from the queue, then applies the updated resources by communicating with the Kubernetes API. It may create new Tembo instances or otherwise can update, restart, or delete instances. All of the operations applied by Conductor are ultimately applied to Tembo instances via the <a href="https://github.com/tembo-io/tembo/tree/main/tembo-operator">Tembo Operator</a>.</p>
<p>Read more about our Kubernetes footprint in the <a href="https://tembo.io/blog/tembo-operator">Tembo Operator Blog Post</a> from October 2023.</p>
<h2 id="closing-the-loop">Closing the loop</h2>
<p>The control-plane receives state events from the data-plane via the queue. These state events are then persisted to the control-plane’s Postgres database. Additionally, further reconciliation between the user’s desired state of an instance and the actual state of the instance happens here. For certain transitions, when the desired state does not equal the actual state, events are resent to the data-plane. In other cases, errors are logged and alerts are triggered.</p>
<p><img src="https://tembo.io/_astro/p3.Faxyta6Z_ZcrU5N.webp" alt="alt_text" title="image_tooltip" width="1181" height="253" loading="lazy" decoding="async"></p>
<p>We continue to iterate on our platform. The Kubernetes operator, Conductor and rest of the services that make up the data-plane are open source and can be explored on <a href="https://github.com/tembo-io/tembo/">Github</a>.</p>
<h2 id="moving-forward">Moving forward</h2>
<p>Enjoying learning about the decisions and thought processes behind building a managed Postgres service using Rust? There’s more to come - stay tuned for the next blog post in this series.</p>
<p>We are hiring for a variety of platform and product roles. If making decisions and solving challenges like these sounds interesting to you, reach out to us at <a href="mailto:careers@tembo.io">careers@tembo.io</a> to apply. If you have suggestions on how we could improve our platform, reach out and talk to us on <a href="https://join.slack.com/t/tembocommunity/shared_invite/zt-293gc1k0k-3K8z~eKW1SEIfrqEI~5_yw">Slack</a>.</p>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Just How Much Faster Are the Gnome 46 Terminals? (471 pts)]]></title>
            <link>https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/</link>
            <guid>39966918</guid>
            <pubDate>Mon, 08 Apr 2024 06:49:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/">https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/</a>, See on <a href="https://news.ycombinator.com/item?id=39966918">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="single">
    

    <p><span>
          Apr 6, 2024 12:00
        </span>
        <span>
          ·
        </span>
        <span>
          
            2408 words
          
        </span>
        <span>
          ·
        </span>
        <span>
          12 minute read
        </span>
    </p>

    <div>
      <p><a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/header.jpg">
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/header.jpg" alt="">
</a>
</p>
<p><a href="https://gitlab.gnome.org/GNOME/vte">VTE</a> (Virtual TErminal library) is the library underpinning various GNOME terminal emulators.
It provides a GTK widget that shows a terminal view, which is used in apps like <a href="https://gitlab.gnome.org/GNOME/gnome-terminal">GNOME Terminal</a>, <a href="https://gitlab.gnome.org/GNOME/console">Console</a>, <a href="https://gitlab.gnome.org/raggesilver/blackbox">Black Box</a>, <a href="https://github.com/gnunn1/tilix">Tilix</a>, <a href="https://github.com/gnome-terminator/terminator">Terminator</a>, <a href="https://gitlab.gnome.org/chergert/ptyxis">Ptyxis</a>, and others.
It also powers embedded terminals in <a href="https://gitlab.gnome.org/GNOME/gnome-builder">Builder</a> and <a href="https://github.com/workbenchdev/Workbench">Workbench</a>.</p>
<p>Over the GNOME&nbsp;46 cycle, VTE has seen a <em>lot</em> of performance improvements.
Christian Hergert mentioned some of them in his blog posts <a href="https://blogs.gnome.org/chergert/2023/10/03/vte-performance-improvements/">about VTE</a> and <a href="https://blogs.gnome.org/chergert/2024/03/25/gnome-45-46-retrospective/">about his work in GNOME&nbsp;46</a>.
But how much did the performance actually improve?
What should you, the user, expect to <em>feel</em> after installing a fresh <a href="https://fedoraproject.org/">Fedora</a> 40 update and launching your favorite terminal?</p>
<p>Let’s measure and find out!
If you don’t have time for measuring, you can <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/#input-latency-tests">skip</a> straight to the finding out.</p>
<h2 id="what-are-we-measuring">What Are We Measuring? <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/#what-are-we-measuring">#</a></h2><p>There is no shortage of ways to define “performance”, especially when it comes to terminal emulators.
One of the more tangible metrics is <em>input latency</em>.
Roughly, it describes how quickly the program reacts to your actions: how much time passes from the moment you press a key on your keyboard to the change in color of the pixels on your monitor.
Apps with low input latency feel snappy, whereas apps with high input latency can feel sluggish.</p>
<p>When the input latency is small-ish, you can get used to it and think it feels <em>fine</em>.
However, comparing lower and higher input latency together (for example, by switching between two apps and typing in both) can make it quite noticeable.
If you’ve ever heard people say they can’t go back to a 60&nbsp;Hz monitor after trying out 144&nbsp;Hz, that’s a similar effect (and input latency is partially responsible).</p>
<p>So, how do you measure it?</p>
<h3 id="measuring-input-latency">Measuring Input Latency <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/#measuring-input-latency">#</a></h3><p>There are tools like <a href="https://pavelfatin.com/typometer/">Typometer</a> that measure the input latency in software by detecting key press events and recording the screen to detect a change in pixel color.
This can work reasonably well but requires fiddling with your setup to make sure you’re not accidentally introducing any biases.
For example, a screen capture API may return the new pixel colors a few milliseconds before or after they are shown on the monitor, depending on the system setup, and you need to be aware of this when trying to measure something to a millisecond precision.</p>
<p>I’ve got something more interesting, a hardware input latency tester!
It consists of a light sensor attached to a <a href="https://www.pjrc.com/store/teensy32.html">Teensy</a> board, which in turn is plugged into the computer via USB.</p>
<figure>
    <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/latency-tester.jpg">
    
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/latency-tester.jpg" width="300" alt="Photo of the latency tester.">
    
    </a>
    <figcaption>
        
    </figcaption>
</figure>

<p>I should really get around to writing a full blog post about this latency tester, but for now, you should read <a href="https://thume.ca/2020/05/20/making-a-latency-tester/">this post by Tristan Hume</a> about building a similar device.<sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup>
I used that post as a reference for building mine, but I wrote <a href="https://gist.github.com/YaLTeR/8e8bd0cddb324a9e372b32e742ff992a">my own firmware</a> and analysis scripts (these I am <em>not</em> sharing until they are less of an utter mess).</p>
<p>The main benefit of such a device is that it allows you to measure a full end-to-end input latency, including processing time in the kernel, the compositor, the application, and then the response time of the monitor itself.
You are measuring what you really see and feel, excluding only the keyboard firmware (since the latency tester sends key press events directly over USB).
There’s also very little extra load on the system, especially compared to using something like a screen capture API.</p>
<p>Here’s a gist of how it works.
The light sensor is aimed at a specific, small area on the monitor, which will be affected by the key press (in our case, a specific character cell in the terminal).
The board sends a key press over USB (for example, Space) and starts monitoring the light sensor readings.
As soon as it detects a jump in the light amount, it releases the key.
Then, it presses a second key (for example, Backspace) and waits for the light to change back.
Now we’re back to square one; the firmware waits a randomized amount (to prevent “snapping” to the monitor refresh rate) and repeats the experiment.</p>
<p>During all of this process, the board dumps light sensor readings over a serial port as fast as it can manage (I’m getting about 35,500 readings per second with my current board and firmware).
On the computer, I save all of this data into a file for offline analysis with Python code.
This analysis code finds the timestamp where the light starts to change, and subtracts it from the timestamp of the key press, to get one input latency measurement.</p>
<p>I then aggregate the measurements and plot them with <a href="https://seaborn.pydata.org/">seaborn</a>.
Here’s an example of what the result looks like:</p>
<figure>
    <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/example-latency.png">
    
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/example-latency.png" width="200">
    
    </a>
    <figcaption>
        
    </figcaption>
</figure>

<h3 id="input-latency-plots">Input Latency Plots <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/#input-latency-plots">#</a></h3><p>Let’s explore what you can find on this latency plot.</p>
<figure>
    <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/example-latency-breakdown.png">
    
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/example-latency-breakdown.png" width="500">
    
    </a>
    <figcaption>
        
    </figcaption>
</figure>

<p>The small black dots represent the individual measurements.
As in, every dot shows a real amount of time that had passed between one key press and the corresponding change in light on the sensor.
There are 120 of these dots since I repeat each test 120 times.</p>
<p>Looking at the dots can confirm that the data is sensible.
We expect the bulk of the measurements to be spread uniformly across an interval roughly the size of one monitor repaint cycle.
This is because monitors generally repaint at a constant rate, and pressing a key at a random point in time should land us in a random point of the repaint cycle.
We get the lowest latency if the application renders a new frame in response right in time for the monitor to show it.
And we get the highest latency when the application finishes rendering a new frame <em>just</em> missing the monitor deadline, having to wait one extra repaint cycle for the pixel colors to change.</p>
<p>In the example above, the dots are spread over 7–8&nbsp;ms, which is about equal to the ~6.94&nbsp;ms refresh cycle of my 144&nbsp;Hz monitor.</p>
<p>High outliers in the dots, or a larger spread, indicate lag or slowness of the application under test: some key presses are taking longer than others to process.</p>
<p>We do not expect to see any gaps between dot clusters.
They would usually indicate aliasing with the monitor repaint cycle, or some frame scheduling bug in the compositor.<sup id="fnref:2"><a href="#fn:2" role="doc-noteref">2</a></sup></p>
<p>The box shows statistics over the individual measurements:</p>
<ul>
<li>median (a measurement perfectly “in the middle” with half of the measurements lower and half of the measurements higher),</li>
<li>lowest and highest measurement,</li>
<li>25th and 75th percentiles (with 25% and 75% of the measurements lower than the line, respectively).</li>
</ul>
<p>All in all, you can compare applications by their spread, then by the median latency, and also look if there are any outliers.</p>
<p>With all that said, we’re <em>almost</em> ready to look at some results.
I just need to tell you what exactly I was measuring the latency of.</p>
<h2 id="test-setup">Test Setup <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/#test-setup">#</a></h2><p>I did all tests on this system:</p>
<ul>
<li><a href="https://www.lenovo.com/us/en/p/laptops/legion-laptops/legion-7-series/legion-7-gen-7-%2816-inch-amd%29/len101g0017">Lenovo Legion 7 Gen 7 AMD</a> with Ryzen 7 6800H CPU and Radeon RX 6700M dGPU (using the dGPU exclusively via the MUX switch).</li>
<li>Monitor: <a href="https://www.acer.com/il-en/monitors/gaming/nitro-xv0/pdp/UM.JX0EE.V01">Acer Nitro XV320QU</a>, 2560×1440, 144&nbsp;Hz, using 100% scale.</li>
<li>Host: Fedora&nbsp;40 Silverblue Beta, Mesa&nbsp;24.0.4.</li>
<li>Compositor: raw Mutter&nbsp;46.0.</li>
</ul>
<p>What is raw Mutter, you may ask?
Well, Mutter is the compositor that GNOME Shell builds on top of.
Turns out, you can start Mutter on its own, without GNOME Shell, by switching to a different VT and running a command like <code>mutter --display-server -- alacritty</code>.
This gives you a very bare-bones environment that is only really meant for testing.
It is, however, quite useful for benchmarking, as it represents something close to a zero-overhead GNOME Shell ideal case.</p>
<p>I’m testing several terminal applications.
In the order of appearance on the plots, they are:</p>
<ul>
<li><a href="https://github.com/alacritty/alacritty">Alacritty</a>: not VTE-based; serves as a baseline of sorts, because it is consistently one of the fastest terminals according to <a href="https://mastodon.online/@YaLTeR/110837121102628111">all of my prior tests</a>.</li>
<li><a href="https://gitlab.gnome.org/GNOME/console">Console</a>: GTK&nbsp;4, the default terminal in GNOME.<sup id="fnref:3"><a href="#fn:3" role="doc-noteref">3</a></sup></li>
<li><a href="https://gitlab.gnome.org/GNOME/vte/-/tree/0.76.0/src/app">VTE Test App</a>: GTK&nbsp;4, a test terminal that lives in the VTE repository.</li>
<li><a href="https://gitlab.gnome.org/GNOME/gnome-terminal">GNOME Terminal</a>: GTK&nbsp;3,<sup id="fnref:4"><a href="#fn:4" role="doc-noteref">4</a></sup> used to be the default in GNOME, and is still shipped out of the box in several distributions.</li>
</ul>
<p>Since the intention is to compare GNOME&nbsp;45 to GNOME&nbsp;46, I used <a href="https://containertoolbx.org/">toolb<span>\0</span>x</a> containers with Fedora&nbsp;39 and Fedora&nbsp;40 to install and run all terminals above, as packaged by Fedora with no extra tweaks.</p>
<p>I ran the terminals one by one and put their windows in the top left corner of the monitor.
The mouse cursor was outside the window for all tests.<sup id="fnref:5"><a href="#fn:5" role="doc-noteref">5</a></sup></p>
<h2 id="input-latency-tests">Input Latency Tests <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/#input-latency-tests">#</a></h2><p>The first test is simple: I run <code>cat &gt; /dev/null</code> to get an input field with no readline or similar processing, and then I measure how long it takes for the terminal to move its block cursor one cell to the right after pressing Space.</p>
<p>This is meant to test the best possible scenario for the terminal, with the least overhead.</p>
<p>This is what the test process looks like:</p>
<figure>
    <video controls="" src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/test-kgx-cat.mp4"></video>
    <figcaption>
        
    </figcaption>
</figure>

<p>And here are the results:</p>
<p><a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/all-cat.png">
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/all-cat.png" alt="">
</a>
</p>
<p>Alacritty, which is our baseline, did not change from F39 to F40, as expected.</p>
<p>But look at the massive improvement on all of the VTE terminals!
They went from <em>quite bad</em> to pretty much on par with Alacritty, even the GTK&nbsp;3 GNOME Terminal is very close.</p>
<p>The main change that caused this much improvement is likely <a href="https://gitlab.gnome.org/GNOME/vte/-/commit/c17d9c6b4571be0ab55c3818d9125233553bb7ee">this one by Christian</a> that moves away from a 40&nbsp;Hz VTE repaint timer to drawing every frame, synchronized with the monitor, as any self-respecting GTK widget should do.</p>
<p>Console has a few outliers which are <em>maybe</em> caused by its process tracking, but those are nothing new (they may be looked into for GNOME&nbsp;47).</p>
<p>For the next test, I constructed a more realistic case.
I took <a href="https://github.com/YaLTeR/dotfiles/tree/d3976398058f2f5b6eee57c7e656ee8e7f098ac5/common/.config/_nvim_latency">a snapshot of my neovim setup</a> and opened the README from <a href="https://gitlab.gnome.org/chergert/ptyxis">Ptyxis</a>.
I then strategically replaced a square of text with Unicode full-block characters to provide a bright “landing pad” for the light sensor.</p>
<figure>
    <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/test-kgx-nvim.png">
    
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/test-kgx-nvim.png" width="480">
    
    </a>
    <figcaption>
        
    </figcaption>
</figure>

<p>The test consists of repeatedly pressing Ctrl+D and Ctrl+U to scroll the text buffer down and up in neovim.
The light sensor alternates between an empty line (dark) and the full-block landing pad (bright).
The neovim setup has a bunch of bells and whistles, so the terminal gets to have fun drawing the various underlines, undercurls, gutter icons, and the statusline.</p>
<p>This is what the test process looks like:</p>
<figure>
    <video controls="" src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/test-kgx-nvim.mp4"></video>
    <figcaption>
        
    </figcaption>
</figure>

<p>Here are the results:</p>
<p><a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/all-nvim.png">
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/all-nvim.png" alt="">
</a>
</p>
<p>The massive improvement is clear on this test too, and our GNOME&nbsp;46 terminals are still pretty much on par with Alacritty!</p>
<p>Finally, let’s take a closer look at all Fedora&nbsp;40 results on one plot:</p>
<p><a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/all-f40.png">
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/all-f40.png" alt="">
</a>
</p>
<p>This plot shows how much of a latency toll the neovim test takes compared to a simple <code>cat</code>, but the latency increase is similar across all terminals.</p>
<h2 id="vtebench">vtebench <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/#vtebench">#</a></h2><p>I also ran Alacritty’s <a href="https://github.com/alacritty/vtebench">vtebench</a> suite across the same set of applications and configurations.
This is a fully automated benchmark that measures something <em>completely different</em> from input latency: PTY read and parsing performance.
<del>It has also proven quite capable at finding <a href="https://gitlab.gnome.org/GNOME/vte/-/issues/2747">crashes</a> in VTE.</del></p>
<p>Here’s what vtebench’s README has to say:</p>
<blockquote>
<p>This benchmark is not sufficient to get a general understanding of the performance of a terminal emulator. It lacks support for critical factors like frame rate or latency. The only factor this benchmark stresses is the speed at which a terminal reads from the PTY. If you do not understand what this means, please do not jump to any conclusions from the results of this benchmark.</p>
</blockquote>
<p>The repaint duration can and does affect the results of this test, especially for terminals that read and parse PTY on the same thread as they run their repaint logic, like VTE.</p>
<p>This is what one of the vtebench benchmarks looks like:</p>
<p><a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/vtebench-kgx.jpg">
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/vtebench-kgx.jpg" alt="">
</a>
</p>
<p>And here are the results:</p>
<figure>
    <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/vtebench.png">
    
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/vtebench.png">
    
    </a>
    <figcaption>
        <p>To avoid making this plot even busier, I drew the green arrows on only one of the benchmarks.
As you can see, other benchmarks show a similar trend.</p>

    </figcaption>
</figure>

<p>VTE from GNOME&nbsp;46 shows some welcome improvements here too, although a lot more varied, and not quite on par with Alacritty (which renders in a separate thread from reading and parsing).
These improvements likely come from the many other optimizations that happened in VTE during the GNOME&nbsp;46 cycle.</p>
<p>Note that I omitted two benchmarks from these results: <code>dense_cells</code> and <code>unicode</code>.
They are the main stress tests of vtebench that hit the terminal really hard.
Unfortunately, VTE still struggles with them and shows a huge spread, which pushes the rest of the results down and makes the plot less readable.</p>
<details>
    <summary>Open this to see the full results if you’re curious.</summary>
    <p><a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/vtebench-full.png">
    <img src="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/vtebench-full.png" alt="">
</a>
</p>

</details>

<h2 id="conclusion">Conclusion <a href="https://bxt.rs/blog/just-how-much-faster-are-the-gnome-46-terminals/#conclusion">#</a></h2><p>VTE had a round of massive performance improvements in GNOME&nbsp;46 which manifest as something you can really feel during normal terminal use.
The input latency is down to almost matching the fastest terminals, even in a non-trivial neovim setup with lots of complexity on screen.</p>
<p>The remaining difference, at least on these test cases, is close to negligible.
Some of it can be explained by VTE doing a bit more extra work for accessibility (enabled in GNOME Terminal and currently disabled in the GTK&nbsp;4 terminals), scrollbar calculations, and other features.</p>
<p>If you’ve been avoiding VTE-based terminals due to <em>sluggishness</em> and input lag, now is the time to give them another chance.
Just make sure you’re running VTE&nbsp;0.76, which includes all of this goodness.</p>
<p>Huge thanks to the VTE maintainers and contributors for making this a reality, and congratulations on an awesome release!</p>
<p>P.S. If you’re curious about Ptyxis or the behavior of GTK’s NGL vs. NVK vs. GL renderers, they all perform similarly to the F40 VTE Test App results shown above.
I did more extensive benchmarks of these a month ago, you can find them <a href="https://gitlab.gnome.org/-/snippets/6439">here</a>.</p>


    </div>

    
        
    
    
    

</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Spotify demonetizes all tracks under 1k streams (331 pts)]]></title>
            <link>https://djmag.com/news/spotify-officially-demonetises-all-tracks-under-1000-streams</link>
            <guid>39966743</guid>
            <pubDate>Mon, 08 Apr 2024 06:19:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://djmag.com/news/spotify-officially-demonetises-all-tracks-under-1000-streams">https://djmag.com/news/spotify-officially-demonetises-all-tracks-under-1000-streams</a>, See on <a href="https://news.ycombinator.com/item?id=39966743">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="content" role="main">
<a id="main-content"></a>
<div id="block-djmag-content">
<article>

<div>
<div role="text">
<p>Spotify has officially demonetised all tracks with under 1,000 streams. The new policy came into effect for all artists in 1st April 2024.&nbsp;</p>
<p>The revised revenue scheme was <a href="https://djmag.com/news/spotify-confirms-new-royalty-policy-eliminating-payments-tracks-under-1000-streams">announced last year</a>, and means music will only be included in the royalty pool calculation if it passes a threshold of 1,000 plays in the preceding 12 months. According to a Spotify <a href="https://artists.spotify.com/en/blog/modernizing-our-royalty-system" target="_blank" rel="noreferrer external nofollow">blog post</a>, 99.5% of all streams on the platform are of tracks that have above that many plays, with the platform claiming that these tracks will now earn more as a result.&nbsp;</p>
</div>
<div role="text">
<p>Additionally, Spotify now requires a minimum number of unique listeners for royalties to apply. This attempt to stop "further manipulation by bad actors" targets people using automatic and artificial plays to ramp up stream counts. Meanwhile, "functional" genres, such as white noise, are being targeted, too. Whereas before these types of recordings could generate income from as little as 30 seconds of play, this has now been increased to two minutes.&nbsp;</p>
<p>However, the change has been met with anger and frustration from some corners of the music industry. This week, United Musicians and Allied Workers shared a post on X which suggested those numbers could be wildly overstated,&nbsp;arguing that 86% of all content on Spotify will now fail to meet the criteria for royalties based on play count.&nbsp;</p>
</div>

<div role="text">
<p>United Musicians and Allied Workers recently&nbsp;spearheaded the Make Streaming Pay initiative, demanding fairer revenue split for artists using platforms including Spotify and Apple Music. The campaign is behind a new <a href="https://djmag.com/news/living-wage-musicians-bill-aims-increase-streaming-royalties-artists">Living Wage For Musicians Bill</a>, which was introduced to US congress in March and aims to "ensure that artists and musicians can build sustainable careers in the digital age". You can find out more about this <a href="https://weareumaw.org/make-streaming-pay" target="_blank" rel="noreferrer external nofollow">here</a>.&nbsp;</p>
<p>While political and public pressure for better royalty payments grows, Spotify is looking to bring in more revenue to plug its own shortfall. Since going public on the stock market in 2018, the company has lost money every year. Just this week, it was reported that the streaming giant has confirmed intentions to <a href="https://www.bloomberg.com/news/articles/2024-04-03/spotify-is-changing-how-it-charges-customers-with-new-plans-and-prices?utm_medium=email&amp;utm_source=newsletter&amp;utm_term=240403&amp;utm_campaign=author_18846812&amp;embedded-checkout=true" target="_blank" rel="noreferrer external nofollow">revise and increase its pricing.</a></p>
<p>Between $1 and $2 will be added to monthly bills for customers in several territories,&nbsp;including the UK, Australia, and Pakistan, <em>Bloomburg&nbsp;</em>reports. This is said to cover the cost of audiobooks, added to the platform late-2023. More recently, <a href="https://djmag.com/tech/spotify-adds-video-learning-content-music-performance-and-production">video learning content</a> was introduced to further diversify the offering. A&nbsp;new basic tier package will be rolled out for those who do not want to access audiobooks, the first of several updated pricing options. This news led to a 4.6% jump in Spotify's share value, although it's unclear what the long-term impact will be.</p>
</div>


</div>
</article>
</div>


</section><div id="block-views-block-related-content-related-content" role="contentinfo">
<p>
<h3>Related Content</h3>
</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Beyond text splitting – improved file parsing for LLM's (181 pts)]]></title>
            <link>https://github.com/Filimoa/open-parse</link>
            <guid>39966534</guid>
            <pubDate>Mon, 08 Apr 2024 05:41:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Filimoa/open-parse">https://github.com/Filimoa/open-parse</a>, See on <a href="https://news.ycombinator.com/item?id=39966534">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
    <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/3a52b2e0d9bb527134336459679ba1108e6ea0f438487412484bedfb6e9f1951/68747470733a2f2f7365726765792d66696c696d6f6e6f762e6e7963332e6469676974616c6f6365616e7370616365732e636f6d2f6f70656e2d70617273652f6f70656e2d70617273652d776974682d746578742d74702d6c6f676f2e77656270"><img src="https://camo.githubusercontent.com/3a52b2e0d9bb527134336459679ba1108e6ea0f438487412484bedfb6e9f1951/68747470733a2f2f7365726765792d66696c696d6f6e6f762e6e7963332e6469676974616c6f6365616e7370616365732e636f6d2f6f70656e2d70617273652f6f70656e2d70617273652d776974682d746578742d74702d6c6f676f2e77656270" width="350" data-canonical-src="https://sergey-filimonov.nyc3.digitaloceanspaces.com/open-parse/open-parse-with-text-tp-logo.webp"></a>
</p>

<p dir="auto"><strong>Easily chunk complex documents the same way a human would.</strong></p>
<p dir="auto">Chunking documents is a challenging task that underpins any RAG system.  High quality results are critical to a sucessful AI application, yet most open-source libraries are limited in their ability to handle complex documents.</p>
<p dir="auto">Open Parse is designed to fill this gap by providing a flexible, easy-to-use library capable of visually discerning document layouts and chunking them effectively.</p>
<details>
  <summary><b>How is this different from other layout parsers?</b></summary>
<p dir="auto"><h4 tabindex="-1" dir="auto">✂️ Text Splitting</h4><a id="user-content-️-text-splitting" aria-label="Permalink: ✂️ Text Splitting" href="#️-text-splitting"></a></p>
<p dir="auto">Text splitting converts a file to raw text and <a href="https://docs.llamaindex.ai/en/stable/api_reference/node_parsers/token_text_splitter/" rel="nofollow">slices it up</a>.</p>
<ul dir="auto">
<li>You lose the ability to easily overlay the chunk on the original pdf</li>
<li>You ignore the underlying semantic structure of the file - headings, sections, bullets represent valuable information.</li>
<li>No support for tables, images or markdown.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">🤖 ML Layout Parsers</h4><a id="user-content--ml-layout-parsers" aria-label="Permalink: 🤖 ML Layout Parsers" href="#-ml-layout-parsers"></a></p>
<p dir="auto">There's some of fantastic libraries like <a href="https://github.com/Layout-Parser/layout-parser">layout-parser</a>.</p>
<ul dir="auto">
<li>While they can identify various elements like text blocks, images, and tables, but they are not built to group related content effectively.</li>
<li>They strictly focus on layout parsing - you will need to add another model to extract markdown from the images, parse tables, group nodes, etc.</li>
<li>We've found performance to be sub-optimal on many documents while also being computationally heavy.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">💼 Commercial Solutions</h4><a id="user-content--commercial-solutions" aria-label="Permalink: 💼 Commercial Solutions" href="#-commercial-solutions"></a></p>
<ul dir="auto">
<li>Typically priced at ≈ $10 / 1k pages. See <a href="https://cloud.google.com/document-ai" rel="nofollow">here</a>, <a href="https://aws.amazon.com/textract/" rel="nofollow">here</a> and <a href="https://www.reducto.ai/" rel="nofollow">here</a>.</li>
<li>Requires sharing your data with a vendor</li>
</ul>
</details>
<p dir="auto"><h2 tabindex="-1" dir="auto">Highlights</h2><a id="user-content-highlights" aria-label="Permalink: Highlights" href="#highlights"></a></p>
<ul dir="auto">
<li>
<p dir="auto"><strong>🔍 Visually-Driven:</strong> Open-Parse visually analyzes documents for superior LLM input, going beyond naive text splitting.</p>
</li>
<li>
<p dir="auto"><strong>✍️ Markdown Support:</strong> Basic markdown support for parsing headings, bold and italics.</p>
</li>
<li>
<p dir="auto"><strong>📊 High-Precision Table Support:</strong> Extract tables into clean Markdown formats with accuracy that surpasses traditional tools.</p>
  <details>
<summary><i>Examples</i></summary>
The following examples were parsed with unitable.
  
  <p dir="auto">
      <br>
      <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/63bbd4b8ce0983f7d14cd8f0b556577e8e882f1d696dc57a06bd1c06d2fdad25/68747470733a2f2f7365726765792d66696c696d6f6e6f762e6e7963332e6469676974616c6f6365616e7370616365732e636f6d2f6f70656e2d70617273652f756e697461626c652d70617273696e672d73616d706c652e77656270"><img src="https://camo.githubusercontent.com/63bbd4b8ce0983f7d14cd8f0b556577e8e882f1d696dc57a06bd1c06d2fdad25/68747470733a2f2f7365726765792d66696c696d6f6e6f762e6e7963332e6469676974616c6f6365616e7370616365732e636f6d2f6f70656e2d70617273652f756e697461626c652d70617273696e672d73616d706c652e77656270" width="650" data-canonical-src="https://sergey-filimonov.nyc3.digitaloceanspaces.com/open-parse/unitable-parsing-sample.webp"></a>
  </p>
       <br>
  </details>
</li>
<li>
<p dir="auto"><strong>🛠️ Extensible:</strong> Easily implement your own post-processing steps.</p>
</li>
<li>
<p dir="auto"><strong>💡Intuitive:</strong> Great editor support. Completion everywhere. Less time debugging.</p>
</li>
<li>
<p dir="auto"><strong>🎯 Easy:</strong> Designed to be easy to use and learn. Less time reading docs.</p>
</li>
</ul>

<p dir="auto">
    <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/892729320985115847eac72b5628f43e0b69304f53fa3775a4affd467ebd0599/68747470733a2f2f7365726765792d66696c696d6f6e6f762e6e7963332e6469676974616c6f6365616e7370616365732e636f6d2f6f70656e2d70617273652f6d61726b65642d75702d646f632d322e77656270"><img src="https://camo.githubusercontent.com/892729320985115847eac72b5628f43e0b69304f53fa3775a4affd467ebd0599/68747470733a2f2f7365726765792d66696c696d6f6e6f762e6e7963332e6469676974616c6f6365616e7370616365732e636f6d2f6f70656e2d70617273652f6d61726b65642d75702d646f632d322e77656270" width="250" data-canonical-src="https://sergey-filimonov.nyc3.digitaloceanspaces.com/open-parse/marked-up-doc-2.webp"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Example</h2><a id="user-content-example" aria-label="Permalink: Example" href="#example"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Basic Example</h4><a id="user-content-basic-example" aria-label="Permalink: Basic Example" href="#basic-example"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="import openparse

basic_doc_path = &quot;./sample-docs/mobile-home-manual.pdf&quot;
parser = openparse.DocumentParser()
parsed_basic_doc = parser.parse(basic_doc_path)

for node in parsed_basic_doc.nodes:
    print(node)"><pre><span>import</span> <span>openparse</span>

<span>basic_doc_path</span> <span>=</span> <span>"./sample-docs/mobile-home-manual.pdf"</span>
<span>parser</span> <span>=</span> <span>openparse</span>.<span>DocumentParser</span>()
<span>parsed_basic_doc</span> <span>=</span> <span>parser</span>.<span>parse</span>(<span>basic_doc_path</span>)

<span>for</span> <span>node</span> <span>in</span> <span>parsed_basic_doc</span>.<span>nodes</span>:
    <span>print</span>(<span>node</span>)</pre></div>
<p dir="auto"><strong>📓 Try the sample notebook</strong> <a href="https://colab.research.google.com/drive/1Z5B5gsnmhFKEFL-5yYIcoox7-jQao8Ep?usp=sharing" rel="nofollow">here</a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Semantic Processing Example</h4><a id="user-content-semantic-processing-example" aria-label="Permalink: Semantic Processing Example" href="#semantic-processing-example"></a></p>
<p dir="auto">Chunking documents is fundamentally about grouping similar semantic nodes together. By embedding the text of each node, we can then cluster them together based on their similarity.</p>
<div dir="auto" data-snippet-clipboard-copy-content="from openparse import processing, DocumentParser

semantic_pipeline = processing.SemanticIngestionPipeline(
    openai_api_key=OPEN_AI_KEY,
    model=&quot;text-embedding-3-large&quot;,
    min_tokens=64,
    max_tokens=1024,
)
parser = DocumentParser(
    processing_pipeline=semantic_pipeline,
)
parsed_content = parser.parse(basic_doc_path)"><pre><span>from</span> <span>openparse</span> <span>import</span> <span>processing</span>, <span>DocumentParser</span>

<span>semantic_pipeline</span> <span>=</span> <span>processing</span>.<span>SemanticIngestionPipeline</span>(
    <span>openai_api_key</span><span>=</span><span>OPEN_AI_KEY</span>,
    <span>model</span><span>=</span><span>"text-embedding-3-large"</span>,
    <span>min_tokens</span><span>=</span><span>64</span>,
    <span>max_tokens</span><span>=</span><span>1024</span>,
)
<span>parser</span> <span>=</span> <span>DocumentParser</span>(
    <span>processing_pipeline</span><span>=</span><span>semantic_pipeline</span>,
)
<span>parsed_content</span> <span>=</span> <span>parser</span>.<span>parse</span>(<span>basic_doc_path</span>)</pre></div>
<p dir="auto"><strong>📓 Sample notebook</strong> <a href="https://github.com/Filimoa/open-parse/blob/main/src/cookbooks/semantic_processing.ipynb">here</a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Serializing Results</h4><a id="user-content-serializing-results" aria-label="Permalink: Serializing Results" href="#serializing-results"></a></p>
<p dir="auto">Uses pydantic under the hood so you can serialize results with</p>
<div dir="auto" data-snippet-clipboard-copy-content="parsed_content.model_dump()"><pre><span>parsed_content</span>.<span>model_dump</span>()</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Requirements</h2><a id="user-content-requirements" aria-label="Permalink: Requirements" href="#requirements"></a></p>
<p dir="auto">Python 3.8+</p>
<p dir="auto"><strong>Dealing with PDF's:</strong></p>
<ul dir="auto">
<li><a href="https://github.com/pdfminer/pdfminer.six">pdfminer.six</a> Fully open source.</li>
</ul>
<p dir="auto"><strong>Extracting Tables:</strong></p>
<ul dir="auto">
<li><a href="https://github.com/pymupdf/PyMuPDF">PyMuPDF</a> has some table detection functionality. Please see their <a href="https://mupdf.com/licensing/index.html#commercial" rel="nofollow">license</a>.</li>
<li><a href="https://huggingface.co/microsoft/table-transformer-detection" rel="nofollow">Table Transformer</a> is a deep learning approach.</li>
<li><a href="https://github.com/poloclub/unitable">unitable</a> is another transformers based approach with <strong>state-of-the-art</strong> performance.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">1. Core Library</h4><a id="user-content-1-core-library" aria-label="Permalink: 1. Core Library" href="#1-core-library"></a></p>

<p dir="auto"><strong>Enabling OCR Support</strong>:</p>
<p dir="auto">PyMuPDF will already contain all the logic to support OCR functions. But it additionally does need Tesseract’s language support data, so installation of Tesseract-OCR is still required.</p>
<p dir="auto">The language support folder location must be communicated either via storing it in the environment variable "TESSDATA_PREFIX", or as a parameter in the applicable functions.</p>
<p dir="auto">So for a working OCR functionality, make sure to complete this checklist:</p>
<ol dir="auto">
<li>
<p dir="auto">Install Tesseract.</p>
</li>
<li>
<p dir="auto">Locate Tesseract’s language support folder. Typically you will find it here:</p>
<ul dir="auto">
<li>
<p dir="auto">Windows: <code>C:/Program Files/Tesseract-OCR/tessdata</code></p>
</li>
<li>
<p dir="auto">Unix systems: <code>/usr/share/tesseract-ocr/5/tessdata</code></p>
</li>
</ul>
</li>
<li>
<p dir="auto">Set the environment variable TESSDATA_PREFIX</p>
<ul dir="auto">
<li>
<p dir="auto">Windows: <code>setx TESSDATA_PREFIX "C:/Program Files/Tesseract-OCR/tessdata"</code></p>
</li>
<li>
<p dir="auto">Unix systems: <code>declare -x TESSDATA_PREFIX= /usr/share/tesseract-ocr/5/tessdata</code></p>
</li>
</ul>
</li>
</ol>
<p dir="auto"><strong>Note:</strong> <em>On Windows systems, this must happen outside Python – before starting your script. Just manipulating os.environ will not work!</em></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">2. ML Table Detection (Optional)</h4><a id="user-content-2-ml-table-detection-optional" aria-label="Permalink: 2. ML Table Detection (Optional)" href="#2-ml-table-detection-optional"></a></p>
<p dir="auto">This repository provides an optional feature to parse content from tables using the state-of-the-art Table Transformer (DETR) model. The Table Transformer model, introduced in the paper "PubTables-1M: Towards Comprehensive Table Extraction From Unstructured Documents" by Smock et al., achieves best-in-class results for table extraction.</p>
<div dir="auto" data-snippet-clipboard-copy-content="pip install &quot;openparse[ml]&quot;"><pre><span>pip install "openparse[ml]"</span></pre></div>
<p dir="auto">Then download the model weights with</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Cookbooks</h2><a id="user-content-cookbooks" aria-label="Permalink: Cookbooks" href="#cookbooks"></a></p>
<p dir="auto"><a href="https://github.com/Filimoa/open-parse/tree/main/src/cookbooks">https://github.com/Filimoa/open-parse/tree/main/src/cookbooks</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Documentation</h2><a id="user-content-documentation" aria-label="Permalink: Documentation" href="#documentation"></a></p>
<p dir="auto"><a href="https://filimoa.github.io/open-parse/" rel="nofollow">https://filimoa.github.io/open-parse/</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[High Definition CSS Color Guide (153 pts)]]></title>
            <link>https://developer.chrome.com/docs/css-ui/high-definition-css-color-guide</link>
            <guid>39965907</guid>
            <pubDate>Mon, 08 Apr 2024 03:14:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://developer.chrome.com/docs/css-ui/high-definition-css-color-guide">https://developer.chrome.com/docs/css-ui/high-definition-css-color-guide</a>, See on <a href="https://news.ycombinator.com/item?id=39965907">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

  
    




<p>CSS Color 4 brings wide gamut color tools and capabilities to the web: more colors, manipulation functions, and better gradients.</p>

<div translate="no">
        
          <p><img alt="Adam Argyle" src="https://web.dev/images/authors/argyle.jpg" decoding="async" height="64" loading="lazy" width="64"></p>
      </div>

<p>For <a href="https://www.w3.org/Graphics/Color/sRGB.html">over 25 years</a>, <code translate="no" dir="ltr">sRGB</code>
(standard red green blue) has been the only color
<a href="#what_is_a_color_gamut">gamut</a> for CSS gradients and colors, with color space
offerings within it like <code translate="no" dir="ltr">rgb()</code>, <code translate="no" dir="ltr">hsl()</code> and hex. It is the most common color
gamut capability amongst displays; a common denominator. We've grown <a href="https://almanac.httparchive.org/en/2022/css#colors">very accustomed to specifying colors within this gamut</a>.</p>

<figure>
  <img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de.png" alt="The most popular color formats by percent of occurrences." width="800" height="869" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-popular-color-format-b5aab67b4d3de_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px">

  <figcaption>
    <a href="https://almanac.httparchive.org/en/2022/css#colors">
      https://almanac.httparchive.org/en/2022/css#colors
    </a>
  </figcaption>
</figure>

<p>As displays become more capable of showing a wide range of colors, CSS needs a
way to specify colors from within these wider ranges. The current color formats
have no language for wide color ranges.</p>

<p>If CSS never updated, it would be stuck in the 90s color ranges forever, forced
never to match the wide gamut offerings found in images and video.
<a href="https://www.youtube.com/watch?v=_z3Gpk5dbCk">Trapped</a>, only showing <a href="https://en.wikipedia.org/wiki/Wide-gamut_RGB_color_space">30% of the colors the human eye can see</a>. Thank CSS <a href="https://www.w3.org/TR/css-color-4">Color Level 4</a> for helping us escape this trap;
written primarily by <a href="https://lea.verou.me/">Lea Verou</a> and <a href="https://svgees.us/">Chris Liley</a>.</p>

<p>From Chrome 111 is support for <a href="https://www.w3.org/TR/css-color-4/">CSS Color 4</a>
gamuts and color spaces, joining Safari who's had support for <code translate="no" dir="ltr">display-p3</code> since
2016. CSS can now support HD (high definition) displays, specifying colors from
HD gamuts while also offering color spaces with specializations. This guide will
explain how you can start to take advantage of this new world of color.</p>

<figure>
  <video autoplay="" controls="" loop="" muted=""> <source src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/swYaLIEXuDRZ2VO8SCLH.mp4" type="video/mp4"> </video>

  <figcaption>
    A series of images are shown transitioning between wide and narrow color
    gamuts, illustrating color vividness and its effects.<br>
    <a href="https://ciechanow.ski/color-spaces/#:~:text=you%20can%20drag%20the%20slider%20to%20see%20how%20the%20extent%20of%20the%20chromaticity%20triangle%20corresponds%20to%20the%20representable%20colors.">Try it for yourself</a>
  </figcaption>
</figure>

<p>In supporting browsers, there's 50% more colors to pick from! You thought 16
million colors sounded like a lot, wait until you see how many colors some of
these new spaces can show. Also, think about all those gradients that
<a href="#less_banding_thanks_to_16-bit_color">banded</a> because there wasn't enough
bit-depth, that's resolved too.</p>

<p><strong>In addition</strong> to more colors, <a href="https://lea.verou.me/2020/04/lch-colors-in-css-what-why-and-how/#:%7E:text=most%20vivid%20colors%20the%20screen%20can%20display">arguably the most vivid colors the display is capable of</a>,
new color spaces provide unique tools and methods for managing and creating
color systems. For example, before now we had HSL and its "lightness" channel,
which was the best web developers had. Now in CSS, we have LCH's <a href="https://developer.mozilla.org/docs/Web/Accessibility/Understanding_Colors_and_Luminance#light_and_luminance">"perceptual lightness</a>."</p>

<figure>
  <img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-tables-color-are-sid-d7829619631b7.png" alt="Two tables of color are side by side. The first table shows an HSL
    rainbow of 10 colors or so and next to it are grayscale colors that represent
    the lightness of those HSL colors. The second table shows an LCH rainbow,
    much less vibrant, but the grayscale colors next to it are consistent.
    This is showing how LCH has a healthy constant lightness value while HSL does not." width="800" height="764">

  <figcaption>
    Preview for yourself: <a href="https://codepen.io/web-dot-dev/pen/poZgXxy">
    https://codepen.io/web-dot-dev/pen/poZgXxy</a>
  </figcaption>
</figure>

<p>Furthermore, gradients and mixing get some upgrades: color space support, hue
interpolation options, and less banding. The following image shows some of the
mixing upgrades. The top two color mixes are in sRGB. The bottom two color mixes
are in display p3. Display p3 has more vivid color and the mixes result in
complete black and white in the middle. Where sRGB looks a bit desaturated and
the mixes in the middle aren't complete black or white results.</p>

<figure>
  <img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y.png" alt="" width="800" height="773" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/kleavbJG5AA2namwim8y_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px">

  <figcaption>
    The top two color mixes are in sRGB with sRGB colors.
    The bottom two color mixes are in display p3. Display p3 has more
    vivid colors and the mixes result in black and white in the middle,
    where sRGB looks a bit desaturated and the mixes in the middle
    aren't black and white results.<br>
    <a href="https://codepen.io/web-dot-dev/pen/poZgXQb">
    https://codepen.io/web-dot-dev/pen/poZgXQb</a>
  </figcaption>
</figure>

<p>This guide will cover where color has been, where it is going, and how CSS will
enable and support web developers to manage color.</p>

<h2 id="overview" data-text="Overview" tabindex="-1">Overview</h2>

<p>The problem with color and the web is that CSS is not high definition ready,
while the displays most folks have in their pockets, laps or mounted on walls
are wide gamut, high definition color ready. The color capability of displays
grew faster than CSS, now CSS is here to catch up.</p>

<p>There's much more than just "more colors" too. By the end of this article you'll
be able to specify more colors, enhance gradients, and pick the best color
spaces and color gamuts for each task.</p>

<h3 id="what_is_a_color_gamut" data-text="What is a color gamut?" tabindex="-1">What is a color gamut?</h3>

<p>A gamut represents the size of something. The phrase "millions of colors" is a
comment about the gamut of a display, or the range of colors it has to choose
from. In the following image, three gamuts are compared, and the larger the size
the more colors it offers.</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/color-gamuts-are-compared-57eaaa929ab9e.png" alt="Color gamuts are compared side by side as a triangle shape.
  sRGB is the smallest and Rec2020 is the largest." width="800" height="343"></p>

<p>A color gamut can also have a name. Like a basketball versus a baseball or a
vente coffee cup versus a grande; a name for the size can help people
communicate. Learning these color gamut names helps you communicate and quickly
understand a range of colors.</p>

<p>This article will introduce you to seven new gamuts, all with wider range than
sRGB, and describe their different features to help you choose which to use:</p>

<ul>
<li><a href="#srgb">sRGB</a></li>
<li><a href="#a98_rgb">RGB 98</a></li>
<li><a href="#display_p3">Display p3</a></li>
<li><a href="#rec2020">Rec2020</a></li>
<li><a href="#prophoto_rgb">ProPhoto</a></li>
<li><a href="https://en.wikipedia.org/wiki/CIE_1931_color_space">CIE</a></li>
<li><a href="https://www.cs.rochester.edu/courses/572/colorvis/gamutvis.html">HVS</a> (human visual gamut)</li>
</ul>



<h3 id="human_visual_gamut" data-text="Human visual gamut" tabindex="-1">Human visual gamut</h3>

<p>Color gamuts are often compared against the human visual gamut; the entirety of
color we believe the human eye can see. HVS is often portrayed with a
<a href="https://en.wikipedia.org/wiki/Chromaticity">chromaticity diagram</a>, like this:</p>

<figure>
  <img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc.png" alt="A horse shoe shape is filled with a vibrant gradient with a hollow triangle in the middle." width="800" height="804" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-horse-shoe-shape-is-fil-c574400e794bc_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px">

  <figcaption>
    Source: <a href="https://en.wikipedia.org/wiki/Chromaticity">Wikipedia</a>
  </figcaption>
</figure>

<p>The outermost shape is what we can see as humans, and the inner triangle is the
<code translate="no" dir="ltr">rgb()</code> functions range, aka the sRGB color space.</p>

<p>As you saw triangles above, comparing gamut sizes, so will you find triangles
below. This is the industry's way of communicating about color gamuts and
comparing them.</p>

<h3 id="what_is_a_color_space" data-text="What is a color space?" tabindex="-1">What is a color space?</h3>

<p>Color spaces are arrangements of a gamut, establishing a shape and a method of
accessing colors. Many are simple 3D shapes like cubes or cylinders. This color
arrangement determines which colors are next to each other, and how accessing
and interpolating colors will work.</p>

<p>RGB is like a rectangular color space, where colors are accessed by specifying
coordinates on 3 axes. HSL is a <a href="https://en.wikipedia.org/wiki/Color_model#Cylindrical-coordinate_color_models">cylindrical color space</a>,
where colors are accessed with a hue angle and coordinates on 2 axes</p>

<figure>
  <img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a.png" alt="A half cut open RGB cube and slices into HSL cylinder are shown side by side, to show how the colors are packed into a shape in each space." width="800" height="349" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-half-cut-open-rgb-cube-53a16bc324d2a_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px">

  <figcaption>
    <a href="https://en.wikipedia.org/wiki/HSL_and_HSV">https://en.wikipedia.org/wiki/HSL_and_HSV</a>
  </figcaption>
</figure>

<p>The <a href="https://www.w3.org/TR/css-color-4/">level 4</a> specification introduces 12
new color spaces for looking up colors from the 7 new gamuts shared previously:</p>

<ul>
<li><a href="#linear-srgb">sRGB Linear</a></li>
<li><a href="#lch">LCH</a></li>
<li><a href="#oklch">okLCH</a></li>
<li><a href="#lab">LAB</a></li>
<li><a href="#oklab">okLAB</a></li>
<li><a href="#display_p3">Display p3</a></li>
<li><a href="#rec2020">Rec2020</a></li>
<li><a href="#a98_rgb">a98 RGB</a></li>
<li><a href="#prophoto_rgb">ProPhoto RGB</a></li>
<li><a href="#xyz-xyz-d50-xyz-d65">XYZ</a></li>
<li><a href="#xyz-xyz-d50-xyz-d65">XYZ d50</a></li>
<li><a href="#xyz-xyz-d50-xyz-d65">XYZ d65</a></li>
</ul>

<p>These are in addition to the 4 color spaces previously available:</p>

<ul>
<li><a href="#hex">Hex</a></li>
<li><a href="#rgb">RGB</a></li>
<li><a href="#hsl">HSL</a></li>
<li><a href="#hwb">HWB</a></li>
</ul>

<h3 id="color_gamut_and_color_space_summary" data-text="Color gamut and color space summary" tabindex="-1">Color gamut and color space summary</h3>

<p>A color space is a mapping of colors where a color gamut is a range of colors.
Consider a color gamut as a total of particles and a color space as a bottle
made to hold that range of particles.</p>

<p>Here's an interactive visual of what I mean. Point, drag and zoom around in this
demo of color spaces filled with color particles. Then change the color space,
or color model as they call it in this demo, to see a visualization of other
spaces.</p>



<ul>
<li>Use <strong>color gamuts</strong> to talk about a range of colors, like low range or narrow
gamut versus high range or wide gamut.</li>
<li>Use <strong>color spaces</strong> to talk about arrangements of color, syntax used to specify a
color, manipulate color and interpolate through color.</li>
</ul>

<figure>
  <img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6.png" alt="A cube filled with many multiple colored dots." width="384" height="384" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-cube-filled-many-multi-2ecb2e34ca6_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px">

  <figcaption>
    Above is the sRGB gamut of particles fit into an RGB cube color space
    <a href="https://cran.r-project.org/web/packages/colordistance/vignettes/color-spaces.html">Image source</a>
  </figcaption>
</figure>

<h2 id="how_to_access_more_colors_new_spaces_and_debug_results" data-text="How to access more colors, new spaces, and debug results" tabindex="-1">How to access more colors, new spaces, and debug results</h2>

<p><a href="https://www.w3.org/TR/css-color-4/">CSS Color 4</a> outlines a bunch of new
features and tools for CSS and color. First, a recap of where color was before
these new features. Then an overview of the new color spaces, syntaxes and
tools.</p>

<p>The following Codepen shows all the new and old color syntaxes together:</p>



<h3 id="a_review_of_the_classic_color_spaces" data-text="A review of the classic color spaces" tabindex="-1">A review of the classic color spaces</h3>

<p>Since the 2000s, you have been able to use the following for any CSS properties
that accept a color as a value: hexadecimal (hex numbers), <code translate="no" dir="ltr">rgb()</code>, <code translate="no" dir="ltr">rgba()</code>, by
name like <code translate="no" dir="ltr">hotpink</code>, or with keywords like
<a href="https://developer.mozilla.org/docs/Web/CSS/color_value#currentcolor_keyword"><code translate="no" dir="ltr">currentColor</code></a>.
Around 2010, depending on your browser, CSS could use
<a href="https://caniuse.com/mdn-css_types_color_hsl"><code translate="no" dir="ltr">hsl()</code></a> colors. Then in 2017,
<a href="https://caniuse.com/css-rrggbbaa">hex with alpha</a> appeared. Last, only
recently, <a href="https://caniuse.com/mdn-css_types_color_hwb"><code translate="no" dir="ltr">hwb()</code></a> started getting
support in browsers.</p>

<p><strong>All of these classic color spaces reference color within the same gamut, sRGB.</strong></p>

<h4 id="hex" data-text="HEX" tabindex="-1">HEX</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">1</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">12</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">1</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">1</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/hex-color">Source</a></p>
        
      </div>
    
    
    
  

<p>The hex colorspace specifies R, G, B and A with
<a href="https://en.wikipedia.org/wiki/Hexadecimal">hexadecimal</a> numbers. The following
code examples show all the ways this syntax can specify red, green and blue plus
opacity.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-hex-colors {
  /* classic */
  --3-digits: #49b;
  --6-digits: #4499bb;

  /* hex with opacity */
  --4-digits-opaque: #f9bf;
  --8-digits-opaque: #ff99bbff;
  --4-digits-with-opacity: #49b8;
  --8-digits-with-opacity: #4499bb88;
}
</code></pre>
<h4 id="rgb" data-text="RGB" tabindex="-1">RGB</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">1</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">12</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">1</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">1</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/rgb">Source</a></p>
        
      </div>
    
    
    
  

<p>The RGB color space features direct access to the red, green and blue channels.
It allows specifying an amount between 0 and 255 or as a percentage 0 to 100.
This syntax was around before some syntax normalization was in the
specifications, so you'll see comma and no-comma syntaxes in the wild. Moving
forward, commas are no longer required.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-rgb-colors {
  --classic: rgb(64, 149, 191);
  --modern: rgb(64 149 191);
  --percents: rgb(25% 58% 75%);

  --classic-with-opacity-percent: rgba(64, 149, 191, 50%);
  --classic-with-opacity-decimal: rgba(64, 149, 191, .5);

  --modern-with-opacity-percent: rgb(64 149 191 / 50%);
  --modern-with-opacity-decimal: rgb(64 149 191 / .5);

  --percents-with-opacity-percent: rgb(25% 58% 75% / 50%);
  --percents-with-opacity-decimal: rgb(25% 58% 75% / 50%);

  --empty-channels: rgb(none none none);
}
</code></pre>
<h4 id="hsl" data-text="HSL" tabindex="-1">HSL</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">1</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">12</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">1</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">3.1</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/hsl">Source</a></p>
        
      </div>
    
    
    
  

<p>One of the first color spaces to orient itself towards human language and
communication, HSL (hue saturation and lightness) offers all the colors in the
sRGB gamut while not requiring your brain to know how red, green and blue
interact. Like RGB, it also originally had commas in the syntax, but moving
forward, commas are no longer required.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-hsl-colors {
  --classic: hsl(200deg, 50%, 50%);
  --modern: hsl(200 50% 50%);

  --classic-with-opacity-percent: hsla(200deg, 50%, 50%, 50%);
  --classic-with-opacity-decimal: hsla(200deg, 50%, 50%, .5);

  --modern-with-opacity-percent: hsl(200 50% 50% / 50%);
  --modern-with-opacity-decimal: hsl(200 50% 50% / .5);

  /* hueless and no saturation */
  --empty-channels-white: hsl(none none 100%);
  --empty-channels-black: hsl(none none 0%);
}
</code></pre>
<h4 id="hwb" data-text="HWB" tabindex="-1">HWB</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">101</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">101</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">96</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/hwb">Source</a></p>
        
      </div>
    
    
    
  

<p>Another sRGB gamut color space oriented at how humans describe color is HWB
(hue, whiteness, blackness). Authors can choose a hue and mix in white or black
to find their desired color.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-hwb-colors {
  --modern: hwb(200deg 25% 25%);
  --modern2: hwb(200 25% 25%);

  --modern-with-opacity-percent: hwb(200 25% 25% / 50%);
  --modern-with-opacity-decimal: hwb(200 25% 25% / .5);

  /* hueless and no saturation */
  --empty-channels-white: hwb(none 100% none);
  --empty-channels-black: hwb(none none 100%);
}
</code></pre>
<h3 id="meet_the_new_web_color_spaces" data-text="Meet the new web color spaces" tabindex="-1">Meet the new web color spaces</h3>

<p>The following color spaces offer access to larger gamuts than sRGB. The
display-p3 color space offers almost twice as many colors as RGB, while Rec2020
offers almost twice as many as display-p3. <strong>That's a lot of colors!</strong></p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/five-stacked-triangles-v-6399219808305.png" alt="Five stacked triangles of varying color to help illustrate
  the relationship and size of each of the new color spaces." width="800" height="648"></p>

<h4 id="the_color_function" data-text="The color() function" tabindex="-1">The <code translate="no" dir="ltr">color()</code> function</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">113</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/color">Source</a></p>
        
      </div>
    
    
    
  

<p>The new
<a href="https://developer.mozilla.org/docs/Web/CSS/color_value/color"><code translate="no" dir="ltr">color()</code></a>
function can be used for any color space that specifies colors with R, G and B
channels. <code translate="no" dir="ltr">color()</code> takes a color space parameter first, then a series of
channel values for RGB and optionally some alpha.</p>

<p>You'll find many of the new color spaces use this function because having
specialized functions like <code translate="no" dir="ltr">rgb</code>, <code translate="no" dir="ltr">srgb</code>, <code translate="no" dir="ltr">hsl</code>, <code translate="no" dir="ltr">hwb</code>, etc, was growing to a
long list, easier to have the colorspace be a parameter.</p>

<p><strong>Pros</strong></p>

<ul>
<li>A normalized space for accessing color spaces that use RGB channels.</li>
<li>Can scale up to any wide gamut RGB based color space.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Doesn't work with HSL, HWB, LCH, okLCH, or okLAB</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-color-function-colors {
  --srgb: color(srgb 1 1 1);
  --srgb-linear: color(srgb-linear 100% 100% 100% / 50%);
  --display-p3: color(display-p3 1 1 1);
  --rec2020: color(rec2020 0 0 0);
  --a98-rgb: color(a98-rgb 1 1 1 / 25%);
  --prophoto: color(prophoto-rgb 0% 0% 0%);
  --xyz: color(xyz 1 1 1);
}
</code></pre>


<h4 id="srgb_via_color" data-text="sRGB via color()" tabindex="-1">sRGB via color()</h4>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308.png" alt="sRGB triangle is the only one fully opaque, to help visualize the size of the gamut." width="800" height="648" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-5566897ddb308_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<p>This colorspace offers the same features as <code translate="no" dir="ltr">rgb()</code>. It does additionally offer
decimals between 0 and 1, used exactly like 0% to 100%.</p>

<p><strong>Pros</strong></p>

<ul>
<li>Nearly all displays support the range of this color space.</li>
<li>Design tool support.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Not perceptually linear (like <a href="#lch"><code translate="no" dir="ltr">lch()</code></a> is)</li>
<li>No wide gamut colors.</li>
<li>Gradients often go through a <a href="#specifying_more_gradient_stops_to_avoid_the_dead_zone">dead zone</a>.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-srgb-colors {
  --percents: color(srgb 34% 58% 73%);
  --decimals: color(srgb .34 .58 .73);

  --percents-with-opacity: color(srgb 34% 58% 73% / 50%);
  --decimals-with-opacity: color(srgb .34 .58 .73 / .5);

  /* empty */
  --empty-channels-black: color(srgb none none none);
  --empty-channels-black2: color(srgb);
}
</code></pre>
<h4 id="linear_srgb_via_color" data-text="Linear sRGB via color()" tabindex="-1">Linear sRGB via color()</h4>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7.png" alt="sRGB triangle is the only one fully opaque, to help visualize the size of the gamut." width="800" height="648" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-triangle-is-only-f-373c98b9d5ba7_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<p>This linear alternative to RGB offers predictable channel intensity.</p>

<p><strong>Pros</strong></p>

<ul>
<li>Direct access to RGB channels, handy for things like game engines or light shows.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Not perceptually linear.</li>
<li>Black and white are packed at the edges.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-srgb-linear-colors {
  --percents: color(srgb-linear 34% 58% 73%);
  --decimals: color(srgb-linear .34 .58 .73);

  --percents-with-opacity: color(srgb-linear 34% 58% 73% / 50%);
  --decimals-with-opacity: color(srgb-linear .34 .58 .73 / .5);

  /* empty */
  --empty-channels-black: color(srgb-linear none none none);
  --empty-channels-black2: color(srgb-linear);
}
</code></pre>
<p><a href="#gradients_in_different_color_spaces">Gradients</a> are discussed in detail later,
but quickly it's meaningful to see a <code translate="no" dir="ltr">srgb</code> and <code translate="no" dir="ltr">linear-srgb</code> black to white
gradient to illustrate their differences:</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021.png" alt="Two horizontal gradients shown in two rows for easy comparison. The sRGB gradient is smooth, as we've seen for many years. The sRGB-linear gradient though is very dark in the first 5% and very light at the last 10%, making the middle very light gray for a long time." width="800" height="146" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-horizontal-gradients-8230bd6d02021_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<h4 id="lch" data-text="LCH" tabindex="-1">LCH</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">113</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/lch">Source</a></p>
        
      </div>
    
    
    
  

<p>The first space of this post to introduce syntax for accessing colors outside
the RGB gamut! It is also the first to make it very easy to create out of gamut
color for a display. This is because <strong>any CIE space colors (lch, oklch, lab,
oklab) are capable of representing the entire human visible color spectrum</strong>.</p>

<p><a href="https://en.wikipedia.org/wiki/CIE_1931_chromaticity_diagram">This colorspace is modeled after human vision</a> and offers
syntax to specify any of those colors and more. The LCH channels are lightness,
chroma and hue. Hue being an angle, like in HSL and HWB. Lightness is a value
between 0 and 100, but not like HSL's lightness, it's a special, “perceptually
linear”, human-centric lightness. Chroma is similar to saturation; can range
from 0 to 230 but is also technically unbounded.</p>

<p><strong>Pros</strong></p>

<ul>
<li>Predictable color manipulation thanks to being perceptually linear, mostly (see <a href="#oklch">oklch</a>).</li>
<li>Uses familiar channels.</li>
<li>Often has vibrant gradients.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Easy to go out of gamut.</li>
<li>On rare occasions the gradient may need an adjustment middle point to prevent hue shift.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-lch-colors {
  --percent-and-degrees: lch(58% 32 241deg);
  --just-the-degrees: lch(58 32 241deg);
  --minimal: lch(58 32 241);

  --percent-opacity: lch(58% 32 241 / 50%);
  --decimal-opacity: lch(58% 32 241 / .5);

  /* chromaless and hueless */
  --empty-channels-white: lch(100 none none);
  --empty-channels-black: lch(none none none);
}
</code></pre>


<h4 id="lab" data-text="LAB" tabindex="-1">LAB</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">113</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/lab">Source</a></p>
        
      </div>
    
    
    
  

<p>Another color space made to access the CIE gamut, again with a perceptually
linear lightness (L) dimension. The A and B in LAB represent the unique axes of
human color vision: red-green, and blue-yellow. When A is given a positive value
it adds red, and adds green when it's below 0. When B is given a positive number
it adds yellow, where negative values are toward blue.</p>

<p><strong>Pros</strong></p>

<ul>
<li>Perceptually consistent gradients.</li>
<li>High dynamic range.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Potential for hue shift.</li>
<li>Difficult to hand author or guess a color when reading values.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-lab-colors {
  --percent-and-degrees: lab(58% -16 -30);
  --minimal: lab(58 -16 -30);

  --percent-opacity: lab(58% -16 -30 / 50%);
  --decimal-opacity: lab(58% -16 -30 / .5);

  /* chromaless and hueless */
  --empty-channels-white: lab(100 none none);
  --empty-channels-black: lab(none none none);
}
</code></pre>
<h4 id="oklch" data-text="OKLCH" tabindex="-1">OKLCH</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">113</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15.4</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/oklch">Source</a></p>
        
      </div>
    
    
    
  

<p>This color space is <a href="https://bottosson.github.io/posts/oklab/">corrective</a> to
LCH. And like LCH, (L) continues to represent perceptually linear lightness, C
for chroma and the H for hue.</p>

<p>This space feels familiar if you've worked with
HSL or LCH. Pick an angle on the color wheel for H, choose a lightness or
darkness amount by adjusting L, but then we have chroma instead of saturation.
They're fairly identical except that adjustments to lightness and chroma tend to
come in pairs, or else it can be easy to ask for high chroma colors that go
outside of a target gamut.</p>

<p><strong>Pros</strong></p>

<ul>
<li>No surprises when working with blue and purple hues.</li>
<li>Perceptually linear lightness.</li>
<li>Uses familiar channels.</li>
<li>High dynamic range.</li>
<li>Has a modern <a href="https://oklch.evilmartians.io/">color picker</a> - by Evil Martians.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Easy to go out of gamut.</li>
<li>New and relatively unexplored.</li>
<li>Few color pickers.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-oklch-colors {
  --percent-and-degrees: oklch(64% .1 233deg);
  --just-the-degrees: oklch(64 .1 233deg);
  --minimal: oklch(64 .1 233);

  --percent-opacity: oklch(64% .1 233 / 50%);
  --decimal-opacity: oklch(64% .1 233 / .5);

  /* chromaless and hueless */
  --empty-channels-white: oklch(100 none none);
  --empty-channels-black: oklch(none none none);
}
</code></pre>
<h4 id="oklab" data-text="OKLAB" tabindex="-1">OKLAB</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">113</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15.4</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/oklab">Source</a></p>
        
      </div>
    
    
    
  

<p>This space is <a href="https://bottosson.github.io/posts/oklab/">corrective</a> to LAB.
It's claimed as a space optimized for image processing quality also, which for
us in CSS means gradients and color function manipulation quality.</p>

<p><strong>Pros</strong></p>

<ul>
<li><strong>Default space for animations and interpolations.</strong></li>
<li>Perceptually linear lightness.</li>
<li>No hue shift like LAB.</li>
<li>Perceptually consistent gradients.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>New and relatively unexplored.</li>
<li>Few color pickers.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-oklab-colors {
  --percent-and-degrees: oklab(64% -.1 -.1);
  --minimal: oklab(64 -.1 -.1);

  --percent-opacity: oklab(64% -.1 -.1 / 50%);
  --decimal-opacity: oklab(64% -.1 -.1 / .5);

  /* chromaless and hueless */
  --empty-channels-white: oklab(100 none none);
  --empty-channels-black: oklab(none none none);
}
</code></pre>
<h4 id="display_p3" data-text="Display P3" tabindex="-1">Display P3</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">113</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/color">Source</a></p>
        
      </div>
    
    
    
  

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/display-p3-triangle-is-o-6aa90fb842ad8.png" alt="Display P3 triangle is the only one fully opaque, to help
  visualize the size of the gamut. It looks like 2nd from the smallest." width="800" height="648"></p>



<p>The display P3 gamut and color space have become popular since Apple supported
them since 2015 on their iMac. Apple also supported display-p3 <a href="https://webkit.org/blog/6682/improving-color-on-the-web/">in web pages via CSS since 2016</a>, five
years ahead of any other browser. If coming from sRGB, this is a great color
space to begin working within as you move styles to a higher dynamic range.</p>

<p><strong>Pros</strong></p>

<ul>
<li>Great support, considered the baseline for HDR displays.</li>
<li>50% more colors than sRGB.</li>
<li>DevTools offer a great color picker.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Will eventually be surpassed by Rec2020 and CIE spaces.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-display-p3-colors {
  --percents: color(display-p3 34% 58% 73%);
  --decimals: color(display-p3 .34 .58 .73);

  --percent-opacity: color(display-p3 34% 58% 73% / 50%);
  --decimal-opacity: color(display-p3 .34 .58 .73 / .5);

  /* chromaless and hueless */
  --empty-channels-black: color(display-p3 none none none);
  --empty-channels-black2: color(display-p3);
}
</code></pre>
<h4 id="rec2020" data-text="Rec2020" tabindex="-1">Rec2020</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">113</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/color">Source</a></p>
        
      </div>
    
    
    
  

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/rec2020-triangle-is-only-3175fc2e673b5.png" alt="Rec2020 triangle is the only one fully opaque, to help
  visualize the size of the gamut. It looks like 2nd from the largest." width="800" height="648"></p>



<p>Rec2020 is part of the movement to UHDTV (ultra-high-definition television),
providing a wide range of colors for use in 4k and 8k media. Rec2020 is another
RGB based gamut, larger than display-p3, but not nearly as common amongst
consumers as Display P3.</p>

<p><strong>Pros</strong></p>

<ul>
<li>Ultra HD colors.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Not as common among consumers (yet).</li>
<li>Not commonly found in handhelds or tablets.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-rec2020-colors {
  --percents: color(rec2020 34% 58% 73%);
  --decimals: color(rec2020 .34 .58 .73);

  --percent-opacity: color(rec2020 34% 58% 73% / 50%);
  --decimal-opacity: color(rec2020 .34 .58 .73 / .5);

  /* chromaless and hueless */
  --empty-channels-black: color(rec2020 none none none);
  --empty-channels-black2: color(rec2020);
}
</code></pre>
<h4 id="a98_rgb" data-text="A98 RGB" tabindex="-1">A98 RGB</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">113</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/color">Source</a></p>
        
      </div>
    
    
    
  

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a98-triangle-is-only-fu-d7c8754f987df.png" alt="A98 triangle is the only one fully opaque, to help
  visualize the size of the gamut. It looks like the middle sizes triangle." width="800" height="648"></p>



<p>Short for Adobe 1998 RGB, A98 RGB was created by Adobe to feature most of the
colors achievable from CMYK printers. It offers more colors than sRGB, notably
in the cyan and green hues.</p>

<p><strong>Pros</strong></p>

<ul>
<li>Larger than the sRGB and Display P3 color spaces.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Not a common space worked within by digital designers.</li>
<li>Not many folks are porting palettes from CMYK.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-a98-rgb-colors {
  --percents: color(a98-rgb 34% 58% 73%);
  --decimals: color(a98-rgb .34 .58 .73);

  --percent-opacity: color(a98-rgb 34% 58% 73% / 50%);
  --decimal-opacity: color(a98-rgb .34 .58 .73 / .5);

  /* chromaless and hueless */
  --empty-channels-black: color(a98-rgb none none none);
  --empty-channels-black2: color(a98-rgb);
}
</code></pre>
<h4 id="prophoto_rgb" data-text="ProPhoto RGB" tabindex="-1">ProPhoto RGB</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">113</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/color">Source</a></p>
        
      </div>
    
    
    
  

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/prophoto-triangle-is-onl-6ded5901144d6.png" alt="ProPhoto triangle is the only one fully opaque, to help
  visualize the size of the gamut. It looks like the largest." width="800" height="648"></p>



<p>Created by Kodak, this wide gamut space uniquely offers ultra wide range primary
colors and features minimal <a href="#gradients_in_different_color_spaces">hue shifts</a>
when changing lightness. It also claims to cover 100% of <a href="https://en.wikipedia.org/wiki/Munsell_color_system">real-world surface colors</a> as documented by
Michael Pointer in 1980.</p>

<p><strong>Pros</strong></p>

<ul>
<li>Minimal hue shifts when changing lightness.</li>
<li>Vibrant primary colors.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Around 13% of its colors offered are
<a href="https://en.wikipedia.org/wiki/Imaginary_color">imaginary</a>, meaning they're
not within the human visible spectrum.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-prophoto-rgb-colors {
  --percents: color(prophoto-rgb 34% 58% 73%);
  --decimals: color(prophoto-rgb .34 .58 .73);

  --percent-opacity: color(prophoto-rgb 34% 58% 73% / 50%);
  --decimal-opacity: color(prophoto-rgb .34 .58 .73 / .5);

  /* chromaless and hueless */
  --empty-channels-black: color(prophoto-rgb none none none);
  --empty-channels-black2: color(prophoto-rgb);
}
</code></pre>
<h4 id="xyz_xyz-d50_xyz-d65" data-text="XYZ, XYZ-d50, XYZ-d65" tabindex="-1">XYZ, XYZ-d50, XYZ-d65</h4>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">111</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">113</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">15</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/color_value/color">Source</a></p>
        
      </div>
    
    
    
  



<p>The CIE XYZ color space encompasses all colors that are visible to a person with
average eyesight. This is why it is used as a standard reference for other color
spaces. Y is luminance, X and Z are possible chromas within the given Y
luminance.</p>

<p>The difference between d50 and d65 is the white point, where d50 uses the d50
white points and d65 uses the d65 white point.</p>



<p><strong>Pros</strong></p>

<ul>
<li>Linear-light access has handy use cases.</li>
<li>Great for physical color mixing.</li>
</ul>

<p><strong>Cons</strong></p>

<ul>
<li>Not perceptually linear like lch, oklch, lab and oklab are.</li>
</ul>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-xyz-colors {
  --percents: color(xyz 22% 26% 53%);
  --decimals: color(xyz .22 .26 .53);

  --percent-opacity: color(xyz .22 .26 .53 / 50%);
  --decimal-opacity: color(xyz .22 .26 .53 / .5);

  /* chromaless and hueless */
  --empty-channels-black: color(xyz none none none);
  --empty-channels-black2: color(xyz);
}
</code></pre><pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-xyz-d50-colors {
  --percents: color(xyz-d50 22% 26% 53%);
  --decimals: color(xyz-d50 .22 .26 .53);

  --percent-opacity: color(xyz-d50 .22 .26 .53 / 50%);
  --decimal-opacity: color(xyz-d50 .22 .26 .53 / .5);

  /* chromaless and hueless */
  --empty-channels-black: color(xyz-d50 none none none);
  --empty-channels-black2: color(xyz-d50);
}
</code></pre><pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-xyz-d65-colors {
  --percents: color(xyz-d65 22% 26% 53%);
  --decimals: color(xyz-d65 .22 .26 .53);

  --percent-opacity: color(xyz-d65 .22 .26 .53 / 50%);
  --decimal-opacity: color(xyz-d65 .22 .26 .53 / .5);

  /* chromaless and hueless */
  --empty-channels-black: color(xyz-d65 none none none);
  --empty-channels-black2: color(xyz-d65);
}
</code></pre>
<h4 id="custom_color_spaces" data-text="Custom color spaces" tabindex="-1">Custom color spaces</h4>



<p><a href="https://www.w3.org/TR/css-color-5">The CSS Color 5 specification</a> also has a
path for teaching the browser a <a href="https://www.w3.org/TR/css-color-5/#custom-color">custom color space</a>. This is an <a href="https://en.wikipedia.org/wiki/ICC_profile">ICC profile</a> that tells the browser how
to resolve colors.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">@color-profile --foo {
  src: url(path/to/custom.icc);
}
</code></pre>
<p>Once loaded, access colors from this custom profile with the <code translate="no" dir="ltr">color()</code> function
and specify the channel values for it.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.valid-css-color-from-a-custom-profile {
  background: color(--foo 1 0 0);
}
</code></pre>
<h3 id="color_interpolation" data-text="Color interpolation" tabindex="-1">Color interpolation</h3>

<p>Transitioning from one color to another is found in animation, gradients and
color mixing. This transition is typically specified as a starting color and an
ending color, where the browser is expected to interpolate between them.
Interpolate in this case means to generate a series of in-between colors to
create a smooth transition instead of an instant one.</p>

<p>With a gradient, the interpolation is a series of colors along a shape. With
animation it's a series of colors over time.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">@keyframes bg {
  0%, 100% {
    background: orange;
  }
  25% {
    background: magenta;
  }
  50% {
    background: lime;
  }
  75% {
    background: cyan;
  }
}

.circle {
  animation: bg 5s ease-in-out infinite;
}
</code></pre>


<p>With a gradient, the in-between colors are shown all at once:</p>



<h4 id="whats_new_in_color_interpolation" data-text="What's new in color interpolation" tabindex="-1">What's new in color interpolation</h4>

<p>With the addition of new gamuts and color spaces, there are new additional
options for interpolation. Transitioning a color <code translate="no" dir="ltr">in hsl</code> from blue to white
results in something very different from sRGB.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.classic-gradient-in-srgb {
  background: linear-gradient(to right, blue, white);
}

.new-gradient-in-hsl {
  background: linear-gradient(in hsl to right, blue, white);
}
</code></pre>


<p>Can't see the Codepen demo?</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72.png" alt="sRGB gradient shown above an HSL gradient." width="800" height="353" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/srgb-gradient-shown-above-85553144b3e72_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<p>Then what happens if you transition from a color in one space to a color in a
completely different space:</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.gradient {
  /* oklab will be the common space */
  background: linear-gradient(to right, lch(29.6 131 301), hsl(330 100% 50%));
}

.lch {
  /* lch is specified */
  background: linear-gradient(in lch to right, lch(29.6 131 301), hsl(330 100% 50%));
}
</code></pre>


<p>Can't see the Codepen demo?</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d.png" alt="okLAB gradient shown above an LCH gradient." width="800" height="348" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/oklab-gradient-shown-abov-4aba1e1f7e0d_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<p>Luckily for you, the <a href="https://www.w3.org/TR/css-color-4/#interpolation">Color 4</a>
specification has instructions for the browsers on how to handle these cross
color space interpolations. In the above case for <code translate="no" dir="ltr">.gradient</code>, browsers will
notice the differentiating color spaces and use the default color space <code translate="no" dir="ltr">oklab</code>.
You may think the browser would use lch as the color space, since that's the
first color, but it doesn't and that's why I show a second comparison gradient
<code translate="no" dir="ltr">.lch</code>. The <code translate="no" dir="ltr">.lch</code> gradient is a gradient from the lch color space.</p>

<h5 id="less_banding_thanks_to_16-bit_color" data-text="Less banding thanks to 16-bit color" tabindex="-1">Less banding thanks to 16-bit color</h5>

<p>Before this color work, all colors were saved in <strong>one 32-bit integer</strong> to
represent all four channels; red, green, blue and alpha. This is 8-bits per
channel and 2^ 24 possible colors (ignoring alpha). 2 ^ 24 = 16,777,216,
"millions of colors."</p>

<p>After this color work, <strong>four 16-bit floating point values</strong>, each channel has
its own float instead of being lumped together. This is 64-bits of data total,
resulting in many more than millions of colors.</p>

<p>This work is required to support HD color. This increases the amount of color
information that can be stored, which has a nice side effect of meaning there's
more colors for the browser to use in a gradient.</p>

<p>Gradient banding is when there aren't enough colors to create a smooth gradient
and "strips" of color become visible. Banding is heavily mitigated with the
upgrade to higher resolution color.</p>

<figure>
  <img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/six-panels-are-shown-eac-614abc71a28b3.png" alt="Six panels are shown, each with a varying amount of gradient banding
    and a little bit of information about compression and bit depth." width="800" height="674">

  <figcaption>
    Image <a href="https://www.willgibbons.com/color-banding/">source</a>
  </figcaption>
</figure>

<h4 id="controlling_interpolation" data-text="Controlling interpolation" tabindex="-1">Controlling interpolation</h4>

<p>The shortest distance between two points is always a straight line. With color
interpolation, browsers take the short route by default. Consider a scenario
where there are two points in an HSL color cylinder. A gradient acquires its
color steps by traveling along the line between the two points.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">linear-gradient(to right, #94e99c, #e06242)
</code></pre>
<figure>
  <img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-circular-gradient-a-li-d65ad80dd5676.png" alt="A circular gradient with a line from green to red, straight
    through the circle, going through the white areas." width="389" height="388">

  <figcaption>
    (mock demonstration) <br>
    Top down view, of an HSL cylinder with a line between the color stops
  </figcaption>
</figure>

<p>The above gradient line goes straight between the greenish color to the reddish
color, passing through the center of the color space. While the above is great
to help with initial understanding, it's not exactly what happens. Here is the
gradient in the following Codepen, and it's clearly not white in the middle like
the mock demonstration showed.</p>



<p>The middle area of the gradient has lost its vibrance though. This is because
the most vibrant colors are at the edge of the color space shape, not in the
center where the interpolation traveled near. This is commonly referred to as
the "<a href="#specifying_more_gradient_stops_to_avoid_the_dead_zone">dead zone</a>." There
are a few ways to fix or work around this.</p>

<h5 id="specifying_more_gradient_stops_to_avoid_the_dead_zone" data-text="Specifying more gradient stops to avoid the dead zone" tabindex="-1">Specifying more gradient stops to avoid the dead zone</h5>

<p>A technique for avoiding the dead zone today is to add additional color stops in
the gradient that intentionally guide the interpolation to stay within the
vibrant ranges of a color space. It is literally a work around, as the
additional stops help it work around the dead zone.</p>

<p>There's a <a href="https://www.learnui.design/tools/gradient-generator.html">gradient tool</a> created by <a href="https://twitter.com/erikdkennedy">Erik Kennedy</a> that calculates additional color
stops for you, to help you avoid the dead zone even in color spaces that tend to
gravitate towards it. Using it, passing the same colors from the first example
but changing the color interpolation to HSL, it produces this:</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">linear-gradient(90deg, #94e99c, #99e789, #ace67d, #c4e472, #e2e366, #e2bf5a, #e1934e, #e06242);
</code></pre>
<figure>
  <img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/a-circular-gradient-a-li-5adfb140eed03.png" alt="A circular gradient with a line curving around the middle with many
    gradient stops along the way, guiding it away from the center." width="389" height="388">

  <figcaption>
    (mock demonstration)<br>
    Top down view of an HSL cylinder with a curved line featuring 9 color stops
  </figcaption>
</figure>

<p>With guided stop points, the interpolation is no longer a straight line, but
appears to curve around the dead zone, helping maintain saturation, resulting in
a much more vibrant gradient.</p>



<p>While the tool does a great job, <strong>what if you could have similar or greater
control right from CSS?</strong></p>

<h5 id="directing_the_color_interpolation" data-text="Directing the color interpolation" tabindex="-1">Directing the color interpolation</h5>

<p>In Color 4, the ability to control the <a href="https://www.w3.org/TR/css-color-4/#hue-interpolation">hue interpolation</a> strategy
was added and is a new way around (:wink:) the dead zone. Think about a hue
angle and consider a 2 stop gradient that only changes the angle, going hue
shifting from <code translate="no" dir="ltr">140deg</code> to <code translate="no" dir="ltr">240deg</code> for example.</p>



<h6 id="shorter_vs_longer_hue_interpolation" data-text="Shorter vs longer hue interpolation" tabindex="-1">Shorter vs longer hue interpolation</h6>

<p>The gradient will by default take the
<a href="https://www.w3.org/TR/css-color-4/#hue-shorter"><code translate="no" dir="ltr">shorter</code></a> route it can unless
you specify for it to take the
<a href="https://www.w3.org/TR/css-color-4/#hue-longer"><code translate="no" dir="ltr">longer</code></a> route. Hue
interpolation options direct the angle rotation, like telling someone to turn
left instead of right (heh, Zoolander):</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/the-same-gradient-circle-ee0da812abfa3.png" alt="The same gradient circle visual as before, but this time there is an
  inner circle drawn that shows the long way vs the short way." width="389" height="388"></p>

<p>In the above visual example of hue interpolation distances, the short path and
the long path are simulated to illustrate the difference. The short distance has
less hues between it because it's traveled through the least amount of distance
possible, where the long distance will have traveled over more hues.</p>

<h6 id="increasing_vs_decreasing_hue_interpolation" data-text="Increasing vs decreasing hue interpolation" tabindex="-1">Increasing vs decreasing hue interpolation</h6>

<p>There are two more hue interpolation strategies in <a href="https://www.w3.org/TR/css-color-4">Color 4</a>, but they are exclusive for cylindrical
color spaces. Staying with the two colors from the previous examples, the visual
now shows how increasing and decreasing works.</p>



<p>The above Codepen used <a href="https://colorjs.io/">ColorJS</a> to demonstrate the
expected result. The CSS you would write to achieve the same effect without a
Javascript library would be:</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.longer-hue-interpolation-in-css {
  background: linear-gradient(
    to right in hsl longer hue,
    hsl(180deg 100% 75%),
    hsl(240deg 100% 75%)
  );
}

.decreasing-hue-interpolation-in-css {
  background: linear-gradient(
    to right in hsl decreasing hue,
    hsl(180deg 100% 75%),
    hsl(240deg 100% 75%)
  );
}
</code></pre>
<p>To close out hue interpolation, here's a fun playground where you can change the
hue between 2 color stops and see the effects of a hue interpolation choice as
well as how color spaces change gradient results. The effects can be very
different; consider this as four new tricks just went into your color toolbelt.</p>



<h4 id="gradients_in_different_color_spaces" data-text="Gradients in different color spaces" tabindex="-1">Gradients in different color spaces</h4>

<p>Each color space, given its unique shape and color arrangement, will result in a
different gradient. Look at the examples below, especially at "blue to white."
Look at how each color space handles that differently. Notice how many go purple
in the middle, that's called a "hue shift" during interpolation.</p>



<p>Can't see the Codepen demo?</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3.png" alt="Screenshot of the blue to white gradient set." width="800" height="371" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/screenshot-the-blue-whi-d050f4edb43f3_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<p>Image shown is only 1 of many examples from the Codepen. It's worth trying
Canary or Safari Tech Preview to see these for yourself.</p>

<p>Some gradients in these spaces will be more vibrant than others or travel less
through <a href="#specifying_more_gradient_stops_to_avoid_the_dead_zone">dead zones</a>.
Spaces like <code translate="no" dir="ltr">lab</code> pack colors together in a way optimized for saturation, as
opposed to spaces optimized for humans to write color in like <a href="#hwb"><code translate="no" dir="ltr">hwb()</code></a>.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.hwb {
  background: linear-gradient(to right, hwb(250 10% 10%), hwb(150 10% 10%));
}
.lab {
  background: linear-gradient(to right, lab(30 59.4 -96), lab(80 -64 36.2));
}
</code></pre>


<p>The above demo, while subtle in the results, does show more consistent
interpolation with lab. The syntax of lab isn't simple to read though, there's
negative numbers that are very unfamiliar when coming from rgb or hsl. Good
news, we can use hwb for a familiar syntax but ask for the gradient to be
interpolated entirely within another color space, like oklab.</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">.hwb {
  background: linear-gradient(in hwb to right, hwb(250 10% 10%), hwb(150 10% 10%));
}
.lab {
  background: linear-gradient(in oklab to right, hwb(250 10% 10%), hwb(150 10% 10%));
}
</code></pre>


<p>Can't see the Codepen demo?</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58.png" alt="Two vibrant gradients stacked to help see a comparison. The hwb gradient is slightly more vibrant." width="800" height="360" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/two-vibrant-gradients-sta-0a0cec5af7f58_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<p>This example uses the same colors in hwb but specifies the color space for
interpolation to either hwb or oklab. <code translate="no" dir="ltr">hwb</code> is a great colorspace for high
vibrance but possible dead zones or bright spots (see the cyan hot spot in the
top example). oklab is great for perceptually linear gradients that stay
saturated. This feature is a lot of fun as you can try on a few different color
spaces to see which gradient you like best.</p>

<p>Here's a Codepen experimenting with gradients and color spaces, mixing and
matching strategies to explore the possibilities. Even a transition from black
to white is different in each color space!</p>



<p>Can't see the Codepen demo?</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228.png" alt="Each color space showing how it interpolates from black to white, each with a different result." width="800" height="384" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/each-color-space-showing-1adebf6072228_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<h3 id="gamut_clamping" data-text="Gamut clamping" tabindex="-1">Gamut clamping</h3>

<p>There exist scenarios where a color may ask for something outside of a gamut.
Consider the following color:</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">rgb(300 255 255)
</code></pre>
<p>The maximum for a color channel in the <code translate="no" dir="ltr">rgb</code> color space is <code translate="no" dir="ltr">255</code>, but here
<code translate="no" dir="ltr">300</code> was specified for red. What happens? Gamut clamping.</p>

<p>Clamping is when extra information is simply removed. <code translate="no" dir="ltr">300</code> will become <code translate="no" dir="ltr">255</code>
internally to the color engine. The color has now been clamped within its space.</p>

<h3 id="choosing_a_color_space" data-text="Choosing a color space" tabindex="-1">Choosing a color space</h3>

<p>Many folks, after learning about these color spaces and their effects, feel
overwhelmed and want to know which "one" to choose. From my studies and
experience, I don't see one color space as the single one for all my tasks. Each
has moments when they produce the desired outcome.</p>

<p><strong>If there was one best space, then there wouldn't be so many new spaces being
introduced.</strong></p>

<p>However, I can say that the CIE spaces—<code translate="no" dir="ltr">lab</code>, <code translate="no" dir="ltr">oklab</code>, <code translate="no" dir="ltr">lch</code> and <code translate="no" dir="ltr">oklch</code>—are my
starting places. If the outcome of them isn't what I'm looking for, then I'll go
test other spaces. For mixing colors and creating gradients, I agree with the
default spec choice of <code translate="no" dir="ltr">oklab</code>. For color systems and overall UI colors, I like
<code translate="no" dir="ltr">oklch</code>.</p>

<p>Here are a couple articles where folks have shared their updated color
strategies given these new color spaces and features. For example, Andrey Sitnik
has gone all in on <code translate="no" dir="ltr">oklch</code>, maybe they'll convince you to do the same:</p>

<ol>
<li><a href="https://evilmartians.com/chronicles/oklch-in-css-why-quit-rgb-hsl">OKLCH in CSS: why we moved from RGB and    HSL</a> by
<a href="https://twitter.com/sitnikcode">Andrey Sitnik</a></li>
<li><a href="https://www.joshwcomeau.com/css/color-formats/#picking-the-right-color-format">Color    Formats</a>
by <a href="https://www.joshwcomeau.com/">Josh W. Comeau</a></li>
<li><a href="https://chriscoyier.net/2023/01/22/ok-oklch-%f0%9f%91%91/">OK, OKLCH</a> by
<a href="https://twitter.com/chriscoyier">Chris Coyier</a></li>
</ol>

<h2 id="migrating_to_hd_css_color" data-text="Migrating to HD CSS color" tabindex="-1">Migrating to HD CSS color</h2>

<p>There are two main strategies for updating your web project color to support
wide gamut displays:</p>

<ol>
<li><p><strong>Graceful degradation</strong><br>Use the new color spaces and let the browser and
operating system figure out which color to show based on display capabilities.</p></li>
<li><p><strong>Progressive enhancement</strong><br>Use <code translate="no" dir="ltr">@supports</code> and <code translate="no" dir="ltr">@media</code> to assess the
capabilities of the user's browser, and if conditions are met, provide wide
gamut colors.</p></li>
</ol>

<p>If a browser doesn't understand <code translate="no" dir="ltr">display-p3</code> color:</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">color: red;
color: color(display-p3 1 0 0);
</code></pre>
<p>If a browser does understand <code translate="no" dir="ltr">display-p3</code> color:</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">color: red;
color: color(display-p3 1 0 0);
</code></pre>
<p>There are advantages and disadvantages to each. Here's a quick list of pros and
cons:</p>

<p><strong>Graceful degradation</strong></p>

<ul>
<li>Pros
<ul>
<li>The simplest route.</li>
<li>The browser will gamut map or clamp to sRGB if not a wide gamut display,
therefore the responsibility is on the browser.</li>
</ul></li>
<li>Cons
<ul>
<li>The browser may gamut clamp or gamut map to a color you don't love.</li>
<li>The browser may not understand the color request and fail entirely. However
this can be mitigated by specifying the color twice, letting the cascade
fallback to the previous color it does understand.</li>
</ul></li>
</ul>

<p><strong>Progressive enhancement</strong></p>

<ul>
<li>Pros
<ul>
<li>More control with managed color fidelity.</li>
<li>An additive strategy that doesn't affect the current colors.</li>
</ul></li>
<li>Cons
<ul>
<li>You need to manage two separate color syntaxes.</li>
<li>You need to manage two separate color gamuts.</li>
</ul></li>
</ul>

<h3 id="checking_for_gamut_and_color_space_support" data-text="Checking for gamut and color space support" tabindex="-1">Checking for gamut and color space support</h3>

<p>The browser allows checking for support for wide gamut capabilities and color
syntax support from CSS and JavaScript. The exact gamut of colors the user has
is not made available, a generalized answer is provided so user privacy is
maintained. The exact color space support is made available though, as it's not
specific to capabilities of the user's hardware like gamut is.</p>

<h4 id="color_gamut_support_queries" data-text="Color gamut support queries" tabindex="-1">Color gamut support queries</h4>

<p>The following code examples check the visiting user's range of colors in their
display.</p>

<h5 id="checking_from_css" data-text="Checking from CSS" tabindex="-1">Checking from CSS</h5>

<p>The least specific support inquiry is the
<a href="https://developer.mozilla.org/docs/Web/CSS/@media/dynamic-range"><code translate="no" dir="ltr">dynamic-range</code></a>
media query:</p>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">98</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">98</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">100</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">13.1</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/@media/dynamic-range">Source</a></p>
        
      </div>
    
    
    
  
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">@media (dynamic-range: high) {
  /* safe to use HD colors */
}
</code></pre>
<p>Approximate, or more, support can be inquired with the
<a href="https://developer.mozilla.org/docs/Web/CSS/@media/color-gamut"><code translate="no" dir="ltr">color-gamut</code></a>
media query:</p>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">58</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">79</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">110</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">10</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/@media/color-gamut">Source</a></p>
        
      </div>
    
    
    
  
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">@media (color-gamut: srgb) {
  /* safe to use srgb colors */
}

@media (color-gamut: p3) {
  /* safe to use p3 colors */
}

@media (color-gamut: rec2020) {
  /* safe to use rec2020 colors */
}
</code></pre>
<p>There are an additional two media queries for checking support:</p>

<ol>
<li><a href="https://developer.mozilla.org/docs/Web/CSS/@media/color"><code translate="no" dir="ltr">@media (color)</code></a></li>
<li><a href="https://developer.mozilla.org/docs/Web/CSS/@media/color-index"><code translate="no" dir="ltr">@media (color-index)</code></a></li>
</ol>

<h5 id="checking_from_javascript" data-text="Checking from JavaScript" tabindex="-1">Checking from JavaScript</h5>

<p>For JavaScript, the
<a href="https://developer.mozilla.org/docs/Web/API/Window/matchMedia"><code translate="no" dir="ltr">window.matchMedia()</code></a>
function can be called and passed a media query for evaluation.</p>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">9</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">12</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">6</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">5.1</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/API/Window/matchMedia">Source</a></p>
        
      </div>
    
    
    
  
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">const hasHighDynamicRange = window
.matchMedia('(dynamic-range: high)')
.matches;

console.log(hasHighDynamicRange); // true || false

const hasP3Color = window
.matchMedia('(color-gamut: p3)')
.matches;

console.log(hasP3Color); // true || false
</code></pre>
<p>The above pattern can be copied for the rest of the media queries.</p>

<h4 id="color_space_support_queries" data-text="Color space support queries" tabindex="-1">Color space support queries</h4>

<p>The following code examples check the visiting user's browser and its selection
of color spaces to work with.</p>

<h5 id="checking_from_css_2" data-text="Checking from CSS" tabindex="-1">Checking from CSS</h5>

<p>Individual color space support can be inquired using an
<a href="https://developer.mozilla.org/docs/Web/CSS/@supports"><code translate="no" dir="ltr">@supports</code></a> query:</p>

<div>
        <p>Browser Support</p>
        <ul>
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="chrome" data-support="yes">28</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="edge" data-support="yes">12</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="firefox" data-support="yes">22</li>
  
  
          
  
  
    
      
        
          
          
        
      
    
    
  
  <li data-browser="safari" data-support="yes">9</li>
  
  
        </ul>
        
        <p><a href="https://developer.mozilla.org/docs/Web/CSS/@supports">Source</a></p>
        
      </div>
    
    
    
  
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">@supports (background: rgb(0 0 0)) {
  /* rgb color space supported */
}


@supports (background: color(display-p3 0 0 0)) {
  /* display-p3 color space supported */
}


@supports (background: oklch(0 0 0)) {
  /* oklch color space supported */
}
</code></pre>
<h5 id="checking_from_javascript_2" data-text="Checking from JavaScript" tabindex="-1">Checking from JavaScript</h5>

<p>For JavaScript, the
<a href="https://developer.mozilla.org/docs/Web/API/CSS/supports"><code translate="no" dir="ltr">CSS.supports()</code></a>
function can be called and passed a property and value pair to see if the
browser understands.</p>


<pre translate="no" dir="ltr"><code translate="no" dir="ltr">CSS.supports('background: rgb(0 0 0)')
CSS.supports('background: color(display-p3 0 0 0)')
CSS.supports('background: oklch(0 0 0)')
</code></pre>
<h4 id="putting_the_hardware_and_parsing_checks_together" data-text="Putting the hardware and parsing checks together" tabindex="-1">Putting the hardware and parsing checks together</h4>

<p>While waiting for each browser to implement these new color features, it's a
good idea to check for both hardware capability and color parsing capability.
This is often what I use when progressively enhancing colors to high definition:</p>
<pre translate="no" dir="ltr"><code translate="no" dir="ltr">:root {
  --neon-red: rgb(100% 0 0);
  --neon-blue: rgb(0 0 100%);
}

/* is the display HD? */
@media (dynamic-range: high) {

  /* does this browser understand display-p3? */
  @supports (color: color(display-p3 0 0 0)) {

    /* safe to use display-p3 colors */
    --neon-red: color(display-p3 1 0 0);
    --neon-blue: color(display-p3 0 0 1);
  }
}
</code></pre>
<h3 id="debugging_color_with_chrome_devtools" data-text="Debugging color with Chrome DevTools" tabindex="-1">Debugging color with Chrome DevTools</h3>

<p><a href="https://developer.chrome.com/blog/new-in-devtools-111#color">Chrome DevTools is updated</a> and equipped with new tools to help developers
create, convert and debug HD color.</p>

<h4 id="updated_color_picker" data-text="Updated color picker" tabindex="-1">Updated color picker</h4>

<p>The color picker now supports all the new color spaces. Allowing authors to
interact with channel values just as they would have.</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34.png" alt="DevTools showing display-p3 color support." width="800" height="549" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-display-bc6f91e237c34_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<h4 id="gamut_boundaries" data-text="Gamut boundaries" tabindex="-1">Gamut boundaries</h4>

<p>A gamut boundary line has also been added, drawing a line between srgb and
display-p3 gamuts. Making it clear which gamut the selected color is within.</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca.png" alt="DevTools showing a gamut line in the color picker." width="800" height="532" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-showing-gamut-l-e2123e17927ca_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<p>This helps authors visually differentiate between HD colors and non-HD colors.
It's especially helpful when working with the <code translate="no" dir="ltr">color()</code> function and the new
color spaces because they're capable of producing both non-HD and HD colors. If
you want to check which gamut your color is in, pop up the color picker and see!</p>

<h4 id="converting_colors" data-text="Converting colors" tabindex="-1">Converting colors</h4>

<p>DevTools has been able to convert colors between supported formats like hsl,
hwb, rgb and hex for many years. <code translate="no" dir="ltr">shift + click</code> on a square color swatch in the
Styles pane to perform this conversion. The new color tools don't just cycle
through conversions, they yield a popup where authors can see and pick the
conversion they want.</p>

<video controls="" loop="" muted=""> <source src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/video/vS06HQ1YTsbMKSFTIPl2iogUQP73/wsWrvMTPYM0a5tmNdzlQ.mp4" type="video/mp4"> </video>

<p>When converting, it's important to know if the conversion was clipped to fit the
space. DevTools now have a warning icon to the converted color that alerts you
to this clipping.</p>

<p><img src="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405.png" alt="DevTools informing your conversion about gamut clipping with a warning icon next to the color." width="800" height="204" srcset="https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_36.png 36w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_48.png 48w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_72.png 72w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_96.png 96w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_480.png 480w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_720.png 720w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_856.png 856w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_960.png 960w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_1440.png 1440w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_1920.png 1920w,https://developer.chrome.com/static/docs/css-ui/high-definition-css-color-guide/image/devtools-informing-conve-2ba43689f9405_2880.png 2880w" sizes="(max-width: 840px) 100vw, 856px"></p>

<p>Discover more CSS debugging feature in DevTools in their <a href="https://developer.chrome.com/blog/new-in-devtools-111#color">recent announcement</a>.</p>

<h2 id="conclusion" data-text="Conclusion" tabindex="-1">Conclusion</h2>

<p>Non-sRGB color spaces on the web are in their early days but I believe we'll see
an increase in usage from designers and developers over time. Knowing which
color space to build a design system on, for example, is a strong tool to be in
a creators toolbelt. Each color space offers unique features and a reason it was
added to the CSS specification, and it is ok to start small with these and add
as needed.</p>

<p>Enjoy playing with these new color toys! More vibrance, consistent manipulations
and interpolations and overall deliver a more colorful experience to your users.</p>

<h3 id="additional_reading" data-text="Additional reading" tabindex="-1">Additional reading</h3>

<ul>
<li><a href="https://lea.verou.me/2020/04/lch-colors-in-css-what-why-and-how/">https://lea.verou.me/2020/04/lch-colors-in-css-what-why-and-how/</a></li>
<li><a href="https://www.w3.org/Graphics/Color/Workshop/slides/lilley/lilley.html">https://www.w3.org/Graphics/Color/Workshop/slides/lilley/lilley.html</a></li>
<li><a href="https://darker.ink/writings/Towards-richer-colors-on-the-Web">https://darker.ink/writings/Towards-richer-colors-on-the-Web</a></li>
<li><a href="https://bottosson.github.io/posts/colorpicker/">https://bottosson.github.io/posts/colorpicker/</a></li>
<li><a href="https://www.w3.org/Graphics/Color/Workshop/slides/Erias.pdf">https://www.w3.org/Graphics/Color/Workshop/slides/Erias.pdf</a></li>
<li><a href="https://atmos.style/blog/lch-color-space">https://atmos.style/blog/lch-color-space</a></li>
<li><a href="https://stripe.com/blog/accessible-color-systems">https://stripe.com/blog/accessible-color-systems</a></li>
<li><a href="https://cran.r-project.org/web/packages/colordistance/vignettes/color-spaces.html">https://cran.r-project.org/web/packages/colordistance/vignettes/color-spaces.html</a></li>
<li><a href="https://afc163.github.io/color3d/">https://afc163.github.io/color3d/</a></li>
<li><a href="https://github.com/nschloe/colorio#gamut-visualization">https://github.com/nschloe/colorio#gamut-visualization</a></li>
<li><a href="https://www.learnui.design/tools/gradient-generator.html">https://www.learnui.design/tools/gradient-generator.html</a></li>
<li><a href="https://webkit.org/blog/10042/wide-gamut-color-in-css-with-display-p3/">https://webkit.org/blog/10042/wide-gamut-color-in-css-with-display-p3/</a></li>
<li><a href="https://www.w3.org/TR/css-color-4/">https://www.w3.org/TR/css-color-4/</a></li>
<li><a href="https://www.w3.org/TR/css-color-5/">https://www.w3.org/TR/css-color-5/</a></li>
<li><a href="https://en.wikipedia.org/wiki/CIE_1931_color_space">https://en.wikipedia.org/wiki/CIE_1931_color_space</a></li>
<li><a href="https://www.joshwcomeau.com/css/color-formats/">https://www.joshwcomeau.com/css/color-formats/</a></li>
<li><a href="https://ciechanow.ski/color-spaces/">https://ciechanow.ski/color-spaces/</a></li>
</ul>

<h3 id="additional_color_level_5_articles" data-text="Additional Color Level 5 articles" tabindex="-1">Additional Color Level 5 articles</h3>

<ul>
<li><a href="https://developer.chrome.com/blog/css-relative-color-syntax">CSS relative color syntax</a></li>
<li><a href="https://developer.chrome.com/blog/css-color-mix">CSS color-mix</a></li>
</ul>

  

  
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Infant microbes and metabolites point to childhood neurodevelopmental disorders (118 pts)]]></title>
            <link>https://medicalxpress.com/news/2024-04-autism-adhd-linked-disturbed-gut.html</link>
            <guid>39965446</guid>
            <pubDate>Mon, 08 Apr 2024 01:30:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://medicalxpress.com/news/2024-04-autism-adhd-linked-disturbed-gut.html">https://medicalxpress.com/news/2024-04-autism-adhd-linked-disturbed-gut.html</a>, See on <a href="https://news.ycombinator.com/item?id=39965446">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
									    
<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2024/autism-and-adhd-are-li.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2024/autism-and-adhd-are-li.jpg" data-sub-html="Credit: <i>Cell</i> (2024). DOI: 10.1016/j.cell.2024.02.035">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2024/autism-and-adhd-are-li.jpg" alt="Autism and ADHD are linked to disturbed gut flora very early in life" title="Credit: Cell (2024). DOI: 10.1016/j.cell.2024.02.035" width="800" height="530">
             <figcaption>
                Credit: <i>Cell</i> (2024). DOI: 10.1016/j.cell.2024.02.035
            </figcaption>        </figure>
    </div><p>Disturbed gut flora during the first years of life is associated with diagnoses such as autism and ADHD later in life. This is according to a study led by researchers at the University of Florida and Linköping University and <a href="https://doi.org/10.1016/j.cell.2024.02.035" target="_blank">published</a> in the journal <i>Cell</i>.</p>


                                        
                                                                                  
                                        
                                                                                                                                    <p>The study is the first forward-looking, or prospective, study to examine gut flora composition and a large variety of other factors in infants, in relation to the development of the children's nervous system. The researchers have found many biological markers that seem to be associated with future neurological development disorders, such as autism spectrum disorder, ADHD, communication disorder and intellectual disability.</p>
<p>"The remarkable aspect of the work is that these biomarkers are found at birth in cord blood or in the child's stool at one year of age over a decade prior to the diagnosis," says Eric W Triplett, professor at the Department of Microbiology and Cell Science at the University of Florida, U.S., one of the researchers who led the study.</p>
<p>The study is part of the ABIS (All Babies in Southeast Sweden) study led by Johnny Ludvigsson at Linköping University. More than 16,000 children born in 1997–1999, representing the general population, have been followed from birth into their twenties. Of these, 1,197 children, corresponding to 7.3%, have been diagnosed with autism spectrum disorder, ADHD, communication disorder or intellectual disability.</p>
<p>A large number of lifestyle and environmental factors have been identified through surveys conducted on several occasions during the children's upbringing. For some of the children, the researchers have analyzed substances in <a href="https://medicalxpress.com/tags/umbilical+cord+blood/" rel="tag">umbilical cord blood</a> and bacteria in their stool at the age of 1.</p>

                                                                                                        <!-- Google middle Adsense block -->
    
                                                                                                                                            <p>"We can see in the study that there are clear differences in the intestinal flora already during the first year of life between those who develop autism or ADHD and those who don't. We've found associations with some factors that affect gut bacteria, such as antibiotic treatment during the child's first year, which is linked to an increased risk of these diseases," says Ludvigsson, senior professor at the Department of Biomedical and Clinical Sciences at Linköping University, who led the study together with Triplett.</p>
<p>Children who had repeated ear infections during their first year of life had an increased risk of being diagnosed with a developmental neurological disorder later in life. It is probably not the infection itself that is the culprit, but the researchers suspect a link to antibiotic treatment. They found that the presence of Citrobacter bacteria or the absence of Coprococcus bacteria increased the risk of future diagnosis.</p>
<p>One possible explanation may be that antibiotic treatment has disturbed the composition of the gut flora in a way that contributes to neurodevelopmental disorders. The risk of <a href="https://medicalxpress.com/tags/antibiotic+treatment/" rel="tag">antibiotic treatment</a> damaging the gut flora and increasing the risk of diseases linked to the immune system, such as type 1 diabetes and childhood rheumatism, has been shown in previous studies.</p>
<p>"Coprococcus and Akkermansia muciniphila have potential protective effects. These bacteria were correlated with important substances in the stool, such as vitamin B and precursors to neurotransmitters which play vital roles orchestrating signaling in the brain. Overall, we saw deficits in these bacteria in children who later received a developmental neurological diagnosis," says Angelica Ahrens, Assistant Scientist in Triplett's research group at the University of Florida and the first author of this study.</p>

                                                                                                                                            <p>The present study also confirms that the risk of developmental neurological diagnosis in the child increases if the parents smoke. Conversely, breastfeeding has a protective effect, according to the study.</p>
<p>In cord blood taken at the birth of children, the researchers analyzed the amounts of various substances from the body's metabolism, such as <a href="https://medicalxpress.com/tags/fatty+acids/" rel="tag">fatty acids</a> and amino acids. They also measured some harmful substances that come from outside, such as nicotine and environmental toxins. They compared substances in the umbilical cord blood of 27 children diagnosed with autism with the same number of children without a diagnosis.</p>
<p>It turned out that children who were later diagnosed had low levels of several important fats in the umbilical cord blood. One of these was linolenic acid, which is needed for the formation of omega 3 fatty acids that are anti-inflammatory and have several other effects in the brain.</p>
<p>The same group also had higher levels than the control group of a PFAS substance, a group of substances used as flame retardants and shown to negatively affect the immune system in several different ways. PFAS substances can enter the body via drinking water, food and the air we breathe.</p>
<p>It is not certain that the relationships that the research team found in the Swedish children can be generalized to other populations, but these issues need to be studied in other groups as well. Another question is whether gut flora imbalance is a triggering factor or whether it has occurred as a result of underlying factors, such as diet or antibiotics.</p>
<p>However, even when the researchers accounted for risk factors that might affect the gut flora, they found that the link between future diagnosis remained for many of the bacteria. This indicates that some of the differences in gut flora between children with and without future diagnosis are not explained by such risk factors.</p>
<p>The research is at an early stage and more studies are needed, but the discovery that many biomarkers for future developmental neurological disorders can be observed at an early age opens up the possibility of developing screening protocols and <a href="https://medicalxpress.com/tags/preventive+measures/" rel="tag">preventive measures</a> in the long term.</p>

                                                                                                                                                                            
                                        											<div>
												                                                    <p><strong>More information:</strong>
                                                    Angelica P. Ahrens et al, Infant microbes and metabolites point to childhood neurodevelopmental disorders, <i>Cell</i> (2024). <a data-doi="1" href="https://dx.doi.org/10.1016/j.cell.2024.02.035" target="_blank">DOI: 10.1016/j.cell.2024.02.035</a>
																								
																								</p><div>
													<p><strong>Journal information:</strong>
																											<a href="https://medicalxpress.com/journals/cell/"><cite>Cell</cite></a></p><a href="http://www.cell.com/" target="_blank" rel="nofollow">
															<svg>
																<use href="https://medx.b-cdn.net/tmpl/v6/img/svg/sprite.svg#icon_open" x="0" y="0"></use>
															</svg>
														</a> 
																									</div>
																							</div>
                                        											
																					
                                                                                                                        
                                        <!-- print only -->
                                        <div>
                                            <p><strong>Citation</strong>:
                                                 Autism and ADHD are linked to disturbed gut flora very early in life (2024, April 4)
                                                 retrieved 8 April 2024
                                                 from https://medicalxpress.com/news/2024-04-autism-adhd-linked-disturbed-gut.html
                                            </p>
                                            <p>
                                            This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no
                                            part may be reproduced without the written permission. The content is provided for information purposes only.
                                            </p>
                                        </div>
                                        
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Phytomining – Extracting Minerals via Plants (117 pts)]]></title>
            <link>https://arpa-e.energy.gov/news-and-media/press-releases/us-department-energy-announces-10-million-explore-using-plants</link>
            <guid>39965267</guid>
            <pubDate>Mon, 08 Apr 2024 00:55:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arpa-e.energy.gov/news-and-media/press-releases/us-department-energy-announces-10-million-explore-using-plants">https://arpa-e.energy.gov/news-and-media/press-releases/us-department-energy-announces-10-million-explore-using-plants</a>, See on <a href="https://news.ycombinator.com/item?id=39965267">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="block-arpae-content">
  
    
      <article data-history-node-id="36018">


<div>
    <div> 
        <div>
                
            <p><img loading="lazy" src="https://arpa-e.energy.gov/sites/default/files/PHYTOMINES%20ET%20Image.png" width="1200" height="900" alt="">

</p>
      
            </div>
        <div>
            
            <p><span>
            <p>ARPA-E Exploratory Topic to Examine Feasibility of Cost-Competitive and Low Carbon-Footprint Nickel Extraction</p>
      </span></p>
        </div>
    </div>
    <div><p><strong>WASHINGTON, D.C. — </strong>The U.S. Department of Energy (DOE) today announced up to $10 million in funding to explore nickel extraction from soil using plants—a process known as phytomining—to establish a competitive domestic supply chain, supplement conventional mining methods, and reduce nickel imports. Managed by the Advanced Research Projects Agency-Energy (ARPA-E), this effort supports&nbsp; President Biden’s Investing in America agenda to strengthen domestic critical materials supply chains, enhance our economic and national security, and meet the growing demand for critical materials needed to ensure America leads the world in the emerging clean energy economy.</p><p>“In order to accomplish the goals laid out by President Biden to meet our clean energy targets, and support our economy and national security, it’s going to take all-hands-on-deck approach and innovative solutions,”&nbsp;<strong>said ARPA-E Director Evelyn N. Wang.</strong>&nbsp;“By exploring phytomining to extract nickel as the first target critical material, ARPA-E aims to achieve a cost-competitive and low-carbon footprint extraction approach needed to support the energy transition.”</p><p>Among the critical materials named in the DOE&nbsp;<a href="https://www.energy.gov/sites/default/files/2023-07/doe-critical-material-assessment_07312023.pdf"><strong>Critical Materials Assessment</strong></a> (CMA), nickel serves as an ideal target to validate the viability of phytomining in the U.S. due to the large number of documented nickel hyperaccumulation (HA) plants. Nickel is used in the cathodes of lithium-ion batteries present in electric vehicles, consumer electronics, stationary storage, stainless steel, metallurgy, coatings, electroplating, and other alloys. Nickel is crucial to global clean energy technology supply chains and future demand is expected to grow.</p><p>The new ARPA-E Exploratory Topic announced today, <a href="https://arpa-e.energy.gov/technologies/exploratory-topics/phytomining"><strong>Plant HYperaccumulators TO MIne Nickel-Enriched Soils (PHYTOMINES)</strong></a>, seeks to spur the technological development of phytomining in the United States that could complement current and future domestic sources of nickel and catalyze phytomining of critical minerals beyond nickel.</p><p>The targeted outcomes of PHYTOMINES are:&nbsp;<o:p></o:p></p><ul><li>Developing technologies that optimize the biotic systems which regulate the availability and uptake of nickel by hyperaccumulator plants.<o:p></o:p><ul><li>Technologies could be interventions in the soil or plant microbiome or the development of plant traits that enable the accumulation of nickel at an enhanced rate. ARPA-E envisions these projects as early-stage proof-of-concepts likely to take place in closed or open-air laboratories, greenhouses, or confined fields where light, humidity, and temperature regimes can be fully programmed.<o:p></o:p></li></ul></li><li>Understanding the interrelationships of the geologic, ecological and economic factors that affect the potential of phytomining.<o:p></o:p><ul><li>Possible projects include mapping HA species of interest, mineral characteristics in soil, and land ownership data for natural habitats and adjacent areas viable for phytomining, scaling opportunities, and technoeconomic and lifecycle analyses of phytomining projects.<o:p></o:p></li></ul></li></ul><p>PHYTOMINES encourages partnerships between farmers, scientists, battery manufacturers, steel and mining industries, and more. You can access more information on <a href="https://arpa-e-foa.energy.gov/Default.aspx#FoaId521a7aa4-b255-4c3b-a211-b128d2a4a0e4"><strong>ARPA-E Exchange</strong></a>.<o:p></o:p></p><p>ARPA-E advances high-potential, high-impact clean energy technologies across a wide range of technical areas that are strategic to America's energy security. Learn more about these efforts and ARPA-E's commitment to ensuring the United States continues to lead the world in developing and deploying advanced clean energy technologies.&nbsp;<o:p></o:p></p><p>###<span><o:p></o:p></span></p><hr><h4>Press and General Inquiries:<br><strong>202-287-5440</strong><br><a href="mailto:arpa-e-comms@hq.doe.gov"><strong>ARPA-E-Comms@hq.doe.gov</strong></a></h4><hr></div>
</div>


</article>
  </div></div>]]></description>
        </item>
    </channel>
</rss>