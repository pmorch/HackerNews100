<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 20 Sep 2023 18:00:08 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[DALL·E 3 (251 pts)]]></title>
            <link>https://openai.com/dall-e-3</link>
            <guid>37586900</guid>
            <pubDate>Wed, 20 Sep 2023 17:18:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/dall-e-3">https://openai.com/dall-e-3</a>, See on <a href="https://news.ycombinator.com/item?id=37586900">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><strong>Core Research and Execution</strong><br>Gabriel Goh, James Betker, Li Jing, Aditya Ramesh</p><p><strong>Research Contributors—Primary</strong><br>Tim Brooks, Jianfeng Wang, Lindsey Li, Long Ouyang, Juntang Zhuang, Joyce Lee, Prafulla Dhariwal, Casey Chu, Joy Jiao</p><p><strong>Research Contributors—Secondary</strong><br>Jong Wook Kim, Alex Nichol, Yang Song, Lijuan Wang, Tao Xu</p><p><strong>Inference Optimization</strong><br>Connor Holmes, Arash Bakhtiari, Umesh Chand Koppaka, Zhewei Yao, Samyam Rajbhandari, Yuxiong He<br></p><p><strong>Product—Primary</strong><br>Yufei Guo, Luke Miller, Joyce Lee, Wesam Manassra, Anton Tananaev, Chester Cho, Rachel Lim</p><p><strong>Product—Secondary</strong><br>Dave Cummings, Rajeev Nayak, Sriya Santhanam<br></p><p><strong>Safety—Primary</strong><br>Sandhini Agarwal, Michael Lampe, Katarina Slama, Kim Malfacini, Bilva Chandra, Ashyana-Jasmine Kachra, Rosie Campbell, Florencia Leoni Aleman, Madelaine Boyd, Shengli Hu, Johannes Heidecke</p><p><strong>Safety—Secondary</strong><br>Lama Ahmad, Chelsea Carlson, Henry Head, Andrea Vallone, CJ Weinmann, Lilian Weng</p><p><strong>﻿Communications</strong><br>Alex Baker-Whitcomb, Ryan Biddy, Ruby Chen, Thomas Degry, Niko Felix, Elie Georges, Lindsey Held, Chad Nelson, Kendra Rimbach, Natalie Summers, Justin Wang, Hannah Wong, Kayla Wood<br></p><p><strong>Legal and Public Policy</strong><br>Che Chang, Jason Kwon, Fred von Lohmann, Ashley Pantuliano, David Robinson, Tom Rubin, Thomas Stasi<br></p><p><strong>Special Thanks</strong><br>Alec Radford, Mark Chen, Katie Mayer, Mikhail Bilenko, Mikhail Parakhin, Bob McGrew, Mira Murati, Greg Brockman, Sam Altman</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cancer expert gets experimental treatment for incurable tumour,phenomenal result (136 pts)]]></title>
            <link>https://www.abc.net.au/news/2023-09-20/melanoma-richard-scolyer-georgina-long-early-results/102879818</link>
            <guid>37584578</guid>
            <pubDate>Wed, 20 Sep 2023 14:27:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.abc.net.au/news/2023-09-20/melanoma-richard-scolyer-georgina-long-early-results/102879818">https://www.abc.net.au/news/2023-09-20/melanoma-richard-scolyer-georgina-long-early-results/102879818</a>, See on <a href="https://news.ycombinator.com/item?id=37584578">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Richard Scolyer is at the forefront of melanoma treatment and research, but a devastating cancer diagnosis of his own has made him the self-described "patient zero" in a new frontier of brain cancer treatment.</p><section role="contentinfo" aria-label="key points" data-component="KeyPoints" data-uri="coremedia://teaser/102879824"><h2 data-component="Heading">Key points:</h2><ul data-component="List" role="list"><li data-component="ListItem"><span></span>Richard Scolyer is undergoing a rare treatment because he's both a clinician and cancer researcher</li><li data-component="ListItem"><span></span>The early results have shown a&nbsp;10-fold increase in the immune cells in the tumour</li><li data-component="ListItem"><span></span>His co-medical director Georgina Long said she felt compelled to try something groundbreaking</li></ul></section><p>A medical director of Melanoma Institute Australia, Professor Scolyer was diagnosed with an incurable brain cancer in June.&nbsp;</p><p>Since then, he and his colleagues have gone down a path of experimental treatment, and have given a National Press Club address, announcing they've "generated in 10 weeks discoveries that would normally take years".</p><p>Professor Scolyer said his brain cancer diagnosis came suddenly, and without warning.</p><p>"No one saw it coming, least of all me. I was fit, having represented Australia at the world aquathon championships in Ibiza in early May," he said.</p><p>In June, he travelled to Poland with his wife Katie Nicoll, and the day before had gone hiking in the mountains.</p><p>"I woke the next morning not feeling quite right," he said.</p><p>"I had a brief phone call with my mum back in Tasmania. I don't remember much after that. I know now I had a seizure."</p><p>He was rushed to hospital and after a number of tests, Professor Scolyer was diagnosed with glioblastoma IDH wild-type, a cancer that's considered incurable and usually fatal within six to nine months.</p><p>One of the first phone calls Professor Scolyer's wife made from Poland was to his Melanoma Institute Australia co-medical director, Georgina Long.</p><p>"Nothing had prepared me for that phone call from Katie in Poland," Professor Long said.</p><p>"When I got that call, I got a physical pain like nothing I've ever experienced before and it was grief for what Richard and his family were about to go through and for the thought of losing my dear friend and colleague."</p><figure role="group" data-component="VerticalArticleFigure" aria-labelledby="102879842" data-uri="coremedia://imageproxy/102879842"><img alt="Richard Scolyer and Georgina Long addressing the National Press Club" sizes="(max-width: 543px) 543px," srcset="https://live-production.wcms.abc-cdn.net.au/361b88e01a9b4899cea11d38092791b0?impolicy=wcms_crop_resize&amp;cropH=3333&amp;cropW=4444&amp;xPos=278&amp;yPos=0&amp;width=862&amp;height=647 543w, https://live-production.wcms.abc-cdn.net.au/361b88e01a9b4899cea11d38092791b0?impolicy=wcms_crop_resize&amp;cropH=3333&amp;cropW=5000&amp;xPos=0&amp;yPos=0&amp;width=862&amp;height=575" src="https://live-production.wcms.abc-cdn.net.au/361b88e01a9b4899cea11d38092791b0?impolicy=wcms_crop_resize&amp;cropH=3333&amp;cropW=5000&amp;xPos=0&amp;yPos=0&amp;width=862&amp;height=575" loading="lazy" data-component="Image" data-lazy="true"><p><figcaption id="102879842" data-component="VerticalArticleFigure__figcaption" aria-live="polite"> <!-- -->Richard Scolyer and Georgina Long addressing the National Press Club in Canberra.<span data-component="Byline"><span data-component="Text">(<span>AAP:&nbsp;Bianca De Marchi</span>)</span></span></figcaption></p></figure><h2 data-component="Heading">The melanoma expert takes on glioblastoma</h2><p>Professor Long said after that phone call, she started researching glioblastoma, speaking to experts and looking up clinical trials.</p><p>"It was a barren landscape. You could count the number of immunotherapy clinical trials for glioblastoma almost on one hand," she said.</p><p>With no clinical trials available, Professor Long said she felt obligated to "try something groundbreaking."</p><p>Melanoma Institute Australia has been at the forefront of treatments like immunotherapy, that have drastically improved survival rates for the deadly skin cancer.</p><p>Rather than go down the usual treatment path for glioblastoma of surgery, radiotherapy and chemotherapy, they decided to try to treat Professor Scolyer in a similar way to their melanoma patients.</p><p>"There was initial resistance from some in the oncology community," Professor Scolyer said.</p><p>"But Katie and I spent many hours writing long letters detailing what I wanted to do and why."</p><p>Professor Scolyer was given immunotherapy, designed to activate the immune system to attack the cancer.</p><p>They also used the specific genome of his cancer to design a vaccine to target it.</p><h2 data-component="Heading">Early results 'nothing short of phenomenal'</h2><p>Twelve days after he was given the immunotherapy drugs, Professor Scolyer had surgery to have the bulk of his tumour removed.</p><p>It was then tested, to see if the drugs had an effect.</p><p>"Yes, Richard is a patient of only one, but early scientific results are nothing short of phenomenal," Professor Long said.</p><p>They found there was a 10-fold increase in the immune cells in the tumour, that they were activated against the cancer and they were bound to the drug.</p><p>"Proving something that we'd already shown in melanoma, that there is no blood brain barrier and historically conceptualised, preventing the drugs from reaching the tumour," Professor Long said.</p><p>"We could not have hoped for better results."</p><p>But the pair said it was too early to say whether those scientific results mean a better prognosis for Professor Scolyer.</p><h2 data-component="Heading">The experimental treatment a unique situation</h2><p>Professor Scolyer said at this stage the experimental treatment he has undergone won't be available to other patients.</p><p>"I can only do this because I'm a cancer researcher and clinician and so inherently understand the risks," he said.</p><p>"This treatment may extend or shorten my life."</p><p>The co-medical directors said pharmaceutical companies have been reluctant to invest in glioblastoma research, but their early results mean some are starting to pay attention.</p><p>They are hopeful it will lead to clinical trials.</p><p>They have called for a change in approach to cancer research and treatment, such as looking beyond the confines of one cancer, designing better clinical trials and embedding research in clinical care.</p><p>"We know we're not curing as many cancers as we could," Professor Scolyer said.</p><p>"Today we call on the cancer research field to collectively re-think its approach to tackling cancer. Think big and be courageous."</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Car allergic to vanilla ice cream (565 pts)]]></title>
            <link>http://www.cs.cmu.edu/~wkw/humour/carproblems.txt</link>
            <guid>37584399</guid>
            <pubDate>Wed, 20 Sep 2023 14:14:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.cs.cmu.edu/~wkw/humour/carproblems.txt">http://www.cs.cmu.edu/~wkw/humour/carproblems.txt</a>, See on <a href="https://news.ycombinator.com/item?id=37584399">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Svelte 5: Runes (320 pts)]]></title>
            <link>https://svelte.dev/blog/runes</link>
            <guid>37584224</guid>
            <pubDate>Wed, 20 Sep 2023 13:59:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://svelte.dev/blog/runes">https://svelte.dev/blog/runes</a>, See on <a href="https://news.ycombinator.com/item?id=37584224">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main"><article> <p>Rethinking 'rethinking reactivity'</p>    <!-- HTML_TAG_START --><p>In 2019, Svelte 3 turned JavaScript into a <a href="https://svelte.dev/blog/svelte-3-rethinking-reactivity">reactive language</a>. Svelte is a web UI framework that uses a compiler to turn declarative component code like this...</p>
<pre><code><span><span>&lt;</span><span>script</span><span>&gt;</span></span>
<span><span>	</span><span>let</span><span> count </span><span>=</span><span> </span><span>0</span><span>;</span></span>
<span></span>
<span><span>	</span><span>function</span><span> </span><span>increment</span><span>() {</span></span>
<span><span>		count </span><span>+=</span><span> </span><span>1</span><span>;</span></span>
<span><span>	}</span></span>
<span><span>&lt;/</span><span>script</span><span>&gt;</span></span>
<span></span>
<span><span>&lt;</span><span>button</span><span> </span><span>on</span><span>:</span><span>click</span><span>=</span><span>{increment}&gt;</span></span>
<span><span>	clicks: {count}</span></span>
<span><span>&lt;/</span><span>button</span><span>&gt;</span></span></code></pre><p>...into tightly optimized JavaScript that updates the document when state like <code>count</code> changes. Because the compiler can 'see' where <code>count</code> is referenced, the generated code is <a href="https://svelte.dev/blog/virtual-dom-is-pure-overhead">highly efficient</a>, and because we're hijacking syntax like <code>let</code> and <code>=</code> instead of using cumbersome APIs, you can <a href="https://svelte.dev/blog/write-less-code">write less code</a>.</p>
<p>A common piece of feedback we get is 'I wish I could write all my JavaScript like this'. When you're used to things inside components magically updating, going back to boring old procedural code feels like going from colour to black-and-white.</p>
<p>Svelte 5 changes all that with <em>runes</em>, which unlock <em>universal, fine-grained reactivity</em>.</p>
<div>
<figure>
<p>
  <iframe src="https://www.youtube-nocookie.com/embed/RVnxF3j3N8U" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
</p>

<figcaption>Introducing runes</figcaption>
</figure>
</div>

<h2 id="before-we-begin">Before we begin<a href="#before-we-begin"><span>permalink</span></a></h2><p>Even though we're changing how things work under the hood, Svelte 5 should be a drop-in replacement for almost everyone. The new features are opt-in — your existing components will continue to work.</p>
<p>We don't yet have a release date for Svelte 5. What we're showing you here is a work-in-progress that is likely to change!</p>
<h2 id="what-are-runes">What are runes?<a href="#what-are-runes"><span>permalink</span></a></h2><blockquote>
<p><strong>rune</strong> /ro͞on/ <em>noun</em></p>
<p>A letter or mark used as a mystical or magic symbol.</p>
</blockquote>
<p>Runes are symbols that influence the Svelte compiler. Whereas Svelte today uses <code>let</code>, <code>=</code>, the <a href="https://learn.svelte.dev/tutorial/declaring-props"><code>export</code></a> keyword and the <a href="https://learn.svelte.dev/tutorial/reactive-declarations"><code>$:</code></a> label to mean specific things, runes use <em>function syntax</em> to achieve the same things and more.</p>
<p>For example, to declare a piece of reactive state, we can use the <code>$state</code> rune:</p>
<pre><code>&lt;script&gt;
<span>	let count = 0;
</span><span>	let count = $state(0);
</span>
	function increment() {
		count += 1;
	}
&lt;/script&gt;

&lt;button on:click={increment}&gt;
	clicks: {count}
&lt;/button&gt;
</code></pre><p>At first glance, this might seem like a step back — perhaps even <a href="https://twitter.com/stolinski/status/1438173489479958536">un-Svelte-like</a>. Isn't it better if <code>let count</code> is reactive by default?</p>
<p>Well, no. The reality is that as applications grow in complexity, figuring out which values are reactive and which aren't can get tricky. And the heuristic only works for <code>let</code> declarations at the top level of a component, which can cause confusion. Having code behave one way inside <code>.svelte</code> files and another inside <code>.js</code> can make it hard to refactor code, for example if you need to turn something into a <a href="https://learn.svelte.dev/tutorial/writable-stores">store</a> so that you can use it in multiple places.</p>
<h2 id="beyond-components">Beyond components<a href="#beyond-components"><span>permalink</span></a></h2><p>With runes, reactivity extends beyond the boundaries of your <code>.svelte</code> files. Suppose we wanted to encapsulate our counter logic in a way that could be reused between components. Today, you would use a <a href="https://learn.svelte.dev/tutorial/custom-stores">custom store</a> in a <code>.js</code> or <code>.ts</code> file:</p>
<pre><p>ts</p><p><code><p><span>import</span><span> { <data-lsp lsp="(alias) function writable&amp;lt;T>(value?: T | undefined, start?: StartStopNotifier&amp;lt;T> | undefined): Writable&amp;lt;T>&amp;#10;import writable">writable</data-lsp> } </span><span>from</span><span> </span><span>'svelte/store'</span><span>;</span></p><p><span>export</span><span> </span><span>function</span><span> </span><span><data-lsp lsp="function createCounter(): {&amp;#10;  subscribe: (this: void, run: Subscriber&amp;lt;number>, invalidate?: Invalidator&amp;lt;number> | undefined) => Unsubscriber;&amp;#10;  increment: () => void;&amp;#10;}">createCounter</data-lsp></span><span>() {</span></p><p><span>	</span><span>const</span><span> { </span><span><data-lsp lsp="const subscribe: (this: void, run: Subscriber&amp;lt;number>, invalidate?: Invalidator&amp;lt;number> | undefined) => Unsubscriber">subscribe</data-lsp></span><span>,</span><span> </span><span><data-lsp lsp="const update: (this: void, updater: Updater&amp;lt;number>) => void">update</data-lsp></span><span> } </span><span>=</span><span> </span><span><data-lsp lsp="(alias) writable&amp;lt;number>(value?: number | undefined, start?: StartStopNotifier&amp;lt;number> | undefined): Writable&amp;lt;number>&amp;#10;import writable">writable</data-lsp></span><span>(</span><span>0</span><span>);</span></p><p><span>	</span><span>return</span><span> {</span></p><p><span>		<data-lsp lsp="(property) subscribe: (this: void, run: Subscriber&amp;lt;number>, invalidate?: Invalidator&amp;lt;number> | undefined) => Unsubscriber">subscribe</data-lsp></span><span>,</span></p><p><span>		</span><span><data-lsp lsp="(property) increment: () => void">increment</data-lsp></span><span>:</span><span> () </span><span>=&gt;</span><span> </span><span><data-lsp lsp="const update: (this: void, updater: Updater&amp;lt;number>) => void">update</data-lsp></span><span>((<data-lsp lsp="(parameter) n: number">n</data-lsp>) </span><span>=&gt;</span><span> <data-lsp lsp="(parameter) n: number">n</data-lsp> </span><span>+</span><span> </span><span>1</span><span>)</span></p><p><span>	};</span></p><p><span>}</span></p></code></p></pre><p>Because this implements the <em>store contract</em> — the returned value has a <code>subscribe</code> method — we can reference the store value by prefixing the store name with <code>$</code>:</p>
<pre><code>&lt;script&gt;
<span>	import { createCounter } from './counter.js';
</span><span>
</span><span>	const counter = createCounter();
</span><span>	let count = 0;
</span><span>
</span><span>	function increment() {
</span><span>		count += 1;
</span><span>	}
</span>&lt;/script&gt;

<span>&lt;button on:click={increment}&gt;
</span><span>	clicks: {count}
</span><span>&lt;button on:click={counter.increment}&gt;
</span><span>	clicks: {$counter}
</span>&lt;/button&gt;
</code></pre><p>This works, but it's pretty weird! We've found that the store API can get rather unwieldy when you start doing more complex things.</p>
<p>With runes, things get much simpler:</p>
<pre><code><span>import { writable } from 'svelte/store';
</span>
export function createCounter() {
<span>	const { subscribe, update } = writable(0);
</span><span>	let count = $state(0);
</span>
	return {
<span>		subscribe,
</span><span>		increment: () =&gt; update((n) =&gt; n + 1)
</span><span>		get count { return count },
</span><span>		increment: () =&gt; count += 1
</span>   };
}
</code></pre><pre><code>&lt;script&gt;
	import { createCounter } from './counter.js';

	const counter = createCounter();
&lt;/script&gt;

&lt;button on:click={counter.increment}&gt;
<span>	clicks: {$counter}
</span><span>	clicks: {counter.count}
</span>&lt;/button&gt;
</code></pre><p>Note that we're using a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get">get property</a> in the returned object, so that <code>counter.count</code> always refers to the current value rather than the value at the time the function was called.</p>
<h2 id="runtime-reactivity">Runtime reactivity<a href="#runtime-reactivity"><span>permalink</span></a></h2><p>Today, Svelte uses <em>compile-time reactivity</em>. This means that if you have some code that uses the <code>$:</code> label to re-run automatically when dependencies change, those dependencies are determined when Svelte compiles your component:</p>
<pre><code><span><span>&lt;</span><span>script</span><span>&gt;</span></span>
<span><span>	</span><span>export</span><span> </span><span>let</span><span> width;</span></span>
<span><span>	</span><span>export</span><span> </span><span>let</span><span> height;</span></span>
<span></span>
<span><span>	</span><span>// the compiler knows it should recalculate `area`</span></span>
<span><span>	</span><span>// when either `width` or `height` change...</span></span>
<span><span>	$</span><span>:</span><span> area </span><span>=</span><span> width </span><span>*</span><span> height;</span></span>
<span></span>
<span><span>	</span><span>// ...and that it should log the value of `area`</span></span>
<span><span>	</span><span>// when _it_ changes</span></span>
<span><span>	$</span><span>:</span><span> </span><span>console</span><span>.log</span><span>(area);</span></span>
<span><span>&lt;/</span><span>script</span><span>&gt;</span></span></code></pre><p>This works well... until it doesn't. Suppose we refactored the code above:</p>
<pre><p>ts</p><p><code><p><span>const</span><span> </span><span><data-lsp lsp="const multiplyByHeight: (width: any) => number">multiplyByHeight</data-lsp></span><span> </span><span>=</span><span> (<data-err><data-lsp lsp="(parameter) width: any">width</data-lsp></data-err>) </span><span>=&gt;</span><span> <data-lsp lsp="(parameter) width: any">width</data-lsp> </span><span>*</span><span> <data-err><data-lsp lsp="any">height</data-lsp></data-err>;</span></p><span><span>Parameter 'width' implicitly has an 'any' type.<br>Cannot find name 'height'.</span><span>7006<br>2304</span></span><span>Parameter 'width' implicitly has an 'any' type.<br>Cannot find name 'height'.</span><p><span>$</span><span>:</span><span> <data-err><data-lsp lsp="any">area</data-lsp></data-err> </span><span>=</span><span> </span><span><data-lsp lsp="const multiplyByHeight: (width: any) => number">multiplyByHeight</data-lsp></span><span>(<data-err><data-lsp lsp="any">width</data-lsp></data-err>);</span></p><span><span>Cannot find name 'area'.<br>Cannot find name 'width'.</span><span>2304<br>2304</span></span><span>Cannot find name 'area'.<br>Cannot find name 'width'.</span></code></p></pre><p>Because the <code>$: area = ...</code> declaration can only 'see' <code>width</code>, it won't be recalculated when <code>height</code> changes. As a result, code is hard to refactor, and understanding the intricacies of when Svelte chooses to update which values can become rather tricky beyond a certain level of complexity.</p>
<p>Svelte 5 introduces the <code>$derived</code> and <code>$effect</code> runes, which instead determine the dependencies of their expressions when they are evaluated:</p>
<pre><code><span><span>&lt;</span><span>script</span><span>&gt;</span></span>
<span><span>	</span><span>let</span><span> { width</span><span>,</span><span> height } </span><span>=</span><span> $</span><span>props</span><span>(); </span><span>// instead of `export let`</span></span>
<span></span>
<span><span>	</span><span>const</span><span> </span><span>area</span><span> </span><span>=</span><span> $</span><span>derived</span><span>(width </span><span>*</span><span> height);</span></span>
<span></span>
<span><span>	$</span><span>effect</span><span>(() </span><span>=&gt;</span><span> {</span></span>
<span><span>		</span><span>console</span><span>.log</span><span>(area);</span></span>
<span><span>	});</span></span>
<span><span>&lt;/</span><span>script</span><span>&gt;</span></span></code></pre><p>As with <code>$state</code>, <code>$derived</code> and <code>$effect</code> can also be used in your <code>.js</code> and <code>.ts</code> files.</p>
<h2 id="signal-boost">Signal boost<a href="#signal-boost"><span>permalink</span></a></h2><p>Like every other framework, we've come to the realisation that <a href="https://knockoutjs.com/">Knockout</a> was right all along.</p>
<p>Svelte 5's reactivity is powered by <em>signals</em>, which are essentially <a href="https://dev.to/this-is-learning/the-evolution-of-signals-in-javascript-8ob">what Knockout was doing in 2010</a>. More recently, signals have been popularised by <a href="https://www.solidjs.com/">Solid</a> and adopted by a multitude of other frameworks.</p>
<p>We're doing things a bit differently though. In Svelte 5, signals are an under-the-hood implementation detail rather than something you interact with directly. As such, we don't have the same API design constraints, and can maximise both efficiency <em>and</em> ergonomics. For example, we avoid the type narrowing issues that arise when values are accessed by function call, and when compiling in server-side rendering mode we can ditch the signals altogether, since on the server they're nothing but overhead.</p>
<p>Signals unlock <em>fine-grained reactivity</em>, meaning that (for example) changes to a value inside a large list needn't invalidate all the <em>other</em> members of the list. As such, Svelte 5 is ridonkulously fast.</p>
<h2 id="simpler-times-ahead">Simpler times ahead<a href="#simpler-times-ahead"><span>permalink</span></a></h2><p>Runes are an additive feature, but they make a whole bunch of existing concepts obsolete:</p>
<ul>
<li>the difference between <code>let</code> at the top level of a component and everywhere else</li>
<li><code>export let</code></li>
<li><code>$:</code>, with all its attendant quirks</li>
<li>different behaviour between <code>&lt;script&gt;</code> and <code>&lt;script context="module"&gt;</code></li>
<li>the store API, parts of which are genuinely quite complicated</li>
<li>the <code>$</code> store prefix</li>
<li><code>$$props</code> and <code>$$restProps</code></li>
<li>lifecycle functions (things like <code>onMount</code> can just be <code>$effect</code> functions)</li>
</ul>
<p>For those of you who already use Svelte, it's new stuff to learn, albeit hopefully stuff that makes your Svelte apps easier to build and maintain. But newcomers won't need to learn all those things — it'll just be in a section of the docs titled 'old stuff'.</p>
<p>This is just the beginning though. We have a long list of ideas for subsequent releases that will make Svelte simpler and more capable.</p>
<h2 id="try-it">Try it!<a href="#try-it"><span>permalink</span></a></h2><p>You can't use Svelte 5 in production yet. We're in the thick of it at the moment and can't tell you when it'll be ready to use in your apps.</p>
<p>But we didn't want to leave you hanging. We've created a <a href="https://svelte-5-preview.vercel.app/">preview site</a> with detailed explanations of the new features and an interactive playground. You can also visit the <code>#svelte-5-runes</code> channel of the <a href="https://svelte.dev/chat">Svelte Discord</a> to learn more. We'd love to have your feedback!</p>
<!-- HTML_TAG_END --></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: uBlock Origin filters to remove distractions (238 pts)]]></title>
            <link>https://github.com/mig4ng/ublock-origin-filters</link>
            <guid>37584134</guid>
            <pubDate>Wed, 20 Sep 2023 13:53:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/mig4ng/ublock-origin-filters">https://github.com/mig4ng/ublock-origin-filters</a>, See on <a href="https://news.ycombinator.com/item?id=37584134">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">ublock-origin-filters</h2>
<p dir="auto">My uBlock Origin filters to remove unnecessary distractions from some websites.</p>
<p dir="auto">For each website I have very specific tasks I do.
I optimize for allowing those tasks, while disabling everything else that might distract me.</p>
<p dir="auto">These are my preferences, feel free to use the filters directly from this repository or fork them.</p>
<p dir="auto">If I miss anything or you think I would benefit from something else, open an issue, pull request or send me an email (my github username at gmail.com).</p>
<h2 tabindex="-1" dir="auto">YouTube</h2>
<p dir="auto"><strong>Objective:</strong> Remove all distractions, recommended videos, auto-play, suggestions (everywhere), shorts. Most of the time I only want to:</p>
<ul dir="auto">
<li>watch a video;</li>
<li>search something;</li>
<li>upload something.</li>
</ul>
<p dir="auto"><em>Note:</em> Right now I am using Unhook (the Firefox extension). It works well but it might be possible to replace it with a filter too (<a href="https://letsblock.it/filters" rel="nofollow">https://letsblock.it/filters</a>).</p>
<h2 tabindex="-1" dir="auto">Twitter</h2>
<p dir="auto"><strong>Objective:</strong> Remove all distractions, feed, sidebar, etc. Most of the time I only want to:</p>
<ul dir="auto">
<li>see the tweet feed in a specific profile I have opened;</li>
<li>see a tweet content and it's comments;</li>
<li>tweet something.</li>
</ul>
<h2 tabindex="-1" dir="auto">LinkedIn</h2>
<p dir="auto"><strong>Objective:</strong> Remove all distractions, feed, sidebar, etc. Most of the time I only want to:</p>
<ul dir="auto">
<li>see a profile, company;</li>
<li>read a specific post;</li>
<li>reply to messages;</li>
<li>post something.</li>
</ul>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: ElectricSQL, Postgres to SQLite active-active sync for local-first apps (248 pts)]]></title>
            <link>https://electric-sql.com/</link>
            <guid>37584049</guid>
            <pubDate>Wed, 20 Sep 2023 13:46:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://electric-sql.com/">https://electric-sql.com/</a>, See on <a href="https://news.ycombinator.com/item?id=37584049">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="docusaurus_skipToContent_fallback"><main><a href="https://electric-sql.com/docs/intro/local-first"></a><div><ul role="tablist" aria-orientation="horizontal"><li role="tab" tabindex="-1" aria-selected="false">Access rules</li><li role="tab" tabindex="0" aria-selected="true">Sync shapes</li><li role="tab" tabindex="-1" aria-selected="false">Live queries</li><li role="tab" tabindex="-1" aria-selected="false">Local writes</li></ul><div role="tabpanel"><div><p>Craft how data syncs <span>on and off </span><span>onto </span> your app using <a href="https://electric-sql.com/docs/usage/data-access/shapes">Shapes</a>.</p><p>Shapes allow you to manage <a href="https://electric-sql.com/docs/intro/sync-controls">dynamic partial replication</a> between Postgres in the cloud and SQLite in the local<!-- -->&nbsp;<!-- -->app.</p></div><div><pre tabindex="0"><code><span><span>const</span><span> shape </span><span>=</span><span> </span><span>await</span><span> db</span><span>.</span><span>projects</span><span>.</span><span>sync</span><span>(</span><span>{</span><span></span><br></span><span><span>  where</span><span>:</span><span> </span><span>{</span><span></span><br></span><span><span>    owner_id</span><span>:</span><span> auth</span><span>.</span><span>user_id</span><span></span><br></span><span><span>  </span><span>}</span><span>,</span><span></span><br></span><span><span>  include</span><span>:</span><span> </span><span>{</span><span></span><br></span><span><span>    issues</span><span>:</span><span> </span><span>{</span><span></span><br></span><span><span>      include</span><span>:</span><span> </span><span>{</span><span></span><br></span><span><span>        comments</span><span>:</span><span> </span><span>{</span><span></span><br></span><span><span>          include</span><span>:</span><span> </span><span>{</span><span></span><br></span><span><span>            author</span><span>:</span><span> </span><span>true</span><span></span><br></span><span><span>          </span><span>}</span><span></span><br></span><span><span>        </span><span>}</span><span></span><br></span><span><span>      </span><span>}</span><span></span><br></span><span><span>    </span><span>}</span><span></span><br></span><span><span>  </span><span>}</span><span></span><br></span><span><span></span><span>}</span><span>)</span><span>;</span><br></span></code></pre></div></div></div><div><div><p><img src="https://electric-sql.com/img/quotes/anurag.png" loading="lazy"></p><h3>Anurag Goel</h3><h4>Founder<span> - </span><a href="https://render.com/">Render</a></h4><p>ElectricSQL is a great choice for a <span>local-first</span> sync layer that you can run anywhere yourself.</p></div><div><p><img src="https://electric-sql.com/img/quotes/johannes.png" loading="lazy"></p><h3>Johannes Schickling</h3><h4>Founder<span> - </span><a href="https://www.prisma.io/">Prisma</a></h4><p>I’m very impressed with ElectricSQL’s approach to sync and their thoughtful API&nbsp;design.</p></div><div><p><img src="https://electric-sql.com/img/quotes/jose.png" loading="lazy"></p><h3>José Valim</h3><h4>Creator<span> - </span><a href="https://elixir-lang.org/">Elixir</a></h4><p>ElectricSQL brings the full power of the Erlang VM to local-first software development.</p></div></div><div><div><ul role="tablist" aria-orientation="horizontal"><li role="tab" tabindex="0" aria-selected="true">Instant reactivity</li><li role="tab" tabindex="-1" aria-selected="false">Realtime multi‑user</li><li role="tab" tabindex="-1" aria-selected="false">Conflict‑free offline</li></ul></div><div><div><p>For</p><h2>Operational simplicity</h2></div><div><ul role="tablist" aria-orientation="horizontal"><li role="tab" tabindex="0" aria-selected="true">Simple to operate</li><li role="tab" tabindex="-1" aria-selected="false">Cheaper to&nbsp;run</li><li role="tab" tabindex="-1" aria-selected="false">Reliable by design</li></ul></div></div><div><ul role="tablist" aria-orientation="horizontal"><li role="tab" tabindex="0" aria-selected="true">Standard open‑source</li><li role="tab" tabindex="-1" aria-selected="false">Drop‑in compatible</li><li role="tab" tabindex="-1" aria-selected="false">Existing applications</li></ul><div role="tabpanel"><div><p><img src="https://electric-sql.com/img/icons/open-source.svg" loading="lazy"></p><h3>Open source</h3><p><span>Apache 2.0 license. Open development on </span><a href="https://github.com/electric-sql/electric">GitHub</a><span> and </span><a href="https://discord.electric-sql.com/">Discord</a>. Contributions welcome.</p></div><div><p><img src="https://electric-sql.com/img/icons/self-host.svg" loading="lazy"></p><h3>Self-host</h3><p>One horizontally scalable sync service. No complex infra or durability requirements.</p></div></div></div><div><p><h2>Join the community</h2></p></div><div><p><h2>Become a design partner</h2></p><p><img loading="lazy" src="https://electric-sql.com/img/home/splash.svg"></p></div></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[British journalist held by police at Luton airport for five hours without arrest (189 pts)]]></title>
            <link>https://www.theguardian.com/media/2023/sep/20/british-journalist-held-by-police-at-luton-airport-for-five-hours-without-arrest</link>
            <guid>37584038</guid>
            <pubDate>Wed, 20 Sep 2023 13:46:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/media/2023/sep/20/british-journalist-held-by-police-at-luton-airport-for-five-hours-without-arrest">https://www.theguardian.com/media/2023/sep/20/british-journalist-held-by-police-at-luton-airport-for-five-hours-without-arrest</a>, See on <a href="https://news.ycombinator.com/item?id=37584038">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p>A British freelance journalist who previously worked in the Kurdish-controlled part of Syria was held by counter-terrorism police at Luton airport for five hours without being arrested last month under controversial powers of detention.</p><p>Matt Broomfield, 29, said he was met by police as he got off a plane from Belgrade with his girlfriend on 24 August and was taken aside for questioning, where he was asked “do you consider your reporting objective” and his opinions of the British state. <a href="https://www.theguardian.com/uk/police" data-link-name="in body link" data-component="auto-linked-tag">Police</a> told Broomfield they were engaged in “a mopping up operation”. They seized his phone and laptop and have since refused to return them. After the questioning ended, he was allowed to proceed and no police action has followed.</p><p>Broomfield was detained under schedule 7 of the Terrorism Act 2000, used routinely by counter-terrorism officers to question people at airports for up to six hours at a time. Police say it is a tool to keep the public safe, but critics say the power is overused to the point of harassment.</p><p>The National Union of Journalists has written on Broomfield’s behalf to Matt Jukes, the policing lead for counter-terrorism, to ask for a justification for his detainment in the absence of criminal proceedings, and for his computer and phone to be immediately returned.</p><p>Officers focused on Broomfield’s writing, much of which is sympathetic to the <a href="https://www.theguardian.com/world/kurds" data-link-name="in body link" data-component="auto-linked-tag">Kurds</a>, and a three-year period ending in 2020 when he ran a news and information service in Kurdish-controlled north-east Syria. “They asked who I had met and interviewed,” he said.</p><p>Broomfield was held for two months <a href="https://dm-aegean.bordermonitoring.eu/2021/11/10/detained-and-banned-from-europe-a-british-journalist-in-the-eu-migrant-detention-system/?fbclid=IwAR1McCkjqtWtOz6qVdVy13B6xgCMgsaH8zCxJ0g2vFy56wsYfdmxS47offY" data-link-name="in body link">in Greek migrant detention centres</a> in 2021 after being denied permission to cross the border into Italy. He was told he was banned from the EU’s Schengen area at the request of Germany, which he believes was because of his media and advocacy work.</p><p>He was flown to the UK where he was subjected to a schedule 7 stop. After that, Broomfield, who is now based in Belgrade, says he was allowed to re-enter the UK “several times” without issue – until the latest stop last month.</p><p>Kurdish soldiers were instrumental in the defeat of Islamic State in north-east Syria in 2019, with air support from the US and UK, and remain in effect in control of the region. Turkey has long been hostile to the Kurds, who aspire to their own state based on territory in Turkey, Syria, Iraq and Iran.</p><p>Broomfield said: “It seems clear the Schengen ban and my harassment by the UK police are driven by direct or indirect pressure from Turkey, on the basis of my work and reporting in Rojava and around the Kurdish issue.”</p><p>He said the UK should have no interest “in the anti-democratic prosecution of legitimate journalism”.</p><p>British Kurds told the Guardian they were routinely stopped under schedule 7. Ali Gul Ozbek, 58, a pharmacist from Friern Barnet, north London, and a former mayor of Haringey council, said he had been stopped every time he went abroad since around 2012, both on the way out and on the way back.</p><p>The most recent stop was in July when Ozbek, a British citizen, went to visit his uncle in Geneva, Switzerland. “It is a form of torture. They ask the most basic questions that could be answered by a primary school student. I am an ordinary Kurd, I do not have any link with any Kurdish political organisations.”</p><p>Official figures show <a href="https://www.gov.uk/government/statistics/operation-of-police-powers-under-the-terrorism-act-2000-quarterly-update-to-june-2023/operation-of-police-powers-under-the-terrorism-act-2000-and-subsequent-legislation-arrests-outcomes-and-stop-and-search-great-britain-quarterly-u" data-link-name="in body link">2,498 people were stopped</a> under schedule 7 powers in the year to 30 June, down 6% from a year before. The detainees are a wide range of people, including those with the loosest of links to the Kurdish movement.</p><figure data-spacefinder-role="inline" data-spacefinder-type="model.dotcomrendering.pageElements.NewsletterSignupBlockElement"><a data-ignore="global-link-styling" href="#EmailSignup-skip-link-13">skip past newsletter promotion</a><p id="EmailSignup-skip-link-13" tabindex="0" aria-label="after newsletter promotion" role="note">after newsletter promotion</p></figure><p>Ann Marie Davies, from Cardiff, was detained by counter-terrorism police for about four hours at Bristol airport in July as she returned from a holiday in Portugal, her first since the Covid pandemic, with her husband and teenage daughter.</p><p>“I asked the police why my passport was flagged and they said they didn’t know. The questions were very broad: they asked why I was interested in human rights. But they also asked whether I supported the PKK [a Kurdish political party banned in Turkey] and I said I didn’t and I didn’t support terrorist organisations,” she said.</p><p>Davies, who trains medical students, believes she was stopped because “I sympathise with the Kurdish cause in a general sense” and because she was involved in organising a Kurdish cultural event in Cardiff last November. Police took her DNA and photograph; her phone and Kindle were searched before she was allowed to leave.</p><p>The Home Office said<strong> </strong>schedule 7 enabled officers to stop, question, detain and search a person to determine whether they are or have been involved in terrorism. “Examinations have been instrumental in securing evidence to convict,” a spokesperson said.</p><p>Iida Kayhko, a doctoral researcher in security studies at Royal Holloway, University of London, said the belief in the British Kurdish community was that UK police were reflecting pressure from Ankara after President Recep Tayyip Erdoğan’s election victory in May, which has reinforced Kurdish repression within Turkey.</p><p>“It would seem that British counter-terrorism policing is being made use of to pursue the Erdoğan government’s aims of stifling Kurdish political expression,” she said.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: 78% MNIST accuracy using GZIP in under 10 lines of code (147 pts)]]></title>
            <link>https://jakobs.dev/solving-mnist-with-gzip/</link>
            <guid>37583593</guid>
            <pubDate>Wed, 20 Sep 2023 13:00:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jakobs.dev/solving-mnist-with-gzip/">https://jakobs.dev/solving-mnist-with-gzip/</a>, See on <a href="https://news.ycombinator.com/item?id=37583593">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><img src="https://jakobs.dev/media/gzip.png" alt="GZIP"></p>
<p>We can 'solve' MNIST up to ~78% accuracy with the following code-golfed obscurity:</p>
<div data-language="python"><pre><code>c <span>=</span> <span>lambda</span> z<span>:</span> <span>len</span><span>(</span>gzip<span>.</span>compress<span>(</span>z<span>.</span>tobytes<span>(</span><span>)</span><span>)</span><span>)</span>

<span>def</span> <span>ncd</span><span>(</span>x<span>,</span> y<span>)</span><span>:</span>
    <span>return</span> <span>(</span>c<span>(</span>x <span>+</span> y<span>)</span> <span>-</span> <span>min</span><span>(</span>c<span>(</span>x<span>)</span><span>,</span> c<span>(</span>y<span>)</span><span>)</span><span>)</span> <span>/</span> <span>max</span><span>(</span>c<span>(</span>x<span>)</span><span>,</span> c<span>(</span>y<span>)</span><span>)</span>

cls <span>=</span> <span>[</span><span>(</span>x<span>,</span> c<span>(</span>x<span>)</span><span>,</span> l<span>)</span> <span>for</span> x<span>,</span> l <span>in</span> training_set<span>]</span>

correct_predictions <span>=</span> <span>sum</span><span>(</span><span>[</span>np<span>.</span>array_equal<span>(</span>Counter<span>(</span>
    <span>[</span>l <span>for</span> _<span>,</span> _<span>,</span> l <span>in</span> <span>sorted</span><span>(</span><span>[</span><span>(</span>ncd<span>(</span>x1<span>,</span> x<span>)</span><span>,</span> x<span>,</span> l<span>)</span> <span>for</span> x<span>,</span> _<span>,</span> l <span>in</span> cls<span>]</span><span>,</span>
     key<span>=</span><span>lambda</span> t<span>:</span> t<span>[</span><span>0</span><span>]</span><span>)</span><span>[</span><span>:</span><span>5</span><span>]</span><span>]</span><span>)</span><span>.</span>most_common<span>(</span><span>1</span><span>)</span><span>[</span><span>0</span><span>]</span><span>[</span><span>0</span><span>]</span><span>,</span> label<span>)</span>
     <span>for</span> x1<span>,</span> label <span>in</span> test_set<span>]</span><span>)</span></code></pre></div>
<p>If you just want to see the code sample, <a href="https://github.com/Jakob-98/mono/blob/main/python/gzip_mnist/mnist_gzip.ipynb">here</a> is a link to the Jupyter Notebook containing the code to run this experiment.</p>
<p>Lets dive into why and how: yesterday while in the one-hour train ride from Eindhoven to Rotterdam, I was inspired by the post <a href="http://pepijndevos.nl/2023/07/15/chatlmza.html">text generation from data compression</a> and the (quite controversial) paper on <a href="https://aclanthology.org/2023.findings-acl.426/">parameter free text classification</a> to play around with using compression as an image classification mechanism. Previously, I worked on image compression for computer vision on the edge, so interested in applying the technique to the most seminal yet basic dataset, I attempted to use GZIP + K-NN as a classification mechanism for the MNIST (handwritten digits) dataset.</p>
<p>Breaking down the technique, it boils down to two components: GZIP and NCD (Normalized Compression Distance) as a similarity metric, and k-NN (k-Nearest Neighbors) for classification. In this approach, GZIP is essentially our tool which gives us a way to measure the complexity or information content of individual data points. NCD provides a normalized measure of how similar two data points are, based on how much more (or less) effort it takes to compress them together compared to compressing them separately.</p>
<p>For each test sample, the algorithm computes its NCD with every training sample (in our case, 100 training samples), sorts them, and selects the k smallest distances. The majority class among these k=5 closest neighbors is then predicted as the label for the test sample. As this is quite computationally expensive, I only took a subset of the test images to arrive at my accuracy measure. Of course, it would be more correct to use the full set, but I leave this an an exercise to the reader ;).</p>
<p>Here is a less obscured version of the algorithm:</p>
<div data-language="python"><pre><code><span>def</span> <span>compute_ncd</span><span>(</span>x1<span>,</span> x2<span>)</span><span>:</span>
    <span>"""Compute the Normalized Compression Distance (NCD) between two samples."""</span>
    Cx1 <span>=</span> <span>len</span><span>(</span>gzip<span>.</span>compress<span>(</span>x1<span>.</span>tobytes<span>(</span><span>)</span><span>)</span><span>)</span>
    Cx2 <span>=</span> <span>len</span><span>(</span>gzip<span>.</span>compress<span>(</span>x2<span>.</span>tobytes<span>(</span><span>)</span><span>)</span><span>)</span>
    Cx1x2 <span>=</span> <span>len</span><span>(</span>gzip<span>.</span>compress<span>(</span><span>(</span>x1 <span>+</span> x2<span>)</span><span>.</span>tobytes<span>(</span><span>)</span><span>)</span><span>)</span>
    
    <span>return</span> <span>(</span>Cx1x2 <span>-</span> <span>min</span><span>(</span>Cx1<span>,</span> Cx2<span>)</span><span>)</span> <span>/</span> <span>max</span><span>(</span>Cx1<span>,</span> Cx2<span>)</span>

<span>print</span><span>(</span><span>"Classifying test samples..."</span><span>)</span>

k <span>=</span> <span>5</span>  <span># Number of neighbors to consider</span>
correct_predictions <span>=</span> <span>0</span>  <span># Counter for correct predictions</span>
actual_labels <span>=</span> <span>[</span><span>]</span>
predicted_labels <span>=</span> <span>[</span><span>]</span>

<span># Cache compressed lengths for training samples</span>
compressed_lengths <span>=</span> <span>[</span><span>(</span>x<span>,</span> <span>len</span><span>(</span>gzip<span>.</span>compress<span>(</span>x<span>.</span>tobytes<span>(</span><span>)</span><span>)</span><span>)</span><span>,</span> label<span>)</span> <span>for</span> x<span>,</span> label <span>in</span> training_set<span>]</span>

<span>for</span> <span>(</span>x1<span>,</span> actual_label<span>)</span> <span>in</span> tqdm<span>(</span>test_set<span>[</span><span>:</span><span>100</span><span>]</span><span>)</span><span>:</span>
    <span># Calculate NCD for each training sample</span>
    distances <span>=</span> <span>[</span><span>(</span>compute_ncd<span>(</span>x1<span>,</span> x<span>)</span><span>,</span> label<span>)</span> <span>for</span> x<span>,</span> _<span>,</span> label <span>in</span> compressed_lengths<span>]</span>
    
    <span># Get k nearest neighbors and predict label</span>
    neighbors <span>=</span> <span>sorted</span><span>(</span>distances<span>,</span> key<span>=</span><span>lambda</span> x<span>:</span> x<span>[</span><span>0</span><span>]</span><span>)</span><span>[</span><span>:</span>k<span>]</span>
    top_k_class <span>=</span> <span>[</span>label <span>for</span> _<span>,</span> label <span>in</span> neighbors<span>]</span>
    predicted_class <span>=</span> Counter<span>(</span>top_k_class<span>)</span><span>.</span>most_common<span>(</span><span>1</span><span>)</span><span>[</span><span>0</span><span>]</span><span>[</span><span>0</span><span>]</span>
    
    <span># Update predictions and counts</span>
    actual_labels<span>.</span>append<span>(</span>actual_label<span>)</span>
    predicted_labels<span>.</span>append<span>(</span>predicted_class<span>)</span>
    correct_predictions <span>+=</span> <span>(</span>predicted_class <span>==</span> actual_label<span>)</span></code></pre></div>
<p><strong>Note:</strong> after writing this post, I found <a href="https://www.blackhc.net/blog/2019/mnist-by-zip/">this article</a> by Andreas Kirsch taking a similar approach back in 2019. His approach reaches around 35% accuracy.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: SeaGOAT – local, “AI-based” grep for semantic code search (152 pts)]]></title>
            <link>https://github.com/kantord/SeaGOAT</link>
            <guid>37583219</guid>
            <pubDate>Wed, 20 Sep 2023 12:13:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/kantord/SeaGOAT">https://github.com/kantord/SeaGOAT</a>, See on <a href="https://news.ycombinator.com/item?id=37583219">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text">
<h2 tabindex="-1" dir="auto">
  <p dir="auto">
    <a target="_blank" rel="noopener noreferrer" href="https://github.com/kantord/SeaGOAT/blob/main/assets/logo-small.png"><img src="https://github.com/kantord/SeaGOAT/raw/main/assets/logo-small.png" alt="Logo" width="200"></a>
    <b>SeaGOAT</b>
  </p>
</h2>
<p dir="auto">A code search engine for the AI age. SeaGOAT is a local search tool that
leverages vector embeddings to enable to search your codebase semantically.</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/kantord/SeaGOAT/blob/main/assets/demo-slideshow.gif"><img src="https://github.com/kantord/SeaGOAT/raw/main/assets/demo-slideshow.gif" alt="" data-animated-image=""></a>
</p>
<p dir="auto"><em>Note: I was recently laid off my job and I am looking for new
opportunities. If you need a Senior Full Stack Developer,
<a href="mailto:github@daniel-kantor.com">contact me</a>! I have experience with
React, Node and Python and I'm located in Spain (European Union).
10+ years in software development professionally.</em></p>
<h2 tabindex="-1" dir="auto">Getting started</h2>
<h3 tabindex="-1" dir="auto">Install SeaGOAT</h3>
<p dir="auto">In order to install SeaGOAT, you need to have the following
dependencies already installed on your computer:</p>
<ul dir="auto">
<li>Python 3.11 or newer</li>
<li>ripgrep</li>
<li><a href="https://github.com/sharkdp/bat">bat</a> (<strong>optional</strong>, highly recommended)</li>
</ul>
<p dir="auto">When <code>bat</code> is <a href="https://github.com/sharkdp/bat#on-ubuntu-using-apt">installed</a>,
it is used to display results as long as color is enabled. When SeaGOAT is
used as part of a pipeline, a grep-line output format is used. When color is
enabled, but <code>bat</code> is not installed, SeaGOAT will highlight the output using
pygments. Using <code>bat</code> is recommended.</p>
<p dir="auto">To install SeaGOAT using <code>pipx</code>, use the following command:</p>

<h3 tabindex="-1" dir="auto">System requirements</h3>
<h4 tabindex="-1" dir="auto">Hardware</h4>
<p dir="auto">Should work on any decent laptop.</p>
<h4 tabindex="-1" dir="auto">Oporating system</h4>
<p dir="auto">SeaGOAT is designed to work on Linux (<em>tested</em> ✅),
macOS (<a href="https://github.com/kantord/SeaGOAT/issues/178" data-hovercard-type="issue" data-hovercard-url="/kantord/SeaGOAT/issues/178/hovercard">partly tested, <strong>help</strong></a> 🙏)
and Windows (<a href="https://github.com/kantord/SeaGOAT/issues/179" data-hovercard-type="issue" data-hovercard-url="/kantord/SeaGOAT/issues/179/hovercard"><strong>help needed</strong></a> 🙏).</p>
<h3 tabindex="-1" dir="auto">Start SeaGOAT server</h3>
<p dir="auto">In order to use SeaGOAT in your project, you have to start the SeaGOAT server
using the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="seagoat-server start /path/to/your/repo"><pre>seagoat-server start /path/to/your/repo</pre></div>
<h3 tabindex="-1" dir="auto">Search your repository</h3>
<p dir="auto">If you have the server running, you can simply use the
<code>gt</code> or <code>seagoat</code> command to query your repository. For example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="gt &quot;Where are the numbers rounded&quot;"><pre>gt <span><span>"</span>Where are the numbers rounded<span>"</span></span></pre></div>
<p dir="auto">You can also use
<a href="https://en.wikipedia.org/wiki/Regular_expression" rel="nofollow">Regular Expressions</a>
in your queries, for example</p>
<div dir="auto" data-snippet-clipboard-copy-content="gt &quot;function calc_.* that deals with taxes&quot;"><pre>gt <span><span>"</span>function calc_.* that deals with taxes<span>"</span></span></pre></div>
<h3 tabindex="-1" dir="auto">Stopping the server</h3>
<p dir="auto">You can stop the running server using the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="seagoat-server stop /path/to/your/repo"><pre>seagoat-server stop /path/to/your/repo</pre></div>
<h2 tabindex="-1" dir="auto">Development</h2>
<p dir="auto"><strong>Requirements</strong>:</p>
<ul dir="auto">
<li><a href="https://python-poetry.org/" rel="nofollow">Poetry</a></li>
<li>Python 3.11 or newer</li>
<li><a href="https://github.com/BurntSushi/ripgrep">ripgrep</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Install dependencies</h3>
<p dir="auto">After cloning the repository, install dependencies using the following command:</p>

<h3 tabindex="-1" dir="auto">Running tests</h3>
<h4 tabindex="-1" dir="auto">Watch mode (recommended)</h4>

<h4 tabindex="-1" dir="auto">Test changed files</h4>
<div dir="auto" data-snippet-clipboard-copy-content="poetry run pytest .  --testmon"><pre>poetry run pytest <span>.</span>  --testmon</pre></div>
<h4 tabindex="-1" dir="auto">Test all files</h4>

<h3 tabindex="-1" dir="auto">Manual testing</h3>
<p dir="auto">You can test any SeaGOAT command manually in your local development
environment. For example to test the development version of the
<code>seagoat-server</code> command, you can run:</p>
<div dir="auto" data-snippet-clipboard-copy-content="poetry run seagoat-server ~/path/an/example/repository"><pre>poetry run seagoat-server <span>~</span>/path/an/example/repository</pre></div>
<h2 tabindex="-1" dir="auto">FAQ</h2>
<p dir="auto">The points in this FAQ are indications of how SeaGOAT works, but are not
a legal contract. SeaGOAT is licensed under an open source license and if you
are in doubt about the privacy/safety/etc implications of SeaGOAT, you are
welcome to examine the source code,
<a href="https://github.com/kantord/SeaGOAT/issues/new">raise your concerns</a>,
or create a pull request to fix a problem.</p>
<h3 tabindex="-1" dir="auto">How does SeaGOAT work? Does it send my data to ChatGPT?</h3>
<p dir="auto">SeaGOAT does not rely on 3rd party APIs or any remote APIs and executes all
functionality locally using the SeaGOAT server that you are able to run on
your own machine.</p>
<p dir="auto">Instead of relying on APIs or "connecting to ChatGPT", it uses the vector
database called ChromaDB, with a local vector embedding engine and
telemetry disabled by default.</p>
<p dir="auto">Apart from that, SeaGOAT also uses ripgrep, a regular-expression based code
search engine in order to provider regular expression/keyword based matches
in addition to the "AI-based" matches.</p>
<p dir="auto">While the current version of SeaGOAT does not send your data to remote
servers, it might be possible that in the future there will be <strong>optional</strong>
features that do so, if any further improvement can be gained from that.</p>
<h3 tabindex="-1" dir="auto">Why does SeaGOAT need a server?</h3>
<p dir="auto">SeaGOAT needs a server in order to provide a speedy response. SeaGOAT heavily
relies on vector embeddings and vector databases, which at the moment cannot
be replace with an architecture that processes files on the fly.</p>
<p dir="auto">It's worth noting that <em>you are able to run SeaGOAT server entirely locally</em>,
and it works even if you don't have an internet connection. This use case
does not require you to share data with a remote server, you are able to use
your own SeaGOAT server locally, albeit it's also possible to run a SeaGOAT
server and allow other computers to connect to it, if you so wish.</p>
<h3 tabindex="-1" dir="auto">Does SeaGOAT create AI-derived work? Is SeaGOAT ethical?</h3>
<p dir="auto">If you are concerned about the ethical implications of using AI tools keep in
mind that SeaGOAT is not a code generator but a code search engine, therefore
it does not create AI derived work.</p>
<p dir="auto">That being said, a language model <em>is</em> being used to generate vector
embeddings. At the moment SeaGOAT uses ChromaDB's default model for
calculating vector embeddings, and I am not aware of this being an ethical
concern.</p>
<h3 tabindex="-1" dir="auto">What programming langauges are supported?</h3>
<p dir="auto">Currently SeaGOAT is hardcoded to only process files in the following
formats:</p>
<ul dir="auto">
<li><strong>Text Files</strong> (<code>*.txt</code>)</li>
<li><strong>Markdown</strong> (<code>*.md</code>)</li>
<li><strong>Python</strong> (<code>*.py</code>)</li>
<li><strong>C</strong> (<code>*.c</code>, <code>*.h</code>)</li>
<li><strong>C++</strong> (<code>*.cpp</code>, <code>*.cc</code>, <code>*.cxx</code>, <code>*.hpp</code>)</li>
<li><strong>TypeScript</strong> (<code>*.ts</code>, <code>*.tsx</code>)</li>
<li><strong>JavaScript</strong> (<code>*.js</code>, <code>*.jsx</code>)</li>
<li><strong>HTML</strong> (<code>*.html</code>)</li>
<li><strong>Go</strong> (<code>*.go</code>)</li>
<li><strong>Java</strong> (<code>*.java</code>)</li>
<li><strong>PHP</strong> (<code>*.php</code>)</li>
<li><strong>Ruby</strong> (<code>*.rb</code>)</li>
</ul>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Rp2040 runs unmodified PalmOS 5.2.8 (102 pts)]]></title>
            <link>https://twitter.com/dmitrygr/status/1704350983877198013</link>
            <guid>37582940</guid>
            <pubDate>Wed, 20 Sep 2023 11:37:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/dmitrygr/status/1704350983877198013">https://twitter.com/dmitrygr/status/1704350983877198013</a>, See on <a href="https://news.ycombinator.com/item?id=37582940">Hacker News</a></p>
Couldn't get https://twitter.com/dmitrygr/status/1704350983877198013: Error [ERR_FR_TOO_MANY_REDIRECTS]: Maximum number of redirects exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Google settles account settings lawsuit less than one week after being filed [pdf] (120 pts)]]></title>
            <link>https://oag.ca.gov/system/files/attachments/press-docs/Filed%20stamped%20Google%20Complaint.pdf</link>
            <guid>37582565</guid>
            <pubDate>Wed, 20 Sep 2023 10:38:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://oag.ca.gov/system/files/attachments/press-docs/Filed%20stamped%20Google%20Complaint.pdf">https://oag.ca.gov/system/files/attachments/press-docs/Filed%20stamped%20Google%20Complaint.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=37582565">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[We have successfully completed our migration to RAM-only VPN infrastructure (274 pts)]]></title>
            <link>https://mullvad.net/en/blog/2023/9/20/we-have-successfully-completed-our-migration-to-ram-only-vpn-infrastructure/</link>
            <guid>37581485</guid>
            <pubDate>Wed, 20 Sep 2023 07:38:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mullvad.net/en/blog/2023/9/20/we-have-successfully-completed-our-migration-to-ram-only-vpn-infrastructure/">https://mullvad.net/en/blog/2023/9/20/we-have-successfully-completed-our-migration-to-ram-only-vpn-infrastructure/</a>, See on <a href="https://news.ycombinator.com/item?id=37581485">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p>Today we announce that we have completely removed all traces of disks being used by our VPN infrastructure!</p>

<p>In early 2022 we announced the<a href="https://mullvad.net/blog/2022/1/12/diskless-infrastructure-beta-system-transparency-stboot/"> beginning of our migration</a> to using diskless infrastructure with our bootloader known as “stboot”.</p>

<h2>Completing the transition to diskless infrastructure</h2>

<p>Our VPN infrastructure has since been audited with this configuration twice (<a href="https://mullvad.net/blog/2023/8/9/infrastructure-audit-completed-by-radically-open-security/">2023</a>, <a href="https://mullvad.net/blog/2022/6/22/vpn-server-audit-found-no-information-leakage-or-logging-of-customer-data/">2022</a>), and all future audits of our VPN servers will focus solely on RAM-only deployments.</p>

<p>All of our VPN servers continue to use our custom and extensively slimmed down Linux kernel, where we follow the mainline branch of kernel development. This has allowed us to pull in the latest version so that we can stay up to date with new features and performance improvements, as well as tune and completely remove unnecessary bloat in the kernel.</p>

<p>The result is that the operating system that we boot, prior to being deployed weighs in at just over 200MB. When servers are rebooted or provisioned for the first time, we can be safe in the knowledge that we get a freshly built kernel, no traces of any log files, and a fully patched OS.</p>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[‘Less than half’ fresh produce sold globally makes any profit (135 pts)]]></title>
            <link>https://www.fruitnet.com/main-navigation/less-than-half-fresh-produce-sold-globally-makes-any-profit/256025.article</link>
            <guid>37581316</guid>
            <pubDate>Wed, 20 Sep 2023 07:15:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.fruitnet.com/main-navigation/less-than-half-fresh-produce-sold-globally-makes-any-profit/256025.article">https://www.fruitnet.com/main-navigation/less-than-half-fresh-produce-sold-globally-makes-any-profit/256025.article</a>, See on <a href="https://news.ycombinator.com/item?id=37581316">Hacker News</a></p>
<div id="readability-page-1" class="page"><p><h3>New report suggests massive increase in production and operating costs over past three years has left around 60 per cent of supply unprofitable</h3></p><div><p>Three-fifths of the fresh fruit and vegetables traded commercially around the globe are now sold at a loss or breakeven price, following an unprecedented increase in production and operating costs during the pandemic.</p>
<p>What’s more, those cost increases appear to have greatly reduced the amount of investment going into new projects, which means the effects of that inflation are likely to be felt for some time.</p>
<p>Those are two of the key findings published in a new report by the Global Coalition of Fresh Produce (GCFP), an international thinktank which brings together industry associations including Freshfel Europe, IFPA, CPMA, and Shaffe.</p>
<p>The report, which is based on the results of a survey conducted in early 2023, looked at the increasing cost of fruits and vegetable production around the world, as well as its impacts on the industry and consumers.</p>
<p>“We conducted this global survey to shed light on the challenges experienced by actors in the fresh produce supply chain worldwide,” says GCFP chair Ron Lemaire. “The narrative highlighted in this report will help the industry, its partners and all government levels understand the current impacts of the increase in production and operating costs, and work together to address them.”</p>
<p><strong>Stark conclusions</strong></p>
<p>The report states that producers of fresh fruits and vegetables around the world experienced “unprecedented increases” in production and operating costs during the Covid-19 pandemic, regardless of where in the world they operated. Those increases, the report says, were driven by costs of fertiliser (up 60 per cent worldwide), construction (+48 per cent), fuel and gas (+41 per cent), shipping rates (+40 per cent), and electricity (+40 percent).</p>
<p>Most operators were able to increase their selling prices, the report finds, with rises of 11 per cent in Europe, 13 per cent in Oceania and South America, 14 per cent in North America and 23 per cent in Africa.</p>
<p>However, these increases were “not enough” to compensate for the rise in production and operating costs, the coalition discovered, leaving nearly three-fifths of the global industry “selling at a loss or breaking even”.</p>
<p>Higher costs have also affected strategic and operational choices, it notes: “Certain producers have reduced their output, while some traders have reduced their export activities or switched to produce with lower shipping costs.”</p>
<p>Eighty percent of respondents noted that they had chosen to delay or cancel investment in their businesses, not only in capital and equipment but also in innovation and expansion. “This means that the impacts of the rise in costs will be felt for years to come,” the authors comment.</p>
<p><a href="https://producecoalition.net/publications/" target="_blank" rel="noopener noreferrer">The final report is available on the Global Coalition of Fresh Produce website</a>.</p>
<p>The Global Coalition of Fresh Produce brings together fresh produce associations from around the world, based on their joint vision to “create resilient global value chains for fruits and vegetables that bring a myriad of economic, environmental and societal benefits”.</p>
<p>Current members are Afruibana, AEBE, Australian Fresh Produce Alliance, AusVeg, CPMA, Colead, Freshfel Europe, FVGC, IFPA, Shaffe, and United Fresh New Zealand.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenTF renames itself to OpenTofu (370 pts)]]></title>
            <link>https://github.com/opentofu</link>
            <guid>37581132</guid>
            <pubDate>Wed, 20 Sep 2023 06:44:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/opentofu">https://github.com/opentofu</a>, See on <a href="https://news.ycombinator.com/item?id=37581132">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="" data-view-component="true">
  

  <div>
    
    <article itemprop="text">
<p dir="auto">OpenTofu's goal is to ensure Terraform remains truly open source and proposes returning it to a fully open license. We urge HashiCorp to reconsider and switch Terraform back to an open source license, avoiding fragmentation of the community.</p>
<p dir="auto">For further details and the full text of the manifesto, you can visit the <a href="https://opentofu.org/" rel="nofollow">OpenTofu website</a>.</p>
<h2 dir="auto">Contact</h2>
<p dir="auto">If you have questions or feedback to share, you can reach the team behind this manifesto by emailing us at <a href="mailto:pledge@opentf.org">pledge@opentf.org</a>.</p>
</article>
  </div>


  

     

    <div>

  <h2>
        Pinned

    <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="16" height="16" viewBox="0 0 16 16" fill="none" data-view-component="true">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" fill="none"></circle>
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke"></path>
</svg>
    <span role="status" aria-live="polite" data-error-text="Something went wrong." data-success-text="Order updated."></span>
  </h2>

      <ol>
      <li>
  <div>
      


      <p>
        OpenTofu lets you declaratively manage your cloud infrastructure.
      </p>

      <p>
          <span>
  <span></span>
  <span itemprop="programmingLanguage">Go</span>
</span>

          <a href="https://github.com/opentofu/opentofu/stargazers">
            <svg aria-label="stars" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z"></path>
</svg>
            6.6k
          </a>
          <a href="https://github.com/opentofu/opentofu/forks">
            <svg aria-label="forks" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
            174
          </a>
      </p>
    </div>
</li>

      <li>
  <div>
      


      <p>
        The OpenTF Manifesto expresses concern over HashiCorp's switch of the Terraform license from open-source to the Business Source License (BSL) and calls for the tool's return to a truly open-source …
      </p>

      <p>
          <span>
  <span></span>
  <span itemprop="programmingLanguage">HTML</span>
</span>

          <a href="https://github.com/opentofu/manifesto/stargazers">
            <svg aria-label="stars" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z"></path>
</svg>
            35.4k
          </a>
          <a href="https://github.com/opentofu/manifesto/forks">
            <svg aria-label="forks" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
            1.1k
          </a>
      </p>
    </div>
</li>

</ol>

</div>


    <div id="org-profile-repositories">
      <h3>
        
        Repositories
      </h3>
      
      <div id="org-repositories" data-delay-results="">
    <p><span data-autosearch-results="">Showing 10 of 45 repositories</span></p><div data-view-component="true">
  
  
    <ul data-view-component="true">
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">
        <p><a itemprop="name codeRepository" data-hovercard-type="repository" data-hovercard-url="/opentofu/opentofu/hovercard" href="https://github.com/opentofu/opentofu" data-view-component="true">
          opentofu
</a>
        <span title="Label: Public" data-view-component="true">
          Public
</span></p><p itemprop="description" data-view-component="true">
            OpenTofu lets you declaratively manage your cloud infrastructure.
</p></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">Go</span>
</span>


        <span data-view-component="true">
          0
</span>
        <span data-view-component="true">
          MPL-2.0
</span></p><a href="https://github.com/opentofu/terraform-provider-azurerm/forks" data-view-component="true">
          <svg aria-label="fork" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
          4,216
</a>
      <a href="https://github.com/opentofu/terraform-provider-azurerm/issues" data-view-component="true">
        
        0
</a>

      <a href="https://github.com/opentofu/terraform-provider-azurerm/pulls" data-view-component="true">
        
        0
</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2023-09-20T08:26:01Z">Sep 20, 2023</relative-time>
</span></p></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">
        <p><a itemprop="name codeRepository" data-hovercard-type="repository" data-hovercard-url="/opentofu/manifesto/hovercard" href="https://github.com/opentofu/manifesto" data-view-component="true">
          manifesto
</a>
        <span title="Label: Public" data-view-component="true">
          Public
</span></p><p itemprop="description" data-view-component="true">
            The OpenTF Manifesto expresses concern over HashiCorp's switch of the Terraform license from open-source to the Business Source License (BSL) and calls for the tool's return to a truly open-source license.
</p></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">Go</span>
</span>


        <span data-view-component="true">
          0
</span>
        <span data-view-component="true">
          MPL-2.0
</span></p><a href="https://github.com/opentofu/terraform-provider-hcp/forks" data-view-component="true">
          <svg aria-label="fork" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
          45
</a>
      <a href="https://github.com/opentofu/terraform-provider-hcp/issues" data-view-component="true">
        
        0
</a>

      <a href="https://github.com/opentofu/terraform-provider-hcp/pulls" data-view-component="true">
        
        0
</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2023-09-20T04:26:16Z">Sep 20, 2023</relative-time>
</span></p></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">Go</span>
</span></p><a href="https://github.com/opentofu/terraform-provider-google/stargazers" data-view-component="true">
          
          2
</a>
        <p><span data-view-component="true">
          MPL-2.0
</span></p><a href="https://github.com/opentofu/terraform-provider-google/forks" data-view-component="true">
          <svg aria-label="fork" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
          1,653
</a>
      <a href="https://github.com/opentofu/terraform-provider-google/issues" data-view-component="true">
        
        0
</a>

      <a href="https://github.com/opentofu/terraform-provider-google/pulls" data-view-component="true">
        
        0
</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2023-09-20T01:27:59Z">Sep 20, 2023</relative-time>
</span></p></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">Go</span>
</span>


        <span data-view-component="true">
          0
</span>
        <span data-view-component="true">
          MPL-2.0
</span></p><a href="https://github.com/opentofu/terraform-provider-google-beta/forks" data-view-component="true">
          <svg aria-label="fork" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
          237
</a>
      <a href="https://github.com/opentofu/terraform-provider-google-beta/issues" data-view-component="true">
        
        0
</a>

      <a href="https://github.com/opentofu/terraform-provider-google-beta/pulls" data-view-component="true">
        
        0
</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2023-09-20T01:26:12Z">Sep 20, 2023</relative-time>
</span></p></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">Go</span>
</span></p><a href="https://github.com/opentofu/terraform-provider-aws/stargazers" data-view-component="true">
          
          2
</a>
        <p><span data-view-component="true">
          MPL-2.0
</span></p><a href="https://github.com/opentofu/terraform-provider-aws/forks" data-view-component="true">
          <svg aria-label="fork" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
          8,326
</a>
      <a href="https://github.com/opentofu/terraform-provider-aws/issues" data-view-component="true">
        
        0
</a>

      <a href="https://github.com/opentofu/terraform-provider-aws/pulls" data-view-component="true">
        
        0
</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2023-09-20T01:21:14Z">Sep 20, 2023</relative-time>
</span></p></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">


        <a href="https://github.com/opentofu/.github/stargazers" data-view-component="true">
          
          6
</a>

        <a href="https://github.com/opentofu/.github/forks" data-view-component="true">
          <svg aria-label="fork" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
          1
</a>
      <a href="https://github.com/opentofu/.github/issues" data-view-component="true">
        
        0
</a>

      <a href="https://github.com/opentofu/.github/pulls" data-view-component="true">
        
        0
</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2023-09-20T01:10:25Z">Sep 20, 2023</relative-time>
</span></p></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">Go</span>
</span>


        <span data-view-component="true">
          0
</span>
        <span data-view-component="true">
          MPL-2.0
</span></p><a href="https://github.com/opentofu/terraform-provider-hcs/forks" data-view-component="true">
          <svg aria-label="fork" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
          9
</a>
      <a href="https://github.com/opentofu/terraform-provider-hcs/issues" data-view-component="true">
        
        0
</a>

      <a href="https://github.com/opentofu/terraform-provider-hcs/pulls" data-view-component="true">
        
        0
</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2023-09-19T20:27:41Z">Sep 19, 2023</relative-time>
</span></p></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">Go</span>
</span>


        <span data-view-component="true">
          0
</span>
        <span data-view-component="true">
          MPL-2.0
</span></p><a href="https://github.com/opentofu/terraform-provider-vsphere/forks" data-view-component="true">
          <svg aria-label="fork" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
          430
</a>
      <a href="https://github.com/opentofu/terraform-provider-vsphere/issues" data-view-component="true">
        
        0
</a>

      <a href="https://github.com/opentofu/terraform-provider-vsphere/pulls" data-view-component="true">
        
        0
</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2023-09-19T20:23:19Z">Sep 19, 2023</relative-time>
</span></p></div>
</li>
</ul>  
</div></div>
  </div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FAA authorizes Zipline to deliver commercial packages using drones (474 pts)]]></title>
            <link>https://www.faa.gov/newsroom/faa-authorizes-zipline-deliver-commercial-packages-beyond-line-sight</link>
            <guid>37580141</guid>
            <pubDate>Wed, 20 Sep 2023 03:42:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.faa.gov/newsroom/faa-authorizes-zipline-deliver-commercial-packages-beyond-line-sight">https://www.faa.gov/newsroom/faa-authorizes-zipline-deliver-commercial-packages-beyond-line-sight</a>, See on <a href="https://news.ycombinator.com/item?id=37580141">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page-wrapper" data-off-canvas-main-canvas="">

    
 
 
    <section>
    
  <h2>Site Notification</h2>
  
  
      <h2>Site Notification</h2>
    
  
  </section>

 



    <main id="main" aria-label="Site main">

      
      
      <section id="main-wrapper" role="main">
                    <a id="main-content" tabindex="-1"></a>
                    <!--PAGEWATCH-->
                      

<article data-history-node-id="121896" role="article" about="/newsroom/faa-authorizes-zipline-deliver-commercial-packages-beyond-line-sight" typeof="schema:Article">
  <div>
        
    

    <!--PAGEWATCH-->
    
      
      <p> Monday, September 18, 2023</p>
    
        
          <div><p>The FAA authorized Zipline International, Inc., to deliver commercial packages around Salt Lake City and Bentonville, Arkansas, using drones that fly beyond the operator’s visual line of sight. Read the approval letters <a href="https://www.regulations.gov/document/FAA-2020-0499-0033">here</a> and <a href="https://www.regulations.gov/document/FAA-2020-0529-0009">here</a>. Zipline is an FAA-certificated Part 135 operator and will use its Sparrow drone to release the payload via parachute. Data collected from these operations will inform the FAA’s ongoing policy and rulemaking activities.&nbsp;</p><p>
&nbsp;
The FAA is focused on developing standard rules to make BVLOS operations routine, scalable and economically viable. The agency chartered the <a href="https://www.faa.gov/regulations_policies/rulemaking/committees/documents/index.cfm/committee/browse/committeeID/837">Beyond Visual Line of Sight Aviation Rulemaking Committee</a> on June 9, 2021 to provide safety recommendations to the FAA. We are reviewing their <a href="https://www.faa.gov/regulations_policies/rulemaking/committees/documents/media/UAS_BVLOS_ARC_FINAL_REPORT_03102022.pdf">final report</a>.</p><p>
&nbsp;&nbsp;
The FAA’s long-term goal is to safely integrate drones into the National Airspace System rather than set aside separate airspace exclusively for drones. This approach is consistent with the <a href="https://www.congress.gov/bill/112th-congress/house-bill/658/text/pl">FAA Modernization and Reform Act of 2012</a> and the <a href="https://www.congress.gov/bill/114th-congress/house-bill/636/text">FAA Extension, Safety, and Security Act of 2016</a>. The 2016 Act directed the FAA, in conjunction with NASA, to continue developing a plan for <a href="https://www.faa.gov/uas/research_development/traffic_management">Unmanned Aircraft System Traffic Management (UTM)</a>, which will assist in integration efforts.</p><p>
&nbsp;
Learn more <a href="https://www.regulations.gov/document/FAA-2023-1256-0001">here</a> and <a href="https://www.faa.gov/newsroom/faa-seeks-public-input-drone-operations">here</a>.</p></div>
              
      
        <!--/PAGEWATCH-->

    
    

  </div>
</article>


                    <!-- Sub Content Region -->
                                                            <!--/PAGEWATCH-->
                  </section>

    </main>

     

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Add extra stuff to a “standard” encoding? Sure, why not (206 pts)]]></title>
            <link>https://rachelbythebay.com/w/2023/09/19/badlib/</link>
            <guid>37580123</guid>
            <pubDate>Wed, 20 Sep 2023 03:38:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rachelbythebay.com/w/2023/09/19/badlib/">https://rachelbythebay.com/w/2023/09/19/badlib/</a>, See on <a href="https://news.ycombinator.com/item?id=37580123">Hacker News</a></p>
Couldn't get https://rachelbythebay.com/w/2023/09/19/badlib/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[100 Parking Tickets (2004) (145 pts)]]></title>
            <link>https://100parkingtickets.com/</link>
            <guid>37580113</guid>
            <pubDate>Wed, 20 Sep 2023 03:35:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://100parkingtickets.com/">https://100parkingtickets.com/</a>, See on <a href="https://news.ycombinator.com/item?id=37580113">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><!-- InstanceBeginEditable name="Main" -->
      <h2>The Story:</h2>
      <p>So I was new to California</p>
      <p>Along with a new convertible, I decide to get some personalized plates.</p>
      <p>I could not believe my luck, when I found out that my initials "NV" (ph. "envy") were available. Not that I think anyone would be envious of me in my Miata, but it seemed like a good idea at the time.</p>
      <p><img src="https://100parkingtickets.com/photos/NV.gif" width="328" height="166"></p>
      <p>But then, I started to get random parking tickets from Los Angeles. Where my car has never been. For every type of car. Except a Mazda. Which is what I drive. No problem, right? Just call them up, deal with a healthy level of skepticism when I tell them the ticket isn't mine...
        no really. I would ask them what make &amp; color the ticket is for. I would ask them what make &amp; color my car is. They would always be different. Even a highly skeptical city clerk can't argue with that.</p>
      <p>Then the notices of unpaid violations slowly start to come in from all over California. Because when the license plate is Not Visible, the charming traffic wardens enter "NV" as the license plate. Sometimes they would explain that it was a training issue and they would soon stop bugging me with
        tickets.</p>
      <p>Then the city of Oakland  has a computer upgrade. The first day I get five tickets. The next day... three. And they kept on sending them. For every type of car imaginable including BMW's and Porsches, every car imaginable, except for a white two door Mazda.</p>
      
      <p><img src="https://100parkingtickets.com/photos/oakland.jpg"></p>
      <p>Now I know what you are thinking, BMW's &amp; Porsches don’t park in Oakland.  I was surprised too. But more than that, I was tired of sitting on hold for twenty minutes, waiting to talk to a skeptical city employee. So I returned the custom plates to the DMV, and someone at Oakland told me that all fifty tickets would be put under administrative review.</p>
      <p>Problem solved? Not even. First, the DMV refused to issue me my registration, until I got a piece of paper saying I was not guilty. Then I received a notice that the Franchise Tax Board wanted to garnish my wages. Not with cilantro either. Then I get a notice stating that any tax refund I get will be going to the City of Oakland.</p>
      <p>That is when I started feeling a little irate.</p>
      <p>And a little wiser. I tried calling my local police department, to see if there was a bench warrant out for my arrest. The friendly officer told me that I would have to come to the office... in person. And I swear, she said this with what sounded like a straight face.</p>
      <p>As a last resort, I started to post the story on the internet. You never know. Someone might want a collection of over fifty parking violations from seven different counties for all different makes and models. The asking price was the total owed on all the tickets... $3000.</p>
      <p>
        The only thing that made me feel a little better, was that the lovely folks at Oakland told me someone driving a BMW had the license plates "NV". So if you see a BMW owner with the plates "NV", give him a wave. Tell him you work for the City of Oakland. For the traffic violations department. See if he goes green. You know, from envy.      </p>
      <p>NV</p>
      
      <!-- InstanceEndEditable --></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ruby 3.3's YJIT Runs Shopify's Production Code 15% Faster (153 pts)]]></title>
            <link>https://railsatscale.com/2023-09-18-ruby-3-3-s-yjit-runs-shopify-s-production-code-15-faster/</link>
            <guid>37579926</guid>
            <pubDate>Wed, 20 Sep 2023 02:57:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://railsatscale.com/2023-09-18-ruby-3-3-s-yjit-runs-shopify-s-production-code-15-faster/">https://railsatscale.com/2023-09-18-ruby-3-3-s-yjit-runs-shopify-s-production-code-15-faster/</a>, See on <a href="https://news.ycombinator.com/item?id=37579926">Hacker News</a></p>
<div id="readability-page-1" class="page"><div aria-label="Content">
        <article itemscope="" itemtype="http://schema.org/BlogPosting">

  

  <div itemprop="articleBody">
    <h2 id="ruby-32-yjit-is-battle-tested">Ruby 3.2 YJIT is Battle-Tested</h2>

<p>Shopify deploys YJIT on business-critical services in production,
such as <a href="https://shopify.engineering/how-shopify-reduced-storefront-response-times-rewrite">Storefront Renderer</a>,
the software that powers all online storefronts on Shopify’s platform, and <a href="https://shopify.engineering/shopify-monolith">Shopify’s Monolith</a>.
As of the Ruby 3.2 release, YJIT sped up our Storefront Renderer by <a href="https://twitter.com/paracycle/status/1605706245955997697">10% on average</a>.</p>

<p>Storefront Renderer is a complex application. Your more reasonable-sized app might get better/worse results.
Here are some other YJIT performance results in production outside Shopify:</p>

<ul>
  <li>Discourse: <a href="https://blog.discourse.org/2023/05/running-ruby-3-2s-yjit-in-production-at-discourse/">15.8-19.6% speedup</a></li>
  <li>Lobsters: <a href="https://lobste.rs/s/m9ivcf/we_turned_lobste_rs_into_rails_benchmark#c_fkud5w">26% speedup</a></li>
  <li>CompanyCam: <a href="https://ruby.social/@mcphat/111075935007519631">20-40% speedup</a></li>
  <li>GMO Pepabo: <a href="https://shimoju.jp/2023/08/10/ruby-3-2-yjit-with-rails-6-1/">18% speedup</a> (in Japanese)</li>
  <li>Timee: <a href="https://tech.timee.co.jp/entry/2023/05/10/133000">10% speedup</a> (in Japanese)</li>
  <li>STORES: <a href="https://product.st.inc/entry/2023/05/31/130809">6.5-7.5% speedup</a> (in Japanese)</li>
  <li>MedPeer: <a href="https://tech.medpeer.co.jp/entry/2023/05/09/100000">2.8% speedup</a> (in Japanese)</li>
</ul>

<h2 id="performance-tips-for-production-deployments">Performance Tips for Production Deployments</h2>
<p>We sometimes hear people say YJIT doesn’t speed up their application or uses too much memory.
The following documentation covers some tips for tuning YJIT in such cases.</p>

<ul>
  <li><a href="https://github.com/ruby/ruby/blob/master/doc/yjit/yjit.md#performance-tips-for-production-deployments">Performance Tips for Production Deployments</a></li>
  <li><a href="https://github.com/ruby/ruby/blob/master/doc/yjit/yjit.md#saving-yjit-memory-usage">Saving YJIT Memory Usage</a></li>
</ul>

<p><a href="https://railsatscale.com/2023-06-05-monitoring-yjit-in-production/">Monitoring YJIT in Production</a>
might also help you get more insight.</p>

<h2 id="ruby-33-yjit-is-even-faster">Ruby 3.3 YJIT is Even Faster</h2>
<p><a href="https://www.ruby-lang.org/en/news/2023/09/14/ruby-3-3-0-preview2-released/">Ruby 3.3.0-preview2 has been released</a>
on Sep 14th, 2023. We compared the performance of Ruby 3.2 YJIT, Ruby 3.3-preview2 YJIT, and Ruby 3.3-preview2 interpreter
on the Storefront Renderer. It’s a large-scale service with the following properties:</p>

<ul>
  <li>Depends on over 220 Ruby gems</li>
  <li>Over 4.5 million e-commerce sites are built with Shopify (source: <a href="https://builtwith.com/">builtwith.com</a>)</li>
  <li>Capable of serving over 75 million requests per minute, 3TB/minute of traffic</li>
  <li>1.27 million requests per second</li>
  <li>Processed over 197B$ in transaction volume in 2022</li>
</ul>

<h2 id="ruby-33-yjit-is-13-faster-than-ruby-32-yjit">Ruby 3.3 YJIT is 13% faster than Ruby 3.2 YJIT</h2>

<p>We deployed Ruby 3.2.2 YJIT and Ruby 3.3.0-preview2 YJIT to different clusters that receive an equal amount of traffic.
We compared their response times in a 24-hour window on a weekday.</p>

<p><img src="https://railsatscale.com/2023-09-18-ruby-3-3-s-yjit-runs-shopify-s-production-code-15-faster/3.2-3.3-yjit.png" alt="Ruby 3.3 YJIT vs Ruby 3.2 YJIT"></p>

<p>The numbers and the graph show Ruby 3.3.0-preview2 YJIT’s average/p50/p90/p99 response time speedup ratio over
Ruby 3.2.2 YJIT’s. Higher is better for Ruby 3.3.0-preview2 YJIT.</p>

<p>This shows that Ruby 3.3.0-preview2 YJIT is 13% faster than Ruby 3.2.2 YJIT on average.
If you’re using Ruby 3.2 YJIT, upgrading Ruby to 3.3 should give you a 13% speedup.</p>

<h2 id="ruby-33-yjit-is-15-faster-than-the-ruby-33-interpreter">Ruby 3.3 YJIT is 15% faster than the Ruby 3.3 interpreter</h2>

<p>During the same 24-hour window, we also deployed Ruby 3.3.0-preview2 interpreter to another cluster.
We compared its performance against that of the cluster with Ruby 3.3.0-preview2 YJIT.</p>

<p><img src="https://railsatscale.com/2023-09-18-ruby-3-3-s-yjit-runs-shopify-s-production-code-15-faster/3.3-interp-yjit.png" alt="Ruby 3.3 YJIT vs Ruby 3.3 interpreter"></p>

<p>The numbers and the graph show Ruby 3.3.0-preview2 YJIT’s average/p50/p90/p99 response time speedup ratio over
Ruby 3.3.0-preview2 interpreter’s. Higher is better for Ruby 3.3.0-preview2 YJIT.</p>

<p>When you run Ruby 3.3 interpreter, just enabling YJIT will give you a 15% speedup.</p>

<h2 id="why-is-it-faster">Why is it faster?</h2>

<h3 id="new-register-allocator">New register allocator</h3>

<p>The CRuby interpreter writes and reads temporary values on memory.
Ruby 3.2 YJIT used to work in the same way for compatibility reasons,
but Ruby 3.3 YJIT is able to allocate registers to those operations.
In general, accessing CPU registers is much faster than communicating with memory,
so Ruby code runs faster with the optimization.</p>

<h3 id="more-code-now-gets-jit-compiled">More code now gets JIT compiled</h3>

<p>Ruby 3.3 YJIT supports compiling more kinds of Ruby code than Ruby 3.2 YJIT.
When a method has optional arguments, Ruby 3.2 YJIT compiles only one combination of parameter precenses,
but Ruby 3.3 YJIT handles multiple combinations.
Ruby 3.2 YJIT does not compile code that is executed after <code>break</code>, <code>next</code>, <code>redo</code>, <code>retry</code>, etc.,
but Ruby 3.3 YJIT does.
Ruby 3.2 YJIT gives up compiling a method call when it does not support the method call type,
but Ruby 3.3 YJIT falls back to an implementation that can handle anything.</p>

<p>In a nutshell, more code runs on JIT with Ruby 3.3 YJIT than Ruby 3.2 YJIT, so it’s faster.</p>

<h2 id="towards-the-ruby-330-release">Towards the Ruby 3.3.0 release</h2>

<h3 id="reducing-memory-overhead">Reducing memory overhead</h3>
<p>Since Ruby 3.3.0-preview2 YJIT generates more code than Ruby 3.2.2 YJIT, this can result in YJIT having a higher memory overlead.
We put a lot of effort into making metadata more space-efficient, but it still uses more memory than Ruby 3.2.2 YJIT.
We’re looking into skipping compilation of paths that are less frequently executed.</p>

<h3 id="optimizing-method-calls">Optimizing method calls</h3>
<p>Ruby’s method calls are complex. YJIT code spends a lot of time bookkeeping frames for method calls.
We’re working on making any method calls faster by packing frame metadata into a single pointer
and lazily materializing its fields when necessary. Hopefully, it will greatly speed up method calls
as well as reducing the code size.</p>

<h2 id="conclusion">Conclusion</h2>

<p>Ruby 3.2 YJIT has optimized the production workloads of Shopify and other companies.
We encourage you to enable YJIT in production.
Once Ruby 3.3 is released, it should make your application even faster.</p>

<h2 id="references">References</h2>

<p><a href="https://github.com/ruby/ruby/blob/master/doc/yjit/yjit.md#command-line-options">This document</a> explains how to enable YJIT.
As a reminder, the following links may help you troubleshoot performance problems with YJIT.</p>

<ul>
  <li><a href="https://github.com/ruby/ruby/blob/master/doc/yjit/yjit.md#performance-tips-for-production-deployments">Performance Tips for Production Deployments</a></li>
  <li><a href="https://github.com/ruby/ruby/blob/master/doc/yjit/yjit.md#saving-yjit-memory-usage">Saving YJIT Memory Usage</a></li>
  <li><a href="https://railsatscale.com/2023-06-05-monitoring-yjit-in-production/">Monitoring YJIT in Production</a></li>
</ul>

  </div>
</article>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A simple web server written in Awk (187 pts)]]></title>
            <link>https://github.com/crossbowerbt/awk-webserver</link>
            <guid>37579595</guid>
            <pubDate>Wed, 20 Sep 2023 02:02:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/crossbowerbt/awk-webserver">https://github.com/crossbowerbt/awk-webserver</a>, See on <a href="https://news.ycombinator.com/item?id=37579595">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">Simple webserver written in gawk</h2>
<p dir="auto">A simple webserver written in GNU awk, that supports directory listing and download of files from the directory where it is launched.</p>
<p dir="auto">It is born as an experiment, to demonstrate the power of the awk language.</p>
<h2 tabindex="-1" dir="auto">Usage</h2>
<p dir="auto">The script must be executed through a TCP wrapper.</p>
<p dir="auto">I use this little shell script that requires socat:</p>
<div data-snippet-clipboard-copy-content="while [ 1 ]; do
	socat TCP-LISTEN:8888,reuseaddr EXEC:&quot;gawk -f webserver.awk&quot;
	sleep 1
done "><pre><code>while [ 1 ]; do
	socat TCP-LISTEN:8888,reuseaddr EXEC:"gawk -f webserver.awk"
	sleep 1
done 
</code></pre></div>
<p dir="auto">You can then connect to the local 8888 port with your browser. Enjoy!</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Shaving 40% Off Google’s B-Tree Implementation with Go Generics (2022) (106 pts)]]></title>
            <link>https://www.scylladb.com/2022/04/27/shaving-40-off-googles-b-tree-implementation-with-go-generics/</link>
            <guid>37578850</guid>
            <pubDate>Wed, 20 Sep 2023 00:13:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.scylladb.com/2022/04/27/shaving-40-off-googles-b-tree-implementation-with-go-generics/">https://www.scylladb.com/2022/04/27/shaving-40-off-googles-b-tree-implementation-with-go-generics/</a>, See on <a href="https://news.ycombinator.com/item?id=37578850">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                        <p>There are many reasons to be excited about generics in Go. In this blog post I’m going to show how, using the generics, we got a 40% performance gain in an already well optimized package, the <a href="https://github.com/google/btree" target="_blank" rel="noopener">Google B-Tree</a> implementation.</p>
<p>A <a href="https://en.wikipedia.org/wiki/B-tree" target="_blank" rel="noopener">B-Tree</a> is a kind of self-balancing tree. For the purpose of this blog post it’s sufficient to say that it is a collection. You can add, remove, get or iterate over its elements. The Google B-Tree is well optimized, measures are taken to make sure memory consumption is correct. There is a benchmark for every exported method. The benchmark results show that there are zero allocations in the B-Tree code for all operations but cloning. Probably it would be hard to further optimize using traditional techniques.</p>
<h2>ScyllaDB and the University of Warsaw</h2>
<p>We have had a longstanding relationship with the Computer Science department at the University of Warsaw. You may remember some of our original projects, including those integrating <a href="https://www.scylladb.com/2020/08/05/scylla-student-projects-part-i-parquet/" target="_blank" rel="noopener">Parquet</a>, an <a href="https://www.scylladb.com/2020/08/25/scylla-student-projects-part-ii-implementing-an-async-userspace-file-system/" target="_blank" rel="noopener">async userspace filesystem</a>, or a <a href="https://www.scylladb.com/2020/11/17/scylla-student-projects-part-iii-kafka-client-for-seastar-and-scylla/" target="_blank" rel="noopener">Kafka client for Seastar</a>. Or more recent ones like a system for <a href="https://www.scylladb.com/2021/09/07/linear-algebra-in-scylla/" target="_blank" rel="noopener">linear algebra</a> in ScyllaDB or a design for a new <a href="https://www.scylladb.com/2021/07/13/scylla-rust-driver-update-and-benchmarks/" target="_blank" rel="noopener">Rust driver</a>.</p>
<p>This work was also part of our ongoing partnership with the University of Warsaw.</p>
<h2>Making Faster B-Trees with Generics</h2>
<p>While working on a new Scylla Go Driver with students of University of Warsaw, we ported the B-tree code to <a href="https://github.com/Michal-Leszczynski/btree" target="_blank" rel="noopener">generics</a>. (If you’re not familiar with generics in Go, check out <a href="https://go.dev/doc/tutorial/generics" target="_blank" rel="noopener">this tutorial</a>.).</p>
<p>The initial result: the generics code is faster by 20 to 30 percent according to the Google benchmarks (<a href="https://github.com/google/btree/issues/41" target="_blank" rel="noopener">link to issue we opened</a>). Below a full benchmark comparison done with benchstat.</p>

<p>This is great but within those numbers there is a troubling detail. The zero allocations is not something that you would normally see given that the functions accept an interface as a parameter.</p>

<p>For the rest of the blog post we’ll focus on benchmarking the <code>ReplaceOrInsert</code> function responsible for ingesting data. Let’s consider a simplified benchmark.</p>

<p>The results show even greater improvement: 31% vs. 27%, and allocations drop from 1, in case of the interface based implementation, to 0 in the case of generics.</p>

<p>Let’s try to understand what happens here.</p>
<h2>The Additional Allocation</h2>
<p>The Google benchmarks operate on a B-tree of integers <a href="https://github.com/google/btree/blob/ac7cc57f11e692c57831c3d9bcffb4b7a649b738/btree.go#L885" target="_blank" rel="noopener">hidden by an Item interface</a>. They use pre-generated random data in a slice. When an Item is passed to the <code>ReplaceOrInsert</code> function the underlying integer is already on the heap, technically we are copying a pointer. This is not the case when a plain integer needs to be converted to an Item interface — the parameter values start “escaping to heap”.</p>
<p>Go has a feature of deciding if a variable you initialized should live in the function’s stack or in the heap. Traditionally the compiler was very “conservative” and when it saw a function like <code>func bind(v interface{})</code> anything you wanted to pass as <code>v</code> would have to go to heap first. This is referred to as variable escaping to the heap. Over the years the compiler has gotten smarter, and calls to local functions or functions in other packages in your project can be optimized, preventing the variables from escaping. You can check for yourself by running&nbsp; <code>go build -gcflags="-m" .</code> in a Go package.</p>
<p>In the below example Go can figure out that it’s safe to take a pointer to the main functions stack.</p>

<p>As you can see the compiler informs us that variables do not escape to heap.</p>

<p>By changing the ToString implementation to</p>

<p>we see that the variables and literal values do start escaping.</p>

<p>In practical examples, when calling a function that accepts an interface as a parameter, the value almost always escapes to heap. When this happens it not only slows down the function call by the allocation, but also increases the GC pressure. Why is this important? The generics approach enables a truly zero allocation API, with zero GC pressure added as we will learn in the remainder of this blog post.</p>
<h2>Why is it faster?</h2>
<p>The B-tree, being a tree, consists of nodes. Each node holds a list of items.</p>

<p>When the Item is a pre-generics plain old interface, the value it holds must live separately somewhere on the heap. The compiler is not able to tell what is the size of an Item. From the runtime perspective an interface value is an unsafe pointer to data (word), a pointer to its type definition (typ), a pointer to interface definition (ityp); see <a href="https://github.com/golang/go/blob/357c9141369361101345f3048a6b2b3e149299d5/src/reflect/value.go#L180" target="_blank" rel="noopener">definitions in the reflect package</a>. It’s easier to digest than the runtime package. In that case we have items as a slice of int pointers.</p>
<p>On the other hand, with generic interface</p>

<p>and a generic type definition</p>

<p>items are a slice of ints — this reduces the number of small heap objects by a factor of 32.</p>
<p>Enough of theory, let’s try to examine a concrete usage. For the purpose of this blog I wrote a test program that is a scaled up version of my benchmark code.</p>

<p>We are adding 100 million integers, and the degree of the B-tree (number of items in a node) is 1k. There are two versions of this program: one uses generics, the other plain old interface. The difference in code is minimal, it’s literally changing <code>btree.New(degree)</code> to <code>btree.New[btree.Int](degree)</code> in line 13. Let’s compare data gathered by running both versions under `<code>/usr/bin/time -l -p</code>`.</p>
<table>
<tbody>
<tr>
<td></td>
<td>generics</td>
<td>interface</td>
<td>delta</td>
</tr>
<tr>
<td>real</td>
<td>11.49</td>
<td>16.59</td>
<td>-30.74%</td>
</tr>
<tr>
<td><span><strong>user</strong></span></td>
<td>11.27</td>
<td>18.61</td>
<td><span><strong>-39.44%</strong></span></td>
</tr>
<tr>
<td><span><strong>sys</strong></span></td>
<td>0.24</td>
<td>0.6</td>
<td><span><strong>-60.00%</strong></span></td>
</tr>
<tr>
<td><strong>maximum resident set size</strong></td>
<td><span>2334212096</span></td>
<td><span>6306217984</span></td>
<td><span><strong>-62.99%</strong></span></td>
</tr>
<tr>
<td>average shared memory size</td>
<td>0</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>average unshared data size</td>
<td>0</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>average unshared stack size</td>
<td>0</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>page reclaims</td>
<td><span>142624</span></td>
<td><span>385306</span></td>
<td>-62.98%</td>
</tr>
<tr>
<td>page faults</td>
<td>0</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>swaps</td>
<td>0</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>block input operations</td>
<td>0</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>block output operations</td>
<td>0</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>messages sent</td>
<td>0</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>messages received</td>
<td>0</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>signals received</td>
<td>600</td>
<td>843</td>
<td>-28.83%</td>
</tr>
<tr>
<td>voluntary context switches</td>
<td>25</td>
<td>48</td>
<td>-47.92%</td>
</tr>
<tr>
<td>involuntary context switches</td>
<td>1652</td>
<td>2943</td>
<td>-43.87%</td>
</tr>
<tr>
<td>instructions retired</td>
<td><span>204760684966</span></td>
<td><span>288827272312</span></td>
<td>-29.11%</td>
</tr>
<tr>
<td>cycles elapsed</td>
<td><span>37046278867</span></td>
<td><span>60503503105</span></td>
<td>-38.77%</td>
</tr>
<tr>
<td>peak memory footprint</td>
<td><span>2334151872</span></td>
<td><span>6308147904</span></td>
<td>-63.00%</td>
</tr>
<tr>
<td><span><strong>HeapObjects</strong></span></td>
<td><span>236884</span></td>
<td><span>50255826</span></td>
<td><span><strong>-99.53%</strong></span></td>
</tr>
<tr>
<td>HeapAlloc</td>
<td><span>2226292560</span></td>
<td><span>6043893088</span></td>
<td>-63.16%</td>
</tr>
</tbody>
</table>
<p>Here using generics solves a version of <em>N</em>+1 problem for slices of interfaces. Instead of one slice and <em>N</em> integers in heap we now can have just the slice of ints. The results are profound, the new code behaves better in every aspect. The wall time duration is down by 40%, context switches are down by 40%, system resources utilization is down by 60% — all thanks to a 99.53% reduction of small heap objects.</p>
<p>I’d like to conclude by taking a look at top CPU utilization.</p>
<p><code>go tool pprof -top cpu.pprof</code></p>
<table>
<tbody>
<tr>
<td>generics</td>
<td>interface</td>
</tr>
<tr>
<td><code><span>Type: cpu<br>
Time: Apr 5, 2022 at 10:23am (CEST)<br>
Duration: 11.61s, Total samples = 11.05s (95.18%)&lt;<br>
Showing nodes accounting for 10.77s, 97.47% of 11.05s total<br>
Dropped 52 nodes (cum &lt;= 0.06s)<br>
flat&nbsp; flat% &nbsp; sum%&nbsp; &nbsp; &nbsp; &nbsp; cum &nbsp; cum%<br>
4.96s 44.89% 44.89%&nbsp; &nbsp; &nbsp; 4.96s 44.89%&nbsp; runtime.madvise<br>
4.61s 41.72% 86.61%&nbsp; &nbsp; &nbsp; 4.61s 41.72%&nbsp; runtime.memclrNoHeapPointers<br>
0.64s&nbsp; 5.79% 92.40%&nbsp; &nbsp; &nbsp; 0.64s&nbsp; 5.79%&nbsp; github.com/google/btree.items[...].find.func1<br>
0.19s&nbsp; 1.72% 94.12%&nbsp; &nbsp; &nbsp; 0.83s&nbsp; 7.51%&nbsp; sort.Search<br>
0.08s&nbsp; 0.72% 94.84%&nbsp; &nbsp; &nbsp; 5.82s 52.67%&nbsp; github.com/google/btree..insert<br>
0.08s&nbsp; 0.72% 95.57%&nbsp; &nbsp; &nbsp; 0.08s&nbsp; 0.72%&nbsp; runtime.mmap<br>
0.07s&nbsp; 0.63% 96.20%&nbsp; &nbsp; &nbsp; 0.90s&nbsp; 8.14%&nbsp; github.com/google/btree.items[...].find<br>
0.05s&nbsp; 0.45% 96.65%&nbsp; &nbsp; &nbsp; 5.88s 53.21%&nbsp; github.com/google/btree..ReplaceOrInsert<br>
0.05s&nbsp; 0.45% 97.10%&nbsp; &nbsp; &nbsp; 4.19s 37.92%&nbsp; github.com/google/btree..insertAt (inline)<br>
0.04s&nbsp; 0.36% 97.47%&nbsp; &nbsp; &nbsp; 0.61s&nbsp; 5.52%&nbsp; github.com/google/btree..maybeSplitChild<br>
0 &nbsp; &nbsp; 0% 97.47%&nbsp; &nbsp; &nbsp; 0.57s&nbsp; 5.16%&nbsp; github.com/google/btree..split</span></code></td>
<td><code><span>Type: cpu<br>
Time: Apr 5, 2022 at 10:31am (CEST)<br>
Duration: 16.69s, Total samples = 18.65s (111.74%)<br>
Showing nodes accounting for 17.94s, 96.19% of 18.65s total<br>
Dropped 75 nodes (cum &lt;= 0.09s)<br>
flat&nbsp; flat% &nbsp; sum%&nbsp; &nbsp; &nbsp; &nbsp; cum &nbsp; cum%<br>
9.53s 51.10% 51.10%&nbsp; &nbsp; &nbsp; 9.53s 51.10%&nbsp; runtime.madvise<br>
2.62s 14.05% 65.15%&nbsp; &nbsp; &nbsp; 2.62s 14.05%&nbsp; runtime.memclrNoHeapPointers<br>
1.09s&nbsp; 5.84% 70.99%&nbsp; &nbsp; &nbsp; 1.31s&nbsp; 7.02%&nbsp; github.com/google/btree.items.find.func1<br>
0.93s&nbsp; 4.99% 75.98%&nbsp; &nbsp; &nbsp; 2.73s 14.64%&nbsp; runtime.scanobject<br>
0.67s&nbsp; 3.59% 79.57%&nbsp; &nbsp; &nbsp; 0.67s&nbsp; 3.59%&nbsp; runtime.heapBits.bits (inline)<br>
0.44s&nbsp; 2.36% 81.93%&nbsp; &nbsp; &nbsp; 1.75s&nbsp; 9.38%&nbsp; sort.Search<br>
0.30s&nbsp; 1.61% 83.54%&nbsp; &nbsp; &nbsp; 0.30s&nbsp; 1.61%&nbsp; runtime.markBits.isMarked (inline)<br>
0.27s&nbsp; 1.45% 84.99%&nbsp; &nbsp; &nbsp; 2.03s 10.88%&nbsp; github.com/google/btree.items.find<br>
0.27s&nbsp; 1.45% 86.43%&nbsp; &nbsp; &nbsp; 3.35s 17.96%&nbsp; runtime.mallocgc<br>
0.26s&nbsp; 1.39% 87.83%&nbsp; &nbsp; &nbsp; 0.26s&nbsp; 1.39%&nbsp; runtime.(*mspan).refillAllocCache<br>
0.25s&nbsp; 1.34% 89.17%&nbsp; &nbsp; &nbsp; 0.60s&nbsp; 3.22%&nbsp; runtime.greyobject<br>
0.24s&nbsp; 1.29% 90.46%&nbsp; &nbsp; &nbsp; 0.26s&nbsp; 1.39%&nbsp; runtime.heapBits.next (inline)<br>
0.23s&nbsp; 1.23% 91.69%&nbsp; &nbsp; &nbsp; 0.23s&nbsp; 1.23%&nbsp; github.com/google/btree.Int.Less<br>
0.20s&nbsp; 1.07% 92.76%&nbsp; &nbsp; &nbsp; 0.20s&nbsp; 1.07%&nbsp; runtime.memmove<br>
0.20s&nbsp; 1.07% 93.83%&nbsp; &nbsp; &nbsp; 0.20s&nbsp; 1.07%&nbsp; runtime.mmap<br>
0.15s &nbsp; 0.8% 94.64%&nbsp; &nbsp; &nbsp; 2.47s 13.24%&nbsp; github.com/google/btree.(*items).insertAt (inline)<br>
0.12s&nbsp; 0.64% 95.28%&nbsp; &nbsp; &nbsp; 0.27s&nbsp; 1.45%&nbsp; runtime.findObject<br>
0.08s&nbsp; 0.43% 95.71%&nbsp; &nbsp; &nbsp; 5.44s 29.17%&nbsp; github.com/google/btree.(*node).insert<br>
0.03s&nbsp; 0.16% 95.87%&nbsp; &nbsp; &nbsp; 5.48s 29.38%&nbsp; github.com/google/btree.(*BTree).ReplaceOrInsert<br>
0.02s&nbsp; 0.11% 95.98%&nbsp; &nbsp; &nbsp; 0.84s&nbsp; 4.50%&nbsp; github.com/google/btree.(*node).maybeSplitChild<br>
0.02s&nbsp; 0.11% 96.09%&nbsp; &nbsp; &nbsp; 0.45s&nbsp; 2.41%&nbsp; runtime.convT64<br>
0.01s 0.054% 96.14%&nbsp; &nbsp; &nbsp; 9.83s 52.71%&nbsp; runtime.(*mheap).allocSpan<br>
0.01s 0.054% 96.19%&nbsp; &nbsp; &nbsp; 2.82s 15.12%&nbsp; runtime.gcDrain<br>
0 &nbsp; &nbsp; 0% 96.19%&nbsp; &nbsp; &nbsp; 0.78s&nbsp; 4.18%&nbsp; github.com/google/btree.(*node).split</span></code></td>
</tr>
</tbody>
</table>
<p>You can literally see how messy the interface profile is, how gc starts kicking in killing it… It’s even more evident when we focus on gc.</p>
<p><code>go tool pprof -focus gc -top cpu.pprof</code></p>
<table>
<tbody>
<tr>
<td>generics</td>
<td>interface</td>
</tr>
<tr>
<td><code><span>Type: cpu<br>
Time: Apr 5, 2022 at 10:23am (CEST)<br>
Duration: 11.61s, Total samples = 11.05s (95.18%)<br>
Active filters:<br>
focus=gc<br>
Showing nodes accounting for 0.29s, 2.62% of 11.05s total<br>
flat&nbsp; flat% &nbsp; sum%&nbsp; &nbsp; &nbsp; &nbsp; cum &nbsp; cum%<br>
0.19s&nbsp; 1.72%&nbsp; 1.72%&nbsp; &nbsp; &nbsp; 0.19s&nbsp; 1.72%&nbsp; runtime.memclrNoHeapPointers<br>
0.02s&nbsp; 0.18%&nbsp; 1.90%&nbsp; &nbsp; &nbsp; 0.02s&nbsp; 0.18%&nbsp; runtime.(*mspan).refillAllocCache<br>
0.01s&nbsp; 0.09%&nbsp; 1.99%&nbsp; &nbsp; &nbsp; 0.02s&nbsp; 0.18%&nbsp; runtime.(*fixalloc).alloc<br>
0.01s&nbsp; 0.09%&nbsp; 2.08%&nbsp; &nbsp; &nbsp; 0.01s&nbsp; 0.09%&nbsp; runtime.(*mheap).allocNeedsZero<br>
0.01s&nbsp; 0.09%&nbsp; 2.17%&nbsp; &nbsp; &nbsp; 0.01s&nbsp; 0.09%&nbsp; runtime.(*mspan).init (inline)<br>
0.01s&nbsp; 0.09%&nbsp; 2.26%&nbsp; &nbsp; &nbsp; 0.01s&nbsp; 0.09%&nbsp; runtime.heapBits.bits (inline)<br>
0.01s&nbsp; 0.09%&nbsp; 2.35%&nbsp; &nbsp; &nbsp; 0.01s&nbsp; 0.09%&nbsp; runtime.markrootSpans<br>
0.01s&nbsp; 0.09%&nbsp; 2.44%&nbsp; &nbsp; &nbsp; 0.01s&nbsp; 0.09%&nbsp; runtime.recordspan<br>
0.01s&nbsp; 0.09%&nbsp; 2.53%&nbsp; &nbsp; &nbsp; 0.02s&nbsp; 0.18%&nbsp; runtime.scanobject<br>
0.01s&nbsp; 0.09%&nbsp; 2.62%&nbsp; &nbsp; &nbsp; 0.01s&nbsp; 0.09%&nbsp; runtime.stkbucket</span></code></td>
<td><code><span>Type: cpu<br>
Time: Apr 5, 2022 at 10:31am (CEST)<br>
Duration: 16.69s, Total samples = 18.65s (111.74%)<br>
Active filters:<br>
focus=gc<br>
Showing nodes accounting for 6.06s, 32.49% of 18.65s total<br>
Dropped 27 nodes (cum &lt;= 0.09s)<br>
flat&nbsp; flat% &nbsp; sum%&nbsp; &nbsp; &nbsp; &nbsp; cum &nbsp; cum%<br>
2.62s 14.05% 14.05%&nbsp; &nbsp; &nbsp; 2.62s 14.05%&nbsp; runtime.memclrNoHeapPointers<br>
0.93s&nbsp; 4.99% 19.03%&nbsp; &nbsp; &nbsp; 2.73s 14.64%&nbsp; runtime.scanobject<br>
0.67s&nbsp; 3.59% 22.63%&nbsp; &nbsp; &nbsp; 0.67s&nbsp; 3.59%&nbsp; runtime.heapBits.bits (inline)<br>
0.30s&nbsp; 1.61% 24.24%&nbsp; &nbsp; &nbsp; 0.30s&nbsp; 1.61%&nbsp; runtime.markBits.isMarked (inline)<br>
0.27s&nbsp; 1.45% 25.68%&nbsp; &nbsp; &nbsp; 3.35s 17.96%&nbsp; runtime.mallocgc<br>
0.26s&nbsp; 1.39% 27.08%&nbsp; &nbsp; &nbsp; 0.26s&nbsp; 1.39%&nbsp; runtime.(*mspan).refillAllocCache<br>
0.25s&nbsp; 1.34% 28.42%&nbsp; &nbsp; &nbsp; 0.60s&nbsp; 3.22%&nbsp; runtime.greyobject<br>
0.24s&nbsp; 1.29% 29.71%&nbsp; &nbsp; &nbsp; 0.26s&nbsp; 1.39%&nbsp; runtime.heapBits.next (inline)<br>
0.12s&nbsp; 0.64% 30.35%&nbsp; &nbsp; &nbsp; 0.27s&nbsp; 1.45%&nbsp; runtime.findObject<br>
0.08s&nbsp; 0.43% 30.78%&nbsp; &nbsp; &nbsp; 0.08s&nbsp; 0.43%&nbsp; runtime.spanOf (inline)<br>
0.06s&nbsp; 0.32% 31.10%&nbsp; &nbsp; &nbsp; 0.06s&nbsp; 0.32%&nbsp; runtime.(*mspan).base (inline)<br>
0.06s&nbsp; 0.32% 31.42%&nbsp; &nbsp; &nbsp; 0.06s&nbsp; 0.32%&nbsp; runtime.(*mspan).init (inline)<br>
0.06s&nbsp; 0.32% 31.74%&nbsp; &nbsp; &nbsp; 0.06s&nbsp; 0.32%&nbsp; runtime.heapBitsSetType<br>
0.04s&nbsp; 0.21% 31.96%&nbsp; &nbsp; &nbsp; 0.04s&nbsp; 0.21%&nbsp; runtime.(*mSpanStateBox).get (inline)<br>
0.04s&nbsp; 0.21% 32.17%&nbsp; &nbsp; &nbsp; 0.04s&nbsp; 0.21%&nbsp; runtime.pthread_kill<br>
0.04s&nbsp; 0.21% 32.39%&nbsp; &nbsp; &nbsp; 0.04s&nbsp; 0.21%&nbsp; runtime.usleep<br>
0.01s 0.054% 32.44%&nbsp; &nbsp; &nbsp; 0.10s&nbsp; 0.54%&nbsp; runtime.(*mheap).allocSpan<br>
0.01s 0.054% 32.49%&nbsp; &nbsp; &nbsp; 2.82s 15.12%&nbsp; runtime.gcDrain</span></code></td>
</tr>
</tbody>
</table>
<p>The generic version spent <strong>0.29s</strong> (<strong>2.62%</strong>) in GC while the interface version spent <strong>6.06s</strong> accounting for, hold your breath, <em><strong>32.49% of the total time!</strong></em></p>
<p><a href="https://www.scylladb.com/wp-content/uploads/image2-9.png"><img decoding="async" src="https://www.scylladb.com/wp-content/uploads/image2-9.png" alt="" width="800" height="242" srcset="https://www.scylladb.com/wp-content/uploads/image2-9.png 1999w, https://www.scylladb.com/wp-content/uploads/image2-9-300x91.png 300w, https://www.scylladb.com/wp-content/uploads/image2-9-1100x332.png 1100w, https://www.scylladb.com/wp-content/uploads/image2-9-768x232.png 768w, https://www.scylladb.com/wp-content/uploads/image2-9-1536x464.png 1536w" sizes="(max-width: 800px) 100vw, 800px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='242'%20viewBox='0%200%20800%20242'%3E%3C/svg%3E" data-src="https://www.scylladb.com/wp-content/uploads/image2-9.png" data-srcset="https://www.scylladb.com/wp-content/uploads/image2-9.png 1999w, https://www.scylladb.com/wp-content/uploads/image2-9-300x91.png 300w, https://www.scylladb.com/wp-content/uploads/image2-9-1100x332.png 1100w, https://www.scylladb.com/wp-content/uploads/image2-9-768x232.png 768w, https://www.scylladb.com/wp-content/uploads/image2-9-1536x464.png 1536w"></a><em>Generics: CPU profile flame focused on GC related function</em></p>

<p><a href="https://www.scylladb.com/wp-content/uploads/image3-5.png"><img decoding="async" src="https://www.scylladb.com/wp-content/uploads/image3-5.png" alt="" width="800" height="263" srcset="https://www.scylladb.com/wp-content/uploads/image3-5.png 1999w, https://www.scylladb.com/wp-content/uploads/image3-5-300x99.png 300w, https://www.scylladb.com/wp-content/uploads/image3-5-1100x362.png 1100w, https://www.scylladb.com/wp-content/uploads/image3-5-768x253.png 768w, https://www.scylladb.com/wp-content/uploads/image3-5-1536x506.png 1536w" sizes="(max-width: 800px) 100vw, 800px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='263'%20viewBox='0%200%20800%20263'%3E%3C/svg%3E" data-src="https://www.scylladb.com/wp-content/uploads/image3-5.png" data-srcset="https://www.scylladb.com/wp-content/uploads/image3-5.png 1999w, https://www.scylladb.com/wp-content/uploads/image3-5-300x99.png 300w, https://www.scylladb.com/wp-content/uploads/image3-5-1100x362.png 1100w, https://www.scylladb.com/wp-content/uploads/image3-5-768x253.png 768w, https://www.scylladb.com/wp-content/uploads/image3-5-1536x506.png 1536w"></a><em>Interface: CPU profile flame focused on GC related functions</em></p>
<h2>Conclusion</h2>
<p>By shifting the implementation from one using interfaces, to one using generics, we were able to significantly improve performance, minimize garbage collection time, and minimize CPU and other resource utilization, such as heap size. Particularly with heap size, we were able to reduce HeapObjects by <strong>99.53%</strong>.</p>
<p>The future of Go generics is bright especially in the domain of slices.</p>

<p><a href="https://resources.scylladb.com/scylladb-engineering" target="_blank" rel="noopener">EXPLORE MORE SCYLLADB ENGINEERING CONTENT</a></p>
<h2>Want to be a ScyllaDB Monster?</h2>
<p>We’re definitely proud of the work we do with the students at the University of Warsaw. Yet ScyllaDB is a growing company with a talented workforce drawn from all over the world. If you enjoy writing high performance generic Go code, <a href="https://www.scylladb.com/company/careers/co/engineering/B4.424/back-end-golang-team-leader/all/" target="_blank" rel="noopener">come join us</a>. Or if you specialize in other languages or talents, check out our full list of careers at ScyllaDB:</p>
<p><a href="https://www.scylladb.com/company/careers/" target="_blank" rel="noopener">CAREERS AT SCYLLADB</a></p>



                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A small community of unofficial Apple technicians in Cuba (153 pts)]]></title>
            <link>https://restofworld.org/2023/underground-apple-techs-cuba/</link>
            <guid>37577354</guid>
            <pubDate>Tue, 19 Sep 2023 21:52:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://restofworld.org/2023/underground-apple-techs-cuba/">https://restofworld.org/2023/underground-apple-techs-cuba/</a>, See on <a href="https://news.ycombinator.com/item?id=37577354">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				<!-- Article Start -->
				
<p>Months after Ángel García Padrón fixed a German journalist’s MacBook Pro in his small Havana repair shop, she sent him an email. García Padrón had mended her waterlogged laptop after her home in Cuba flooded, but when the journalist took it to an official Apple Store in Berlin, the authorized repair person had expressed disbelief, saying there was no trace of any water damage at all. “Then my Cuban repairman must be a magician,” she recounted telling the Apple worker. García Padrón is used to conjuring these sorts of tricks on a daily basis — the skills required to deal with Apple products in Cuba require a special sort of magic.</p>



<p>Even though prohibition limiting the exportation, re-exportation, sale, and supply of Apple products to Cuba was <a href="https://www.bis.doc.gov/index.php/documents/pdfs/2796-20210811-fact-sheet-supporting-the-cuban-people-s-right-to-seek-receive-and-impart-information-through-safe-and-secure-access-to-the-internet/file">eased in 2015</a>, getting a hold of, operating, and maintaining them can still be a challenge. This is in part because basic replacement parts are difficult to import, since they cannot be purchased directly from Apple. It’s not just hardware, either: Downloading apps or software updates is tricky because Cuban IP addresses are blocked. And setting up a new Apple ID with two-factor verification requires a phone number from outside Cuba.</p>



<p>García Padrón is part of an exclusive circle of Apple enthusiasts who are defying Cuba’s constraints to create profitable repair businesses. In little more than a decade, these Cuban Apple technicians have evolved from casual tinkerers to a small yet thriving community of celebrity repairers, respected by locals and foreigners alike.</p>



<p>The absence of official Apple stores and product resellers in Cuba has fostered a community-driven ecosystem that relies on unofficial suppliers and a transnational network of individuals who can travel abroad to buy hardware replacement parts. Technicians told <em>Rest of World</em> there are only a handful of Apple repair shops in Cuba, mostly clustered in Havana; it’s difficult to pinpoint the exact number as there are no official statistics.</p>



<p>Orlando Gutiérrez is one Cuban trailblazer who opened Meca Móvil, his own iPhone repair shop in Havana’s Vedado neighborhood. Finding an Android repairperson, he told <em>Rest of World</em>, is easy enough. “You might even find a few on a single block,” he said. “But a Mac technician is the holy grail.”</p>



<p>From the moment Meca Móvil officially opened its doors in 2011, Gutiérrez began to service the phones of Cuba’s elite creative class and local celebrities — the type of people who had the means to travel abroad and buy an Apple device back then. One of his loyal customers was the reggaeton singer Yosdani Jacob Carmenates, or Jacob Forever, known for his chart-topping track <em>La Gozadera</em>. Gutiérrez said the singer bought an iPhone during a visit to Miami, but then found that he was completely unable to use it upon his return to Havana. He couldn’t install apps or update his phone’s software — until he visited Meca Móvil.&nbsp;</p>



<p>These cases are the easiest to fix, said Gutiérrez. The first step is to install a virtual private network (VPN) to disguise the device’s presence in Cuba. For VIP customers like Jacob Forever, Meca Móvil’s Apple troubleshooters would also install a bundle of commonly used apps. Back when he first started out, before 3G connectivity was widely available, Gutiérrez vividly remembers clients asking for apps like the offline version of Wikipedia (which he described as “Cuban Google”). Though times have changed — clients now ask for Duolingo, online banking app Banca Remota, or streaming platforms like Netflix — this service remains much the same. Though Meca Móvil shut down in 2015, Gutiérrez is now an <a href="https://www.youtube.com/@CubaGeek">Apple-specialized YouTuber</a>.</p>



<p>This arrangement proved particularly valuable during a time when <a href="https://restofworld.org/2020/the-life-and-death-of-snet-havanas-alternative-internet/">public internet access points in Cuba were scarce</a> and unaffordable for most people. Some Apple technicians discovered a workaround by securing state jobs that guaranteed internet connectivity, allowing them to regularly download apps and software they would later install in customers’ devices. Despite the Cuban peso’s devaluation over the past several years, the cost of installing an app package has consistently stayed within the range of $1–$5.&nbsp;</p>



<p>Now, as Cubans have gained <a href="https://restofworld.org/2023/cuba-e-commerce-boom/">greater access to tech from abroad</a>, services like creating Apple IDs and removing carrier locks on iPhones are still in demand — for which local technicians have developed their own creative strategies. To create an Apple ID, without which many of the phone’s functions won’t work, repair people must provide a foreign phone number to pass the two-factor authentication process. To accomplish this, they use free websites like TextNow, which offer users unlimited SMS messages and calls from outside of Cuba.</p>



<figure><blockquote><p>“There’s a magic in fixing what others would have otherwise discarded.”</p></blockquote></figure>



<p>Many Cubans will often ask repair people like García Padrón to install Windows on their Apple laptops. While MacBooks have become a status symbol across Havana’s universities and creative industries, many still prefer the Windows operating system as it’s easier to use in Cuba.&nbsp;</p>



<p>Users with iPhones from U.S. cellphone carriers like AT&amp;T, Verizon, or T-Mobile need a technician to remove the lock tying the device to its carrier so it can be used with a Cuban SIM card. Technicians also offer recurring services, such as periodically updating devices, which allows them to develop a sustainable business model and loyal customer base.</p>



<p>These Apple repair shops thrived after 2011, when an economic reform authorized <a href="https://www.reuters.com/article/latinoamerica-cuba-reforma-trabajo-idLTASIE7060I020110107">75,000 licenses</a> for entrepreneurs to establish small businesses, ranging from rental homes to electronic repair. However, while the licenses granted legality to the technicians’ economic activity, limitations persist regarding their capacity to import equipment and replacement parts from abroad.</p>



<p>In April, <a href="https://www.facebook.com/michel.alvarezmorales/posts/10228678629012525?ref=embed_post">Michel Álvarez Morales expressed his frustration on Facebook</a> after a Hanchen LCD screen separator machine — commonly used to repair smartphones — was confiscated by Cuban Customs because the technician did not have an import permit. Technicians responded to the post, complaining<strong> </strong>about the difficulties they face in procuring simple tools like screwdrivers, microscopes, or welding machines.&nbsp;</p>



<p>During the pandemic, when there was a limited number of flights to Cuba, 23-year-old Chris Gámez Ruiz needed to fix his MacBook Air’s keyboard. The Havana resident had purchased the laptop via Facebook for about 12,000 Cuban pesos (around $100 at the time). While he wasn’t drawn to the laptop’s design, he bought it as a “status symbol,” he told <em>Rest of World</em>, despite the fact that its keyboard was already broken when he bought it.</p>



<p>Gámez Ruiz hired one of Cuba’s most sought-after MacBook technicians: Raiko Israel Pupo Hondal, the founder of Railab, an Apple repair shop in the Reparto Kohly neighborhood of Havana. A year after graduating with a degree in telecommunications, Pupo Hondal began working at a laptop repair shop, where he discovered the unique satisfaction of tackling challenging Mac-related issues that left other technicians stumped.&nbsp;</p>



<p>Pupo Hondal first tried to order a replacement keyboard from abroad, but was unsuccessful. He then decided to replace it with another old keyboard that “only” had four broken keys. Gámez Ruiz was happy enough with the repair and paid Pupo Hondal with a broken iMac. After all its useful pieces were extracted, the iMac was displayed as a decorative piece in Railab, alongside a collection of other old and gutted Mac computers that have been recycled over a span of six years.&nbsp;</p>



<p>“We Cubans are used to doing more with less,” Pupo Hondal told <em>Rest of World.</em> “Each Mac we successfully fix is a Mac we rescue from being discarded as waste — and even those we can’t fix, find new purpose in saving others. There’s a magic in fixing what others would have otherwise discarded.”</p>
				<!-- Article End -->
							</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Can’t send email more than 500 miles (2002) (1028 pts)]]></title>
            <link>https://web.mit.edu/jemorris/humor/500-miles</link>
            <guid>37576633</guid>
            <pubDate>Tue, 19 Sep 2023 21:05:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://web.mit.edu/jemorris/humor/500-miles">https://web.mit.edu/jemorris/humor/500-miles</a>, See on <a href="https://news.ycombinator.com/item?id=37576633">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Circles do not exist (218 pts)]]></title>
            <link>https://nibblestew.blogspot.com/2023/09/circles-do-not-exist.html</link>
            <guid>37575377</guid>
            <pubDate>Tue, 19 Sep 2023 19:44:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nibblestew.blogspot.com/2023/09/circles-do-not-exist.html">https://nibblestew.blogspot.com/2023/09/circles-do-not-exist.html</a>, See on <a href="https://news.ycombinator.com/item?id=37575377">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-2030671212258670084" itemprop="description articleBody">
<p>Many logos, drawings and other graphical designs have the following shape in it. What is this shape?</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEirw6WF631CmHkv7yX15C3MF1b0YEFcHzr5ke9rgHDDV-uf7ZTmg1GL5tkjWUkmEjUK4OsqYAIyEBW7LJVRiMGmdDsNLN9ISYLkAgTqtAj0eC1pn5BF92sI3fQ8DQznCUFqx_qHyCCfH7MmnKOu920az663tzYZW0rz_WPSXlTqEmbhNRijddjOjcQUpIo/s360/circle.png"><img data-original-height="360" data-original-width="360" height="320" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEirw6WF631CmHkv7yX15C3MF1b0YEFcHzr5ke9rgHDDV-uf7ZTmg1GL5tkjWUkmEjUK4OsqYAIyEBW7LJVRiMGmdDsNLN9ISYLkAgTqtAj0eC1pn5BF92sI3fQ8DQznCUFqx_qHyCCfH7MmnKOu920az663tzYZW0rz_WPSXlTqEmbhNRijddjOjcQUpIo/s320/circle.png" width="320"></a></p><p>If you thought: "Ah-ha! I'm smart and read the title of this blog post so I know that this is most definitely not a circle."</p><p>Well it is. Specifically it is a raster image of a circle that I created with the Gimp just for this use.</p><p>However almost every "circle" you can see in printed media (and most purely digital ones) are not, in fact, circles. Why is this?</p><p>Since roughly the mid 80s all "high quality" print jobs have been done either in PostScript or, nowadays almost exclusively, in PDF. They use the same basic drawing model, which does not have a primitive for circles (or circle arcs). The only primitives they have are straight line segments, rectangles and Bézier curves. None of these can be used to express a circle accurately. You can only do an approximation of a circle but it is always slightly eccentric. The only way to create a proper circle is to have a raster image like the one above.</p><h2>Does this matter in the real world?</h2><p>For printing probably not. Almost nobody can tell the difference between a real circle and one that has been approximated with a Bézier curve with just four points. Furthermore, the human vision system is a bit weird and perfect circles look vertically elongated. You have to make them non-circular for people to consider them properly circular.</p><p>But suppose you want to use one of these things:</p><p><a href="https://api.hel.fi/respa/resource_image/797?dim=700x420"><img data-original-height="420" data-original-width="700" height="192" src="https://api.hel.fi/respa/resource_image/797?dim=700x420" width="320"></a></p><p>This is a laser cutter that takes its "print jobs" as a PDF file and uses its vector drawing commands to drive the cutting head. This means that it is impossible to use it to print a wheel. You'd need to attach the output to a lathe and sand it down to be round so it actually functions as a wheel rather than as a vibration source.</p><p>Again one might ask whether this has any practical impact. For this case, again, probably not. But did you know that one of the cases PDF is being considered (and, based on Internet rumors, is already being used) is as an interchange format for CAD drawings? Now it suddenly starts mattering. If you have any component where getting a really accurate circle shape is vital (like pistons and their holes), suddenly all your components are slightly misshaped. Which would not be fun.</p><h2>Extra bonus information</h2><p>Even though it is impossible to construct a path that is perfectly circular, PDF does provide a way to draw a filled circle. Here is the relevant snippet from the PDF 2.0 spec, subsection 8.5.3.2:</p><blockquote><p>If a subpath is degenerate (consists of a single-point closed path or of two or more points at the same coordinates), the S operator shall paint it only if round line caps have been specified, producing a filled circle centred at the single point.</p></blockquote><p>Who is willing to put money on the line that every PDF rendering implementation actually uses circles rather than doing the simple thing of approximating it with Béziers?</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Simple Open-Source Java Virtual Machine in C (101 pts)]]></title>
            <link>https://github.com/phillbush/jvm</link>
            <guid>37575227</guid>
            <pubDate>Tue, 19 Sep 2023 19:36:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/phillbush/jvm">https://github.com/phillbush/jvm</a>, See on <a href="https://news.ycombinator.com/item?id=37575227">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content"><pre>                                  jvm

This is the implementation of a simple Java Virtual Machine.  This is
the final project of the first semester of 2021 of the System Software
course of the Computer Science department of the University of Brasilia.

The following tools are implemented:
• javap(1): Disassembles one or more class files.
• java(1):  Launches a Java application.


§ Files

• util.[ch]:    miscellaneous routines
• class.[ch]:   routines and definitions related to class structure
• native.[ch]:  routines and definitions related to native code
• memory.[ch]:  routines and definitions related to JRE memory
• file.[ch]:    routines to read and free .class files
• javap.c:      .class file disassembler
• java.c:       .class file interpreter
• tests/*:      collection of simple .java files for testing the jvm


§ Running

To build the jvm, run the following command.  This will create the
executable file ./java for the jvm.

	make java

To build the disassembler, run the following command.  This will create
the executable file ./javap for the disassembler.

	make javap

To test the disassembler, run make on one of the test files with its
suffix replaced with "p".  For example, to test the disassembler on
the test class tests/HelloWorld.class, run the following command.

	make tests/HelloWorld.p

To test the disassembler on all test classes, run the following command.

	make testp

To test the jvm, run make on one of the test files with its suffix
replaced with "j".  For example, to test the jvm on the test class
tests/HelloWorld.class, run the following command.

	make tests/HelloWorld.j

To test the jvm on all test classes, run the following command.

	make testj


§ See Also

The Java® Virtual Machine Specification: Java SE 8Edition,
by Tim Lindholm, Frank Yellin, Gilad Bracha, Alex Buckley,
Addison-Wesley, 2014.
ISBN: 978-0-13-390590-8.
<a href="https://docs.oracle.com/javase/specs/jvms/se8/html/" rel="nofollow">https://docs.oracle.com/javase/specs/jvms/se8/html/</a>
</pre></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fixing for loops in Go 1.22 (547 pts)]]></title>
            <link>https://go.dev/blog/loopvar-preview</link>
            <guid>37575204</guid>
            <pubDate>Tue, 19 Sep 2023 19:34:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://go.dev/blog/loopvar-preview">https://go.dev/blog/loopvar-preview</a>, See on <a href="https://news.ycombinator.com/item?id=37575204">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-slug="/blog/loopvar-preview">
    
    <h2><a href="https://go.dev/blog/">The Go Blog</a></h2>
    

    
      
      
      
      <p>Go 1.21 includes a preview of a change to <code>for</code> loop scoping
that we plan to ship in Go 1.22,
removing one the most common Go mistakes.</p>
<h2 id="the-problem">The Problem</h2>
<p>If you’ve written any amount of Go code, you’ve probably made the mistake
of keeping a reference to a loop variable past the end of its iteration,
at which point it takes on a new value that you didn’t want.
For example, consider this program:</p>
<pre><code>func main() {
    done := make(chan bool)

    values := []string{"a", "b", "c"}
    for _, v := range values {
        go func() {
            fmt.Println(v)
            done &lt;- true
        }()
    }

    // wait for all goroutines to complete before exiting
    for _ = range values {
        &lt;-done
    }
}
</code></pre>
<p>The three created goroutines are all printing the same variable <code>v</code>,
so they usually print “c”, “c”, “c”, instead of printing “a”, “b”, and “c” in some order.</p>
<p>The <a href="https://go.dev/doc/faq#closures_and_goroutines" rel="noreferrer" target="_blank">Go FAQ entry “What happens with closures running as goroutines?”</a>,
gives this example and remarks
“Some confusion may arise when using closures with concurrency.”</p>
<p>Although concurrency is often involved, it need not be.
This example has the same problem but no goroutines:</p>
<pre><code>func main() {
    var prints []func()
    for i := 1; i &lt;= 3; i++ {
        prints = append(prints, func() { fmt.Println(i) })
    }
    for _, print := range prints {
        print()
    }
}
</code></pre>
<p>This kind of mistake has caused production problems at many companies,
including a
<a href="https://go.googlesource.com/proposal/+/master/design/60078-loopvar.md" rel="noreferrer" target="_blank">publicly documented issue at Lets Encrypt</a>.
In that instance, the accidental capture of the loop variable was spread across
multiple functions and much more difficult to notice:</p>
<pre><code>// authz2ModelMapToPB converts a mapping of domain name to authz2Models into a
// protobuf authorizations map
func authz2ModelMapToPB(m map[string]authz2Model) (*sapb.Authorizations, error) {
    resp := &amp;sapb.Authorizations{}
    for k, v := range m {
        // Make a copy of k because it will be reassigned with each loop.
        kCopy := k
        authzPB, err := modelToAuthzPB(&amp;v)
        if err != nil {
            return nil, err
        }
        resp.Authz = append(resp.Authz, &amp;sapb.Authorizations_MapElement{
            Domain: &amp;kCopy,
            Authz: authzPB,
        })
    }
    return resp, nil
}
</code></pre>
<p>The author of this code clearly understood the general problem, because they made a copy of <code>k</code>,
but it turns out <code>modelToAuthzPB</code> used pointers to fields in <code>v</code> when constructing its result,
so the loop also needed to make a copy of <code>v</code>.</p>
<p>Tools have been written to identify these mistakes, but it is hard to analyze
whether references to a variable outlive its iteration or not.
These tools must choose between false negatives and false positives.
The <code>loopclosure</code> analyzer used by <code>go vet</code> and <code>gopls</code> opts for false negatives,
only reporting when it is sure there is a problem but missing others.
Other checkers opt for false positives, accusing correct code of being incorrect.
We ran an analysis of commits adding <code>x := x</code> lines in open-source Go code,
expecting to find bug fixes.
Instead we found many unnecessary lines being added,
suggesting instead that popular checkers have significant false positive rates,
but developers add the lines anyway to keep the checkers happy.</p>
<p>One pair of examples we found was particularly illuminating:</p>
<p>This diff was in one program:</p>
<pre><code>     for _, informer := range c.informerMap {
+        informer := informer
         go informer.Run(stopCh)
     }
</code></pre>
<p>And this diff was in another program:</p>
<pre><code>     for _, a := range alarms {
+        a := a
         go a.Monitor(b)
     }
</code></pre>
<p>One of these two diffs is a bug fix; the other is an unnecessary change.
You can’t tell which is which unless you know more about the types
and functions involved.</p>
<h2 id="the-fix">The Fix</h2>
<p>For Go 1.22, we plan to change <code>for</code> loops to make these variables have
per-iteration scope instead of per-loop scope.
This change will fix the examples above, so that they are no longer buggy Go programs;
it will end the production problems caused by such mistakes;
and it will remove the need for imprecise tools that prompt users
to make unnecessary changes to their code.</p>
<p>To ensure backwards compatibility with existing code, the new semantics
will only apply in packages contained in modules that declare <code>go 1.22</code> or
later in their <code>go.mod</code> files.
This per-module decision provides developer control of a gradual update
to the new semantics throughout a codebase.
It is also possible to use <code>//go:build</code> lines to control the decision on a
per-file basis.</p>
<p>Old code will continue to mean exactly what it means today:
the fix only applies to new or updated code.
This will give developers control over when the semantics change
in a particular package.
As a consequence of our <a href="https://go.dev/blog/toolchain">forward compatibility work</a>,
Go 1.21 will not attempt to compile code that declares <code>go 1.22</code> or later.
We included a special case with the same effect in
the point releases Go 1.20.8 and Go 1.19.13,
so when Go 1.22 is released,
code written depending on the new semantics will never be compiled with
the old semantics, unless people are using very old, unsupported Go versions](/doc/devel/release#policy).</p>
<h2 id="previewing-the-fix">Previewing The Fix</h2>
<p>Go 1.21 includes a preview of the scoping change.
If you compile your code with <code>GOEXPERIMENT=loopvar</code> set in your environment,
then the new semantics are applied to all loops
(ignoring the <code>go.mod</code> <code>go</code> lines).
For example, to check whether your tests still pass with the new loop semantics
applied to your package and all your dependencies:</p>
<pre><code>GOEXPERIMENT=loopvar go test
</code></pre>
<p>We patched our internal Go toolchain at Google to force this mode during all builds
at the start of May 2023, and in the past four months
we have had zero reports of any problems in production code.</p>
<p>You can also try test programs to better understand the semantics
on the Go playground by including a <code>// GOEXPERIMENT=loopvar</code> comment
at the top of the program, like in <a href="https://go.dev/play/p/YchKkkA1ETH" rel="noreferrer" target="_blank">this program</a>.
(This comment only applies in the Go playground.)</p>
<h2 id="fixing-buggy-tests">Fixing Buggy Tests</h2>
<p>Although we’ve had no production problems,
to prepare for that switch, we did have to correct many buggy tests that were not
testing what they thought they were, like this:</p>
<pre><code>func TestAllEvenBuggy(t *testing.T) {
    testCases := []int{1, 2, 4, 6}
    for _, v := range testCases {
        t.Run("sub", func(t *testing.T) {
            t.Parallel()
            if v&amp;1 != 0 {
                t.Fatal("odd v", v)
            }
        })
    }
}
</code></pre>
<p>In Go 1.21, this test passes because <code>t.Parallel</code> blocks each subtest
until the entire loop has finished and then runs all the subtests
in parallel. When the loop has finished, <code>v</code> is always 6,
so the subtests all check that 6 is even,
so the test passes.
Of course, this test really should fail, because 1 is not even.
Fixing for loops exposes this kind of buggy test.</p>
<p>To help prepare for this kind of discovery, we improved the precision
of the <code>loopclosure</code> analyzer in Go 1.21 so that it can identify and
report this problem.
You can see the report <a href="https://go.dev/play/p/WkJkgXRXg0m" rel="noreferrer" target="_blank">in this program</a> on the Go playground.
If <code>go vet</code> is reporting this kind of problem in your own tests,
fixing them will prepare you better for Go 1.22.</p>
<p>If you run into other problems,
<a href="https://github.com/golang/go/wiki/LoopvarExperiment#my-test-fails-with-the-change-how-can-i-debug-it" rel="noreferrer" target="_blank">the FAQ</a>
has links to examples and details about using a tool we’ve written to identify
which specific loop is causing a test failure when the new semantics are applied.</p>
<h2 id="more-information">More Information</h2>
<p>For more information about the change, see the
<a href="https://go.googlesource.com/proposal/+/master/design/60078-loopvar.md" rel="noreferrer" target="_blank">design document</a>
and the
<a href="https://go.dev/wiki/LoopvarExperiment" rel="noreferrer" target="_blank">FAQ</a>.</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[RabbitMQ vs. Kafka – An Architect’s Dilemma (Part 1) (244 pts)]]></title>
            <link>https://eranstiller.com/rabbitmq-vs-kafka-an-architects-dilemma-part-1</link>
            <guid>37574552</guid>
            <pubDate>Tue, 19 Sep 2023 18:54:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eranstiller.com/rabbitmq-vs-kafka-an-architects-dilemma-part-1">https://eranstiller.com/rabbitmq-vs-kafka-an-architects-dilemma-part-1</a>, See on <a href="https://news.ycombinator.com/item?id=37574552">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	


<h2>Introduction</h2>



<p>As a software architect dealing with a lot of Microservices based systems, I often encounter the ever-repeating question – “should I use RabbitMQ or Kafka?”. For some reason, many developers view these technologies as interchangeable. While this is true for some cases, there are various underlying differences between these platforms. As a result, different scenarios require a different solution and choosing the wrong one might severely impact your ability to design, develop, and maintain your software solution.</p>



<p>The goal of this blog post is first to introduce the basic asynchronous messaging patterns. Then, it continues to present both RabbitMQ and Kafka and their internal structure. <a href="https://eranstiller.com/rabbitmq-vs-kafka-an-architects-dilemma-part-2">Part 2</a> highlights the critical differences between these platforms, their various advantages and disadvantages, and how to choose between the two.</p>



<h2>Asynchronous Messaging Patterns</h2>



<p>Asynchronous messaging is a messaging scheme where message production by a producer is decoupled from its processing by a consumer.  When dealing with messaging systems, we typically identify two main messaging patterns – Message Queuing and Publish/Subscribe.</p>



<h3>Message Queueing</h3>



<p>In the Message Queuing communication pattern, queues temporally decouple producers from consumers. Multiple producers can send messages to the same queue; however, when a consumer processes a message, it is locked or removed from the queue and is no longer available. Only a single consumer consumes a specific message.</p>


<div>
<figure><img decoding="async" width="642" height="241" src="https://eranstiller.com/wp-content/uploads/2020/02/RabbitMQ-vs-Kafka-Message-Queuing.svg" alt="An illustration of message queue as a transport between producers and consumers"><figcaption>Message Queuing</figcaption></figure></div>


<p>As a side note, if the consumer fails to process a certain message, the messaging platform typically returns the message to the queue where it is made available for other consumers. Besides temporal decoupling, queues allow us to scale producers and consumers independently as well as providing a degree of fault-tolerance against processing errors.</p>



<h3>Publish/Subscribe</h3>



<p>In the Publish/Subscribe (or Pub/Sub) communication pattern, a single message can be received and processed by multiple subscribers concurrently.</p>


<div>
<figure><img decoding="async" width="675" height="369" src="https://eranstiller.com/wp-content/uploads/2020/02/RabbitMQ-vs-Kafka-PubSub.svg" alt="An illustration of a pub/sub message exchange"><figcaption>Publish/Subscribe</figcaption></figure></div>


<p>This pattern allows a publisher, for example, to notify all subscribers that something has happened in the system. Many queueing platforms often associate pub/sub with the term&nbsp;<strong>topics</strong>. In RabbitMQ, topics are a specific type of pub/sub implementation (a type of exchange to be exact), but during this post, I refer to topics as a representation of pub/sub as a whole.</p>



<p>Generically speaking, there are two types of subscriptions:</p>



<ol>
<li><strong>An ephemeral subscription</strong>, where the subscription is only active as long the consumer is up and running. Once the consumer shuts down, its subscription and yet-to-be processed messages are lost.</li>



<li><strong>A durable subscription</strong>, where the subscription is maintained as long as it is not explicitly deleted. When the consumer shuts down, the messaging platform maintains the subscription and message processing can be resumed later.</li>
</ol>



<h3>RabbitMQ</h3>



<p><a target="_blank" href="https://www.rabbitmq.com/" rel="noreferrer noopener">RabbitMQ</a>&nbsp;is an implementation of a&nbsp;<strong>Message Broker</strong>, and as is also often referred to as a&nbsp;<strong>Service Bus</strong>. It natively supports both messaging patterns described above. Other popular implementations of message brokers include&nbsp;<a target="_blank" href="https://activemq.apache.org/" rel="noreferrer noopener">ActiveMQ</a>,&nbsp;<a target="_blank" href="https://zeromq.org/" rel="noreferrer noopener">ZeroMQ</a>,&nbsp;<a target="_blank" href="https://azure.microsoft.com/en-us/services/service-bus/" rel="noreferrer noopener">Azure Service Bus</a>, and&nbsp;<a target="_blank" href="https://aws.amazon.com/sqs/" rel="noreferrer noopener">Amazon Simple Queue Service (SQS)</a>. All of these implementations have a lot in common; many concepts described in this post apply to most of them.</p>



<h3>Queues</h3>



<p>RabbitMQ supports classic message queuing out of the box. A developer defines named queues, and then publishers can send messages to that named queue. Consumers, in turn, use the same queue to retrieve messages to process them.</p>



<h3>Message Exchanges</h3>



<p>RabbitMQ implements Pub/Sub via the use of message exchanges. A publisher publishes its messages to a message exchange without knowing who are the subscribers of these messages. Each consumer wishing to subscribe to an exchange creates its queue; the message exchange then queues produced messages for consumers to consume. It can also filter messages for some subscribers based on various routing rules.</p>


<div>
<figure><img decoding="async" loading="lazy" width="675" height="369" src="https://eranstiller.com/wp-content/uploads/2020/02/RabbitMQ-vs-Kafka-RabbitMQ-Message-Exchange.svg" alt="An illustration of a RabbitMQ Message Exchange"><figcaption>RabbitMQ Message Exchange</figcaption></figure></div>


<p>It is important to note that RabbitMQ supports both ephemeral and durable subscriptions. A consumer can decide the type of subscription they’d like to employ via RabbitMQ’s API.</p>



<p>Due to RabbitMQ’s architecture, we can also create a hybrid approach where some subscribers form&nbsp;<strong>consumer groups</strong>&nbsp;who work together processing messages in the form of competing consumers over a specific queue. In this manner, we implement the pub/sub pattern while also allowing some subscribers to scale-up to handle received messages.</p>


<div>
<figure><img decoding="async" loading="lazy" width="679" height="369" src="https://eranstiller.com/wp-content/uploads/2020/02/RabbitMQ-vs-Kafka-RabbitMQ-Consumer-Groups.svg" alt="An illustration of RabbitMQ fanout topology with routing and consumer groups"><figcaption>Pub/Sub &amp; Queuing Combined</figcaption></figure></div>


<h2>Apache Kafka</h2>



<p><a target="_blank" href="https://kafka.apache.org/" rel="noreferrer noopener">Apache Kafka</a>&nbsp;is&nbsp;<em>not&nbsp;</em>an implementation of a message broker. Instead, it is a&nbsp;<strong>distributed streaming platform</strong>. Unlike RabbitMQ, which is based on queues and exchanges, Kafka’s storage layer is implemented using a partitioned transaction log. Kafka also provides a Streams API to process streams in real-time and a Connectors API for easy integration with various data sources, however, these are out of scope for this post.&nbsp;</p>



<p>The Cloud Vendors provide alternative solutions for Kafka’s storage layer. These solutions include&nbsp;<a target="_blank" href="https://azure.microsoft.com/en-us/services/event-hubs/" rel="noreferrer noopener">Azure Event Hubs</a>, and to some extent,&nbsp;<a target="_blank" href="https://aws.amazon.com/kinesis/data-streams/" rel="noreferrer noopener">AWS Kinesis Data Streams</a>. There are also cloud-specific and open source alternatives to Kafka’s stream processing capabilities, but again, these are out of scope for this post.</p>



<h3>Topics</h3>



<p>Kafka does not implement the notion of a queue. Instead, Kafka stores collections of records in categories called topics. For each topic, Kafka maintains a partitioned log of messages. Each partition is an ordered, immutable sequence of records where messages are continually appended. Kafka appends messages to these partitions as they arrive. By default, it uses a round-robin partitioner to spread messages uniformly across partitions. Producers can modify this behavior to create logical streams of messages. For example, in a multitenant application, we might want to create logical message streams according to every message’s tenant Id. In an IoT scenario, we might want to have each producer’s identity map to a specific partition constantly. Making sure that all messages from the same logical stream map to the same partition guarantees their delivery in-order to consumers.</p>


<div>
<figure><img decoding="async" loading="lazy" width="571" height="396" src="https://eranstiller.com/wp-content/uploads/2020/02/RabbitMQ-vs-Kafka-Kafka-Producers.svg" alt="An illustration of producers for a Kafka topic and its inner structure"><figcaption>Kafka Producers</figcaption></figure></div>


<p>Consumers consume messages by maintaining an offset (or index) to these partitions and reading them sequentially. A single consumer can consume multiple topics, and consumers can scale-up to the number of partitions available. As a result, when creating a topic, one should carefully consider the expected throughput of messaging on that topic. A group of consumers working together to consume a topic is called a&nbsp;<strong>consumer group</strong>. Kafka’s API typically handles the balancing of partition processing between consumers in a consumer group and storing consumers’ current partition offsets.</p>


<div>
<figure><img decoding="async" loading="lazy" width="562" height="330" src="https://eranstiller.com/wp-content/uploads/2020/02/RabbitMQ-vs-Kafka-Kafka-Consumers.svg" alt="An illustration of consumer groups for a Kafka topic and its inner structure"><figcaption>Kafka Consumers</figcaption></figure></div>


<h3>Implementing Messaging Patterns with Kafka</h3>



<p>Kafka’s implementation maps quite well to the pub/sub pattern. A producer can send messages to a specific topic, and multiple consumer groups can consume the same message. Each consumer group can scale individually to handle the load. Since consumers maintain their partition offset, they can choose to have a durable subscription that maintains its offset across restarts or an ephemeral subscription, which throws the offset away and restarts from the latest record in each partition every time it starts up.&nbsp;However, it is a less than perfect fit for the message queuing pattern. Of course, we could have a topic with just a single consumer group to emulate classic message queuing. Nevertheless, this has multiple drawbacks that <a href="https://eranstiller.com/rabbitmq-vs-kafka-an-architects-dilemma-part-2">part 2</a> of this post discusses at length.</p>



<p>It is important to note that Kafka retains messages in partitions up to a preconfigured period, regardless of whether consumers consumed these messages. This retention means that consumers are free to reread past messages. Furthermore, developers can also use Kafka’s storage layer for implementing mechanisms such as Event Sourcing and Audit Logs.</p>



<h2>Closing Words</h2>



<p>While RabbitMQ and Kafka are sometimes interchangeable, their implementations are very different from each other. As a result, we cannot view them as members of the same category of tools; one is a message broker, and the other is a distributed streaming platform. As solution architects, we should acknowledge these differences and actively consider which of these types of solutions we should use for a given scenario. <a href="https://eranstiller.com/rabbitmq-vs-kafka-an-architects-dilemma-part-2">Part 2</a> addresses these differences and provides guidance on when to use each.</p>



<h2>Further Reading</h2>



<p>If you’d like to read more regarding the internal implementation of RabbitMQ and Kafka, I recommend the following resources:</p>



<ul>
<li><a rel="noreferrer noopener" target="_blank" href="https://www.rabbitmq.com/tutorials/amqp-concepts.html">AMQP 0.9.1 Model Explained – RabbitMQ</a></li>



<li><a rel="noreferrer noopener" target="_blank" href="https://kafka.apache.org/intro">Introduction to Apache Kafka</a></li>
</ul>



<hr>



<p><sub><i>Featured Image – Photo by&nbsp;<a rel="noreferrer noopener" href="https://unsplash.com/@jluebke?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank">Justin Luebke</a>&nbsp;on&nbsp;<a rel="noreferrer noopener" href="https://unsplash.com/s/photos/justin-luebke-coat?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank">Unsplash</a> </i></sub></p>
</div></div>]]></description>
        </item>
    </channel>
</rss>