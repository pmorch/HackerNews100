(ignoring known css parsing error)
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 12 May 2025 06:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Avoiding AI is hard – but our freedom to opt out must be protected (111 pts)]]></title>
            <link>https://theconversation.com/avoiding-ai-is-hard-but-our-freedom-to-opt-out-must-be-protected-255873</link>
            <guid>43958382</guid>
            <pubDate>Mon, 12 May 2025 00:09:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://theconversation.com/avoiding-ai-is-hard-but-our-freedom-to-opt-out-must-be-protected-255873">https://theconversation.com/avoiding-ai-is-hard-but-our-freedom-to-opt-out-must-be-protected-255873</a>, See on <a href="https://news.ycombinator.com/item?id=43958382">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
    <p>Imagine applying for a job, only to find out that an algorithm powered by artificial intelligence (AI) rejected your resume before a human even saw it. Or imagine visiting a doctor where treatment options are chosen by a machine you can’t question. </p>

<p>This isn’t science fiction. It’s becoming a reality for many people today. AI quietly shapes almost every part of our lives – from the news we read chosen by AI to how our cities manage traffic. AI promises convenience, productivity, innovation and efficiency. </p>

<p>But as it grows more powerful, one urgent question is being overlooked: do people have the right to live free from AI’s influence?</p>

<h2>Excluded from modern life</h2>

<p>Opting out of AI is no simple matter. </p>

<p>AI powers essential systems such as <a href="https://www.investopedia.com/artificial-intelligence-in-us-government-8406703?">healthcare, transport</a> and <a href="https://www.intel.vn/content/www/vn/vi/financial-services-it/fintech/ai-in-financial-services.html?">finance</a>. </p>

<p>It also influences <a href="https://www.youtube.com/watch?v=a3QAgjuI_zY">hiring decisions</a>, <a href="https://www.theguardian.com/technology/2024/dec/14/saferent-ai-tenant-screening-lawsuit?">rental applications</a>, <a href="https://www.aljazeera.com/economy/2024/2/12/as-corporate-america-pivots-to-ai-consumers-rejected-for-loans-jobs?">loans</a>, <a href="https://www.cash-platform.com/vietcombanks-ai-revolution-enhancing-customer-experience-and-operational-efficiency/?">credit scoring</a>, <a href="https://www.news.com.au/technology/online/social/universitys-ai-experiment-reveals-shocking-truth-about-future-of-online-discourse/news-story/3e257b5bb2a90efd9702a0cd0e149bf8?">social media feeds</a>, <a href="https://www2.deloitte.com/us/en/insights/industry/public-sector/automation-and-generative-ai-in-government.html">government services</a> and even what news or information we see when we search online.</p>

<p>Challenging decisions made by AI in your life can be enormously difficult – and <a href="https://www.theguardian.com/technology/2024/dec/14/saferent-ai-tenant-screening-lawsuit?">may only be able to be done in court</a>. It’s even harder to choose to live without AI entirely, as this requires stepping away from much of modern life. For example, Australian users of Meta’s social media platforms <a href="https://www.smh.com.au/technology/meta-admits-australians-cannot-opt-out-of-predatory-ai-data-scrape-20240911-p5k9o0.html">cannot opt out</a> of having their data used to train the company’s AI models. </p>

<figure>
            <p><iframe data-src="https://www.youtube.com/embed/a3QAgjuI_zY?wmode=transparent&amp;start=0" frameborder="0" allowfullscreen="" width="100%" height="400"></iframe></p>
            
          </figure>

<h2>A growing divide</h2>

<p>AI-driven systems are <a href="https://www.businessinsider.com/chatgpt-racial-bias-job-hiring-report-2024-3?">biased</a>. Automated hiring tools favour certain <a href="https://www.washington.edu/news/2024/10/31/ai-bias-resume-screening-race-gender/?">demographics</a>, and <a href="https://vietnamnews.vn/economy/1536512/abbank-launches-tech-based-credit-decisioning-system.html?">AI-powered credit scoring</a> can unfairly deny loans. </p>

<p>These biases are not just theoretical but they are real and present in our daily interactions. If AI becomes the gatekeeper for essential services, those who choose to avoid it could face significant disadvantages.</p>

<p>In many countries where digital systems are expanding rapidly, a large portion of the population <a href="https://www.ispionline.it/en/publication/the-digital-divide-a-barrier-to-social-economic-and-political-equity-204564">struggles to adapt</a> to these technologies. For example in India, <a href="https://www.newindianexpress.com/states/telangana/2024/Nov/04/only-12-per-cent-indians-over-15-years-are-computer-literate-cess-study?">only 12%</a> of people over the age of 15 are considered digitally literate highlighting the challenges of technological changes.</p>

<p>Many face exclusion simply because they don’t fit into the AI-defined model. In these cases, opting out of AI isn’t a personal choice anymore, but it’s a matter of survival in a rapidly changing world. The divide between those who embrace AI and those who are left behind is widening and becoming a social barrier.</p>

<p>This isn’t just about bias or inefficiency. It’s about the fundamental transformation of our society, where the connected, the optimised, and the machine-readable dominate – and the rest of us are left in the shadows.</p>

<h2>A lesson in control</h2>

<p>The story of The Sorcerer’s Apprentice, a poem by Johann Wolfgang von Goethe written in 1797, is a powerful reminder of the dangers of unleashing forces we cannot control. </p>

<p>In the tale, an apprentice uses magic to perform tasks but loses control of the enchanted broomstick, leading to chaos and disaster. Today, AI is that uncontrollable force. It has the potential to make life easier but also poses serious risks when it gets out of hand.</p>

<p>The problem isn’t just about safety but about freedom. The Sorcerer’s Apprentice teaches us, as historian Yuval Noah Harari <a href="https://www.theguardian.com/technology/article/2024/aug/24/yuval-noah-harari-ai-book-extract-nexus">has written</a>, to “never summon a power you cannot control” – a reminder that even well-meaning advancements can spiral out of control if we fail to manage them properly. </p>

<p>As AI becomes more embedded in our lives, the issue isn’t just about whether it works. It’s about whether we have the right to decide how much of it we want in our lives. The freedom to choose, to opt out, is essential to preserving our autonomy in the digital age.</p>

<figure>
            <a href="https://images.theconversation.com/files/665703/original/file-20250505-56-wzz20.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=1000&amp;fit=clip"><p><img alt="A large blue and white sign featuring Meta's logo." data-src="https://images.theconversation.com/files/665703/original/file-20250505-56-wzz20.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;fit=clip" data-srcset="https://images.theconversation.com/files/665703/original/file-20250505-56-wzz20.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=600&amp;h=400&amp;fit=crop&amp;dpr=1 600w, https://images.theconversation.com/files/665703/original/file-20250505-56-wzz20.jpg?ixlib=rb-4.1.0&amp;q=30&amp;auto=format&amp;w=600&amp;h=400&amp;fit=crop&amp;dpr=2 1200w, https://images.theconversation.com/files/665703/original/file-20250505-56-wzz20.jpg?ixlib=rb-4.1.0&amp;q=15&amp;auto=format&amp;w=600&amp;h=400&amp;fit=crop&amp;dpr=3 1800w, https://images.theconversation.com/files/665703/original/file-20250505-56-wzz20.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;h=503&amp;fit=crop&amp;dpr=1 754w, https://images.theconversation.com/files/665703/original/file-20250505-56-wzz20.jpg?ixlib=rb-4.1.0&amp;q=30&amp;auto=format&amp;w=754&amp;h=503&amp;fit=crop&amp;dpr=2 1508w, https://images.theconversation.com/files/665703/original/file-20250505-56-wzz20.jpg?ixlib=rb-4.1.0&amp;q=15&amp;auto=format&amp;w=754&amp;h=503&amp;fit=crop&amp;dpr=3 2262w" sizes="(min-width: 1466px) 754px, (max-width: 599px) 100vw, (min-width: 600px) 600px, 237px" src="https://images.theconversation.com/files/665703/original/file-20250505-56-wzz20.jpg?ixlib=rb-4.1.0&amp;q=45&amp;auto=format&amp;w=754&amp;fit=clip"></p></a>
            <figcaption>
              <span>Australian users of Meta’s social media platforms cannot opt out of having their data used to train the company’s AI models.</span>
              <span><a href="https://www.shutterstock.com/image-photo/menlo-park-ca-usa-apr-30-2152758887">Tada Images/Shutterstock</a></span>
            </figcaption>
          </figure>

<h2>What needs to change?</h2>

<p>To protect the right to live a life free from the constant influence of AI, we must act now. </p>

<p>While <a href="https://www.wired.com/story/bidens-ai-bill-of-rights-is-toothless-against-big-tech/?">most</a> AI governance <a href="https://www.pdpc.gov.sg/help-and-resources/2020/01/model-ai-governance-framework?">frameworks</a> emphasise <a href="https://aiforgood.itu.int/ai-governance-and-sustainability/">responsible use</a> focusing on fairness, transparency and accountability, they often overlook a vital principle: the right to disengage from AI systems entirely without facing exclusion or disadvantage. </p>

<p>Governments, businesses and communities need to create policies that not only regulate AI but also respect individual freedoms. People should have the option to live without AI, without facing discrimination or exclusion from essential services.</p>

<p>AI decision making also needs to be more transparent. Whether it’s automated hiring, healthcare or financial services, AI should be understandable, accountable and open to scrutiny. No longer can we allow these systems to operate behind closed doors, making decisions that affect people’s lives with no recourse for the individuals involved.</p>

<p>Finally, society must invest in digital literacy. Everyone should understand the systems that impact their lives and have the tools to challenge them when necessary. Ensuring people know how to navigate and control the technologies that shape their world is essential in maintaining freedom in the digital age.</p>

<h2>An urgent question</h2>

<p>Some may ask, why not just add a kill switch to AI and shut it down if needed? But once AI is woven into crucial systems such as healthcare, transport or communication, it’s no longer something we can simply turn off. </p>

<p>Like electricity or the internet, it becomes a core part of modern life, not easily reversible <a href="https://arxiv.org/abs/2405.07406">without major disruption</a>.</p>

<p>So as AI spreads further into every corner of our lives, we must urgently ask: will we still have the freedom to say no? </p>

<p>If we don’t act now to protect the right to choose, we risk a future where personal autonomy is compromised, and the influence of AI goes unchecked. The question isn’t whether we can live with AI but whether we will still have the right to live without it before it’s too late to break the spell.</p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why Bell Labs Worked (165 pts)]]></title>
            <link>https://1517.substack.com/p/why-bell-labs-worked</link>
            <guid>43957010</guid>
            <pubDate>Sun, 11 May 2025 20:47:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://1517.substack.com/p/why-bell-labs-worked">https://1517.substack.com/p/why-bell-labs-worked</a>, See on <a href="https://news.ycombinator.com/item?id=43957010">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p>Hallowed is the name of Bell Labs. It falls from many an ambitious lip, seeking to conjure forth lost magic for their pet jar. Some zealots go further.  They attempt the most venerated of summons — to materialize an Apollo.</p><p>The conjuring proceeds with hope. It is extremely exciting and hopeful to be a part of such an endeavor. Naked hope sparks the flame of conviction. Sponsors are found. Press releases are released. Social media is social-ed. Applications are announced... It's real!</p><p>And then there's silence. Louder the start; quieter the end. Many an aspiring titan ends up wandering the plains of human endeavor with an open jar; forever searching for magic to bottle.</p><div data-component-name="PreformattedTextBlockToDOM"><p><label contenteditable="false">Text within this block will maintain its original spacing when published</label></p><pre>    </pre></div><p><span>Alexander Graham Bell was prolific. His interests spanned hydrofoils (see footage above), metal detectors, optical data transmission, aviation, genetics, acoustics and early electrification. Bell used his first big liquidity event to start Volta Laboratory and Bureau, a lab that Bell led with an enlightened management style that would become Bell Labs' signature. From "[Bell] suggested the basic lines of research, furnished the financial resources, and then allowed his associates to receive the credit for many of the inventions that resulted." </span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-163345499" href="https://1517.substack.com/p/why-bell-labs-worked#footnote-1-163345499" target="_self" rel="">1</a></span></p><p>Mervin Kelly, the man who built Bell Labs, shared this attitude. Starting in the late 1920s and accelerating in the 1930s, Kelly went about scouting and (indiscriminately) assimilating every talented person he could find. From the Idea Factory,</p><blockquote><div><p><span>It was curious, in a way, who they were, these men coming to Bell Labs in New York. Most [...had been flagged by professors...] and their names had been quietly passed along to Kelly or someone else at the Labs. [Typically, these recruits grew up] with a peculiar desire to know more about the stars or the telephone lines or (most often) the radio, and especially their makeshift home wireless sets. Almost all of them had put one together themselves, and in turn had discovered how sound could be pulled from the air.</span></p><p><span>— </span><em>Gertner, Jon. The Idea Factory: Bell Labs and The Great Age of American Innovation. Penguin, 2012.</em></p></div></blockquote><p>Bell Labs' antecedent was founded by a prolific maker and researcher, and it was led from the very start by makers and researchers. As a working scientist, Mervin Kelly understood the golden rule, "How do you manage genius? You don't." And it worked.</p><p>During WW2, Bell Labs reversed engineered and improved on the British Magnetron within 2 months. Helped create the "Bazooka." Built an electronic computer that semi-autonomously controlled anti-aircraft guns, invented an acoustic homing torpedo, proximity fuzes, echo-ranging SONAR, pulse code modulation, the first anti-aircraft missile (the Nike) and the klystron.</p><p>By all accounts, Kelly stayed true to his philosophy. None of these projects were micro-managed by Kelly. People did things because they wanted to do them. And they kept doing them after the war.</p><p>Bell Labs is the furnace wherein the American century was forged.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png" width="720" height="720" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;normal&quot;,&quot;height&quot;:720,&quot;width&quot;:720,&quot;resizeWidth&quot;:720,&quot;bytes&quot;:554862,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://1517.substack.com/i/163345499?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:&quot;center&quot;}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe1f08b12-db1a-487f-becd-0aa171a9e1c5_720x720.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>An ad for Bell Labs, 1945. Popular Mechanics.</figcaption></figure></div><div data-component-name="PreformattedTextBlockToDOM"><p><label contenteditable="false">Text within this block will maintain its original spacing when published</label></p><pre>    </pre></div><p>Bell Labs died when Ma Bell died, that's how the popular narrative goes. While this account is mostly true, it obscures a deeper truth — Bell Labs was a victim of the information age it helped create.</p><p>There have been non-profit and corporate giants with larger war chests than Ma Bell. AT&amp;T started Bell Labs when its revenue was under $13 B (current USD). During the great depression, when Mervin Kelly laid the foundation for the lab, AT&amp;T's revenue was $22 B (current USD).</p><p>Inflation adjusted, Google has made more than AT&amp;T did at Bell Labs' start since 2006. Microsoft, 1996. Apple, 1992.</p><p>Each has invested in research. None have a Bell Labs.</p><p><span>Academia's worse. Scientists at the height of their careers spend more time writing grants than doing research. Between 1975 and 2005, the amount of time scientists at top tier universities spent on research declined by 20%. Time spent on paperwork increased by 100%. To quote the study, "experienced secular decline in research time, on the order of 10h per week." </span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-163345499" href="https://1517.substack.com/p/why-bell-labs-worked#footnote-2-163345499" target="_self" rel="">2</a></span></p><p>Empirical measures are hard to find, but another study found that principal investigators in astronomy spend more than 110 hours per grant. Or, one month per grant. As grants have a 20% success rate, more successful investigators apply to two or more per year.</p><p>The game is far more brutal if you're young. A young scientist with their own lab who sets their own research direction is unheard of. When was the last time a 20-something ran a lab at a major university?</p><p>People who can survive this system aren't necessarily the same as people who can do great work. Most of the great names of the past would be considered unemployable today;</p><blockquote><div><p><span>"It's difficult to imagine how I would ever have enough peace and quiet in the present sort of climate to do what I did in 1964... Today I wouldn't get an academic job. It's as simple as that. I don't think I would be regarded as productive enough."</span></p><p><em>— Peter Higgs</em></p></div></blockquote><p>Higgs' statement gets to the heart of the problem, MBA culture,</p><p>We live in a metrics obsessed culture that is obsessed with narrowly defined productivity. There's too much focus on accountability and too little focus on creativity.</p><p>The reason why we don't have Bell Labs is because we're unwilling to do what it takes to create Bell Labs — giving smart people radical freedom and autonomy. </p><p>The freedom to waste time. The freedom to waste resources. And the autonomy to decide how.</p><blockquote><div><p><span>"I've always pursued my interests without much regard for final value or value to the world. I've spent lots of time on totally useless things."</span></p><p><em>— Claude Shannon</em></p></div></blockquote><div data-component-name="PreformattedTextBlockToDOM"><p><label contenteditable="false">Text within this block will maintain its original spacing when published</label></p><pre>    </pre></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg" width="1456" height="943" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:943,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Image&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null}" alt="Image" title="Image" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2ae67060-a683-4886-a635-86b3291e9c59_1500x971.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Bell Labs, 1966</figcaption></figure></div><blockquote><div><p><span>I don't think I was ever motivated by the notion of winning prizes, although I have a couple of dozen of them in the other room. I was motivated more by curiosity. I was never motivated by the desire for money, financial gain. I wasn't trying to do something big so that I could get a bigger salary.</span></p><p><span>— Claude Shannon</span></p></div></blockquote><p>On December 23rd 1947, when the transistor was demo-ed for the first time, Mervin Kelly wasn't invited. In fact, he didn't know what Bardeen and Brattain were doing. Why would he? They'd tell him when they were ready.</p><p>Kelly seems to have believed that the desire to impress your boss was a corrosive force, and so new discoveries and inventions were steadily percolated up to him and other leadership layer-by-layer one to two weeks at a time. From his perspective, it wasn't Kelly's job to micromanage people. Yes, they worked for him, but in his model, he wasn't their employer — he was their patron.</p><p><span>Reportedly, Kelly and others would hand people problems and then check in a few years later.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-3-163345499" href="https://1517.substack.com/p/why-bell-labs-worked#footnote-3-163345499" target="_self" rel="">3</a></span><span> Most founders and executives I know balk at this idea. After all, "what's stopping someone from just slacking off?" Kelly would contend that's the wrong question to ask. The right question is, "Why would you expect information theory from someone who needs a babysitter?"</span></p><p>As with many things, it – ultimately – comes down to taste. Bell Labs worked because Mervin Kelly had great taste in people and problems. He could identify who had that innate drive and thirst for more, and who didn't. From Richard Hamming's You and Your Research,</p><blockquote><div><p><span>Now for the matter of drive. You observe that most great scientists have tremendous drive. I worked for 10 years with John Tukey at Bell Labs. He had tremendous drive. One day about 3 or 4 years after I joined, I discovered that John Tukey was slightly younger than I was. John was a genius and I clearly was not.</span></p><p><span>Well, I went storming into Bode's office and said, "How can anybody my age know as much as John Tukey does?" He leaned back in his chair, put his hands behind his head, grinned slightly, and said, "You would be surprised Hamming, how much you would know if you worked as hard as he did that many years." I simply slunk out of the office!</span></p></div></blockquote><p><span>Bell Labs' pantheon was built on the backs of those who can't escape having dark nights of the soul. People who wake up in the middle of the night every night and ask "what am I doing with my life? I've accomplished nothing worthwhile.”</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-4-163345499" href="https://1517.substack.com/p/why-bell-labs-worked#footnote-4-163345499" target="_self" rel="">4</a></span><span> People with an exotic mix of conscientiousness, high openness and highly-directional neuroticism. Kelly and Bob Taylor (PARC) were gifted at identifying such people, because (I suspect) they were such people.</span></p><p>Like seeks like.</p><p>Sadly, freedom and patience alone isn’t enough. The Bell Labs formula can be briefly described as,</p><ul><li><p>Use good taste to find great, ambitious people.</p></li><li><p>Surround them with other great, ambitious people.</p></li><li><p>Hire smart, technical makers to be around them.</p><ul><li><p>Cross-pollinate between the two groups as necessary.</p></li></ul></li><li><p>Make sure people talk to each other every day.</p></li><li><p>Create a school so they teach one another.</p><ul><li><p>Encourage everyone to study / improve.</p></li></ul></li></ul><p>Once the group is humming with activity and has a sense of self identity, the smart leader can then,</p><ul><li><p>Use taste to curate problems for the researchers.</p></li><li><p>Give freedom to think — for years, if necessary. Trust the taste.</p></li><li><p>Make explicit hand-offs to the makers.</p><ul><li><p>Once you have something that works from the makers; emphasize fast scaling and execution.</p></li></ul></li><li><p>Scale outwards as necessary.</p></li></ul><p>Proving and expanding on the above formula is left as an exercise to the reader.</p><div data-component-name="PreformattedTextBlockToDOM"><p><label contenteditable="false">Text within this block will maintain its original spacing when published</label></p><pre>    </pre></div><p><span>One of the reasons why I love working at 1517 is because I believe the general partners (Danielle Strachman and Michael Gibson) do </span><em>understand</em><span> why Bell Labs worked. I see it in how they deal with me and the people around them. Danielle is a teacher first, and has the patience of one combined with the resources of a VC.</span></p><p><span>And while a VC fund is limited in what it can do in providing open-ended freedom. It can try to provide a meaningful simulacrum of that space and community, which is why I’m so excited about programs like </span><a href="https://1517.substack.com/p/1517-garage-science-flux-capacitor" rel="">1517’s Flux</a><span> that invests $100k in people, no questions asked and lets them explore for a few months without demanding KPIs or instantaneous progress.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-5-163345499" href="https://1517.substack.com/p/why-bell-labs-worked#footnote-5-163345499" target="_self" rel="">5</a></span></p><p>I am hopeful that – as more organizations try such approaches – the idea will spread and we’ll get to see another Bell Labs.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Burrito Now, Pay Later (126 pts)]]></title>
            <link>https://enterprisevalue.substack.com/p/burrito-now-pay-later</link>
            <guid>43956723</guid>
            <pubDate>Sun, 11 May 2025 20:09:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://enterprisevalue.substack.com/p/burrito-now-pay-later">https://enterprisevalue.substack.com/p/burrito-now-pay-later</a>, See on <a href="https://news.ycombinator.com/item?id=43956723">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><em><strong>tl;dr: Burrito bonds represent finance doing what it does best: unbundling risk, pricing it granularly, and allocating capital more efficiently. BNPL unbundles consumer credit into tradeable assets to let the market decide who should hold the risk. The result is lower borrowing costs, and a credit market that’s more effective than the status quo.</strong></em></p><p><span>Despite skepticism from </span><a href="https://www.azquotes.com/author/21652-Paul_Volcker" rel="">Volcker</a><span> and </span><a href="https://www.trendfollowing.com/whitepaper/buffett.pdf" rel="">Buffet</a><span>, financial innovation has been and will continue to be a massive net positive for humanity. I will write a separate, longer piece on why </span><em>financial engineering is good akshually</em><span>. For now, I’ll describe why the development of the BNPL</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-161211911" href="https://enterprisevalue.substack.com/p/burrito-now-pay-later#footnote-1-161211911" target="_self" rel="">1</a></span><span> securities market will improve the current state of credit and lending. It’s a win-win-win-win-win. </span><em><a href="https://www.youtube.com/watch?v=Ryvkwx8BFss" rel="">We're gonna win so much, you may even get tired of winning.</a></em></p><p><span>In March 2025, </span><a href="https://about.doordash.com/en-us/news/doordash-partners-with-klarna" rel="">DoorDash and Klarna announced a deal</a><span> to let consumers pay for restaurant food, groceries and other delivery orders in four equal, interest-free installments, or “at a more convenient time, such as a date that aligns with their paycheck schedules”. The </span><a href="https://www.zerohedge.com/markets/burrito-now-pay-later-doordash-klarna-deal-feeds-us-debt-addiction" rel="">commentary</a><span> and </span><a href="https://x.com/PirateWires/status/1903191186304799123" rel="">memes</a><span> about “burrito bonds” and Shake Shack securitization were funny. Most takes implied or directly stated it was a manifestation of late-stage capitalism. In 1983, people lamented that one had to use a “credit” card at Burger King. On some level, payments and credit are on the same spectrum of value transfer.</span></p><p>To take a few steps back, why does credit exist at all? One reason is that someone’s or a company’s income doesn’t always align perfectly with when they want to buy things. Credit bridges this gap by allowing the borrower to purchase now and the lender to be repaid later, with the lender earning compensation for the time value of money, repayment risk, and liquidity risks. This logic doesn’t change just because the thing being financed is a burrito.</p><p><span>Is financing your lunch a sign of societal decay? Maybe, maybe not. But it’s definitely an evolution in Market Completion. As a financial engineering and market completion </span><em>enjoyer</em><span>, I think this is great. A </span><a href="https://en.wikipedia.org/wiki/Complete_market" rel="">Complete Market</a><span> is one where every risk can be priced, traded, or hedged. i.e. every risk has a price, every future has a counterparty. If you think the price of oil will be $120 after a year, you can use futures or options on futures to make this bet. If you think the S&amp;P 500 will be over 6,500 within 2 years </span><em>and</em><span> the yield on 10Y Treasury bonds will be 4.25%, investment bankers will help you express this view for a fee.</span></p><p>Small, short-term loans provided by BNPL providers (Klarna, Affirm, etc.) get bundled together as financial instruments and are sold to investors looking for yield. This is called securitization. This does a few useful things for the different parties involved:</p><ul><li><p><strong>For Borrowers:</strong><span> A simple, often zero-interest way to smooth out small expenses, if they pay on time. This contrasts with credit cards, where average rates are 15-30%, and even super-prime borrowers have a 7.22% spread (if the Fed Funds rate is 4% and the credit card APR is 10%, the spread is 6%) over the Fed Funds rate. Additionally, consumers have to only forecast the next six weeks of their life, something even people with </span><a href="https://en.wikipedia.org/wiki/Time_preference" rel="">high time preference</a><span> can handle (I think).</span></p></li></ul><ul><li><p><strong>For Restaurants/Merchants:</strong><span> BNPL fees (2-6%) are higher than credit card fees (1.5-3.5%), reducing the merchant’s net payout per transaction but BNPL drives higher sales volumes, offsetting the fee impact. BNPL boosts conversion, order sizes, and frequency (what else is left for a marketer to do?). So BNPL is really a customer acquisition and loyalty play funded by the merchant, not the Consumer. With BNPL, merchants do not have customer default risk since the provider pays upfront and manages collections. Unlike credit cards, where chargebacks from fraud or disputes can delay or reverse payments weeks or months later, BNPL offers merchants predictable, risk-free payouts.</span></p></li></ul><ul><li><p><strong>BNPL Provider:</strong><span> The BNPL provider finances the $100 loan using its own funds, a bank credit line, or investor-backed warehouse financing.</span></p><ul><li><p>BNPL Economics: The BNPL provider pays the merchant $95 (after a $5 fee) and collects $100 from the customer over time, earning the $5 fee as revenue. To free up capital, the provider bundles many $100 loans and sells them to investors for 95 cents on the dollar through securitization. This allows the provider to recycle funds into new loans, continuing to earn fees. To align interests with investors, the provider retains a ‘first-loss’ portion of the securitized loans, so BNPL providers have skin in the game to ensure responsible lending. After paying $0.57 for capital costs and operations, the provider’s net profit per $100 loan is $4.43. The more $100 loans they can make and get off their balance sheet, the more profits they make.</p></li></ul></li></ul><ul><li><p><strong>For Banks &amp; Investors:</strong><span> It creates a new, short-duration segment within the Asset-Backed Securities market. BNPL loans are 6-8 weeks long. That’s a tight risk-feedback loop. In exchange for fees, </span><a href="https://www.spglobal.com/market-intelligence/en/news-insights/articles/2023/3/buy-now-pay-later-platforms-turn-to-interest-bearing-lending-via-bank-partners-74223673" rel="">banks structure these loans and quickly move them off their balance sheets and to investors</a><span>. This is one of the primary roles of finance–to transfer risk to those who are best equipped to hold it. The rough math is that the merchant fee funds a loan yielding an APR of 22.8% for the investor (capital provider) while the consumer pays zero interest. This is the Golden Age of Credit™ after all.</span></p><ul><li><p><span>Investor Economics:</span><strong> </strong><span>Assume a $100 BNPL loan. $25 is paid upfront by the Consumer, so an Investor pays $73 for a $75 loan, discounted for risk, fees, and return expectations. The Investor receives $75 from customer repayments over 6 weeks minus servicing fees of $0.25. A $1.75 profit on $73 investment over 6 weeks is a 2.4% return, or 22.8% annualized (52 weeks/6 weeks = 8.67 periods each year; annualized return = (1+0.024)</span><sup>8.67 </sup><span>- 1).</span></p></li></ul></li></ul><ul><li><p><strong>For the Economy:</strong><span> This process is another step toward a Complete Market. It converts a financing tool into a discrete financial instrument that can be priced and traded based on the views of financially-motivated participants, i.e. it converts a balance sheet item into a tradeable security. The allocation of capital becomes more efficient as the number of heterogeneous market participants increases via the Wisdom of Crowds. Thus, this over time reduces the costs of credit for consumers and businesses.</span></p></li></ul><p>BNPL providers have fairly clear terms and retain the flexibility to adjust their own risk. For borrowers:</p><ul><li><p><strong>Late Fees</strong><span>: A modest fee, often capped to keep things reasonable. Alice forgets a $25 installment on her $100 DoorDash transaction, she’s hit with a $7 late fee, tacked onto her next payment. Annoying, but it probably won’t push her down a debt spiral.</span></p></li><li><p><strong>Credit Impact</strong><span>: Alice’s credit score takes a hit if the BNPL provider reports it (many don’t for short-term plans). Most BNPL defaults stay off the radar of the credit bureaus, unlike credit card delinquencies, but </span><a href="https://www.bankrate.com/credit-cards/news/buy-now-pay-later-and-credit-reports/" rel="">this is changing</a><span>.</span></p></li><li><p><strong>Account Lockout</strong><span>: BNPL platforms can freeze account her account if it gets  over-leveraged and moves into the ‘high-risk borrower’ category.</span></p></li><li><p><strong>Collections</strong><span>: If payments stay delinquent for months, providers will escalate to collections. </span></p></li><li><p><strong>APRs:</strong><span> Most BNPL plans start at 0% APR for short-term deals, and missing a payment doesn’t change the rates. However, some providers might revoke the 0% rate, slapping a standard rate of, say 20%, on the remaining balance. Late fees mimic interest even if called interest-fee loans.</span></p></li></ul><p><span>This is a fair concern, with </span><a href="https://libertystreeteconomics.newyorkfed.org/2023/09/who-uses-buy-now-pay-later/" rel="">the data</a><span> showing that those with lower incomes, lower education, and worse credit (redundancies here) are more likely to use BNPL. Even with adverse selection for BNPL, the underwriting is for each transaction, not for all monthly spending like that in credit cards; so if a consumer misses a payment, the BNPL provider can stop lending immediately, as opposed to the credit card company which has to underwrite the person’s full ability and willingness to repay their debts. This tech-enabled granularity allows for legibility and hence greater precision and predictability. Asking your neighbor to watch your dog for a few days is a much lower bar than asking them to raise your toddler kids if you get hit by a bus because the stakes and duration of your ask are very different. BNPL is granular, precise, and agile. Credit cards are monolithic and inert. See the next section for more on legibility.</span></p><p>In Design, the principle of Universal Design focuses on creating inclusive systems and tools that improve usability for all. Autocorrect, text-to-speech readers, dark mode, and subtitles all came from Universal Design. Similarly, lending that makes credit more affordable and accessible for lower-income individuals will reduce credit costs for all borrowers.</p><p><span>I’m a </span><a href="https://slatestarcodex.com/2017/03/16/book-review-seeing-like-a-state/" rel="">James C. Scott appreciator</a><span>. Credit cards account for 63% of all US retail purchases but bundle all sorts of non-discretionary and discretionary purchases together. Your $30 takeout order is bundled with “financing” for a new coffee machine, Uber rides, airline tickets, gym membership, dry cleaning, a tire change, and maybe even your monthly rent. Additionally, your credit card rate is also obscured by complex fee structures, variable interest rates, reward points, hotel points, and airline miles. So it’s hard to precisely price the risk of that $30 loan.</span></p><p>BNPL disentangles these purchases. Each loan is for a specific item, with a fixed repayment schedule over a very short term (usually 6-8 weeks).</p><p>Underwriting happens at the point of sale for that specific transaction. Investors buying securities backed by these loans get exposure to a pool of very similar, short-term risks, making it easier to model and understand compared to a portion of a bank's diversified credit card portfolio. The granular control lets providers nip risks in the bud without punishing borrowers into financial destitution. Unlike credit cards, where a few missed payments could balloon to a 5-figure limit, BNPL’s transaction-level underwriting caps the damage. This is legibility in action—providers see exactly what’s gone wrong and adjust.</p><p>For investors, defaults are baked into the yield math: the 22.8% annualized return must also account for the burrito deadbeats. This improved legibility means the risk premium that’s embedded in a blended credit card rate can be isolated, traded, and hence compressed.</p><p><span>While defaults happen, the short duration means they won't cascade through and clog up the financial system in the same way longer-term, larger debts like mortgages did during 2006-2008. But even if BNPL scales massively, the risk sits on the balance sheets of credit funds and hedge funds, not deposit-backed banks. This unbundling makes the specific risk of financing everyday consumption more visible and manageable. Banks are already using </span><a href="https://www.kkr.com/insights/asset-based-finance-srt" rel="">Significant Risk Transfers</a><span> to transfer risk to non-bank investors (SRTs move loans’ risks and returns from banks’ balance sheets to credit investors so banks keep the customer relationship while the risks &amp; returns are transferred to investors). Thus, even if the BNPL securitization market grows exponentially, risks will be shifted toward investors who can stomach them, rather than banks dependent on retail deposits. Moral hazard, counterparty risks, etc. etc. remain, but </span><a href="https://www.youtube.com/watch?v=ag14Ao_xO4c" rel="">willing buyers are transacting with willing sellers</a><span>.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png" width="498" height="280" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:280,&quot;width&quot;:498,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04a50002-90de-4c84-810f-a37f79dc77f8_498x280.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Losses across different FICO score portfolios tend to move together, rising during economic downturns, and currently cannot be diversified within the credit card market. Additionally, credit card losses (charge-off rates) are highly correlated with losses on other types of loans and corporate bonds. Which is to say that credit card lending risks are undiversifiable across other lending markets and therefore banks/investors have to be compensated to hold this risk. Hence, consumers must pay more to borrow because their risk of default cannot be diversified.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png" width="1186" height="880" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:880,&quot;width&quot;:1186,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe23d000e-e996-42a6-94df-3516f76c2c9d_1186x880.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>At the moment, for credit cards, </span><a href="https://libertystreeteconomics.newyorkfed.org/2025/03/why-are-credit-card-rates-so-high/" rel="">the average interest spread</a><span> over the Fed Funds rate (the risk-free rate) is 14.5%, and ranges from 21% for borrowers with a low FICO score of 600, to 7.22% for those with the highest score of 850. The </span><a href="https://libertystreeteconomics.newyorkfed.org/2025/03/why-are-credit-card-rates-so-high/" rel="">estimated non-diversifiable risk premium is 5.3% per year</a><span>, or 37% of the average risk premium of 14.5%, which seems really high. I expect this component of the credit card spread will get compressed as the BNPL securitization market matures.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png" width="1330" height="852" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:852,&quot;width&quot;:1330,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F30ed0887-ab6f-4222-8e54-2b5d1827fd93_1330x852.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>As the BNPL-Backed Securities (“BBS”) market develops, I expect to see the creation and growth of BBS Indexes and associated derivatives and BBS ratings from the credit ratings agencies. ABS indexes already exist for mortgage-backed securities, CDS indexes for corporate bonds, etc. Investment banks will create futures, options, swaps, etc. so investors can manage their BBS portfolios. If a fund holds a portfolio of BBS and is worried about an increase in takeout BNPL credit losses, they could short the “Food Delivery BBS Index”, and similarly the “Clothing BBS Index”, the “Electronics BBS Index”, and so on.</p><p><span>Do I want to see a </span><a href="http://sezzle.com/shop/draftkings/" rel="">Sports Betting BBS Index</a><span>? No. Will it happen? Definitely. Sports betting </span><a href="https://www.investopedia.com/americans-sports-betting-losing-8768618" rel="">does a lot of damage</a><span> to the finances of American households but when the loans backing them are securitized, they will make for a great fixed income product because because gambling is a somewhat recession-resilient industry, much like other ‘sin sectors’ like alcohol and tobacco (BBS indexes for alcohol and tobacco will also happen, and around here is where I may get tired of winning).</span></p><p><span>Perhaps, a case can be made for some paternalism i.e. to not increase financing for harmful products. And of course, we should also expect to see a Rental Market BBS Index because BNPL for monthly rent payments </span><a href="https://www.prnewswire.com/news-releases/splitit-brings-its-installments-as-a-service-to-the-rental-market-through-its-partnership-with-letus-301598624.html" rel="">is</a><span> </span><a href="https://getflex.com/" rel="">already</a><span> </span><a href="https://zip.co/us/store/payrent" rel="">commonplace</a><span>.</span></p><blockquote><p><em>One argument made is that BNPLs, by extension of credit to people who don’t have traditional credit available, allow customers to overextend themselves. (This is, for social reasons, very rarely articulated as “I am better at math than women who shop at Sephora, think they will not make good choices, and accordingly think they should have less choices presented to them.” But it is that argument.)</em><span>—</span><a href="https://www.bitsaboutmoney.com/archive/buy-now-pay-later/" rel="">Patrick McKenzie</a></p></blockquote><p>Here is where market completion comes in. An investor can bet on the rental market holding up by buying the Rental Market BBS index futures and selling the broader BBS index if they think rentals will outperform. Similarly, DoorDash can sell the Food Delivery index to protect against a potential drop in their earnings if it sees softening demand. These index prices can serve as a signal and guide lending decisions in the BNPL market and the wider credit market because they will aggregate the opinion of the market’s participants.</p><p>When investors can hedge non-diversifiable risks, they require a lower return/yield for taking on that exposure. This translates back through the capital allocation chain, lowering the fees merchants pay, or allowing BNPL providers to offer even better terms i.e. cheaper credit for borrowers, and making the whole economy more efficient at allocating resources. While financial engineering doesn’t eliminate risk; it transfers it to those best equipped to handle it, making credit cheaper and capital allocation more effective.</p><p>More speculative but still plausible: by providing flexible, short-term financing with manageable risks, BNPL will make the economy more resilient to recessions by supporting consumption and business stability. BNPL’s short duration and non-systemic risks limit cascading defaults. This flexibility could buffer downturns as consumers &amp; merchants and their financiers adapt more quickly to changing conditions.</p><p>This process–underwriting individual loans, securitizing them, and creating indexes and derivatives–is a classic pattern in financial markets. So while “burrito bonds” sound absurd, absurdity is common at the frontiers of innovation.</p><p><span>In this case, tech-enabled financial engineering leads to more efficient credit, granular risk transfer, and deeper markets. And that’s a win.</span><br></p><p data-attrs="{&quot;url&quot;:&quot;https://enterprisevalue.substack.com/p/burrito-now-pay-later?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://enterprisevalue.substack.com/p/burrito-now-pay-later?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Scraperr – A Self Hosted Webscraper (157 pts)]]></title>
            <link>https://github.com/jaypyles/Scraperr</link>
            <guid>43955842</guid>
            <pubDate>Sun, 11 May 2025 18:29:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/jaypyles/Scraperr">https://github.com/jaypyles/Scraperr</a>, See on <a href="https://news.ycombinator.com/item?id=43955842">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto">
  <p><a target="_blank" rel="noopener noreferrer" href="https://github.com/jaypyles/www-scrape/blob/master/docs/logo_picture.png"><img src="https://github.com/jaypyles/www-scrape/raw/master/docs/logo_picture.png" alt="Scraperr Logo" width="250px"></a></p><p dir="auto"><strong>A powerful self-hosted web scraping solution</strong></p>
  <p><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ec9b2bbaccf6915a29050ce24c10cd9b481b0c41b0bf5194add3e69f49a9be3c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6f6e676f44422d2532333465613934622e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d6d6f6e676f6462266c6f676f436f6c6f723d7768697465"><img src="https://camo.githubusercontent.com/ec9b2bbaccf6915a29050ce24c10cd9b481b0c41b0bf5194add3e69f49a9be3c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6f6e676f44422d2532333465613934622e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d6d6f6e676f6462266c6f676f436f6c6f723d7768697465" alt="MongoDB" data-canonical-src="https://img.shields.io/badge/MongoDB-%234ea94b.svg?style=for-the-badge&amp;logo=mongodb&amp;logoColor=white"></a>
    <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/e39929a378d51fbc2b819c60b41e25514a8e24e2e42889cd936e9365dc0d438d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f466173744150492d3030353537313f7374796c653d666f722d7468652d6261646765266c6f676f3d66617374617069"><img src="https://camo.githubusercontent.com/e39929a378d51fbc2b819c60b41e25514a8e24e2e42889cd936e9365dc0d438d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f466173744150492d3030353537313f7374796c653d666f722d7468652d6261646765266c6f676f3d66617374617069" alt="FastAPI" data-canonical-src="https://img.shields.io/badge/FastAPI-005571?style=for-the-badge&amp;logo=fastapi"></a>
    <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/d4ff95c6c85e810b4acfe5dbf01bf2b44680cf75945b21a7e5438c87b473f2c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4e6578742d626c61636b3f7374796c653d666f722d7468652d6261646765266c6f676f3d6e6578742e6a73266c6f676f436f6c6f723d7768697465"><img src="https://camo.githubusercontent.com/d4ff95c6c85e810b4acfe5dbf01bf2b44680cf75945b21a7e5438c87b473f2c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4e6578742d626c61636b3f7374796c653d666f722d7468652d6261646765266c6f676f3d6e6578742e6a73266c6f676f436f6c6f723d7768697465" alt="Next JS" data-canonical-src="https://img.shields.io/badge/Next-black?style=for-the-badge&amp;logo=next.js&amp;logoColor=white"></a>
    <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b2eac0f505dfd05c25acf8c285b5eb346916090126c8836c6cbf9aeb754eac32/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7461696c77696e646373732d2532333338423241432e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d7461696c77696e642d637373266c6f676f436f6c6f723d7768697465"><img src="https://camo.githubusercontent.com/b2eac0f505dfd05c25acf8c285b5eb346916090126c8836c6cbf9aeb754eac32/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7461696c77696e646373732d2532333338423241432e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d7461696c77696e642d637373266c6f676f436f6c6f723d7768697465" alt="TailwindCSS" data-canonical-src="https://img.shields.io/badge/tailwindcss-%2338B2AC.svg?style=for-the-badge&amp;logo=tailwind-css&amp;logoColor=white"></a>
  </p>
</div>
<p dir="auto"><h2 tabindex="-1" dir="auto">📋 Overview</h2><a id="user-content--overview" aria-label="Permalink: 📋 Overview" href="#-overview"></a></p>
<p dir="auto">Scraperr enables you to extract data from websites with precision using XPath selectors. This self-hosted application provides a clean interface to manage scraping jobs, view results, and export data.</p>
<blockquote>
<p dir="auto">📚 <strong><a href="https://scraperr-docs.pages.dev/" rel="nofollow">Check out the docs</a></strong> for a comprehensive quickstart guide and detailed information.</p>
</blockquote>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/jaypyles/www-scrape/blob/master/docs/main_page.png"><img src="https://github.com/jaypyles/www-scrape/raw/master/docs/main_page.png" alt="Scraperr Main Interface" width="800px"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">✨ Key Features</h2><a id="user-content--key-features" aria-label="Permalink: ✨ Key Features" href="#-key-features"></a></p>
<ul dir="auto">
<li><strong>XPath-Based Extraction</strong>: Precisely target page elements</li>
<li><strong>Queue Management</strong>: Submit and manage multiple scraping jobs</li>
<li><strong>Domain Spidering</strong>: Option to scrape all pages within the same domain</li>
<li><strong>Custom Headers</strong>: Add JSON headers to your scraping requests</li>
<li><strong>Media Downloads</strong>: Automatically download images, videos, and other media</li>
<li><strong>Results Visualization</strong>: View scraped data in a structured table format</li>
<li><strong>Data Export</strong>: Export your results in various formats</li>
<li><strong>Notifcation Channels</strong>: Send completion notifcations, through various channels</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 Getting Started</h2><a id="user-content--getting-started" aria-label="Permalink: 🚀 Getting Started" href="#-getting-started"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">⚖️ Legal and Ethical Guidelines</h2><a id="user-content-️-legal-and-ethical-guidelines" aria-label="Permalink: ⚖️ Legal and Ethical Guidelines" href="#️-legal-and-ethical-guidelines"></a></p>
<p dir="auto">When using Scraperr, please remember to:</p>
<ol dir="auto">
<li><strong>Respect <code>robots.txt</code></strong>: Always check a website's <code>robots.txt</code> file to verify which pages permit scraping</li>
<li><strong>Terms of Service</strong>: Adhere to each website's Terms of Service regarding data extraction</li>
<li><strong>Rate Limiting</strong>: Implement reasonable delays between requests to avoid overloading servers</li>
</ol>
<blockquote>
<p dir="auto"><strong>Disclaimer</strong>: Scraperr is intended for use only on websites that explicitly permit scraping. The creator accepts no responsibility for misuse of this tool.</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">📄 License</h2><a id="user-content--license" aria-label="Permalink: 📄 License" href="#-license"></a></p>
<p dir="auto">This project is licensed under the MIT License. See the <a href="https://github.com/jaypyles/Scraperr/blob/master/LICENSE">LICENSE</a> file for details.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">👏 Contributions</h2><a id="user-content--contributions" aria-label="Permalink: 👏 Contributions" href="#-contributions"></a></p>
<p dir="auto">Development made easier with the <a href="https://github.com/jaypyles/webapp-template">webapp template</a>.</p>
<p dir="auto">To get started, simply run <code>make build up-dev</code>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Car companies are in a billion-dollar software war (286 pts)]]></title>
            <link>https://insideevs.com/features/759153/car-companies-software-companies/</link>
            <guid>43955525</guid>
            <pubDate>Sun, 11 May 2025 17:51:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://insideevs.com/features/759153/car-companies-software-companies/">https://insideevs.com/features/759153/car-companies-software-companies/</a>, See on <a href="https://news.ycombinator.com/item?id=43955525">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                                                    
                        <p>Ford announced this week that&nbsp;<a href="https://www.reuters.com/business/autos-transportation/ford-kills-project-develop-tesla-like-electronic-brain-2025-04-30/" target="_blank" rel="noopener noreferrer">it is merging FNV4</a>, its project to develop a next-generation electrical architecture designed to unlock new functionality and upgradeability for both EVs and internal-combustion cars, with its existing architecture, seemingly confirming reports that the project has not gone as planned. It’s another in a long, long line of false starts in the race for legacy automakers to develop true “<a href="https://insideevs.com/features/755649/software-defined-vehicle-explainer-101/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22755649%22%2C%22section%22%3A%223%22%2C%22alias%22%3A%22software-defined-vehicle-explainer-101%22%7D">software-defined vehicles</a>” (SDVs), and further proof of just how hard the task is.</p>
<p>It’ll be worth the effort. Software-first architectures reduce costs, increase flexibility and—perhaps most importantly—allow automakers to move faster, without being slowed down by a complex web of suppliers creating their own code. Though becoming a leader in SDVs will be just as challenging as becoming an electric vehicle powerhouse, it’s also equally important. Consumers have had it with clunky, slow automotive technology, and the modern car is so computerized that a seamless electronic interface is an absolute necessity.</p>
<p>None of the legacy automakers has solved this problem yet. All of them have thrown billions at it. Only some of them will complete the transformation.</p>

<h2><span><svg><use xlink:href=""></use></svg></span>What Is A Software-Defined Vehicle?</h2>
<p><a href="https://insideevs.com/tesla/" data-inline-widget="internal-links">Tesla</a> invented the software-defined vehicle with the launch of the original <a href="https://insideevs.com/tesla/model-s/" data-inline-widget="internal-links">Model S</a>. While previous cars had plenty of software onboard, they all used a different approach. Electronic control units (ECUs) with supplier-sourced software would control groups of features or individual modules. Cars would have one computer handling, say, HVAC systems, and another for the lighting. Each of these computers was networked via <a href="https://www.csselectronics.com/pages/can-bus-simple-intro-tutorial" target="_blank" rel="noopener noreferrer">CAN bus</a>, an old-school network with limited bandwidth.&nbsp;</p>
<section contenteditable="false" draggable="true" data-widget="special_image" data-align="center" data-source="{&quot;source_id&quot;:&quot;895&quot;,&quot;title&quot;:&quot;Tesla&quot;}"><span>
    <svg>
        <use xlink:href="https://insideevs.com/design/dist/critical/icons/sprite-common-0-c22b9e1b69b591f36313a4760a61b994.svg#semidir"></use>
    </svg>
</span> <p><a href="https://cdn.motor1.com/images/custom/tesla-model-s-interior.jpeg"> <img draggable="false" src="https://cdn.motor1.com/images/custom/thumbnail/tesla-model-s-interior.jpeg" alt="An original Tesla Model S interior at night" width="1420" height="752" loading="lazy"> </a></p> <p>This was the original software-defined vehicle, the Tesla Model S.</p> <p>Photo by: Tesla</p> </section>
<p>Updates were done at dealers, and since that process was expensive, automakers only updated things when they had to, for safety, security or reliability reasons. This meant that software had to be fully validated and finalized before the product entered production, according to Sam Abuelsamid, vice president of market research at auto intel firm Telemetry.&nbsp;</p>
<p>But Tesla changed the game. The Model S was designed from the get-go to be updatable over-the-air, and since it didn’t rely on legacy suppliers, it used far fewer ECUs than its competitors. Most software duties were handled by a centralized computer, with only certain safety-critical systems getting their own computers. This simplified wiring, reduced production costs and allowed Tesla to make the car better over time.</p>
<p>The updatability was both broad and deep. One example Abuesamid offers: When the <a href="https://insideevs.com/tesla/model-3/" data-inline-widget="internal-links">Model 3</a> first came out, it took far too long to stop in <a href="https://www.consumerreports.org/hybrids-evs/tesla-model-3-review-falls-short-of-consumer-reports-recommendation/#:~:text=Editor's%20Note%3A%20In%20response%20to,more%20affordable%20mass%2Dmarket%20car." target="_blank" rel="noopener noreferrer">Consumer Reports testing</a>, thanks to bad anti-lock braking system (ABS) calibration. Tesla was able to fix this with a software update over the air, something no one else could do for a braking system. That was impressive, but the example presented a worrying question: Did engineers not do stopping-distance testing before they shipped the car to customers?&nbsp;&nbsp;</p>
<section contenteditable="false" draggable="true" data-widget="image" data-border="" data-id="5917237">
        <span>
            <svg>
                <use xlink:href="https://insideevs.com/design/dist/critical/icons/sprite-common-0-c22b9e1b69b591f36313a4760a61b994.svg#semidir"></use>
            </svg>
        </span>
    <picture>
        <source type="image/webp" srcset="
            https://cdn.motor1.com/images/mgl/WmQrj/s5/2018-tesla-model-3.webp 213w,
            https://cdn.motor1.com/images/mgl/WmQrj/s6/2018-tesla-model-3.webp 445w,
            https://cdn.motor1.com/images/mgl/WmQrj/s4/2018-tesla-model-3.webp 889w,
            https://cdn.motor1.com/images/mgl/WmQrj/s3/2018-tesla-model-3.webp 1280w,
            https://cdn.motor1.com/images/mgl/WmQrj/s2/2018-tesla-model-3.webp 1440w,
            https://cdn.motor1.com/images/mgl/WmQrj/s1/2018-tesla-model-3.webp 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <source type="image/jpeg" srcset="
            https://cdn.motor1.com/images/mgl/WmQrj/s5/2018-tesla-model-3.jpg 213w,
            https://cdn.motor1.com/images/mgl/WmQrj/s6/2018-tesla-model-3.jpg 445w,
            https://cdn.motor1.com/images/mgl/WmQrj/s4/2018-tesla-model-3.jpg 889w,
            https://cdn.motor1.com/images/mgl/WmQrj/s3/2018-tesla-model-3.jpg 1280w,
            https://cdn.motor1.com/images/mgl/WmQrj/s2/2018-tesla-model-3.jpg 1440w,
            https://cdn.motor1.com/images/mgl/WmQrj/s1/2018-tesla-model-3.jpg 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <img src="https://cdn.motor1.com/images/static/16x9-tr.png" alt="2018 Tesla Model 3" width="16" height="9" loading="lazy">
    </picture>
    <p>The Tesla Model 3 brought the SDV to a mass-market audience, but its early quality issues show why the move-fast and fix-it-later approach can be problematic.</p>
    
</section>
<p>Thus, the double-edged sword of SDVs. They are more upgradeable and flexible than their predecessors, but that advantage allows companies to deliver under-baked software with a “fix it later” approach.</p>
<h2><span><svg><use xlink:href=""></use></svg></span>Teething Issues</h2>
<p>Evidence of that dichotomy is not hard to find. As automakers have introduced vehicles with more advanced computing and electrical architectures, they have also struggled to deliver bug-free software on time.</p>
<p>General Motors <a href="https://insideevs.com/features/709703/gm-ultium-problems-software-batteries/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22709703%22%2C%22section%22%3A%223%22%2C%22alias%22%3A%22gm-ultium-problems-software-batteries%22%7D">provided America’s most salient example</a>. Its <a href="https://www.theautopian.com/a-history-of-gm-software-and-how-a-new-quality-lab-aims-to-fix-the-companys-recent-problems/" target="_blank" rel="noopener noreferrer">Vehicle Intelligence Platform</a> (VIP) uses a CAN bus system alongside ethernet connections. That allows for more networked features, including things like Super Cruise hands-free driving and key modules that can be updated over-the-air. But troubles with the platform also ruined the launch of products like the <a href="https://insideevs.com/gmc/hummer-ev/" data-inline-widget="internal-links">Hummer EV</a>, <a href="https://insideevs.com/reviews/729569/cadillac-lyriq-ev-review-2024/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22729569%22%2C%22section%22%3A%222%22%2C%22alias%22%3A%22cadillac-lyriq-ev-review-2024%22%7D">Cadillac Lyriq</a> and <a href="https://insideevs.com/chevrolet/blazer-ev/" data-inline-widget="internal-links">Chevy Blazer EV</a>. All of them were wracked with software issues, <a href="https://insideevs.com/reviews/701169/2024-blazer-ev-stranded-broken/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22701169%22%2C%22section%22%3A%222%22%2C%22alias%22%3A%222024-blazer-ev-stranded-broken%22%7D">one of which stranded our man Kevin Williams</a>. And a truly centralized platform remains on the horizon.&nbsp;</p>
<section contenteditable="false" draggable="true" data-widget="related-content" data-widget-size="content" data-params="%7B%22type_id%22%3A0%2C%22title_id%22%3A%22%22%2C%22items%22%3A%5B%7B%22article_edition_id%22%3A%22709703%22%2C%22title%22%3A%22How%20GM's%20Ultium%20Electric%20Car%20Revolution%20Went%20Off%20The%20Rails%22%2C%22alias%22%3A%22gm-ultium-problems-software-batteries%22%2C%22section%22%3A%223%22%2C%22is_video%22%3A%220%22%2C%22images%22%3A%7B%22s5%22%3A%22https%3A%2F%2Fcdn.motor1.com%2Fimages%2Fmgl%2F9myYZ1%2Fs5%2Fgm-ultium-top-3.jpg%22%7D%7D%2C%7B%22article_edition_id%22%3A%22701169%22%2C%22title%22%3A%22The%202024%20Chevrolet%20Blazer%20EV%20Left%20Me%20Stranded%20In%20Rural%20Virginia%22%2C%22alias%22%3A%222024-blazer-ev-stranded-broken%22%2C%22section%22%3A%222%22%2C%22is_video%22%3A%220%22%2C%22images%22%3A%7B%22s5%22%3A%22https%3A%2F%2Fcdn.motor1.com%2Fimages%2Fmgl%2F0eNXkj%2Fs5%2Fblazer-ev-trip-1.jpg%22%7D%7D%2C%7B%22article_edition_id%22%3A%22753673%22%2C%22title%22%3A%22VW%20Group%E2%80%99s%20Cariad%20Software%20Division%20Had%20A%20Bad%20Year.%20Again%22%2C%22alias%22%3A%22vw-group-cariad-billions-losses-2024%22%2C%22section%22%3A%221%22%2C%22is_video%22%3A%220%22%2C%22images%22%3A%7B%22s5%22%3A%22https%3A%2F%2Fcdn.motor1.com%2Fimages%2Fmgl%2FZnKqeo%2Fs5%2Fvolkswagen-id.7-interior-prototype.jpg%22%7D%7D%2C%7B%22article_edition_id%22%3A%22729645%22%2C%22title%22%3A%22A%20Volvo%20EX30%20Impressed%20This%20Reviewer.%20Then%20It%20Suddenly%20Died%22%2C%22alias%22%3A%22volvo-ex30-dies-during-review%22%2C%22section%22%3A%222%22%2C%22is_video%22%3A%221%22%2C%22images%22%3A%7B%22s5%22%3A%22https%3A%2F%2Fcdn.motor1.com%2Fimages%2Fmgl%2FNGeRXG%2Fs5%2Fral43bcr3te.jpg%22%7D%7D%2C%7B%22article_edition_id%22%3A%22755649%22%2C%22title%22%3A%22From%20Tesla%20To%20Toyota%3A%20How%20Software%20Is%20Hitting%20Reset%20On%20Cars%22%2C%22alias%22%3A%22software-defined-vehicle-explainer-101%22%2C%22section%22%3A%223%22%2C%22is_video%22%3A%220%22%2C%22images%22%3A%7B%22s5%22%3A%22https%3A%2F%2Fcdn.motor1.com%2Fimages%2Fmgl%2F8Ax3Ae%2Fs5%2Fsdv-top-1.jpg%22%7D%7D%2C%7B%22article_edition_id%22%3A%22752270%22%2C%22title%22%3A%22Rivian%20Will%20Unlock%20More%20Range%20For%20The%20R1S%20And%20R1T%20Via%20A%20Paid%20Software%20Upgrade%22%2C%22alias%22%3A%22rivian-paid-range-unlock-performance-upgrade%22%2C%22section%22%3A%221%22%2C%22is_video%22%3A%220%22%2C%22images%22%3A%7B%22s5%22%3A%22https%3A%2F%2Fcdn.motor1.com%2Fimages%2Fmgl%2F3W43eK%2Fs5%2F2025-rivian-r1t-review.jpg%22%7D%7D%5D%7D"> <p>More Software Stories</p>  </section>
<p>Volvo also struggled with scaling its platform. It’s proud of the fact that the <a href="https://insideevs.com/volvo/ex90/" data-inline-widget="internal-links">EX90</a> and <a href="https://insideevs.com/news/740089/volvo-ex30-us-debut-price/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22740089%22%2C%22section%22%3A%221%22%2C%22alias%22%3A%22volvo-ex30-us-debut-price%22%7D">EX30</a> are true software-defined EVs. They have a centralized computing system, a simpler electrical architecture and a software stack that is designed to get better continuously. But delivering it was a nightmare. The company delayed the EX30 and EX90, and then shipped them with <a href="https://insideevs.com/reviews/729645/volvo-ex30-dies-during-review/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22729645%22%2C%22section%22%3A%222%22%2C%22alias%22%3A%22volvo-ex30-dies-during-review%22%7D">plenty of bugs</a> and <a href="https://insideevs.com/reviews/731827/2025-volvo-ex90-first-drive/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22731827%22%2C%22section%22%3A%222%22%2C%22alias%22%3A%222025-volvo-ex90-first-drive%22%7D">missing features</a>. Still, the Volvo EX30, EX90 and related Polestar 4 are SDVs you can buy in the U.S. today.</p>
<p>Ford’s FNV4 was its next big move, and according to Abuelsamid, it was supposed to be out already. The platform was going to underpin vehicles like Ford’s planned electric three-row SUV, which the company <a href="https://insideevs.com/news/730891/ford-three-row-electric-suv-dead/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22730891%22%2C%22section%22%3A%221%22%2C%22alias%22%3A%22ford-three-row-electric-suv-dead%22%7D">abruptly canceled last year.</a> According to Abuelsamid, the software wasn’t ready. Now, some improvements from FNV4 are being folded into Ford’s existing FNV3 architecture.&nbsp;</p>
<section contenteditable="false" draggable="true" data-widget="image" data-border="" data-id="8026107">
        <span>
            <svg>
                <use xlink:href="https://insideevs.com/design/dist/critical/icons/sprite-common-0-c22b9e1b69b591f36313a4760a61b994.svg#semidir"></use>
            </svg>
        </span>
    <picture>
        <source type="image/webp" srcset="
            https://cdn.motor1.com/images/mgl/1ZEMxL/s5/chevy-blazer-ev-long-term-owner-review.webp 213w,
            https://cdn.motor1.com/images/mgl/1ZEMxL/s6/chevy-blazer-ev-long-term-owner-review.webp 445w,
            https://cdn.motor1.com/images/mgl/1ZEMxL/s4/chevy-blazer-ev-long-term-owner-review.webp 889w,
            https://cdn.motor1.com/images/mgl/1ZEMxL/s3/chevy-blazer-ev-long-term-owner-review.webp 1280w,
            https://cdn.motor1.com/images/mgl/1ZEMxL/s2/chevy-blazer-ev-long-term-owner-review.webp 1440w,
            https://cdn.motor1.com/images/mgl/1ZEMxL/s1/chevy-blazer-ev-long-term-owner-review.webp 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <source type="image/jpeg" srcset="
            https://cdn.motor1.com/images/mgl/1ZEMxL/s5/chevy-blazer-ev-long-term-owner-review.jpg 213w,
            https://cdn.motor1.com/images/mgl/1ZEMxL/s6/chevy-blazer-ev-long-term-owner-review.jpg 445w,
            https://cdn.motor1.com/images/mgl/1ZEMxL/s4/chevy-blazer-ev-long-term-owner-review.jpg 889w,
            https://cdn.motor1.com/images/mgl/1ZEMxL/s3/chevy-blazer-ev-long-term-owner-review.jpg 1280w,
            https://cdn.motor1.com/images/mgl/1ZEMxL/s2/chevy-blazer-ev-long-term-owner-review.jpg 1440w,
            https://cdn.motor1.com/images/mgl/1ZEMxL/s1/chevy-blazer-ev-long-term-owner-review.jpg 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <img src="https://cdn.motor1.com/images/static/16x9-tr.png" alt="Chevy Blazer EV Long term owner review" width="16" height="9" loading="lazy">
    </picture>
    <p>My Blazer EV has gotten a few software updates since I got it eight months ago, but one of them still had to happen at the dealer.</p>
    <p>Photo by: Mack Hogan/InsideEVs</p>
</section>
<p>Still, Abuelsamid says Ford’s current position is “way better than it was two years ago.”</p>
<p>Then there’s Volkswagen, which made a big bet on software development with its captive software arm, Cariad. Despite the early start and plenty of money, though, <a href="https://insideevs.com/news/753673/vw-group-cariad-billions-losses-2024/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22753673%22%2C%22section%22%3A%221%22%2C%22alias%22%3A%22vw-group-cariad-billions-losses-2024%22%7D">Cariad was a disaster</a>. VW tried to <a href="https://insideevs.com/news/693654/volkswagen-group-cariad-job-cuts/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22693654%22%2C%22section%22%3A%221%22%2C%22alias%22%3A%22volkswagen-group-cariad-job-cuts%22%7D">reshuffle the company a few times</a> and utterly failed to turn it around. Now, with its SDV plans way off track, VW is outsourcing key software tasks to Mobileye, Chinese partners and Rivian. It is, as Abuelsamid put it, a “clusterf—.”</p>
<p><a href="https://insideevs.com/news/740871/rivian-volkswagen-software-venture-cm/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22740871%22%2C%22section%22%3A%221%22%2C%22alias%22%3A%22rivian-volkswagen-software-venture-cm%22%7D">The Rivian deal</a> will at least allow the company to get its own “<a href="https://insideevs.com/features/724945/zonal-architecture-software-define-electric-car/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22724945%22%2C%22section%22%3A%223%22%2C%22alias%22%3A%22zonal-architecture-software-define-electric-car%22%7D">zonal architecture</a>,” the latest buzzword that refers to a new, more efficient way to lay out electrical architecture in SDVs. But Volkswagen needs to learn how to do this itself, so relyihng on others isn’t the best option in the long run.&nbsp;</p>
<section contenteditable="false" draggable="true" data-widget="image" data-border="" data-id="7813227">
        <span>
            <svg>
                <use xlink:href="https://insideevs.com/design/dist/critical/icons/sprite-common-0-c22b9e1b69b591f36313a4760a61b994.svg#semidir"></use>
            </svg>
        </span>
    <picture>
        <source type="image/webp" srcset="
            https://cdn.motor1.com/images/mgl/eoOkbW/s5/rivian-zonal-architecture.webp 213w,
            https://cdn.motor1.com/images/mgl/eoOkbW/s6/rivian-zonal-architecture.webp 445w,
            https://cdn.motor1.com/images/mgl/eoOkbW/s4/rivian-zonal-architecture.webp 889w,
            https://cdn.motor1.com/images/mgl/eoOkbW/s3/rivian-zonal-architecture.webp 1280w,
            https://cdn.motor1.com/images/mgl/eoOkbW/s2/rivian-zonal-architecture.webp 1440w,
            https://cdn.motor1.com/images/mgl/eoOkbW/s1/rivian-zonal-architecture.webp 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <source type="image/jpeg" srcset="
            https://cdn.motor1.com/images/mgl/eoOkbW/s5/rivian-zonal-architecture.jpg 213w,
            https://cdn.motor1.com/images/mgl/eoOkbW/s6/rivian-zonal-architecture.jpg 445w,
            https://cdn.motor1.com/images/mgl/eoOkbW/s4/rivian-zonal-architecture.jpg 889w,
            https://cdn.motor1.com/images/mgl/eoOkbW/s3/rivian-zonal-architecture.jpg 1280w,
            https://cdn.motor1.com/images/mgl/eoOkbW/s2/rivian-zonal-architecture.jpg 1440w,
            https://cdn.motor1.com/images/mgl/eoOkbW/s1/rivian-zonal-architecture.jpg 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <img src="https://cdn.motor1.com/images/static/16x9-tr.png" alt="Rivian Zonal Architecture" width="16" height="9" loading="lazy">
    </picture>
    <p>"Zonal architectures" are the next big thing in electrical system design, allowing companies to reduce complexity by running almost all functions through one of a few core computers distributed throughout the vehicle.</p>
    
</section>
<p>“It’s not an ideal solution,” Abuelsamid said.</p>
<p>As for everyone else, they’re all a few years away from having any proper SDVs on the road. Stellantis has been cautious with its rollout, but it’s working hard on its STLA Brain project. BMW is promising a generational leap in <a href="https://insideevs.com/news/746351/bmw-panoramic-idrive-vision-more-screens/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22746351%22%2C%22section%22%3A%221%22%2C%22alias%22%3A%22bmw-panoramic-idrive-vision-more-screens%22%7D">SDV tech with its Neue Class</a> line of Vehicles. Mercedes has its true SDV platform launching on the CLA later this year, even if that car is looking a little less exciting after <a href="https://insideevs.com/news/758859/mercedes-cla-ev-400v-charging-impossible/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22758859%22%2C%22section%22%3A%221%22%2C%22alias%22%3A%22mercedes-cla-ev-400v-charging-impossible%22%7D">this week’s news</a>.</p>
<p>Japanese and Korean companies remain further behind. Hyundai and Kia are transitioning to more software-driven vehicles, but their existing products feel a generation behind what GM’s doing and two generations behind Tesla. Toyota has brought much of its software team in-house and set up a major operation in the U.S., but is far from offering a true SDV. Honda’s existing products are legacy through and through, but it says the 0 Series EVs will use a <a href="https://insideevs.com/news/746798/honda-0-series-ai-driving/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22746798%22%2C%22section%22%3A%221%22%2C%22alias%22%3A%22honda-0-series-ai-driving%22%7D">true SDV platform with AI integration</a> and a smart assistant, Asimo.&nbsp;</p>
<section contenteditable="false" draggable="true" data-widget="image" data-border="" data-id="8001491">
        <span>
            <svg>
                <use xlink:href="https://insideevs.com/design/dist/critical/icons/sprite-common-0-c22b9e1b69b591f36313a4760a61b994.svg#semidir"></use>
            </svg>
        </span>
    <picture>
        <source type="image/webp" srcset="
            https://cdn.motor1.com/images/mgl/wlqN1Q/s5/06-asimo-os-copy.webp 213w,
            https://cdn.motor1.com/images/mgl/wlqN1Q/s6/06-asimo-os-copy.webp 445w,
            https://cdn.motor1.com/images/mgl/wlqN1Q/s4/06-asimo-os-copy.webp 889w,
            https://cdn.motor1.com/images/mgl/wlqN1Q/s3/06-asimo-os-copy.webp 1280w,
            https://cdn.motor1.com/images/mgl/wlqN1Q/s2/06-asimo-os-copy.webp 1440w,
            https://cdn.motor1.com/images/mgl/wlqN1Q/s1/06-asimo-os-copy.webp 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <source type="image/jpeg" srcset="
            https://cdn.motor1.com/images/mgl/wlqN1Q/s5/06-asimo-os-copy.jpg 213w,
            https://cdn.motor1.com/images/mgl/wlqN1Q/s6/06-asimo-os-copy.jpg 445w,
            https://cdn.motor1.com/images/mgl/wlqN1Q/s4/06-asimo-os-copy.jpg 889w,
            https://cdn.motor1.com/images/mgl/wlqN1Q/s3/06-asimo-os-copy.jpg 1280w,
            https://cdn.motor1.com/images/mgl/wlqN1Q/s2/06-asimo-os-copy.jpg 1440w,
            https://cdn.motor1.com/images/mgl/wlqN1Q/s1/06-asimo-os-copy.jpg 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <img src="https://cdn.motor1.com/images/static/16x9-tr.png" alt="06 ASIMO OS copy" width="16" height="9" loading="lazy">
    </picture>
    <p>Honda's 0 Series Saloon concept previews its upcoming software-defined vehicle.</p>
    <p>Photo by: Honda</p>
</section>
<p>All of these future products will likely have teething issues. Because even with deep pockets, this is not an easy transition. But automakers need to push through if they want to create affordable, upgradeable EVs with streamlined user experiences. As customers of Rivian, Tesla and many Chinese brands have proven, once you use a true <a href="https://insideevs.com/news/677548/brand-loyalty-is-dying-but-not-tesla/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22677548%22%2C%22section%22%3A%221%22%2C%22alias%22%3A%22brand-loyalty-is-dying-but-not-tesla%22%7D">SDV you rarely go back to a legacy product</a>. It’s a smoother, more modern experience.</p>
<h2><span><svg><use xlink:href=""></use></svg></span>Why It’s So Hard</h2>
<p>From the outside, it may be hard to understand why creating a software-defined vehicle is still hard in 2025. These legacy companies have poached big hitters from Apple, Tesla and Google. They’ve sunk billions into it. They have decades of experience with software-controlled modules. From the clouds, it all seems doable.</p>
<p>Yet on the ground, it’s a nightmare. Automakers are not redesigning software. They are reworking how their entire organizations approach software.</p>
<p>These are companies that have typically seen software as a problem to be solved, not a design to be experienced. Engineers at GM, Ford and Toyota have spent decades using an approach to software that was silo’d, minimally tolerant of risk and designed to remain unchanged through the vehicle’s 20-year life cycle.</p>
<section contenteditable="false" draggable="true" data-widget="image" data-border="" data-id="8075677">
        <span>
            <svg>
                <use xlink:href="https://insideevs.com/design/dist/critical/icons/sprite-common-0-c22b9e1b69b591f36313a4760a61b994.svg#semidir"></use>
            </svg>
        </span>
    <picture>
        <source type="image/webp" srcset="
            https://cdn.motor1.com/images/mgl/BXyyYM/s5/hyundai-motor-group-s-pleos-software-brand.webp 213w,
            https://cdn.motor1.com/images/mgl/BXyyYM/s6/hyundai-motor-group-s-pleos-software-brand.webp 445w,
            https://cdn.motor1.com/images/mgl/BXyyYM/s4/hyundai-motor-group-s-pleos-software-brand.webp 889w,
            https://cdn.motor1.com/images/mgl/BXyyYM/s3/hyundai-motor-group-s-pleos-software-brand.webp 1280w,
            https://cdn.motor1.com/images/mgl/BXyyYM/s2/hyundai-motor-group-s-pleos-software-brand.webp 1440w,
            https://cdn.motor1.com/images/mgl/BXyyYM/s1/hyundai-motor-group-s-pleos-software-brand.webp 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <source type="image/jpeg" srcset="
            https://cdn.motor1.com/images/mgl/BXyyYM/s5/hyundai-motor-group-s-pleos-software-brand.jpg 213w,
            https://cdn.motor1.com/images/mgl/BXyyYM/s6/hyundai-motor-group-s-pleos-software-brand.jpg 445w,
            https://cdn.motor1.com/images/mgl/BXyyYM/s4/hyundai-motor-group-s-pleos-software-brand.jpg 889w,
            https://cdn.motor1.com/images/mgl/BXyyYM/s3/hyundai-motor-group-s-pleos-software-brand.jpg 1280w,
            https://cdn.motor1.com/images/mgl/BXyyYM/s2/hyundai-motor-group-s-pleos-software-brand.jpg 1440w,
            https://cdn.motor1.com/images/mgl/BXyyYM/s1/hyundai-motor-group-s-pleos-software-brand.jpg 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <img src="https://cdn.motor1.com/images/static/16x9-tr.png" alt="Hyundai Motor Group's Pleos software brand" width="16" height="9" loading="lazy">
    </picture>
    <p>Hyundai will launch a new software experience under the "Pleos Connect" brand.</p>
    <p>Photo by: Hyundai</p>
</section>
<p>Now, they need to make compelling apps, slick new features and all-new electrical architectures that neither the companies nor their suppliers are used to using. They need to build Tesla-level upgradeability with far less willingness to ship unfinished goods, all while tucking it behind a military-grade firewall to ensure your car can’t be remotely hacked.</p>
<p>“The challenging part is these companies need to merge their development philosophies,” Abuelsamid says, keeping the safety-first mindset while also getting faster, more creative and bolder.</p>
<p>Plus, as Ford SDV project boss <a href="https://www.theverge.com/ford-motor-company/661205/ford-doug-field-interview-software-zonal-domain-fnv4" target="_blank" rel="noopener noreferrer">Doug Field tells <em>The Verge</em></a>, slower-than-expected EV sales mean they need to build systems that can also work with internal-combustion vehicles. That’s a major challenge, as EVs have a big battery that can power their electronics round-the-clock, enabling big over-the-air updates. When you only have a puny 12-volt to keep things moving, you’re going to run out of juice pretty quick.&nbsp;&nbsp;</p>
<p>Finally, they have to navigate all of these issues while not scaring off customers. GM has been more aggressive and, I’d argue, successful with SDVs than competitors, but <a href="https://insideevs.com/reviews/726471/gm-carplay-cadillac-lyriq-review/" data-inline-widget="internal-links" data-type-id="0" data-params="%7B%22article_edition_id%22%3A%22726471%22%2C%22section%22%3A%222%22%2C%22alias%22%3A%22gm-carplay-cadillac-lyriq-review%22%7D">its anti-Apple CarPlay</a> stance has also scared off plenty of buyers. Plus, as automakers have moved more controls into their central displays, they’ve faced more consumer complaints and confusion.</p>
<h2><span><svg><use xlink:href=""></use></svg></span>So Who Wins?</h2>
<p>The clear leaders here are the companies that weren’t already locked into the old-world approach to automotive software. Tesla, Rivian, Lucid and almost all of the Chinese automakers have built ground-up systems that work without legacy bloat.&nbsp;</p>
<section contenteditable="false" draggable="true" data-widget="image" data-border="" data-id="7501943">
        <span>
            <svg>
                <use xlink:href="https://insideevs.com/design/dist/critical/icons/sprite-common-0-c22b9e1b69b591f36313a4760a61b994.svg#semidir"></use>
            </svg>
        </span>
    <picture>
        <source type="image/webp" srcset="
            https://cdn.motor1.com/images/mgl/7Zv14q/s5/rivian-software-updates.webp 213w,
            https://cdn.motor1.com/images/mgl/7Zv14q/s6/rivian-software-updates.webp 445w,
            https://cdn.motor1.com/images/mgl/7Zv14q/s4/rivian-software-updates.webp 889w,
            https://cdn.motor1.com/images/mgl/7Zv14q/s3/rivian-software-updates.webp 1280w,
            https://cdn.motor1.com/images/mgl/7Zv14q/s2/rivian-software-updates.webp 1440w,
            https://cdn.motor1.com/images/mgl/7Zv14q/s1/rivian-software-updates.webp 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <source type="image/jpeg" srcset="
            https://cdn.motor1.com/images/mgl/7Zv14q/s5/rivian-software-updates.jpg 213w,
            https://cdn.motor1.com/images/mgl/7Zv14q/s6/rivian-software-updates.jpg 445w,
            https://cdn.motor1.com/images/mgl/7Zv14q/s4/rivian-software-updates.jpg 889w,
            https://cdn.motor1.com/images/mgl/7Zv14q/s3/rivian-software-updates.jpg 1280w,
            https://cdn.motor1.com/images/mgl/7Zv14q/s2/rivian-software-updates.jpg 1440w,
            https://cdn.motor1.com/images/mgl/7Zv14q/s1/rivian-software-updates.jpg 1920w
        " sizes="(max-width: 767px) calc(100vw - 24px), (max-width: 1023px) calc(100vw - 48px), 644px">
        <img src="https://cdn.motor1.com/images/static/16x9-tr.png" alt="Rivian software updates" width="16" height="9" loading="lazy">
    </picture>
    <p>Rivian's software may not be as great as Tesla's, but it's far ahead of legacy automaker tech.</p>
    
</section>
<p>Everyone else is having to stumble their way towards that future, with varying levels of success. GM had the most high-profile struggles, but like BMW with early iDrive, the company’s willingness to stick it out seems to have produced an organization that’s ahead of its legacy peers on software. But it remains to be seen whether the company can take its approach further down the path to true SDVs.</p>
<p>BMW and Mercedes are close to launching theirs, while the fruits of the VW-Rivian deal and Ford’s “skunkworks” next-gen EV project remain further out. As for the Korean and Japanese companies, all of the hard work is still ahead of them.</p>
<p>Tesla proved that a software-defined vehicle was a viable and desirable product. Chinese automakers proved that the software-first approach could be replicated and improved upon. Now, we need a legacy automaker to prove that you can turn a century-old hardware brand into a true software company. It’s possible, but we know now that it won’t be easy.</p>
<p>Contact the author: <a href="mailto:Mack.Hogan@insideevs.com">Mack.Hogan@insideevs.com</a>.&nbsp;</p>                        <!-- new gallery place, attached gallery -->
                        
                                                                            
                                                    

                                                    

                                                            
                                                        
                            
                            
                                                            
                                
                            
                                
                            
                                            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[LSP client in Clojure in 200 lines of code (123 pts)]]></title>
            <link>https://vlaaad.github.io/lsp-client-in-200-lines-of-code</link>
            <guid>43955397</guid>
            <pubDate>Sun, 11 May 2025 17:38:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://vlaaad.github.io/lsp-client-in-200-lines-of-code">https://vlaaad.github.io/lsp-client-in-200-lines-of-code</a>, See on <a href="https://news.ycombinator.com/item?id=43955397">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p><time datetime="2025-05-10 00:00:00 +0000">May 10, 2025</time>
    
  </p>

  
  

  <p>Awhile ago I was prototyping integrating LLMs with <a href="https://microsoft.github.io/language-server-protocol/">LSP</a> to enable a language model to answer questions about code while having access to code navigation tools provided by language servers. I wasn’t that successful with this prototype, but I found it cool that I could write a minimal LSP client in around 200 lines of code. Of course, it was very helpful that I previously wrote a much more featureful <a href="https://github.com/defold/defold/blob/dev/editor/src/clj/editor/lsp.clj">LSP client for the Defold editor</a>… So let me share with you a minimal LSP client, written in Clojure, in under 200 lines. Also, at the end of the post, I’ll share my thoughts on the LSP.</p>

<p>Who is the target audience of this blog post? I don’t even know… Clojure developers writing code editors? There are, like, 3 of us! Okay, let’s try to change the scope of this exercise a bit: let’s build a command line linter that uses a language server to do the work. Surely that wouldn’t be a problem…</p>

<h2 id="the-what">The what</h2>

<p>Some terminology and scope first. LSP stands for Language Server Protocol, a standard that defines how some text editor (a language client) should talk to some language-specific tool (a language server) that knows the semantics of a programming language and may provide contextual information like code navigation, refactoring, linting etc.</p>

<p>The main benefit of LSP is that the so called MxN problem of IDEs and languages becomes M+N with LSP. <a href="https://langserver.org/">Here is a good explanation</a>. In short, as a language author, previously you had to write integration for every code editor. Or, as an IDE author, you had to write a separate integration for every language. Now there is a common interface — LSP — and both language authors and IDE authors only need to support this interface.</p>

<p>In 200 LoC, we will implement essential blocks of the <a href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/">LSP Specification</a> that supports programmatic read-only querying of language servers. We will implement:</p>
<ol>
  <li>base communication layer between language client and server processes. It is similar to HTTP protocol: client and server talk to each other using byte streams with messages formatted as headers + JSON message bodies. The base layer establishes a way to exchange JSON blobs.</li>
  <li><a href="https://www.jsonrpc.org/">JSON-RPC</a> — a layer on top of the base layer that adds meaning to JSON blobs, turning them into either requests/responses, or notifications.</li>
  <li>A wrapper around JSON-RPC connection that is a leaving breathing language server we can talk to.</li>
</ol>

<p>We will use Java 24 with <a href="https://openjdk.org/jeps/425">virtual threads</a>: writing blocking code that performs and scales well is nice, sweet, and performant. Now, here are few things we will not implement:</p>
<ul>
  <li>JSON parser. I mean come on. We will just use a dependency. I picked <a href="https://github.com/metosin/jsonista/">jsonista</a> because it’s fast and has a cool name.</li>
  <li>Document syncing. When the user opens a file in a text editor and makes some changes to it without saving, the editor notifies running language servers about the new text of the open files. We are not building a text editor here, just a small PoC, so we’ll skip this.</li>
</ul>

<p>Now, Let’s go!</p>

<h2 id="the-how">The how</h2>

<p>If you just want to look at the code, <a href="https://github.com/vlaaad/lsp-clj-client/blob/main/src/io/github/vlaaad/lsp.clj">here it is</a>. Now I’ll walk you through it.</p>

<h2 id="base-layer">Base layer</h2>

<p>First, we start with a base communication layer. Language server runs in another process, so the communication happens over InputStream + OutputStream pair. We will run the language server as a process and we will communicate via stdin/stdout, so java Process will provide us the pair. Both client and server send and receive HTTP-like requests with JSON blobs. Each individual message looks like this:</p>
<div><pre><code>Content-Length: 14\r\n
\r\n
{"json": true}
</code></pre></div>
<p>First, there are 1 or more headers with a required <code>Content-Length</code> header, separated with <code>\r\n</code>. Then, an empty line. Then comes a JSON string. The headers are serialized using ASCII encoding (so 1 byte is always 1 char), the JSON blob uses UTF-8.</p>

<p>We start with <a href="https://github.com/vlaaad/lsp-clj-client/blob/main/src/io/github/vlaaad/lsp.clj#L12-L23">a function that reads a line of ascii text from InputStream</a>:</p>
<div><pre><code><span>(</span><span>defn-</span><span> </span><span>read-ascii-line</span><span> </span><span>[</span><span>^</span><span>InputStream</span><span> </span><span>in</span><span>]</span><span>
  </span><span>(</span><span>let</span><span> </span><span>[</span><span>sb</span><span> </span><span>(</span><span>StringBuilder.</span><span>)]</span><span>
    </span><span>(</span><span>loop</span><span> </span><span>[</span><span>carriage-return</span><span> </span><span>false</span><span>]</span><span>
      </span><span>(</span><span>let</span><span> </span><span>[</span><span>ch</span><span> </span><span>(</span><span>.read</span><span> </span><span>in</span><span>)]</span><span>
        </span><span>(</span><span>if</span><span> </span><span>(</span><span>=</span><span> </span><span>-1</span><span> </span><span>ch</span><span>)</span><span>
          </span><span>(</span><span>if</span><span> </span><span>(</span><span>zero?</span><span> </span><span>(</span><span>.length</span><span> </span><span>sb</span><span>))</span><span> </span><span>nil</span><span> </span><span>(</span><span>.toString</span><span> </span><span>sb</span><span>))</span><span>
          </span><span>(</span><span>let</span><span> </span><span>[</span><span>ch</span><span> </span><span>(</span><span>char</span><span> </span><span>ch</span><span>)]</span><span>
            </span><span>(</span><span>.append</span><span> </span><span>sb</span><span> </span><span>ch</span><span>)</span><span>
            </span><span>(</span><span>cond</span><span>
              </span><span>(</span><span>=</span><span> </span><span>ch</span><span> </span><span>\r</span><span>eturn</span><span>)</span><span> </span><span>(</span><span>recur</span><span> </span><span>true</span><span>)</span><span>
              </span><span>(</span><span>and</span><span> </span><span>carriage-return</span><span> </span><span>(</span><span>=</span><span> </span><span>ch</span><span> </span><span>\n</span><span>ewline</span><span>))</span><span> </span><span>(</span><span>.substring</span><span> </span><span>sb</span><span> </span><span>0</span><span> </span><span>(</span><span>-</span><span> </span><span>(</span><span>.length</span><span> </span><span>sb</span><span>)</span><span> </span><span>2</span><span>))</span><span>
              </span><span>:else</span><span> </span><span>(</span><span>recur</span><span> </span><span>false</span><span>))))))))</span><span>
</span></code></pre></div>
<p>So, we read characters byte by byte into a string until we get to <code>\r\n</code>. If we reached end of stream, we return <code>nil</code>. We can’t use BufferedReader’s <code>readLine</code> here for a few reasons:</p>
<ul>
  <li>it buffers, meaning it might read more than we want.</li>
  <li>it uses both <code>\n</code> and <code>\r\n</code> as line separators, while we only want <code>\r\n</code>.</li>
  <li>it uses a single encoding, while the communication channel uses a mix of ASCII and UTF-8.</li>
</ul>

<p>The next step is a single function that implements the whole <a href="https://github.com/vlaaad/lsp-clj-client/blob/main/src/io/github/vlaaad/lsp.clj#L25-L56">base communication layer</a>:</p>
<div><pre><code><span>(</span><span>defn-</span><span> </span><span>lsp-base</span><span> </span><span>[</span><span>^</span><span>InputStream</span><span> </span><span>in</span><span> </span><span>^</span><span>BlockingQueue</span><span> </span><span>server-in</span><span> </span><span>^</span><span>OutputStream</span><span> </span><span>out</span><span> </span><span>^</span><span>BlockingQueue</span><span> </span><span>server-out</span><span>]</span><span>
  </span><span>(</span><span>-&gt;</span><span> </span><span>(</span><span>Thread/ofVirtual</span><span>)</span><span>
      </span><span>(</span><span>.name</span><span> </span><span>"lsp-base-in"</span><span>)</span><span>
      </span><span>(</span><span>.start</span><span>
        </span><span>#</span><span>(</span><span>loop</span><span> </span><span>[]</span><span>
           </span><span>(</span><span>when-some</span><span> </span><span>[</span><span>headers</span><span> </span><span>(</span><span>loop</span><span> </span><span>[</span><span>acc</span><span> </span><span>{}]</span><span>
                                 </span><span>(</span><span>when-let</span><span> </span><span>[</span><span>line</span><span> </span><span>(</span><span>read-ascii-line</span><span> </span><span>in</span><span>)]</span><span>
                                   </span><span>(</span><span>if</span><span> </span><span>(</span><span>=</span><span> </span><span>""</span><span> </span><span>line</span><span>)</span><span>
                                     </span><span>acc</span><span>
                                     </span><span>(</span><span>if-let</span><span> </span><span>[[</span><span>_</span><span> </span><span>field</span><span> </span><span>value</span><span>]</span><span> </span><span>(</span><span>re-matches</span><span> </span><span>#</span><span>"^([^:]+):\s*(.+?)\s*$"</span><span> </span><span>line</span><span>)]</span><span>
                                       </span><span>(</span><span>recur</span><span> </span><span>(</span><span>assoc</span><span> </span><span>acc</span><span> </span><span>(</span><span>string/lower-case</span><span> </span><span>field</span><span>)</span><span> </span><span>value</span><span>))</span><span>
                                       </span><span>(</span><span>throw</span><span> </span><span>(</span><span>IllegalStateException.</span><span> </span><span>(</span><span>str</span><span> </span><span>"Can't parse header: "</span><span> </span><span>line</span><span>)))))))]</span><span>
             </span><span>(</span><span>let</span><span> </span><span>[</span><span>^</span><span>String</span><span> </span><span>content-length</span><span> </span><span>(</span><span>or</span><span> </span><span>(</span><span>get</span><span> </span><span>headers</span><span> </span><span>"content-length"</span><span>)</span><span>
                                              </span><span>(</span><span>throw</span><span> </span><span>(</span><span>IllegalStateException.</span><span> </span><span>"Required header missing: Content-Length"</span><span>)))</span><span>
                   </span><span>len</span><span> </span><span>(</span><span>Integer/valueOf</span><span> </span><span>content-length</span><span>)</span><span>
                   </span><span>bytes</span><span> </span><span>(</span><span>.readNBytes</span><span> </span><span>in</span><span> </span><span>len</span><span>)]</span><span>
               </span><span>(</span><span>if</span><span> </span><span>(</span><span>=</span><span> </span><span>(</span><span>alength</span><span> </span><span>bytes</span><span>)</span><span> </span><span>len</span><span>)</span><span>
                 </span><span>(</span><span>do</span><span> </span><span>(</span><span>.put</span><span> </span><span>server-in</span><span> </span><span>(</span><span>json/read-value</span><span> </span><span>(</span><span>String.</span><span> </span><span>bytes</span><span> </span><span>StandardCharsets/UTF_8</span><span>)</span><span> </span><span>json/keyword-keys-object-mapper</span><span>))</span><span>
                     </span><span>(</span><span>recur</span><span>))</span><span>
                 </span><span>(</span><span>throw</span><span> </span><span>(</span><span>IllegalStateException.</span><span> </span><span>"Couldn't read enough bytes"</span><span>))))))))</span><span>
  </span><span>(</span><span>-&gt;</span><span> </span><span>(</span><span>Thread/ofVirtual</span><span>)</span><span>
      </span><span>(</span><span>.name</span><span> </span><span>"lsp-base-out"</span><span>)</span><span>
      </span><span>(</span><span>.start</span><span>
        </span><span>#</span><span>(</span><span>while</span><span> </span><span>true</span><span>
           </span><span>(</span><span>let</span><span> </span><span>[</span><span>^</span><span>bytes</span><span> </span><span>message-bytes</span><span> </span><span>(</span><span>json/write-value-as-bytes</span><span> </span><span>(</span><span>.take</span><span> </span><span>server-out</span><span>))]</span><span>
             </span><span>(</span><span>doto</span><span> </span><span>out</span><span>
               </span><span>(</span><span>.write</span><span> </span><span>(</span><span>.getBytes</span><span> </span><span>(</span><span>str</span><span> </span><span>"Content-Length: "</span><span>
                                       </span><span>(</span><span>alength</span><span> </span><span>message-bytes</span><span>)</span><span>
                                       </span><span>"\r\nContent-Type: application/vscode-jsonrpc; charset=utf-8\r\n\r\n"</span><span>)</span><span>
                                  </span><span>StandardCharsets/UTF_8</span><span>))</span><span>
               </span><span>(</span><span>.write</span><span> </span><span>message-bytes</span><span>)</span><span>
               </span><span>(</span><span>.flush</span><span>)))))))</span><span>
</span></code></pre></div>
<p>This function converts the client/server communication from InputStream+OutputStream pair (bytes) to input+output BlockingQueues of json blobs. The <code>"lsp-base-in"</code> part reads headers from the InputStream, then reads a JSON object and finally puts it onto a <code>server-in</code> queue. This way, whenever a language server sends us something, we’ll get it as a JSON in a queue. The <code>"lsp-base-out"</code> is an inverse: it reads JSON objects from <code>server-out</code> and writes them to the server. This way, when we will want to send a message to the language server, we will only need to put a JSON value onto a <code>server-out</code> queue.</p>

<h2 id="json-rpc-layer">JSON-RPC layer</h2>

<p>LSP client and server exchange JSON blobs in a special format called <a href="https://www.jsonrpc.org/specification">JSON-RPC</a>. The main idea is to agree on the shape and meaning of the exchanged data so that exchanging JSON objects supports these use cases:</p>
<ol>
  <li>send a request to perform a specific action and receive a response for this request (aka “remote procedure call”)</li>
  <li>send a notification that does not expect a response</li>
</ol>

<p>This use case is achieved by exchanging JSON objects with special combinations of fields, i.e.:</p>
<ol>
  <li>to send a request, use a JSON object with fields <code>id</code> (request identifier) and <code>method</code> (action identifier). Optionally, you can provide <code>params</code>, i.e. an “argument” to the “method call”.</li>
  <li>to send a notification, use a request, but without the <code>id</code> field</li>
  <li>to respond to a request, send a JSON object with <code>id</code> of the received request, and either an <code>error</code> or a <code>result</code> field, depending on whether we got an error or a successfully produced a result. The error has to be an object with <code>code</code> and <code>message</code> fields.</li>
</ol>

<p>Now I’ll walk you through the implementation of JSON-RPC protocol, which happens to be <a href="https://github.com/vlaaad/lsp-clj-client/blob/main/src/io/github/vlaaad/lsp.clj#L58-L121">a single function</a>.</p>

<p>We start with this argument list:</p>
<div><pre><code><span>(</span><span>defn-</span><span> </span><span>lsp-jsonrpc</span><span> </span><span>[</span><span>^</span><span>BlockingQueue</span><span> </span><span>client-in</span><span> </span><span>^</span><span>BlockingQueue</span><span> </span><span>server-in</span><span> </span><span>^</span><span>BlockingQueue</span><span> </span><span>server-out</span><span> </span><span>handlers</span><span>]</span><span> 
  </span><span>...</span><span>)</span><span>
</span></code></pre></div>
<p><code>server-in</code> and <code>server-out</code> are the base layer of the LSP commucation. We will put JSON-RPC objects to <code>server-out</code> to send messages to the language server. We will read from <code>server-in</code> to receive language server JSON-RPC objects from the language servers. So, what are <code>client-in</code> and <code>handlers</code>?</p>

<p><code>client-in</code> is another queue that we will use to send requests and notifications to the language server. Our <code>lsp-jsonrpc</code> function will take objects from <code>client-in</code>, perform some pre-processing, and then will post the JSON-RPC objects to <code>server-out</code>. This will enable us to write a simple API to send messages to the language server.</p>

<p><code>handler</code> is a map from JSON-RPC “method name” to a function. When language server decides to notify us about something, or sends us a request, we will lookup a function to handle this notification in the <code>handlers</code> map. This enables us to respond to requests from language servers.</p>

<p>The next bit of code in the function “merges” <code>client-in</code> and <code>server-in</code> into a single queue (<code>in</code>):</p>
<div><pre><code><span>  </span><span>(</span><span>let</span><span> </span><span>[</span><span>in</span><span> </span><span>(</span><span>SynchronousQueue.</span><span>)]</span><span>
    </span><span>(</span><span>-&gt;</span><span> </span><span>(</span><span>Thread/ofVirtual</span><span>)</span><span>
        </span><span>(</span><span>.name</span><span> </span><span>"lsp-jsonrpc-client"</span><span>)</span><span>
        </span><span>(</span><span>.start</span><span> </span><span>#</span><span>(</span><span>while</span><span> </span><span>true</span><span> </span><span>(</span><span>.put</span><span> </span><span>in</span><span> </span><span>[</span><span>:client</span><span> </span><span>(</span><span>.take</span><span> </span><span>client-in</span><span>)]))))</span><span>
    </span><span>(</span><span>-&gt;</span><span> </span><span>(</span><span>Thread/ofVirtual</span><span>)</span><span>
        </span><span>(</span><span>.name</span><span> </span><span>"lsp-jsonrpc-server"</span><span>)</span><span>
        </span><span>(</span><span>.start</span><span> </span><span>#</span><span>(</span><span>while</span><span> </span><span>true</span><span> </span><span>(</span><span>.put</span><span> </span><span>in</span><span> </span><span>[</span><span>:server</span><span> </span><span>(</span><span>.take</span><span> </span><span>server-in</span><span>)]))))</span><span>
    </span><span>...</span><span>)</span><span>
</span></code></pre></div>
<p>Now, we can write a single sequential loop that take messages from <code>in</code> and handles both messages from “us”, i.e. the client, and “them”, i.e. remote language server. With virtual threads, this blocking code stays lightweight and performant. On a side note, I think the only reason for <a href="https://github.com/clojure/core.async/">core.async</a> to exist post JDK 24 is the observability tooling that <a href="https://clojure.github.io/core.async/flow.html">flow</a> provides. And, maybe, sliding buffers — AFAIK, there are no blocking alternatives to them in the JDK.</p>

<p>Okay, let’s move on. The next piece of code in the JSON-RPC implementation is the loop:</p>
<div><pre><code><span>    </span><span>(</span><span>-&gt;</span><span> </span><span>(</span><span>Thread/ofVirtual</span><span>)</span><span>
        </span><span>(</span><span>.name</span><span> </span><span>"lsp-jsonrpc"</span><span>)</span><span>
        </span><span>(</span><span>.start</span><span>
          </span><span>#</span><span>(</span><span>loop</span><span> </span><span>[</span><span>next-id</span><span> </span><span>0</span><span>
                  </span><span>requests</span><span> </span><span>{}]</span><span>
             </span><span>(</span><span>let</span><span> </span><span>[[</span><span>src</span><span> </span><span>message</span><span>]</span><span> </span><span>(</span><span>.take</span><span> </span><span>in</span><span>)]</span><span>
               </span><span>(</span><span>case</span><span> </span><span>src</span><span>
                  </span><span>...</span><span>)))))</span><span>
</span></code></pre></div>
<p>We start another lightweight process that handles incoming messages from both language server and client. We need <code>next-id</code> and <code>requests</code> to support sending requests and then handling the incoming responses to these requests. We are taking from <code>in</code>, so <code>src</code> is either <code>:client</code> or <code>:server</code>, and message is a JSON-RPC message. Now, let’s start handling stuff! First we’ll handle the <code>:client</code> case, i.e. messages that we send to the server:</p>
<div><pre><code><span>                 </span><span>:client</span><span> </span><span>(</span><span>let</span><span> </span><span>[</span><span>out-message</span><span> </span><span>(</span><span>cond-&gt;</span><span> </span><span>{</span><span>:jsonrpc</span><span> </span><span>"2.0"</span><span>
                                                    </span><span>:method</span><span> </span><span>(</span><span>:method</span><span> </span><span>message</span><span>)}</span><span>
                                             </span><span>(</span><span>contains?</span><span> </span><span>message</span><span> </span><span>:params</span><span>)</span><span>
                                             </span><span>(</span><span>assoc</span><span> </span><span>:params</span><span> </span><span>(</span><span>:params</span><span> </span><span>message</span><span>)))]</span><span>
                           </span><span>(</span><span>if-let</span><span> </span><span>[</span><span>response-queue</span><span> </span><span>(</span><span>:response</span><span> </span><span>message</span><span>)]</span><span>
                             </span><span>(</span><span>do</span><span>
                               </span><span>(</span><span>.put</span><span> </span><span>server-out</span><span> </span><span>(</span><span>assoc</span><span> </span><span>out-message</span><span> </span><span>:id</span><span> </span><span>next-id</span><span>))</span><span>
                               </span><span>(</span><span>recur</span><span> </span><span>(</span><span>inc</span><span> </span><span>next-id</span><span>)</span><span> </span><span>(</span><span>assoc</span><span> </span><span>requests</span><span> </span><span>next-id</span><span> </span><span>response-queue</span><span>)))</span><span>
                             </span><span>(</span><span>do</span><span>
                               </span><span>(</span><span>.put</span><span> </span><span>server-out</span><span> </span><span>out-message</span><span>)</span><span>
                               </span><span>(</span><span>recur</span><span> </span><span>next-id</span><span> </span><span>requests</span><span>))))</span><span>
</span></code></pre></div>
<p>Remember, we need to support both notifications (don’t expect a response) and requests (need a response). We will differentiate between them by using <code>:response</code> key on the client messages. The value for the key is going to be a <code>BlockingQueue</code> — once we receive a response from the language server, we will put the response value onto this queue. If we are sending a response, we increment the <code>next-id</code> counter and store the queue that awaits a response in the in-flight <code>requests</code> map. If we are sending a notification, we simply send a JSON-RPC object and continue.</p>

<p>That’s it for the client! Now we handle incoming messages from server. There are 3 possible message types:</p>
<ol>
  <li>responses to our requests: those have an <code>id</code> and either <code>result</code> or <code>error</code>.</li>
  <li>notifications: those have <code>method</code>, but not <code>id</code></li>
  <li>requests: those have both <code>method</code> and <code>id</code></li>
</ol>

<p>Here is the <code>:server</code> case:</p>
<div><pre><code><span>                 </span><span>:server</span><span> </span><span>(</span><span>cond</span><span>
                           </span><span>;; response?</span><span>
                           </span><span>(</span><span>and</span><span> </span><span>(</span><span>contains?</span><span> </span><span>message</span><span> </span><span>:id</span><span>)</span><span>
                                </span><span>(</span><span>or</span><span> </span><span>(</span><span>contains?</span><span> </span><span>message</span><span> </span><span>:result</span><span>)</span><span>
                                    </span><span>(</span><span>contains?</span><span> </span><span>message</span><span> </span><span>:error</span><span>)))</span><span>
                           </span><span>(</span><span>let</span><span> </span><span>[</span><span>id</span><span> </span><span>(</span><span>:id</span><span> </span><span>message</span><span>)</span><span>
                                 </span><span>^</span><span>BlockingQueue</span><span> </span><span>response-out</span><span> </span><span>(</span><span>get</span><span> </span><span>requests</span><span> </span><span>id</span><span>)]</span><span>
                             </span><span>(</span><span>.put</span><span> </span><span>response-out</span><span> </span><span>message</span><span>)</span><span>
                             </span><span>(</span><span>recur</span><span> </span><span>next-id</span><span> </span><span>(</span><span>dissoc</span><span> </span><span>requests</span><span> </span><span>id</span><span>)))</span><span>

                           </span><span>;; notification?</span><span>
                           </span><span>(</span><span>and</span><span> </span><span>(</span><span>contains?</span><span> </span><span>message</span><span> </span><span>:method</span><span>)</span><span>
                                </span><span>(</span><span>not</span><span> </span><span>(</span><span>contains?</span><span> </span><span>message</span><span> </span><span>:id</span><span>)))</span><span>
                           </span><span>(</span><span>do</span><span>
                             </span><span>(</span><span>when-let</span><span> </span><span>[</span><span>handler</span><span> </span><span>(</span><span>get</span><span> </span><span>handlers</span><span> </span><span>(</span><span>:method</span><span> </span><span>message</span><span>))]</span><span>
                               </span><span>(</span><span>handler</span><span> </span><span>(</span><span>:params</span><span> </span><span>message</span><span>)))</span><span>
                             </span><span>(</span><span>recur</span><span> </span><span>next-id</span><span> </span><span>requests</span><span>))</span><span>

                           </span><span>;; request?</span><span>
                           </span><span>(</span><span>and</span><span> </span><span>(</span><span>contains?</span><span> </span><span>message</span><span> </span><span>:method</span><span>)</span><span>
                                </span><span>(</span><span>contains?</span><span> </span><span>message</span><span> </span><span>:id</span><span>))</span><span>
                           </span><span>(</span><span>do</span><span>
                             </span><span>(</span><span>.put</span><span>
                               </span><span>server-out</span><span>
                               </span><span>(</span><span>try</span><span>
                                 </span><span>{</span><span>:jsonrpc</span><span> </span><span>"2.0"</span><span>
                                  </span><span>:id</span><span> </span><span>(</span><span>:id</span><span> </span><span>message</span><span>)</span><span>
                                  </span><span>:result</span><span> </span><span>((</span><span>get</span><span> </span><span>handlers</span><span> </span><span>(</span><span>:method</span><span> </span><span>message</span><span>))</span><span> </span><span>(</span><span>:params</span><span> </span><span>message</span><span>))}</span><span>
                                 </span><span>(</span><span>catch</span><span> </span><span>Throwable</span><span> </span><span>e</span><span>
                                   </span><span>{</span><span>:jsonrpc</span><span> </span><span>"2.0"</span><span>
                                    </span><span>:id</span><span> </span><span>(</span><span>:id</span><span> </span><span>message</span><span>)</span><span>
                                    </span><span>:error</span><span> </span><span>{</span><span>:code</span><span> </span><span>-32603</span><span> </span><span>:message</span><span> </span><span>(</span><span>or</span><span> </span><span>(</span><span>ex-message</span><span> </span><span>e</span><span>)</span><span> </span><span>"Internal Error"</span><span>)}})))</span><span>
                             </span><span>(</span><span>recur</span><span> </span><span>next-id</span><span> </span><span>requests</span><span>))</span><span>

                           </span><span>:else</span><span>
                           </span><span>(</span><span>do</span><span>
                             </span><span>(</span><span>.put</span><span> </span><span>server-out</span><span> </span><span>{</span><span>:jsonrpc</span><span> </span><span>"2.0"</span><span> </span><span>:id</span><span> </span><span>(</span><span>:id</span><span> </span><span>message</span><span>)</span><span> </span><span>:error</span><span> </span><span>{</span><span>:code</span><span> </span><span>-32600</span><span> </span><span>:message</span><span> </span><span>"Invalid Request"</span><span>}})</span><span>
                             </span><span>(</span><span>recur</span><span> </span><span>next-id</span><span> </span><span>requests</span><span>))))))))))</span><span>
</span></code></pre></div>
<p>When we receive a response to our request, we put it on the queue stored in the in-flight <code>requests</code> map, and remove the queue from the map. When we get a notification, we simply invoke the handler if it exists. Handling requests is a bit different, because we want to ensure the server will always receive a response. So we do a try/catch and always send back something. We do the request handling on the JSON-RPC process thread, so if it blocks for a long time, no other messages are processed. That’s actually a downside. So let’s just say I kept things simple for illustrative purposes, and spawning one more virtual thread to compute and send a response to the server is left as an exercise for the reader :D</p>

<p>Finally, there is an <code>:else</code> branch that responds to unexpected messages with an error. Which, I guess, is unnecessarily defensive given the lack of error handling and validations in other places.</p>

<h2 id="the-api">The API</h2>

<p>Now that all communication is implemented, it’s time to create an API. We will only need 3 functions:</p>
<ol>
  <li><code>start!</code> to start a language server.</li>
  <li><code>request!</code> to send a request to the language server and get a result back</li>
  <li><code>notify!</code> to send a notification to the language server and get nothing back</li>
</ol>

<p>Let’s start with <code>start!</code>-ing a server:</p>
<div><pre><code><span>(</span><span>defn</span><span> </span><span>start!</span><span>
  </span><span>([</span><span>^</span><span>Process</span><span> </span><span>process</span><span> </span><span>handlers</span><span>]</span><span>
   </span><span>(</span><span>start!</span><span> </span><span>(</span><span>.getInputStream</span><span> </span><span>process</span><span>)</span><span> </span><span>(</span><span>.getOutputStream</span><span> </span><span>process</span><span>)</span><span> </span><span>handlers</span><span>))</span><span>
  </span><span>([</span><span>^</span><span>InputStream</span><span> </span><span>in</span><span> </span><span>^</span><span>OutputStream</span><span> </span><span>out</span><span> </span><span>handlers</span><span>]</span><span>
   </span><span>(</span><span>let</span><span> </span><span>[</span><span>client-in</span><span> </span><span>(</span><span>ArrayBlockingQueue.</span><span> </span><span>16</span><span>)</span><span>
         </span><span>server-in</span><span> </span><span>(</span><span>ArrayBlockingQueue.</span><span> </span><span>16</span><span>)</span><span>
         </span><span>server-out</span><span> </span><span>(</span><span>ArrayBlockingQueue.</span><span> </span><span>16</span><span>)]</span><span>
     </span><span>(</span><span>lsp-jsonrpc</span><span> </span><span>client-in</span><span> </span><span>server-in</span><span> </span><span>server-out</span><span> </span><span>handlers</span><span>)</span><span>
     </span><span>(</span><span>lsp-base</span><span> </span><span>in</span><span> </span><span>server-in</span><span> </span><span>out</span><span> </span><span>server-out</span><span>)</span><span>
     </span><span>client-in</span><span>)))</span><span>
</span></code></pre></div>

<p>I made 2 arities for the <code>start!</code> function:</p>
<ol>
  <li>Helper process arity specifically for process stdio, since this is what is used in 99% of LSP client/server communication implementations. We are going to use it to start the server.</li>
  <li>Generic arity over InputStream+OutputStream pair. This arity is the one that does the work. LSP allows various transports, e.g. pipes, network sockets, or stdio communication between processes. The generic arity supports it all, you only need to provide the input and output streams. In the setup, I allocate small buffers so if some part of the commucation consumes too slow (or produces too fast), there is some buffering and then backpressure. I don’t know if these buffer sizes are any good to be honest, I just made them up. Anyway, here, we call <code>lsp-jsonrpc</code> and <code>lsp-base</code> to wire everything together, and finally return the <code>client-in</code>. Yes, the LSP client object is just a queue. Yes, it probably should be something else, like a custom type, in a proper implementation.</li>
</ol>

<p>Next step is sending a notification. This is simpler than sending a request because we don’t get a response back:</p>
<div><pre><code><span>(</span><span>defn</span><span> </span><span>notify!</span><span>
  </span><span>([</span><span>^</span><span>BlockingQueue</span><span> </span><span>lsp</span><span> </span><span>method</span><span>]</span><span>
   </span><span>(</span><span>.put</span><span> </span><span>lsp</span><span> </span><span>{</span><span>:method</span><span> </span><span>method</span><span>}))</span><span>
  </span><span>([</span><span>^</span><span>BlockingQueue</span><span> </span><span>lsp</span><span> </span><span>method</span><span> </span><span>params</span><span>]</span><span>
   </span><span>(</span><span>.put</span><span> </span><span>lsp</span><span> </span><span>{</span><span>:method</span><span> </span><span>method</span><span> </span><span>:params</span><span> </span><span>params</span><span>})))</span><span>
</span></code></pre></div>

<p>Finally, sending a request. If you remember, back when we were implementing the <code>lsp-jsonrpc</code> function, we agreed that LSP request maps will use a <code>:response</code> key with a queue value. Now is the time to do it:</p>
<div><pre><code><span>(</span><span>defn</span><span> </span><span>request!</span><span>
  </span><span>([</span><span>lsp</span><span> </span><span>method</span><span>]</span><span>
   </span><span>(</span><span>request!</span><span> </span><span>lsp</span><span> </span><span>method</span><span> </span><span>nil</span><span>))</span><span>
  </span><span>([</span><span>^</span><span>BlockingQueue</span><span> </span><span>lsp-client</span><span> </span><span>method</span><span> </span><span>params</span><span>]</span><span>
   </span><span>(</span><span>let</span><span> </span><span>[</span><span>queue</span><span> </span><span>(</span><span>SynchronousQueue.</span><span>)]</span><span>
     </span><span>(</span><span>.put</span><span> </span><span>lsp-client</span><span> </span><span>(</span><span>cond-&gt;</span><span> </span><span>{</span><span>:method</span><span> </span><span>method</span><span> </span><span>:response</span><span> </span><span>queue</span><span>}</span><span> </span><span>params</span><span> </span><span>(</span><span>assoc</span><span> </span><span>:params</span><span> </span><span>params</span><span>)))</span><span>
     </span><span>(</span><span>let</span><span> </span><span>[</span><span>m</span><span> </span><span>(</span><span>.take</span><span> </span><span>queue</span><span>)]</span><span>
       </span><span>(</span><span>if-let</span><span> </span><span>[</span><span>e</span><span> </span><span>(</span><span>:error</span><span> </span><span>m</span><span>)]</span><span>
         </span><span>(</span><span>throw</span><span> </span><span>(</span><span>ex-info</span><span> </span><span>(</span><span>:message</span><span> </span><span>e</span><span>)</span><span> </span><span>e</span><span>))</span><span>
         </span><span>(</span><span>:result</span><span> </span><span>m</span><span>))))))</span><span>
</span></code></pre></div>
<p><code>SynchronousQueue</code> is a queue with a buffer of size 0. This means every blocking <code>.take</code> (which we do here) will wait until someone else (<code>lsp-jsonrpc</code> function) puts a value onto the queue. So this is like a promise that we await here. This implementation creates a request map, submits it to the lsp client, and then blocks until a response arrives from the language server. What’s extra nice here is that JSON-RPC errors are thrown as java exceptions, and successful results are simply returned as values. As if this is some sort of synchronous “method call”. That also performs well because virtual threads. Java 24 is really nice.</p>

<p>Anyway, that’s it! We now can start language servers and do stuff with them! Yay, we implemented an LSP client, all in 150 (not even 200) lines of code!</p>

<p>Yay?</p>

<p>You might feel a bit let down now because everything we did — base and jsonrpc layer — although required for the LSP, don’t actually have anything to do with actual language servers. But it’s so nice and short and focused! Oh, well. Now, I guess, the time has come to destroy all this beauty by actually trying to use a language server. After all, we still have a budget for 50 more LoC.</p>

<h2 id="the-ugly-linter">The ugly linter</h2>

<p>Let’s discuss the language server lifecycle first. When client starts a language server, it’s not actually immediately ready for use. Now we are entering the real LSP integration territory. We have to initialize it (a request), then notify it that it’s initialized (a notification), then use it (issue 0 or more requests or notifications), then shut it down (a request), and then finally notify it so it can exit (one more notification). The initialization process is necessary to exchange <strong>capabilities</strong>: the client says what it can do, and then the server says what it can do, and LSP demands both client and server to honor what they said to each other. For example, a proper language client (like a text editor, not the toy that we build here) might say “I will ask you about code completion, but please don’t notify me about your linting since I don’t support displaying squiggly lines yet”, and the server might say “I can provide both code completion and notify you about code issues as you type, but I won’t do that since you don’t support it”.</p>

<p>All capabilities are defined in the LSP specification, and almost all of them are optional to implement. This allows for both LSP client and server developers to build the support gradually over time. For example, in <a href="https://defold.com/">Defold editor</a>, the LSP support story started only with displaying <em>diagnostics</em> (this is the term LSP specification uses for linting squigglies), and then was gradually expanded to code completion, hovers and symbol renaming.</p>

<p>Let’s see what we have in stock for diagnostics. A diagnostic is a data describing the code issue. It has a text range (something like “from line 20 char 5 to line 20 char 10”), severity (warning/error etc.) and a text message.
LSP specification defines these 2 methods that we could use to get diagnostics from the language server:</p>
<ol>
  <li><a href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_diagnostic">document diagnostics</a>: a client may request a server to lint a particular file and return a result.</li>
  <li><a href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_diagnostic">workspace diagnostics</a>: a client may request a server to lint the whole project and return a result.</li>
</ol>

<p>So, with these 2 methods at hand, and with our nice LSP client implementation, we could sketch a linting function that does linting using roughly this algorithm:</p>
<ol>
  <li>start a server</li>
  <li>initialize it, telling the server that we may ask it for workspace and document diagnostics</li>
  <li>if server supports workspace diagnostics, we use that; if server supports document diagnostics, we list all files in a project and ask it to lint them; otherwise, we report an error that the server can’t do what we want it to do.</li>
  <li>we shut down the server</li>
</ol>

<p>Should be easy. Really, it should be this easy! It should be easy!!! Why isn’t it this easy?!?!..</p>

<p>Okay.</p>

<p>Here comes the ugly part.</p>

<p>When preparing this post, I went through a lot of language servers to use as an example. I only needed one of them to implement either of the methods. But no. Not single one of them did. All these language servers that boast that they provide diagnostics. They are not even lying. But! They don’t actually implement diagnostics on request. You see, there is a third way language servers can use to provide these pesky little squigglies. They can post them, out of the blue, whenever they want, as a notification. No way to ask them about it. And that’s what they do. All of them. And they do it, mostly, as a response to 2 specific notifications from the client: when the client notifies the server that it opened a document, and when the client notifies the server that a text of an open document has changed. This notification approach existed first, and every language server implementor just uses it because it’s easy and it works and everything else is unnecessary. It makes total sense for a text editor: most of the time, you are only interested in squigglies for the file you are editing, while you are editing it. But unfortunately it means that I can’t make a nice example of using our tiny language client to do something useful without building a full-blown text editor — all the other features only make sense in the code editing context where we have cursors and text selection and we can ask a language server about this thing on this line.</p>

<p>So. It’s going to be ugly. But this not a problem of the LSP specification. It’s just that I got unlucky with the example that I wanted to use. Instead of this simple straightforward request/response thing I’m going to do something awful. I’ll start a language server. I will initialize it, saying only that I am open to receiving diagnostic notifications. I will ignore server capabilities completely because at this point why bother. And then I will open every file in a project, and then I’ll wait a bit to receive diagnostic notifications, and then I’ll shut this abomination down. I’m not going to explain all the code, because it’s so awful, but <a href="https://github.com/vlaaad/lsp-clj-client/blob/main/src/io/github/vlaaad/lsp.clj#L156-L200">here it is in all it’s glory</a>. Here, I’ll only show the good parts.</p>

<p>We start with a function signature:</p>
<div><pre><code><span>(</span><span>defn</span><span> </span><span>lint</span><span> </span><span>[</span><span>&amp;</span><span> </span><span>{</span><span>:keys</span><span> </span><span>[</span><span>cmd</span><span> </span><span>path</span><span> </span><span>ext</span><span>]}]</span><span> 
  </span><span>...</span><span>)</span><span>
</span></code></pre></div>
<p>The function takes an LSP shell <code>cmd</code> to run (either a string or a coll of strings), a directory <code>path</code> to lint, and a file <code>ext</code>ension to select the files to lint. Since the function accepts kv-args, and it’s on github, and you are using an up-to-date <code>clj</code> tool (aren’t you?), you can actually try to run it. Maybe it will even work! For example, you can download <a href="https://github.com/clojure-lsp/clojure-lsp/releases">clojure-lsp</a>, and then run the following command in your project:</p>
<div><pre><code>clj <span>-Sdeps</span> <span>'{:deps {io.github.vlaaad/lsp-clj-client {:git/sha "57c618d7ecfc9f94fbef9157cfe4534a4816be45"}}}'</span> <span>\</span>
    <span>-X</span> io.github.vlaaad.lsp/lint <span>\</span>
    :cmd <span>'"/Users/vlaaad/Downloads/clojure-lsp.exe"'</span> <span>\</span>
    :path <span>'"."'</span> <span>\ </span>
    :ext <span>'"clj"'</span>
</code></pre></div>
<p>For the code that we discussed in this post, the output will look like this:</p>
<div><pre><code>file:///Users/vlaaad/Projects/lsp-clj-client/src/io/github/vlaaad/lsp.clj at 168:22:  Redundant let expression.
</code></pre></div>
<p>Turns out there is a warning in the <code>lint</code> function implementation! But the warning is in a bad, messy part of the code, so there is no point in fixing it in the function. Nothing can fix this function… Anyway, we start a process and then make it a server:</p>
<div><pre><code><span>(</span><span>let</span><span> </span><span>[</span><span>...</span><span> </span><span>...</span><span>
      </span><span>^</span><span>Process</span><span> </span><span>process</span><span> </span><span>(</span><span>apply</span><span> </span><span>process/start</span><span> </span><span>{</span><span>:err</span><span> </span><span>:inherit</span><span>}</span><span> </span><span>(</span><span>if</span><span> </span><span>(</span><span>string?</span><span> </span><span>cmd</span><span>)</span><span> </span><span>[</span><span>cmd</span><span>]</span><span> </span><span>cmd</span><span>))</span><span>
      </span><span>...</span><span> </span><span>...</span><span>
      </span><span>server</span><span> </span><span>(</span><span>start!</span><span> </span><span>process</span><span> </span><span>{</span><span>"textDocument/publishDiagnostics"</span><span> </span><span>(</span><span>fn</span><span> </span><span>[</span><span>diagnostics</span><span>]</span><span> </span><span>...</span><span>)})]</span><span>
  </span><span>...</span><span>)</span><span>
</span></code></pre></div>
<p>We are only going to listen to <code>textDocument/publishDiagnostics</code> notification that might be sent by the language server when we open files. At this point, the server is not initialized yet, so we do it next:</p>
<div><pre><code><span>(</span><span>request!</span><span> </span><span>server</span><span> </span><span>"initialize"</span><span> </span><span>{</span><span>:processId</span><span> </span><span>(</span><span>.pid</span><span> </span><span>(</span><span>ProcessHandle/current</span><span>))</span><span>
                               </span><span>:rootUri</span><span> </span><span>(</span><span>uri</span><span> </span><span>path</span><span>)</span><span>
                               </span><span>:capabilities</span><span> </span><span>{</span><span>:textDocument</span><span> </span><span>{</span><span>:publishDiagnostics</span><span> </span><span>{}}}})</span><span>
</span></code></pre></div>
<p>We issue a blocking <code>initialize</code> call, and tell the server our process id (so it can exit if we die before stopping it), which directory is the project root, and what are our capabilities. You are expected to take the return value and check if it e.g. supports the diagnostics, but I decided to skip it in this example.</p>

<p>Next step: we notify the server that it’s <code>initialized</code>:</p>
<div><pre><code><span>(</span><span>notify!</span><span> </span><span>server</span><span> </span><span>"initialized"</span><span>)</span><span>
</span></code></pre></div>
<p>Not sure why it’s necessary, but the protocol demands it. Then we use the server and print the results (horrors omitted). Then we shut it down:</p>
<div><pre><code><span>(</span><span>request!</span><span> </span><span>server</span><span> </span><span>"shutdown"</span><span>)</span><span>
</span><span>(</span><span>notify!</span><span> </span><span>server</span><span> </span><span>"exit"</span><span>)</span><span>
</span></code></pre></div>

<p>And that’s it!</p>

<h2 id="discussion">Discussion</h2>

<p>Okay, let’s take a deep breath. I took a deep breath and spent some time reflecting on all this. I like LSP. It’s great for the ecosystem: IDEs get better support for more programming languages, and programming languages are easier to integrate into more IDEs. It’s not a great protocol for building command line linters: even though the protocol supports it, in reality it’s going to be hard to find a server that has the necessary capabilites. But it’s much better for building text editors, I promise :)</p>

<p>I built LSP support for the Defold editor. Now that I also spent a bit of time reflecting on it, I’d like to share my opinions on the matter. First of all, integrating diagnostics into the text editor was actually pretty easy, since there was no requirement to explicitly request diagnostics, they just appear and get displayed. That wasn’t the complex part. Defold LSP support is much more complex than our toy implementation because a text editor needs to manage the whole zoo of language servers, each with it’s own lifecycle, initialization process and capabilities. When implementing the LSP support in a text editor, I found that most of the complexity comes from having to manage this zoo, where each server has different runtime state (starting, running, stopped), and where each of language server processes might decide to die at any point. This complicates, for example, the following:</p>
<ul>
  <li>Tracking open files with unsaved changes. Not only does the text editor need to notify running language servers when the user opens a files, it should also notify a freshly started (or restarted) servers about all currently open documents. There needs to be book-keeping of open (visible to the user) and unsaved files (not necessarily visible to the user).</li>
  <li>Sending requests to multiple servers at the same time. This might be not immediately obvious, but LSP does not get in the way of running multiple language servers — for the same language, in the same project — simultaneously. VSCode does it. Defold editor does it too. When the editor asks for code completions to present a completion popup, the LSP integration actually asks all capable running language servers for the target language, and then merges the results. Same applies for displaying diagnostics. Having multiple language servers per file is very useful. For example, you might run a language server dedicated to the code analysis and, additionally, a spell checking language server that highlights typos, and the editor will display diagnostics from both in the same file. So, implementing support for sending a request to multiple language servers at once, with different capabilities, where every server might die at any moment, but we still wan’t to receive a response from all matching servers, within a time frame, wasn’t easy.</li>
</ul>

<p>Compared to that, here is a critique of LSP that I’ve <a href="https://www.michaelpj.com/blog/2024/09/03/lsp-good-bad-ugly.html">read about before</a>, but don’t find convincing:</p>
<ol>
  <li>Missing causality. The editor changes the code, then immediately asks for something like code actions from the server. It’s possible that the server won’t have a chance to update it’s internal state and will return results for an outdated text state. Or it will post diagnostics that no longer apply. But then it will post the correct ones a bit later. I think it doesn’t matter since the problem is easily recoverable with e.g. an undo in a text editor, or with repeating a request, or it will recover itself automatically a bit later. There is no need for strong causalty/consistency guarantees: interactions with language servers are mostly read-only, there is no harm in the thing being a bit lax/late.</li>
  <li>Different endpoints encode data slightly differently. For example, unsaved changes to text files are communicated incrementally (as diffs), but text document outline (i.e. list of defined classes/functions/modules etc.) is always refreshed in full. I think inconsistencies here don’t matter: writing a pre/post processing is easy. Different state synchronization approaches are dictated by the context and there are trade-offs. Text state synchronization should be fast, therefore requiring support for incremental text synchronization for clients and servers is reasonable — we might be editing very large files, we shouldn’t constantly send them in full on every change. Outline refreshes, on the other hand, are requested as needed, and not on typing, so there is no need for incremental diffs there.</li>
  <li>Specification is big. It is, but it doesn’t matter: we can opt into into parts of it using capabilities.</li>
  <li>Weird type definitions. A lot of JSON schema of requests/response is written using Typescript types. Truth be told, I was perplexed by it initially, but I quicky got used to it. It communicates the data shape well enough.</li>
</ol>

<p>LSP has it’s warts and inconsistencies, as every successful protocol that has grown over time. If it was designed from scratch now, it would be simpler, particularly around request and response data shapes. But that’s not as hard as e.g. managing the state of the servers, which is an unfortunate consequence of the fact that language servers are separate stateful processes. Perhaps, LSP successor will be not a better protocol for inter-process communication, but a WASM “interface” that will allow writing language servers in-process, synchronous, in whatever language, as long as it compiles to WASM. And then, every code editor will run some WASM runtime. Meanwhile, LSP is infinitely better than building bespoke language integrations, so I’m happy to use it.</p>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Klarna changes its AI tune and again recruits humans for customer service (222 pts)]]></title>
            <link>https://www.customerexperiencedive.com/news/klarna-reinvests-human-talent-customer-service-AI-chatbot/747586/</link>
            <guid>43955374</guid>
            <pubDate>Sun, 11 May 2025 17:35:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.customerexperiencedive.com/news/klarna-reinvests-human-talent-customer-service-AI-chatbot/747586/">https://www.customerexperiencedive.com/news/klarna-reinvests-human-talent-customer-service-AI-chatbot/747586/</a>, See on <a href="https://news.ycombinator.com/item?id=43955374">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                        
                        
<div>
        <p>
            This audio is auto-generated. Please let us know if you have <a href="https://www.customerexperiencedive.com/contact/">feedback</a>.
        </p>
    </div>

                        
                        

<p><span><span><span><span><span><span>A year after claiming that its AI chatbot could do the work of </span></span></span></span></span></span><a href="https://www.customerexperiencedive.com/news/klarna-generative-ai-customer-service-call-center/709072/"><span><span><span><span><span><span><span><span><span>700 representatives</span></span></span></span></span></span></span></span></span></a><span><span><span><span><span><span>, Klarna is turning back to people to handle more of its customer service work.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>The buy now, pay later firm now wants customers to always have the option to speak with a human, Klarna spokesperson </span></span></span></span></span></span><span><span><span><span><span><span><span>Clare Nordstrom</span></span></span></span></span></span></span><span><span><span><span><span><span> told CX Dive.&nbsp;</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>“While Klarna pioneered the use of AI in customer service </span></span></span></span></span></span><a href="https://url.us.m.mimecastprotect.com/s/V8saC5ylW5FpMv6OqSzf3fkS7op?domain=klarna.com/"><span><span><span><span><span><span><span><span>with groundbreaking results</span></span></span></span></span></span></span></span></a><span><span><span><span><span><span>, this strategy will now evolve to the next level,” Nordstrom said in an email. “AI gives us speed. Talent gives us empathy. Together, we can deliver service that’s fast when it should be, and emphatic and personal when it needs to be.”</span></span></span></span></span></span></p>



<p><span><span><span><span><span><span>It’s a drastic change from a year ago, when the firm went all in on AI, </span></span></span></span></span></span><a href="https://www.bbc.com/news/articles/c80e1gp9m9zo"><span><span><span><span><span><span><span><span>laid off workers</span></span></span></span></span></span></span></span></a><span><span><span><span><span><span> and </span></span></span></span></span></span><a href="https://www.bloomberg.com/news/articles/2024-12-12/klarna-stopped-all-hiring-a-year-ago-to-replace-workers-with-ai?sref=Hhue1scO"><span><span><span><span><span><span><span><span>paused hiring</span></span></span></span></span></span></span></span></a><span><span><span><span><span><span>. The shift highlights the need for the option to speak to a human in customer service — and to use AI as a supplement, not a replacement, for staff, according to </span></span></span></span></span></span><span><span><span><span><span><span><span>Julie Geller</span></span></span></span></span></span></span><span><span><span><span><span><span>, principal research director at Info-Tech Research Group.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>“The key takeaway is that AI should augment human agents — not replace them,” </span></span></span></span></span></span><span><span><span><span><span><span><span>Geller</span></span></span></span></span></span></span><span><span><span><span><span><span> said in an email. “Automate the routine to drive efficiency, but always ensure customers have a clear, easy path to a human, especially when emotions or complexity come into play.”</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span>Klarna CEO Sebastian Siemiatkowski</span></span></span></span></span></span></span><span><span><span><span><span><span> said just as much in an </span></span></span></span></span></span><a href="https://www.bloomberg.com/news/articles/2025-05-08/klarna-turns-from-ai-to-real-person-customer-service?sref=Hhue1scO"><span><span><span><span><span><span><span><span>interview with Bloomberg</span></span></span></span></span></span></span></span></a><span><span><span><span><span><span> Thursday.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>“From a brand perspective, a company perspective … I just think it’s so critical that you are clear to your customer that there will be always a human if you want,” Siemiatkowski said.&nbsp;</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>Klarna is now recruiting workers for what Siemiatkowski referred to as an Uber-type customer service setup. Starting with a pilot program, the firm will offer customer service talent “competitive pay and full flexibility to attract the best,” with staff able to work remotely, according to Nordstrom.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>“AI solves the easy stuff — our experts handle the moments that matter,” Nordstrom said. “That’s why we’re running this pilot, bringing in highly educated students, professionals and entrepreneurs for a new kind of role that blends frontline excellence with real-time product feedback.”&nbsp;</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>One of the goals is to replace the thousands of workers that Klarna currently outsources, Siemiatkowski told Bloomberg.&nbsp;</span></span></span></span></span></span></p>


<p><span><span><span><span><span><span>Back in February 2024, Klarna touted impressive figures: The AI assistant had taken over </span></span></span></span></span></span><span><span><span><span><span><span><span>two-thirds </span></span></span></span></span></span></span><span><span><span><span><span><span>of customer service chats —</span></span></span></span></span></span><span><span><span><span><span><span><span> 2.3 million</span></span></span></span></span></span></span><span><span><span><span><span><span> in total — in its first month. Its handling of customer service chats resulted in average resolution times of </span></span></span></span></span></span><span><span><span><span><span><span><span>less than 2 minutes</span></span></span></span></span></span></span><span><span><span><span><span><span>.&nbsp;</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>The AI still plays a crucial role, according to Nordstrom. The chatbot still handles two-thirds of all customer inquiries. Since launch, response times have improved by </span></span></span></span></span></span><span><span><span><span><span><span><span>82%</span></span></span></span></span></span></span><span><span><span><span><span><span>, and Klarna has seen a </span></span></span></span></span></span><span><span><span><span><span><span><span>25%</span></span></span></span></span></span></span><span><span><span><span><span><span> drop in repeat issues.&nbsp;</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>“But in a world of automation, nothing is more valuable than a truly great human interaction. That’s why we’re doubling down — investing in the human side of service: empathy, expertise, and real conversations,” Nordstrom said.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>Like many companies, Klarna had turned to AI as a form of cost-cutting, Siemiatkowski told Bloomberg.&nbsp;</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>“Initially, Klarna embraced AI with an eye toward cost savings and efficiency — but perhaps underestimated the tradeoff,” Geller said. “As customers increasingly voiced frustration over impersonal interactions and limited access to human help, it became clear this approach risked undermining the very experience they aimed to improve. That kind of friction doesn’t just erode satisfaction; it carries real financial and reputational consequences.”</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>Siemiatkowski acknowledged that Klarna had gone too far in the wrong direction with AI.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>“As cost unfortunately seems to have been a too predominant evaluation factor when organizing this, what you end up having is lower quality,” Siemiatkowski told Bloomberg. “Really investing in the quality of the human support is the way of the future for us.”</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>The firm’s shifting customer service strategy is perhaps unsurprising considering consumers’ overall frustrations with chatbots and the technology’s shortcomings.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>A Verint survey released last year found more than two-thirds customers have had a </span></span></span></span></span></span><a href="https://www.customerexperiencedive.com/news/consumer-frustration-self-service-live-agent-ivr-chatbot/724620/"><span><span><span><span><span><span><span><span><span>bad chatbot experience</span></span></span></span></span></span></span></span></span></a><span><span><span><span><span><span>, and in that group, the top complaint was inability to answer questions.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>Customers still </span></span></span></span></span></span><a href="https://www.customerexperiencedive.com/news/consumers-human-connection-speed-customer-service/743364/"><span><span><span><span><span><span><span><span>want to talk to humans</span></span></span></span></span></span></span></span></a><span><span><span><span><span><span>, especially for complex or sensitive issues. A Five9 survey from March found that </span></span></span></span></span></span><span><span><span><span><span><span><span>86%</span></span></span></span></span></span></span><span><span><span><span><span><span> of customers believe empathy and human connection are more important than a quick response in providing excellent customer experience.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>AI can mimic emotional intelligence in simple, routine interactions, Geller said.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>“But when situations get more complex, subtle gaps can start to show,” she said. “AI can also misread customer intent, leading to irrelevant — or worse, misleading — responses that frustrate people instead of solving their issue. And when companies lean too heavily on automation, they risk building rigid systems that make customers feel trapped, with no clear way to reach a human when it matters most.”</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>While Klarna has been an early, vocal adopter of AI, Geller is encouraged to see Klarna’s leadership course-correct from its earlier all-or-nothing approach.</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>“They recognized that trust and satisfaction aren’t purely transactional — they’re emotional,” she said. “And to sustain loyalty, especially in complex or sensitive moments, customers still expect, and deserve, the option of a human touch.”</span></span></span></span></span></span></p>

                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Plain Vanilla Web – Guide for de-frameworking yourself (912 pts)]]></title>
            <link>https://plainvanillaweb.com/index.html</link>
            <guid>43954896</guid>
            <pubDate>Sun, 11 May 2025 16:31:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://plainvanillaweb.com/index.html">https://plainvanillaweb.com/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=43954896">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <section>
            <h2>
                About this site
            </h2>
            <p>
                This is an overview of the major techniques used to make web sites and web applications
                without making use of build tools or frameworks, with just an editor, a browser, and web standards.
            </p>
            <p>
                Specifically, that means these topics:
            </p>
            <dl>
                <dt><a href="https://plainvanillaweb.com/pages/components.html">Components</a></dt>
                <dd>The use of Web Components as the basic building block for making higher-level primitives out of plain HTML, JavaScript and CSS, replacing the components approach from frameworks like React or Vue.</dd>
                <dt><a href="https://plainvanillaweb.com/pages/styling.html">Styling</a></dt>
                <dd>Fully leveraging the abilities of modern CSS to replace the conveniences of CSS Modules, PostCSS, or SASS.</dd>
                <dt><a href="https://plainvanillaweb.com/pages/sites.html">Sites</a></dt>
                <dd>Making a web project based on web components and deploying it for production without involving build tools, frameworks or server-side logic.</dd>
                <dt><a href="https://plainvanillaweb.com/pages/applications.html">Applications</a></dt>
                <dd>How to build single-page web applications with vanilla techniques, how to do routing, and how to manage state.</dd>
            </dl>
            <p>
                This tutorial is meant for those who already know their way around HTML, CSS and JavaScript. If you're just starting out learning web development and are looking for resources to get going, then this is not the site for you yet. 
                You can get started at <a href="https://www.theodinproject.com/paths/foundations/courses/foundations">The Odin Project Foundations Course</a> 
                or the <a href="https://developer.mozilla.org/en-US/docs/Learn">MDN Learn web development</a> learning path. 
            </p>
        </section>
        <section>
            <h2>
                Wait, but why
            </h2>
            <p>
                Modern web development frameworks are powerful in their ability to develop rich well-structured web applications quickly,
                and for this reason alone they are well worth your time to learn.
                However, this rich functionality comes at the cost of framework and tooling complexity,
                and the resulting projects often require regular maintenance to keep secure and up to date.
            </p>
            <p>
                The plain vanilla style of web development makes a different choice,
                trading off a few short term comforts for long term benefits like simplicity and being effectively zero-maintenance.
                This approach is made possible by today's browser landscape, which offers excellent web standards support.
            </p>
        </section>
        <section>
            <hr>
            <h2>Up next</h2>
            Learn about using <a href="https://plainvanillaweb.com/pages/components.html">Web Components</a> as the way to compose content, style and behavior.
        </section>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I built a native Windows Todo app in pure C (278 KB, no frameworks) (305 pts)]]></title>
            <link>https://github.com/Efeckc17/simple-todo-c</link>
            <guid>43954649</guid>
            <pubDate>Sun, 11 May 2025 15:57:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Efeckc17/simple-todo-c">https://github.com/Efeckc17/simple-todo-c</a>, See on <a href="https://news.ycombinator.com/item?id=43954649">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">🌟 Simple Todo (C / WinAPI)</h2><a id="user-content--simple-todo-c--winapi" aria-label="Permalink: 🌟 Simple Todo (C / WinAPI)" href="#-simple-todo-c--winapi"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/40b57bd6443be706eec66a7aad9bb92cde60772fc1c44958fc99a64552598b76/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d77696e646f77732d626c7565"><img src="https://camo.githubusercontent.com/40b57bd6443be706eec66a7aad9bb92cde60772fc1c44958fc99a64552598b76/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d77696e646f77732d626c7565" alt="Platform" data-canonical-src="https://img.shields.io/badge/platform-windows-blue"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/54e7575c73d075ee3a666a4c2fa589d8b1084658ffe4774f6677cf3b9d3bd393/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d432d627269676874677265656e"><img src="https://camo.githubusercontent.com/54e7575c73d075ee3a666a4c2fa589d8b1084658ffe4774f6677cf3b9d3bd393/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d432d627269676874677265656e" alt="Language" data-canonical-src="https://img.shields.io/badge/language-C-brightgreen"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0412748680b88a40cce8a326d28a0ce988ab923b710d3e7c0955674e9d3cdf43/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d79656c6c6f77"><img src="https://camo.githubusercontent.com/0412748680b88a40cce8a326d28a0ce988ab923b710d3e7c0955674e9d3cdf43/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d79656c6c6f77" alt="License" data-canonical-src="https://img.shields.io/badge/license-MIT-yellow"></a></p>
<p dir="auto">A modern, native Windows Todo application built with C and Win32 API. This project demonstrates advanced Windows GUI programming and system integration capabilities.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Efeckc17/simple-todo-c/blob/main/img/home.png"><img src="https://github.com/Efeckc17/simple-todo-c/raw/main/img/home.png" alt="Todo App Screenshot"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">✨ Features</h2><a id="user-content--features" aria-label="Permalink: ✨ Features" href="#-features"></a></p>
<ul dir="auto">
<li>📝 Create, edit, and delete todo items</li>
<li>✅ Mark tasks as complete</li>
<li>💾 Persistent storage in AppData</li>
<li>🔔 System tray integration (minimize to tray)</li>
<li>🌙 Native Windows look and feel</li>
<li>🚀 Auto-start with Windows option</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🛠️ Technical Details</h2><a id="user-content-️-technical-details" aria-label="Permalink: 🛠️ Technical Details" href="#️-technical-details"></a></p>
<ul dir="auto">
<li>Written in pure C</li>
<li>Uses Win32 API for GUI</li>
<li>System tray integration</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">💾 Data Storage</h2><a id="user-content--data-storage" aria-label="Permalink: 💾 Data Storage" href="#-data-storage"></a></p>
<p dir="auto">The application stores todos in a binary file:</p>
<ul dir="auto">
<li><strong>Location</strong>: <code>%APPDATA%\TodoApp\todos.dat</code></li>
<li><strong>Format</strong>: Binary file containing the entire todo list</li>
<li><strong>Capacity</strong>: Maximum 100 todos</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">📋 Requirements</h2><a id="user-content--requirements" aria-label="Permalink: 📋 Requirements" href="#-requirements"></a></p>
<ul dir="auto">
<li>Windows OS</li>
<li>MinGW-w64 (GCC compiler)</li>
<li>Windows SDK (included with MinGW)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 Building from Source</h2><a id="user-content--building-from-source" aria-label="Permalink: 🚀 Building from Source" href="#-building-from-source"></a></p>
<ol dir="auto">
<li>
<p dir="auto">Install MinGW-w64:</p>
<ul dir="auto">
<li>Download from <a href="https://www.mingw-w64.org/downloads/" rel="nofollow">MinGW-w64 website</a></li>
<li>Or use <a href="https://www.msys2.org/" rel="nofollow">MSYS2</a></li>
<li>Add MinGW's bin directory to your system PATH</li>
</ul>
</li>
<li>
<p dir="auto">Clone the repository:</p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/Efeckc17/simple-todo-c.git
cd simple-todo-c"><pre>git clone https://github.com/Efeckc17/simple-todo-c.git
<span>cd</span> simple-todo-c</pre></div>
</li>
<li>
<p dir="auto">Build the project:</p>

</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">🎮 Usage</h2><a id="user-content--usage" aria-label="Permalink: 🎮 Usage" href="#-usage"></a></p>
<ol dir="auto">
<li>Run <code>bin/todo.exe</code></li>
<li>Use the interface to:
<ul dir="auto">
<li>Add new todos with the "Add" button</li>
<li>Edit existing todos by selecting and clicking "Edit"</li>
<li>Delete todos with the "Delete" button</li>
<li>Mark todos as complete with the "Complete" button</li>
<li>Set priority levels for each todo</li>
</ul>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">🏗️ Project Structure</h2><a id="user-content-️-project-structure" aria-label="Permalink: 🏗️ Project Structure" href="#️-project-structure"></a></p>
<div data-snippet-clipboard-copy-content=".
├── src/
│   ├── main.c      # Application entry point
│   ├── todo.c      # Todo management logic
│   ├── todo.h      # Todo data structures and declarations
│   └── gui.c       # GUI implementation
├── bin/            # Compiled executable
├── build.bat       # Build script
└── README.md       # This file"><pre><code>.
├── src/
│   ├── main.c      # Application entry point
│   ├── todo.c      # Todo management logic
│   ├── todo.h      # Todo data structures and declarations
│   └── gui.c       # GUI implementation
├── bin/            # Compiled executable
├── build.bat       # Build script
└── README.md       # This file
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔧 Development</h2><a id="user-content--development" aria-label="Permalink: 🔧 Development" href="#-development"></a></p>
<p dir="auto">The project uses the following key components:</p>
<ul dir="auto">
<li><strong>Win32 API</strong>: For window management and GUI</li>
<li><strong>Common Controls</strong>: For modern UI elements</li>
<li><strong>UXTheme</strong>: For Windows visual styles</li>
<li><strong>File I/O</strong>: For data persistence</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">📝 License</h2><a id="user-content--license" aria-label="Permalink: 📝 License" href="#-license"></a></p>
<p dir="auto">This project is licensed under the MIT License - see the <a href="https://github.com/Efeckc17/simple-todo-c/blob/main/LICENSE">LICENSE</a> file for details.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🤝 Contributing</h2><a id="user-content--contributing" aria-label="Permalink: 🤝 Contributing" href="#-contributing"></a></p>
<p dir="auto">Contributions are welcome! Please feel free to submit a Pull Request.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">📫 Contact</h2><a id="user-content--contact" aria-label="Permalink: 📫 Contact" href="#-contact"></a></p>
<p dir="auto">Toxi360 - <a href="https://github.com/Efeckc17">@Efeckc17</a></p>
<p dir="auto">Project Link: <a href="https://github.com/Efeckc17/simple-todo-c">https://github.com/Efeckc17/simple-todo-c</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[High-school shop students attract skilled-trades job offers (175 pts)]]></title>
            <link>https://www.wsj.com/lifestyle/careers/skilled-trades-high-school-recruitment-fd9f8257</link>
            <guid>43954488</guid>
            <pubDate>Sun, 11 May 2025 15:31:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wsj.com/lifestyle/careers/skilled-trades-high-school-recruitment-fd9f8257">https://www.wsj.com/lifestyle/careers/skilled-trades-high-school-recruitment-fd9f8257</a>, See on <a href="https://news.ycombinator.com/item?id=43954488">Hacker News</a></p>
Couldn't get https://www.wsj.com/lifestyle/careers/skilled-trades-high-school-recruitment-fd9f8257: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[DNS piracy blocking orders: Google, Cloudflare, and OpenDNS respond differently (165 pts)]]></title>
            <link>https://torrentfreak.com/dns-piracy-blocking-orders-google-cloudflare-and-opendns-respond-differently-250511/</link>
            <guid>43954459</guid>
            <pubDate>Sun, 11 May 2025 15:26:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://torrentfreak.com/dns-piracy-blocking-orders-google-cloudflare-and-opendns-respond-differently-250511/">https://torrentfreak.com/dns-piracy-blocking-orders-google-cloudflare-and-opendns-respond-differently-250511/</a>, See on <a href="https://news.ycombinator.com/item?id=43954459">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

          <p>    
                 <!-- Breadcrumb NavXT 7.4.1 -->
<span property="itemListElement" typeof="ListItem"><a property="item" typeof="WebPage" title="Go to TorrentFreak." href="https://torrentfreak.com/"><span property="name">Home</span></a><meta property="position" content="1"></span> &gt; <span property="itemListElement" typeof="ListItem"><a property="item" typeof="WebPage" title="Go to the Anti-Piracy category archives." href="https://torrentfreak.com/category/anti-piracy/"><span property="name">Anti-Piracy</span></a><meta property="position" content="2"></span> &gt; <span property="itemListElement" typeof="ListItem"><a property="item" typeof="WebPage" title="Go to the Site Blocking category archives." href="https://torrentfreak.com/category/anti-piracy/site-blocking/"><span property="name">Site Blocking</span></a><meta property="position" content="3"></span> &gt; <span></span>
	</p>

        <p>
                      <span> </span>
                    Pirate site blocking orders issued against DNS resolvers including OpenDNS, Google, and Cloudflare are stacking up in Europe. Since similar demands may eventually surface in other countries, including the U.S., we take a look at how these companies respond to blocking orders. Our research reveals that their responses differ quite a bit, which adds to an already confusing situation.
        </p>
      </div><div>
        <p><img loading="lazy" decoding="async" src="https://torrentfreak.com/images/stop-danger.jpg" alt="stop danger" width="300" height="220">The frontline of online piracy liability keeps moving, and core internet infrastructure providers are increasingly finding themselves in the crosshairs.</p>
<p>For rightsholders, site blocking remains the go-to response in many cases. Until recently, the majority of blockades were implemented by consumer ISPs, but expanded legal efforts are now targeting standalone DNS resolvers. </p>
<p>Over the past year, courts in <a href="https://torrentfreak.com/french-court-orders-cloudflare-to-dynamically-block-motogp-streaming-piracy-250405/">France</a>, <a href="https://torrentfreak.com/court-orders-google-to-poison-public-dns-to-prevent-iptv-piracy-250321/">Italy</a>, and <a href="https://torrentfreak.com/dazns-new-pirate-iptv-blocking-order-confidential-secret-sauce-250502/">Belgium</a> have ordered OpenDNS, Cloudflare, and Google to alter their responses to certain DNS queries. Instead of leading visitors to the domains of pirate sites, the companies are required to intercept queries and redirect them elsewhere. </p>
<p>The main rationale for targeting public DNS resolvers is their growing use for bypassing blocking measures rolled out by Internet providers. However, the American tech companies now being targeted are not happy with the role of ‘Internet police’ and appeals of these orders are still pending.</p>
<h2>OpenDNS Says Farewell</h2>
<p>While these legal battles play out in court, the DNS resolvers still have to comply one way or another. This has resulted in different responses, with Cisco’s OpenDNS taking by far the most drastic action.</p>
<p>When OpenDNS was first ordered to block pirate sites in France, the company made a <a href="https://torrentfreak.com/opendns-suspends-service-in-france-due-to-canal-piracy-blocking-order-240629/">simple but drastic</a> decision to leave the country entirely, effectively affecting all French users. Last week, it <a href="https://torrentfreak.com/opendns-quits-belgium-under-threat-of-piracy-blocks-or-fines-of-e100k-per-day-250416/">repeated this response</a> in Belgium following a similar court order. </p>
<p>Instead of blocking access to more than 100 sports piracy sites, as the Belgian order requires, OpenDNS announced its departure; at least temporarily.  </p>
<p>“Due to a court order in Belgium requiring the implementation of blocking measures to prevent access within Belgium to certain domains, the OpenDNS service is not currently available to users in Belgium,” the company <a href="https://community.cisco.com/t5/security-knowledge-base/opendns-service-currently-not-available-to-users-in-belgium/ta-p/5283479/redirect_from_archived_page/true#M18273">said</a>. </p>
<h2>Cloudflare Complies Using ‘Alternate Mechanisms’</h2>
<p>Not all DNS resolvers take such drastic measures. Cloudflare chooses to comply with court orders in its own way. Cloudflare DNS (1.1.1.1) users who try to access the targeted domains in countries where blocking orders are issued, see the following notice instead. </p>
<center><em>Error HTTP 451</em></center><br><center><picture loading="lazy" decoding="async">
<source type="image/webp" srcset="https://torrentfreak.com/images/livescooerclou.jpg.webp 1032w, https://torrentfreak.com/images/livescooerclou-300x165.jpg.webp 300w" sizes="(max-width: 600px) 100vw, 600px">
<img loading="lazy" decoding="async" src="https://torrentfreak.com/images/livescooerclou.jpg" alt="cloudflare blocked" width="600" height="330" srcset="https://torrentfreak.com/images/livescooerclou.jpg 1032w, https://torrentfreak.com/images/livescooerclou-300x165.jpg 300w, https://torrentfreak.com/images/livescooerclou-600x330.jpg 600w, https://torrentfreak.com/images/livescooerclou-150x82.jpg 150w" sizes="(max-width: 600px) 100vw, 600px">
</picture>
</center>
<p>Interestingly, Cloudflare maintains in its <a href="https://torrentfreak.com/cloudflare-blocked-400-sports-piracy-domains-in-france-last-year-250303/">transparency report</a> that it is not blocking content through its public DNS resolver. Instead, it points out that it uses “alternate mechanisms”.</p>
<p>“Given the extraterritorial effect as well as the different global approaches to DNS-based blocking, Cloudflare […] identified alternate mechanisms to comply with relevant court orders. To date, Cloudflare has not blocked content through the 1.1.1.1 Public DNS Resolver,” the company writes.   </p>
<center><em>Not Blocked</em></center><center><br></center><center><picture loading="lazy" decoding="async">
<source type="image/webp" srcset="https://torrentfreak.com/images/dns-blocked.jpg.webp 900w, https://torrentfreak.com/images/dns-blocked-300x54.jpg.webp 300w" sizes="(max-width: 600px) 100vw, 600px">
<img loading="lazy" decoding="async" src="https://torrentfreak.com/images/dns-blocked.jpg" alt="not blocked" width="600" height="109" srcset="https://torrentfreak.com/images/dns-blocked.jpg 900w, https://torrentfreak.com/images/dns-blocked-300x54.jpg 300w, https://torrentfreak.com/images/dns-blocked-600x109.jpg 600w, https://torrentfreak.com/images/dns-blocked-150x27.jpg 150w" sizes="(max-width: 600px) 100vw, 600px">
</picture>
</center>
<p>The result for Cloudflare DNS users appears to be the same, however. Those who try to access the blocked domains in the applicable countries will be redirected to the HTTP 451 error. </p>
<p>The good news is that affected users are informed about the reason for this technical blockade via the <a href="http://lumendatabase.org/">Lumen Database</a>. That doesn’t appear to be the case with Google. </p>
<h2>Google’s DNS Blackout</h2>
<p>After running tests in both Belgium and France, using various blocked domains, it’s clear that the targeted websites are no longer accessible through Google’s public DNS resolver (8.8.8.8). However, unlike Cloudflare, there is no notification whatsoever. </p>
<p>Instead, Google appears to simply refuse the DNS query, which means that the domain lookup is not linked to any IP address.</p>
<center><em>Query refused</em></center><br><center><picture loading="lazy" decoding="async">
<source type="image/webp" srcset="https://torrentfreak.com/images/refused.jpg.webp 739w, https://torrentfreak.com/images/refused-300x32.jpg.webp 300w" sizes="(max-width: 600px) 100vw, 600px">
<img loading="lazy" decoding="async" src="https://torrentfreak.com/images/refused.jpg" alt="refused" width="600" height="63" srcset="https://torrentfreak.com/images/refused.jpg 739w, https://torrentfreak.com/images/refused-300x32.jpg 300w, https://torrentfreak.com/images/refused-600x63.jpg 600w, https://torrentfreak.com/images/refused-150x16.jpg 150w" sizes="(max-width: 600px) 100vw, 600px">
</picture>
</center>
<p>While this is effective in the sense that the pirate sites are no longer available, it’s not very transparent. Users who try to access the domains will simply see a browser error, which could be caused by various DNS issues. </p>
<center><em>Not resolved</em></center><br><center><picture loading="lazy" decoding="async">
<source type="image/webp" srcset="https://torrentfreak.com/images/livesoccerblocked.jpg.webp 1034w, https://torrentfreak.com/images/livesoccerblocked-300x191.jpg.webp 300w" sizes="(max-width: 600px) 100vw, 600px">
<img loading="lazy" decoding="async" src="https://torrentfreak.com/images/livesoccerblocked.jpg" alt="google blocked" width="600" height="383" srcset="https://torrentfreak.com/images/livesoccerblocked.jpg 1034w, https://torrentfreak.com/images/livesoccerblocked-300x191.jpg 300w, https://torrentfreak.com/images/livesoccerblocked-600x383.jpg 600w, https://torrentfreak.com/images/livesoccerblocked-150x96.jpg 150w" sizes="(max-width: 600px) 100vw, 600px">
</picture>
</center>
<p>Google’s basic response is not limited to the recent Belgian court order. We observed the same query refusal for domain names that were included in French blocking orders over the past several months.</p>
<h2>Transparency is Paramount</h2>
<p>While the different responses from DNS resolvers are interesting, Google’s approach doesn’t make blocking efforts more transparent. These orders are still relatively new, so it’s possible that the company is working on offering more transparency in the future, but currently it only adds to the confusion. </p>
<p>Google’s response also appears to go against the advice of the Belgian court, which required the DNS providers to redirect users to a dedicated page, presumably to provide further detail.</p>
<center><em>Redirect</em></center><br><center><picture loading="lazy" decoding="async">
<source type="image/webp" srcset="https://torrentfreak.com/images/redirect.jpg.webp 1089w, https://torrentfreak.com/images/redirect-300x32.jpg.webp 300w" sizes="(max-width: 600px) 100vw, 600px">
<img loading="lazy" decoding="async" src="https://torrentfreak.com/images/redirect.jpg" alt="redirect" width="600" height="64" srcset="https://torrentfreak.com/images/redirect.jpg 1089w, https://torrentfreak.com/images/redirect-300x32.jpg 300w, https://torrentfreak.com/images/redirect-600x64.jpg 600w, https://torrentfreak.com/images/redirect-150x16.jpg 150w" sizes="(max-width: 600px) 100vw, 600px">
</picture>
</center>
<p>If these blocking orders are upheld by various courts, a more streamlined approach will be welcome. Interfering with DNS is a big step that can’t be taken lightly, so transparency is paramount. That’s relevant for the United States too, where a new <a href="https://torrentfreak.com/new-bill-aims-to-block-foreign-pirate-sites-in-the-u-s-250129/">site-blocking bill</a> also proposes public DNS resolver blockades.</p>
<p><em>—</em></p><p><em>For context, a copy of the recent Belgian court order shared by Cloudflare is availableb<a href="https://torrentfreak.com/images/Belgian_Pro_League_Order.pdf">here (pdf)</a></em></p>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[In 2025, venture capital can't pretend everything is fine any more (260 pts)]]></title>
            <link>https://pivot-to-ai.com/2025/05/03/in-2025-venture-capital-cant-pretend-everything-is-fine-any-more/</link>
            <guid>43953884</guid>
            <pubDate>Sun, 11 May 2025 14:02:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pivot-to-ai.com/2025/05/03/in-2025-venture-capital-cant-pretend-everything-is-fine-any-more/">https://pivot-to-ai.com/2025/05/03/in-2025-venture-capital-cant-pretend-everything-is-fine-any-more/</a>, See on <a href="https://news.ycombinator.com/item?id=43953884">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			<p>Venture capital is screwed. A bubble in AI is their last hope, and they’re betting everything on Sam Altman. It’s heartwarming.</p>
<p>Today, we have the Pitchbook-NVCA Venture Monitor for Q1 2025. This is the National Venture Capital Association telling its members how things are going. It’s the view of VC from the inside. The front cover picture is the light at the end of the tunnel — and it’s an oncoming streetcar. [<a href="https://nvca.org/pitchbook-nvca-venture-monitor/"><i>NVCA</i></a><i>; </i><a href="https://nvca.org/wp-admin/admin-ajax.php?action=get_viewer&amp;file=https%3A%2F%2Fnvca.org%2Fwp-content%2Fuploads%2F2025%2F04%2FQ1-2025-PitchBook-NVCA-Venture-Monitor-19001.pdf#key=dGhlbWVNb2RlPWN1c3RvbSZ0b29sYmFyPXRydWUmbGF6eUxvYWQ9ZmFsc2UmcG9zaXRpb249dG9wJnByZXNlbnRhdGlvbj10cnVlJmRvd25sb2FkPXRydWUmY29weV90ZXh0PXRydWUmYWRkX3RleHQ9dHJ1ZSZkcmF3PXRydWUmZG9jX3JvdGF0aW9uPXRydWUmYWRkX2ltYWdlPXRydWUmZG9jX2RldGFpbHM9dHJ1ZSZzZWxlY3Rpb25fdG9vbD0wJnNjcm9sbGluZz0tMSZzcHJlYWRzPS0xJnpvb21faW49dHJ1ZSZ6b29tX291dD10cnVlJmZpdF92aWV3PXRydWUmYm9va21hcms9dHJ1ZSZmbGlwYm9va190b29sYmFyX3Bvc2l0aW9uPWJvdHRvbSZjdXN0b21Db2xvcj0lMjMzMzMzMzM="><i>NVCA</i></a><i>, PDF</i>]</p>
<p>We covered the <a href="https://pivot-to-ai.com/2024/10/21/venture-capital-is-having-a-bad-time-and-ai-isnt-going-to-fix-it/">Q3 2024 report</a> last year. That one tried very hard to present bad news as okay news. The new report can’t even do that.</p>
<p>Here is the state of venture capital in early 2025:</p>
<ul>
<li aria-level="1">Venture capital is moribund except AI.</li>
<li aria-level="1">AI is moribund except OpenAI.</li>
<li aria-level="1">OpenAI is a weird scam that wants to burn money so fast it summons AI God.</li>
<li aria-level="1">Nobody can cash out.</li>
</ul>
<p>The report mostly blames venture’s woes on President Trump and his tariffs — but venture capital’s problems are systemic and you could see them coming since the zero-interest-rate era.</p>
<p>And they have <i>no idea</i> how to fix this. None at all. The report’s <i>only</i> plan for the future is to cross their fingers and hope.</p>

<h3>Trump’s tariffs have trashed everything</h3>
<p>The Trump economic disaster is the most important material fact for the venture capital sphere. The report goes on and on about the tariffs.</p>
<p>Here’s the first paragraph of the report:</p>
<blockquote><p>With uncertainty dominating US financial markets throughout the first quarter, our prior expectation that 2025 would see a resurgence in venture capital (VC) liquidity and dealmaking has been dimmed. Should the latest iteration of tariffs stand, we expect significant pressure on fundraising and dealmaking in the near term as investors sit on the sidelines and wait for signs of market stabilization.</p></blockquote>
<p>That is: nobody is doing deals because business can’t make plans past lunchtime.</p>
<p>The report somehow fails to mention the bit where the Silicon Valley VC and executive crowd worked their backsides off to elect Trump and several of them sat in the front row at his inauguration. Then they were actually surprised when the leopard ate their faces too.</p>

<p><a href="https://pivot-to-ai.com/2025/05/03/in-2025-venture-capital-cant-pretend-everything-is-fine-any-more/zirp-2005-2025-page/" rel="attachment wp-att-4272"><img decoding="async" src="https://pivot-to-ai.com/wp-content/uploads/2025/05/zirp-2005-2025-page.webp" alt="" width="1762" height="691" srcset="https://pivot-to-ai.com/wp-content/uploads/2025/05/zirp-2005-2025-page.webp 1762w, https://pivot-to-ai.com/wp-content/uploads/2025/05/zirp-2005-2025-page-300x118.webp 300w, https://pivot-to-ai.com/wp-content/uploads/2025/05/zirp-2005-2025-page-1024x402.webp 1024w, https://pivot-to-ai.com/wp-content/uploads/2025/05/zirp-2005-2025-page-768x301.webp 768w, https://pivot-to-ai.com/wp-content/uploads/2025/05/zirp-2005-2025-page-1536x602.webp 1536w" sizes="(max-width: 1762px) 100vw, 1762px"></a></p>

<h3>The end of zero interest</h3>
<p>VC is hilariously unable to cope with not being in a zero-interest-rate environment.</p>
<p>In 2008, the global financial crisis hit. Central banks use interest rates as the brakes on an economy, so they took the brakes off to make sure money kept flowing around. Interest rates went below 1%. And interest stayed near zero for over a decade. [<a href="https://fred.stlouisfed.org/series/FEDFUNDS"><i>St Louis Fed</i></a>]</p>
<p>But zero interest meant that if you <i>had</i> to get returns — say, you’re a pension fund — then there weren’t a lot of places to invest. Venture capital was one place you could put money and get returns.</p>
<p>This meant a flood of money into startups, and that meant all sorts of ridiculous startups got funding. Businesses that lost money on every transaction. SoftBank was setting money on fire as fast as possible, ending in the disaster of WeWork.</p>
<p>Borrowing money was almost free as well. Why not load up on debt?</p>
<p>But then inflation came along, and the Fed put interest rates back up — and suddenly there was less money. Why put money into venture capital when you could get back 5% just buying Treasury bills?</p>
<p>Venture capitalists were around before 2008 — including a lot of the current guys! — but it’s like they completely forgot how to do anything without free money. The party’s over, and now it’s time for the hangover.</p>
<p>So we get hyped up tech bubbles praying for lottery-level returns — because ordinary business returns from, say, making a thing and selling it don’t cut it. Our present hype-fueled AI bubble is a complete worked example.</p>
<h3>Everything is OpenAI</h3>
<p>This year, the investors are all-in on AI. Crypto’s still dead, quantum isn’t taking off — AI’s the last game in the casino. [<a href="https://techcrunch.com/2025/04/23/here-are-the-19-us-ai-startups-that-have-raised-100m-or-more-in-2025/"><i>TechCrunch</i></a>]</p>
<p>There’s lots of graphs in this report showing healthy dollar amounts. These are mostly the <a href="https://pivot-to-ai.com/2025/04/02/openai-signs-its-40-billion-deal-with-softbank-or-maybe-30-billion-probably/">“$40 billion” OpenAI deal led by Softbank</a>, and then the other AI startup deals. Almost all the graphs and statistics in this report are lies based on the one huge OpenAI outlier.</p>
<p>Andreessen Horowitz is right now <a href="https://pivot-to-ai.com/2025/04/10/a16z-raising-fresh-20b-for-ai-bubble-investments/">raising a fresh $20 billion investment fund</a> to try to keep the AI bubble going.</p>
<p>VCs still believe the marketing brochure version of AI, because they don’t actually know anything about technology:</p>
<blockquote><p>Just as “internet” evolved from buzzword to business backbone, AI is following the same playbook.</p></blockquote>
<p>No it isn’t! A completely different thing taking off and working says nothing about whether your personal favourite thing will take off and work! Stop saying dumb things!</p>
<p>Pitchbook says: “57.9% of global VC dollars invested in Q1 went to AI and machine learning startups.” Most of that’s OpenAI. Even Pitchbook calls it “FOMO” — fear of missing out. [<a href="https://pitchbook.com/news/articles/ai-startups-57-9-percent-global-venture-dollars-fear-of-missing-out-drives-up-dealmaking-q1-2025"><i>Pitchbook</i></a>]</p>
<p>AI is the only prospect for a lottery-level win. You and I know that’s not going to happen, but the VCs and their customers, the investors, do not know that. They’re still in. Where else are they gonna go?</p>
<h3>Everything that isn’t AI is moribund</h3>
<p>There’s a world of startups outside AI, and in 2025, they’re not having fun. Investors do not want to put money into early-stage startups with nothing to show as yet:</p>
<blockquote><p>First-time financing activity remains low, reflecting broader trends across the VC industry. In Q1, we recorded $3.8 billion invested across 892 deals, which was down both QoQ and YoY.</p></blockquote>
<blockquote><p>… Only $10 billion was raised across 87 VC funds, setting a pace for the lowest year of fundraising in a decade.</p></blockquote>
<p>Early-stage firms that do get venture funding tend to get acquired early on, instead of doing more rounds to pump their imaginary value number first.</p>
<p>Even when a fund gets investors, it can hardly find anywhere to put the money. One VC firm, Charles River Ventures, returned $275 million of uncommitted capital to its investors. And wasn’t that a shock to the world of VC. [<a href="https://www.nytimes.com/2024/10/02/technology/crv-vc-fund-returning-money.html"><i>NYT</i></a><i>, </i><a href="https://archive.is/YiiDi"><i>archive</i></a>]</p>
<h3>Number must go up</h3>
<p>These companies have mostly imaginary valuations — say they pay $10 million to get 1% of a company, that makes the company worth a billion dollars, right? And not the ten million of actual money it’s got.</p>
<p>The VCs jealously guard these imaginary valuations as big fat book entries they can trade with each other. Just don’t ever look inside the box, don’t test what the market with actual dollars thinks the value is.</p>
<p>A pile of startups just ran out of cash and died in 2024 — more than in 2023. And 2025 is expected to be even worse. [<a href="https://techcrunch.com/2025/01/26/2025-will-likely-be-another-brutal-year-of-failed-startups-data-suggests/"><i>TechCrunch</i></a>]</p>
<p>A lot of these were frankly trash companies funded a few years ago, and they should have died then. But VC still had the startups’ imaginary values on their books and they didn’t want to admit the startups were worthless until they were forced to.</p>
<h3>Nobody can cash out</h3>
<p>AI is the only thing that’s catching the eye of the investors. The investors don’t want to put their money into other areas because they’re just not getting payouts.</p>
<p>Here’s the simple version of venture capital investing:</p>
<ul>
<li aria-level="1">A VC firm starts a fund.</li>
<li aria-level="1">Big investors — pension funds, insurance companies, sovereign wealth funds, super-rich family offices — put money into the fund.</li>
<li aria-level="1">The VC firm puts the money into startups that will progress to an exit — an initial public offering or a bigger company buying them out.</li>
<li aria-level="1">The investors get paid. Hooray!</li>
</ul>
<p>Most startups fail, but one big winner can make up for a pile of losers.</p>
<p>Unfortunately, the stock market is broken — the Trump tariffs again — so IPOs are not popping on launch, so they’re not happening.</p>
<p>CoreWeave, riding the AI buzz for all it was worth, was the big public exit in first quarter 2025, and that one fell flat because their numbers were objectively terrible and their business plan doesn’t work. Ed Zitron has covered CoreWeave at length. But even with all that, CoreWeave on its own was 40% of all first quarter exits by value. [<a href="https://www.wheresyoured.at/core-incompetency/"><i>Where’s Your Ed At</i></a>]</p>
<p>The other big exit was Wiz Security getting bought by Google. But as the report says, “the rest of the exit market has remained relatively silent.”</p>
<p>Funding rounds are increasingly late-stage — that is, VCs are mostly putting extra money into existing companies, often just to keep them on life support.</p>
<p>Many of these later funding rounds also have secondary sales — where startup employees get to sell some equity to the new investors. Because then the talent might not give up and quit to work at a non-zombie. And the old investors get some money back from a company that’s not doing anything.</p>
<h3>The future of venture capital</h3>
<p>The report’s theme for the future is: hope really hard! Maybe markets will recover and IPOs will pop again. Maybe Trump will come up with a coherent plan and stop being volatile and weird. Maybe!</p>
<p>That’s it. That’s all the plan they have. These guys haven’t got a clue what to do next. They really don’t. This is the industry talking to itself and saying “well gosh, chaps, looks like we’re screwed.”</p>
<p>It’s important to note something else here: quite a lot of the venture capital class are not actually so bright. But they got lucky once.</p>
<p>That’s a big thing to say. They’re way more rich and successful than <i>you</i>, David. These are intelligent and educated people, they were definitely good at something! A lot of them have Ph.D.s!</p>
<p>But also, it’s horribly clear that right now they’re way out of their depth. Semafor documented last week how these guys enthusiastically joined a long-running billionaire group chat with literal neo-Nazis as their court philosophers. <a href="https://pivot-to-ai.com/2024/12/01/does-ai-startup-extropic-actually-do-anything/">Marc Andreessen got into e/acc</a> — which is literally a neo-Fascist revival movement. [<a href="https://www.semafor.com/article/04/27/2025/the-group-chats-that-changed-america"><i>Semafor</i></a>]</p>
<p>This is not smart behaviour! This is dumbass behaviour!</p>
<p>These are not people who can be trusted with dangerous machinery such as billions of dollars. They were lucky as hell, and now they’re not.</p>
<p>The <i>only</i> future plan in this report is: maybe Trump will stop acting like a bizarre freak. They’ve met the guy and they think that’s a plan!</p>
<p>Maybe they can start a bubble in guillotines. [<a href="https://furs.social/@Rycochet/114440592779018690"><i>Mastodon</i></a>]</p>
<p>Not that anything unpleasant should happen to them. None of the VC class will ever miss a meal. But you can feel a small amount of schadenfreude at their mild discomfort, while everything burns around the rest of us.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=VcSnLt6Knbs&amp;list=UU9rJrMVgcXTfa8xuMnbhAEA"><em>Video version</em></a></li>
</ul>

		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Title of work deciphered in sealed Herculaneum scroll via digital unwrapping (202 pts)]]></title>
            <link>https://www.finebooksmagazine.com/fine-books-news/title-work-deciphered-sealed-herculaneum-scroll-digital-unwrapping</link>
            <guid>43953883</guid>
            <pubDate>Sun, 11 May 2025 14:02:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.finebooksmagazine.com/fine-books-news/title-work-deciphered-sealed-herculaneum-scroll-digital-unwrapping">https://www.finebooksmagazine.com/fine-books-news/title-work-deciphered-sealed-herculaneum-scroll-digital-unwrapping</a>, See on <a href="https://news.ycombinator.com/item?id=43953883">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>The <a href="https://www.bodleian.ox.ac.uk/">Bodleian Libraries</a> and the Vesuvius Challenge have announced that for the first time researchers have found the title and author inside of a <a href="https://www.finebooksmagazine.com/fine-books-news/inside-herculaneum-scroll-seen-first-time-79-ad">sealed scroll from Herculaneum</a>.</p><p>Using ‘virtual unwrapping’, the scroll PHerc. 172 which is housed at the Bodleian Libraries at the University of Oxford has been identified as <em>On Vices</em> by the Greek philosopher Philodemus. The ethical treatise, known in full as <em>On Vices&nbsp;and Their Opposite Virtues and In Whom They Are and About What</em>, provides guidance for cultivating a virtuous life. In recognition of this achievement, researchers have been awarded the Vesuvius Challenge First Title Prize which includes prize money of $60,000.</p><p>Following the scanning of the scroll in July 2024 at the Diamond Light Source in Harwell, the Vesuvius Challenge released the data publicly, inviting researchers worldwide to contribute to deciphering the text. While the first images of the inside of the scroll were published in February 2025, the discovery of the title page within the innermost part of the scroll required considerable analysis before it could be accurately read and interpreted by papyrologists.&nbsp;</p><p>This was independently achieved by two parties at roughly the same time, by Sean Johnson from the Vesuvius Challenge, and contestant research team Marcel Roth and Micha Nowak from the University of Würzburg. The pair, whose submission further refined the degree of legibility, have been awarded the first Vesuvius Challenge First Title Prize, in recognition of their success in revealing the title.</p><p>Both images were independently reviewed by the Vesuvius Challenge papyrological team, led by Federica Nicolardi. The&nbsp; simultaneous reproduction of the title image from multiple sources, along with independent scholarly review, provides a high degree of confidence in the reading.</p><p>Philodemus (c. 110–c 30 BCE) was an Epicurean philosopher and poet from Gadara whose ethical teachings emphasise the pursuit of pleasure as central to a good life. He argued against rigid logic and formal rhetoric, believing that philosophy should serve practical human happiness rather than abstract intellectual debate. As the author whose works make up the majority of the library in the Villa of Papyri at Herculaneum, it is unsurprising that he was the author of this work too.</p><p>While the scroll’s author and title are now clear, where the text sits within the <em>On Vices </em>series, known by scholars to be at least 10 books long, is still open to interpretation. The book number in the title image is plausibly read as an alpha, indicating that this scroll is Book 1. However, the reading &nbsp;is still uncertain, and other possibilities (e.g. delta, Book 4), while less likely, cannot be completely ruled out. If it is indeed Book 1, this raises further questions since it has generally been understood that the first book of the <em>On Vices</em> was <em>On Flattery</em>, but the text of PHerc. 172 does not correspond with this.</p><p>“This is a very exciting development," said Michael McOsker, a esearcher in Papyrology at UCL who is a member of the Vesuvius Challenge&nbsp;Papyrology Team and one of the editors of this scroll based at the University of Oxford. "Other books from the <em>On Vices and their Opposite Virtues</em> are known from the papyri that were physically unrolled. Best known are <em>On Property Management, </em>book 9 and presumably the opposite virtue to greed, and <em>On Arrogance, </em>book 10, presumably the opposite vice to having a correct evaluation of yourself, but there are others too. This will be a great opportunity to learn more about Philodemus’ ethical views and to get a better view of the <em>On Vices</em> as a whole, especially if it turns out to be the first book. As a technical matter, it’s great that progress continues apace and we’ll soon be able to read these rolls in their entireties.”</p><p><a href="https://www.finebooksmagazine.com/fine-books-news/wolfson-history-prize-2021-shortlist-includes-burning-books">Richard Ovenden</a>, Bodley’s Librarian &amp; Helen Hamlyn Director of the University Libraries, said: “Finding the full title of a work inside a scroll that has been unread for two millennia is an astonishing achievement, and illustrates the huge potential for AI to transform arts and humanities scholarship, our understanding of the past, and breathes new life into ancient artefacts.”</p><p>The Vesuvius Challenge, the global initiative that was launched in 2023 to discover the contents of the Herculaneum Scrolls without any physical intervention to the scrolls themselves, continues to encourage contributions from researchers across the world. Created by Dr Brent Seales at the University of Kentucky, Nat Friedman, and Daniel Gross, the initiative has rewarded teams across the world for their discoveries, including first ink detection and various open-source software&nbsp;<br>contributions.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Epochalypse Project (177 pts)]]></title>
            <link>https://epochalypse-project.org/</link>
            <guid>43952714</guid>
            <pubDate>Sun, 11 May 2025 10:08:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://epochalypse-project.org/">https://epochalypse-project.org/</a>, See on <a href="https://news.ycombinator.com/item?id=43952714">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>

      <h2 id="the-epochalypse-project">The Epochalypse Project</h2>
<h2 id="the-32-bit-timestamp-vulnerability-our-digital-time-bomb">The 32-bit Timestamp Vulnerability: Our Digital Time Bomb</h2>

<p><strong>On 2038-01-19 03:14:08 UTC, millions of sensitive embedded and industrial computer systems worldwide will suddenly start behaving in unpredictable ways, unless we take coordinated action now. And what’s worse, with unsecured time protocols, attackers don’t need to wait until 2038.</strong></p>

<p>This is not science fiction. It’s a real technical vulnerability affecting systems we rely on daily—from hospital equipment to power grids, from banking systems to transportation networks. This vulnerability is embedded in the fundamental architecture of our digital infrastructure.</p>

<h2 id="why-should-you-care">Why Should You Care?</h2>

<p>Without proper preparation, we will face widespread disruptions including:</p>

<ul>
  <li>Hospital equipment displaying incorrect medication times</li>
  <li>Banking systems failing to process payments</li>
  <li>Traffic control systems malfunctioning</li>
  <li>Power grid instabilities causing outages</li>
  <li>Internet service disruptions</li>
  <li>Security systems generating false alarms</li>
</ul>

<p>In our interconnected world, these technical failures could have cascading effects. Critical system failures can endanger lives, disrupt economies, and compromise essential services. <strong>And what’s worse, malicious threat actors can manipulate time synchronization protocols in many cases to trigger this vulnerability at the time of their choosing.</strong> This is particularly concerning given how little attention many networks pay to their Network Time Protocol (NTP) security.</p>

<h2 id="understanding-the-32-bit-timestamp-vulnerability">Understanding the 32-bit Timestamp Vulnerability</h2>

<p>Many computer systems track time using a 32-bit signed integer that counts seconds since 1970-01-01T00:00:00Z (known as “Unix time”). This approach has a mathematical limitation: when this counter reaches its maximum value on 2038-01-19 03:14:08 UTC, affected systems will roll over to negative numbers, causing them to interpret the date as 1901-12-13T20:45:52Z.</p>

<p>This vulnerability exists in:</p>

<ul>
  <li>Legacy systems running critical infrastructure</li>
  <li>Embedded devices in industrial settings</li>
  <li>Internet of Things (IoT) devices</li>
  <li>Transportation and energy management systems</li>
  <li>Medical equipment</li>
  <li>Financial transaction processors</li>
  <li>Telecommunications infrastructure</li>
  <li>Millions of “smart” devices in homes and businesses worldwide</li>
</ul>

<h2 id="the-scale-is-unprecedented">The Scale Is Unprecedented</h2>

<p>The 32-bit timestamp vulnerability is definitively more severe than Y2K for several critical reasons:</p>

<ol>
  <li>
    <p><strong>Massive Scale</strong>: There are now hundreds of times more vulnerable systems than existed during Y2K. For the last 30 years, simple controller computers have been embedded into virtually everything that moves or connects.</p>
  </li>
  <li>
    <p><strong>Embedded Nature</strong>: Unlike Y2K, which primarily affected visible software that could be patched, today’s vulnerability exists in countless embedded systems that cannot be easily updated. Many are physically inaccessible, buried in infrastructure or sealed in hardware.</p>
  </li>
  <li>
    <p><strong>Increased Dependence</strong>: Our society’s dependence on digital infrastructure has increased dramatically since 2000. Critical systems from healthcare to transportation now rely entirely on accurate timestamps for basic operations.</p>
  </li>
  <li>
    <p><strong>Security Implications</strong>: The near-universal connectivity of today’s systems means time-related vulnerabilities can be exploited remotely. Unsecured time protocols mean attackers could potentially trigger failures at will.</p>
  </li>
  <li>
    <p><strong>Less Visibility</strong>: Many vulnerable systems operate without user interfaces or monitoring capabilities, making detection of problems significantly harder than with Y2K.</p>
  </li>
</ol>

<h2 id="a-global-challenge">A Global Challenge</h2>

<p>Our digital infrastructure resembles an interconnected ecosystem. When individual components fail simultaneously, the entire system becomes vulnerable. Even if only 15-30% of critical systems fail, we will experience significant disruptions across multiple sectors.</p>

<p>The challenge is compounded by what economists call a “tragedy of the commons”—where responsibility is distributed but no single entity feels accountable for solving the shared problem. Organizations often assume:</p>

<ul>
  <li>“Our systems represent only a small fraction of the infrastructure”</li>
  <li>“Other stakeholders will address the critical components”</li>
  <li>“Updating legacy systems offers minimal return on investment”</li>
</ul>

<p>One of the most concerning aspects involves security infrastructure. When system clocks suddenly jump backward, security certificates will become invalid across large portions of the internet, compromising our digital security framework.</p>

<h2 id="time-is-limited-action-is-required">Time is Limited, Action is Required</h2>

<p><strong>With approximately 12 years remaining until the critical date, we must prioritize our response.</strong></p>

<p>Our analysis indicates we cannot replace or update all vulnerable systems in time. Many embedded devices cannot be updated at all. However, through coordinated action, we can:</p>

<ol>
  <li>Identify and prioritize the most critical vulnerable systems</li>
  <li>Implement fixes where possible</li>
  <li>Develop contingency plans for systems that cannot be updated</li>
  <li>Establish global coordination to manage the transition</li>
</ol>

<h2 id="who-we-are">Who We Are</h2>

<p>The Epochalypse Project was founded by Trey Darley (aka “treyka”) and Pedro Umbelino (aka “kripthor”), two cybersecurity researchers with extensive experience in vulnerability research and critical infrastructure protection.</p>

<p>Trey Darley has been working in IT since his teens, building a diverse career as a developer, sysadmin, network engineer, and cybersecurity specialist. His professional journey has included running IT for a major film production, foundational work in cyber threat intelligence, and serving in a load-bearing capacity at a national CERT during the COVID years. Trey also served on the FIRST.org board of directors, which took him around the world connecting with cybersecurity professionals.</p>

<p>Trey first became aware of the 2038 problem shortly after Y2K was addressed. Around 2016, he began jokingly referencing it in technical conference talks, saying “surely we’re going to fix all these security vulnerabilities before 2038 rolls around.” In 2023, he realized with alarm that 2038 is now closer to us than the 2008 financial crisis. While traveling globally in his FIRST.org role, Trey repeatedly asked knowledgeable contacts what was being done about the 2038 issue. He had assumed some government-sponsored technical group was addressing it, but discovered that no such master plan seems to exist.</p>

<p>Pedro Umbelino began his journey into technology at age 8, teaching himself to code BASIC on a Spectrum computer. By 14, he was decompiling computer viruses using A86/D86, sparked by a chance encounter with an Assembly language book at his local bookstore. Pedro’s career has spanned roles as a sysadmin, developer, and entrepreneur, but computer security remained his passion throughout. For the past decade, he’s focused exclusively on security research across various domains, discovering vulnerabilities in multiple systems along the way.</p>

<p>The Epochalypse Project began in 2024 after Pedro attended Trey’s lightning talk at the hack.lu conference. Pedro had just presented “Blowing up Gas Stations for Fun and Profit,” emphasizing the dangers of exposed industrial systems, when Trey’s message about the looming 2038 problem struck him. Realizing that 2038 was closer than Y2K had been when preparations began, Pedro ran tests on a device and discovered fundamental vulnerabilities. He immediately reached out to Trey, and they decided to start this project together.</p>

<p>This initiative is a side effort driven by their shared concern about a critical vulnerability that isn’t receiving adequate attention. As Trey puts it, “As it seems nobody has a master game plan, it’s up to us to organize and take some coordinated action.” Together, they bring complementary skills in technical research, vulnerability assessment, and public awareness campaigns—applying lessons learned from previous global technical challenges while addressing the unique aspects of the 32-bit timestamp vulnerability.</p>

<p>The Epochalypse Project builds on their combined experience in coordinating responses to widespread vulnerabilities—applying lessons learned from previous global technical challenges while addressing the unique aspects of the 32-bit timestamp vulnerability.</p>

<h2 id="the-epochalypse-project-mission">The Epochalypse Project Mission</h2>

<p>We are building a collaborative global initiative to address the 32-bit timestamp vulnerability through:</p>

<ul>
  <li>Standardized testing methodologies</li>
  <li>Documentation of system vulnerabilities</li>
  <li>Development of remediation strategies</li>
  <li>Knowledge sharing across sectors and borders</li>
</ul>

<p>Your participation matters—whether you’re a technical expert or simply someone with a smartphone. Every test you run helps us map vulnerabilities, and every solution you share can safeguard countless systems.</p>

<h2 id="why-this-requires-urgent-global-attention">Why This Requires Urgent Global Attention</h2>

<p>The 32-bit timestamp vulnerability has received insufficient attention despite being demonstrably more severe than Y2K. The technology industry has been aware of this issue since the 1990s, yet coordinated remediation efforts remain limited. <strong>People aren’t taking action right now, and this must change immediately.</strong> The delay in addressing this vulnerability is not just concerning—it’s potentially catastrophic.</p>

<p><strong>You can be part of the solution.</strong></p>

<p>The following sections outline how people in different roles can contribute to this critical effort.</p>

<hr>

<h2 id="how-you-can-help">How You Can Help</h2>

<h3 id="safety-guidelines-for-testing">Safety Guidelines for Testing</h3>

<p><strong>Important: Follow these safety precautions when testing for 32-bit timestamp vulnerabilities:</strong></p>

<ul>
  <li>Only test systems you own or have explicit permission to test</li>
  <li>Never test production systems or critical infrastructure</li>
  <li>Back up all important data before testing</li>
  <li>Physically isolate systems with modified dates</li>
  <li>Prevent test time signals from affecting other systems</li>
  <li>Return systems to the correct date after testing</li>
  <li>Document all observations, even seemingly minor ones</li>
</ul>

<h3 id="for-general-public">For General Public</h3>

<p>Even without technical expertise, you can make valuable contributions:</p>

<ul>
  <li>Test your personal smart devices by changing their dates to 2038-01-19 03:14:08 UTC (the “zero hour” of the 32-bit timestamp vulnerability)</li>
  <li>Document any errors or unusual behaviors you observe</li>
  <li>Test devices like smart TVs, fitness trackers, and home security systems</li>
  <li>Enter dates beyond 2038 in websites you regularly use</li>
  <li>Ask technology companies about their 32-bit timestamp vulnerability readiness when making purchases</li>
  <li>Raise awareness among friends, family, and representatives</li>
  <li>Join our community discussions at <a href="https://github.com/orgs/Epochalypse-Project/discussions">our forums</a></li>
  <li>Subscribe to our <a href="https://groups.io/g/epochalypse-discuss">mailing list</a> for updates</li>
</ul>

<h3 id="for-industry-professionals">For Industry Professionals</h3>

<h4 id="manufacturers">Manufacturers</h4>
<ul>
  <li>Test products with system times set to 2038-01-19 03:14:08 UTC and beyond</li>
  <li>Document all errors, crashes, or unusual behaviors</li>
  <li>Create test certificates with expiration dates beyond 2038</li>
  <li>Update security requirements to include timestamp rollover mitigation</li>
  <li>Test database systems for proper handling of post-2038 dates</li>
  <li>Incorporate timestamp testing into vulnerability management</li>
  <li>Develop firmware/software updates for affected products</li>
  <li>Include 32-bit timestamp vulnerability compliance in product documentation</li>
</ul>

<h4 id="importers--distributors">Importers &amp; Distributors</h4>
<ul>
  <li>Verify that manufacturers have tested products for 32-bit timestamp vulnerability compliance</li>
  <li>Request compliance documentation from suppliers</li>
  <li>Conduct sample testing on imported products</li>
  <li>Test how products handle certificates with post-2038 expiration dates</li>
  <li>Maintain records of tested products</li>
  <li>Report vulnerabilities to manufacturers</li>
  <li>Create customer awareness materials</li>
</ul>


<ul>
  <li>Coordinate testing efforts between manufacturers and authorities</li>
  <li>Maintain comprehensive documentation</li>
  <li>Help manufacturers understand long-term support requirements</li>
  <li>Ensure technical documentation addresses the 32-bit timestamp vulnerability</li>
  <li>Facilitate information sharing about discovered vulnerabilities</li>
  <li>Connect manufacturers with testing resources</li>
</ul>

<h3 id="for-government--public-sector">For Government &amp; Public Sector</h3>

<ul>
  <li>Develop guidance documents for critical infrastructure operators</li>
  <li>Create regulatory frameworks requiring 32-bit timestamp vulnerability compliance</li>
  <li>Establish vulnerability reporting mechanisms</li>
  <li>Coordinate cross-border simulation exercises</li>
  <li>Assess national-level risks to essential services</li>
  <li>Develop sector-specific guidelines</li>
  <li>Allocate research funding for mitigation solutions</li>
  <li>Host multi-stakeholder workshops</li>
  <li>Update technical standards</li>
  <li>Create certification schemes verifying protection against 32-bit timestamp vulnerabilities</li>
  <li>Develop public awareness campaigns</li>
  <li>Establish emergency response protocols</li>
</ul>

<h3 id="for-technical-professionals">For Technical Professionals</h3>

<h4 id="cybersecurity-researchers">Cybersecurity Researchers</h4>
<ul>
  <li>Analyze firmware to identify vulnerability patterns</li>
  <li>Reverse engineer time-handling protocols</li>
  <li>Create specialized testing tools</li>
  <li>Develop safe proof-of-concept demonstrations</li>
  <li>Map time-related attack surfaces</li>
  <li>Audit code for time_t dependencies</li>
  <li>Share findings through responsible disclosure</li>
</ul>

<h4 id="incident-responders">Incident Responders</h4>
<ul>
  <li>Develop response playbooks for time-related failures</li>
  <li>Create forensic analysis tools</li>
  <li>Design containment strategies for cascading failures</li>
  <li>Test recovery procedures against 32-bit timestamp vulnerability scenarios</li>
  <li>Design simulation exercises</li>
  <li>Document system behavior patterns during time anomalies</li>
  <li>Train teams to recognize time-related failures</li>
</ul>

<h4 id="software-developers">Software Developers</h4>
<ul>
  <li>Audit codebases for 32-bit time_t usage</li>
  <li>Upgrade to 64-bit time implementations</li>
  <li>Review code for hardcoded time assumptions</li>
  <li>Create time-specific unit tests</li>
  <li>Refactor algorithms to handle rollover gracefully</li>
  <li>Develop time simulation libraries</li>
  <li>Review database schemas for time limitations</li>
  <li>Implement error detection and recovery mechanisms</li>
</ul>

<h4 id="qa-professionals">QA Professionals</h4>
<ul>
  <li>Develop test suites for time-related functions</li>
  <li>Create frameworks for time manipulation testing</li>
  <li>Design edge cases for date handling</li>
  <li>Build regression test suites for vulnerability fixes</li>
  <li>Create virtualized testing environments</li>
  <li>Document time-testing methodologies</li>
  <li>Design test matrices covering time zones and DST scenarios</li>
</ul>

<hr>

<h2 id="join-our-global-response-team">Join Our Global Response Team</h2>

<p>The Epochalypse Project serves as a central coordination point for 32-bit timestamp vulnerability testing, reporting, and remediation. All findings submitted to our platform are shared with the global community to accelerate solutions.</p>

<p><strong>Submit your findings, testing methodologies, and remediation strategies through our [reporting portal].</strong></p>

<p>By working together across sectors and borders, we can transform this potential digital disaster into a testament to human foresight and cooperation.</p>

<p><em>Let’s secure our digital future—together.</em></p>


      </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Build iOS Apps on Linux and Windows (WSL) (202 pts)]]></title>
            <link>https://forums.swift.org/t/xtool-cross-platform-xcode-replacement-build-ios-apps-on-linux-and-more/79803</link>
            <guid>43952239</guid>
            <pubDate>Sun, 11 May 2025 08:10:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://forums.swift.org/t/xtool-cross-platform-xcode-replacement-build-ios-apps-on-linux-and-more/79803">https://forums.swift.org/t/xtool-cross-platform-xcode-replacement-build-ios-apps-on-linux-and-more/79803</a>, See on <a href="https://news.ycombinator.com/item?id=43952239">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemscope="" itemtype="http://schema.org/DiscussionForumPosting" id="main-outlet" role="main">
      <meta itemprop="headline" content="Xtool: cross-platform Xcode replacement. Build iOS apps on Linux and more!">
      
      <meta itemprop="datePublished" content="2025-05-08T20:10:45Z">
        <meta itemprop="articleSection" content="Community Showcase">
      <meta itemprop="keywords" content="linux, packagemanager">
      


          <div itemprop="text" id="post_1">
              <p>Hi folks! A few months ago I shared my <a href="https://forums.swift.org/t/introducing-an-sdk-for-building-ios-macos-apps-on-linux-experimental/66233">Swift SDK for Darwin</a>, which allows you to build iOS Swift Packages on Linux, amongst other things. I mentioned that a lot of work still needed to be done, such as handling codesigning, packaging, and bundling.</p>
<p>I'm super excited to share that we've finally reached the point where all of these things are now possible with cross-platform, open source software. Enter, xtool!</p>


<h2><a name="p-366337-about-1" href="#p-366337-about-1"></a>About</h2>
<p>xtool does a lot of things (because Xcode does a lot of things <img src="https://emoji.discourse-cdn.com/apple/sweat_smile.png?v=14" title=":sweat_smile:" alt=":sweat_smile:" loading="lazy" width="20" height="20">) but the headline features are</p>
<p><img src="https://emoji.discourse-cdn.com/apple/white_check_mark.png?v=14" title=":white_check_mark:" alt=":white_check_mark:" loading="lazy" width="20" height="20"> Build a SwiftPM package into an iOS app</p>
<p><img src="https://emoji.discourse-cdn.com/apple/white_check_mark.png?v=14" title=":white_check_mark:" alt=":white_check_mark:" loading="lazy" width="20" height="20"> Sign and install iOS apps</p>
<p><img src="https://emoji.discourse-cdn.com/apple/white_check_mark.png?v=14" title=":white_check_mark:" alt=":white_check_mark:" loading="lazy" width="20" height="20"> Interact with Apple Developer Services programmatically</p>
<p>This means it's finally possible to <strong>build and deploy iOS apps from Linux and Windows (WSL)</strong>. At the same time, xtool is SwiftPM-based and fully declarative, which means you can also use it to <strong>replace Xcode on macOS</strong> for building iOS software!</p>
<div><a href="https://global.discourse-cdn.com/swift/original/3X/c/9/c9f681035b60b7f94f3d3bc4a6120ce26142b845.jpeg" data-download-href="/uploads/short-url/sOE6rdb6FhaSCbvUvE7YeyuHInX.jpeg?dl=1" title="A screenshot of xtool being invoked from VSCode" rel="noopener nofollow ugc"><img src="https://global.discourse-cdn.com/swift/optimized/3X/c/9/c9f681035b60b7f94f3d3bc4a6120ce26142b845_2_629x500.jpeg" alt="A screenshot of xtool being invoked from VSCode" data-base62-sha1="sOE6rdb6FhaSCbvUvE7YeyuHInX" width="629" height="500" srcset="https://global.discourse-cdn.com/swift/optimized/3X/c/9/c9f681035b60b7f94f3d3bc4a6120ce26142b845_2_629x500.jpeg, https://global.discourse-cdn.com/swift/optimized/3X/c/9/c9f681035b60b7f94f3d3bc4a6120ce26142b845_2_943x750.jpeg 1.5x, https://global.discourse-cdn.com/swift/optimized/3X/c/9/c9f681035b60b7f94f3d3bc4a6120ce26142b845_2_1258x1000.jpeg 2x" data-dominant-color="1D1E20"></a></div>
<h2><a name="p-366337-using-xtool-2" href="#p-366337-using-xtool-2"></a>Using xtool</h2>
<p>I put together some DocC Articles + a DocC Tutorial on how to get started with xtool. You can find these <a href="https://swiftpackageindex.com/xtool-org/xtool/documentation/xtool" rel="noopener nofollow ugc">on Swift Package Index</a>.</p>
<details>
<summary>
Gotchas</summary>
<p>The aim so far has been to flesh out the core functionality in a typical build-run-edit loop for an iOS application. There's some things that are infeasible outside macOS, and others that are possible but still need to be implemented:</p>
<ul>
<li><strong>Interface builder:</strong> would require a lot of effort to replicate, probably not worth it since SwiftUI mostly supersedes it at this point</li>
<li><strong>Asset catalogs:</strong> require reverse engineering to implement, might be worth it. You can still add images as raw files in the absence of asset catalogs, it's just less efficient.</li>
<li><strong>Proprietary macros:</strong> The ones that are also in the Linux toolchain (e.g. <code>@Observable</code>) work just fine, but Apple-proprietary macros (such as the SwiftData ones) will need to be reverse-engineered and rebuilt from source if we want them to work. Or Apple could ship these as <a href="https://forums.swift.org/t/poc-improving-macro-build-times-with-webassembly/70967">WebAssembly Macros</a> which would make them host-independent <img src="https://emoji.discourse-cdn.com/apple/folded_hands.png?v=14" title=":folded_hands:" alt=":folded_hands:" loading="lazy" width="20" height="20"></li>
<li><strong>App Extensions:</strong> Right now you can only build "Application"-type targets. I think App Extensions should be easy to implement as an addition to the <code>xtool.yml</code> spec, but just require engineering effort.</li>
<li><strong>LLDB debugging</strong>: this used to be pretty easy before iOS 17, and xtool has all of the pieces in place to support lldb with those old versions, but Apple has recently made a number of changes to the way you invoke LLDB's <code>debugserver</code> on iOS. There are a few modern tools that support the new approach (notably <a href="https://github.com/doronz88/pymobiledevice3" rel="noopener nofollow ugc">pymobiledevice3</a>), and it's already possible to use these tools to connect to lldb, but I definitely want to integrate this into xtool down the road. This will require a good amount of work since the new RemoteXPC protocol is entirely different from the legacy mechanism, but it'll probably be necessary in the future for other functionality as well.</li>
<li><strong>App Store deployment</strong>: You can build and run on your own device with xtool, but it doesn't let you deploy builds to App Store Connect yet. Luckily 1) iTMSTransporter is cross-platform and 2) we have all the other infra in place to interact with the ASC API, so this should be achievable too, but remains to be done.</li>
</ul>
</details>
<p>xtool is a culmination of 8 years of work around iOS app deployment (the commit history has some nuggets!) but I'm the sole developer on this project and replicating Xcode is a massive undertaking. Now that I'm ready to share the project more widely, I'd be very happy to accept external contributions to flesh out the feature set. And if you end up using xtool, please let me know!</p>
            </div>
          <div id="post_2" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" rel="nofollow" href="https://forums.swift.org/u/Karl"><span itemprop="name">Karl</span></a>
                (👑🦆)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2025-05-09T10:16:18Z">
                    May 9, 2025, 10:16am
                  </time>
                  <meta itemprop="dateModified" content="2025-05-09T10:16:18Z">
              <span itemprop="position">2</span>
              </span>
            </p>
            <div itemprop="text">
              <p>My understanding has always been that building iOS apps on other OSes is more of a legal/licensing challenge than a technical one. For example, quoting from the <a href="https://developer.apple.com/support/terms/apple-developer-program-license-agreement/" rel="noopener nofollow ugc">Apple Developer Program License Agreement</a>:</p>
<blockquote>
<p>2.1 Permitted Uses and Restrictions; Program Services</p>
<p>Subject to the terms and conditions of this Agreement, Apple hereby grants You during the Term, a limited, non-exclusive, personal, revocable, non-sublicensable and non-transferable license to:</p>
<ol>
<li>Install a reasonable number of copies of the Apple Software provided to You under the Program <strong>on Apple-branded products</strong> owned or controlled by You, to be used internally by You or Your Authorized Developers for the sole purpose of developing or testing Covered Products designed to operate on the applicable Apple-branded products, except as otherwise expressly permitted in this Agreement;</li>
</ol>
</blockquote>
<blockquote>
<p>2.6 No Other Permitted Uses</p>
<p>Except as otherwise set forth in this Agreement, You agree not to rent, lease, lend, upload to or host on any website or server, sell, redistribute, or sublicense the Apple Software, Apple Certificates, or any Services, in whole or in part, or to enable others to do so. You may not use the Apple Software, Apple Certificates, or any Services provided hereunder for any purpose not expressly permitted by this Agreement, including any applicable Attachments and Schedules. <strong>You agree not to install, use or run the Apple SDKs on any non-Apple-branded computer</strong>, and not to install, use or run iOS, iPadOS, macOS, tvOS, visionOS, watchOS, and Provisioning Profiles on or in connection with devices other than Apple-branded products, or to enable others to do so. <strong>You may not and You agree not to, or to enable others to, copy (except as expressly permitted under this Agreement), decompile, reverse engineer, disassemble, attempt to derive the source code of, modify, decrypt, or create derivative works of the Apple Software</strong>, Apple Certificates or any Services provided by the Apple Software or otherwise provided hereunder, or any part thereof (except as and only to the extent any foregoing restriction is prohibited by applicable law or to the extent as may be permitted by licensing terms governing use of open-sourced components or sample code included with the Apple Software).</p>
</blockquote>
<p>Now, I am not a lawyer, so I can't give a very informed opinion about whether this falls within the permitted use or whether these terms are even enforceable. I am aware that the <em>copyright</em> situation with regard to reverse engineering for compatibility has changed recently (see <a href="https://en.wikipedia.org/wiki/Google_LLC_v._Oracle_America,_Inc." rel="noopener nofollow ugc">Oracle vs Google</a>), but I'm not sure to what extent that affects the terms in the license agreement.</p>
<p>At the very least, I can say that it seems risky, and certainly if you <em>do</em> deploy directly to the AppStore (as it is suggested is coming) I would not be surprised if you were found to be in violation of the agreement. Again, not a lawyer, but my understanding of the Epic Games vs Apple case is that Apple has pretty wide latitude to terminate developer accounts.</p>
<p>Can you comment on this? I assume you know better than I do. What's your understanding of the licensing issue?</p>
            </div>

            

          </div>
          <div id="post_3" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" rel="nofollow" href="https://forums.swift.org/u/kabiroberai"><span itemprop="name">kabiroberai</span></a>
                (Kabir Oberai)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2025-05-09T10:34:48Z">
                    May 9, 2025, 10:34am
                  </time>
                  <meta itemprop="dateModified" content="2025-05-09T11:10:30Z">
              <span itemprop="position">3</span>
              </span>
            </p>
            <div itemprop="text">
              <p>I've personally been using xtool on Mac hardware, where it's still very useful in that it's a lot more lightweight and declarative than Xcode, and for that matter when dual-booting a different OS (think Asahi Linux / Bootcamp Windows.)</p>
<p>xtool itself doesn't vend any traces of the Apple SDKs / toolchains, which is why the setup process asks users to download and provide a copy of Xcode.xip themselves, and builds the iOS SDK on the spot. I'm not a lawyer but one should definitely read the license agreement and determine whether their use case in compliance — you do have to agree to it before you download Xcode.xip.</p>
<p>And regarding distribution: since xtool works on both Linux and macOS, if someone is wary of publishing from Linux CI (say their CI provider doesn’t guarantee that their Linux jobs will run on macOS hardware) they're definitely free to perform the final App Store build on macOS CI instead.</p>
            </div>

            

          </div>
          <div id="post_4" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" rel="nofollow" href="https://forums.swift.org/u/KristijanZic"><span itemprop="name">KristijanZic</span></a>
                (Kristijan Žic)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2025-05-10T02:10:25Z">
                    May 10, 2025,  2:10am
                  </time>
                  <meta itemprop="dateModified" content="2025-05-10T02:10:25Z">
              <span itemprop="position">4</span>
              </span>
            </p>
            <div itemprop="text">
              <p>This would be very interesting for cross platform frameworks, Flutter and Dioxus come to mind.<br>
And for people that have been looking to develop for iOS from Linux. I hope Apple doesn't try to end this repo but instead embraces the value of it.</p>
<p>Does this allow for debugging with a device as well or is it just for installing apps atm?</p>
            </div>

            

          </div>
          <div id="post_5" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" rel="nofollow" href="https://forums.swift.org/u/kabiroberai"><span itemprop="name">kabiroberai</span></a>
                (Kabir Oberai)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2025-05-10T06:40:20Z">
                    May 10, 2025,  6:40am
                  </time>
                  <meta itemprop="dateModified" content="2025-05-10T06:40:20Z">
              <span itemprop="position">5</span>
              </span>
            </p>
            <div itemprop="text">
              
<p>I briefly mentioned this in the gotchas section, but xtool can’t start a debugging session itself quite yet, though it’s on the roadmap. In the meantime you can use a tool like <a href="https://github.com/doronz88/pymobiledevice3" rel="noopener nofollow ugc">pymobiledevice3</a> to start a debug session on your device, and then attach to it with lldb’s remote functionality. I realize that it might not be super clear how to do this, so I might write some documentation on the pymobiledevice3 setup even before we're able to integrate this into xtool.</p>
            </div>

            

          </div>
    </div></div>]]></description>
        </item>
    </channel>
</rss>