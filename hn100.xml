<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 16 Jan 2024 20:00:07 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[On being listed as an artist whose work was used to train Midjourney (407 pts)]]></title>
            <link>https://catandgirl.com/4000-of-my-closest-friends/</link>
            <guid>39016395</guid>
            <pubDate>Tue, 16 Jan 2024 17:58:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://catandgirl.com/4000-of-my-closest-friends/">https://catandgirl.com/4000-of-my-closest-friends/</a>, See on <a href="https://news.ycombinator.com/item?id=39016395">Hacker News</a></p>
<div id="readability-page-1" class="page"><div href="" rel="bookmark" title="Permanent Link to Generation Gaps">
          <h2>4,000 of My Closest Friends</h2>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[TinyML: Ultra-low power Machine Learning (156 pts)]]></title>
            <link>https://www.ikkaro.net/what-tinyml-is/</link>
            <guid>39014866</guid>
            <pubDate>Tue, 16 Jan 2024 16:03:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ikkaro.net/what-tinyml-is/">https://www.ikkaro.net/what-tinyml-is/</a>, See on <a href="https://news.ycombinator.com/item?id=39014866">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text">
			

<figure><img fetchpriority="high" decoding="async" width="1024" height="320" src="https://www.ikkaro.net/wp-content/uploads/2024/01/what-is-tinyml-1024x320.jpg" alt="What TinyML is" srcset="https://www.ikkaro.net/wp-content/uploads/2024/01/what-is-tinyml-1024x320.jpg 1024w, https://www.ikkaro.net/wp-content/uploads/2024/01/what-is-tinyml-300x94.jpg 300w, https://www.ikkaro.net/wp-content/uploads/2024/01/what-is-tinyml-768x240.jpg 768w, https://www.ikkaro.net/wp-content/uploads/2024/01/what-is-tinyml-1536x480.jpg 1536w, https://www.ikkaro.net/wp-content/uploads/2024/01/what-is-tinyml.jpg 1920w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>TinyML or Tiny Machine Learning refers to the <strong>use of Machine Learning in microcontrollers</strong>. In systems that unlike those used in traditional ML have few resources, are systems that have little CPU, little RAM and extremely low power consumption in the order of magnitude of milliwatts or microwatts.</p>



<p>Its official website is the <a href="https://www.tinyml.org/" target="_blank" rel="noreferrer noopener">TinyML Foundation</a>.</p>



<p>What is done is to reduce large models for use with equipment with very few resources and microcontrollers. The preferred field of the Makers.</p>




<p>I have started a series of 3 courses offered by Harvard for free</p>



<ol>
<li><em><a href="https://www.edx.org/learn/machine-learning/harvard-university-fundamentals-of-tinyml" target="_blank" rel="noreferrer noopener">Fundamentals of TinyML</a></em> (What do I build, what for and what are the problems)</li>



<li><em>Applications of TinyML</em> (data-driven, bias, etc) </li>



<li><em>Deploying TinyML</em> (where do we put our models, security and privacy)</li>
</ol>



<p>The following notes are from the first Fundamentals of TinyML where they explain what it is, when it is applied, the different techniques that are used, etc, etc.</p>



<p>Embedded systems using microcontrollers cannot work with the large models, as they have memories up to 256kB. Here are some examples of operating systems that can be used with microcontrollers</p>



<ul>
<li><a href="https://www.freertos.org/index.html" target="_blank" rel="noreferrer noopener">FreeRTOS</a></li>



<li><a href="https://os.mbed.com/mbed-os/" target="_blank" rel="noreferrer noopener">Mbed OS</a></li>
</ul>



<p><a href="https://www.ikkaro.net/machine-learning/" target="_blank" rel="noreferrer noopener">Machine Learning</a> consists of algorithms that search for patterns in data.</p>



<p>With TinyML, techniques are used to compress these algorithms so that they remain effective in finding patterns in data.</p>



<p>There are 5 quintillion bytes of data produced daily by IoT and only less than 1% is analyzed.</p>



<h2><span id="Algorithm_compression_techniques">Algorithm compression techniques</span></h2>



<p>Some algorithm compression techniques are:</p>



<h3><span id="Pruning">Pruning</span></h3>



<p><strong>Pruning Synapsis:</strong> We remove network connections from the model. Sometimes it can decrease the accuracy.</p>



<p><strong>Pruning Neurons:</strong> We can also eliminate entire neurons from our model which reduces the computational demand of the network.</p>



<h3><span id="Quantization">Quantization</span></h3>



<p>It consists of discretizing the values within a small range. For example if we discretize a float within the range -128 to 127 we only have to traverse 256 values. Going from a float point value that is stored in 4 bytes to an integer value that is stored in 1 byte implies a x4 reduction in size.</p>



<p>Quantization is going to be critical in TinyML due to the limited resources available.</p>



<h3><span id="Knowledge_distillation">Knowledge distillation</span></h3>



<p>Apply our knowledge and know how to make the model small.</p>



<h2><span id="Tools">Tools</span></h2>



<p>We use Tensor Flow Lite. While tensorFlow is focused on ML Researcher, Tensor Flow Lite is for Application Developer.</p>



<h2><span id="Uses_of_TinyML">Uses of TinyML</span></h2>



<p>Although they are not cited, of course being on this website we can find <strong>uses of TinyML dedicated to the DIY, Maker and Hacker world</strong>.</p>



<h3><span id="Uses_of_TinyML_in_Industry">Uses of TinyML in Industry</span></h3>



<p>In Industry, in maintenance, to warn us when there are vibrations that indicate that there will be breakage, etc, etc. increases efficiency and reduces costs. The negative points are the accuracy that can give us false alarms. In case of false alarm whose responsibility is the operator or the system.</p>



<h3><span id="TinyML_in_the_environment">TinyML in the environment</span></h3>



<p>Instead of collecting data that then has to be processed, with TinyML we have real-time answers about changes in the environment, for example in the life of wild animals.</p>



<h3><span id="TinyML_for_humans">TinyML for humans</span></h3>



<p>Helps people with disabilities to perform more tasks without having to use their hands. Improving the UI and UX of applications to make them easier to use.</p>



<p>We build technology to improve our experience as humans. Technology has to help people</p>



<h2><span id="Risks_and_downsides">Risks and downsides</span></h2>



<ul>
<li>Will it work well across all population groups? </li>



<li>Is the privacy of our data assured? </li>



<li>Can we protect this data?</li>
</ul>



<p>We have to create technology based on human-centered AI. Design, development and deployment</p>
<!-- AI CONTENT END 1 -->
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Is Google Getting Worse? A Longitudinal Investigation of SEO Spam in Search [pdf] (130 pts)]]></title>
            <link>https://downloads.webis.de/publications/papers/bevendorff_2024a.pdf</link>
            <guid>39013497</guid>
            <pubDate>Tue, 16 Jan 2024 14:21:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://downloads.webis.de/publications/papers/bevendorff_2024a.pdf">https://downloads.webis.de/publications/papers/bevendorff_2024a.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=39013497">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Filecoin Foundation Successfully Deploys IPFS in Space (146 pts)]]></title>
            <link>https://fil.org/blog/filecoin-foundation-successfully-deploys-interplanetary-file-system-ipfs-in-space/</link>
            <guid>39013412</guid>
            <pubDate>Tue, 16 Jan 2024 14:10:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fil.org/blog/filecoin-foundation-successfully-deploys-interplanetary-file-system-ipfs-in-space/">https://fil.org/blog/filecoin-foundation-successfully-deploys-interplanetary-file-system-ipfs-in-space/</a>, See on <a href="https://news.ycombinator.com/item?id=39013412">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><em>Mission Sending Files from Earth to a Satellite to Demonstrate How IPFS Can Improve Communications Across Long Distances</em></p><p>Filecoin Foundation (FF) successfully completed a first-of-its-kind mission deploying the InterPlanetary File System (IPFS) in space. The recent demonstration involved sending files from Earth to orbit and back using an implementation of the IPFS protocol designed for space communications.</p><p>This mission, conducted with Lockheed Martin-developed software, demonstrated how IPFS – a decentralized content distribution system – can bring the benefits of decentralized technologies to space to enable better communications across long distances and resilience in challenging environments.</p><p>As part of the demonstration, <a href="https://github.com/ipfs/papers/raw/master/ipfs-cap2pfs/ipfs-p2p-file-system.pdf">the IPFS white paper</a> and an image of FF’s mascot (Biscuit, the “FileCorgi”) were transmitted to an orbiting LM LINUSS ™CubeSat and back using a purpose-built IPFS implementation that ran atop <a href="https://www.lockheedmartin.com/content/lockheed-martin/en-us/news/features/2024/smartsat-equipped-satellite-uploads-new-mission-on-orbit.html">Lockheed Martin’s SmartSat technology</a>, a software platform that makes it easier to dynamically add and quickly change missions in orbit through simple app uploads.</p><p>This successful demonstration follows nearly three years of collaboration. FF and Lockheed Martin Space initially <a href="https://fil.org/blog/filecoin-foundation-and-lockheed-martin-bring-decentralized-storage-to-space/">announced the collaboration</a> in Davos in May 2022, and <a href="https://fil.org/blog/ff-x-lockheed-martin-mission-announcement/">announced details of the mission</a> in Davos in January 2023.</p><p>“IPFS is called the ‘interplanetary’ file system because, from the beginning, IPFS was envisioned as a technology that could enable networking in space,” said Marta Belcher, president and chair of FF. “We could not be more thrilled to make that vision a reality, thanks to the amazing team at Lockheed Martin Space.”</p><p>This mission demonstrates several key benefits of using IPFS for communications and networking in space:</p><p><em>Faster Communications</em> – Today’s centralized Internet model doesn’t work in space. In a centralized Internet model, data is retrieved from a particular server in a particular place. On Earth, the delay of retrieving that data may not be noticeable. But if you’re on the moon, there will be a multi-second delay each time you retrieve data from Earth. With IPFS, data doesn’t need to go back and forth from Earth with every click. That’s because, with IPFS, data is identified by what it is rather than where it is. Each piece of content has a unique “content ID.” When you look for a piece of content, that content is retrieved from wherever is closest, rather than being retrieved from a particular server in a particular place. That means if someone nearby already has that data, it only has to travel a short distance and can get to you quickly instead of traveling back and forth from Earth with every click.</p><p><em>Data Verification</em> – With IPFS, each piece of content has a unique identifier called a “content ID.” If a piece of content is altered, its content ID will be different as a result. That means that, by using IPFS, you can cryptographically verify that data has not been modified. This is also useful for authenticating data from space. For example, if a satellite takes photographs and then transmits them to the ground using IPFS, it is possible to cryptographically prove that those images were not tampered with, and are, in fact, the original images taken by the satellite.</p><p><em>Data Resilience</em> – One challenge with storing data in space is that the data can easily be corrupted by radiation, or the storage hardware can be damaged by debris. In a centralized Internet model, data is stored in a particular location on a particular piece of hardware, and when you are trying to retrieve that data, there is only one place you can retrieve it from. To put it another way: imagine that you recommend a book to a friend, but you don’t tell your friend the name of the book – instead, you tell your friend that the book is in the New York Public Library, on the third floor, on the second shelf from the left, five books over. That’s how today’s centralized Internet model works – you’re looking for content in a particular location on a particular server. But it makes much more sense to tell your friend the name of the book, and let them find it wherever is closest and most convenient. That’s how IPFS works. With IPFS, you can store many copies of the data in many different locations. When you retrieve data using IPFS, you are looking for a particular content ID rather than looking for data at a particular location. That content will be retrieved from wherever is closest – so if there are many copies of the data, it doesn’t matter if some of those copies have been lost or corrupted (as is often the case when data is being stored in space).</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Passwordless: a different kind of hell? (160 pts)]]></title>
            <link>https://jcarlosroldan.com/post/315/passwordless-a-different-kind-of-hell</link>
            <guid>39013036</guid>
            <pubDate>Tue, 16 Jan 2024 13:29:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jcarlosroldan.com/post/315/passwordless-a-different-kind-of-hell">https://jcarlosroldan.com/post/315/passwordless-a-different-kind-of-hell</a>, See on <a href="https://news.ycombinator.com/item?id=39013036">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
<article><header><time datetime="2024-01-16 12:27:07">
	16 ene 2024 / <a href="https://jcarlosroldan.com/code/">code</a>, <a href="https://jcarlosroldan.com/think/">think</a></time></header><p>It's no secret that authenticating into services is an unresolved topic. With time, we have managed to make them more secure, but that was at the expense of user experience. The new generation of mail codes and authenticator apps has moved us from the ease of one-click browser autocomplete to complex ordeals involving multiple steps and sometimes multiple devices.</p>
<p>Last month, I was logging into Notion after it automatically logged me out, and I couldn't help but think "It feels like I'm logging in here every second week; maybe I'm doing something wrong." After a long examination of the settings, I decided to open a ticket asking if the session length was indeed that short. The response from Notion's team was prompt and specific, a great example of customer service. However, the content of the answer was less pleasing.</p>
<p><img src="https://jcarlosroldan.com/static/172.png" alt="Notion response"></p>
<p>Notion is not alone in this; many other services enforce similarly short sessions and uncomfortable methods. This has me pondering the evolution of our authentication methods, from their ancient beginnings to modern complexities. Let's take a look at the history of authentication methods and rate them on two scales: user experience and security.</p>
<p>The first recorded password in western history is the book of Judges. Within the text, Gileadite soldiers used the word "shibboleth" to detect their enemies, the Ephraimites. The Ephraimites spoke in a different dialect so that they would say "sibboleth" instead. <strong>Experience ★★★★★:</strong> you just had to say a word. <strong>Security ☆☆☆☆☆:</strong> there's a single word to authenticate multiple users and it can be cracked by learning how to spell it.</p>
<p>Ancient Romans also relied on passwords in a similar manner called them "watchwords". Every night, roman military guards would pass around a wooden tablet with the watchword inscribed and every military man would pass the tablet around until every encampment marked their initials. During night patrols, soldiers would whisper the watchword to identify allies. <strong>Experience ★★★☆☆:</strong> you just had to say a word but you have to memorize it every day. <strong>Security ★☆☆☆☆:</strong> it changes every day, but it's still a single word, and without a "forgot password" button, a wrong answer would mean a spear in the gut.</p>
<p>Fast forward to the '20s, alcohol became illegal in the US, and speakeasies (illegal drinking establishments) were born. To enter the speakeasy, people had to quietly whisper a code word to keep law enforcement from finding out. Code words were ridiculous, to say the least: coffin varnish, monkey rum, panther sweat, and tarantula juice, to name a few. <strong>Experience ★★★★☆:</strong> you just had to say a word, and they were made to be memorable. <strong>Security ★☆☆☆☆:</strong> it's a single word, and it's not even a secret, but at least you don't get stabbed for getting it wrong.</p>
<p>The first recorded usage of a password in the digital age is attributed to <a href="https://en.wikipedia.org/wiki/Fernando_J._Corbat%C3%B3">Dr. Fernando Corbató</a>. In the 60's, monolithic machines could only work on one problem at a time, which meant that the queue of jobs waiting to be processed was huge and a lot of processing time was lost. He developed an operating system called the Compatible Time-Sharing System (CTSS) that broke large processing tasks into smaller components and gave small slices of time to each task. Since multiple users were sharing one computer, files had to be assigned to individual researchers and available only to them, so he gave every user a unique name and password to access their files stored in the database. However, these passwords were stored in a plaintext file in the computer and there were a few cases of accidental and intentional password leaks. <strong>Experience ★★★☆☆:</strong> you have to remember a user and password. <strong>Security ★★☆☆☆:</strong> it's one per user, but they're stored in plaintext.</p>
<p>To prevent the problem of plaintext passwords, <a href="https://jcarlosroldan.com/files/MorrisThompson79-password-hashing.pdf">Robert Morris and Ken Thompson</a> developed a simulation of a World War 2 crypto machine that scrambled the password before storing it into the system. This way, the system could ask for the password, scramble it, and compare it to the scrambled password stored in the system, a process called one-way hashing. This simulation was included in 6th Edition Unix in 1974, and got several improvements up to our days, but the basic idea remains the same. <strong>Experience ★★★☆☆:</strong> you have to remember a user and password. <strong>Security ★★★☆☆:</strong> it's no longer plaintext, but stealing it would still give you access to the system.</p>
<p><img src="https://jcarlosroldan.com/static/173.png" alt="A Hagelin rotor crypto machine"></p>
<p>Over time, many different problems arised from the fact that people use the same password for multiple services, so the industry started to push for unique passwords for each service. This was a problem for users, since they had to remember a lot of passwords, and password managers were borned. The first password manager was developed by <a href="https://www.schneier.com/">Bruce Schneier</a> in 1997, and currently every major browser comes with a built-in one, often with an option to generate strong passwords and store them for you. <strong>Experience ★★★★☆:</strong> you have to remember a master password, but the browser remembers the rest. <strong>Security ★★★★☆:</strong> it's no longer plaintext, but the master password is the weakest link in the chain.</p>
<p>Phishing attacks and data breaches have made passwords a liability, so the industry has been pushing for multiple-factor authentication (MFA) for a while now. 2FA is a method of authentication that requires two different factors to verify your identity. The first factor is usually something you know, like a password, and the second factor is something you have, like a phone. This way, even if someone steals your password, they still need your phone to log in. There is a myriad of ways to implement 2FA, but the most common ones are SMS codes, authenticator apps, and mail codes. It is often used in conjunction with very short session lengths. <strong>Experience ☆☆☆☆☆:</strong> you have to remember something, have a phone or mail app, and it requires multiple steps. <strong>Security ★★★★☆:</strong> it's no longer a single factor, but it's still vulnerable to phishing attacks.</p>
<p>I, like most people, hate passwords and all means of authentication bureaucracy. And it looks like we're now at the lowest point in history in terms of UX. There is still hope with the rise of Single Sign-On (SSO) and biometrics. And certainly <a href="https://safety.google/authentication/passkey/">passkeys</a>, which are getting a lot of traction lately, are a step in the right direction. But only time will tell if their adoption will be widespread enough to make a difference or if we'll be stuck in this dark age of authentication experience for a while.</p>
<p><br>Related post: <a href="https://jcarlosroldan.com/post/80/the-xor-cipher">The XOR reversible cipher</a></p><p><a target="_blank" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A%2F%2Fjcarlosroldan.com%2Fpost%2F315%2F&amp;title=Passwordless:%20a%20different%20kind%20of%20hell?&amp;summary=Passwordless:%20a%20different%20kind%20of%20hell?&amp;source=https%3A%2F%2Fjcarlosroldan.com%2Fpost%2F315%2F"><img src="https://jcarlosroldan.com/img/sc/lk.svg"></a>
		<a target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fjcarlosroldan.com%2Fpost%2F315%2F"><img src="https://jcarlosroldan.com/img/sc/fb.svg"></a>
		<a target="_blank" href="https://twitter.com/intent/tweet/?text=Passwordless:%20a%20different%20kind%20of%20hell?&amp;url=https%3A%2F%2Fjcarlosroldan.com%2Fpost%2F315%2F"><img src="https://jcarlosroldan.com/img/sc/tw.svg"></a>
		<a target="_blank" href="https://telegram.me/share/url?text=Passwordless:%20a%20different%20kind%20of%20hell?&amp;url=https%3A%2F%2Fjcarlosroldan.com%2Fpost%2F315%2F"><img src="https://jcarlosroldan.com/img/sc/tg.svg"></a>
		<a target="_blank" href="whatsapp://send?text=Passwordless:%20a%20different%20kind%20of%20hell?%20https%3A%2F%2Fjcarlosroldan.com%2Fpost%2F315%2F"><img src="https://jcarlosroldan.com/img/sc/ws.svg"></a>
		<a target="_blank" href="https://jcarlosroldan.com/rss"><img src="https://jcarlosroldan.com/img/sc/rs.svg"></a>
		<a target="_blank" href="https://reddit.com/submit/?url=https%3A%2F%2Fjcarlosroldan.com%2Fpost%2F315%2F&amp;resubmit=true&amp;title=Passwordless:%20a%20different%20kind%20of%20hell?"><img src="https://jcarlosroldan.com/img/sc/rd.svg"></a>
		<a target="_blank" href="https://pinterest.com/pin/create/button/?url=https%3A%2F%2Fjcarlosroldan.com%2Fpost%2F315%2F&amp;media=https%3A%2F%2Fjcarlosroldan.com%2Fpost%2F315%2F&amp;description=Passwordless:%20a%20different%20kind%20of%20hell?"><img src="https://jcarlosroldan.com/img/sc/pt.svg"></a>
		</p></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Speedbump – a TCP proxy to simulate variable network latency (196 pts)]]></title>
            <link>https://github.com/kffl/speedbump</link>
            <guid>39012697</guid>
            <pubDate>Tue, 16 Jan 2024 12:47:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/kffl/speedbump">https://github.com/kffl/speedbump</a>, See on <a href="https://news.ycombinator.com/item?id=39012697">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:kffl/speedbump" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="0sM7nZRRiW1LupU2NCsmoyZk7EfD5mqwkwnn4sfbbamE7keQVUvkqms-Mgv9_aejnsoqfJLjiTnAmBrLfQ4pAg" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="kffl/speedbump" data-current-org="" data-current-owner="kffl" data-logged-in="false" data-copilot-chat-enabled="false" data-blackbird-indexed-repo-csrf="<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=3kufkrYHihzjeC8u%2BS87GTM7e3UMzYCYn1Cq2i9c%2BJVU%2BNSruncq8XQd7ss88Xf0tAxFCLVY6Ul%2BCpKVcqUzs3Cb9iC7hwNeo9CmYl1SKY7pNykOiIsWelGPZC3bHW7e3KU9ivS%2F%2Bk6tH9i%2B23nGxbMHmvLOLqidOISISnmuXv699hcX4Y6E7KjQgz%2FWs0oaCF0tHrPvNuIjyYfVVXFN5pd20y4in4djww%2F3q4oJm12VCuTy1S6JIXkI96xNa%2BgBFhPNC4jTFxOsGqHKYIo65ZFK754Ak4F3cBxtJ8eZ61io2ErJR4TwWCjDPJhTLJgeK1YH5tPSb9YYqnGF2hB%2BLJEqVafSFhXqQap5F5Pw38sZSmIxikFcALln0CmMcIDzPBIQsvYXbNnd1V5GZSe2RxjAP4iFLGdd%2F2sQB6WWvtBl5IMtM1v83kvLwOBbqYDpsGIxg982%2BlJ9HidX6x%2BYTIncjgmQC4kTnLA%2FL6ALiLQIB%2FKEDMzRaUD8g2daKYCsFRHqBim%2FDnTcFA%3D%3D--j4ttA4Hteg6R%2FI94--8AUIcMwuxTtMQhIDvwZ1eQ%3D%3D&quot; />">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="feedback-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</modal-dialog></div>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="custom-scopes-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</modal-dialog></div>
    </custom-scopes>
  </div>
</qbsearch-input>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=kffl%2Fspeedbump" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/kffl/speedbump&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="c7923f168dce214796196a0b8da925aa646051fc8caf3ff4070290e5bb76c3f0" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bug Thread (128 pts)]]></title>
            <link>https://xkcd.com/2881/</link>
            <guid>39012656</guid>
            <pubDate>Tue, 16 Jan 2024 12:41:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://xkcd.com/2881/">https://xkcd.com/2881/</a>, See on <a href="https://news.ycombinator.com/item?id=39012656">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="bottom">
<p><img src="https://imgs.xkcd.com/s/a899e84.jpg" width="520" height="100" alt="Selected Comics" usemap="#comicmap"></p><map id="comicmap" name="comicmap">
<area shape="rect" coords="0,0,100,100" href="/150/" alt="Grownups">
<area shape="rect" coords="104,0,204,100" href="/730/" alt="Circuit Diagram">
<area shape="rect" coords="208,0,308,100" href="/162/" alt="Angular Momentum">
<area shape="rect" coords="312,0,412,100" href="/688/" alt="Self-Description">
<area shape="rect" coords="416,0,520,100" href="/556/" alt="Alternative Energy Revolution">
</map>

<p><a href="https://xkcd.com/1732/"><img src="https://imgs.xkcd.com/s/temperature.png" width="520" height="100" alt="Earth temperature timeline"></a></p>
<br>
<div id="comicLinks"><p>
Comics I enjoy:<br>
        <a href="http://threewordphrase.com/">Three Word Phrase</a>,
        <a href="https://www.smbc-comics.com/">SMBC</a>,
        <a href="https://www.qwantz.com/">Dinosaur Comics</a>,
        <a href="https://oglaf.com/">Oglaf</a> (nsfw),
        <a href="https://www.asofterworld.com/">A Softer World</a>,
        <a href="https://buttersafe.com/">Buttersafe</a>,
        <a href="https://pbfcomics.com/">Perry Bible Fellowship</a>,
        <a href="https://questionablecontent.net/">Questionable Content</a>,
        <a href="http://www.buttercupfestival.com/">Buttercup Festival</a>,
        <a href="https://www.homestuck.com/">Homestuck</a>,
	<a href="https://www.jspowerhour.com/">Junior Scientist Power Hour</a>
</p></div>
<br>

<br>
<center>
<p>xkcd.com is best viewed with Netscape Navigator 4.0 or below on a Pentium 3±1 emulated in Javascript on an Apple IIGS<br>at a screen resolution of 1024x1. Please enable your ad blockers, disable high-heat drying, and remove your device<br>from Airplane Mode and set it to Boat Mode. For security reasons, please leave caps lock on while browsing.</p>
</center>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Where can I find good legal documents? (229 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=39012544</link>
            <guid>39012544</guid>
            <pubDate>Tue, 16 Jan 2024 12:27:01 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=39012544">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="39012544">
      <td><span></span></td>      <td><center><a id="up_39012544" href="https://news.ycombinator.com/vote?id=39012544&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=39012544">Ask HN: Where can I find good legal documents?</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_39012544">164 points</span> by <a href="https://news.ycombinator.com/user?id=yonom">yonom</a> <span title="2024-01-16T12:27:01"><a href="https://news.ycombinator.com/item?id=39012544">3 hours ago</a></span> <span id="unv_39012544"></span> | <a href="https://news.ycombinator.com/hide?id=39012544&amp;goto=item%3Fid%3D39012544">hide</a> | <a href="https://hn.algolia.com/?query=Ask%20HN%3A%20Where%20can%20I%20find%20good%20legal%20documents%3F&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=39012544&amp;auth=0a327e5b013037f81479976486799cdecb6f4cda">favorite</a> | <a href="https://news.ycombinator.com/item?id=39012544">45&nbsp;comments</a>        </span>
              </td></tr>
    <tr></tr><tr><td colspan="2"></td><td><div><p>Whenever I start a new (side) project, getting the website set up with T&amp;C, Privacy Policy, etc. is a pain point.</p><p>Here are a couple sources I've found:</p><p>- Common Paper (NDA, TOS, SLA, DPA, CSA, ...)</p><p>- YC Safe (Fundraising)</p><p>- Clerky (Fundraising, Employment, ...)</p><p>Looking for more resources like these.</p></div></td></tr>        <tr></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table><table>
            <tbody><tr id="39013332"><td></td></tr>
                <tr id="39013404"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39013404" href="https://news.ycombinator.com/vote?id=39013404&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>Thanks for the mention and kind words! I’m one of the cofounders of Common Paper, happy to answer any questions.<p>Our docs are free, released under creative comments, have been downloaded more than 17,000 times and used to close millions of dollars worth of deals.</p><p>If you’re not sure what kind of contract you need, this blog post might help:</p><p><a href="https://commonpaper.com/blog/saas-contracts/">https://commonpaper.com/blog/saas-contracts/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39014241"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39014241" href="https://news.ycombinator.com/vote?id=39014241&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>Do you know of any similar resources in the Family Law area? (not sure how to specifically word my question, but helping someone with some custody related issues - and wondering if there is some resource I could be aware of to help?)<p>Else, was going to turn to the GPTs and see what they may muster, but any even general direction pointers would be appreciated?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39014519"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39014519" href="https://news.ycombinator.com/vote?id=39014519&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>IANAL, but there are some things where you should really get expert advice. Child custody is one of them.<p>I think with legal docs generally, you have to decide what the stakes are and act accordingly. In general, keep in mind that most lawyers won't take a case unless there's someone with deep pockets to sue. So for that $20k loan you give to a friend, a boilerplate template is fine; if they don't want to pay you back, a lawsuit is gonna cost you more than the loan anyway. You've got a new startup for website monitoring with 20 customers? Worry about growing your userbase, not the remote chance that you get sued and something in the boilerplate docs you used wasn't worded properly (of course, once you raise significant money or have significant revenue, those legal docs become much more important, and also this doesn't apply if you are working on something with significant risk, such as a medical device).</p><p>But child custody isn't one of those things. It is high stakes, the chances that your counterparty will sue you are very high, and a bad outcome might be one of the worst things that can happen to you. Personally, the possibility of losing custody of my children would be much more worrying to me than any financial lawsuit.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39014805"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39014805" href="https://news.ycombinator.com/vote?id=39014805&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>I have a friend in a messy divorce.  With custody, all rational thought has gone out the window.  Cost of lawyers?  Doesn’t matter, sue!  Need to comply or get fined?  Don’t care.  Court ordered therapy? Don’t feel like it.<p>The pockets that fund this behavior will be empty at some point.  But until then, primal irrational impulses are running the show.</p><p>In a case like that, the difference between the right legal docs and the mostly right docs would be huge.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39014578"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39014578" href="https://news.ycombinator.com/vote?id=39014578&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>I was more looking for properly formatting a document for filings was all?<p>Maybe thats a poor example - but forms help thats not spammy, but also not "starting a business related"</p><p>Legal resources online all seem so "Better Call Saul" quality. Like going to a used car lot.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39014579"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39014579" href="https://news.ycombinator.com/vote?id=39014579&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>&gt; was going to turn to the GPTs<p>this seems ripe for disaster. hopefully, you weren't serious. as with all things, I'd really hope anything in the realm of legal documents from GPT would be then consulted with an actual lawyer
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39014662"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39014662" href="https://news.ycombinator.com/vote?id=39014662&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>Sorry - I am looking for properly formatting, the fact that their case is custody was useless info I guess...<p>I just want to ensure that documents are formatted properly... that was all.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39014771"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_39014771" href="https://news.ycombinator.com/vote?id=39014771&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>just to pile on, but forgoing a lawyer in a custody case is the definition of not smart. just don't do it.</span></p></div></td></tr>
        </tbody></table></td></tr>
                                    <tr id="39014554"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39014554" href="https://news.ycombinator.com/vote?id=39014554&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>I've saved so much time using CommonPaper at my company. Many agreements are still negotiated, but even the cover-page concept makes it that much easier to understand what is being argued.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39014776"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39014776" href="https://news.ycombinator.com/vote?id=39014776&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>Great question! I updated my privacy policy last year and wanted to leverage more "open" policies, but found that world to be lack and instead pooled a bunch I appreciated and asked my laywer to emulate. Wasnt the cheapest approach, but Im happy-</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39014601"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39014601" href="https://news.ycombinator.com/vote?id=39014601&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>I work for iubenda (<a href="https://www.iubenda.com/" rel="nofollow">https://www.iubenda.com/</a>) and it's a precious tool for website compliance. I was a user myself before joining the team.<p>You can get: Privacy Policy/T&amp;C/Cookie and Consent Banner as well as a Consent Database tool.</p><p>The onboarding starts with a scan of your website, and you are suggested to use specific configurations based on the legislation that will apply to your website. Moreover, iubenda scans regularly your website and checks for non-compliance clues (e.g. a missing service in your privacy policy).</p><p>Pricing: there's a free plan for you to start with a basic configuration + pay as you grow.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39014148"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39014148" href="https://news.ycombinator.com/vote?id=39014148&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>I agree with what lots have written here. The biglaw firms that have notable tech practices are good and have resources for brand new startups. For example, CooleyGo or Latham Drive or Wilson Sonsini's term sheet generator. For PPs and Terms, I tend to start with competitor services and see how theirs are written/compare clauses. The more established the company, the more likely it is that you can rely on them to have had their own docs vetted by decent attorneys, though of course quality isn't guaranteed. I have used TermsFeed as a starting point before.<p>For employment matters, SHRM's "Tools and Samples" resources are good.</p><p>Thompson Reuters has a free 7 day trial of their "Practical Law" product, though I haven't explored it personally.</p><p>Techcontracts.com is a good resource.</p><p>ETA: these are all starting points - the docs always have to be reviewed and modified for your particular circumstances. But they’re reasonable for the first draft.</p><p>(I do outside general counsel work for small startups)</p><p>Good luck!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39012918"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39012918" href="https://news.ycombinator.com/vote?id=39012918&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>Here are some early Startup related ideas, links, tools that I gather to not repeat my answers to founders asking for them. For Legals, please go to <a href="https://docs.inboxstartup.com/operate/legal" rel="nofollow">https://docs.inboxstartup.com/operate/legal</a><p>Quite a lot of the founders from the mentioned links/startup/companies are friends or part of a cohort. This is a like an Inbox and I might need to keep cleaning them up.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39014694"><td></td></tr>
            <tr id="39014085"><td></td></tr>
            <tr id="39012967"><td></td></tr>
            <tr id="39014107"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39014107" href="https://news.ycombinator.com/vote?id=39014107&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>&gt; Where can I find good legal documents?<p>A lawyer. A lawyer. A lawyer. A lawyer. END OF STORY.</p><p>And I'm saying that from a perspective of someone who used to use free/cheap template docs a long time ago.</p><p>The hard reality is that free/cheap ready-made docs are highly unlikely to be suitable for your business context for one or more of the following reasons:</p><pre><code>          - Jurisdiction of you or your clients
          - Insurance requirements from your insurer or your clients insurer
          - Clauses not there that should be there
          - Clauses there that are not good enough
          - Clauses there that should not be there
</code></pre>
Free/cheap docs are all fun and games until the shit hits the fan and you need to rely on them.  Its at that point you'll find yourself wishing you ponied up for a lawyer. Trust me, been there, done that, got the postcard, never again.<p>Paying a lawyer to help you with legal documents is a necessary business expense.  Just like paying taxes, either you pay upfront or you pay the penalty later.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39014602"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39014602" href="https://news.ycombinator.com/vote?id=39014602&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>This isn't necessarily true.<p>I've spent six figures on legal fees easily, and I also use templates and off the shelf stuff all the time. Clerky is a good resource and is fine for most core stuff.</p><p>You just can't pay lawyers every time you do everything, it's a waste of resources for small simple businesses that may never go anywhere. And the other issues is EVEN IF YOU DO that doesn't guarantee anything, most lawyers are just using THEIR templates anyways and charging more. If you don't know what to ask for you and don't yet understand the business dynamics you really get almost no value add from having an actual lawyer.</p><p>I'm currently paying a law firm about $20k to rewrite a bunch of docs that I used templates for about 5 years ago. I consider that a success, the business now has millions in revenue and can afford it and it's fine. That's a pretty normal sequence of events in business.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39014234"><td></td></tr>
                <tr id="39014546"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39014546" href="https://news.ycombinator.com/vote?id=39014546&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>Extending this thread because it costs maybe max 2 hours of consult time with a lawyer to put one together.  $500 today can save you from a $5M lawsuit tomorrow.<p>And even then you should still read it and become intimately knowledgeable with each provision
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                        <tr id="39013964"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39013964" href="https://news.ycombinator.com/vote?id=39013964&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>Public companies have to file a lot of documents with the SEC, and often contracts get disclosed. Paid services such as Bloomberg Law are essentially glorified search engines on this free public dataset.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39014682"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39014682" href="https://news.ycombinator.com/vote?id=39014682&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>Surprised I had to scroll this far down to find this.  Options? Employment contracts? The SEC database is golden.<p>If you're not doing well enough to pay the lawyer for custom advice, use the example of people who paid to get it right for them.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39013359"><td></td></tr>
            <tr id="39013299"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39013299" href="https://news.ycombinator.com/vote?id=39013299&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>I had a similar problem and found that the ones I made from free sites or using different terminology are often wrong or say the wrong things that don't fit our service. In the end, we outsourced it to a professional legal service. (The ones that make them for free or for a fraction of the cost are often templated and fill-in-the-blank, which is attractive, but has obvious limitations).</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39014047"><td></td></tr>
            <tr id="39012983"><td></td></tr>
            <tr id="39013791"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39013791" href="https://news.ycombinator.com/vote?id=39013791&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>Do any of these resources target multiple different countries? The requirements for these kinds of documents tend to vary wildly, even between countries with similar legal traditions in the Anglosphere.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39013890"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39013890" href="https://news.ycombinator.com/vote?id=39013890&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>I had edited/signed a lot of documents for my service company, other companies I consulted with, and quite a few of the Startups I was part of. The idea is to keep the generic ones as possible and then look for the part particular to the country’s legalities.<p>For instance, for NDA, I will see that “in the case of dispute, the legal court will be this city/country.” I just found a template that can be adapted - <a href="https://www.onenda.org/" rel="nofollow">https://www.onenda.org</a></p><p>I have done this for MSA (Master Service Agreement) and a lot of Statment of Work (SOW) for projects. However, for employment and contracts, I let the lawyers handle it.</p><p>Once you are big, growing, and important enough, you are not asking her on HackerNews; you talk to your lawyers. Before that, most agreements are good to stay afloat till the next stage.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39013248"><td></td></tr>
            <tr id="39013397"><td></td></tr>
            <tr id="39014263"><td></td></tr>
            <tr id="39013297"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39013297" href="https://news.ycombinator.com/vote?id=39013297&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>Wilmerhale has a document generator for a lot of what you need.  No need to log in, create an account etc.  I use these.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39014090"><td></td></tr>
                  <tr id="39014269"><td></td></tr>
            <tr id="39014074"><td></td></tr>
            <tr id="39013849"><td></td></tr>
            <tr id="39013035"><td></td></tr>
                <tr id="39013157"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39013157" href="https://news.ycombinator.com/vote?id=39013157&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>This actually depends. If you need something specific, tailored to your needs and operational niche, then obviously you can not forego a visit to a lawyer. However, for some documents, a reputable template is more than enough. (As even lawyers rarely draft "bespoke" documents for every client and happen to use a templated text more often than not).</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39013743"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39013743" href="https://news.ycombinator.com/vote?id=39013743&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>Even when I've ended up needing a lawyer (albeit for private legal transactions like estate planning) going through the process of finding a template, customizing it to what I wanted, and thinking through as much as I could was invaluable.  The subject matter can be complex and lawyers are expensive, paid by time, and (in my experience) have a habit of bulldozing through explanations to clients; the more prep you've done ahead of time the more value you can get out of your lawyer time (e.g. by knowing what questions to ask and having a clear picture of the issues at hand).</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39013537"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39013537" href="https://news.ycombinator.com/vote?id=39013537&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>It is definitely possible.  But it is not always trivial to know which solution you need without the advice of a lawyer.  Lawyers use templates a lot, but they also know which templates work in which scenarios and in which jurisdictions.<p>Personally I'd be more comfortable using templates on my own for generic business documents, and less comfortable using them for areas of the law that vary greatly by state, like landlord/tenant law, or employment law.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39013603"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39013603" href="https://news.ycombinator.com/vote?id=39013603&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>You have a point, but it's important to note that the template needs to be <i>local</i> to you. Laws aren't global, what is an appropriate T&amp;C for a service hosted in USA won't be okay for a service hosted in UK or Singapore, and even within USA differences in state laws sometimes are critical, so you need to ensure that you're not getting a template aimed at somewhere else.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39014623"><td></td></tr>
                              <tr id="39013907"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39013907" href="https://news.ycombinator.com/vote?id=39013907&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><p><span>A lawyer. I would try contacting a local startup incubator to see if they have any recommendations before you start googling or looking up Avvo.<p>I also found Termly helpful for a first Privacy Policy especially through their wizard, which clears up all your GDPR/CCPA matters, but you want a professional to look this over at some point.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39014059"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39014059" href="https://news.ycombinator.com/vote?id=39014059&amp;how=up&amp;goto=item%3Fid%3D39012544"></a></center>    </td><td><br><div>
                  <p><span>It’s critical to only hire a lawyer who has exact and recent experience with what you need in tech/startups, or you’re paying to educate them and things might not be as good as they could be because they are new to it.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ruby (3.3) on Rails (1.0) (152 pts)]]></title>
            <link>https://nashby.github.io/2024/01/15/ruby-3-on-rails-1/</link>
            <guid>39012235</guid>
            <pubDate>Tue, 16 Jan 2024 11:48:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nashby.github.io/2024/01/15/ruby-3-on-rails-1/">https://nashby.github.io/2024/01/15/ruby-3-on-rails-1/</a>, See on <a href="https://news.ycombinator.com/item?id=39012235">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
  <p><span>15 Jan 2024</span></p><p><code>Rails 8.0</code> has recently branched out on Github, and I found myself curious about the feasibility of running <code>Rails 1.0</code> on the latest Ruby version. While I was pretty sure it wouldn’t work right off the bat, I wondered: how many modifications would be necessary to at least reach the iconic “Welcome aboard! You’re riding the Rails!” screen?</p>

<p>So, let’s dive in. My starting point was this Gemfile:</p>

<div><pre><code><span>source</span> <span>"https://rubygems.org"</span>
<span>gem</span> <span>"rails"</span><span>,</span> <span>"1.0.0"</span>
</code></pre></div>

<p>Since I knew that it would be required to make some changes to Rails gems I install it with <code>bundle install --local</code>. This would allow for easier modifications later on. My first attempt was running <code>bundle exec rails --help</code>:</p>

<div><pre><code>/activesupport-1.2.5/lib/active_support/inflector.rb:157: syntax error, unexpected ':', expecting `then' or ',' or ';' or '\n' (SyntaxError)
        when 1: "#{number}st"
              ^
</code></pre></div>

<p>Indeed, older Ruby versions allowed the use of a colon in place of <code>then</code> in case/when expressions. This syntax is no longer supported, so I updated it across the codebase to match the current Ruby syntax.</p>

<p>Ok let’s try again with <code>bundle exec rails --help</code>:</p>

<div><pre><code>cannot load such file -- parsedate (LoadError)
</code></pre></div>

<p>Oh yeah, <code>parsedate</code> lib that was shipped with <code>Ruby 1.8</code> is not longer there. It was used to parse date strings, like so:</p>

<div><pre><code><span>ParseDate</span><span>.</span><span>parsedate</span> <span>"Tuesday, July 5th, 2007, 18:35:20 UTC"</span>
<span># =&gt; [2007, 7, 5, 18, 35, 20, "UTC", 2]</span>
</code></pre></div>

<p>Not sure why it was returning an array but ok. Now I can replace it with <code>DateTime.parse</code> that returns <code>DateTime</code> object. So I’ve fixed that and tried to run it again. Ugh, another error:</p>

<div><pre><code>rails-1.0.0/lib/rails_generator/options.rb:124: syntax error, unexpected '[', expecting '|' (SyntaxError)
...make any changes.') { |options[:pretend]| }
</code></pre></div>

<p>That’s some weird syntax. Turns out you could assign something to a hash right inside the block variable thing:</p>

<div><pre><code><span>opt</span><span>.</span><span>on</span><span>(</span><span>'-p'</span><span>,</span> <span>'--pretend'</span><span>,</span> <span>'Run but do not make any changes.'</span><span>)</span> <span>{</span> <span>|</span><span>options</span><span>[</span><span>:pretend</span><span>]</span><span>|</span> <span>}</span>
</code></pre></div>

<p>meaning that whatever you pass as <code>-p</code> option will end up being assigned to <code>options[:pretend]</code>. Basically it equals to</p>

<div><pre><code><span>opt</span><span>.</span><span>on</span><span>(</span><span>'-p'</span><span>,</span> <span>'--pretend'</span><span>,</span> <span>'Run but do not make any changes.'</span><span>)</span> <span>{</span> <span>|</span><span>o</span><span>|</span> <span>options</span><span>[</span><span>:pretend</span><span>]</span> <span>=</span> <span>o</span> <span>}</span>
</code></pre></div>

<p>Alrighty then. Rerun <code>bundle exec rails --help</code>:</p>

<div><pre><code>no implicit conversion of Enumerator into Array
</code></pre></div>

<p>And it’s without any stacktrace. Great. Looks like something catches all the errors and just prints them. After
some investigation I’ve found this code:</p>

<div><pre><code><span>def</span> <span>cache</span>
  <span>@cache</span> <span>||=</span> <span>sources</span><span>.</span><span>inject</span><span>([])</span> <span>{</span> <span>|</span><span>cache</span><span>,</span> <span>source</span><span>|</span> <span>cache</span> <span>+</span> <span>source</span><span>.</span><span>map</span> <span>}</span>
<span>end</span>
</code></pre></div>

<p>In Ruby 1.8 <code>[].map</code> would return an array but now it returns <code>Enumerator</code> object and you can concat an <code>Array</code> with
<code>Enumerator</code> hence the error:</p>

<div><pre><code>irb(main):001&gt; [] + [].map
(irb):1:in `+': no implicit conversion of Enumerator into Array (TypeError)
</code></pre></div>

<p>It’s an easy fix though. Let’s just call <code>.to_a</code> on the <code>source</code>:</p>

<div><pre><code>def cache
  @cache ||= sources.inject([]) { |cache, source| cache + source.to_a }
end
</code></pre></div>

<p>Are we getting there?</p>

<div><pre><code>bundle exec rails --help

`load': cannot load such file -- config.rb (LoadError)
</code></pre></div>

<p>The code in question is</p>

<div><pre><code><span>require</span> <span>'rbconfig'</span>

<span>DEFAULT_SHEBANG</span> <span>=</span> <span>File</span><span>.</span><span>join</span><span>(</span><span>Config</span><span>::</span><span>CONFIG</span><span>[</span><span>'bindir'</span><span>],</span>
                            <span>Config</span><span>::</span><span>CONFIG</span><span>[</span><span>'ruby_install_name'</span><span>])</span>
</code></pre></div>

<p>Makes sense, in old Ruby <code>RbConfig</code> could be referenced with <code>Config</code> constant and now it’s only <code>RbConfig</code>. Fixed. Does it work now?</p>

<div><pre><code>bundle exec rails --help

Usage: /vendor/bundle/ruby/3.3.0/bin/rails /path/to/your/app [options]
</code></pre></div>

<p>Great Scott! It works! Let’s try to generate a new app:</p>

<div><pre><code>bundle exec rails blog

undefined method `exists?' for class File
</code></pre></div>

<p>Dammit, <code>File.exists?</code>/<code>FileTest.exists?</code> were removed in Ruby 1.9. Let’s replace it with <code>File.exist?</code>/<code>FileTest.exist?</code> and try again:</p>

<div><pre><code>bundle exec rails blog
      create
      create  app/controllers
      create  app/helpers
      create  app/models
      create  app/views/layouts
      create  config/environments
      create  components
      create  db
      create  doc
      create  lib
      create  lib/tasks
      create  log
      create  public/images
      create  public/javascripts
      create  public/stylesheets
      create  script/performance
      create  script/process
      create  test/fixtures
      create  test/functional
      create  test/mocks/development
      create  test/mocks/test
      create  test/unit
      create  vendor
      create  vendor/plugins
      create  Rakefile
      create  README
      create  app/controllers/application.rb
Cannot create Binding object for non-Ruby caller
</code></pre></div>

<p>Success! Is it though? It has generated an app but all the files are empty. And if you have a sharp eye you’ll have noticed this error:</p>

<div><pre><code>Cannot create Binding object for non-Ruby caller
</code></pre></div>

<p>Again, no stacktracks, just some plain error. It took me some time to locate that line of code that was failing with such error but here it is:</p>

<div><pre><code><span>file</span><span>(</span><span>relative_source</span><span>,</span> <span>relative_destination</span><span>,</span> <span>template_options</span><span>)</span> <span>do</span> <span>|</span><span>file</span><span>|</span>
  <span># Evaluate any assignments in a temporary, throwaway binding.</span>
  <span>vars</span> <span>=</span> <span>template_options</span><span>[</span><span>:assigns</span><span>]</span> <span>||</span> <span>{}</span>
  <span>b</span> <span>=</span> <span>binding</span>
  <span>vars</span><span>.</span><span>each</span> <span>{</span> <span>|</span><span>k</span><span>,</span><span>v</span><span>|</span> <span>eval</span> <span>"</span><span>#{</span><span>k</span><span>}</span><span> = vars[:</span><span>#{</span><span>k</span><span>}</span><span>] || vars['</span><span>#{</span><span>k</span><span>}</span><span>']"</span><span>,</span> <span>b</span> <span>}</span>

  <span>...</span>
<span>end</span>
</code></pre></div>

<p>Believe me, I really tried to figure you what this error was about given that it’s obviously a Ruby caller but luck wasn’t there for me. Then I tried to replace <code>binding</code> with <code>Kernel.binding</code>
and it worked… If you know what’s going on here please let me know! Maybe Rails were redefining <code>binding</code> somewhere?</p>

<p>Alright, let’s proceed:</p>

<div><pre><code>bundle exec rails blog
      create
      create  app/controllers
      create  app/helpers
      create  app/models
      ...
</code></pre></div>

<p>Finally! The app is generated, files are not empty. We’re close, I can smell it! Let’s try to start it:</p>

<div><pre><code> bundle exec ruby script/server -p 3001

`require': cannot load such file -- script/../config/boot (LoadError)
</code></pre></div>

<p>Sure, just some random load error. Turns out in Ruby 1.8 you could require a file with relative to current file path and now you can’t:</p>

<div><pre><code><span># In Ruby 1.8</span>
<span>require</span> <span>File</span><span>.</span><span>dirname</span><span>(</span><span>__FILE__</span><span>)</span> <span>+</span> <span>'/../config/boot'</span>

<span># In Ruby 1.9+</span>
<span>require_relative</span> <span>'../config/boot'</span>
</code></pre></div>

<p>With this one fixed we can try it one more time:</p>

<div><pre><code>bundle exec ruby script/server -p 3001

=&gt; Booting WEBrick...

activerecord-1.13.2/lib/active_record/base.rb:708: circular argument reference - table_name (SyntaxError)
</code></pre></div>

<p>Ok this one should be trivial. The code in question:</p>

<div><pre><code><span>def</span> <span>class_name</span><span>(</span><span>table_name</span> <span>=</span> <span>table_name</span><span>)</span>
  <span>...</span>
<span>end</span>
</code></pre></div>

<p>I’m a bit surprised that this was working in Ruby 1.8. The error is pretty self-explanatory so I just renamed default argument value and continued with my life:</p>

<div><pre><code>bundle exec ruby script/server -p 3001

=&gt; Booting WEBrick...

`load': cannot load such file -- big_decimal.rb (LoadError)
Did you mean?  bigdecimal
</code></pre></div>

<p>Right, <code>bigdecimal</code> is not required by default now. I’ll spare you some time and say that there was the same issue
with <code>rexml</code> and <code>net-smtp</code> gems (<code>net-smtp</code> is not even part of Ruby anymore and I had to add it to the <code>Gemfile</code>). So I fixed it and tried again:</p>

<div><pre><code>bundle exec ruby script/server -p 3001

=&gt; Booting WEBrick...
actionmailer-1.1.5/lib/action_mailer/quoting.rb:22: invalid multibyte escape: /[\000-\011\013\014\016-\037\177-\377]/ (SyntaxError)
</code></pre></div>

<p>Oh yeah, Ruby 1.9 did a lot of changes to string encoding (you can read more on this <a href="http://graysoftinc.com/character-encodings/ruby-19s-string">here</a>) and now using raw bytes doesn’t work anymore. So I believe we can convert it to <code>/[\x00-\x11\x13\x14\x16-\x1F\x7F-\xFF]/n</code> and it’s going to work? Well, at least the issue was fixed (yeah, yeah who cares if we’ve just introduced some vulnerability? I don’t):</p>

<div><pre><code>bundle exec ruby script/server -p 3001

=&gt; Booting WEBrick...
`require': cannot load such file -- soap/rpc/driver (LoadError)
</code></pre></div>

<p>Oh ffs. It comes from <code>action_web_service</code> (god knows what was that back in the days) and lucky us we can remove this Rails component
from our stack with this config:</p>

<div><pre><code># Skip frameworks you're not going to use
config.frameworks -= [ :action_web_service ]
</code></pre></div>

<p><img src="https://github.com/nashby/nashby.github.io/assets/200500/1b81569a-5265-4e37-8d33-596c1c130f4b" alt="image"></p>

<div><pre><code>bundle exec ruby script/server -p 3001

=&gt; Booting WEBrick...
`require': cannot load such file -- soap/rpc/driver (LoadError)

rails-1.0.0/lib/rails_info.rb:8: syntax error, unexpected ')' (SyntaxError)
        map {|(name, )| name}
</code></pre></div>

<p>Cool cool, you could do <code>.map { |(param1, )| param1 }</code> in Ruby 1.8 to ommit the second block param. You can actually do it in Ruby 3.3 but you don’t need this extra comma:</p>

<div><pre><code><span>{</span><span>a: </span><span>1</span><span>,</span> <span>b: </span><span>2</span><span>,</span> <span>c: </span><span>3</span><span>}.</span><span>map</span> <span>{</span> <span>|</span><span>a</span><span>,</span> <span>|</span> <span>a</span> <span>}</span> <span># =&gt; [:a, :b, :c]</span>
<span># or</span>
<span>{</span><span>a: </span><span>1</span><span>,</span> <span>b: </span><span>2</span><span>,</span> <span>c: </span><span>3</span><span>}.</span><span>map</span> <span>{</span> <span>|</span><span>(</span><span>a</span><span>)</span><span>|</span> <span>a</span> <span>}</span> <span># =&gt; [:a, :b, :c]</span>
<span># without</span>
<span>{</span><span>a: </span><span>1</span><span>,</span> <span>b: </span><span>2</span><span>,</span> <span>c: </span><span>3</span><span>}.</span><span>map</span> <span>{</span> <span>|</span><span>a</span><span>|</span> <span>a</span> <span>}</span> <span># =&gt;[[:a, 1], [:b, 2], [:c, 3]]</span>
</code></pre></div>

<p>And one more time…</p>

<div><pre><code>bundle exec ruby script/server -p 3001

=&gt; Booting WEBrick...
[2024-01-15 21:23:25] INFO  WEBrick 1.8.1
[2024-01-15 21:23:25] INFO  ruby 3.3.0 (2023-12-25) [arm64-darwin23]
[2024-01-15 21:23:25] INFO  WEBrick::HTTPServer#start: pid=98161 port=3001
</code></pre></div>

<p>Oh my God, we did it!</p>

<p><img src="https://github.com/nashby/nashby.github.io/assets/200500/3710f177-d1ad-47df-9d0c-b80670bf427e" alt="Screenshot 2024-01-15 at 21 24 54"></p>

<p>If for some reason you want to check the code here it is: https://github.com/nashby/rails-from-the-past</p>

<p>I’m pretty sure there are way more issues to fix to make it work properly but I’m not going to do it.
I’m just happy enough that I’ve got to the point where I can see this greeting screen! Fin.</p>

<p>And may Ruby be with you!</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Std: Clamp generates less efficient assembly than std:min(max,std:max(min,v)) (125 pts)]]></title>
            <link>https://1f6042.blogspot.com/2024/01/stdclamp-still-generates-less-efficient.html</link>
            <guid>39011850</guid>
            <pubDate>Tue, 16 Jan 2024 10:53:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://1f6042.blogspot.com/2024/01/stdclamp-still-generates-less-efficient.html">https://1f6042.blogspot.com/2024/01/stdclamp-still-generates-less-efficient.html</a>, See on <a href="https://news.ycombinator.com/item?id=39011850">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-2600092658134636588" itemprop="description articleBody">
<p>I originally wrote this blog post in 2019 (or maybe 2018 - my timestamps say that it was written before 1 May 2019). Recently I decided to revisit my old blog and found that <code>std::clamp</code> still generates less efficient assembly than <code>std::min(max, std::max(min, v))</code> even on the latest versions of GCC (13.2) and Clang (17.0.1).</p>
<p>Here’s my old blog post:</p>
<p>Contents:</p>
<ul>
<li><a href="#ternary">Ternary</a></li>
<li><a href="#using-intermediate-values">Using intermediate values</a></li>
<li><a href="#using-stdmin-and-stdmax">using std::min and std::max</a></li>
<li><a href="#using-stdclamp">Using std::clamp</a></li>
</ul>
<p>Let’s say you want to clamp a value v between 2 values, min and max. If v is greater than max, return max. If v is smaller than min, return min. Otherwise return v.</p>
<h2 id="ternary">Ternary</h2>
<p>Implementing it directly as per the description:</p>
<pre><code><span>double</span> <span>clamp</span><span>(</span><span>double</span> v<span>,</span> <span>double</span> min<span>,</span> <span>double</span> max<span>)</span><span>{</span>
    <span>return</span> v <span>&lt;</span> min<span>?</span> min <span>:</span> v <span>&gt;</span> max<span>?</span> max <span>:</span> v<span>;</span>
<span>}</span>
</code></pre>
<p>gcc 8.2:</p>
<pre><code>clamp(double, double, double):
        comisd  xmm1, xmm0
        ja      .L2
        minsd   xmm2, xmm0
        movapd  xmm1, xmm2
.L2:
        movapd  xmm0, xmm1
        ret
</code></pre>
<p>One branch instruction.</p>
<p>clang 7.0:</p>
<pre><code>clamp(double, double, double):                            # @clamp(double, double, double)
        minsd   xmm2, xmm0
        cmpltsd xmm0, xmm1
        movapd  xmm3, xmm0
        andnpd  xmm3, xmm2
        andpd   xmm0, xmm1
        orpd    xmm0, xmm3
        ret
</code></pre>
<p>Branchless.</p>

<p>From this stackoverflow answer: <a href="https://stackoverflow.com/questions/427477/fastest-way-to-clamp-a-real-fixed-floating-point-value">https://stackoverflow.com/questions/427477/fastest-way-to-clamp-a-real-fixed-floating-point-value</a></p>
<pre><code><span>double</span> <span>clamp</span><span>(</span><span>double</span> v<span>,</span> <span>double</span> min<span>,</span> <span>double</span> max<span>)</span><span>{</span>
    <span>double</span> out <span>=</span> v <span>&gt;</span> max <span>?</span> max <span>:</span> v<span>;</span>
    <span>return</span> out <span>&lt;</span> min <span>?</span> min <span>:</span> out<span>;</span>
<span>}</span>
</code></pre>
<p>gcc 8.2:</p>
<pre><code>clamp(double, double, double):
        minsd   xmm2, xmm0
        maxsd   xmm1, xmm2
        movapd  xmm0, xmm1
        ret
</code></pre>
<p>clang 7.0:</p>
<pre><code>clamp(double, double, double):                            # @clamp(double, double, double)
        minsd   xmm2, xmm0
        maxsd   xmm1, xmm2
        movapd  xmm0, xmm1
        ret
</code></pre>
<p>Identical output. Much better than before. Can we do better?</p>

<p>This is the idiomatic way to do clamp in C++ (and most other languages):</p>
<pre><code><span>#<span>include</span> <span>&lt;algorithm&gt;</span></span>
<span>double</span> <span>clamp</span><span>(</span><span>double</span> v<span>,</span> <span>double</span> min<span>,</span> <span>double</span> max<span>)</span><span>{</span>
    <span>return</span> std<span>::</span><span>min</span><span>(</span>max<span>,</span> std<span>::</span><span>max</span><span>(</span>min<span>,</span> v<span>)</span><span>)</span><span>;</span>
<span>}</span>
</code></pre>
<p>gcc 8.2:</p>
<pre><code>clamp(double, double, double):
        maxsd   xmm0, xmm1
        minsd   xmm0, xmm2
        ret
</code></pre>
<p>clang 7.0:</p>
<pre><code>clamp(double, double, double):                            # @clamp(double, double, double)
        maxsd   xmm0, xmm1
        minsd   xmm0, xmm2
        ret
</code></pre>
<p>Also seems to generate the best code.</p>
<h2 id="using-stdclamp">Using std::clamp</h2>
<pre><code><span>#<span>include</span> <span>&lt;algorithm&gt;</span></span>
<span>double</span> <span>clamp</span><span>(</span><span>double</span> v<span>,</span> <span>double</span> min<span>,</span> <span>double</span> max<span>)</span><span>{</span>
    <span>return</span> std<span>::</span><span>clamp</span><span>(</span>v<span>,</span> min<span>,</span> max<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<p>gcc 8.2:</p>
<pre><code>clamp(double, double, double):
        comisd  xmm1, xmm0
        ja      .L2
        minsd   xmm2, xmm0
        movapd  xmm1, xmm2
.L2:
        movapd  xmm0, xmm1
        ret
</code></pre>
<p>clang 7.0:</p>
<pre><code>clamp(double, double, double):                            # @clamp(double, double, double)
        minsd   xmm2, xmm0
        cmpltsd xmm0, xmm1
        movapd  xmm3, xmm0
        andnpd  xmm3, xmm2
        andpd   xmm0, xmm1
        orpd    xmm0, xmm3
        ret
</code></pre>
<p>Not very efficient.</p>
<p>EDIT: It’s been almost 5 years since I originally wrote this article, so I decided to try again using the latest versions of GCC and Clang:</p>
<p>gcc 13.2:</p>
<pre><code>clamp(double, double, double):
        maxsd   xmm1, xmm0
        minsd   xmm2, xmm1
        movapd  xmm0, xmm2
        ret
</code></pre>
<p>clang 17.0.1:</p>
<pre><code>clamp(double, double, double):                            # @clamp(double, double, double)
        maxsd   xmm1, xmm0
        minsd   xmm2, xmm1
        movapd  xmm0, xmm2
        ret
</code></pre>
<p>Still not the most efficient - it uses one more instruction than the <code>std::min(max, std::max(min, v))</code> implementation.</p>
<p>But how does the fastest implementation work you ask? Going through the code line by line:</p>
<pre><code>clamp(double, double, double):
        maxsd   xmm0, xmm1
        minsd   xmm0, xmm2
        ret
</code></pre>
<p>The <code>maxsd xmm0, xmm1</code> puts the max value of xmm0 and xmm1 into xmm0.</p>
<p>The <code>minsd xmm0, xmm2</code> puts the min value of xmm0 and xmm2 into xmm0.</p>
<p>Thus, after the first line, xmm0 contains the max of the lower bound and the value.</p>
<p>And after the second line, xmm0 contains the min of the upper bound and the previous result.</p>
<p>But let’s step through with gdb to confirm.</p>
<p>Source code:</p>
<pre><code><span>#<span>include</span> <span>&lt;algorithm&gt;</span></span>
<span>double</span> <span>__attribute__</span> <span>(</span><span>(</span>noinline<span>)</span><span>)</span> <span>clamp</span><span>(</span><span>double</span> v<span>,</span> <span>double</span> min<span>,</span> <span>double</span> max<span>)</span><span>{</span>
    <span>return</span> std<span>::</span><span>min</span><span>(</span>max<span>,</span> std<span>::</span><span>max</span><span>(</span>min<span>,</span> v<span>)</span><span>)</span><span>;</span>
<span>}</span>

<span>int</span> <span>main</span><span>(</span><span>)</span><span>{</span>
    <span>volatile</span> <span>double</span> x<span>,</span> min<span>,</span> max<span>;</span>
    x <span>=</span> <span>1653</span><span>;</span>
    min <span>=</span> <span>1776</span><span>;</span>
    max <span>=</span> <span>1729</span><span>;</span>
    <span>return</span> <span>clamp</span><span>(</span>x<span>,</span> min<span>,</span> max<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<p>gdb logs:</p>
<p>Before running maxsd:</p>
<pre><code>│  &gt; 0x555555555180 &lt;_Z5clampddd&gt;                    maxsd  %xmm1,%xmm0                                                                                       │
│    0x555555555184 &lt;_Z5clampddd+4&gt;                  minsd  %xmm2,%xmm0                                                                                       │
│    0x555555555188 &lt;_Z5clampddd+8&gt;                  ret                                                                                                      │
└─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
multi-thre Thread 0x7ffff7dca7 In: clamp                                                                                              L254  PC: 0x555555555180
xmm0           {v8_bfloat16 = {0x0, 0x0, 0xd400, 0x4099, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0xd400, 0x4099, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x4099
d400, 0x0, 0x0}, v2_double = {0x4099d40000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0xd4, 0x99, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int1
6 = {0x0, 0x0, 0xd400, 0x4099, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x4099d400, 0x0, 0x0}, v2_int64 = {0x4099d40000000000, 0x0}, uint128 = 0x4099d40000000000}

xmm1           {v8_bfloat16 = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x409b
c000, 0x0, 0x0}, v2_double = {0x409bc00000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x9b, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int1
6 = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x409bc000, 0x0, 0x0}, v2_int64 = {0x409bc00000000000, 0x0}, uint128 = 0x409bc00000000000}

xmm2           {v8_bfloat16 = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x409b04
00, 0x0, 0x0}, v2_double = {0x409b040000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x9b, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 =
 {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x409b0400, 0x0, 0x0}, v2_int64 = {0x409b040000000000, 0x0}, uint128 = 0x409b040000000000}
</code></pre>
<p>After running maxsd but before running minsd:</p>
<pre><code>│    0x555555555180 &lt;_Z5clampddd&gt;                    maxsd  %xmm1,%xmm0                                                                                       │
│  &gt; 0x555555555184 &lt;_Z5clampddd+4&gt;                  minsd  %xmm2,%xmm0                                                                                       │
│    0x555555555188 &lt;_Z5clampddd+8&gt;                  ret                                                                                                      │
└─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
multi-thre Thread 0x7ffff7dca7 In: clamp                                                                                              L4    PC: 0x555555555184
xmm0           {v8_bfloat16 = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x409b
c000, 0x0, 0x0}, v2_double = {0x409bc00000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x9b, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int1
6 = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x409bc000, 0x0, 0x0}, v2_int64 = {0x409bc00000000000, 0x0}, uint128 = 0x409bc00000000000}

xmm1           {v8_bfloat16 = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x409b
c000, 0x0, 0x0}, v2_double = {0x409bc00000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x9b, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int1
6 = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x409bc000, 0x0, 0x0}, v2_int64 = {0x409bc00000000000, 0x0}, uint128 = 0x409bc00000000000}

xmm2           {v8_bfloat16 = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x409b04
00, 0x0, 0x0}, v2_double = {0x409b040000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x9b, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 =
 {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x409b0400, 0x0, 0x0}, v2_int64 = {0x409b040000000000, 0x0}, uint128 = 0x409b040000000000}
</code></pre>
<p>After running minsd:</p>
<pre><code>│    0x555555555180 &lt;_Z5clampddd&gt;                    maxsd  %xmm1,%xmm0                                                                                       │
│    0x555555555184 &lt;_Z5clampddd+4&gt;                  minsd  %xmm2,%xmm0                                                                                       │
│B+&gt; 0x555555555188 &lt;_Z5clampddd+8&gt;                  ret                                                                                                      │
└─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
multi-thre Thread 0x7ffff7dca7 In: clamp                                                                                              L5    PC: 0x555555555188
xmm0           {v8_bfloat16 = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x409b04
00, 0x0, 0x0}, v2_double = {0x409b040000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x9b, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 =
 {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x409b0400, 0x0, 0x0}, v2_int64 = {0x409b040000000000, 0x0}, uint128 = 0x409b040000000000}

xmm1           {v8_bfloat16 = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x409b
c000, 0x0, 0x0}, v2_double = {0x409bc00000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x9b, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int1
6 = {0x0, 0x0, 0xc000, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x409bc000, 0x0, 0x0}, v2_int64 = {0x409bc00000000000, 0x0}, uint128 = 0x409bc00000000000}

xmm2           {v8_bfloat16 = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x409b04
00, 0x0, 0x0}, v2_double = {0x409b040000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x9b, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 =
 {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x409b0400, 0x0, 0x0}, v2_int64 = {0x409b040000000000, 0x0}, uint128 = 0x409b040000000000}
</code></pre>
<p>And how does the value from xmm0 get placed into eax? The answer is the cvttsd2si instruction:</p>
<pre><code>│    0x555555555080 &lt;main()+64&gt;      call   0x555555555180 &lt;_Z5clampddd&gt;                                                                                      │
│    0x555555555085 &lt;main()+69&gt;      add    $0x20,%rsp                                                                                                        │
│  &gt; 0x555555555089 &lt;main()+73&gt;      cvttsd2si %xmm0,%eax                                                                                                     │
│    0x55555555508d &lt;main()+77&gt;      ret                                                                                                                      │
└─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
multi-thre Thread 0x7ffff7dca7 In: main                                                                                               L12   PC: 0x555555555089
(gdb) i r eax xmm0
eax            0x55555040          1431654464
xmm0           {v8_bfloat16 = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x409b04
00, 0x0, 0x0}, v2_double = {0x409b040000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x9b, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 =
 {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x409b0400, 0x0, 0x0}, v2_int64 = {0x409b040000000000, 0x0}, uint128 = 0x409b040000000000}



│    0x555555555080 &lt;main()+64&gt;      call   0x555555555180 &lt;_Z5clampddd&gt;                                                                                      │
│    0x555555555085 &lt;main()+69&gt;      add    $0x20,%rsp                                                                                                        │
│    0x555555555089 &lt;main()+73&gt;      cvttsd2si %xmm0,%eax                                                                                                     │
│  &gt; 0x55555555508d &lt;main()+77&gt;      ret                                                                                                                      │
└─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
multi-thre Thread 0x7ffff7dca7 In: main                                                                                               L13   PC: 0x55555555508d
(gdb) i r eax xmm0
eax            0x6c1               1729
xmm0           {v8_bfloat16 = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v8_half = {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_float = {0x0, 0x409b04
00, 0x0, 0x0}, v2_double = {0x409b040000000000, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x9b, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 =
 {0x0, 0x0, 0x400, 0x409b, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x409b0400, 0x0, 0x0}, v2_int64 = {0x409b040000000000, 0x0}, uint128 = 0x409b040000000000}
</code></pre>
<p>Pretty cool.</p>
<p>Anyway, I found it surprising that <code>std::clamp</code> still generates less efficient assembly than <code>std::min(max, std::max(min, v))</code> even on the latest versions of GCC (13.2) and Clang (17.0.1).</p>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Open-Source Detector of CISA's Known Exploitable Vulnerabilities (102 pts)]]></title>
            <link>https://github.com/Ostorlab/KEV</link>
            <guid>39010454</guid>
            <pubDate>Tue, 16 Jan 2024 07:29:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Ostorlab/KEV">https://github.com/Ostorlab/KEV</a>, See on <a href="https://news.ycombinator.com/item?id=39010454">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-turbo-body="">
      


    <div>
      <p><a href="#start-of-content">Skip to content</a>
      <span data-view-component="true">
    <span data-view-component="true"></span>
</span></p><react-partial partial-name="keyboard-shortcuts-dialog" data-ssr="false">
  
  
  
</react-partial>



      

        

            



<header role="banner" data-color-mode="light" data-light-theme="light" data-dark-theme="dark">
  

  <div>
    <div>
      <a href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
        
      </a>

      <div>
        <p><a href="https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2FOstorlab%2FKEV" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/Ostorlab/KEV&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="8aa13513bf508cf50e15a140934f953a2fe4047f8aa590134aeb416415516d72" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">
          Sign in
        </a>
      </p></div>

      
    </div>


    <div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
              <p><span id="product-explore-heading">Explore</span></p><ul aria-labelledby="product-explore-heading">
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to All features&quot;,&quot;label&quot;:&quot;ref_cta:All features;&quot;}" href="https://github.com/features">
      All features

    
</a></li>

                <li>
  <a target="_blank" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Documentation&quot;,&quot;label&quot;:&quot;ref_cta:Documentation;&quot;}" href="https://docs.github.com/">
      Documentation

    
</a></li>

                <li>
  <a target="_blank" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to GitHub Skills&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Skills;&quot;}" href="https://skills.github.com/">
      GitHub Skills

    
</a></li>

                <li>
  <a target="_blank" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Blog&quot;,&quot;label&quot;:&quot;ref_cta:Blog;&quot;}" href="https://github.blog/">
      Blog

    
</a></li>

            </ul>
          </div>
      </div>
</li>


                <li>
      
      <div>
          <div>
              <p><span id="solutions-for-heading">For</span></p><ul aria-labelledby="solutions-for-heading">
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Enterprise&quot;,&quot;label&quot;:&quot;ref_cta:Enterprise;&quot;}" href="https://github.com/enterprise">
      Enterprise

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Teams&quot;,&quot;label&quot;:&quot;ref_cta:Teams;&quot;}" href="https://github.com/team">
      Teams

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Startups&quot;,&quot;label&quot;:&quot;ref_cta:Startups;&quot;}" href="https://github.com/enterprise/startups">
      Startups

    
</a></li>

                <li>
  <a target="_blank" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Education&quot;,&quot;label&quot;:&quot;ref_cta:Education;&quot;}" href="https://education.github.com/">
      Education

    
</a></li>

            </ul>
          </div>
          <div>
              <p><span id="solutions-by-solution-heading">By Solution</span></p><ul aria-labelledby="solutions-by-solution-heading">
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to CI/CD &amp;amp; Automation&quot;,&quot;label&quot;:&quot;ref_cta:CI/CD &amp;amp; Automation;&quot;}" href="https://github.com/solutions/ci-cd/">
      CI/CD &amp; Automation

    
</a></li>

                <li>
  <a target="_blank" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to DevOps&quot;,&quot;label&quot;:&quot;ref_cta:DevOps;&quot;}" href="https://resources.github.com/devops/">
      DevOps

    
</a></li>

                <li>
  <a target="_blank" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to DevSecOps&quot;,&quot;label&quot;:&quot;ref_cta:DevSecOps;&quot;}" href="https://resources.github.com/devops/fundamentals/devsecops/">
      DevSecOps

    
</a></li>

            </ul>
          </div>
          <div>
              <p><span id="solutions-resources-heading">Resources</span></p><ul aria-labelledby="solutions-resources-heading">
                <li>
  <a target="_blank" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Learning Pathways&quot;,&quot;label&quot;:&quot;ref_cta:Learning Pathways;&quot;}" href="https://resources.github.com/learn/pathways/">
      Learning Pathways

    
</a></li>

                <li>
  <a target="_blank" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to White papers, Ebooks, Webinars&quot;,&quot;label&quot;:&quot;ref_cta:White papers, Ebooks, Webinars;&quot;}" href="https://resources.github.com/">
      White papers, Ebooks, Webinars

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Customer Stories&quot;,&quot;label&quot;:&quot;ref_cta:Customer Stories;&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                <li>
  <a target="_blank" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Partners&quot;,&quot;label&quot;:&quot;ref_cta:Partners;&quot;}" href="https://partner.github.com/">
      Partners

    
</a></li>

            </ul>
          </div>
      </div>
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
              <p><span id="open-source-repositories-heading">Repositories</span></p><ul aria-labelledby="open-source-repositories-heading">
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Topics&quot;,&quot;label&quot;:&quot;ref_cta:Topics;&quot;}" href="https://github.com/topics">
      Topics

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Trending&quot;,&quot;label&quot;:&quot;ref_cta:Trending;&quot;}" href="https://github.com/trending">
      Trending

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Collections&quot;,&quot;label&quot;:&quot;ref_cta:Collections;&quot;}" href="https://github.com/collections">
      Collections

    
</a></li>

            </ul>
          </div>
      </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:Ostorlab/KEV" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="sSB4ah61PTQ_Z2WmMImprdneuiRXRfrV0DWor2pHXjmwMM79NkEg5SUd9BbeosBLPYoipD5Kl1RdEwRpoqD77g" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="Ostorlab/KEV" data-current-org="Ostorlab" data-current-owner="" data-logged-in="false" data-copilot-chat-enabled="false" data-blackbird-indexed-repo-csrf="<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=niYrqrhEdVB6QZT25voWixFUQN0n7fjs%2BX%2BIhFm%2BnBREtR6qfNYHZHOO9RjJi84VlJ6EBrsluantf7EIMwBmtx%2BGCDT1Q4gRWOS9N5HyhgcFBEwckCs2h6aHgFKYRpUsMgqEixe%2BsLmGEPTJx5b0VgpvgQybDI%2BndpvFFOUVpZdkjJLc2sHs4LxSOz8tlz71k%2B9kyjmRWMjiaUOgTCqV%2BOUcDdhdoUahg2CsAcC5gdyHj1ztXrpC%2FiHfdjf927EBc4BgCX1O24bVwvSGVIp0critiX0TPr1RgDIvPECdhVhEBbMOYCwr95iBXMblP1p2iRVz1FvVTZFWcnbYDGst6avJ88lvpb4t9Kl8qSC1nb%2BQkki1OAXnj2u0pVWaLsmv%2Bw4kSz33duGUuQvt2T9Hy6jpwcmXt09IuBfe3bslSZas5vw0eL1i9Gqa%2BrmVaft3eJTiM%2Boli0dsp%2FJxAcmTJ546SEzhKFIrP5OxOYn1fagSyb2zkKy7%2B4ZwUBlEr1LKRoE%2BayiO--vyrwVRnwiisUIDpp--4MV6ZkdfgUWOywXq285AIA%3D%3D&quot; />">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="feedback-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        <div data-view-component="true">        <!-- '"` --><!-- </textarea></xmp> --><form id="code-search-feedback-form" data-turbo="false" action="/search/feedback" accept-charset="UTF-8" method="post">
          <p>We read every piece of feedback, and take your input very seriously.</p>
          
          
          <label for="include_email">Include my email address so I can be contacted</label>
</form></div>
      </scrollable-region>
      
</modal-dialog></div>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="custom-scopes-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</modal-dialog></div>
    </custom-scopes>
  </div>
</qbsearch-input><div>
            <p><a href="https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2FOstorlab%2FKEV" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/Ostorlab/KEV&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="8aa13513bf508cf50e15a140934f953a2fe4047f8aa590134aeb416415516d72" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">
              Sign in
            </a>
          </p></div>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=Ostorlab%2FKEV" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/Ostorlab/KEV&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="8aa13513bf508cf50e15a140934f953a2fe4047f8aa590134aeb416415516d72" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div>
  </div>
</header>

      
    </div>

  








    


    
    <include-fragment data-base-src="https://github.com/notifications/beta/shelf"></include-fragment>






  <div itemscope="" itemtype="http://schema.org/SoftwareSourceCode" data-commit-hovercards-enabled="" data-discussion-hovercards-enabled="" data-issue-and-pr-hovercards-enabled="">
    <main id="js-repo-pjax-container">
      
  





    
    

    






  
  <div id="repository-container-header" data-turbo-replace="">

      <div>

        <div>
      
    
    <p><span itemprop="author">
      <a rel="author" data-hovercard-type="organization" data-hovercard-url="/orgs/Ostorlab/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Ostorlab">
        Ostorlab
</a>    </span>
    <span>/</span>
    <strong itemprop="name">
      <a data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" href="https://github.com/Ostorlab/KEV">KEV</a>
    </strong>

    <span></span><span>Public</span>
  </p></div>

        <div id="repository-details-container" data-turbo-replace="">
            <ul>
    
      

  <li>
            <a href="https://github.com/login?return_to=%2FOstorlab%2FKEV" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/Ostorlab/KEV&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="458497a08628dc63bb02c5ef425320cb431235cbb04f3acba97c32fc600cec2f" aria-label="You must be signed in to change notification settings" data-view-component="true">    Notifications
</a>
  </li>

  <li>
          <a icon="repo-forked" id="fork-button" href="https://github.com/login?return_to=%2FOstorlab%2FKEV" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;repo details fork button&quot;,&quot;repository_id&quot;:483170315,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/Ostorlab/KEV&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="bd91b4685b0ea35d973d052eac2327729d2c83f65788b5702953107d49948262" data-view-component="true">    Fork
    <span id="repo-network-counter" data-pjax-replace="true" data-turbo-replace="true" title="8" data-view-component="true">8</span>
</a>
  </li>

  <li>
        <div data-view-component="true">
        <a href="https://github.com/login?return_to=%2FOstorlab%2FKEV" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:483170315,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/Ostorlab/KEV&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="5b3ed82f6075f0a052b3f24404825ecb030d5caf5486f14598283ba93b18abd1" aria-label="You must be signed in to star a repository" data-view-component="true">    <span data-view-component="true">
          Star
</span>          <span id="repo-stars-counter-star" aria-label="226 users starred this repository" data-singular-suffix="user starred this repository" data-plural-suffix="users starred this repository" data-turbo-replace="true" title="226" data-view-component="true">226</span>
</a>        </div>
  </li>

    <li>
        

    </li>
</ul>

        </div>
      </div>

        <div id="responsive-meta-container" data-turbo-replace="">
      <p>
        Ostorlab KEV: One-command to detect most remotely known exploitable vulnerabilities. Sourced from CISA KEV, Google's Tsunami, Ostorlab's Asteroid and Bug Bounty programs.
      </p>

    

    <p>
        <a href="https://github.com/Ostorlab/KEV/stargazers">
          
          <span>226</span>
          stars
</a>        <a href="https://github.com/Ostorlab/KEV/forks">
          
          <span>8</span>
          forks
</a>          <a href="https://github.com/Ostorlab/KEV/branches">
            
            <span>Branches</span>
</a>          <a href="https://github.com/Ostorlab/KEV/tags">
            
            <span>Tags</span>
</a>        <a href="https://github.com/Ostorlab/KEV/activity">
          
          <span>Activity</span>
</a>    </p>

      <div>
        <div data-view-component="true">
        <a href="https://github.com/login?return_to=%2FOstorlab%2FKEV" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:483170315,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/Ostorlab/KEV&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="5b3ed82f6075f0a052b3f24404825ecb030d5caf5486f14598283ba93b18abd1" aria-label="You must be signed in to star a repository" data-view-component="true">    <span data-view-component="true">
          Star
</span>
</a>        </div>
        <p>
                <a href="https://github.com/login?return_to=%2FOstorlab%2FKEV" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/Ostorlab/KEV&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="458497a08628dc63bb02c5ef425320cb431235cbb04f3acba97c32fc600cec2f" aria-label="You must be signed in to change notification settings" data-view-component="true">    Notifications
</a>
        </p>
          </div>
  </div>


          <nav data-pjax="#js-repo-pjax-container" aria-label="Repository" data-view-component="true">

  <ul data-view-component="true">
      <li data-view-component="true">
  <a id="code-tab" href="https://github.com/Ostorlab/KEV" data-tab-item="i0code-tab" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments repo_attestations /Ostorlab/KEV" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g c" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Code&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" aria-current="page" data-view-component="true">
    
              
        <span data-content="Code">Code</span>
          <span id="code-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true"></span>


    
</a></li>
      <li data-view-component="true">
  <a id="issues-tab" href="https://github.com/Ostorlab/KEV/issues" data-tab-item="i1issues-tab" data-selected-links="repo_issues repo_labels repo_milestones /Ostorlab/KEV/issues" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g i" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Issues&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true">
    
              
        <span data-content="Issues">Issues</span>
          


    
</a></li>
      <li data-view-component="true">
  <a id="pull-requests-tab" href="https://github.com/Ostorlab/KEV/pulls" data-tab-item="i2pull-requests-tab" data-selected-links="repo_pulls checks /Ostorlab/KEV/pulls" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g p" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Pull requests&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true">
    
              
        <span data-content="Pull requests">Pull requests</span>
          <span id="pull-requests-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="1" data-view-component="true">1</span>


    
</a></li>
      <li data-view-component="true">
  <a id="actions-tab" href="https://github.com/Ostorlab/KEV/actions" data-tab-item="i3actions-tab" data-selected-links="repo_actions /Ostorlab/KEV/actions" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g a" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Actions&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true">
    
              
        <span data-content="Actions">Actions</span>
          <span id="actions-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true"></span>


    
</a></li>
      <li data-view-component="true">
  <a id="projects-tab" href="https://github.com/Ostorlab/KEV/projects" data-tab-item="i4projects-tab" data-selected-links="repo_projects new_repo_project repo_project /Ostorlab/KEV/projects" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g b" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Projects&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true">
    
              
        <span data-content="Projects">Projects</span>
          


    
</a></li>
      <li data-view-component="true">
  <a id="security-tab" href="https://github.com/Ostorlab/KEV/security" data-tab-item="i5security-tab" data-selected-links="security overview alerts policy token_scanning code_scanning /Ostorlab/KEV/security" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g s" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Security&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true">
    
              
        <span data-content="Security">Security</span>
          <include-fragment src="/Ostorlab/KEV/security/overall-count" accept="text/fragment+html"></include-fragment>

    
</a></li>
      <li data-view-component="true">
  <a id="insights-tab" href="https://github.com/Ostorlab/KEV/pulse" data-tab-item="i6insights-tab" data-selected-links="repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /Ostorlab/KEV/pulse" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Insights&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true">
    
              
        <span data-content="Insights">Insights</span>
          <span id="insights-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true"></span>


    
</a></li>
</ul>
    <div data-view-component="true">      <action-menu data-select-variant="none" data-view-component="true">
  <focus-group direction="vertical" mnemonics="" retain="">
    <tool-tip id="tooltip-e3f3a36c-cc29-43e3-a1ff-99a35d6826d4" for="action-menu-b451ae96-c47e-42a1-9f14-a8b67b07d375-button" popover="manual" data-direction="s" data-type="label" data-view-component="true">Additional navigation options</tool-tip>


<anchored-position id="action-menu-b451ae96-c47e-42a1-9f14-a8b67b07d375-overlay" anchor="action-menu-b451ae96-c47e-42a1-9f14-a8b67b07d375-button" side="outside-bottom" anchor-offset="normal" popover="auto" data-view-component="true">
  <div data-view-component="true">
  <ul aria-labelledby="action-menu-b451ae96-c47e-42a1-9f14-a8b67b07d375-button" id="action-menu-b451ae96-c47e-42a1-9f14-a8b67b07d375-list" role="menu" data-view-component="true">
      
      
      
      
      
      
      
</ul>  
</div></anchored-position>  </focus-group>
</action-menu></div>
</nav>

  </div>

  



<turbo-frame id="repo-content-turbo-frame" target="_top" data-turbo-action="advance">
    <div id="repo-content-pjax-container">

  

  <include-fragment src="/Ostorlab/KEV/spoofed_commit_check/c6ea52e95dd1a044feac9460e5a792006c0fdb16" data-test-selector="spoofed-commit-check"></include-fragment>

  <div data-view-component="true">
  <div data-view-component="true">        

























<react-partial partial-name="repos-overview" data-ssr="false">
  
  
  
</react-partial>

        </div>
  <div data-pjax="" data-view-component="true">
        <div>
  <h2>About</h2>

      <p>
        Ostorlab KEV: One-command to detect most remotely known exploitable vulnerabilities. Sourced from CISA KEV, Google's Tsunami, Ostorlab's Asteroid and Bug Bounty programs.
      </p>

    <h3>Topics</h3>
    <div>
      <p><a data-ga-click="Topic, repository page" data-octo-click="topic_click" data-octo-dimensions="topic:exploits" href="https://github.com/topics/exploits" title="Topic: exploits" data-view-component="true">
  exploits
</a>
      <a data-ga-click="Topic, repository page" data-octo-click="topic_click" data-octo-dimensions="topic:vulnerability" href="https://github.com/topics/vulnerability" title="Topic: vulnerability" data-view-component="true">
  vulnerability
</a>
      <a data-ga-click="Topic, repository page" data-octo-click="topic_click" data-octo-dimensions="topic:0day" href="https://github.com/topics/0day" title="Topic: 0day" data-view-component="true">
  0day
</a>
      <a data-ga-click="Topic, repository page" data-octo-click="topic_click" data-octo-dimensions="topic:cisa" href="https://github.com/topics/cisa" title="Topic: cisa" data-view-component="true">
  cisa
</a>
      <a data-ga-click="Topic, repository page" data-octo-click="topic_click" data-octo-dimensions="topic:cisa-kev" href="https://github.com/topics/cisa-kev" title="Topic: cisa-kev" data-view-component="true">
  cisa-kev
</a>
  </p></div>

    <h3>Resources</h3>
    <p>
      <a data-analytics-event="{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:readme&quot;}" href="#readme-ov-file">
        
        Readme
</a>    </p>

  



  <include-fragment src="/Ostorlab/KEV/hovercards/citation/sidebar_partial?tree_name=main">
  </include-fragment>

  <p>
    <a data-turbo-frame="repo-content-turbo-frame" href="https://github.com/Ostorlab/KEV/activity" data-view-component="true">
      
      <span>Activity</span>
</a>  </p>

    <p>
      <a data-turbo-frame="repo-content-turbo-frame" href="https://github.com/Ostorlab/KEV/custom-properties" data-view-component="true">
        
        <span>Custom properties</span>
</a>    </p>

  <h3>Stars</h3>
  <p>
    <a href="https://github.com/Ostorlab/KEV/stargazers" data-view-component="true">
      
      <strong>226</strong>
      stars
</a>  </p>

  <h3>Watchers</h3>
  <p>
    <a href="https://github.com/Ostorlab/KEV/watchers" data-view-component="true">
      
      <strong>5</strong>
      watching
</a>  </p>

  <h3>Forks</h3>
  <p>
    <a href="https://github.com/Ostorlab/KEV/forks" data-view-component="true">
      
      <strong>8</strong>
      forks
</a>  </p>

    <div>
      <p><a href="https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2FOstorlab%2FKEV&amp;report=Ostorlab+%28user%29">
          Report repository
</a>    </p></div>
</div>

        
            <div>
                <h2 data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame">
  <a href="https://github.com/Ostorlab/KEV/releases" data-view-component="true">
    Releases
</a></h2>

    <p>No releases published</p>

              </div>

        
        
            <div>
                <h2>
  <a href="https://github.com/orgs/Ostorlab/packages?repo_name=KEV" data-view-component="true">
    Packages
      
</a></h2>


      <p>
        No packages published <br>
      </p>



              </div>

        
            

        
            <div>
                <h2>
  <a href="https://github.com/Ostorlab/KEV/graphs/contributors" data-view-component="true">
    Contributors
      <span title="7" data-view-component="true">7</span>
</a></h2>


    
  <ul>
    <li>
      <a href="https://github.com/3asm" data-hovercard-type="user" data-hovercard-url="/users/3asm/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self">
        <img src="https://avatars.githubusercontent.com/u/1726895?s=64&amp;v=4" alt="@3asm" size="32" height="32" width="32" data-view-component="true">
      </a>
    </li>
    <li>
      <a href="https://github.com/PiranhaSa" data-hovercard-type="user" data-hovercard-url="/users/PiranhaSa/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self">
        <img src="https://avatars.githubusercontent.com/u/146742880?s=64&amp;v=4" alt="@PiranhaSa" size="32" height="32" width="32" data-view-component="true">
      </a>
    </li>
    <li>
      <a href="https://github.com/BlueSquare1" data-hovercard-type="user" data-hovercard-url="/users/BlueSquare1/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self">
        <img src="https://avatars.githubusercontent.com/u/129080649?s=64&amp;v=4" alt="@BlueSquare1" size="32" height="32" width="32" data-view-component="true">
      </a>
    </li>
    <li>
      <a href="https://github.com/amine3" data-hovercard-type="user" data-hovercard-url="/users/amine3/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self">
        <img src="https://avatars.githubusercontent.com/u/4823598?s=64&amp;v=4" alt="@amine3" size="32" height="32" width="32" data-view-component="true">
      </a>
    </li>
    <li>
      <a href="https://github.com/deadly-panda" data-hovercard-type="user" data-hovercard-url="/users/deadly-panda/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self">
        <img src="https://avatars.githubusercontent.com/u/5616647?s=64&amp;v=4" alt="@deadly-panda" size="32" height="32" width="32" data-view-component="true">
      </a>
    </li>
    <li>
      <a href="https://github.com/mohsinenar" data-hovercard-type="user" data-hovercard-url="/users/mohsinenar/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self">
        <img src="https://avatars.githubusercontent.com/u/15703728?s=64&amp;v=4" alt="@mohsinenar" size="32" height="32" width="32" data-view-component="true">
      </a>
    </li>
    <li>
      <a href="https://github.com/rabsondev" data-hovercard-type="user" data-hovercard-url="/users/rabsondev/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self">
        <img src="https://avatars.githubusercontent.com/u/121631800?s=64&amp;v=4" alt="@rabsondev" size="32" height="32" width="32" data-view-component="true">
      </a>
    </li>
</ul>





              </div>

        
        
              </div>
  
</div></div>

</turbo-frame>


    </main>
  </div>

          




    <cookie-consent id="cookie-consent-banner" data-initial-cookie-consent-allowed="" data-cookie-consent-required="true"></cookie-consent>


  

    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open="">
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog="">
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0 tooltipped-no-delay" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>
<template id="snippet-clipboard-copy-button-unpositioned">
  <div class="zeroclipboard-container">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 tooltipped-no-delay d-flex flex-justify-center flex-items-center" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>




    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Prison. Bankruptcy. Suicide. How a software glitch ruined lives (321 pts)]]></title>
            <link>https://www.cnn.com/2024/01/13/business/uk-post-office-fujitsu-horizon-scandal/index.html</link>
            <guid>39010070</guid>
            <pubDate>Tue, 16 Jan 2024 06:22:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnn.com/2024/01/13/business/uk-post-office-fujitsu-horizon-scandal/index.html">https://www.cnn.com/2024/01/13/business/uk-post-office-fujitsu-horizon-scandal/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=39010070">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-editable="content" itemprop="articleBody" data-reorderable="content">
                    <p><cite>
      <span data-editable="location">London</span>
      <span data-editable="source">CNN</span>
        &nbsp;—&nbsp;
    </cite>
</p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr6c1fe7001b45nw221s83xu@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      After a piece of software incorrectly showed that money had gone missing, a trusted, centuries-old British government corporation used its financial and legal might to convict and bankrupt hundreds of people who ran its branches. Some family members say their loved-ones were left so distressed they took their own lives.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr9dfkzn002a3b6hv6lscjai@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      This could be the plot of a dystopian novel, but it describes the real-life ordeal that scores of the so-called sub-postmasters of the UK Post Office went through between 1999 and 2015. The government —&nbsp;which owns the Post Office — has described the scandal as one of the greatest miscarriages of justice in British history.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr9ewc06002n3b6houy9318x@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Over two decades, livelihoods and reputations were destroyed, families shattered, and savings lost. Out of thousands of affected sub-postmasters who ran small businesses in communities across Britain, 700 were convicted of criminal offences. Some spent time in prison.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr6c4fvf00043b6hwymsn7rw@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      It began with errors in an IT system called Horizon, built by Japan’s Fujitsu and introduced in 1999 to replace paper-based accounting.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr6d2d0d000m3b6hvywe4vo8@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Soon after its installation, branch managers realized the system was faulty. The software regularly showed that money — often many thousands of pounds — had gone missing from Post Office accounts. In many cases, it was simply wrong.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7o5sg6000n3b6hwxof13xn@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Jo Hamilton was running a post office in a small village in southern England in 2003 when her Horizon computer started to show a shortfall of £2,000 ($2,500). When she ran the numbers again, she told CNN, that amount “doubled in front of (her) eyes.”
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clrathudl0001356h2nlhokq3@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      In the end, Hamilton re-financed her home to pay the non-existent shortfall that — by the time the Post Office had taken her to court in 2007, charging her with theft and false accounting — had ballooned to £36,000 ($45,800).
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clrathw2w0003356hzz4hm1de@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Shamed and exhausted, Hamilton pled guilty to false accounting on the proviso that the theft charge would be dropped. “It was destroying me,”&nbsp;she said.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr6d0wlr000k3b6hacemjvff@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The scandal has been the subject of legal cases and UK media reports for years, but only since last week’s broadcast of a TV drama spotlighting its brutal human toll have public awareness and <a href="https://you.38degrees.org.uk/petitions/strip-paula-vennells-of-her-cbe?source=homepage&amp;utm_medium=promotion&amp;utm_source=homepage" target="_blank">outrage skyrocketed</a>.
  </p>

<div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/clr9h7ymu00373b6huhp74cfz@published" data-name="02 mr bates vs the post office 011124" data-component-name="image" data-observe-resizes="" data-original-ratio="0.6666666666666666" data-original-height="2000" data-original-width="3000" data-url="https://media.cnn.com/api/v1/images/stellar/prod/240111123858-02-mr-bates-vs-the-post-office-011124.jpg?c=original" data-editable="settings">
       <picture><source height="2000" width="3000" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240111123858-02-mr-bates-vs-the-post-office-011124.jpg?q=w_1110,c_fill/f_webp" type="image/webp"><source height="2000" width="3000" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240111123858-02-mr-bates-vs-the-post-office-011124.jpg?q=w_1015,c_fill/f_webp" type="image/webp"><source height="2000" width="3000" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240111123858-02-mr-bates-vs-the-post-office-011124.jpg?q=w_1160,c_fill/f_webp" type="image/webp"><source height="2000" width="3000" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240111123858-02-mr-bates-vs-the-post-office-011124.jpg?q=w_680,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/240111123858-02-mr-bates-vs-the-post-office-011124.jpg?q=w_1110,c_fill" alt="ITV STUDIOS
MR BATES Vs POST OFFICE



Pictured: AMIT SHAH as Jas,KRUPA PATTANI as Sam,LESLEY NICOL as Pam,IFAN HUW DAFYDD as Noel,JULIE HESMONDHALGH as Suzanne,TOBY JONES as Alan Bates,MONICA DOLAN as Jo,ASIF KHAN as Mohammad,WILL MELLOR as Lee and SHAUN DOOLEY as Rudkin.

This photograph is (C) ITV Plc and can only be reproduced for editorial purposes directly in connection with the programme or event mentioned above, or ITV plc. This photograph must not be manipulated [excluding basic cropping] in a manner which alters the visual appearance of the person photographed deemed detrimental or inappropriate by ITV plc Picture Desk.  This photograph must not be syndicated to any other company, publication or website, or permanently archived, without the express written permission of ITV Picture Desk. Full Terms and conditions are available on the website www.itv.com/presscentre/itvpictures/terms

For further information please contact:
patrick.smith@itv.com" onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="2000" width="3000" loading="lazy"></picture>
    </div>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr6dz23s000b3b6htm5lhocl@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The ITV network drama “Mr Bates vs The Post Office” focuses on the sub-postmasters’ tireless campaign to prove their innocence and secure compensation. Alan Bates is a former sub-postmaster who led the effort.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7oyp6500013b6h2t2zqnqy@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Since the show’s release, the government has demonstrated, in a matter of days, the sort of urgency that sub-postmasters have been demanding for years. On Wednesday, Prime Minister Rishi Sunak <a href="https://www.gov.uk/government/news/government-to-quash-wrongful-post-office-convictions" target="_blank">announced</a> that parliament would quickly pass landmark legislation to overturn the convictions of hundreds of sub-postmasters.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7sqd2j00033b6htvkr6le9@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      But the United Kingdom’s political and legal establishment has still to answer some vital questions, including who knew what and when; which individuals — if any —&nbsp;should be held criminally culpable; and the extent to which Fujitsu, a company<strong> </strong>worth $30 billion that is <a href="https://www.gov.uk/government/publications/strategic-suppliers/crown-representatives-and-strategic-suppliers" target="_blank">still a major supplier</a> to the UK government, should be on the hook to pay compensation to victims.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr9wri7200073b6huwl57i6w@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The Post Office has so far paid more than £138 million ($176 million) in compensation, a company spokesperson told CNN. Those payments follow a 2019 <a href="https://www.judiciary.uk/wp-content/uploads/2019/12/bates-v-post-office-judgment.pdf" target="_blank">civil lawsuit</a> brought by more than 500 sub-postmasters that ruled that Horizon contained “bugs, errors and defects.”
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr9xv9vu00003b6hwr621stc@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “We are doing all we can to right the wrongs of the past, including extensive work to support overturning wrongful convictions,” the Post Office spokesperson said.
  </p>

  

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7ptsbz000f3b6hylc7mv55@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The odds were always stacked against sub-postmasters.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7pz3l8000x3b6h5fxvo50x@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Under the terms of their Post Office contracts, best described as franchise agreements, they were liable for any financial losses in their branch. Once their contracts were terminated, many were barred by Post Office investigators from entering their business premises to try to find evidence proving their innocence.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clrauoh4d0005356h2vw5qpta@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Whenever Hamilton phoned the Horizon helpline, operators told her she was the only person experiencing problems with the system.
  </p>

<div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/clraw2ul700063b6hy9lsumkm@published" data-name="Jo Hamilton 011224" data-component-name="image" data-observe-resizes="" data-original-ratio="0.6666666666666666" data-original-height="2000" data-original-width="3000" data-url="https://media.cnn.com/api/v1/images/stellar/prod/240112115159-jo-hamilton-011224.jpg?c=original" data-editable="settings">
       <picture><source height="2000" width="3000" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240112115159-jo-hamilton-011224.jpg?q=w_1110,c_fill/f_webp" type="image/webp"><source height="2000" width="3000" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240112115159-jo-hamilton-011224.jpg?q=w_1015,c_fill/f_webp" type="image/webp"><source height="2000" width="3000" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240112115159-jo-hamilton-011224.jpg?q=w_1160,c_fill/f_webp" type="image/webp"><source height="2000" width="3000" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240112115159-jo-hamilton-011224.jpg?q=w_680,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/240112115159-jo-hamilton-011224.jpg?q=w_1110,c_fill" alt="Appeal verdict for Postmasters at Royal Courts of Justice (Court of Appeal) on Huddles Law
Jo Hamilton" onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="2000" width="3000" loading="lazy"></picture>
    </div>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7pvilx000r3b6hms5ksihd@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      But there were many others.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7wqh6f00073b6ho45upeg2@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      In 2008, unexplained shortfalls on Wendy Buffrey’s Horizon kept doubling as she re-submitted the same calculations. Post Office investigators told her she was the only person experiencing these problems.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7wza0t000b3b6hu9mfr75p@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “I knew that I’d be held responsible for that £36,000. So, I maxed all my credit cards out, put £10,000 back in, and rolled the accounts over because I didn’t know what else to do,” the former sub-postmistress in the English town of Cheltenham told CNN.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7pvj2n000t3b6hcpbltcm1@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      A lawyer told Buffrey at the time that pleading not guilty would likely result in a three-year prison sentence. “I was so afraid that I did plead guilty to false accounting when they dropped the theft charge,” she said.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7t1ocj000d3b6ht481hia2@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The ordeal has taken a heavy, ongoing toll. “I’ve got stress-related fibromyalgia, which means I’m constantly in pain,” she said.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clrazi5o500003b6hyt5kbsvy@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Neil Hudgell, a lawyer representing about 350 sub-postmasters, told CNN he had been told directly of sub-postmasters and family members who had taken their lives after being falsely accused or as a result of losing their businesses and reputations.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clrb0b9bu000g3b6hf7u3qf9s@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      In a witness impact statement, the wife of Martin Griffith said he deliberately walked in front of a bus after sinking into deep depression following the Post Office’s decision to terminate his contract. He had borrowed from his parents to make up shortfalls in his accounts only to have his branch robbed.
  </p>

  

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr6e25em000d3b6hg7frmrcd@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Prior to the TV show’s release, sub-postmasters were only inching their way toward justice.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clraelyrc000t3b6hoxuzokk9@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Following the 2019 legal victory, hundreds more sub-postmasters have come forward saying their Horizon system had incorrectly displayed shortfalls. But so far, only 93 of the <a href="https://corporate.postoffice.co.uk/en/horizon-scandal-pages/overturned-convictions-and-compensation-information-on-progress" target="_blank">700 convicted</a> sub-postmasters have been exonerated, including Hamilton and Buffrey. To date, more than 2,700 have applied for compensation.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr9bogj8001b3b6hawq8f5go@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      But many sub-postmasters say the compensation they’ve received isn’t enough, and are demanding accountability for those behind the affair.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr9c5l58001s3b6hj17g6q33@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      A spokesperson for London’s Metropolitan Police told CNN that it had opened a criminal investigation in 2020 into possible fraud offences committed by the Post Office. It is also investigating Fujitsu for possible offences connected to sub-postmasters’ prosecutions.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr9cgnex00233b6h09nvb4ww@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Two government ministers said this week that Fujitsu could be forced to pay out compensation to victims, depending on the findings of an independent <a href="https://www.postofficehorizoninquiry.org.uk/" target="_blank">public inquiry</a> into the scandal.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clrajpawk001y3b6hvlzbz50y@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      A spokesperson for Fujitsu said the company was “fully committed to supporting the inquiry in order to understand what happened and to learn from it.”
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clrajps6t00203b6h2v73ej4f@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “The inquiry has reinforced the devastating impact on postmasters’ lives and (those) of their families, and&nbsp;Fujitsu&nbsp;has apologized for its role in their suffering,” the spokesperson said.
  </p>

<div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/clrajekx5001t3b6h1pn5ue0s@published" data-name="fujitsu 011124" data-component-name="image" data-observe-resizes="" data-original-ratio="0.6666666666666666" data-original-height="2000" data-original-width="3000" data-url="https://media.cnn.com/api/v1/images/stellar/prod/240111112707-fujitsu-011124.jpg?c=original" data-editable="settings">
       <picture><source height="2000" width="3000" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240111112707-fujitsu-011124.jpg?q=w_1110,c_fill/f_webp" type="image/webp"><source height="2000" width="3000" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240111112707-fujitsu-011124.jpg?q=w_1015,c_fill/f_webp" type="image/webp"><source height="2000" width="3000" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240111112707-fujitsu-011124.jpg?q=w_1160,c_fill/f_webp" type="image/webp"><source height="2000" width="3000" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240111112707-fujitsu-011124.jpg?q=w_680,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/240111112707-fujitsu-011124.jpg?q=w_1110,c_fill" alt="BRACKNELL, ENGLAND - JANUARY 10: A general exterior view of the offices of Fujitsu, the technology company who made the Horizon computer system at the heart of the Post Office prosecution saga, on January 10, 2024 in Bracknell, England. The British Prime Minister Rishi Sunak says the government will introduce a new law to &quot;swiftly exonerate and compensate victims&quot; of wrongful prosecution of Post Office workers over a 16-year period starting just before the new millennium. Between 1999 and 2015, more than 700 Post Office branch managers received criminal convictions, and some were sent to prison, when the faulty Horizon IT system made it appear that money was missing from their sites. To date, 93 of these convictions have been overturned, leaving many others still fighting their convictions or to receive compensation. A recent television docudrama has thrust the issue back in the spotlight. (Photo by Leon Neal/Getty Images)" onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="2000" width="3000" loading="lazy"></picture>
    </div>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr9bohv2001d3b6hq7vu7utu@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      James Hartley, a lawyer at Freeths, the law firm that represented sub-postmasters in their civil case four years ago, believes the Post Office deserves most of the blame.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr9butfq001k3b6h2q7d3he1@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “This whole case, yes, it’s about defects in a massive IT system but, even more than that, it is about the corporate behavior of Post Office,” he told CNN.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr90xzm7000f3b6h9z4gondi@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Buffrey, in Cheltenham, takes a similar view.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr90y402000h3b6hgzu3akbm@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “The Horizon system was a piece of machinery and software that wasn’t working correctly,” she said. “(But) it was people that pushed our prosecutions through. It was people that didn’t investigate things. It was people that put us into prison, into our graves, and into illness — for probably the rest of our lives.”
  </p>

  

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7pmi2o000d3b6h2uagqmqi@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      No amount of money can undo “20 years of trauma,” said Siema Kamran, who bought a post office branch in north London with her husband, Kamran Ashraf, in 2001.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr8zwakg00043b6h4zyskza7@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Three years later, Ashraf felt pressured by his lawyer to plead guilty to theft after an audit by the Post Office had found an unexplained shortfall&nbsp;of £25,000 ($32,000). Ashraf had his conviction overturned in 2020.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr8zu3hu00023b6hkq8bwvvx@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Kamran remembers the exact date —&nbsp;February 26 —&nbsp;of her husband’s court appearance two decades ago, the day he was sentenced and sent to prison.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr90avto000b3b6huzmv43xv@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “I thought I would see him in a couple of hours. Except he went in and I kept calling him and it was going to voicemail,” she told CNN. “Eventually, my cousin turned up at the door … and told me that my husband had been sent to prison. I just felt like my world collapsed that day.”
  </p>

<div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/clrarm7pa00003b6h0qpenjn9@published" data-name="Siema Kamran" data-component-name="image" data-observe-resizes="" data-original-ratio="0.5625" data-original-height="900" data-original-width="1600" data-url="https://media.cnn.com/api/v1/images/stellar/prod/240112035027-siema-kamran.jpg?c=original" data-editable="settings">
       <picture><source height="900" width="1600" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240112035027-siema-kamran.jpg?q=w_1110,c_fill/f_webp" type="image/webp"><source height="900" width="1600" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240112035027-siema-kamran.jpg?q=w_1015,c_fill/f_webp" type="image/webp"><source height="900" width="1600" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240112035027-siema-kamran.jpg?q=w_1160,c_fill/f_webp" type="image/webp"><source height="900" width="1600" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/240112035027-siema-kamran.jpg?q=w_680,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/240112035027-siema-kamran.jpg?q=w_1110,c_fill" alt="Siema Kamran, right, and her husband." onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="900" width="1600" loading="lazy"></picture>
    </div>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr8zqtqr00003b6hmxkdyd4h@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Ashraf spent the first few weeks of his nine-month sentence in a high-security prison, locked up for 23 hours a day, before being transferred to a lower-security prison. He was released after four months, but spent the next five wearing an electronic tag around his ankle so authorities could monitor his whereabouts.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr90iyjv000d3b6hz42hhzr7@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Kamran said her husband, who suffers from post-traumatic stress disorder as a result of his ordeal, finds it too difficult to talk to the media about his experience. She, her husband, and their three children all require therapy — something she thinks they will need for the rest of their lives.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/clr7z5mnb001a3b6h2bwqtlcn@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Now a self-employed make-up artist, Kamran simply cannot bring herself to work for a big company again. “If the Post Office can do this to you, then God knows what any other brand is capable of,” she said.
  </p>

                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Many AI safety orgs have tried to criminalize currently-existing open-source AI (334 pts)]]></title>
            <link>https://1a3orn.com/sub/machine-learning-bans.html</link>
            <guid>39009779</guid>
            <pubDate>Tue, 16 Jan 2024 05:17:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://1a3orn.com/sub/machine-learning-bans.html">https://1a3orn.com/sub/machine-learning-bans.html</a>, See on <a href="https://news.ycombinator.com/item?id=39009779">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>I've seen a few conversations where someone says something like this:</p>
<blockquote>
<p>I've been using an open-source LLM lately -- I'm a huge fan of not depending on OpenAI, Anthropic, or Google. But I'm really sad that the AI safety groups are trying to ban the kind of open-source LLM that I'm using.</p>
</blockquote>
<p>Someone then responds:</p>
<blockquote>
<p>What! Almost no one <em>actually</em> wants to ban open source AI of the kind that you're using! That's just a recklessly-spread myth! AI Safety orgs just want to ban a tiny handful of future models -- no one has tried to pass laws that would have banned current open-sourced models!</p>
</blockquote>
<p>This second claim is false.</p>
<p>Many AI "safety" organizations or people have in the past advocated bans that would have criminalized the open-sourcing of models <em>currently extant</em> as of now, January 2024. Even more organizations have pushed for bans that would cap open source AI capabilities at more or less exactly their current limits.</p>
<p>(I use open-sourcing broadly to refer to making weights generally available, not always to specific open-source compliant licensing.)</p>
<p>At least a handful of the organizations that have pushed for such bans are well-funded and becoming increasingly well-connected to policy makers.</p>
<p>Note that I think it's <em>entirely understandable</em> that someone would not realize such bans have been the goal of some AI safety orgs!</p>
<p>For comprehensible reasons -- i.e., how many people judge such policies to be a horrible idea, including many people interested in AI safety -- such AI safety organizations have often directed the documents explaining their proposed policies to bureaucrats, legislative staffers, and so on, and not been proactive in communicating their goals to the public.</p>
<p>Note also that <strong>not all</strong> AI safety organizations or AI-safety concerned people are trying to do this -- although, to be honest, a disturbing number are.</p>
<p>At least a handful of people in some organizations believe -- as do I -- that open source has been increasingly <a href="https://www.beren.io/2023-11-05-Open-source-AI-has-been-vital-for-alignment/">vital for AI safety work</a>. Given how <em>past</em> ban proposals would have been harmful, I think many future such proposals are therefore likely to be harmful as well, especially given that the arguments for them look pretty much identical.</p>
<p>Anyhow, a partial list:</p>
<h2><strong>1: Center for AI Safety</strong></h2>
<p>The Center for AI Safety is a well-funded (i.e., with &gt; <a href="https://www.openphilanthropy.org/grants/?organization-name=center-for-ai-safety">9 million USD</a>) 501c3 that focuses mostly on AI safety research and on outreach. You've probably heard of them because they gathered signatures for their <a href="https://www.safe.ai/statement-on-ai-risk">sentence</a> about AI safety.</p>
<p>Nevertheless, they are also involved in policy. In response to the National Telecommunications and Information Administration's (NTIA) request for comment they <a href="https://www.regulations.gov/comment/NTIA-2023-0005-1416">sent</a> proposed regulatory rules to them.</p>
<p>These rules propose defining "powerful AI systems" as any systems that meet or exceed certain measures for any of the following:</p>
<blockquote>
<p><strong>Computational resources used to train the system</strong> (e.g., 10^23 floating-point operations or “training FLOP”; this is approximately the amount of FLOP required to train GPT-3. Note that this threshold would be updated over time in order to account for algorithmic improvements.) [Note from 1a3orn; this means updated downwards]</p>
<p><strong>Large parameter count</strong> (e.g., 80B parameters)</p>
<p><strong>Benchmark performance</strong> (e.g., &gt; 70% performance on the Multi-task Language Understanding benchmark (MMLU))</p>
</blockquote>
<p>Systems meeting any of these requirements, according to the proposal, are subject to a number of requirements that would effectively ban open-sourcing them.</p>
<p>Llama 2 was trained with &gt; 10^23 FLOPs, and thus would have been banned beneath this rule. Fine-tunes of Llama 2 also obtain <a href="https://www.reddit.com/r/LocalLLaMA/comments/159l9ll/llama270bguanacoqlora_becomes_the_first_model_on/">greater than 70%</a>on the MMLU and thus <em>also</em> would have been banned beneath this rule.</p>
<p>Note that -- despite how this would have prevented the release of Llama 2, and thus thousands of fine-tunes, and enormous quantities of <a href="https://www.beren.io/2023-11-05-Open-source-AI-has-been-vital-for-alignment/">safety research</a> -- the document boasts that its proposals "only regulate a small fraction of the overall AI development ecosystem."</p>
<h2><strong>2: Center for AI Policy</strong></h2>
<p>The Center for AI Policy -- different from the Center for AI Safety! -- is a DC-based lobbying organization. The announcement they <a href="https://www.lesswrong.com/posts/unwRBRQivd2LYRfuP/introducing-the-center-for-ai-policy-and-we-re-hiring">made</a> about their existence made some waves -- because the rules that they initially proposed would have required the <em>already-released</em> Llama-2 to be regulated by a new agency.</p>
<p>However, in a recent interview they <a href="https://www.thebayesianconspiracy.com/2023/12/202-the-center-for-ai-policy-talks-government-regulation/">say</a> that they're "trying to use the lightest touch we can -- we're trying to use a scalpel." Does this mean that they have changed their views?</p>
<p>Well, they haven't made any legislation they're proposing visible yet. But in the same interview they say that models trained with more than 3x10^24 FLOPs or getting &gt; 85 on the MMLU would be in their "high risk" category, which according to the interview explicitly means they would be banned from being open sourced.</p>
<p>This would have outlawed the <a href="https://huggingface.co/blog/falcon-180b">Falcon 180b</a> by its FLOP measure, although -- to be fair -- the Falcon 180b was open-sourced by an organization in the United Arab Emirates, so it's not certain that it would matter.</p>
<p>As far as the MMLU measure, no open source model at this level has <em>yet</em> been released, but GPT-4 scores ~90% on the MMLU. Thus, this amounts to a law attempting to permanently crimp open source models beneath GPT-4 levels, an event I otherwise think is reasonably likely in 2024.</p>
<p>(I do not understand why AI safety orgs think that MMLU scores are a good way to measure danger.)</p>
<h2><strong>3: Palisade Research</strong></h2>
<p>This non-profit, headed by Jeffrey Ladish, has as its stated goal to "create concrete demonstrations of dangerous capabilities to advise policy makers and the public on AI risks." That is, they try to make LLMs do dangerous or scary things so politicians will do particular things for them.</p>
<p>Unsurprisingly, Ladish himself literally <a href="https://twitter.com/JeffLadish/status/1654319741501333504">called for government to stop the release of Llama 2, saying "we can prevent the release of a LLaMA 2! We need government action on this asap."</a></p>
<p>(He also said that he thought it would potentially cause millions of dollars of damage, and was <a href="https://twitter.com/JeffLadish/status/1666653302355009537">more likely</a> to cause <strong>more</strong> than a billion dollars of damage than to cause less than a million.)</p>
<h2><strong>4. The Future Society</strong></h2>
<p><a href="https://thefuturesociety.org/">The Future Society</a> is a think tank whose <a href="https://thefuturesociety.org/about-us/">goal</a> is to "align artificial intelligence through better governance." They boast 60 partners such as UNESCO and the Future of Life Institute, and claim to have spoke to over 8,000 "senior decision makers" and taught 4,000 students. They aim to provide guidance to both the EU and the US.</p>
<p>In one of their premier policy documents, <a href="https://thefuturesociety.org/wp-content/uploads/2023/09/heavy-is-the-head-that-wears-the-crown.pdf">"Heavy is the head that wears the crown"</a>, they define "Type 2" General Purpose AI (GPAI) as a kind trained with &gt; 10^23 FLOPs (but less than 10^26) or scoring &gt; 68% (but less than 88%) on the MMLU. Llama-2, again, falls into this category on both counts.</p>
<p>The document mandates that anyone creating a Type 2 GPAI must -- well, must do many things -- but must provide for "Absolute Trustworthiness," which seems to mean that the model must be incapable of doing anything bad whatsoever, and more to the point means that the provider of the model must be able to "retract already deployed models (roll-back &amp; shutdowns)." Open source models would be unable to meet this requirement, obviously.</p>
<p>Similarly, they say that providers would be "required to <strong>continuously monitor the model’s capabilities and behaviour</strong>, detecting any anomalies and escalating cases of concern to relevant decision makers," which is again impossible to do with an open source model.</p>
<p>Note that in accord with their policy recommendations, this group specifically calls out Meta's actions, dubbing the open-sourcing of Llama a "particularly egregious case of misuse." They also seem to believe that Apache licensing is unacceptable, explicitly calling the "no guarantee of fitness of purpose" clause in such a license "abusive."</p>
<p>Don't worry, though! The Future Society says that they <a href="https://thefuturesociety.org/about-us/">believe</a> that "legitimate and sustainable governance requires bringing to the table many different perspectives."</p>
<p>(My guess is that this is one of the major teams responsible trying to get the EU's rules to ban open source AI, but the institutional process by which the EU works is completely opaque to me and so I am only left guessing.)</p>
<hr>
<p>Note that the above is just a partial list of organizations or people who have made their policies or goals extremely explicit.</p>
<p>There are other organizations or people out there whose policies are less legible, but ultimately are equally opposed to open sourcing. Consider, for instance, <a href="https://www.safer-ai.org/">SaferAI</a> , whose CEO says he's fine <a href="https://x.com/Simeon_Cps/status/1710062142559285560?s=20">"with developing and deploying open source up to somewhere around Llama-1"</a>; or the <a href="https://pauseai.info/proposal">PauseAI</a> people, who think we should need approvals for training runs <a href="https://pauseai.info/proposal">"above a certain size (e.g. 1 billion parameters)"</a> and who accused <a href="https://metaprotest.org/">Meta of reckless irresponsibility</a> for releasing Llama-2.</p>
<p>Or there is the extremely questionable <a href="https://www.stop.ai/proposals">StopAI</a> group advised by Conjecture, which wishes to eliminate not merely all open source but all AI trained with &gt; 10^23 FLOPs.</p>
<p>Or there are surprisingly numerous people who want to completely change liability law, so that you cannot open-source a model without becoming liable for damage that it causes.</p>
<p>These and similar statements from them either outright imply or would be <em>hard to separate</em> from policies that would have effectively banned currently-extant open-source.</p>
<p>So, again -- it's <strong>just false</strong> to say that if AI safety groups haven't tried to ban models that already exist. They <em>already</em> would have banned models that are actively being used, if they had had their way in the past. They would have substantially contributed to a corporate monopoly on LLMs.</p>
<p>If you are like me, and think the proposed policies mentioned above are pretty bad -- the stupidity of a law in no way prevents it from being passed! The above groups have not dissolved in the last 6 months. They still hope to pass something like these measures. They are still operating on the same questionable epistemology.</p>
<p>The open-source AI movement is in general is <em>far behind</em> these groups and needs to get its legislative act together if the better organized "anti-open source" movement is not to obliterate it.</p>
<p>And I think it is better to call it the "anti-open source" movement than the AI safety movement.</p>
<p>The "environmentalist" movement helped get nuclear power plants effectively banned, thereby crippling a safe and low-carbon source of energy, causing immense harm to the environment and to humanity by doing so. They thought they were helping the environment. They were not.</p>
<p>I think that some sectors of the "AI safety" movement are likely on their way to doing a similar thing, by preventing human use of, and research into, an easily-steerable and deeply non-rebellious form of intelligence.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Lichee Console 4A – RISC-V mini laptop: Review, benchmarks and early issues (216 pts)]]></title>
            <link>https://3.14.by/en/read/RISC-V-Sipeed-Lichee-Console-4A-Alibaba-T-Head-TH1520-review</link>
            <guid>39009745</guid>
            <pubDate>Tue, 16 Jan 2024 05:10:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://3.14.by/en/read/RISC-V-Sipeed-Lichee-Console-4A-Alibaba-T-Head-TH1520-review">https://3.14.by/en/read/RISC-V-Sipeed-Lichee-Console-4A-Alibaba-T-Head-TH1520-review</a>, See on <a href="https://news.ycombinator.com/item?id=39009745">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main"><p>I always liked <a href="https://3.14.by/en/read/toshiba-libretto-50ct">small laptops</a> and phones - but for some reason they fell out of favor of manufacturers ("bigger is more better"). Now if one wanted to get tiny laptop - one of the few opportunities would have been to fight for old Sony UMPC's on ebay which are somewhat expensive even today. Recently Raspberry Pi/CM4-based tiny laptops started to appear - especially <a href="https://www.clockworkpi.com/home-devterm">clockwork</a> products are neat, but they are not foldable like a laptop. When in summer of 2023 Sipeed announced <a href="https://sipeed.com/licheepi4a">Lichee Console 4A</a> based on RISC-V SoC - I preordered it immediately and in early January I finally received it. Results of my testing, currently uncovered issues are below.<br><img src="https://s.14.by/lv0.jpg"></p><h2>Brief specs and internals</h2><p>
First of all, Lichee Console is tiny, 185 x 140 x 19 mm, 656g. Build is solid and high-quality, using mostly aluminum.  Keyboard has typical laptop key travel and to my feel comparable to Lenovo's but it is of course quite a bit smaller. I cannot type on it blindly (yet), but it is possible. The only inconvenient part of keyboard (in context of Linux) is compressed keys [,][.][/], which are often used in console. Trackpoint mouse is ok for someone who had it all these years on Lenovo laptops. </p><p>Lichee Console 4A runs on T-Head (Alibaba) TH1520 quad-core RISC-V SoC (4x <a href="https://img.102.alibaba.com/1627958419409/49652c9412c41cb6f39b36fed1244e6e.pdf">C910</a> cores). While TH1520 can clock up to 2.0/2.5Ghz, in Lichee Console it is tamed down to 1.5Ghz max, likely to help with thermal dissipation. Maximum configuration is quite serious for such tiny thing: maximum of 16Gb DDR4 RAM (I got this version) and maximum of 128Gb eMMC. There is a slot for 42mm SATA M.2 SSD, but it connected via ASM1153 USB3.0-&gt;SATA adapter. More on that later. </p><p>I would prefer working on M.2 SSD as you can keep the data if something else fails (eMMC is soldered on the board and will be expensive to recover). 42mm SATA SSD's are not very popular, and the best I was able to find was Transcend MTS400 256Gb (it is still in transit). There are many such SSD's from Chinese brands though. </p><p>Display has resolution of 1280x800 and looks to be IPS. No color shift at high angles. There is a webcam on the left side of the monitor - it is average quality full HD 30p (requires good lighting), landscape orientation. It is possible to connect external display via mini-HDMI (cable included). It worked fine on FullHD monitor, but unstable/non-working on 4k. </p><p>Battery is 2S 3000mAh. Charging can be done through USB-C (maximum 5V 2.2A, does not trigger 9/12V) or via 12V jack (which I personally will not use). 12V power brick came with Chinese/US plug, so if you want to use it - you will need an adapter. Jack external diameter is 3.45mm (central positive), if you would want to find a 12V PD trigger adapter for it (something <a href="https://www.aliexpress.com/item/1005006065089042.html">like this</a> but double check voltage). More on battery life below.</p><p>On the software side - Debian 12 with Xfce is preinstalled, built for 64-bit RISC-V. WiFi or Ethernet connection was straightforward, and Chrome-based browser was able to play YouTube video with no issues. apt update fetches packages from Chinese server. </p><p>Unboxing video below (no comments):</p><iframe width="1000" height="592" src="https://www.youtube.com/embed/w8xCDL67qUU" frameborder="0" allowfullscreen=""></iframe>
<p><b>Build quality</b>:<br>
There was only 1 build quality issue on my sample: apparently aluminum bottom part of case was squeezing keyboard, or something was pressing and bending keyboard outwards slightly (~1mm), which was catching screen bottom when opening and making unhealthy snapping sound. After reassembly &amp; pressing on keyboard in the middle - the issue was resolved. </p><p>Disassembly/assembly is relatively complicated due to tight fit of aluminum bottom cover, and I do not recommend to disassemble the unit unless absolutely necessary.</p><p>I do not like metal clips holding lithium battery in place. After enough vibration and abuse, some swelling on the battery it is not unthinkable that they might bite into the battery and destroy the unit. Even if 0.1% of units will burn down due to this potential issue - this will be very sad. Plastic bracket for the battery or glue in place (unliked by many and hard to service) are well tested by the industry and safe. What makes it hard to do well is flex cables under the battery. On my unit I added kapton tape under and over the metal bracket to ensure it does not wiggle over the battery and has a harder time biting into the battery.<br><img src="https://s.14.by/lv1.jpg"></p><p>Unlike most laptops, Lichee Console uses 2 PCB's in addition to SOC module, and this will bite us later. IO board has microsd card slot, USB and analog audio. <br><img src="https://s.14.by/lv2.jpg"></p><p>SoC module is removable. Heat is transferred via silicon pad to a heatpipe glued to aluminum back cover. <br><img src="https://s.14.by/lv3.jpg"></p><h2>Benchmarks &amp; tests</h2>
<p><b>CPU &amp; Power</b></p><table><tbody><tr><td></td><td>TH1520 @1.5Ghz</td><td>Raspberry Pi 4</td><td>Raspberry Pi 5</td></tr>
<tr><td>idle power</td><td>7.68 / 6W (with/without screen)</td><td>1.93W</td><td>2.42W</td></tr>
<tr><td>CoreMark 1 core</td><td>6900</td><td>7938</td><td>17725</td></tr>
<tr><td>Power 1 core</td><td>8.376W (with screen)</td><td>2.70W</td><td>4.47W</td></tr>
<tr><td>CoreMark 4 cores</td><td>25689</td><td>31532</td><td>69860</td></tr>
<tr><td>Power 4 cores</td><td>9.408W (with screen)</td><td>4.85W</td><td>7.35W</td></tr></tbody></table><p>
Here performance is slightly behind Raspberry Pi 4 due to clock speed being reduced from 2.0 to 1.5Ghz. Personally I find performance of Raspberry Pi 4 perfectly acceptable for console work, and I am satisfied with performance of TH1520 for my use. I have included Raspberry Pi 5 for comparison as it's already 2024, and later this year we'll (hopefully) see competing products using CM5. </p><p>What I don't like though is high static power consumption of Lichee Console. At idle system goes down to 300Mhz, and even with 3 cores manually parked - it still consumes ~6W (without screen). This static power consumption makes Lichee Console quite warm even at idle. Also, this gives us just ~2.5 hours of battery life without any heavy load. As USB charging is limited to 5V/2.2A - Lichee Console will charge extremely slowly when powered on (~3 hours to full charge when switched off and ~10 hours when switched on). Surely, 12V 3.45mm barrel charging is much faster. </p><p>Dynamic power consumption of C910 cores are rated at 200µW/MHz/core, which gives us 300mW dynamic power consumption for 1 core at 1.5Ghz, and 1.2W for 4 core load. Measurements confirm these numbers, so the only issue is high static power consumption. On ratio performance / dynamic power it is perfectly competitive to Raspberry Pi 4, it is only static part that hurts it. </p><p>To investigate high static power consumption I made thermal photo at idle:<br><img src="https://s.14.by/lv4.jpg"></p><p>Here we see that approximately half of power is dissipated by Via VL817 - USB 3.0 hub IC located right under SoC module. Less but still significant power is dissipated by ASM1153 USB-&gt;SATA adapter, despite no SATA drives connected. This is quite disappointing. If no software fix would be found to disable unused interfaces, I am personally considering de-soldering these IC's or disconnecting them from power. 5-6 vs 2.8 hours of battery life is more important for my use. </p><p>This high idle power consumption is probably why cooling fan is always on (thankfully it is quiet), even when I put Lichee Console inside the fridge :-)</p><p><b>WiFi &amp; Ethernet</b>
WiFi module is connected via SDIO. Practical speed via iperf3 is 122/115 Mbit/sec. "Not great, not terrible" - but good enough for regular use.<br>Wired Ethernet does 925/925 Mbit/sec without jumbo packets which is nearly as good as it gets. SoC has 2 Ethernet ports, only 1 is accessible on Lichee Console.</p><p><b>Disk performance</b><br>
<b>eMMC</b><br>
Random 4k: Writes 8102 IOPS, 31.6MiB/s. Reads 2502 IOPS, 9.77MiB/s<br>
Random 1Mb: Writes 202mb/s, Reads 130mb/s</p><p>Random access is slower than modern fast microsd cards, but sequential is acceptable (for eMMC).</p><p><b>MicroSD</b>:<br>
Testing fast MicroSD cards (Samsung Pro Ultimate, Sandisk Extreme Pro) which can negotiate fastest possible speed (up to 200Mb/s) - uncovered that they are <b>unstable</b> and operations fail with io errors. This is likely caused by extremely long signal path : from SoC, then to flex connector, then folded flex cable, then path across IO board. Old/slow MicroSD cards work reliably but at snail speed. Hopefully maximum interface speed for MicroSD can be reduced in software without affecting eMMC speed. </p><p><b>Currently missing/broken features (mostly software)</b>:<br>1) Bluetooth was failing to pair devices out of the box using GUI tools. <br>2) No sleep function. You have to switch off / boot up every time you open Lichee Console.<br>3) Not sure if there is sensor detecting closed screen. Right now when closed it just continues working with the screen on. <br>4) Adjustment of screen brightness does not work (it is always at max brightness, or off).<br>5) Suboptimal power management leading to high static power consumption: Is it possible to disable VL817/ASM1153? Is SoC supply voltage scaling correctly at idle?</p><p>I will update the article here as software is improved. </p><h2>Conclusion</h2><p>
My overall experience with Lichee Console is positive and I like it. It should be noted that at the moment it is more of a product for tinkering and not something that you can immediately use as-is for work with no changes. Substantial improvement will be required on software to fully utilize hardware capabilities (but this often happens with Linux on mobile platforms). Hardware has some flaws, they are unpleasant but not fatal (microsd stability at high speed, high idle power consumption). I am concerned about battery safety, and hopefully this is something that Sipeed can improve. </p><p>12nm TH1520 SoC offer competetive dynamic power consumption and sufficient performance, but lacks in IO (for desktop) which forced Sipeed to add additional interface ICs which happened to consume too much static power. </p><p>I hope that current rapid pace of RISC-V infrastructure development will continue and in the nearest years we'll see more RISC-V SoC's, this time with at least few lines of PCI-E - and we'll get even more exciting Linux-capable RISC-V devices. Update: <a href="https://community.milkv.io/t/introducing-the-milk-v-oasis-with-sg2380-a-revolutionary-risc-v-desktop-experience/780">Milk-V Oasis is a glimplse of this future</a>, expected later in 2024. Looking forwared to test it.</p><p>PS. If you like microchip and their internals - you might like my blog about boiling microchips in acid : <a href="https://zeptobars.com/">https://zeptobars.com</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why new hires often get paid more than existing employees (161 pts)]]></title>
            <link>https://bloomberry.com/why-new-hires-often-get-paid-more-than-existing-employees/</link>
            <guid>39008805</guid>
            <pubDate>Tue, 16 Jan 2024 02:44:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bloomberry.com/why-new-hires-often-get-paid-more-than-existing-employees/">https://bloomberry.com/why-new-hires-often-get-paid-more-than-existing-employees/</a>, See on <a href="https://news.ycombinator.com/item?id=39008805">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				
<p>One of the most enlightening moments in my career was when I discovered a new coworker was making  more than me during my stint in S&amp;P Capital IQ. I remembered casually asking him one day “How much is your salary?”. When I found out it was $40,000 more than mine, I felt resentful, jealous, and unappreciated.  How could someone who had the same job title and the same experience make 40% more than me? After soon finding out, I started to leave the office earlier than usual, justifying it by the fact I wasn’t even getting paid fairly. I eventually left the company a few months later. They counter-offered me with a promotion and a salary bump, but by then, I felt too offended. The damage was already done.</p>



<p>So why do companies do this? Are they purposely trying to make their employees disgruntled ? Do they really think employees won’t find out? Or that they’ll stay anyway because they’re one of the best employers in the world? As someone who spent some time working with compensation teams later in my career, and saw “how the sausage was made”, I thought I’d shared some insight into <em>why</em> new hires get paid more than existing employees, and why the best way to get a bigger pay is to move to a new job.</p>



<p><strong>Reason 1: Companies actually want you to leave</strong></p>



<p>This might sound unbelievable but it’s true. A lot of companies have attrition goals. Heck, some Big Tech companies fire the bottom 10% of their team every year. They want people who have been around for a long time, and not pulling their weight to leave. So underpaying their current employees  fixes this problem, as it will ultimately lead to a % of these people leaving every year. Of course the problem with this is that this also affects high performers. </p>



<p><strong>Reason 2: Salary raises are capped every year, and hiring budgets &gt; budgets for raises</strong></p>



<p>While this probably doesn’t apply for small startups with no formal compensation structure, large companies often have strict policies around the how much of a raise they can give to any employee. </p>



<p>So as an example, let’s say the market average salary for your position was $70K when you started 2 years ago, but it jumped up to $100K now.  However, because your company can only give 5% maximum raises every year (because it’s tied to inflation, cost of living increase, or another metric), your salary will continue to lag the market average. </p>



<p>In addition, many managers often have a strict budget for raises/promotions every year, and it’s often lower than the budget for new hires. Even if your manager wanted to give you a large raise to match the market, they wouldn’t have the budget. And even if they had the budget, they probably would have a lot of explaining to do to their superiors on why they allocated a large part of it to your raise.</p>



<p>In short, there’s a lot more corporate bureaucracy in giving a raise than there is to giving a higher offer to a new hire.</p>



<p><strong>Reason 3: HR teams don’t realize the long-term implications of paying new employees more than tenured employees</strong></p>



<p>Trying to hire X more people is an immediate problem. And it’s a problem that recruiters  are highly incentivized to solve – after all, their commissions/compensation probably depends on it. And if they can’t hire someone, they’ll simply throw more money at them. Problem solved, right? To hell with our tenured employees who will be paid much less. That’s someone else’s problem…</p>



<p>Unfortunately, if you talk to some HR teams, you’ll find there’s almost no consideration for how this inequity will impact their company in the long-term. They do a terrible job of quantifying the costs of employees leaving. The only cost they see in the P&amp;L line is the extra salary required to replace them, not the “hidden costs” such as the time to interview new candidates, training new employees, and the extra time to productivity, etc. All of these are just considered “the cost of doing business”.</p>



<p><strong>Reason 4: Employers overvalue experience collected elsewhere</strong></p>



<p>There’s also this phenomenon I see in many companies, where <strong><em>experience built elsewhere is often valued higher than the one built in house</em></strong>. I’ve personally experienced this many times in my career, when my company would bring in a new “shiny” person from a competitor, with decades of experience and armed with fresh insights/knowledge. I would often wonder: “I have the same exact experience as that person! Like… why didn’t you just promote me?!”Unfortunately, from a company’s perspective, their thinking is: our current team led to us being in a stagnant market position: So we need someone new, exciting to revamp everything and put us in the right course!</p>



<p>Unfortunately, I think this is just a psychological habit among people. We hate price increases on products/services we already purchased, but easily spend more on new things. The same goes for employees.</p>



<p><strong>Reason 5: Retaining employees is a problem very few want to solve because of inertia</strong></p>



<p>Trying to retain your best talent is a messy, complicated, long term problem that very few people in an organization want to deal with. Unlike hiring new people, there aren’t many people if any, whose compensation depends on retention. So naturally, there’s a lot of inertia around solving it.</p>



<p>And they aren’t ignorant. HR and executives are often aware of the problem. They read the news, and they hear anecdotes from their peers. They even often have it on their to do list to address. But it’s a hard, complicated problem to solve. Because it involves difficult conversations that go up the chain of leadership, going through executive management, finance, HR, etc. It has a trickle-down effect on lots of people, on profitability projections, on compensation structures, and budgets and so on. It requires analyzing lots of data, research, forecasts, and approvals. So, naturally the problem slips down their priority list.</p>



<p>There’s also a lack of data around retention, and attributing it to compensation vs other reasons people leave (such as personal reasons, management, work/life balance, etc). After all, a certain % of your employees *will* leave every year – that’s natural. How do you filter through the “normal” activity from an “abnormal” level? It probably needs to be happening at a much larger frequency for organizations to notice. Meaning the problem can bubble along for quite a while before the scale of it becomes apparent.</p>



<p>When you hire someone new, on the other hand, you need to be competitive with the market. You can’t escape that. Either you pay an above market salary to them, or you lose them to a competitor. Thus, you have to look at salary data from salary surveys, or providers such as Pave and Ravio and make sure you’re competitive. Ultimately, salaries to new hires are going to keep pace at some level with market changes. </p>



<p><strong><em>So knowing all this, what can you do as an employee if you find out you’re getting paid less than your peers in the same level?</em></strong></p>



<p><strong>1. Gather as much information about how compensation is managed in your company</strong></p>



<p>Before doing anything drastic, you should try to understand how compensation is managed in your company. One question you should try to ask your manager, your HR department, or other employees is “What is your compensation philosophy? How is our compensation determined? Who determines it?” </p>



<p>How you approach the question of getting a salary bump depends a lot on how each company answers this question. For example, in certain companies like Facebook, compensation isn’t determined by managers, so engaging with your manager isn’t going to be very productive. You’re better off trying to talk to someone up the leadership chain, or finding out how to get promoted. On the other hand, other companies give managers lots of decision-making power, and you’ll need to decide how to start a conversation with them tactfully.</p>



<p>Likewise, if you know your company benchmark their salaries to the 75% percentile of the market median/average, and your salary is in the 50th percentile, and you’re a high performer, that gives you some data to bring to the conversation. </p>



<p><strong>2. Have an open conversation with your manager about compensation</strong></p>



<p>Most people are afraid of having tough conversations about pay with their manager, but it’s important to remember that <strong><em>good managers don’t mind being asked about compensation</em></strong>. After all, that’s part of their job: to keep you productive/happy as an employee. When you have that first conversation, keep in mind that most companies are probably not going to give you that 20% raise overnight. So instead of demanding a raise, you should ask in the form of “Hi, I’ve been working for X years. I’ve done X, Y, and Z while I’ve been here. I know I’m paid at X% of the market average, while my coworkers/peers are paid above the market average. What do I need to do to get a raise next year?”</p>



<p>In addition to having market salary data, it’s worth having some tangible data about the impact you’re having in your company. By impact, I’m not talking about trivial things like # of lines of code, or the number of tickets you fixed. I’m talking about things like did you work on a feature that improved the speed of your website by 20%, leading to 10% more conversions? Did you automate some process that led to 20% more bugs? If you can map that impact out, it makes the conversation with your manager a lot easier.</p>



<p>Remember, the key is not to demand a raise, but to get to a mutual understanding with your manager, on how to get that raise in the future. Do you need to learn a few crucial skills first? Do you need to start mentoring junior people in the team? Do they  undervalue certain skills/experiences you might have that makes them hesitant to pay you a higher salary? Do they ask you to “prove” that you’re being underpaid or tell you that a raise is definitely not possible due to economic conditions? (this probably isn’t what you want to hear, but it’s all useful information!)</p>



<p><strong>3. Hand in a competing offer </strong></p>



<p>OK, so you’ve talked about a potential raise with your manager, and they said there’s just no way. Or the next year rolls around, and still no raise. What do you do?</p>



<p>This is going to sound aggressive, but in my experience, the #1 way to force their hand is to give your manager a competing offer. Of course this is easier said than done, but unless you’re up for promotion, it’s very very hard to get a huge raise if you don’t show them you’re seriously considering another company.</p>



<p>Now, that doesn’t mean you give your manager the middle finger! But tactfully, showing them your offer and saying something like “Company X has offered me this title + salary. I really enjoy working here, and don’t really want to leave. Can you come close to addressing my concerns of being underpaid relative to my peers in this company?”</p>



<p>This assume of course that you really want to continue working for them. If you feel you were disrespected, you probably are better off just taking the competing offer, and getting paid what you deserved in that new company. At the end of the day, it’s just not worth staying at a company that doesn’t value your knowledge/skills/experience if you can find another company that does value it.</p>








			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Modeless Vim (305 pts)]]></title>
            <link>https://github.com/SebastianMuskalla/ModelessVim</link>
            <guid>39008533</guid>
            <pubDate>Tue, 16 Jan 2024 02:05:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/SebastianMuskalla/ModelessVim">https://github.com/SebastianMuskalla/ModelessVim</a>, See on <a href="https://news.ycombinator.com/item?id=39008533">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:SebastianMuskalla/ModelessVim" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="D6I2RaDOpQn-58DyNnxj7T88_mcXLIz6sqdD76MlMEfNZbJJbwvNMuKmLpvzse7ZVCVzV6nnBIFuRYxGesA5-A" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="SebastianMuskalla/ModelessVim" data-current-org="" data-current-owner="SebastianMuskalla" data-logged-in="false" data-copilot-chat-enabled="false" data-blackbird-indexed-repo-csrf="<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=JsvJHuU%2FrKnv5L7ugR3rQB9SUKYP5cZXv7jlSG%2BzZUQ5%2BmiUcHpXlTt6hF7qpKiOFuCNkQ0jidFYuol1RRGsAaIAZBSkHTuECCdf2tW7QecSdkw0gx8EWTk%2BhPdDLEsJl%2FZw3iNLHLoTYuU5ykCCcuRA%2Fc1SqE0ZjX1Txib%2B%2BwERoL5PUgkD8mAwiDSfJih56%2FUUVrgZ%2FhECHmzcnVAQaLVOf%2B%2F3MYjyFxSdC0ZsrdYdsFfyaBsdIturlMYNbGZQS639MPtvnHG6vpm%2BcnX%2BWEIp8PriPzy8wlrOvI91ZILDzL%2BWeZx4LPKh%2F25Bdmerxz3cElwDb4SuG4iKrF2vQs5NBJ7Z23M219yY8vXrdes3ubX3YLHP4BosXLeZ%2BKK1dsqc27gLvZumh5P8sJMEwGt2cDsqlXbbT28imtQuU14dQcZ1sEf6z%2BDWmGszZhdcS5COP%2BrOfGkbubV8W0U8znPgB4lxX%2FStNwb01KBCI%2FqC2tkVDBw8T2s56ywXqgT3dJGLRY9I1skoOzWHrj6RaqUZKkMgpaRj10ZBdp8e--Q0oY4zWP4j1PUVLw--rwvzjtx%2F07quGV3MHx0Q%2Bw%3D%3D&quot; />">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="feedback-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</modal-dialog></div>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="custom-scopes-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</modal-dialog></div>
    </custom-scopes>
  </div>
</qbsearch-input>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=SebastianMuskalla%2FModelessVim" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/SebastianMuskalla/ModelessVim&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="5756c961a3e2e29a00d9e6d2c6931b0ce9442fa94652a24726be1cddd5d1dfb1" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Should I try to manufacture toasters? (194 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=39008165</link>
            <guid>39008165</guid>
            <pubDate>Tue, 16 Jan 2024 01:08:10 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=39008165">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="39009352"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009352" href="https://news.ycombinator.com/vote?id=39009352&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I do this for a living.<p>Setting up a small operation and doing the physical actions of designing, manufacturing and selling the toasters is the easy, fun and obvious part.</p><p>I figure what your looking for, advice wise, is what's not obvious.</p><p>A few things you'll need:</p><p>-Product liability insurance, this isn't  isn't easy or inexpensive to get.  You need to have a lot of the below in place to get it.</p><p>- UL certification (or equivalent) this can be between $10-60k in total, you need this for anything that plugs into AC mains, anything that has a heater, a safety function,  etc.</p><p>- FCC EMC/EMI testing, you need this if you do any intentional transmitting, have anything with digital electronics, etc.  This is also pretty expensive.</p><p>Then you need to iterate the design until you meet the above.</p><p>I'm sure I'm missing some things
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009740"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009740" href="https://news.ycombinator.com/vote?id=39009740&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt;I'm sure I'm missing some things<p>Manufacturing tooling and test jigs</p><p>A quality management system</p><p>Support and RMA systems</p><p>PLM software although you could probably get away with excel for a while</p><p>&gt; UL certification / FCC</p><p>A lot of other certs if you want to sell into overseas markets... Luckily the US market is pretty big
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010095"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39010095" href="https://news.ycombinator.com/vote?id=39010095&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span><i>I'm sure I'm missing some things</i><p>Sufficient capital is the big thing that turns everything else into a technical detail.</p><p>I mean UL certification is only a problem when the venture is under-capitalized.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010176"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010176" href="https://news.ycombinator.com/vote?id=39010176&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Very true. Most of these things can be contracted for, there are people like me that do these things.  But it's not cheap.<p>It's become somewhat of a litmus test for me.  If potential clients are are surprised by the time, cost and effort if these things, it's usually a sign they're not a well thought out venture, and therefore not a great client.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39010090"><td></td></tr>
                <tr id="39010230"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010230" href="https://news.ycombinator.com/vote?id=39010230&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>When too many OOOOLOOO brand toasters start fires, they just close their Amazon profile and create a new one selling FOLGARP brand toasters.<p>You can't have quite that level of untouchability as a US manufacturer, so you have to do it right.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010721"><td></td></tr>
            <tr id="39010309"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010309" href="https://news.ycombinator.com/vote?id=39010309&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>FOLGARP is the best. Three out of four of the couples I gifted those toasters are now deceased and will never demand a gift from me ever again. The fire investigators just call it an “act of god.”<p>Unfortunately the fourth only burned their house down and now we have to tolerate an insufferable GoFundMe campaign because their CA fire insurance only covers gender reveal parties. Bezos ruins everything.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010553"><td></td></tr>
                        <tr id="39010716"><td></td></tr>
                <tr id="39011014"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39011014" href="https://news.ycombinator.com/vote?id=39011014&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Are you sure it's the original label and not a fake?<p>Just recently a German tech channel reviewed a "gaming PC" sold on Amazon. The power supply had a fake CE label (aka it's illegal to sell in the EU) and the graphics card was a used Chinese crypto mining card that caught fire before they were done testing.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010798"><td></td></tr>
                <tr id="39010916"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010916" href="https://news.ycombinator.com/vote?id=39010916&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>They were counterfeiting the labels on some products so they started requiring holographic labels on some kinds of products, like Christmas lights</span></p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="39009934"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009934" href="https://news.ycombinator.com/vote?id=39009934&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Everything is regulated these days and it usually costs a fortune and helps nobody except incumbents. Makes everything feel rigged and makes me not want to participate in the economy.<p>I wish we could go back to a time when everyone takes their own risks and has to do their own research. Manufacturers could optionally pay some standards company to add some safety label to it to help boost customer confidence but it should not be compulsory. We're all going to die eventually and this obsession with safety is unhealthy and probably kills more people than it protects (e.g. due to the mental distress they cause and false peace of mind which dumbs down consumers and makes them feel like they don't need to do their own research... Not to mention the social harms caused by the passive 'trust the experts' mindset).
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39011021"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39011021" href="https://news.ycombinator.com/vote?id=39011021&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>What part of UL testing and certification do you think constitutes false peace of mind?<p>If I sell you a toaster that I built in my own little workshop (USA! USA!), then:  Wouldn't you prefer that there be at least some third-party testing to ensure that it is safe enough to not burn your house down?  And if you don't care about your own safety (because you know how to Do Your Own Research), then:  Wouldn't your kids and neighbors prefer this testing?</p><p>Maybe if you trust me (because you like the cut of my jib or something) then you'll believe me when I say that I had my engineering-type buddy go over the design and he said it was OK.</p><p>But caveat emptor:  <i>You should not trust me.</i>  I, the seller in a hypothetical truly-free market, am here to give you as little as I can get away with for as many dollars as I can take you for.</p><p>That's what UL helps with, in this context:  They're an impartial private company that tests products to ensure that they meet safety standards (most of which they designed themselves, but that's just a positive example of free enterprise at work).  They do charge [plenty of] money for this service, but they've got expenses to cover (and profit to make!) just as you or I do.</p><p>But there is no federal law or national regulation requiring US consumers to use only UL-listed toasters.  That's not a thing, and it has never been a thing.  Such a requirement may be a thing in some more-local jurisdictions, and/or also an important part of some insurance policies, but the overarching regulatory environment that you seem to be railing against in the context of toasters simply does not exist.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010024"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010024" href="https://news.ycombinator.com/vote?id=39010024&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Its not there to help incumbents. New companies come up all the time to make these kinds of products. Its a barrier to entry to keep Joe dipshit who learned how to solder together two wires last night thinking he can has an overnight get rich quick scheme shoddily throwing some random components together without knowing or acknowledging what they are really doing and selling that product to some unsuspecting person that is gonna get to experience a (maybe?) fun spark show and electrical fire as soon as they plug in their new device. Its happened enough that these barriers have pretty much become required. But if someone is serious about making a product, they will take the necessary steps for certification.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010382"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010382" href="https://news.ycombinator.com/vote?id=39010382&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I thought this was America, why are we infringing on Joe Dipshits god given right to sell incendiary devices on random delay timers to unsuspecting members of the public?</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39011041"><td></td></tr>
                  <tr id="39010259"><td></td></tr>
                <tr id="39010639"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010639" href="https://news.ycombinator.com/vote?id=39010639&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Although I don’t want random delay incendiary devices either, I do have some sympathy with OP. The net effect of all regulations like this means large classes of business are not feasible unless you have substantial capital. And availability of capital for good ideas is not at all evenly distributed in our society (the UK at least). This is just one more way that we are going to entrench low social mobility. Note also, it’s not just electronics regs that act in this way - our societies have become much more regulated and rule bound in my life time. Often things for good reason, but we should think about the ways in which this entrenches incumbents imo.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="39010037"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010037" href="https://news.ycombinator.com/vote?id=39010037&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>That means you the kind of person that buys an experimental toaster and leaves it plugged through the night in your families kitchen?<p>There might be regulation that is too much, also in the field of electrical engineering (and I am a certified EE), but most of it (especially regarding toasters) is pretty useful if you want to sleep sound.</p><p>This is not about making a toaster. I could make one using a long piece of wire and a transformer. It is about making a toaster that has a certain standard and does not kill people, burn down houses and/or interferes with radio traffic. All kind of things that would suck.</p><p>If you can't clear that bar as a manufacturer, you shouldn't be one. You could still build things for yourself – but if you want to sell things to others they should be able to assume you are not out there to kill them without deeply researching your company, aquiring a degree in mechanical and electrical engineering, buying your product and disassembling it. And I say that as a person that would be able to do that, unlike most.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010658"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010658" href="https://news.ycombinator.com/vote?id=39010658&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>But the issue isn’t that they couldn’t clear that bar, necessarily. It’s that they may not have the capital to prove it. 
We have created an uneven playing field against OLLLOO devices, and against large home grown corps which can indirectly inflate the prices for certification because the incumbency means the cost is not an issue for them.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39010160"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010160" href="https://news.ycombinator.com/vote?id=39010160&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>American consumers think that “made in the USA” is a sign of quality. The regulations in the USA that weed out poor quality products are a big part of that. You buy such a product without being afraid that you’re going to injure yourself when you plug it in because the safety regulations are working.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39010959"><td></td></tr>
            <tr id="39009947"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009947" href="https://news.ycombinator.com/vote?id=39009947&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I dont know.<p>They killed hundreds building the Brooklyn Bridge, the hoover dam.  So many horror stories of things like that xray shield sizer or lawn darts, or laundry mangles, etc.</p><p>That world wasn't better for anyone but the robber barrons.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010549"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010549" href="https://news.ycombinator.com/vote?id=39010549&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I think this is the most insane thing I have read in a year, and I spend too much time on twitter</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39010286"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010286" href="https://news.ycombinator.com/vote?id=39010286&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt; <i>I wish we could go back to a time when everyone takes their own risks and has to do their own research.</i><p>Your risks can impact other people. If your toaster catches fire, it could kill people in the apartment next to yours. If the brakes on your car fail, you could kill anyone who is in your path. These other people didn't choose to take on these risks.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010005"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010005" href="https://news.ycombinator.com/vote?id=39010005&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I love that regulations kill people through both excessive mental distress <i>and</i> false peace of mind. That’s wonderful.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010372"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010372" href="https://news.ycombinator.com/vote?id=39010372&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Regulations are anti-competitive as they prevent people from successfully bootstrapping their startups and becoming entrepreneurs. It forces ambitious people without capital to be wage slaves which causes substantial mental distress.<p>False peace of mind harms people because it makes people assume that all products on the shelves are safe by default which isn't always the case and drives harmful behaviors on a massive scale. Take the adoption of Glyphosate for example. Had people not been reassured by the government that it was 100% safe, many people would not have used it. Consumers outsourcing trust to the government instead of the individuals who produce the goods is harmful because it creates an environment which gives untrustworthy people a competitive edge and a certain degree of protection from liability. It shifts some responsibility away from producers who understand the product best and towards government agencies whose interest is to help large private companies maintain market dominance.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010619"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010619" href="https://news.ycombinator.com/vote?id=39010619&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Someone drank the libertarian cool aid. I'll take my toasters certified and regulated, they might not be 100% safe, but they sure as hell will be safer than what most garage entrepreneurs will cobble together. Details matter, standards matter, and regulation is a way to enforce those.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="39010691"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010691" href="https://news.ycombinator.com/vote?id=39010691&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt; I wish we could go back to a time when everyone takes their own risks and has to do their own research<p>Apart from all of the other obvious things people have mentioned, what this hyperlibertarian perspective fails to take into account is externalities. <i>I</i> might have done my own toaster research, but did my neighbor? What happens when my neighbor doesn’t do his own toaster research properly and ends up burning down both of our apartments? Insurance can’t cover everything that will be destroyed.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010996"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010996" href="https://news.ycombinator.com/vote?id=39010996&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I guess hyperlibertarian don't see the use of insurance either so this is a moot point. And they wouldn't live close to any neighbor (or rather, nobody would want to live close to them).</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39009970"><td></td></tr>
                        <tr id="39008709"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008709" href="https://news.ycombinator.com/vote?id=39008709&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I married into toaster moguls. When they sold out in '97, domestic toasters had been infeasible for years already. And this was for a company where all the knowledge, equipment, and facilities had beed paid for many decades before. (They invented the electric pop-up toaster for certain definitions of electric pop-up toaster.)<p>Toasters are refined brilliance, if done right. The concept of "done" is computed using an analog computer programmed by human experts. (Ok, its usually a bimetal strip but it is placed so that the cooling of the moist bread keeps it from going off and your lighter-darker input is biasing when it considers the toast done.)</p><p>Tear apart some toasters. There won't be anything in a modern cheap toaster that isn't absolutely required. Ask yourself why everything is the way it is.</p><p>Research the UL requirements. I have the corporate 2 pound copper ball that had to be dropped on things from prescribed heights and not cause malfunction. Make sure you can hit this targets with what you think you can build. Also check the CE, they might have more modern rules.</p><p>Be ready for litigation. Toasters catch fire. The toaster moguls were horrified whenever they saw someone's toaster under a cabinet. Decades after selling the business they were still being sued by mesothelioma suits for things like a repairman that got lung cancer and repaired home appliances, so he probably might have worked on one of their 1920's models with asbestos insulation. Don't let it stop you, but put the backup insurance into the expenses.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009485"><td></td></tr>
            <tr id="39009749"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009749" href="https://news.ycombinator.com/vote?id=39009749&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I worked at a small aircraft company and one of the oldtimers told me lawsuits almost sank the company multiple times. As human transport, people WILL die in your product. Whether it's your fault or theirs, the lawsuits are a huge amount of money and no less important than the engineering quality. And so the company got lawyers and even a lawyer for president, not an engineer, and is still doing really well.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39008431"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008431" href="https://news.ycombinator.com/vote?id=39008431&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I've had a similar idea, except in addition to toasters, it's midsize pickup trucks, washing machines, dryers, dishwashers...<p>What I've found is that regulations make it impossible to sell simple machines, labor costs make it impossible to compete on price, lawyers make it impossible to go to market without being sued, and consumers who say they want reliable, well-made goods will balk and buy cheap stuff en masse when it comes down to the wire. And that's <i>if</i> you actually succeed in designing and manufacturing a good product.</p><p>Someone could do it, I think. But I'm deterred by all the stuff I just wrote, and the people who succeed in businesses that seriously challenge the status quo are the ones aren't deterred by that stuff. And for every one guy who does succeed in pressuring the status quo, a hundred guys flame out... but again, guys who succeed aren't deterred by that either!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009557"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009557" href="https://news.ycombinator.com/vote?id=39009557&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I think you need to aim for a luxury-ish niche, or at least a occupy a space where people <i>feel</i> like they're buying a piece of luxury, that's aspirational, where people <i>know</i> they're paying over the odds and that's part of the feel good factor of buying it.<p>A toaster might well be a good space for that - cheap enough that it can be expensive in relative terms without being out of reach.</p><p>But figuring out the marketing of that feels almost as hard as the product.</p><p>I suspect a lot of exaggerated  appeal to "why aren't things as good/simple/reliable as they used to be?" that might not be all about toasters, but where even an expensive  toaster can be cheap enough to become a symbolic buy for people.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009750"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009750" href="https://news.ycombinator.com/vote?id=39009750&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I have a theory that anything that takes permanent, visible-realestate in the household has someone of a niche for people wanting tastefully designed things. In essence, things that do not appear "disposable" as so many kitchen appliances do. People pay extra for designer hot water pots. However purely aesthetic upgrade products will need serious work to maintain differentiation.<p>Dyson is a more glaring example (fans, vacuums, hair dryers), albeit with expensively achieved differentiation on engineering and manufacturing quality.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009831"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39009831" href="https://news.ycombinator.com/vote?id=39009831&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>There are already companies that make nice-looking, higher-end kitchen appliances though - Breville comes to mind, there are probably others. Speaking from personal experience, I have a toaster oven from them that’s lasted close to ten years with zero problems; I’d have a hard time being convinced to pay more for a “made in USA” one unless there was something truly exceptional about it.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010430"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010430" href="https://news.ycombinator.com/vote?id=39010430&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>That's why I think you need a compelling story about it. How the poor inventor struggled against the odds to fix the scourge of bad toast, to bring you an exquisite product that makes you feel good to own for the story more than any tangible reason. It needs to be a personal story to set him apart from the other brands.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010483"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_39010483" href="https://news.ycombinator.com/vote?id=39010483&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>You could go that one gun coffee brand and make it a camo pattern.<p>Or go the other way and give it a rainbow pattern?  Hell, put one on each side so you can flip it depending on which relatives are coming over.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39010104"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010104" href="https://news.ycombinator.com/vote?id=39010104&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Especially when you can sell for more something made in France, Italy, Japan or Germany.
I think the "made in" chauvinism is a hard sell if it's the USA, especially to US customer: doesn't feel exotic and isn't cheap, so what's it there for except some cheap cash grab ?<p>Plus, you know, there are some nice Chinese stuff now and they have an economy of scale that the US simply can't match.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39010352"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010352" href="https://news.ycombinator.com/vote?id=39010352&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>People will do Bosch or Miele appliances because it sounds good in a real estate listing, but that’s relying on the cachet of a known brand.<p>I looked at a condo once with an interesting sort of art deco kitchen on and a custom refrigerator that fit the theme. My first thought was, it’s got to be hell to get parts for that or find someone who knows how to work on it.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010820"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010820" href="https://news.ycombinator.com/vote?id=39010820&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Sub Zero and Wolf is also the US “sounds good in a real estate listing” and with prices to match. You can easily be over $10k for a fridge or freezer!<p>Worse is the warranty: we had an LED strip behind the crisper drawer fail after about 3 years and it was “Sorry; you’re out of warranty, that will be $220 in parts and $260 in labor”.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010500"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010500" href="https://news.ycombinator.com/vote?id=39010500&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I have read numerous posts on HN where Miele appliance owners swear by their reliability and repairability.  I see Bosch mentioned less often.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39011038"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_39011038" href="https://news.ycombinator.com/vote?id=39011038&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>"I have read numerous posts on HN where Miele appliance owners swear by their reliability and repairability."<p>Used to be. We had the same Miele devices for years, but I think their modern versions got downhill as well.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                                    <tr id="39008630"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008630" href="https://news.ycombinator.com/vote?id=39008630&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt; [...] and consumers who say they want reliable, well-made goods will balk and buy cheap stuff en masse when it comes down to the wire.<p>And I've never really had much of a problem with cheap toasters being unreliable in the first place.  But I guess there are people who do?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009437"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009437" href="https://news.ycombinator.com/vote?id=39009437&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>My main issue is usually that it’s so hard to tell if something is cheap but costs a lot, or if it costs a lot because it’s not cheap. Probably also partially because of price anchoring, where products seem expensive, because many very cheap ones cost even less.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39009753"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009753" href="https://news.ycombinator.com/vote?id=39009753&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Best toaster I've ever owned is a no-name I bought for about $20 at Lowes when they had them in stock for Christmas season. It makes <i>perfect</i> toast, and does a great job on bagles also.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010450"><td></td></tr>
                        <tr id="39008596"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008596" href="https://news.ycombinator.com/vote?id=39008596&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt;lawyers make it impossible to go to market without being sued,<p>This would be my biggest concern. The potential field full of landmines that is the patent process would give me pause. Not spending the money to properly research because of bootstrapping the process could ultimately be more expensive if some other company comes after you for patent infringement.</p><p>Whatever your idea is, I would definitely do some investigating before investing too much time and effort getting too far down the road to ultimately hit a patent caused dead end.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009486"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009486" href="https://news.ycombinator.com/vote?id=39009486&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>The trick is to tie it up in court for years, while you milk the marketplace.  If you lose, pivot.  That seems to be a standard playbook.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010720"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010720" href="https://news.ycombinator.com/vote?id=39010720&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Usually you’ll be sued for your profits and ordered by the court to stop selling during legal proceedings. And if you don’t, triple damages.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39009768"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39009768" href="https://news.ycombinator.com/vote?id=39009768&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I doubt a bootstrapped company has the finances to afford lawyers to tie it up for years. That's a lawyer's wet dream of a case being extended for years. The billing on a case like that alone could make someone a partner.<p>Just because one side's legal playbook says delay, the other side can equally try to speed things along. Underestimate opposing counsel at your own expense, especially when they are funded with deeper pockets than yours.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                        <tr id="39010492"><td></td></tr>
            <tr id="39009157"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009157" href="https://news.ycombinator.com/vote?id=39009157&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt;washing machines<p>Among your examples I think this one is interesting.</p><p>Speed Queen is regarded as among the best washing machines + dryers and they are made in the US. They are extremely well built, they feel really sturdy to use and also are known for being extremely reliable.</p><p>I guess what I'm imagining is the Speed Queen of toasters..
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009751"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009751" href="https://news.ycombinator.com/vote?id=39009751&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>They’re also known to use a ton of water, be extremely inefficient, and destroy your clothing much faster than a modern washer. Fetishizing “the good old simple times” isn’t going to get us to better products.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010087"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010087" href="https://news.ycombinator.com/vote?id=39010087&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>citation?<p>I never heard of Speed Queen, or even seen one, but someone recommended them on here a few weeks ago
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010301"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010301" href="https://news.ycombinator.com/vote?id=39010301&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I'm in Europe so we don't have these, but I got interested in what are speed queen. Turns out they are laundromat machines that are also sold for residential use.<p>This article does say it is not an efficient machine. they tweaked the normal cycle to pass the DoE efficiency test (but your clothes are not washed), and left alone the inefficient cycles which are not checked by DoE: <a href="https://www.nytimes.com/wirecutter/reviews/speed-queen-review/" rel="nofollow">https://www.nytimes.com/wirecutter/reviews/speed-queen-revie...</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010429"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010429" href="https://news.ycombinator.com/vote?id=39010429&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I’ve only ever seen Speed Queens in laundromats in Eastern Europe.<p>I will grant them this: the branding is not lying, they are fast as fuck.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010740"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_39010740" href="https://news.ycombinator.com/vote?id=39010740&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I've only used them very occasionally in laundromats when travelling.<p>They are fast, but the clothes aren't cleaned properly.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                              <tr id="39009501"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009501" href="https://news.ycombinator.com/vote?id=39009501&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Just don't use any plastic parts, over-engineer the whole thing internally, no wifi, just a dial for temp and lever to engage. All these fancy toasters still can't toast bread.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010692"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010692" href="https://news.ycombinator.com/vote?id=39010692&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>If you do WiFi, do it right. Nobody wants to install a toaster app but many Devs would enjoy a little API for their toasters</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010746"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010746" href="https://news.ycombinator.com/vote?id=39010746&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I would imagine the percent of people who are looking to buy an expensive toaster is small, the percentage of those customers who know how to code is even smaller, and the percentage of those programmer customers who have time to and are also interested in programming their toaster is vanishingly small.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010791"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_39010791" href="https://news.ycombinator.com/vote?id=39010791&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>You might be right but I highly believe that it would increase in popularity once you have more local only devices in this space.<p>I have plenty smart devices with stupid apps, but I would pay premium for a quality product with a simple API and no third party servers anytime.</p><p>Personally I base many buying decisions around 'hackability'</p><p>Edit:// actually I think this is a coming market as Google only recently started to support smart devices without third party servers for their home app so before that local only ment no Google home most of the time.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                              <tr id="39009522"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009522" href="https://news.ycombinator.com/vote?id=39009522&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>We bought a set of Speed Queens a couple of years ago and they've worked out pretty well so far. No IoT crap. Not cheap, but not really more than, say, a Bosch or something of that ilk.<p>For a toaster, what you need to do is recreate the Greatest Toaster of All Time, the Sunbeam T-20. (And then after you do that, recreate the Sunbeam CG-1 waffle iron.)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009514"><td></td></tr>
                <tr id="39009531"><td></td></tr>
                        <tr id="39010679"><td></td></tr>
                  <tr id="39008593"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008593" href="https://news.ycombinator.com/vote?id=39008593&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I think you are greatly over-estimating how many people would be willing to pay the cost of a North American made toaster. This would require an absolute ton of capital to do it on anything above a craft scale. The challenges of design, testing, certification (very important for a device that could burn your house down), manufacturing, supply chain, and support that are all specialized careers in themselves.<p>I've got more than decade of experience in designing products that are built in North America. I wouldn't touch a project like this unless it had a team of people with the proven manufacturing experience heading it up and some very convincing numbers about the commercial viability of the product because I don't believe they exist. There is good reason why the market only has commercial kitchen grade devices available.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010071"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39010071" href="https://news.ycombinator.com/vote?id=39010071&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I think many Americans want to buy Made-in-the-USA products. Some evidence of that are websites, Reddit groups, etc dedicated to helping people find those products. I think it’s generally understood by these consumers that the price will be higher. And I don’t think it needs to be premium either.<p>There’s a market for knit hats made in the USA. I doubt the quality assurance or price could compete with a factory from Asia, but they still sell. Partly because Americans want to support American businesses. Not the same as a toaster, but I can see consumer demand being similar.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010152"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010152" href="https://news.ycombinator.com/vote?id=39010152&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Some might, many I think you're dreaming: but that's a market to study.
End of the day, americans might want to use their money for more important things than origin of manufacture, and they'd be smart to throw the paper money the government prints at Chinese underpaid labour giving them actual toasters in exchange, rather than give it to each other.<p>Don't forget, when you buy a toaster from China, you're basically making them bleed and sweat on it for nothing more than your currency they can only use to buy back stuff from you, if you'll allow it. It's a very good deal, so good US consumers should increase their chinese imports rather than decrease it. Or next thing they know, they'll be the ones sweating in sweatshops soldering around toasters for capital-rich Shanghaiese.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39008994"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008994" href="https://news.ycombinator.com/vote?id=39008994&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>People are paying $100's for dualit, smeg, the japanese toaster overs, and some of high end breville, cuisinart, etc.<p>There's a market. Not big perhaps. But it needs to be more than just 'made in America'.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008664"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008664" href="https://news.ycombinator.com/vote?id=39008664&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt; I think you are greatly over-estimating how many people would be willing to pay the cost of a North American made toaster.<p>Who wants a $75+ toaster just because it was "Made In USA"? Is it going to make toast better than a $15 toaster "Hecho In Mexico" or whatever other country? Even making the infrastructure to make a toaster would not do much in the way of increasing the manufacturing abilities in the US. What could it do if the War Powers Act were invoked?</p><p>Or, am I just way too much of a simpleton to be able to see potential?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009774"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009774" href="https://news.ycombinator.com/vote?id=39009774&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>People pay hundreds of dollars for toasters already. This is another entry in that market with a marketing angle of being made in the U.S.A. which is important to a lot of U.S. consumers.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39010254"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010254" href="https://news.ycombinator.com/vote?id=39010254&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I much rather buy something American generally, and certainly from the perspective of a higher quality product designed to last.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39010367"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010367" href="https://news.ycombinator.com/vote?id=39010367&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I would by a $75+ toaster that:<p>- was made in a free Democratic country</p><p>- is of quality</p><p>I often pay a premium for such items.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010506"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010506" href="https://news.ycombinator.com/vote?id=39010506&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I think a Dualit is what you want.<p>I have a 4 slice Dualit[1] I bought in 2004 and it still works perfectly.</p><p>It's an unchanging point of reliability in our kitchen.</p><p>The Classic model is basically an old catering toaster design from the 1950s.  So it has "anti-features" that make it suitable for a commercial setting where you're making lots of toast to order. e.g. you can pop the bread to check it without resetting the timer and there's no spring to wear out.</p><p>As far as I'm concerned the high quality toaster, made in a free democratic country, is a solved problem.</p><p>1. <a href="https://www.dualit.com/collections/classic-range" rel="nofollow">https://www.dualit.com/collections/classic-range</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010543"><td></td></tr>
                  <tr id="39009663"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009663" href="https://news.ycombinator.com/vote?id=39009663&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Id pay hundreds for a toaster built like a tank<p>Not because I need that, I just enjoy overly heavy things
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009844"><td></td></tr>
                <tr id="39010478"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010478" href="https://news.ycombinator.com/vote?id=39010478&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Great machine, my parents have it, they love it and I love it. Still, I pondered about buying one too, but at 160€ it was a tough sell because we barely make 2 toasts a week. In the end I took a Russel Hobbes made in china for half the price. I kinda regret it because it's bad quality, but for our use it's ok.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39009812"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39009812" href="https://news.ycombinator.com/vote?id=39009812&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>The thing about heavy things is their sheer size. There's only so much counter space and cabinet storage. Then again, if you have the disposable cash to spend that kind of money on a toaster, you probably have a kitchen larger than the majority of people's apartment</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39011027"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39011027" href="https://news.ycombinator.com/vote?id=39011027&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>My espresso machine would like a word. It's pretty compact yet weighs 17 kgs / 37.5 lbs due to essentially being a dense block of stainless steel, copper and brass.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39009858"><td></td></tr>
                        <tr id="39009491"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009491" href="https://news.ycombinator.com/vote?id=39009491&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>It would be very difficult to make it 100% US made.  At best it would be assembled in the US of global parts.  Things like the cable, heating elements, plugs, etc. may all be non starters to source here.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39009532"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009532" href="https://news.ycombinator.com/vote?id=39009532&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>It seems to me the opportunity lies up-stream, then? How are those elements non-starters and what would need to change in order for a viable domestic supply for these types of items to support industry?</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39009937"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39009937" href="https://news.ycombinator.com/vote?id=39009937&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Many times it's an environmental regulations thing.  There are things you can do, manufacture in other countries that you cannot here.  It's just like textiles, much of mineral and other heavy metal refining, etc.<p>If anything,  you'd build a plant in Mexico to do that stuff, then put it together here, like most appliance manufacturers do.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                        <tr id="39009139"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009139" href="https://news.ycombinator.com/vote?id=39009139&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I disagree. The high end of the market is a proven niche and the target high-end buyer has demonstrated a willingness to spend freely on premium grade products.<p>The is a reason why LVMH (Moët Hennessy Louis Vuitton) is one of the most successful and valuable companies in the world.</p><p>I'm not saying it's easy. Any business endeavor, regardless of product market fit, still requires execution. Easier said than done, but many an entrepreneur has proven their critics wrong.</p><p>Americans are known for their willingness to take business risk and fail then pick themselves up and try again. Makes life exciting and worth living.</p><p>But that said,  I'm not going to buy "American Made" just because it is, i'm going to buy "Quality Made" and if it happens to be a domestic manufacturer than all the better!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009375"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009375" href="https://news.ycombinator.com/vote?id=39009375&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt; I disagree. The high end of the market is a proven niche and the target high-end buyer has demonstrated a willingness to spend freely on premium grade products.<p>Are you saying there is a proven market for luxury toasters?</p><p>While in general this is true I think "premium" grade home appliances generally top out around twice the cost of mid-range (I'm thinking vacuums, ovens, refrigerators etc where you compare similar capacity). This probably isn't a sufficient premium to cover the overheads.</p><p>Coffee machines are probably an exception here.</p><p>I'm not educated about the toaster market - are they more like microwaves or more like coffee machines?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009630"><td></td></tr>
                <tr id="39010559"><td></td></tr>
            <tr id="39010032"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010032" href="https://news.ycombinator.com/vote?id=39010032&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Wow, I did a bunch of searching and this company did not come up. I don’t know how I missed this.<p>It’s pretty ugly considering the price.</p><p>I just learned about Dualit because of this thread, they make something very similar to the vision I have in my head, except it’s made in the UK instead of the US.</p><p>I was picturing basically recreating something like the Sunbeam T-20.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39009661"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39009661" href="https://news.ycombinator.com/vote?id=39009661&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Vitamix blenders are 8-10x the cost of a normal blender and have a cult like following. With the right branding home appliances can also double as a status symbol in American kitchens.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39009769"><td></td></tr>
            <tr id="39009580"><td></td></tr>
                  <tr id="39009490"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009490" href="https://news.ycombinator.com/vote?id=39009490&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt; Americans are known for their willingness to take business risk and fail then pick themselves up and try again. Makes life exciting and worth living.<p>Having the world's largest pool of investment capital and one of the most liberal bankruptcy systems in the world also helps.  If there's anything Americans are more willing to do than risk losing their own money, it's to risk losing other people's money :)</p><p>&gt; The is a reason why LVMH (Moët Hennessy Louis Vuitton) is one of the most successful and valuable companies in the world.</p><p>It very much isn't because they sell premium quality products.  They sell luxury products.  Luxury branding has very little to do with product quality or performance.  Also, the US doesn't have a competitive advantage in manufacturing home appliances.  They actually have a competitive disadvantage, as the most capable manufacturing capacity for these products doesn't exist in the US anymore.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009499"><td></td></tr>
                <tr id="39009832"><td></td></tr>
            <tr id="39009936"><td></td></tr>
                <tr id="39010354"><td></td></tr>
                              <tr id="39009408"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009408" href="https://news.ycombinator.com/vote?id=39009408&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>What are the numbers for production scale (aka above craft)? Like, a thousand? A million?</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39009719"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009719" href="https://news.ycombinator.com/vote?id=39009719&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I am a Software Engineer like you. I got started in making physical products in 2017 first with 3d printing, and today I do design for manufacturing.<p>This might surprise some here, but if you can do 100% of the design and get good at it, it's possible to bootstrap a hardware company, even as a solo founder. I know it because I've done it.</p><p>However I intentionally started with physical products with no electronics in them. I also tried manufacturing in the USA initially but quickly realized it to be uneconomical and too slow, especially for bootstrapped consumer products.</p><p>My advice: 1. make a breadboard prototype @ home &amp; design the product on your computer 2. have prototype parts made in China until you are satisfied with the final assembly 3. once you have pre-order volume, have the molds &amp; dies made in China, import the tooling in the USA and setup your own shop.</p><p>The other thing is getting good at Industrial design takes a few years, it's not necessarily intuitive -- you have to understand the processes that you are designing for and get good at making drawings and hiring shops. It won't happen in a year unless you just focus on one part/process, so I would team up with someone who has that experience.</p><p>Feel free to contact me, info on my profile, happy to chat &amp; help out.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009811"><td></td></tr>
                <tr id="39009895"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009895" href="https://news.ycombinator.com/vote?id=39009895&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Machining &amp; Prototyping shops or "on-demand manufacturers". That involves choosing a region, evaluating the options/making a list, contacting a few and having a NNN ready for them to sign, getting 3-4 quotes for every parts in different MOQs, managing information on a need-to-know basis (to have some level protection beyond your NNN), managing these relationships etc. There is a lot more as the processes move to die/mold making as you go up in quantities and these have their own design requirements &amp; ownership agreements.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="39009271"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009271" href="https://news.ycombinator.com/vote?id=39009271&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>To mix in with other's comments.<p>It's always good to have a target in sight, but building a physical product with no experience will be a long, expensive journey.</p><p>I make physical and digital products as a consultant, the first thing I tell entrepreneurs is get to your first prototype. Not even an MVP, just something functional with the core features. Some times these are partial prototypes that work out various sub-systems. In this case, the actuation mechanisms, the heating elements with power, digital / physical controls, etc.</p><p>After that, the real work begins. You need to get to a complete working prototype. The other thing I like to say is just because someone else has made it, or something similar, doesn't mean I know how to make it. It just means it's technically feasible.</p><p>If you start looking at the parts of the toaster, you need to electrical engineering, mechanical engineering, material science, embedded software engineering, probably some industrial design and user experience design if you get that far. Even user research if you want to better understand the user and market.</p><p>Once you get to a first iteration, and typically before, you need to engage UL and FCC, usually through third parties to start testing for certifications and engineering refinement. You also need to start engaging contract manufacturers to understand how to work within limitations of their capabilities and your design.</p><p>A toaster may seem simple, but I assure it is not.</p><p>Then couple all of this with legal considerations as mentioned in other comments and whether or not it's even a practical business model. This is quite a large endeavor.</p><p>But if you are going to do anything, start small.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009370"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009370" href="https://news.ycombinator.com/vote?id=39009370&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>no, a toaster is actually pretty simple lol.<p>the issue is that production at scale for millions of customers, for practically anything at all, is not simple. all of the things you point to are true, but they are true of many other goods and products.</p><p>also, you are assuming they need or care about profit.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009421"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009421" href="https://news.ycombinator.com/vote?id=39009421&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Let me rephrase that. A toaster is functionally simple, but designing, engineering, manufacturing, and creating a business selling toasters is not.<p>Also I'm making the assumption it is for profit since they started off with "I'm wanting to start a business"
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009565"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009565" href="https://news.ycombinator.com/vote?id=39009565&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Scaling for a million customers is the easy part.<p>Finding a million customers that want to pay a premium price for a product that your competitors make for 1/4 the price in another country is the hard part.</p><p>And if you plan for that scale and don't find the million customers, you now have a million dollar toaster.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009497"><td></td></tr>
                <tr id="39009729"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39009729" href="https://news.ycombinator.com/vote?id=39009729&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Not necessarily?<p>There's nothing to say that you need to make a profit.  If all the employees are paid a decent amount, all your other costs are covered, and there's revenue unspent, you <i>could</i> just reduce the prices a bit.</p><p>The idea that any enterprise needs to make a profit (let alone an endlessly increasing profit) is a destructive fallacy.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009932"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39009932" href="https://news.ycombinator.com/vote?id=39009932&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>A profit is one thing.  That's what I'm referring to.  This is in fact necessary for a business that hopes to stay in business.<p>A ever increasing profit is another entirely, and I agree with you.  I love the book "small giants, companies that choose to be great instead of big"
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                                    <tr id="39010845"><td></td></tr>
            <tr id="39008844"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008844" href="https://news.ycombinator.com/vote?id=39008844&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>OK now I'm starting to think we live in the matrix - I've spend the last 24 hours (unemployed currently, you see) looking at toasters and designs, with the same idea. And because my toaster just broke.<p>The state of toasters seems quite dire. Most are basically the same mechanism internally with different style covers.</p><p>Some quick learnings/thoughts:</p><p>- why are they open at the top? Some expensive Japanese toasters are more like grills or ovens, and sealing in steam seems to be key to their hyped results.</p><p>- commercial toasters and some like west bend have 'drop thru' toasting, where the toast drops out of the bottom when done instead of popping up. Nice design.</p><p>- Two slot toasters always power both slots even when toasting one slice.</p><p>- Many toasters don't allow you to change the timer mid-toast. I mean you can change it, but it doesn't do anything until next cycle. Also few indicate how much time is left.</p><p>- crumb trays don't work for many toasters, they're too narrow compared with all the places crumbs fall.</p><p>- expensive 'old school' toasters like Dualit just don't have the features, and are too clunky.</p><p>- the toasters with windows toast much more slowly (use tube heaters instead of a 'grid' of nichrome) and the window is useless anyway since the heater element makes everything orange.</p><p>- One thing I find amusing is some reviewers are testing these $100,$200 toasters with regular supermarket chorleywood bread. I mean at least toast some actual bread, not foam.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009264"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009264" href="https://news.ycombinator.com/vote?id=39009264&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span><i>&gt; - One thing I find amusing is some reviewers are testing these $100,$200 toasters with regular supermarket chorleywood bread. I mean at least toast some actual bread, not foam.</i><p>If you didn't make the biga, poolish, or starter, it's not really bread. It’s just processed wheat product. &lt;/pointless elitism&gt;
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009964"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009964" href="https://news.ycombinator.com/vote?id=39009964&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span><pre><code>  &lt;pointless comment ... /&gt;
</code></pre>
A $200 toaster is already elitist, especially given that they don't seem to actually toast any better than the cheapest models. So why test with 'poor people's bread'? lol.<p>Seriously though, I have a bread machine, maybe the cheapest model (lidl equivalent) which I love because of how easy it is to repair, and I make my own bread with little effort for maybe 1/2 the price of supermarket bread, and a world of difference in quality.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010145"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010145" href="https://news.ycombinator.com/vote?id=39010145&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span><pre><code>  &lt;pointless comment^3 ... /&gt;
</code></pre>
I'm actually serious about what counts as bread and what is just processed wheat product.<p>Bread machines don't qualify, unless you're just using them to proof the dough.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010349"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39010349" href="https://news.ycombinator.com/vote?id=39010349&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>oh ok sorry, I thought it was sarcasm.<p>Well I agree, and also disagree. Bread-machine bread is fine, esp. if you change the program, to proof overnight instead of over an hour or whatever. Maybe not as good as hand-made sourdough with a carefully curated cultivated starter, etc, etc, but for the low effort involved it's a massive improvement over chorleywood supermarket bread.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                                    <tr id="39010993"><td></td></tr>
            <tr id="39008583"><td></td></tr>
                <tr id="39009133"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009133" href="https://news.ycombinator.com/vote?id=39009133&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>My in-laws had a Dualit toaster. I am convinced this brand only survives in the market because people think they want one to signify that they've "made it", like getting an Aga.<p>The incredibly loud mechanical timer drove us all nuts. We always forgot to change the heating element (#slices) selector, so invariably ended up with one uncooked piece of bread. The pop up function is beefy but difficult to get escape velocity on small items. They eventually ditched it and went back to a £20 long slice Cookworks from Argos. They still have the Aga (also bloody annoying).
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009455"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009455" href="https://news.ycombinator.com/vote?id=39009455&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I have a dualit toaster and absolutely love it! You can get spare parts for it and repair it yourself. To me it's worth the 3x premium of its the only one I ever have to buy in my life.
Yes, the timer is a bit loud and you have to think about how done you want the toast ever time, but it becomes automatic, i.e. I just know what the right setting is for a bagel.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39009335"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009335" href="https://news.ycombinator.com/vote?id=39009335&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Given all of the regulatory obstacles and logistical headaches surrounding manufactured products these days, I personally feel that mechanical/electrical entrepreneurship is a path to ruin.<p>Since you're in software already, would it not make more sense to create a strictly-digital product? Keep your day job, work at your own pace on software products (ideally with a partner), and see whether the market actually wants what you're selling.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009725"><td></td></tr>
                <tr id="39010351"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010351" href="https://news.ycombinator.com/vote?id=39010351&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Doesn't only one of those companies actually make any profit so far? And even then, its stock price still regarded as likely over-valued given the P/E ratios of any of its peers?</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39009778"><td></td></tr>
                        <tr id="39010815"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39010815" href="https://news.ycombinator.com/vote?id=39010815&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>all your skills are moot if you don't know how to sell.
Don't make the common mistake of "iterating in the basement" and when you need to goto market you flop around, spend too much time on a website and kinda expect things to "just happen".<p>I would not start ANYTHING before you figure out if you like this part of it, otherwise its just a "expensive hobby".</p><p>To figure this out, find something on Alibaba that costs a nickel that you think has some value, buy 10.000 units of it - figure out the shipping and import rigamarole and try selling it however you think works best.</p><p>if you like that experience and find it fun, and can "hack" it - return to your toaster.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010830"><td></td></tr>
                  <tr id="39010894"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39010894" href="https://news.ycombinator.com/vote?id=39010894&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>All I can say is my biggest bugbear with toaster is the crumbs just all fall out despite having a way to catch/release them. So that is a good problem to solve.<p>Also make the slots wider. For things like Turkish bread.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009368"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009368" href="https://news.ycombinator.com/vote?id=39009368&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Two alternatives:<p>1. Design a machine that uses air streams to eventually dehydrate the outer faces of the bread, then shoots puffs of pre-fabbed soot/butter mix on the result. Bonus: market for add-on soot/butter packs.</p><p>2. Design a machine that is by default always on fire, which will temporarily reduce the heat to a glowing red when you hit a button to make toast. That way failures merely return the device back to its original burning state (albeit with a temporary burnt toast smell).
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010270"><td></td></tr>
            <tr id="39009868"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009868" href="https://news.ycombinator.com/vote?id=39009868&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>You appear to have your heart set on toasters, and that's fine.  A coffee roaster for the prosumer, however, strikes me as a more interesting product to make.  I think there's still an opportunity to make a better or at least different product, and the area has been heating up recently.  It's a lot like a toaster, if you think about it.  And there's more opportunity for software and hardware integration ("roast profiling").<p>I also have a question: if a product is sold as a kit where the buyer performs the "final assembly", does that alleviate any of the burden with UL testing, FCC, or product liability?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010664"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39010664" href="https://news.ycombinator.com/vote?id=39010664&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>So...<p>It sounds that you're up for a meander. Do it. I suspect that both the public interest in domestically manufactured toasters and your interest are related.</p><p>There's something basic about a toaster. The basic consumer electronic appliances.</p><p>Also... just an idea... How about a Non-electric toaster? Lighter gas. Ethanol. Just an idea.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010338"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39010338" href="https://news.ycombinator.com/vote?id=39010338&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>A fairly obvious note, and aside from the technical discussions, 90% of your challenge will be marketing. You need to build a brand that exudes quality and value.<p>I have zero idea about marketing and branding, but it's damn hard/expensive.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010408"><td></td></tr>
                  <tr id="39009568"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009568" href="https://news.ycombinator.com/vote?id=39009568&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt; as a software engineer with 0 experience building physical things, should I try building this?<p>It is almost impossible to have a fully "US made" toaster. I expect any toaster will have quite a few "overseas made" components. At best, you might make "Assembled in US" toasters. You already received enough info on potential challenges in manufacturing toasters.</p><p>Instead, a good alternative solution might be to focus on making add-ons for toasters built by others. What are the concerns toaster users have? Identify those and see how you can solve some of those using software and hardware. For example, a few concerns might be around making a perfect toast or safety: how not to over-burn toasts, how to turn off toaster when smoke started to come out, etc. Solve a problem that toaster users might have.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009957"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009957" href="https://news.ycombinator.com/vote?id=39009957&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>This is pretty good advice. Build an accessory: 
- Sensors / Alarms: a la phone accessories 
- Cleaning: ???
- Coolness factor: Jibbitz for Crocs<p>I recently bought a USB cable with a tiny power display on one end and it is the most useful and cool thing I have owned in a while.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39009990"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009990" href="https://news.ycombinator.com/vote?id=39009990&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>As someone who builds and designs hardware for music as a hobby since a decade (but to a somewhat industrial standard): Unless you have history in hardware or someone with a lot of experience in it, I'd advice against it, if your plan is to earn a living. If your plan is to learn something, go on.<p>Hardware  is, well, <i>hard</i>. You will figure out why things cost the amount they do, and you will wonder why, till you find all the tricks manufacturers pull off – with the most important one being economies of scale. There will be many prototypes, and sometimes you will end with something that is extremely cool, but entirely to expensive for what it does. Sometimes things will fail for unknown reasons. There are <i>tons</i> of regulations your device will need to respect (and you need to know them).</p><p>Why don't you start building the toaster in your sparetime and figure out whether that object is a thing that could sit on the right spot in the market with some automation? If the answer is that you lack the hardware skill, I would caution against moving forward unless you got the market side all figured out and <i>know</i> your product would work financially. Then this would be about finding a person that fills your gaps.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010295"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39010295" href="https://news.ycombinator.com/vote?id=39010295&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I'm curious what is a good quality toaster in your mind?<p>Also, why does it need to be "made in the USA"? There seems to be lots of expensive "high-end" toasters. Is your only setting point "made in the USA"? Does the population of people who care about "made in the USA" overlap with people who are likely to pay for this toaster vs the $19 toaster from target?</p><p><a href="https://www.target.com/p/kitchensmith-by-bella-4-slice-toaster/-/A-88264028" rel="nofollow">https://www.target.com/p/kitchensmith-by-bella-4-slice-toast...</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009910"><td></td></tr>
            <tr id="39009929"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009929" href="https://news.ycombinator.com/vote?id=39009929&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I love this idea and the competition is fierce from Chinese companies. Check out Robam’s combi ovens, like this one: <a href="https://robamliving.com/collections/steam-oven/products/robam-ct763" rel="nofollow">https://robamliving.com/collections/steam-oven/products/roba...</a><p>This thing can toast, steam, bake, and air fry. It is objectively good at all of those functions, and it is used every day.</p><p>The only thing it doesn’t have is the ability to add custom programs, but most of the built in functions can be used for recipes other than what they suggest.</p><p>That being said, if I could get the same thing at the same price point, made in USA, I would.</p><p>I also would like a properly engineered waffle iron that is made in the USA. The whole waffle iron market today is dogshit compared to the waffle Iron I got my mom in the 90s. It still works, it is easy to use and clean.</p><p>Somehow a similar design is no longer available on the open market and the options are all variations on trash.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009945"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009945" href="https://news.ycombinator.com/vote?id=39009945&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Physical objects are literally the worst thing to sell. As a fellow software developer I urge you to stay the hell away from hardware. So many things that can go wrong with a physical device that you can do nothing about.<p>Also, it’s expensive as hell getting the proper certification for whatever you’re making, even if it works well.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009731"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009731" href="https://news.ycombinator.com/vote?id=39009731&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Maybe off-topic, but having recently repaired a cheap-ass toaster, maybe some insights:<p>When you get a cheap toaster, they will probably have a design flaw: when the toaster pops up, there will be arcing. This means that the toaster will only last a few years. My repair was in this section. The heat eventually desoldered the mains pad on the PCB. You can maybe repair it once and get another year out of it, after that the PCB will be very charred and brittle. The fact that the PCB gets toasted a little bit every time probably isn't great for your health either, so I think I wouldn't recommend repairing toasters with this flaw, unless you have some clever plan to get around this problem. My new toaster is a name-brand one. And I don't see any light when it pops up, so maybe it's fine. I've also seen other name-brand toasters that were only replaced because they got filthy -- due to improper maintenance I must add :p</p><p>My toaster was mostly made of metal that was bent into the shape of a toaster, plus plastic on the outside. To disassemble it, you have to use pliers to bend some interlocking metal bits into a different shape. That should be pretty cheap to manufacture! The pop-op logic was very simple, not even sure if it used a chip or not. If it did, probably nothing digital, maybe just a 555. Single-sided cheap circuit board.</p><p>I want the following functions: stop button, extra long button, short button, single slot operation.</p><p>Most people are probably comfortable with a toaster that just lets you adjust the duration. But if you add sensors that can reliably(!) detect how much browner your toast or bread has become compared to when it was inserted, go for it. If that sensor goes haywire after two years, then don't bother IMO. If you can add odor or smoke sensors that react when the toast is burnt, that might be nice too. (Course they might go off when you run the toaster for the first time to burn off the lubricant(?), so that may add some complexity)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008402"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008402" href="https://news.ycombinator.com/vote?id=39008402&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I wonder if there is a way to engineer a 'smart' toaster (no WiFi or major chip mind you) that could improve the detection of burning. Maybe the use of improved PID controller / ability to brown to your desired 'shade' of toastiness. Would be interesting to see!</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39008501"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008501" href="https://news.ycombinator.com/vote?id=39008501&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>There is already a smart toaster that toasts the toast according to the desired browning level and not simply according to time. It even manages completely without high-tech. The only catch is that the model is 70 years old and is no longer in production. But there is a great video from Technology Connections on YouTube about it: The Antique Toaster that's Better than Yours Link: <a href="https://youtu.be/1OfxlSG6q5Y?feature=shared" rel="nofollow">https://youtu.be/1OfxlSG6q5Y?feature=shared</a></span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008424"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008424" href="https://news.ycombinator.com/vote?id=39008424&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I would love a toaster where the dial is a gradient from white to brown to black, and it uses a reflectometer (several?) to toast until the bread is the right color.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39009609"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009609" href="https://news.ycombinator.com/vote?id=39009609&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>That was invented nearly 100 years ago, and was discontinued in the 90s (and the commenter above you linked to a video about it). I advocate for doing that kind of design upthread. In my personal opinion, they died out about 10-15 years before the new wave of high end kitchen implements would have justified the higher price.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="39009504"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009504" href="https://news.ycombinator.com/vote?id=39009504&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Try to make one. Somewhere you won't set fire to. Fire risk would be my biggest fear with going for a toaster. Make sure you comply with safety regulations and get liability insurance...<p>Don't listen if people say it's too hard. They may well be right, or not, but they don't know whether you're the right person to figure out a new angle or not and it's easier to try something new before you learn all the ways it can go wrong. Learn those after you've made a couple of (cheap prototype) attempts</p><p><i>Don't read up too much on the how before you try</i>. You want to learn how the competition works, but sometimes interesting realisations come from trying to figure it out yourself <i>first</i> without anything maki g you reject your apporoach out of hand.</p><p>But it will be harder than you think.</p><p>Just make sure you don't underestimate the <i>marketing</i>. Making a good product is less than half the job - especially if you're going to compete in a space where you're unlikely to be able to compete on price, quality isn't enough - you also need a convincing story about the quality.</p><p>I think in this case, a story about why you've made surprising realisations about a modern take of a return to something sturdy, reliable and simple might be powerful.</p><p>"I just wanted...(but modern products ...)" is powerful. Your product might or might not <i>actually</i> be simpler, but  if you're going for people nostalgic for US manufacturing (which is larger than ever before, just <i>employing</i> fewer relative to output), then selling the idea that something has been lost with modern devices allows for both pushing price expectations and getting customers to forgive eccentricities that otherwise might be considered issues as long as the story justifies it.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010191"><td></td></tr>
            <tr id="39010378"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39010378" href="https://news.ycombinator.com/vote?id=39010378&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>A few thoughts.<p>1 - do it. Absolutely do it.</p><p>2 - I love being around first time entrepreneurs- they don’t know about the bumps ahead in the journey so they just plough through. This is a great thing. Once you’ve ploughed through, you learn about all of this and it either causes you to be too afraid to do another, or to try to warn everyone else off by describing how impossible it is (doesn’t work and doesn’t help), or you get the bug and keep building more and more. 
3) You’ve identified what seems like an awesome opportunity. Go chase it. Don’t spend too much time talking. Endless talk is the death of entrepreneurial endeavors. Do more talk less. Sounds like a super fun opportunity during which you’ll learn so much along the way.</p><p>4) Two entrepreneur credos:</p><p>A) when you see an opportunity the door is already closing. Get moving. Did I mention more talk less do?</p><p>B) the universe is interesting. The moment you start on an endeavor, the people you need to be successful just come out of the woodwork. It’s like you become attuned to the universe. Just gotta pay attention. Sorry - sounds preachy, but I’ve found it to be true over and over again. It’s like they find you through the cosmos.</p><p>Don’t listen to the naysayers. Those who say it can’t be done should stand aside for those who are doing it.</p><p>Welcome to the entrepreneurial journey. Pretty much the most fun you can have in business.</p><p>All the best.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009556"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009556" href="https://news.ycombinator.com/vote?id=39009556&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>If you make one like the Sunbeam Automatic Beyond Belief toaster, and you can keep the price &lt;$150, you've got at least one customer.<p>-edit- After thinking about this a little more, I could go higher than that price point. But higher than that and I'd want any non BIFL parts to be user serviceable/replaceable.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009866"><td></td></tr>
                  <tr id="39009175"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009175" href="https://news.ycombinator.com/vote?id=39009175&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I don't know about toaster ovens but I've been considering if people would start building 'smart appliances' but with stock open source software. Eg A 'smart tv' with stock linux or something like that.
For eg. I like Amazon echo as a device, but I don't like the Amazon software ecosystem around it. Could you produce an open device with the same hardware capabilities?</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39009427"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009427" href="https://news.ycombinator.com/vote?id=39009427&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Oh my god, yes. I will buy a dishwasher if the controls are just a plain old ladder-logic PLC or something equivalently hackable.<p>All I want is to tweak a few programs according to my relative cost of water vs energy, my personal value of time, my typical dish dirtiness, etc. The built-in programs make all the wrong assumptions.</p><p>There's no reason I should need to contact a server in Virginia, much less China, to do that.</p><p>Also, to OP's point, a narrow-slot toaster. I don't eat bagels or texas toast, I don't need wide-slots that waste energy and take longer. I just want a plain old single-function narrow slot toaster, which is apparently even more rare than the mythical single-roll of toilet paper. I would _happily_ pay 5x for one made in the USA.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39008407"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008407" href="https://news.ycombinator.com/vote?id=39008407&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>It would be nice to have an AI powered toaster that can provide me with early morning toast and light conversation.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39008463"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008463" href="https://news.ycombinator.com/vote?id=39008463&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Go on, start imagining. You wake up to make your toast, press the button down, and see:<p>* Sorry, you must complete a critical system update before proceeding.</p><p>* Wi-Fi unavailable, please check the network.</p><p>* Your AccuToast (TM) subscription has expired. Please update your details on the web.</p><p>* Non-genuine bread detected, please ensure you purchase AccuToast (TM) certified bread.</p><p>* Tampering detected, contact manufacturer.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009984"><td></td></tr>
            <tr id="39008702"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39008702" href="https://news.ycombinator.com/vote?id=39008702&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Or wake up in the morning to find out the nightly OTA firmware update was bad and bricked your toaster.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008600"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39008600" href="https://news.ycombinator.com/vote?id=39008600&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>This happened with Pantelligent, except it just went dark because of a patent lawsuit. The app stopped working and the device became useless.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008532"><td></td></tr>
            <tr id="39008617"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39008617" href="https://news.ycombinator.com/vote?id=39008617&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt; Sorry, you must complete a critical system update before proceeding.<p>backup systems!</p><p>&gt; Wi-Fi unavailable, please check the network.</p><p>Ethernet and satellite connectivity!</p><p>&gt; Your AccuToast (TM) subscription has expired. Please update your details on the web.</p><p>bread delivery service! (like hp ink)</p><p>&gt; Non-genuine bread detected, please ensure you purchase AccuToast (TM) certified bread.</p><p>Right, you cant just laser the images onto anything.</p><p>&gt; Tampering detected, contact manufacturer.</p><p>A flying toaster that returns to the mother-ship when poorly treated.</p><p>edit:</p><p>The true American toaster:</p><p>It slices a whole loaf of bread, deep fries it then sugar coats the slices in randomized blue white and red patterns with stars. It should be gold with a picture of Trump on the side.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39008525"><td></td></tr>
                  <tr id="39008478"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008478" href="https://news.ycombinator.com/vote?id=39008478&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Slot toasters, or toaster ovens?<p>In an ironic way given your background, toaster ovens probably set you up against untenable competition: everybody who has ever built a toaster oven is currently jamming SBCs into them to run PID for "smart toasters". Prices are coming down and features are going up, plus these are product line extensions that create further price pressure on "non-smart toasters".</p><p>There could be room to do something interesting with slot toasters, which are sort of a forgotten category.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008482"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008482" href="https://news.ycombinator.com/vote?id=39008482&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Maybe unrelated, but I have a Deciso DEC2752, which is an OPNsense firewall appliance. For some reason Deciso made it in the Netherlands instead of China or Taiwan. I don't know for sure how much cheaper, or more expensive it would be if it was Asian-made.<p>It's unique for sure. It's a bit pricey but other firewalls were less-than-statisfactory. Chinese Mini PC boxes were too little, Supermicro Front I/O boxes were too much. I don't exactly like Netgate's alternative either.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39008580"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008580" href="https://news.ycombinator.com/vote?id=39008580&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>"Made in" laws can be "hacked."  For example, I can purchase fully manufactured printed circuit board assemblies in Taiwan or China.  I then ship those boards to Singapore where I load firmware and do all my testing. I can then say that the products were "Made in Singapore" because the value of the firmware is greater than the entire hardware BoM.<p>The above example comes from a colleague who used to work in the SSD business.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39010288"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39010288" href="https://news.ycombinator.com/vote?id=39010288&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>The absolute best toasting toaster I've ever used is basically a couple of resistors in a sheet metal case with a spring timer: Dualit Classic.<p>It's comically overpriced but it does one thing and does it well.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008338"><td></td></tr>
                <tr id="39008577"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008577" href="https://news.ycombinator.com/vote?id=39008577&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Than what?<p>Hardware burns capital way faster than software (in general).</p><p>Though it’s easier to spin BS reasons to burn billions on software maybe, since no one is expecting to actually hold the thing?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39008606"><td></td></tr>
                <tr id="39008636"><td></td></tr>
                <tr id="39009017"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39009017" href="https://news.ycombinator.com/vote?id=39009017&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>At least <i>they</i> got a famous art piece out of it.<p>All OP will have afterwards is a bunch of unsold toasters and a newfound appreciation for bankruptcy protection.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                                    <tr id="39008713"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008713" href="https://news.ycombinator.com/vote?id=39008713&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>About a month ago, I bought a toaster for Christmas, and, while walking in the alley and checking prices offline and online, I was mesmerized by the price strategies. With quantities that toasters operate in, their production cost is around a few dollars, and I bought one for $50 without any digital features.<p>If you are planning to build one in the USA, you will probably need to tell yourself what "build in the USA" means. Is it PCB printing, PCB assembly, plastic production, mold production, cool design features, coil design, final assembly, or some combination of the above? You will be surprised to find some of the requirements to put "made in the X country."</p><p>I do product development professionally, so take the comment as my bias, but it is a light project to start with as there are minimum components, you can build the entire thing in the garage, and it is something that everyone around you can give feedback on. Almost like an art project.</p><p>Anyway, I would love to share any info you may find useful to start. Email in the profile, if you are interested.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39010226"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39010226" href="https://news.ycombinator.com/vote?id=39010226&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>two pieces of advice:<p>First, you don’t need anyone’s permission here. If you want to build American made toasters, go do it!</p><p>Second, before you dive into this I’d recommend a little more due diligence. Around requirements sure (there was a good post in comments on different certs youd need). But more around validating demand: why doesn’t this exist  already? As someone mentioned, are there enough consumers that would pay a premium for American made appliance? Or like the article you linked mentioned: no one is going to buy a $300 toaster. So how would you get the costs down?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39010502"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39010502" href="https://news.ycombinator.com/vote?id=39010502&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt; First, you don’t need anyone’s permission here. If you want to build American made toasters, go do it!<p>I similarly say: op, YOU are the expert.</p><p>Do not defer this decision to anyone else. Do not weigh the opinions of unknown commenters equally with your own.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39008728"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008728" href="https://news.ycombinator.com/vote?id=39008728&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I'd say give it a virtual try :)<p>Fusion 360 is a horrible cloud lock-in, but it's also cheap and feature complete. Custom injection parts are expensive, but thin sheet metal you can cut at your local hackerspace. And now just try if you can design the mechanical functionality using only off-the-shelf screws and sheet metal parts with easy bend sequence.</p><p>The control stuff is easy and cheap. KiCad is your friend.</p><p>Once you have a prototype showing the rudimentary mechanical parts, you'll have a much better idea of the work and costs involved. Plan for about 8x mark-up from production costs to end-user price.</p><p>And last but not least, many projects die because they cannot access the relevant market cheaply enough. I used to sell bikinis online, which was fun and profitable in the beginning. But once all those other boutique fashion brands started spamming Instagram, acquiring customers became too expensive so the entire operation wasn't profitable anymore. So try to estimate how much it'll cost you to advertise to prospective customers.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008817"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008817" href="https://news.ycombinator.com/vote?id=39008817&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt;I also love learning about mechanical engineering and manufacturing, but have never actually tried making anything.<p>I strongly recommend you hire professionals for this.  I've worked as a Product Manager for physical products.  There is a gulf of knowledge between designing something in CAD and designing something that will endure the rigors of toasting for 20 years. The previous sentence doesn't even cover the gulf of knowledge between taking a prototype to a design that's meant for mass production.</p><p>I'm interested in creating a portfolio of open source appliances. Stuff that will last for life (or is at least repairable).  If it's a "smart" applicance and open source, you don't need to worry about your appliance spying on you or being at the whims of a vendor who bricks your device for whatever reason.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009046"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009046" href="https://news.ycombinator.com/vote?id=39009046&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>"I'm interested in creating a portfolio of open source appliances."<p>Yes I'm very interested in that idea too. One thing I think is vital is to separate the UI and any smart features from the rest of the device. For example, cheap induction cookers have a single mcu which has the code for running the induction heater, and also runs the UI, with just a cheap display/button board as the physical interface.</p><p>This mcu package seems to be at the heart of a huge number of brands, which are all then stuck with the same terrible UI. If the ui was running on it's own mcu, talking spi or whatever to the main controller, makers could differentiate with their own UIs. And hackers could hack.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39008546"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008546" href="https://news.ycombinator.com/vote?id=39008546&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Wish I could offer more than best wishes, but I am in a similar boat: pondering some product ideas while working as a SWE.<p>This line caught my attention - "I also love learning about mechanical engineering and manufacturing"</p><p>How do you go about that? Have you found any good books, YouTube videos, etc. that  are accessible for us SWEs?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39008602"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008602" href="https://news.ycombinator.com/vote?id=39008602&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>This may be a difference in learning preference, but I've always found the easiest way for me to learn about new topics was to jump into them directly. Supplemental reading could certainly help of course, so I apologize that I have nothing to provide in that area, but if you're interested in it I'd recommend just jumping in with simple projects and learning on your own from there- with assistance from just searching around for fundamentals on google. I hate to be the quote person, but I think this one fits perfectly; "The best time to plant a tree was 100 years ago, but the second best time is now" or "A journey of a thousand miles starts with a single step". Ignoring the cliche quotes, I'd just say the best thing you can do is dive in without any direct guidance and navigate the unknowns yourself. At the end of the day, starting off in the wrong direction is better than not starting at all. Good luck on your adventure!</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39008912"><td></td></tr>
                  <tr id="39009399"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009399" href="https://news.ycombinator.com/vote?id=39009399&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Search for &amp; take tours of community maker-spaces in your city. You’ll find people (often SWE) who switched over to 3D printing, metal working, robotics, wood working &amp; more. They have classes, so you can get certified to use the tools - and you’ll just learn by hanging out, meeting fellow makers &amp; checking out their projects. Best of luck on the journey - it’s a ton of fun.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39009511"><td></td></tr>
                  <tr id="39009658"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009658" href="https://news.ycombinator.com/vote?id=39009658&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Hi. I'm a software engineer, and I'm here to burn your house down. ;-)<p>You'll need traditional engineers (mechanical design and electrical), and people who actually <i>know</i> manufacturing operations from sourcing to shipping.</p><p>Perhaps a way into this kind of business is to do it in reverse: Lend your software skills to a manufacturing business and soak up as much as you can about how it works.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009800"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009800" href="https://news.ycombinator.com/vote?id=39009800&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>There's always a market for a toaster that looks like a printer with infrared laser head for toasting and costs 100 dollars.<p>Check out Rotimatic:<a href="https://rotimatic.com/" rel="nofollow">https://rotimatic.com/</a></p><p>I don't own one but it seems to be on the wishlist of every Indian living abroad.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009853"><td></td></tr>
                  <tr id="39008838"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008838" href="https://news.ycombinator.com/vote?id=39008838&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>If I had money and was looking for a high end toaster, I'd pay $200+ for a European toaster like SMEG. It'd be more for the aesthetics than the functionality.<p>When you're paying that much money for a functional item, you're buying into a story. When you have a SMEG appliance, you're buying a sophisticated identity and a conversation piece. You're telling people you appreciate Dieter Rams type industrial design.</p><p>Somehow a Made in Michigan toaster doesn't have the same cachet. Neither do Black and Deckers or Cuisinarts.</p><p>(that said, Breville from Australia is getting away charging $200 for its toasters)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009805"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009805" href="https://news.ycombinator.com/vote?id=39009805&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I agree, and this is just a by-the-way comment about Smeg.  I always assumed Smeg was a bargain-basement brand because of its espresso machines, which appear to be rebadged Delonghi devices.  There's one model that looks like a clone of the Dedica for example.<p>As another commenter pointed out, coffee-makers are one area where people are willing to pay thousands, e.g. espresso machines made in Italy or Germany that are robust and largely authentic.*</p><p>*Even though many follow virtually the same design and are made from near-commodity parts.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39009054"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009054" href="https://news.ycombinator.com/vote?id=39009054&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I personally lament the total lack of quality kitchen appliances and would gladly pay a premium for quality long lasting appliances.<p>I think that a toaster is a good place to start!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009625"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009625" href="https://news.ycombinator.com/vote?id=39009625&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>What's funny about this is that, while very far from perfect, kitchen appliances is one of the realms where it's easier than just about any other market segment to find high quality, well designed, long lasting devices. Yes, there is whole <i>oceans</i> of cheap disposable garbage, but for people who care, you can get a high quality version of just about every single kitchen thing you might want.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39008615"><td></td></tr>
            <tr id="39009881"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009881" href="https://news.ycombinator.com/vote?id=39009881&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Okay, I see a lot of people discouraging you, so I'll try to be positive. I say go for it!<p>However, your motivations don't seem very clear to me. What exactly are you trying to achieve with this venture?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008469"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008469" href="https://news.ycombinator.com/vote?id=39008469&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>It almost seems like you're asking for permission. Instead, start this project if you're passionate about it and post your progress here on HN. I'm sure you can get lots of presales that way.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39009111"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009111" href="https://news.ycombinator.com/vote?id=39009111&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span><a href="https://a.co/d/2g7cOrc" rel="nofollow">https://a.co/d/2g7cOrc</a> folding Camp stove toaster<p>Improve these so they will work on kitchen stoves and toast a custom logo or message on the bread.</p><p>With a decent marketing campaign you could probably buy these Wholesale, modify them slightly and resell for 2 to 3 times the price.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39009211"><td></td></tr>
                  <tr id="39009754"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009754" href="https://news.ycombinator.com/vote?id=39009754&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I'd hop on if it was kitchen storage. Kitchens are getting smaller, the appliance list is getting longer but the only storage you get is a few drawers and a stupid cabinet.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008411"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008411" href="https://news.ycombinator.com/vote?id=39008411&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>In Australia toasters are a weird product category.  I cannot see any correlation to price and features/quality. The colour and style seems to be the only thing that separately them.  I think a toaster that is objectively better than other toasters would be cool, but I've  but it would be hard to beat my 10 year old A$20 Kmart toaster.  But I suspect it would be a very difficult market to break into.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39009926"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39009926" href="https://news.ycombinator.com/vote?id=39009926&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Also in Australia and in my experience everything here lacks aesthetics, quality and technological innovation, and is still a ripoff.<p>The Kmart stuff is at least value for money and sometimes is quality too and owning it makes the most sense.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008438"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008438" href="https://news.ycombinator.com/vote?id=39008438&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>Also Australian - agreed.<p>I got a toaster and kettle combo from a premium appliance manufacturer for Christmas. I've since seen the exact same kit in Aldi under their own brand. It's not just similar, it's the exact same product.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39008456"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008456" href="https://news.ycombinator.com/vote?id=39008456&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I assume the safety protocols required are an immense challenge.  My recent toaster, for example, didn’t stop cooking and caught my cabinets on fire.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008687"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008687" href="https://news.ycombinator.com/vote?id=39008687&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>^F Solar<p>No matches (yet) ??!!</p><p>This is your niche, a bespoke toasting fork and a foldaway reflective parabolic trench, all stamped with a discreet Americab flag.</p><p>* nuclear will take too long.</p><p>* HVDS (High Vis Direct Sunlight) reflective tubes can pipe in sunlight from Australia during winter.</p><p>* Rapid Early Scale Up Marketing - essential to get the volume before the bubble bursts.</p><p>( DM me for VC terms and assorted quotes from <i>The Tibetian Book of the Dead</i> )
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008657"><td></td></tr>
            <tr id="39008388"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008388" href="https://news.ycombinator.com/vote?id=39008388&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>my toaster is pretty crappy - i'd buy your toaster!<p>my list of complaints</p><p>- strong smell of chemicals when i first started using it
 - can be hard to remove things without burning myself e.g. english muffins
 - sometimes it burns things/sometimes it doesn't toast them enough.  i have figured out which settings work for some common use cases, but it feels like a toaster should be able to figure it out w/out crazy complexity.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008938"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008938" href="https://news.ycombinator.com/vote?id=39008938&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Why not try getting toasters from the reuse centres that divert such things from the landfill? Most times it's just a thermal fuse that pops due to a jammed piece of toast. That's a very cheap and easy repair and if you can't fix it, you can resell the heating elements for a good price.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008423"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008423" href="https://news.ycombinator.com/vote?id=39008423&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I know very little about toasters but I am rooting for you. Don't see much of these types of businesses on hackernews</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39008693"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008693" href="https://news.ycombinator.com/vote?id=39008693&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Sounds like the next Juicero potential. Maybe they can sell more if they make it "smart" so it can post a tweet about all of your toasting adventures. Then they'd be on HN. Oh, of course it'd have to be written in Rust</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39009389"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009389" href="https://news.ycombinator.com/vote?id=39009389&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Are the dynamics of the toaster market more like coffee machines (where a high-end play absolutely can work) or like microwaves (where there seems to be limited evidence that it would).</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008470"><td></td></tr>
                <tr id="39008518"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008518" href="https://news.ycombinator.com/vote?id=39008518&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>"You know the last time you had toast. 18 days ago, 11.36, Tuesday 3rd, two rounds. I mean, what's the point in buying a toaster with artificial intelligence if you don't like toast. I mean, this is my job. This is cruel, just cruel." (Call it Talkie)</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39008569"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008569" href="https://news.ycombinator.com/vote?id=39008569&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>How much do you think people would be willing to pay for this toaster? How many people like that are there?<p>What will it cost you to make?</p><p>For toasters or similar, what is the typical ratio of manufacturing cost to retail price? Is this enough to pay for distribution, marketing, logistics and returns?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008326"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008326" href="https://news.ycombinator.com/vote?id=39008326&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>In my experience and not that I have tried every model but enough to say I am guessing they all suck as badly as the ones I have had.<p>Space to improve exist, heating elements need fresh designs and more consistant heat distribution, should also be simple, I dont want options I want toast quick and easy.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39008426"><td></td></tr>
                <tr id="39008492"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39008492" href="https://news.ycombinator.com/vote?id=39008492&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>If you're going to go to the effort to build a luxury/fancy toaster, this is the mechanism to use.  Since the antique Sunbeam is increasingly hard to find, might actually be a compelling product, too, on top of the "Made in the USA" label.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008637"><td></td></tr>
                        <tr id="39009518"><td></td></tr>
            <tr id="39008576"><td></td></tr>
            <tr id="39009384"><td></td></tr>
            <tr id="39008643"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008643" href="https://news.ycombinator.com/vote?id=39008643&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I see so much stuff like bespoke bicycles and clothes made by 'craftsmen' in the USA. Maybe something like that industry but for kitchen appliances would be cool.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008462"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008462" href="https://news.ycombinator.com/vote?id=39008462&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Why not set your sights a bit higher? In Europe there's a few companies making locally sourced and more sustainable wind turbines the seem to be doing quite well.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39009713"><td></td></tr>
            <tr id="39008586"><td></td></tr>
                <tr id="39008836"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008836" href="https://news.ycombinator.com/vote?id=39008836&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I haven't seen much in the way of pop-up toasters, but for toaster ovens, at least, they have really taken it above and beyond. Plenty of made-in-Japan models too. Unfortunately, toasters are one of those appliances that can be sensitive to grid voltage, so a toaster bought in Japan might not work as well in other countries.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39010428"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39010428" href="https://news.ycombinator.com/vote?id=39010428&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>How much soft is top priority for luxury toasters market, so pop-up is nonsense because steam go out from the top.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="39008685"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008685" href="https://news.ycombinator.com/vote?id=39008685&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I also like buying things made locally, restricting the aperture of a product's origin to its absolute smallest possible in relation to my residence. I've even found tools made in my state!<p>Whether or not you should try is up to you.</p><p>But it is possible. Companies CAN compete with low-wage low-regulation areas but usually only on the high end.</p><p>You can buy toasters from Ritter that are made in Germany and they retail for around $200.</p><p>After a very cursory search I found a 1939 Sears catalog that listed an old-fashioned (a heating element surrounded by A-frame to hold the toast) toaster for $0.89 and a "Deluxe Automatic Toaster" for $8.95. A "Deluxe Automatic Toaster" is the kind that everyone buys today with adjustable toasting and automatic pop-up.</p><p>$8.95 in 1939 is... $200.</p><p>So you might want to start by doing some research into what people might want in a product once the price trends towards the high end of the market. My gut tells me, just based my desires and products that are still successfully being manufactured in the US that simplicity, robustness, and repairability are all extremely high, and wifi-enabled smartshit is very, VERY low on the "want" scale.</p><p>Products like Vornado air circulators (dumb), Bunn coffee makers (dumb), and Red Wing boots (dumb) are all made domestically and have all been on the market for decades and cheap imports haven't killed them off yet-- and they are all simple, robust, and repairable.</p><p>So DO NOT TRY TO MAKE THE JUICERO OF TOASTERS.</p><p>Make a residential version of the Waring commercial toasters, something with good industrial design, simplicity, and repairability, made domestically (Waring moved production of their 4-slice toasters overseas long ago).</p><p>Someone who spends $350 on Red Wing boots is willing to spend that much because they WILL get them resoled.</p><p>Someone willing to spend $200 on a toaster probably attempts to estimate how long it will last, and is smart enough to know that a wifi chip or microcontroller is an unnecessary complication.</p><p>I work in a field that makes physical things, but not mass-produced things. One pitfall I have observed with software folks moving in to manufacturing, such as programmers getting an MBA and PMP and moving into management is that the amount of time and money it takes to actually make a real physical object is almost incomprehensible to them.</p><p>Also incomprehensible are the very real and very important quality control and safety components to manufacturing.</p><p>Of course, if you worked on software in a safety-critical field this is old news.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008221"><td></td></tr>
                <tr id="39008255"><td></td></tr>
                  <tr id="39008364"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008364" href="https://news.ycombinator.com/vote?id=39008364&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>No, you shouldnt learn how to build toasters. You should learn how to find people that build toasters, and have them build an MVP, take it to market see how it sells.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008628"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008628" href="https://news.ycombinator.com/vote?id=39008628&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Check out the Fastlane Forum to get info on the areas you are lacking. There are some people there can help you find info in the areas you lacking.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39010012"><td></td></tr>
            <tr id="39009704"><td></td></tr>
            <tr id="39009807"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009807" href="https://news.ycombinator.com/vote?id=39009807&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>&gt; as a software engineer with 0 experience building physical things, should I try building this?<p>No.</p><p>You’ll feel really bad when your homebrew toaster burns down somebody’s house and kills their kids.</p><p>There are very many fields you’d need expertise in to do this at all and you don’t seem to have much of an idea of what you don’t know. Getting hardware products off the ground is hard and requires tons of time and money.  After all of that you’d have a really tough time selling anybody on the idea of buying your toaster which would have to be much more expensive than you imagine.</p><p>You would have to start on something way simpler.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008421"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008421" href="https://news.ycombinator.com/vote?id=39008421&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>I have seen the lack of an American made toaster appear in several venues, so there is pretty clearly some interest in this topic. How many would buy one is another matter.<p>I worked for a company that made customized versions of relatively basic electrical devices and they didn't spend much money on it (couple thousand for the prototypes and the devices they disassembled to copy). The one pitfall they did note was that being the best in quality was difficult and expensive and focused on being valuable in another niche.</p><p>I am not sure that you need to make a good toaster. It may be sufficient to have an American toaster, even if it is no better than a typical toaster.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39008585"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39008585" href="https://news.ycombinator.com/vote?id=39008585&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>That is really interesting and it mirrors my intuition: there are 0 toasters on the market that have "Made in the USA" stamped on them. I think that there may be a decent sized market of people who will pay extra for that stamp on a normal household toaster.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39008609"><td></td></tr>
                <tr id="39010514"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39010514" href="https://news.ycombinator.com/vote?id=39010514&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I used one of these at a hotel recently and the toast quality was second to none. When my current toaster bites the dust I'll be investing in one of these. I'm fed up with buying cheap stuff that's designed to break after 3 years.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39009471"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39009471" href="https://news.ycombinator.com/vote?id=39009471&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>There are hundreds of toasters made in USA, but they're mostly commercial models because that is the only market willing to spend enough on a toaster to absorb the labor costs.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="39009674"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009674" href="https://news.ycombinator.com/vote?id=39009674&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Just call your company something like "Teenage Engineering" and you can then charge an arm and a leg for basic product designs running bad software in a nice, clean, totally-not-ripped-off-from-Braun case.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39009559"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009559" href="https://news.ycombinator.com/vote?id=39009559&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>Regardless of how good the product is it will be remade 10x cheaper and sold on Amazon and Alibaba by manufacturing in China. They don't play fair, they don't need the certs or product requirements you do. They are allowed to sell defective by design products and there are no consequences. Domestic producers are liable for everything. There is a reason domestic products failed. Any kind of rekindling is soon extinguished when you saturate customers willing to pay top dollar.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39009527"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009527" href="https://news.ycombinator.com/vote?id=39009527&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>You could move to Argentina.  If Milei survives you might be able to start a business there.<p>edit: or approach this as DIY kit where you are not selling the toaster but the components as separate items and a set of instructions.  less regulations and better repairability.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39009524"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39009524" href="https://news.ycombinator.com/vote?id=39009524&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>I just know every kickstarter involving consumer electronics takes 3-5x more time and money than they had anticipated. Coffee makers come to mind. So be ready for tons of costly iteration and surprises. Maybe do it for a hobby and if you have zero interest in turning a profit.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008680"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008680" href="https://news.ycombinator.com/vote?id=39008680&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>How about air poppers for popcorn? I have cycled through literally a dozen and <i>all</i> modern incarnations are totally shit, with improper designs that lead to way too many unpopped kernels. This is a market that could use the Dyson touch…</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39009600"><td></td></tr>
            <tr id="39008565"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008565" href="https://news.ycombinator.com/vote?id=39008565&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><br><div>
                  <p><span>This is the kind of thing Kickstarter is for. It gives you a way to both raise funds and reliably establish that demand exists. And if the campaign fails then no harm no foul.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39008468"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39008468" href="https://news.ycombinator.com/vote?id=39008468&amp;how=up&amp;goto=item%3Fid%3D39008165"></a></center>    </td><td><p><span>This depends entirely on how much money you have to waste.<p>I'd suggest, at the very least:</p><p>* Hiring somebody who knows manufacturing to walk you through what you need to set this up.</p><p>* Figuring out the cost of building a toaster in the USA</p><p>* Figuring out the regulatory hurdles.</p><p>* Figuring out if the people who keep clamoring for a national toaster infrastructure are willing to pay the actual money that requires.</p><p>My experience is that a large number of people who profess to want built-in-USA want this only at a price point meeting current toasters. But with much better quality.</p><p>If I were to jump into this market, I'd seriously consider running this as a lifestyle luxury item business, charging the few true believers a fortune for a "bespoke toaster hand-made entirely in the U.S.A", build them to last forever, and then maybe automate and build out into the mid-range from there.</p><p>I'd still only do this with somebody with manufacturing knowledge working with/for me. And ideally with somebody else's money.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39008175"><td></td></tr>
            </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We switched to Java 21 virtual threads and got a deadlock in TPC-C for Postgres (251 pts)]]></title>
            <link>https://blog.ydb.tech/how-we-switched-to-java-21-virtual-threads-and-got-deadlock-in-tpc-c-for-postgresql-cca2fe08d70b</link>
            <guid>39008026</guid>
            <pubDate>Tue, 16 Jan 2024 00:46:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.ydb.tech/how-we-switched-to-java-21-virtual-threads-and-got-deadlock-in-tpc-c-for-postgresql-cca2fe08d70b">https://blog.ydb.tech/how-we-switched-to-java-21-virtual-threads-and-got-deadlock-in-tpc-c-for-postgresql-cca2fe08d70b</a>, See on <a href="https://news.ycombinator.com/item?id=39008026">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><a href="https://medium.com/@eivanov89?source=post_page-----cca2fe08d70b--------------------------------" rel="noopener follow"><div aria-hidden="false"><p><img alt="Evgeniy Ivanov" src="https://miro.medium.com/v2/resize:fill:88:88/1*d5MOLs3Aq3BVoPk24v4lGw.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"></p></div></a><a href="https://blog.ydb.tech/?source=post_page-----cca2fe08d70b--------------------------------" rel="noopener  ugc nofollow"><div aria-hidden="false"><p><img alt="YDB.tech blog" src="https://miro.medium.com/v2/resize:fill:48:48/1*7aPrAJ3SJGZ_sN2Ce3Yn1g.png" width="24" height="24" loading="lazy" data-testid="publicationPhoto"></p></div></a></div><figure><figcaption>Dining Java 21 philosophers have a problem</figcaption></figure><p id="9038">In our previous <a rel="noopener ugc nofollow" target="_blank" href="https://blog.ydb.tech/ydb-meets-tpc-c-distributed-transactions-performance-now-revealed-42f1ed44bd73">post</a> about TPC-C, we discussed some drawbacks in the original TPC-C implementation from the <a href="https://github.com/cmu-db/benchbase" rel="noopener ugc nofollow" target="_blank">Benchbase</a> project (which is great nevertheless). One of the drawbacks was the concurrency limit due to spawning too many physical threads, and we solved it by switching to Java 21 virtual threads. Later we discovered that, as usual, there is no free lunch. In this post, we present a case study on how we encountered a deadlock with virtual threads in TPC-C for PostgreSQL, even without the dining philosophers problem.</p><p id="3572">This post might be useful for Java developers who are considering switching to virtual threads. We revise some fundamental background and then highlight an important concern behind virtual threads: deadlocks might be unpredictable because they could happen deep inside the libraries you use. Fortunately, debugging is straightforward and we explain how to find these deadlocks when they happen.</p><h2 id="fb0e">Why are we talking about PostgreSQL in the YDB blog</h2><p id="589c">PostgreSQL is an open-source database management system renowned for its high performance, rich feature set, advanced level of SQL compliance, and vibrant and supportive community. It’s great until you take into consideration horizontal scalability and fault tolerance. Then you end up with PostgreSQL-based third-party solutions like Citus, which implement sharded PostgreSQL. Having a single elephant might be fun. Being a mahout of a herd of elephants is a challenge, especially if you want these elephants to maintain multiple consistent replicas and perform distributed transactions with serializable isolation.</p><figure></figure><p id="d176">As opposed to this, <a href="https://ydb.tech/" rel="noopener ugc nofollow" target="_blank">YDB</a> is a distributed database management system by its original design. YDB’s distributed transactions are first-class citizens and run at a serializable isolation level by default. Now, we are actively moving towards PostgreSQL compatibility because we see strong demand among PostgreSQL users to make their existing applications automatically scalable and fault-tolerant. That’s why we maintain <a href="https://github.com/ydb-platform/tpcc" rel="noopener ugc nofollow" target="_blank">TPC-C for PostgreSQL</a> (we hope to get it merged into upstream Benchbase soon).</p><h2 id="1055">A very short background and motivation</h2><p id="09d4">Let’s recap some fundamental concepts: concurrency, parallel execution, and asynchronous vs. synchronous requests.</p><p id="06b8">Concurrency means that tasks are performed at the same time, either in parallel or sequentially. For example, you might have two activities: writing your code in an editor and having a Slack chat with your colleagues. You perform these tasks concurrently, but not in parallel. Or you might take a walk with your dog and speak on the phone with a friend. Again, you perform these two tasks concurrently, but this time, in parallel.</p><p id="9575">Now, consider the case when your application wants to make a request to the database. The request is sent through the network, serviced by the database, and the reply is sent back to your application. Note that the network round trip might be the most expensive part of the request and could take several milliseconds. What can you do on the application side while waiting for the reply?</p><p id="c400">1. The request might be synchronous, i.e., it will block the calling thread. This approach is very easy to write code for: on line 1, you have the request; on line 2, you can process the response:</p><pre><span id="bbc7">String userName = get_username_from_db(userId);<br>System.out.printf("Hello, %s!", userName);</span></pre><p id="28fd">2. The request might be asynchronous. Your thread is not blocked and continues the execution, while the request is processed in parallel:</p><pre><span id="c803">CompletableFuture&lt;String&gt; userNameFuture = get_username_from_db(userId);<p>// Note, that this is kind of callback, it's not executed "right here",<br>// even more, at some point it will be executed in parallel with your thread.<br>// In real life scenarios, you will have to use mutual exclusion.<br>userNameFuture.thenAccept(userName -&gt; {<br>    System.out.println("Hello, %s!", userName);<br>});<br>execute_something_else();<br>userNameFuture.get(); // wait for the completion of your request</p></span></pre><p id="9aab">In either case, there are two concurrent tasks: your thread is waiting for the reply from the database, and the database is handling the request. Synchronous code is extremely simple to write and read. But what if you need to make thousands of requests to the database simultaneously? You will have to spawn a thread per request. Spawning a thread in Linux is cheap, though there are strong concerns behind spawning too many threads:</p><ol><li id="675e">Each thread requires a stack. You can’t allocate less memory than the page size on your system, which is usually about 4 KiB unless you use hugepages, where the default page size is 2 MiB.</li><li id="599e">There is the Linux scheduler. You can try to spawn 100,000 threads ready to execute only if you have a reset button.</li></ol><p id="5c3c">This is why, until Java 21, there was no way to write synchronous code with a high level of concurrency: you can’t spawn many threads. Concurrently (pun intended), the Go language revolutionized this: goroutines provide very lightweight concurrency so that you can write synchronous code <em>efficiently</em>. We recommend this <a href="https://youtu.be/-K11rY57K7k?si=XT8mkXL2ypmVj4ig" rel="noopener ugc nofollow" target="_blank">talk</a> about the Go scheduler by Dmitry Vyukov. Java 21 introduced virtual threads which are in many senses similar to goroutines. Keep in mind that goroutines and virtual threads are not inventions, but rather a reincarnation of the old good concept of user-level threads.</p><p id="5286">Now, you can understand the problem with synchronous database requests in the original Benchbase TPC-C implementation. If your database can handle a high load, you must run many TPC-C warehouses, spawning many threads. With physical threads, we failed to run more than 30,000 terminal-threads, while with virtual threads, we can easily have hundreds of thousands of terminal-vthreads.</p><h2 id="9f5e">Deadlocks made easy</h2><p id="904d">Imagine that you already have multithreaded Java code. Adding an option to use virtual threads is surprisingly easy and can be incredibly beneficial. By simply replacing your standard thread creation with the new virtual thread builders, your application can handle thousands of concurrent tasks without the overhead associated with physical threads. Here is an <a href="https://github.com/ydb-platform/tpcc/blob/c8474bc7cf40456de0fe4c7fb060d867dd985ede/src/main/java/com/oltpbenchmark/ThreadBench.java#L65-L69" rel="noopener ugc nofollow" target="_blank">example</a> from our TPC-C implementation:</p><pre><span id="2581">if (useRealThreads) {<br>    thread = new Thread(worker);<br>} else {<br>    thread = Thread.ofVirtual().unstarted(worker);<br>}</span></pre><p id="6446">That’s all it takes; now, you’re using virtual threads. Under the hood, the Java Virtual Machine creates a pool of <code>carrier threads</code>, which execute your <code>virtual threads</code>. This transition appears seamless until, unexpectedly, your application freezes.</p><p id="6d3e">Our PostgreSQL TPC-C implementation utilizes <a href="https://www.mchange.com/projects/c3p0/" rel="noopener ugc nofollow" target="_blank">c3p0</a> for connection pooling. <a href="https://www.tpc.org/tpcc/" rel="noopener ugc nofollow" target="_blank">The TPC-C standard</a> dictates that each terminal must have its own connection. However, in many real-world scenarios, this isn’t practical, so we’ve included an option to limit the number of database connections.</p><p id="6c4f">The number of terminals is much greater than the number of available connections. Consequently, some terminals must wait for a session to become available, i.e., released by another terminal.</p><p id="cdc4">When we initiated the TPC-C run, the application froze. Fortunately, debugging such cases is straightforward:</p><ol><li id="5c6c">Capture the thread stacks using <code>jstack -p &lt;PID&gt;</code>.</li><li id="6fa3">Create a more detailed dump of the current state, which includes information about carrier threads and virtual threads, using <code>jcmd &lt;PID&gt; Thread.dump_to_file -format=text jcmd.dump.1</code>.</li></ol><p id="7e41">Upon investigation, we discovered that some virtual threads waiting for a session had pinned their carrier thread. Here is the stack for one such virtual thread:</p><pre><span id="102d">#7284 "TPCCWorker&lt;7185&gt;" virtual<br>      java.base/java.lang.Object.wait0(Native Method)<br>      java.base/java.lang.Object.wait(Object.java:366)<br>      com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1503)<br>      com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:644)<br>      com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:554)<br>      com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:758)<br>      com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:685)<br>      com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)<br>      com.oltpbenchmark.api.BenchmarkModule.makeConnection(BenchmarkModule.java:108)<br>      com.oltpbenchmark.api.Worker.doWork(Worker.java:428)<br>      com.oltpbenchmark.api.Worker.run(Worker.java:304)<br>      java.base/java.lang.VirtualThread.run(VirtualThread.java:309)</span></pre><p id="fe66">and the stack of its carrying thread:</p><pre><span id="e170">"ForkJoinPool-1-worker-254" #50326 [32859] daemon prio=5 os_prio=0 cpu=12.39ms elapsed=489.99s tid=0x00007f3810003140  [0x00007f37abafe000]<br>   Carrying virtual thread #7284<br>        at jdk.internal.vm.Continuation.run(java.base@21.0.1/Continuation.java:251)<br>        at java.lang.VirtualThread.runContinuation(java.base@21.0.1/VirtualThread.java:221)<br>        at java.lang.VirtualThread$$Lambda/0x00007f3c2424e410.run(java.base@21.0.1/Unknown Source)<br>        at java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(java.base@21.0.1/ForkJoinTask.java:1423)<br>        at java.util.concurrent.ForkJoinTask.doExec(java.base@21.0.1/ForkJoinTask.java:387)<br>        at java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(java.base@21.0.1/ForkJoinPool.java:1312)<br>        at java.util.concurrent.ForkJoinPool.scan(java.base@21.0.1/ForkJoinPool.java:1843)<br>        at java.util.concurrent.ForkJoinPool.runWorker(java.base@21.0.1/ForkJoinPool.java:1808)<br>        at java.util.concurrent.ForkJoinWorkerThread.run(java.base@21.0.1/ForkJoinWorkerThread.java:188)</span></pre><p id="5056">As you can see, the thread is hanging in <code>Object.wait()</code>, a method used in conjunction with <code>synchronized</code>. This causes the carrier thread to become pinned, meaning it is not released to execute some other virtual thread. Meanwhile, the session holders have released their carrier threads while they are waiting for I/O operations:</p><pre><span id="1908">java.base/java.lang.VirtualThread.park(VirtualThread.java:582)<br>      java.base/java.lang.System$2.parkVirtualThread(System.java:2639)<br>      java.base/jdk.internal.misc.VirtualThreads.park(VirtualThreads.java:54)<br>      java.base/java.util.concurrent.locks.LockSupport.park(LockSupport.java:369)<br>      java.base/sun.nio.ch.Poller.pollIndirect(Poller.java:139)<br>      java.base/sun.nio.ch.Poller.poll(Poller.java:102)<br>      java.base/sun.nio.ch.Poller.poll(Poller.java:87)<br>      java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:175)<br>      java.base/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:201)<br>      java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)<br>      java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)<br>      java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)<br>      java.base/java.net.Socket$SocketInputStream.read(Socket.java:1099)<br>      java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:489)<br>      java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483)<br>      java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70)<br>      java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1461)<br>      java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1066)<br>      org.postgresql.core.VisibleBufferedInputStream.readMore(VisibleBufferedInputStream.java:161)<br>      org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:128)<br>      org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:113)<br>      org.postgresql.core.VisibleBufferedInputStream.read(VisibleBufferedInputStream.java:73)<br>      org.postgresql.core.PGStream.receiveChar(PGStream.java:465)<br>      org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2155)<br>      org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:574)<br>      org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)<br>      org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)<br>      org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)<br>      com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeBatch(NewProxyPreparedStatement.java:2544)<br>      com.oltpbenchmark.benchmarks.tpcc.procedures.NewOrder.newOrderTransaction(NewOrder.java:214)<br>      com.oltpbenchmark.benchmarks.tpcc.procedures.NewOrder.run(NewOrder.java:147)<br>      com.oltpbenchmark.benchmarks.tpcc.TPCCWorker.executeWork(TPCCWorker.java:66)<br>      com.oltpbenchmark.api.Worker.doWork(Worker.java:442)<br>      com.oltpbenchmark.api.Worker.run(Worker.java:304)<br>      java.base/java.lang.VirtualThread.run(VirtualThread.java:309)</span></pre><p id="27db">Thus, we ended up in the following situation:</p><ol><li id="6458">All carrier threads are pinned by session waiters, meaning there are no carrier threads available.</li><li id="8c6a">Virtual threads holding the sessions can’t finish their tasks to release the sessions.</li></ol><p id="0bc9">Deadlock made easy!</p><p id="1056"><a href="https://openjdk.org/jeps/444" rel="noopener ugc nofollow" target="_blank">JEP 444</a> states that:</p><blockquote><p id="b76f"><em>There are two scenarios in which a virtual thread cannot be unmounted during blocking operations because it is pinned to its carrier:</em></p><p id="f41d"><em>When it executes code inside a synchronized block or method, or When it executes a native method or a foreign function.</em></p></blockquote><p id="2c04">The problem is that this synchronized code might be deeply embedded within the libraries you use. In our case, it was within the c3p0 library. So, the <a href="https://github.com/ydb-platform/tpcc/commit/175f0c03d9c16652c85a6103331fec473017797e" rel="noopener ugc nofollow" target="_blank">fix</a> is straightforward: we simply wrapped the connection with a <code>java.util.concurrent.Semaphore</code>. With this change, virtual threads are blocked on the semaphore and, crucially, release the carrier thread instead of delving inside c3p0. Thus, we never block inside c3p0 because we enter c3p0 code only when there is a free session available.</p><h2 id="cbc9">Summing up</h2><figure><figcaption>This is the front cover art for the book The Mythical Man-Month written by Fred Brooks. The book cover art copyright is believed to belong to the publisher, Addison-Wesley, or the cover artist.</figcaption></figure><p id="86bd">It seems that despite decades of progress in software development, there is still <a href="https://en.wikipedia.org/wiki/No_Silver_Bullet" rel="noopener ugc nofollow" target="_blank">no silver bullet</a>. Yet, Java 21 virtual threads are a remarkable feature, offering significant benefits if used carefully: it’s very easy to write an efficient async code even when concurrency is high.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Victorian Glass Fire Grenades (123 pts)]]></title>
            <link>https://museumcrush.org/the-beauty-and-danger-in-victorian-glass-fire-grenades/</link>
            <guid>39007761</guid>
            <pubDate>Tue, 16 Jan 2024 00:06:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://museumcrush.org/the-beauty-and-danger-in-victorian-glass-fire-grenades/">https://museumcrush.org/the-beauty-and-danger-in-victorian-glass-fire-grenades/</a>, See on <a href="https://news.ycombinator.com/item?id=39007761">Hacker News</a></p>
<div id="readability-page-1" class="page"><section itemprop="articleBody">
			<div id="attachment_11926"><p><a href="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade.jpg"><img fetchpriority="high" decoding="async" aria-describedby="caption-attachment-11926" src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-726x1024.jpg" alt="photo of a small amber bottle with ribbed pattern and stopper" width="726" height="1024" srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-726x1024.jpg 726w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-213x300.jpg 213w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-768x1083.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-1089x1536.jpg 1089w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-1452x2048.jpg 1452w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade.jpg 1600w" sizes="(max-width: 726px) 100vw, 726px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20726%201024'%3E%3C/svg%3E" data-lazy-srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-726x1024.jpg 726w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-213x300.jpg 213w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-768x1083.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-1089x1536.jpg 1089w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-1452x2048.jpg 1452w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade.jpg 1600w" data-lazy-src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Swift-fire-grenade-726x1024.jpg"></a></p><p id="caption-attachment-11926">The Swift Fire Grenade. Courtesy LFB</p></div>
<h2>Sophie Walter, Assistant Curator at London Fire Brigade Museum, on the small, beautiful and potentially fatal Glass Fire Grenade</h2>
<p>When they were first introduced in the nineteenth century, Glass Fire Grenades were produced as decorative glass bottles with a bulbous bottom, long neck and usually patterned with the company name on them. So they are actually very pretty – for something designed to put out a fire.</p>
<p>We have 21 examples of them in the collection of the London Fire Brigade Museum.</p>
<p>The earliest ones date to c.1880 and were filled with salt water, a mix of common table salt and ammonium chloride, which in theory is useful because salt water doesn’t freeze under normal conditions and the heated ammonium chloride produced fumes that should help to suppress the fire.</p>
<div><h4>more like this</h4></div>
<p>However, you are only talking about a pint of liquid in them, so they are quite small and their effectiveness is uncertain.</p>
<p>There were two main methods of using them; you either had them at grab height in a metal rack, which allowed you to pick them up and throw them at the base of the fire, or in larger homes and workplaces they were suspended from the ceiling in special brackets. The heat would cause wax parts to melt or the glass to break, and a deflection component would distribute the contents like a form of sprinkler.</p>
<div id="attachment_11927"><p><a href="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade.jpg"><img decoding="async" aria-describedby="caption-attachment-11927" src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-749x1024.jpg" alt="a selection of small bulbous glass bottles" width="749" height="1024" srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-749x1024.jpg 749w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-220x300.jpg 220w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-768x1049.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-1124x1536.jpg 1124w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-1499x2048.jpg 1499w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade.jpg 1600w" sizes="(max-width: 749px) 100vw, 749px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20749%201024'%3E%3C/svg%3E" data-lazy-srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-749x1024.jpg 749w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-220x300.jpg 220w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-768x1049.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-1124x1536.jpg 1124w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-1499x2048.jpg 1499w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade.jpg 1600w" data-lazy-src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Imperial-fire-grenade-749x1024.jpg"></a></p><p id="caption-attachment-11927">The Imperial Fire Grenade. Courtesy London Fire Brigade Museum</p></div>
<div id="attachment_11928"><p><a href="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin.jpg"><img decoding="async" aria-describedby="caption-attachment-11928" src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin-830x1024.jpg" alt="a photo of a yellow bulbous bottle with mottled design and stopper in its neck" width="830" height="1024" srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin-830x1024.jpg 830w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin-243x300.jpg 243w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin-768x948.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin-1245x1536.jpg 1245w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin.jpg 1600w" sizes="(max-width: 830px) 100vw, 830px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20830%201024'%3E%3C/svg%3E" data-lazy-srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin-830x1024.jpg 830w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin-243x300.jpg 243w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin-768x948.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin-1245x1536.jpg 1245w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin.jpg 1600w" data-lazy-src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Fire-grenade-thought-to-be-of-French-origin-830x1024.jpg"></a></p><p id="caption-attachment-11928">Fire grenade – thought to be of French origin. Courtesy London Fire Brigade Museum</p></div>
<div id="attachment_11929"><p><a href="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3.jpg"><img decoding="async" aria-describedby="caption-attachment-11929" src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3-1024x677.jpg" alt="photo of an assortment of glass bottles" width="1024" height="677" srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3-1024x677.jpg 1024w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3-300x198.jpg 300w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3-768x508.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3-1536x1016.jpg 1536w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3.jpg 1600w" sizes="(max-width: 1024px) 100vw, 1024px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201024%20677'%3E%3C/svg%3E" data-lazy-srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3-1024x677.jpg 1024w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3-300x198.jpg 300w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3-768x508.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3-1536x1016.jpg 1536w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3.jpg 1600w" data-lazy-src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-3-1024x677.jpg"></a></p><p id="caption-attachment-11929">Miscellaneous Fire Grenades. Courtesy London Fire Brigade Museum</p></div>
<p>Fire Grenades filled with salt water were used until about 1900, when they moved over to filling them with carbon tetrachloride, sometimes called carbon tet, or CTC, which at room temperature is a liquid but when heated to about 76C becomes a gas. The gaseous carbon tetrachloride has a higher density than air so it sinks and helps smother the flames.</p>
<p>However, carbon tetrachloride was used in lots of different processes including industrial dry cleaning as a de-greasing agent and they found through studies that people using it had higher rates of cancer and that you could get lung, kidney and liver damage from it through inhalation or touch.</p>
<p>That was dangerous enough, but at 200-400C carbon tet also reacts with water to form phosgene gas, which was used as a chemical weapon in World War One. It is said that 85% of the 900,000 deaths attributed to gas were from phosgene so it was a pretty dangerous substance to have in your home or factory.</p>
<p>Anecdotally several versions of them were purported to be used by the Royal family and the Imperial Fire Extinguisher Company said that their fire grenades were used in Sandringham around 1886.</p>
<div id="attachment_11930"><p><a href="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-scaled.jpg"><img decoding="async" aria-describedby="caption-attachment-11930" src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-616x1024.jpg" alt="photo of a short ribbed bulbous blue bottle with wax stopper" width="616" height="1024" srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-616x1024.jpg 616w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-180x300.jpg 180w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-768x1277.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-923x1536.jpg 923w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-1231x2048.jpg 1231w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-scaled.jpg 1539w" sizes="(max-width: 616px) 100vw, 616px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20616%201024'%3E%3C/svg%3E" data-lazy-srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-616x1024.jpg 616w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-180x300.jpg 180w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-768x1277.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-923x1536.jpg 923w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-1231x2048.jpg 1231w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-scaled.jpg 1539w" data-lazy-src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Harden-Star-Grenade-616x1024.jpg"></a></p><p id="caption-attachment-11930">The Harden Star Grenade. Courtesy London Fire Brigade Museum</p></div>
<div id="attachment_11931"><p><a href="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades.jpg"><img decoding="async" aria-describedby="caption-attachment-11931" src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-1024x807.jpg" alt="photo of various bulbous glass bottles of various sizes" width="1024" height="807" srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-1024x807.jpg 1024w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-300x236.jpg 300w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-768x605.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-1536x1211.jpg 1536w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades.jpg 1600w" sizes="(max-width: 1024px) 100vw, 1024px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201024%20807'%3E%3C/svg%3E" data-lazy-srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-1024x807.jpg 1024w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-300x236.jpg 300w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-768x605.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-1536x1211.jpg 1536w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades.jpg 1600w" data-lazy-src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-1024x807.jpg"></a></p><p id="caption-attachment-11931">Courtesy London Fire Brigade Museum</p></div>
<p>The makers of the Harden Star Grenade, which was produced in a beautiful royal blue coloured bottle, even carried out a ‘Royal demonstration’ near the Savoy Theatre. Their adverts said it was obtainable from ‘all respectable iron mongers, house decorators and furnishers’.</p>
<p>Despite their shortcomings they stuck around for forty odd years as a concept – although they did change in design, with the ornate bottles evolving into something more basic, with clear or frosted glass and no mouldings.</p>
<p>Now, as we move to a new museum these often forgotten objects will feature within the story of London Fire Brigade, which is a rich and varied history, touching on the major turning points in London’s history that reveals how fire can have a massive impact on its communities and the cityscape.</p>
<p>One of the focusses of the new museum will also be to tell the story of fire safety so that people understand that it starts at home and at their place of work. We will be making the displays accessible for all so everyone can really understand its importance and these small objects are really significant within that message.</p>
<p>London Fire Brigade is planning a brand-new museum which will showcase our unique and exciting history with varied exhibition galleries, offer a huge variety of events and activities for all ages and allow us to show even more of our historic vehicles and artefacts like our glass fire grenades. We are currently running as a <em><strong><a href="https://www.london-fire.gov.uk/museum/">virtual museum</a></strong></em> whilst our complex redevelopment plans continue.</p>
<div id="attachment_11932"><p><a href="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2.jpg"><img decoding="async" aria-describedby="caption-attachment-11932" src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2-878x1024.jpg" alt="photo of various bulbous glass bottles of various sizes" width="878" height="1024" srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2-878x1024.jpg 878w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2-257x300.jpg 257w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2-768x896.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2-1317x1536.jpg 1317w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2.jpg 1600w" sizes="(max-width: 878px) 100vw, 878px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20878%201024'%3E%3C/svg%3E" data-lazy-srcset="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2-878x1024.jpg 878w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2-257x300.jpg 257w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2-768x896.jpg 768w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2-1317x1536.jpg 1317w, https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2.jpg 1600w" data-lazy-src="https://museumcrush.org/wp-content/uploads/2020/10/LFB-Museum-Misc-fire-grenades-2-878x1024.jpg"></a></p><p id="caption-attachment-11932">Courtesy London Fire Brigade Museum</p></div>
<p><em><strong>Sign up to receive the free <a href="https://www.london-fire.gov.uk/museum/museum-newsletter-sign-up/">London Fire Brigade Museum newsletter</a> filled with information on Brigade history, their objects and news about the new museum. Follow the museum on <a href="https://twitter.com/LFBMuseum">Twitter</a>, <a href="https://www.instagram.com/londonfirebrigade/">Instagram</a> and <a href="https://www.facebook.com/LondonFireBrigade/">Facebook</a> to keep up with their progress.</strong></em></p>


<div id="venue-MW921" data-template="c24_museums">

		<h4>venue</h4>
		<div>
		<p><a href="https://museumcrush.org/todo/?item_id=MW921">
							<img decoding="async" src="https://update.culture24.org.uk/asset_arena/0/25/34520/v0_large.jpg" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%200%200'%3E%3C/svg%3E" data-lazy-src="https://update.culture24.org.uk/asset_arena/0/25/34520/v0_large.jpg">
						</a>
						
					</p>	

						<p>
								<a href="https://museumcrush.org/todo/?item_id=MW921"><h3>London Fire Brigade Museum</h3></a>
							
								<h4>London, Greater London										
								</h4>

						
							
								<!-- <a href=""></a> -->
						
							
								<!-- <a href=""></a> -->
						
													<!-- <h5></h5> -->
							

							
						</p>
						<p>London Fire Brigade Museum is currently running as a virtual museum whilst our complex redevelopment plans continue. Sign up to our monthly digital newsletter and we’ll be in touch with our latest news and insights into our fantastic historical collection of over 20,000 items. https://www.london-fire.gov.uk/museum/museum-newsletter-sign-up/</p>

				</div>

</div><!-- #post-## -->

		</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bluesky has launched RSS feeds (310 pts)]]></title>
            <link>https://openrss.org/blog/bluesky-has-launched-rss-feeds</link>
            <guid>39007756</guid>
            <pubDate>Tue, 16 Jan 2024 00:05:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openrss.org/blog/bluesky-has-launched-rss-feeds">https://openrss.org/blog/bluesky-has-launched-rss-feeds</a>, See on <a href="https://news.ycombinator.com/item?id=39007756">Hacker News</a></p>
<div id="readability-page-1" class="page"><rss version="2.0"><channel><title>&lt;![CDATA[openrss.org]]&gt;</title><!--[CDATA[https://openrss.org/blog/bluesky-has-launched-rss-feeds]]--><description><!--[CDATA[ ]]--></description></channel></rss></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Watch Free Online Documentaries (123 pts)]]></title>
            <link>https://ihavenotv.com/</link>
            <guid>39007248</guid>
            <pubDate>Mon, 15 Jan 2024 23:03:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ihavenotv.com/">https://ihavenotv.com/</a>, See on <a href="https://news.ycombinator.com/item?id=39007248">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>
<h2>Latest Documentaries</h2>
</p>


<div>
<div>

<p><a href="https://ihavenotv.com/silverback" title="Silverback">
<span>Silverback</span>
</a></p><p>Award-winning wildlife cameraman Vianet Djenguet has been invited by a team of conservationists from the Kahuzi-Biega National Park in Democratic Republic of the Congo to closely document their effort to protect the eastern lowland gorilla, a critically endangered great ape and the largest primate on earth.
By living amongst this group of our primate kin for three months, will the habituation of this gorilla family, coupled with Vianet's extraordinary journey, succeed in the effort to save the eastern lowland gorillas from extinction?</p>
<p>
2024 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>

<div>

<p><a href="https://ihavenotv.com/wild-scandinavia" title="Wild Scandinavia">
<span>Wild Scandinavia</span>
</a></p><p>Discover a land of hauntingly beautiful coasts, magical forests, and volcanic and arctic extremes - and the lynx, orcas, puffins and wolves who call this frozen kingdom home.
Chapter 1: Life on the Edge
Wild and unpredictable, the Scandinavian coast is a place of haunting beauty and dangerous extremes - a journey from storm-swept islands crowded with seal pups to 3,000ft deep fjords where sea eagles fly and base jumpers parachute from the edge.
In the far north, tropical currents and Arctic seas collide, creating riches - billions of herring tracked by orcas and humpback whales - while providing a home to thousands of seabirds, including the feisty puffin.
Chapter 2: Heartlands
Great forests form the heart of Scandinavia, stretching towards the Arctic and cutting through with a labyrinth of waterways. Incredible creatures like lynxes, wolves, bears and reindeer must survive the ever-changing seasons - from the chilling grip of winter to the warm riches of summer. Here, all life is deeply interconnected through surprising and ancient partnerships, creating a balance that has evolved over millennia.
Chapter 3: Ice and Fire
Scandinavia's northern extremes have been shaped by ice and fire, but it's the sun that reigns over these frozen kingdoms. Here, musk oxen, polar bears and arctic foxes must endure the long, dark polar night, but in spring, the sun's return ignites a dramatic transformation in the landscape and heralds the return of thousands of migrant visitors.
Under the midnight sun, the north bursts into a sleepless rush of life and opportunity, a race against time to raise a family, but for some, it's the summer heat which brings the greatest dangers before the first frost and winter's welcome return.</p>
<p>
2023 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/wonders-of-nature-planet-earth-iii" title="Wonders of Nature">
<span>Wonders of Nature</span>
</a></p><p>This special (9th) episode brings together highlights from the series, from hidden forests and turbulent coasts to vast, unexplored deserts.
</p>
<p>
<strong>S1E9</strong> •
<a href="https://ihavenotv.com/series/planet-earth-iii" title="Planet Earth III">Planet Earth III</a> •
2023 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/bbc-royal-institution-christmas-lectures-the-future-of-ai-dream-or-a-nightmare" title="The Future of AI: Dream or a Nightmare">
<span>The Future of AI: Dream or a Nightmare</span>
</a></p><p>Mike Wooldridge grapples with the future of AI in the third and final Christmas lecture.
Mike takes a ride in a driverless car. Autonomous vehicles, once a science fiction dream, are now a reality. Many AI researchers believe removing human drivers will eventually make our streets much safer. Mike explores how the car ‘sees' and perceives the world – and how with the help of AI, it gets better the more it drives.
Although AI will create many exciting opportunities, advances in AI have raised fears – some justified, others not. With the help of expert guests, Mike talks us through some of the risks AI poses. He unpacks the very real danger of bias in AI, asking how we avoid creating AI that favours those who resemble its creators, and he explores the dangers of 'fake news' and how AI algorithms can lead to dangerous online 'echo chambers', helping to foment extreme views. Mike also demonstrates deepfake technology and asks if AI means we simply can't trust our eyes any more?
The prospect of super-intelligent AI means that in the future we may be able to mobilise AI to uncover radical large-scale solutions to the biggest problems facing humanity, such as climate change. But we need to think carefully about what we want to let AI control. Could AI in charge of weapons accidentally begin wars – and present a risk to our survival?
And, as AI gets ever more intelligent, how should we treat it? How does our audience feel about kicking an AI robot dog? This lecture addresses the big question of AI: can it ever truly be like us, or are humans unique? As AI advances, it seems these ethical questions are destined to get ever more complex…
The Christmas Lectures are the most prestigious event in the Royal Institution calendar, dating from 1825 when Michael Faraday founded the series. They are the world's longest running science television series, and always promise to inspire and amaze each year through explosive demonstrations and interactive experiments with the live theatre audience.</p>
<p>
<strong>S1E3</strong> •
<a href="https://ihavenotv.com/series/bbc-royal-institution-christmas-lectures-the-truth-about-ai" title="BBC Royal Institution Christmas Lectures: The Truth about AI">BBC Royal Institution Christmas Lectures: The Truth about AI</a> •
2023 •
<a href="https://ihavenotv.com/category/technology" title="Technology">Technology</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/bbc-royal-institution-christmas-lectures-my-ai-life-the-truth-about-ai" title="My AI Life">
<span>My AI Life</span>
</a></p><p>Mike Wooldridge reveals the huge role AI already plays in our daily lives – sometimes without us even realising its role.
Mike investigates how games like chess and Go have become a training ground for AI, helping to bring about key advances we are now seeing in the field, and he reveals how simple methods of learning, like rewarding success, have been used to train AI in spectacular ways. We also feature some of the revolutionary innovations that AI has brought about in healthcare, from the use of AI tools in planning cancer treatment, to monitoring Parkinson's.
Mike is joined by members of DeepMind's AlphaFold team, who use AI to predict the structures of large numbers of proteins, which will revolutionise the creation of new drugs across the world.
We also reveal the huge impact AI has had on our creative lives – as it is able to write songs and create artworks in seconds. With the help of artist Eric Drass (aka shardcore), the audience creates a collaborative artwork and discovers how image generation works. Mike explores the thorny question of who the creator is – the AI itself, the human who set it to work, or the creators of the art that AI has learned from?
The Christmas Lectures are the most prestigious event in the Royal Institution calendar, dating from 1825, when Michael Faraday founded the series. They are the world's longest running science television series, and always promise to inspire and amaze each year through explosive demonstrations and interactive experiments with the live theatre audience.
</p>
<p>
<strong>S1E2</strong> •
<a href="https://ihavenotv.com/series/bbc-royal-institution-christmas-lectures-the-truth-about-ai" title="BBC Royal Institution Christmas Lectures: The Truth about AI">BBC Royal Institution Christmas Lectures: The Truth about AI</a> •
2023 •
<a href="https://ihavenotv.com/category/technology" title="Technology">Technology</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/bbc-royal-institution-christmas-lectures-how-to-build-an-intelligent-machine-the-truth-about-ai" title="How to Build an Intelligent Machine">
<span>How to Build an Intelligent Machine</span>
</a></p><p>Mike Wooldridge examines real-life neurons in action and explains how artificial neural networks are inspired by neural structures in the brain. To demonstrate how AI learns, we watch drones as they are trained to recognise and fly through structures in the lecture theatre autonomously.
AI exploded into the public consciousness in 2022 with the release of ChatGPT and boasts around 100 million monthly users. Mike unravels the mystery of how large language models like ChatGPT work, and he finds out if one day this technology - along with a whole suite of different AI tools - will allow us to understand the animals we share this planet with.
The Christmas Lectures are the most prestigious event in the Royal Institution calendar, dating from 1825, when Michael Faraday founded the series. They are the world's longest running science television series and always promise to inspire and amaze each year through explosive demonstrations and interactive experiments with the live theatre audience.</p>
<p>
<strong>S1E1</strong> •
<a href="https://ihavenotv.com/series/bbc-royal-institution-christmas-lectures-the-truth-about-ai" title="BBC Royal Institution Christmas Lectures: The Truth about AI">BBC Royal Institution Christmas Lectures: The Truth about AI</a> •
2023 •
<a href="https://ihavenotv.com/category/technology" title="Technology">Technology</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/berlin-1945-diary-of-a-metropolis" title="Berlin 1945: Diary of a Metropolis">
<span>Berlin 1945: Diary of a Metropolis</span>
</a></p><p>Journey back in time to Berlin's most fateful year - 1945 - through the eyes and voices of those who experienced it - ordinary German people and the Allies who entered the city.
AKA Berlin 1945: Tagebuch einer Großstadt and Berlin 1945: Le journal d'une capitale.</p>
<p>
2020 •
<a href="https://ihavenotv.com/category/history" title="History">History</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/heroes-planet-earth-iii" title="Heroes">
<span>Heroes</span>
</a></p><p>David Attenborough introduces conservation heroes fighting to save the world's wildlife, from exploring remote jungles to going undercover to catch criminals in the illegal ivory trade. In South Africa, new breeding populations of black rhino are set up in safe havens where they will be protected from poachers, while a conservationist in Ecuador works to protect endangered frogs.
</p>
<p>
<strong>S1E8</strong> •
<a href="https://ihavenotv.com/series/planet-earth-iii" title="Planet Earth III">Planet Earth III</a> •
2023 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/human-planet-earth-iii" title="Human">
<span>Human</span>
</a></p><p>The ways in which wild animals have adapted to survive in human population centres, from cobras in India hunting in houses, to macaques in Bali stealing mobile phones to barter with temple staff in return for food. Rhinos walk through the streets of Sauraha, Nepal, while in Australia, tawny frogmouths find streetlights useful in catching prey, but have to avoid being eaten by household cats.
</p>
<p>
<strong>S1E7</strong> •
<a href="https://ihavenotv.com/series/planet-earth-iii" title="Planet Earth III">Planet Earth III</a> •
2023 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/extremes-planet-earth-iii" title="Extremes">
<span>Extremes</span>
</a></p><p>David Attenborough reveals the extraordinary ways in which animals battle to survive in a world of extremes, from mountain summits to deserts, polar tundra to the world's largest cave in Vietnam. On Ellesmere Island, a pack of Arctic wolves fight to rebuild their strength after one of the toughest winters on record, while in the mountains of Mexico, millions of Monarch butterflies huddle together to survive. But the calm is shattered when a storm hits their forest shelter.
</p>
<p>
<strong>S1E6</strong> •
<a href="https://ihavenotv.com/series/planet-earth-iii" title="Planet Earth III">Planet Earth III</a> •
2023 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/forests-planet-earth-iii" title="Forests">
<span>Forests</span>
</a></p><p>David Attenborough journeys into the hidden world of forests, from the temperate rainforests of Canada, where rarely seen spirit bears fish for salmon, to the teak forests of India, where whistling wild dogs work together to bring down prey three times their size. In the misty mountainous forests of China, male tragopan have developed a comical dance routine, whilst in the dense tropical rainforest, treehoppers form surprising alliances to fight off assassin bugs and oriental pied hornbills go to incredible lengths to protect their young.
</p>
<p>
<strong>S1E5</strong> •
<a href="https://ihavenotv.com/series/planet-earth-iii" title="Planet Earth III">Planet Earth III</a> •
2023 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>
</div> <p>
<h2>Recommended Documentaries</h2>
</p>


<div>

<div>

<p><a href="https://ihavenotv.com/professor-jenny-clack-beautiful-minds" title="Professor Jenny Clack">
<span>Professor Jenny Clack</span>
</a></p><p>Jenny Clack recounts how she overcame setbacks before she found and described a fossil which offered new evidence of how fish made the transition onto land.
For paleontologist Professor Jenny Clack, who solved one of the greatest mysteries in the history of life on Earth, success was far from inevitable. A chance discovery in 1986 in the earth sciences department of Cambridge University, of long-forgotten fossils collected from the Devonian rocks of East Greenland in 1970, was to shape the rest of her career. She recounts how she had to overcome a series of setbacks before she found and described the fossil Acanthostega, a 365 million-year-old creature that offered dramatic new evidence of how fish made the transition onto land.
She authored or co-authored more than 120 research papers as well as numerous popular articles and book reviews. A measure of the significance of her work is that 15 of her research papers were published in the journal Nature. Her one book, "Gaining Ground, The Origin and Evolution of Tetrapods" (2002), summarises the results of research on early tetrapods over the previous 25 years.</p>
<p>
<strong>S2E1</strong> •
<a href="https://ihavenotv.com/series/beautiful-minds" title="Beautiful Minds">Beautiful Minds</a> •
2012 •
<a href="https://ihavenotv.com/category/people" title="People">People</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/jungles-planet-earth-ii" title="Jungles">
<span>Jungles</span>
</a></p><p>Jungles provide the richest habitats on the planet - mysterious worlds of high drama where extraordinary animals attempt to survive in the most competitive place on earth. Flooded forests are home to caiman-hunting jaguars and strange dolphins that swim amongst the tree tops, while in the dense underworld, ninja frogs fight off wasps and flying dragons soar between trees. Acrobatic indri leap through the forests of Madagascar, while the jungle night conceals strange fungi and glow-in-the-dark creatures never filmed before.</p>
<p>
<strong>S1E3</strong> •
<a href="https://ihavenotv.com/series/planet-earth-ii" title="Planet Earth II">Planet Earth II</a> •
2016 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/the-lost-worlds-of-planet-earth-cosmos-a-spacetime-odyssey" title="The Lost Worlds of Planet Earth">
<span>The Lost Worlds of Planet Earth</span>
</a></p><p>The Ship of the Imagination embarks on a journey through space and time to grasp how the autobiography of the Earth is written in its atoms, its oceans, its continents and all living things. Later, American geologist Marie Tharp creates the first true map of Earth's ocean floor, and discovers microscopic life that exists deep beneath the ocean.</p>
<p>
<strong>S1E9</strong> •
<a href="https://ihavenotv.com/series/cosmos-a-spacetime-odyssey" title="Cosmos: A Spacetime Odyssey">Cosmos: A Spacetime Odyssey</a> •
<a href="https://ihavenotv.com/category/astronomy" title="Astronomy">Astronomy</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/colony-micro-monsters-with-david-attenborough" title="Colony">
<span>Colony</span>
</a></p><p>Watching the fascinating display of leafcutter ants at the Natural History Museum in London is one of my favourite ways to while away a few hours, but David Attenborough is operating on a much grander scale here in the last in the series. In Argentina he observes some cousins of the leafcutters who are part of a community so vast it spans an entire continent. It’s one of the mandible-dropping facts in a look at one of the key inventions of arthropods: colonies. From termites and honey bees to the leafcutters, it seems that if you want to get ahead, you move to the big city.</p>
<p>
<strong>6</strong> •
<a href="https://ihavenotv.com/series/micro-monsters-with-david-attenborough" title="Micro Monsters with David Attenborough">Micro Monsters with David Attenborough</a> •
2013 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/alphago" title="AlphaGo">
<span>AlphaGo</span>
</a></p><p>With more board configurations than there are atoms in the observable universe, the ancient Chinese game of 'Go' has long been considered a grand challenge for artificial intelligence. On March 9, 2016, the worlds of Go and artificial intelligence collided in South Korea for an extraordinary best-of-five-game competition, coined the Google DeepMind Challenge Match. Hundreds of millions of people around the world watched as a legendary Go master took on an unproven AI challenger for the first time in history.</p>
<p>
2017 •
<a href="https://ihavenotv.com/category/technology" title="Technology">Technology</a>
</p>
</div>
</div> <p>
<h2>Health Documentaries</h2>
</p>


<div>
<div>

<p><a href="https://ihavenotv.com/slimming-down-a-users-guide-to-cheating-death" title="Slimming Down">
<span>Slimming Down</span>
</a></p><p>Obesity is one of America's biggest public health concerns. Two thirds of Americans are overweight or obese. The pressure to lose weight is intense and many are turning to surgical means to achieve results.</p>
<p>
<strong>S1E4</strong> •
<a href="https://ihavenotv.com/series/a-users-guide-to-cheating-death" title="A User's Guide to Cheating Death">A User's Guide to Cheating Death</a> •
2017 •
<a href="https://ihavenotv.com/category/health" title="Health">Health</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/superhumans-incredible-medicine-dr-westons-casebook" title="Superhumans">
<span>Superhumans</span>
</a></p><p>This time, we meet a man who feels no pain, a woman who can smell Parkinson's disease, a man who can remember every face he has ever seen and a survivor of a head injury who woke up to find he could suddenly play the piano. These remarkable cases are shedding new light on one of the most mysterious parts of the human body - our brain.</p>
<p>
<strong>S1E3</strong> •
<a href="https://ihavenotv.com/series/incredible-medicine-dr-westons-casebook" title="Incredible Medicine: Dr Weston's Casebook">Incredible Medicine: Dr Weston's Casebook</a> •
2017 •
<a href="https://ihavenotv.com/category/health" title="Health">Health</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/how-do-your-kidneys-work-teded" title="How do your kidneys work?">
<span>How do your kidneys work?</span>
</a></p><p>After drinking a few glasses of water on a hot day, you might be struck with a sudden ... urge. Behind that feeling are two bean-shaped organs that work as fine-tuned internal sensors.</p>
<p>
<a href="https://ihavenotv.com/series/ted-ed" title="TED-Ed">TED-Ed</a> •
<a href="https://ihavenotv.com/category/health" title="Health">Health</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/antivenom-catalyst-season-1" title="Anti-venom">
<span>Anti-venom</span>
</a></p><p>Good to know as you travel to the Antipodes - Australia has the most venomous snakes and spiders in the world. But, if you’re bitten, can you rely on anti-venom? Dr Graham Phillips investigates the effectiveness of anti-venom.</p>
<p>
<strong>3/10</strong> •
<a href="https://ihavenotv.com/series/catalyst-season-1" title="Catalyst: Season 1">Catalyst: Season 1</a> •
2015 •
<a href="https://ihavenotv.com/category/health" title="Health">Health</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/a-shot-to-save-the-world" title="A Shot to Save the World">
<span>A Shot to Save the World</span>
</a></p><p>It was 1952, and polio had reached outbreak levels in America. There was no known cause, no cure, and no help in sight for parents desperate to protect their children. Our nation's hope was placed in a 33-year-old scientist, working from a basement lab in Pittsburgh. His name was Jonas Salk, and in just a few years, he would bring infantile paralysis to its knees and change the course of medical history. Travel back to a world gripped in fear and see how Dr. Salk, with his dedicated staff, a young charity, and a faithful nation, came together to conquer polio.</p>
<p>
2010 •
<a href="https://ihavenotv.com/category/health" title="Health">Health</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/we-are-what-we-eat-the-secrets-of-your-food" title="We are What We Eat">
<span>We are What We Eat</span>
</a></p><p>In the opening episode, they explore how this chemistry fuels and builds our bodies. Michael begins by trying the first meal most of us enjoyed, human breast milk, which contains everything a baby needs - fats, carbs, vitamins and minerals. As we grow, we continue to seek the same chemistry in our diet but from a wide variety of scrumptious fare as Michael and James discover. In San Francisco, they unravel why sourdough bread is so good for us, in the Philippines, they learn how a river weed - rice - has become a comforting staple food, and in Bulgaria, they discover why letting your mushrooms sunbathe may help you get a calcium boost from your dairy food.</p>
<p>
<strong>S1E1</strong> •
<a href="https://ihavenotv.com/series/the-secrets-of-your-food" title="The Secrets of Your Food">The Secrets of Your Food</a> •
2017 •
<a href="https://ihavenotv.com/category/health" title="Health">Health</a>
</p>
</div>
</div> 


<div>
<div>

<p><a href="https://ihavenotv.com/the-joy-of-stats-with-professor-hans-rosling" title="The Joy of Stats (with Professor Hans Rosling)">
<span>The Joy of Stats (with Professor Hans Rosling)</span>
</a></p><p>Documentary which takes viewers on a rollercoaster ride through the wonderful world of statistics to explore the remarkable power thay have to change our understanding of the world, presented by superstar boffin Professor Hans Rosling, whose eye-opening, mind-expanding and funny online lectures have made him an international internet legend. Rosling is a man who revels in the glorious nerdiness of statistics, and here he entertainingly explores their history, how they work mathematically and how they can be used in today's computer age to see the world as it really is, not just as we imagine it to be.</p>
<p>
2010 •
<a href="https://ihavenotv.com/category/math" title="Math">Math</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/part-2-natures-mathematics" title="Part 2">
<span>Part 2</span>
</a></p><p>Mathematical formulas can be found in the arrangement of seeds on a sunflower, the structure of the spirals in the shells of certain marine animals, and the distribution of leaves around a plant stem. These formulas recur in nature from snowflakes to the stripes on a zebra.</p>
<p>
<a href="https://ihavenotv.com/series/natures-mathematics" title="Nature's Mathematics">Nature's Mathematics</a> •
2017 •
<a href="https://ihavenotv.com/category/math" title="Math">Math</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/how-can-we-all-win-royal-institution-christmas-lectures-secrets-and-lies-the-hidden-power-of-maths" title="How Can We All Win?">
<span>How Can We All Win?</span>
</a></p><p>Dr Hannah Fry explores the limits of our control, from dangerous miscalculations to creating and spotting fake videos, and questions how far we should be going with our mathematical skills.
A gravity-defying BMX stunt kick-starts the debate around trusting the numbers, and launches us into an investigation of just how sure we can be about anything in our messy world. Together with maths comedian Matt Parker, Hannah uses flaming balloons and gigantic slices of melting cheese to get to the bottom of the guesswork used in real world calculations. A visiting drone zips through the corridors of the historic Royal Institution building, introducing the mother of all drones, a human-sized machine that delivers urgent parcels, and we welcome the team designing driverless helicopters and buying up London rooftops to prepare for the future.
But these physical challenges are just the beginning of the debate on handing control over to machines. Hannah explores whether human jurors or robots make fairer decisions, and welcomes Atima Lui, who is on a mission to design the most unbiased facial detection software in the world, which will say goodbye to the 'fast track for white people' at automatic passport gates. Hannah dives into the issues around privacy in our modern world, with Glow Up make-up star Tiffany Hunt making a member of the audience invisible to CCTV, while Hannah explores the truth behind cookies and anonymity online.
Finally, she delves into the world of fake news, to separate the truth from the lies. Leading deep fake creators team up with the Christmas Lectures to create a television first – a custom-made deep fake video of a child in the audience, highlighting our ability to use maths to warp reality however we please.
Hannah ultimately explores who the real winners are, in an escalating arms race of mathematical tricks.</p>
<p>
<strong>S1E3</strong> •
<a href="https://ihavenotv.com/series/royal-institution-christmas-lectures-secrets-and-lies-the-hidden-power-of-maths" title="Royal Institution Christmas Lectures: Secrets and Lies - The Hidden Power of Maths">Royal Institution Christmas Lectures: Secrets and Lies - The Hidden Power of Maths</a> •
2019 •
<a href="https://ihavenotv.com/category/math" title="Math">Math</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/the-joy-of-data" title="The Joy of Data">
<span>The Joy of Data</span>
</a></p><p>A witty and mind-expanding exploration of data, with mathematician Dr Hannah Fry. This high-tech romp reveals what data is and how it is captured, stored, shared and made sense of. Fry tells the story of the engineers of the data age, people most of us have never heard of despite the fact they brought about a technological and philosophical revolution.
For Hannah, the joy of data is all about spotting patterns. Hannah sees data as the essential bridge between two universes - the tangible, messy world that we see and the clean, ordered world of maths, where everything can be captured beautifully with equations.
The film reveals the connection between Scrabble scores and online movie streaming, explains why a herd of dairy cows are wearing pedometers, and uncovers the network map of Wikipedia. What's the mystery link between marmalade and One Direction?
The film hails the contribution of Claude Shannon, the mathematician and electrical engineer who, in an attempt to solve the problem of noisy telephone lines, devised a way to digitise all information. Shannon singlehandedly launched the 'information age'. Meanwhile, Britain's National Physical Laboratory hosts a race between its young apprentices in order to demonstrate how and why data moves quickly around modern data networks. It's all thanks to the brilliant technique first invented there in the 1960s by Welshman Donald Davies - packet switching.
But what of the future? Should we be worried by the pace of change and what our own data could be used for? Ultimately, Fry concludes, data has empowered all of us. We must have machines at our side if we're to find patterns in the modern-day data deluge. But, Fry believes, regardless of AI and machine learning, it will always take us to find the meaning in them.</p>
<p>
2016 •
<a href="https://ihavenotv.com/category/math" title="Math">Math</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/psychedelics-history-by-the-numbers" title="Psychedelics">
<span>Psychedelics</span>
</a></p><p>Psychedelics have impacted history for as long as there have been people wanting to get their minds blown. Discover who's been under the influence from Salem witches and Santa Claus to 1960s hippies and Steve Jobs, and find out how mind-altering substances have changed our world.
</p>
<p>
<strong>S1E2</strong> •
<a href="https://ihavenotv.com/series/history-by-the-numbers" title="History By The Numbers">History By The Numbers</a> •
2021 •
<a href="https://ihavenotv.com/category/math" title="Math">Math</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/is-math-discovered-or-invented" title="Is math discovered or invented?">
<span>Is math discovered or invented?</span>
</a></p><p>Would mathematics exist if people didn't? Did we create mathematical concepts to help us understand the world around us, or is math the native language of the universe itself? Jeff Dekofsky traces some famous arguments in this ancient and hotly debated question. </p>
<p>
<a href="https://ihavenotv.com/series/ted-ed" title="TED-Ed">TED-Ed</a> •
2014 •
<a href="https://ihavenotv.com/category/math" title="Math">Math</a>
</p>
</div>
</div> <p>
<h2>Randoms! Documentaries</h2>
</p>


<div>
<div>

<p><a href="https://ihavenotv.com/woodpeckers-the-hole-story-pbs-nature" title="Woodpeckers: The Hole Story">
<span>Woodpeckers: The Hole Story</span>
</a></p><p>Woodpeckers: The Hole Story goes deep into the woods to explore the lives of a unique avian family. Woodpeckers come in 239 species, each one a colorful character with a story of its own. But all woodpeckers share some very special gifts – they are acutely adapted to life in the trees and are experts at working with wood.
They have tree climbing feet, a forest flying technique, and chisel-tipped bills to carve out holes in sol</p>
<p>
<a href="https://ihavenotv.com/series/pbs-nature" title="PBS Nature">PBS Nature</a> •
2022 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/eclipses-crash-course-astronomy" title="Eclipses">
<span>Eclipses</span>
</a></p><p>An eclipse is an astronomical event that occurs when an astronomical object is temporarily obscured, either by passing into the shadow of another body or by having another body pass between it and the viewer.</p>
<p>
<strong>#5</strong> •
<a href="https://ihavenotv.com/series/crash-course-astronomy" title="Crash Course Astronomy">Crash Course Astronomy</a> •
<a href="https://ihavenotv.com/category/astronomy" title="Astronomy">Astronomy</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/the-rebel-physician-nicholas-culpepers-fight-for-medical-freedom" title="The Rebel Physician: Nicholas Culpeper's Fight for Medical Freedom">
<span>The Rebel Physician: Nicholas Culpeper's Fight for Medical Freedom</span>
</a></p><p>Benjamin Woolley presents the gripping story of Nicholas Culpeper, the 17th century radical pharmacist who took on the establishment in order to bring medicine to the masses.
Culpeper lived during one of the most tumultuous periods in British history. When the country was ravaged by famine and civil war, he took part in the revolution that culminated in the execution of King Charles I.
But it is Culpeper's achievements in health care that made him famous. By practicing (often illegally) as a herbalist and publishing the first English-language texts explaining how to treat common ailments, he helped to break the monopoly of a medical establishment that had abandoned the poor and needy. His book The English Physician became the most successful non-religious English book of all time, remaining in print continuously for more than 350 years.</p>
<p>
2007 •
<a href="https://ihavenotv.com/category/health" title="Health">Health</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/living-volcanoes-pbs-nature" title="Living Volcanoes">
<span>Living Volcanoes</span>
</a></p><p>Uncover the variety of activity, both human and natural, that occurs on the slopes of active volcanoes. Take a terrifying descent into the crater of one of the worlds most dangerous volcanoes alive today. James Naughton narrates.</p>
<p>
<a href="https://ihavenotv.com/series/pbs-nature" title="PBS Nature">PBS Nature</a> •
2019 •
<a href="https://ihavenotv.com/category/nature" title="Nature">Nature</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/alien-worlds-nova-universe-revealed" title="Alien Worlds">
<span>Alien Worlds</span>
</a></p><p>Ultra-sensitive telescopes have transformed alien planet-hunting from science fiction into enthralling hard fact. Join NOVA on a visit to exotic worlds orbiting distant suns to answer an age-old question with thrilling new science: are we alone?
</p>
<p>
<strong>S1E3</strong> •
<a href="https://ihavenotv.com/series/nova-universe-revealed" title="Nova: Universe Revealed">Nova: Universe Revealed</a> •
2021 •
<a href="https://ihavenotv.com/category/astronomy" title="Astronomy">Astronomy</a>
</p>
</div>
<div>

<p><a href="https://ihavenotv.com/arctic-meltdown-changing-world-the-nature-of-things" title="Arctic Meltdown: Changing World">
<span>Arctic Meltdown: Changing World</span>
</a></p><p>In Episode 1: A Changing World, we see the changes that are upsetting the scientific predictions of the impact of climate change on the Arctic. Now, one sobering forecast is that the Arctic Ocean will be seasonally ice free by the summer of 2013. This possibility is what drives environmentalists to identify ways to minimize the changes affecting this snowy land. But for prospectors like Gordon McCreary, climate change brings new opportunities. He is part of the rush to claim the riches beneath the Arctic's ice: deposits of metals, gold, diamonds, and oil and gas.</p>
<p>
<strong>S48E15</strong> •
<a href="https://ihavenotv.com/series/the-nature-of-things" title="The Nature of Things">The Nature of Things</a> •
2009 •
<a href="https://ihavenotv.com/category/environment" title="Environment">Environment</a>
</p>
</div>
</div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Amazon R&D spending is more than that of all companies and government of France (154 pts)]]></title>
            <link>https://twitter.com/emollick/status/1746254000914092480</link>
            <guid>39006398</guid>
            <pubDate>Mon, 15 Jan 2024 21:35:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/emollick/status/1746254000914092480">https://twitter.com/emollick/status/1746254000914092480</a>, See on <a href="https://news.ycombinator.com/item?id=39006398">Hacker News</a></p>
Couldn't get https://twitter.com/emollick/status/1746254000914092480: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[Immediate Mode GUI Programming (160 pts)]]></title>
            <link>https://eliasnaur.com/blog/immediate-mode-gui-programming</link>
            <guid>39006383</guid>
            <pubDate>Mon, 15 Jan 2024 21:33:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eliasnaur.com/blog/immediate-mode-gui-programming">https://eliasnaur.com/blog/immediate-mode-gui-programming</a>, See on <a href="https://news.ycombinator.com/item?id=39006383">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			


<p>The initial focus of the <a href="https://gioui.org/">Gio</a> project was to
create a simple cross-platform Go library for creating user interfaces
for mobile and the desktop, avoiding the platform bound and often
complex native toolkits. This is also the apparent selling point of
Gio.</p>

<p>However, as work progressed it became clear that the immediate mode
programming model is a key driver for longer term adoption of Gio.
After all, there are plenty of cross-platform GUI toolkits available,
but very few attempt the direct and stateless programming model of
immediate mode libraries.</p>

<p>This article is an introduction to immediate mode programming,
comparing Gio’s approach with popular retained mode toolkits.</p>

<h2>What is immediate mode?</h2>

<p>In traditional <em>retained mode</em> UI toolkits, the state of the user
interface is owned by the toolkit, and event handling, layout and
animation is handled internally. The application can only indirectly
manipulate the UI state, and responding to user input happen in callbacks.</p>

<p>The following JavaScript program implements a button and a click event
handler:</p>

<pre><code>var count = 0;

var root = document.getElementById("clickcounter");

var label = document.createElement("h3");
label.innerText = "Number of clicks: 0";
root.appendChild(label);

var btn = document.createElement("button");
btn.innerText = "Click Me!";
btn.addEventListener("click", function() {
	count++;
	label.innerText = "Number of clicks:" + count;
});
root.appendChild(btn);
</code></pre>

<pre></pre>



<p>In retained mode the label and button must explicitly be created,
added to a widget hierrarchy (the HTML DOM) and the click handler must
be registered. The handler callback is invoked at the discretion
of the UI library, not when convenient for the program.</p>

<p>In the <em>immediate mode</em> model, library owned state is minimized, and the
program is responsible for drawing, layout and event handling,
supported by the facilities offered by the UI library.</p>

<p>A <a href="https://eliasnaur.com/include/files/clickcounter/main.go">complete Gio version</a> of the
click counter is reproduced below (import statements omitted).</p>

<pre><code>func main() {
	go func() {
		w := app.NewWindow()
		loop(w)
	}()
	app.Main()
}

func loop(w *app.Window) {
	th := material.NewTheme(gofont.Collection())
	var ops op.Ops

	// UI state.
	var btn widget.Clickable
	var count int

	for e := range w.Events() {
		if e, ok := e.(system.FrameEvent); ok {
			gtx := layout.NewContext(&amp;ops, e)

			for btn.Clicked() {
				count++
			}

			layout.W.Layout(gtx, func(gtx layout.Context) layout.Dimensions {
				return layout.Flex{Axis: layout.Vertical}.Layout(gtx,
					layout.Rigid(func(gtx layout.Context) layout.Dimensions {
						return material.H5(th, fmt.Sprintf("Number of clicks: %d", count)).Layout(gtx)
					}),
					layout.Rigid(func(gtx layout.Context) layout.Dimensions {
						return material.Button(th, &amp;btn, "Click me!").Layout(gtx)
					}),
				)
			})

			e.Frame(gtx.Ops)
		}
	}
}

</code></pre>

<p>If your browser supports WebAssembly and WebGL, you can run the
program by clicking the <code>run</code> button. It may take a little while to
load.</p>

<pre data-run="wasm" data-pkg="clickcounter" data-size="200x100"></pre>

<p>Notice the differences: the program is in control of the main event
loop, user input is handled as part of program flow, and the
program state is both minimal and cleanly separated. The counter
doesn’t respond to user input, and so is reduced to a (high-level)
drawing command. The same applies to layout; both the aligning and
listing of the two widgets are stateless.</p>

<h2>Drawing</h2>

<p>If a user interface is a form of I/O system, drawing is the output part.
Mixing custom drawing and animation with higher level widgets is where the
retained model typically struggles.</p>

<p>Here’s <a href="https://eliasnaur.com/include/files/bounce/main.go">a program</a> that displays a
bouncing ball, controlled by a button.</p>

<pre><code>type state struct {
	btn         widget.Clickable
	ballVisible bool
	time        time.Time
}

var programState state

func (s *state) layout(gtx layout.Context, th *material.Theme) {
	for s.btn.Clicked() {
		s.ballVisible = !s.ballVisible
		s.time = gtx.Now
	}

	if s.ballVisible {
		s.drawBall(gtx)
	}
	layout.Center.Layout(gtx, func(gtx layout.Context) layout.Dimensions {
		label := "Throw ball"
		if s.ballVisible {
			label = "Hide ball"
		}
		return material.Button(th, &amp;s.btn, label).Layout(gtx)
	})
}

func (s *state) drawBall(gtx layout.Context) {
	defer op.Save(gtx.Ops).Load()
	const size = 50

	// Animate bounce.
	const (
		v0 = 50.0
		g  = -9.81
	)
	now := gtx.Now
	t := now.Sub(s.time).Seconds()
	t *= 10
	t1 := -v0 / (.5 * g)
	t = math.Mod(t, t1)
	y := v0*t + .5*g*t*t

	// Position.
	bottom := float32(gtx.Constraints.Max.Y)
	op.Offset(f32.Point{X: 20, Y: bottom - size - float32(y)}).Add(gtx.Ops)

	// Draw.
	paint.ColorOp{Color: color.NRGBA{A: 0xff, G: 0xff}}.Add(gtx.Ops)
	clip.RRect{
		Rect: f32.Rectangle{Max: f32.Point{X: size, Y: size}},
		NE:   size * .5, NW: size * .5, SE: size * .5, SW: size * .5,
	}.Op(gtx.Ops).Add(gtx.Ops)
	paint.PaintOp{}.Add(gtx.Ops)

	// Request immediate redraw.
	op.InvalidateOp{}.Add(gtx.Ops)
}

</code></pre>

<pre data-run="wasm" data-pkg="bounce" data-size="200x200"></pre>

<p>See how the high-level button and its centering is naturally mixed
with the low-level animation and drawing of the sphere. There is no
separate animation system; rather, the program draws and requests
redrawing as long as the ball is bouncing, and simply stops when it is
not. The required state is minimized to just the <code>ballVisible</code> boolean
and the throwing <code>time</code>.</p>

<p>Compare the retained mode version:</p>

<pre><code>var root = document.getElementById("bounce");
root.style = "display: flex; position: relative; height: 200px";

var ball = document.createElement("div");
ball.style = "background-color: green; position: absolute; width: 40px; height: 40px; border-radius: 50%";
ball.style.bottom = 0;

var btn = document.createElement("button");
btn.style = "margin: auto";
btn.innerText = "Throw ball";
root.appendChild(btn);

var ballVisible = false;
var now;
var animHandle;

btn.addEventListener("click", function() {
	ballVisible = !ballVisible;
	if (ballVisible) {
		root.appendChild(ball);
		now = performance.now();
		btn.innerText = "Hide ball";
		animate(now);
	} else {
		cancelAnimationFrame(animHandle);
		btn.innerText = "Throw ball";
		ball.remove();
	}
});

function animate(time) {
	var v0 = 50.0;
	var g = -9.81;
	var t = (time - now)/1000;
	t *= 10;
	var t1 = -v0 / (.5 * g);
	var t = t % t1;
	var y = v0*t + .5*g*t*t;

	ball.style.bottom = y+"px";

	animHandle = window.requestAnimationFrame(animate);
}
</code></pre>

<pre></pre>



<p>Several redundant state variables appear in the program: the
<code>innerText</code> property, the <code>ball</code> object, the callback handle
<code>animHandle</code>. As a result, the click listener must reset the extra
state and remember to unregister the callback. A lingering callback
may be invoked when the program is unprepared or leak memory.</p>

<h2>Layout</h2>

<p>The examples so far demonstrate some advantages of immediate mode
layouts such as centering, aligning and listing interface elements:
operations are stateless, and they’re specified and controlled with
regular programming constructs such as functions, loops and
conditions.</p>

<p>However, state for static layout is about as harmless as having extra
program constants in your program; the advantages are clearer for
dynamic layouts.</p>

<p>This program implements a scrollable list of many rows, with a button
to modify their content.</p>

<pre><code>var root = document.getElementById("list");

var list = document.createElement("div");
list.style = "overflow-y: scroll; max-height: 200px;"
root.appendChild(list);

var factor = 1;

function addRows() {
	for (var i = 0; i &lt; 1000; i++) {
		var row = document.createElement("p");
		row.innerText = "Row #" + i*factor;
		list.appendChild(row);
	}
}
addRows()

var btn = document.createElement("button");
btn.innerText = "Multiply by 10";
btn.addEventListener("click", function() {
	while (list.firstChild) {
		list.firstChild.remove();
	}
	factor *= 10;
	addRows();
});
root.appendChild(btn);
</code></pre>

<pre></pre>



<p>Because every row has a persistent representation to the UI in the
form of <code>&lt;p&gt;</code> elements, the program is left with two options for
updating the elements: either go through them one by one, or remove
them all and recreate them. Both options perform worse as the number
of elements grows<sup id="fnref:1"><a href="#fn:1">1</a></sup>.</p>

<p>The equivalent <a href="https://eliasnaur.com/include/files/list/main.go">Gio program</a> has just two
variables: the integer factor adjusted by the button, and the list
object that tracks the scroll position. There is no need for a
persistent representation of each row and the list spans a million rows
without impacting performance.</p>

<pre><code>type state struct {
	btn    widget.Clickable
	factor int
	list   layout.List
}

var programState state

func (s *state) layout(gtx layout.Context, th *material.Theme) {
	for s.btn.Clicked() {
		s.factor *= 10
	}

	layout.Flex{Axis: layout.Vertical}.Layout(gtx,
		layout.Flexed(1, func(gtx layout.Context) layout.Dimensions {
			const numRows = 1e6 // A million rows.
			return s.list.Layout(gtx, numRows, func(gtx layout.Context, i int) layout.Dimensions {
				txt := fmt.Sprintf("Row #%d", i*s.factor)
				return material.Body1(th, txt).Layout(gtx)
			})
		}),
		layout.Rigid(func(gtx layout.Context) layout.Dimensions {
			return layout.S.Layout(gtx, func(gtx layout.Context) layout.Dimensions {
				return material.Button(th, &amp;s.btn, "Multiply by 10").Layout(gtx)
			})
		}),
	)
}

</code></pre>

<pre data-run="wasm" data-pkg="list" data-size="200x200"></pre>

<h2>User input</h2>

<p>Perhaps the most useful effect of state minimization is the
elimination of event callbacks. Callbacks are the retained mode answer
to the question: given an input event such as a mouse click, where and
how should it be delivered? In Gio’s approach filters and unique
handler keys replace callbacks for convenient distribution of events
among widgets.</p>

<p>The following <a href="https://eliasnaur.com/include/files/checkbox/main.go">implementation</a> of a basic checkbox
demonstrates low-level input handling:</p>

<pre><code>type checkbox struct {
	checked bool
}

var boxes [10]checkbox

func draw(gtx layout.Context) {
	var children []layout.FlexChild
	for i := range boxes {
		box := &amp;boxes[i]
		children = append(children,
			layout.Rigid(func(gtx layout.Context) layout.Dimensions {
				return layout.UniformInset(unit.Dp(10)).Layout(gtx,
					box.layout,
				)
			}),
		)
	}
	layout.Flex{}.Layout(gtx, children...)
}

func (c *checkbox) layout(gtx layout.Context) layout.Dimensions {
	const size = 50

	// Process events using the key, c.
	for _, e := range gtx.Events(c) {
		if e, ok := e.(pointer.Event); ok {
			if e.Type == pointer.Press {
				c.checked = !c.checked
			}
		}
	}

	st := op.Save(gtx.Ops) // Save operation state.

	// Confine input to the area covered by the checkbox.
	pointer.Rect(image.Rectangle{Max: image.Point{
		X: size,
		Y: size,
	}}).Add(gtx.Ops)
	// Declare the filter with the key, c.
	pointer.InputOp{Tag: c, Types: pointer.Press}.Add(gtx.Ops)

	col := color.NRGBA{A: 0xff, R: 0xff} // Red.
	if c.checked {
		col = color.NRGBA{A: 0xff, G: 0xff} // Green.
	}

	// Draw checkbox. Red for unchecked, green for checked.
	paint.ColorOp{Color: col}.Add(gtx.Ops)
	clip.Rect{
		Max: image.Point{
			X: size,
			Y: size,
		},
	}.Add(gtx.Ops)
	paint.PaintOp{}.Add(gtx.Ops)

	st.Load() // Restore operation state.

	// Specify layout dimensions.
	return layout.Dimensions{
		Size: image.Point{
			X: size, Y: size,
		},
	}
}

</code></pre>

<pre data-run="wasm" data-pkg="checkbox" data-size="200x100"></pre>

<p>First, notice the simple interface of the checkbox; input handling,
drawing and layout are all contained in a single method.</p>

<p>Second, the input protocol. To separate events belonging to different
widgets, handler keys that uniquely identify the handlers are used.
Keys must be declared in the previous frame, along with any predicates
on the input (hit area for pointer input).</p>

<p>Finally, the convenience. The program is free to process events
anywhere during the frame, and there is no callback or state to
unregister. Key declarations are automatically discarded before
the beginning of each frame.</p>

<h2>Resources</h2>

<ul>
<li><a href="https://www.youtube.com/watch?v=Z1qyvQsjK5Y">Casey Muratori’s presentation</a></li>
<li><a href="https://github.com/ocornut/imgui">Dear ImGui C++ library</a></li>
</ul>




<h2>Sponsoring</h2>

<p>
I work on open source projects such as <a href="https://gioui.org/">Gio</a>,
supported by sponsorships. If you find my work useful, please consider
<a href="https://eliasnaur.com/sponsor">sponsoring me</a>.
</p>


			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A lowering strategy for control effects in Rust (132 pts)]]></title>
            <link>https://www.abubalay.com/blog/2024/01/14/rust-effect-lowering</link>
            <guid>39005780</guid>
            <pubDate>Mon, 15 Jan 2024 20:38:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.abubalay.com/blog/2024/01/14/rust-effect-lowering">https://www.abubalay.com/blog/2024/01/14/rust-effect-lowering</a>, See on <a href="https://news.ycombinator.com/item?id=39005780">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
					<header>
	
	<p>January 14, 2024</p>
</header>

<p>The Rust language has incrementally grown a set of patterns to support <em>control-flow effects</em> including error handling, iteration, and asynchronous I/O. In <a href="https://without.boats/blog/the-registers-of-rust/">The registers of Rust</a>, boats lays out four aspects of this pattern shared by Rust’s three effects. Today these effects are typically used in isolation, or at most combined in bespoke ways, but the Rust project has been working on ways to integrate them more deeply with each other, such as <a href="https://github.com/rust-lang/rust/pull/118420"><code><span>async</span> <span>gen</span></code> blocks</a>.</p>

<p>The theory of algebraic effects and handlers has explored this design space and offers answers to many of the questions that the Rust project has encountered during this work. This post will relate the patterns employed by Rust to the terminology and semantics of effects, to help build a shared vocabulary and understanding of the implications of combining multiple effects.</p>

<p>This connection suggests an API pattern that can be instantiated for arbitrary combinations of effects. It generalizes Rust’s existing <code><span>Iterator</span></code> and <code><span>Future</span></code> traits in a way that supports existing Rust idioms while remaining a zero-cost abstraction by construction. (In other words, it works the same way as a specialized hand-written version, with no extra heap allocation or indirection.) It is also forward-compatible with, but does not require, hypothetical features like <code><span>async</span> <span>Drop</span></code>, (un)pinning, lending, or effect polymorphism.</p>

<h3 id="some-definitions-and-how-they-apply-to-rust">Some definitions and how they apply to Rust</h3>

<p>Consider the platonic concept of a “function,” independent of programming language. At this level, the idea of a function is defined primarily by how it interacts with the rest of the program, rather than by any particular syntax or implementation strategy. That is, when we call something a function, we are talking about a sub-program that can be applied to some argument values, at which point its parameters are bound to those values, and it runs to produce a result.</p>

<p>Algebraic effects are a similarly abstract idea. Where functions are defined in terms of parameters and application, effects are defined in terms of effect operations and handlers. Performing one of these operations suspends execution and transfers control flow to a handler somewhere up the call stack. The handler receives a first-class value representing the suspended computation (a “continuation”), which can be used to transfer control flow back and resume execution after the operation.</p>

<blockquote>
  <h4 id="type-and-effect-systems">Type and effect systems</h4>

  <p>Effects and functions are both purely dynamic constructs. They can exist entirely without types, as in dynamically typed languages. However, effectful languages with a type system do often extend it to a “type and effect system” that tracks the set of effect operations each sub-program may perform. One reason to do this is to ensure that there is always an appropriate handler available when an operation is performed. Another reason is to drive code generation, potentially producing more efficient output when the compiler knows precisely which interactions are possible. However, this post focuses on the dynamic aspect of effects.</p>
</blockquote>

<p>An effect can be described with a signature that specifies how values are passed back and forth between the effectful computation and its handler. For example, we might invent a notation where effect operations look like functions:</p>

<div><pre><code><span>effect</span> <span>my_effect</span> <span>{</span>
    <span>operation_x</span><span>(</span><span>A</span><span>)</span> <span>-&gt;</span> <span>B</span><span>;</span>
<span>}</span>
</code></pre></div>

<p>The effectful computation performs <code><span>operation_x</span></code> by supplying an <code><span>A</span></code>. The handler receives this <code><span>A</span></code>, and to resume the computation it supplies a <code><span>B</span></code>, which appears as the result of <code><span>operation_x</span></code>. In our notation, this process looks like this:</p>

<div><pre><code><span>fn</span> <span>my_computation</span><span>()</span> <span>-&gt;</span> <span>C</span> <span>{</span>
    <span>let</span> <span>b</span><span>:</span> <span>B</span> <span>=</span> <span>operation_x</span><span>(</span><span>A</span> <span>{</span> <span>...</span> <span>});</span>

    <span>C</span> <span>{</span> <span>...</span> <span>}</span>
<span>}</span>

<span>fn</span> <span>main</span><span>()</span> <span>{</span>
    <span>handle</span> <span>my_computation</span><span>()</span> <span>{</span>
        <span>// The computation has performed an operation:</span>
        <span>operation_x</span><span>(</span><span>resume</span><span>,</span> <span>a</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>resume</span><span>(</span><span>B</span> <span>{</span> <span>...</span> <span>})</span> <span>}</span>

        <span>// The computation has completed:</span>
        <span>return</span><span>(</span><span>c</span><span>)</span> <span>=&gt;</span> <span>{}</span>
    <span>}</span>
<span>}</span>
</code></pre></div>

<p>An effectful computation like this is a running sub-program that performs a sequence of effect operations. Importantly, for each operation in this sequence, the handler is free to choose when to resume the computation, and even whether to resume it at all. This is what distinguishes effect handlers from first class functions that must always resume their caller (or diverge).</p>

<p>By desugaring Rust programs into our notation, we can map Rust’s concrete effects to these abstract definitions. This is not any kind of proposal for Rust itself—merely a concise way to describe Rust’s behavior, before we consider its implementation.</p>

<p>Here is the signature of Rust’s iteration effect:</p>

<div><pre><code><span>effect</span> <span>gen</span><span>&lt;</span><span>Item</span><span>&gt;</span> <span>{</span>
    <span>yield</span><span>(</span><span>Item</span><span>)</span> <span>-&gt;</span> <span>();</span>
<span>}</span>
</code></pre></div>

<p>The proposed <code><span>yield</span></code> operator is its one operation. It passes an <code><span>Item</span></code> to the handler, which resumes it with a <code><span>()</span></code>. The <code><span>for</span></code> loop is Rust’s dedicated syntax for handling this effect. Here is its desugaring:</p>

<div><pre><code><span>for</span> <span>item</span> <span>in</span> <span>some_iter</span><span>()</span> <span>{</span>
    <span>loop_body</span><span>(</span><span>item</span><span>);</span>
<span>}</span>
</code></pre></div>

<div><pre><code><span>handle</span> <span>some_iter</span><span>()</span> <span>{</span>
    <span>yield</span><span>(</span><span>resume</span><span>,</span> <span>item</span><span>)</span> <span>=&gt;</span> <span>{</span>
        <span>loop_body</span><span>(</span><span>item</span><span>);</span>
        <span>resume</span><span>(())</span>
    <span>}</span>
    <span>return</span><span>(())</span> <span>=&gt;</span> <span>{}</span>
<span>}</span>
</code></pre></div>

<p>The handler may choose not to resume the computation by <code><span>break</span></code>ing out of the loop. It may also choose to resume a different computation first, as with the <code><span>zip</span></code> combinator. Rust’s choice of external iteration is equivalent to the first-class control flow of algebraic effects.</p>

<p>Here is the signature of Rust’s failure effect:</p>

<div><pre><code><span>effect</span> <span>try</span><span>&lt;</span><span>E</span><span>&gt;</span> <span>{</span>
    <span>throw</span><span>(</span><span>E</span><span>)</span> <span>-&gt;</span> <span>!</span><span>;</span>
<span>}</span>
</code></pre></div>

<p>The computation passes an error <code><span>E</span></code> to the handler, which never resumes the computation. Rust has no dedicated syntax just for handling this effect, but it does have the <code><span>?</span></code> operator.</p>

<p>At the abstract level, the reason for this comes from how Rust chooses the boundary of a suspendable computation. Typical languages with effects treat the whole chain of stack frames between handler and operation as a single computation to be suspended and resumed all at once—for example, this is how exceptions (which share this effect signature) work in other languages. Rust instead treats individual function bodies and blocks as distinct computations to be handled individually.</p>

<p>To make this convenient, the <code><span>?</span></code> operator is used to <em>propagate</em> this effect across a chain of computations, until it reaches an actual handler. It behaves as a sort of no-op handler that immediately re-performs the effect:</p>



<div><pre><code><span>handle</span> <span>try_work</span><span>()</span> <span>{</span>
    <span>// Propagate the `try` effect by forwarding `throw` operations in `try_work`.</span>
    <span>throw</span><span>(</span><span>resume</span><span>,</span> <span>e</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>throw</span><span>(</span><span>e</span><span>)</span> <span>}</span>
    <span>return</span><span>(</span><span>x</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>x</span> <span>}</span>
<span>}</span>
</code></pre></div>

<p>The signature of Rust’s <code><span>async</span></code> effect is slightly more obscured, because of its flexibility for interacting with arbitrary external events. One possibility would be to give it multiple operations, like this:</p>

<div><pre><code><span>effect</span> <span>async</span> <span>{</span>
    <span>read</span><span>(</span><span>File</span><span>,</span> <span>&amp;</span><span>mut</span> <span>[</span><span>u8</span><span>]);</span>
    <span>write</span><span>(</span><span>File</span><span>,</span> <span>&amp;</span><span>[</span><span>u8</span><span>]);</span>
    <span>// ...</span>
<span>}</span>
</code></pre></div>

<p>However, this makes the handler responsible for implementing all these operations, while in Rust the set is open for extension. (It also ignores its interaction with the failure effect, addressed below.) A more precise signature, adapted from <a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2017/05/asynceffects-msr-tr-2017-21.pdf">Structured Asynchrony with Algebraic Effects</a>, looks like this:</p>

<div><pre><code><span>effect</span> <span>async</span> <span>{</span>
    <span>sleep</span><span>(</span><span>impl</span> <span>FnOnce</span><span>(</span><span>&amp;</span><span>Waker</span><span>))</span> <span>-&gt;</span> <span>();</span>
<span>}</span>
</code></pre></div>

<p>Now the computation supplies the handler with a callback that arranges for the <code><span>Waker</span></code> to be signaled when the I/O completes. The <code><span>.await</span></code> operator is, like <code><span>?</span></code>, used for propagation:</p>



<div><pre><code><span>handle</span> <span>async_work</span><span>()</span> <span>{</span>
    <span>// Propagate the `async` effect by forwarding `sleep` operations in `async_work`.</span>
    <span>sleep</span><span>(</span><span>resume</span><span>,</span> <span>schedule</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>resume</span><span>(</span><span>sleep</span><span>(</span><span>schedule</span><span>))</span> <span>}</span>
    <span>return</span><span>(</span><span>x</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>x</span> <span>}</span>
<span>}</span>
</code></pre></div>

<h3 id="combining-effects">Combining effects</h3>

<p>So far we have only considered computations with a single kind of effect, but many computations can perform multiple kinds of effects. For example, an iterator may perform some asynchronous I/O to produce its output, or an asynchronous computation may fail. The abstract definition of effects accommodates this without any trouble—operations from different effects simply transfer control to different handlers.</p>

<p>As a result, the combined effects of a computation form a flat, unordered set. This is an extremely useful property, because it means programs can deal with each effect uniformly and in isolation, regardless of how they are composed. Adding a new effect to a computation need not change how the rest of the computation is written, nor how its other effects are handled. This kind of portability is one of the Rust project’s high-level goals for <code><span>async</span></code> (i.e. it is a generalization of portability between sync and async) making algebraic effects an attractive way to think about this language feature.</p>

<p>Consider the combination of <code><span>async</span></code> and <code><span>gen</span></code>. The first effect is handled by an executor while the second is handled by a <code><span>for</span></code> loop. The two handlers can be specified in either order, without changing anything about the computation, which freely interleaves <code><span>.await</span></code>s and <code><span>yield</span></code>s. For example, here is a desugaring for the proposed <code><span>for</span> <span>await</span></code> loop, handling the <code><span>gen</span></code> effect and propagating the <code><span>async</span></code> effect:</p>

<div><pre><code><span>for</span> <span>await</span> <span>item</span> <span>in</span> <span>some_async_iter</span><span>()</span> <span>{</span>
    <span>loop_body</span><span>(</span><span>item</span><span>);</span>
<span>}</span>
</code></pre></div>

<div><pre><code><span>handle</span> <span>(</span><span>handle</span> <span>some_async_iter</span><span>()</span> <span>{</span>
    <span>yield</span><span>(</span><span>resume</span><span>,</span> <span>item</span><span>)</span> <span>=&gt;</span> <span>{</span>
        <span>loop_body</span><span>(</span><span>item</span><span>);</span>
        <span>resume</span><span>(())</span>
    <span>}</span>
    <span>return</span><span>(())</span> <span>=&gt;</span> <span>{}</span>
<span>})</span> <span>{</span>
    <span>sleep</span><span>(</span><span>resume</span><span>,</span> <span>schedule</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>resume</span><span>(</span><span>sleep</span><span>(</span><span>schedule</span><span>))</span> <span>}</span>
    <span>return</span><span>(())</span> <span>=&gt;</span> <span>{}</span>
<span>}</span>
</code></pre></div>

<p>Conversely, here is a combinator that converts an asynchronous iterator to a synchronous one by handling the <code><span>async</span></code> effect and propagating the <code><span>gen</span></code> one:</p>

<div><pre><code><span>handle</span> <span>(</span><span>handle</span> <span>some_async_iter</span><span>()</span> <span>{</span>
    <span>sleep</span><span>(</span><span>resume</span><span>,</span> <span>schedule</span><span>)</span> <span>=&gt;</span> <span>{</span>
        <span>/* ... block_on ... */</span>
        <span>resume</span><span>(())</span>
    <span>}</span>
    <span>return</span><span>(())</span> <span>=&gt;</span> <span>{}</span>
<span>})</span> <span>{</span>
    <span>yield</span><span>(</span><span>resume</span><span>,</span> <span>item</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>resume</span><span>(</span><span>yield</span><span>(</span><span>item</span><span>))</span> <span>}</span>
    <span>return</span><span>(())</span> <span>=&gt;</span> <span>{}</span>
<span>}</span>
</code></pre></div>

<p>Both of these can also be written with the opposite handler nesting, with the propagating handler on the inside and the non-propagating handler on the outside, without changing behavior. Handling one effect merely produces a larger computation with that effect removed from its set.</p>

<p>This commutativity has an important implication for how these imaginary <code><span>handle</span></code> expressions are evaluated. A good place to see this is the combination of <code><span>async</span></code> and <code><span>try</span></code>. An API like Tokio’s <a href="https://docs.rs/tokio/latest/tokio/io/trait.AsyncReadExt.html#method.read"><code><span>AsyncReadExt</span><span>::</span><span>read</span></code></a> may perform either of the <code><span>sleep</span></code> or <code><span>throw</span></code> operations. It is tempting to think in terms of an inherent layering, with an outer <code><span>Future</span></code> driven to completion to reach an inner <code><span>Result</span></code>, and indeed this is the only way to propagate these effects today: <code><span>f</span><span>.read</span><span>(</span><span>buf</span><span>)</span><span>.await</span><span>?</span></code>. But this restriction is merely an artifact of how Rust lowers these effects, not something dictated by the effects themselves. For example, here is a desugaring for <code><span>f</span><span>.read</span><span>(</span><span>buf</span><span>)</span><span>?</span><span>.await</span></code>:</p>

<div><pre><code><span>handle</span> <span>(</span><span>handle</span> <span>f</span><span>.read</span><span>(</span><span>buf</span><span>)</span> <span>{</span>
    <span>throw</span><span>(</span><span>resume</span><span>,</span> <span>e</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>resume</span><span>(</span><span>throw</span><span>(</span><span>e</span><span>))</span> <span>}</span>
    <span>return</span><span>(</span><span>len</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>len</span> <span>}</span>
<span>})</span> <span>{</span>
    <span>sleep</span><span>(</span><span>resume</span><span>,</span> <span>schedule</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>resume</span><span>(</span><span>sleep</span><span>(</span><span>schedule</span><span>))</span> <span>}</span>
    <span>return</span><span>(</span><span>len</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>len</span> <span>}</span>
<span>}</span>
</code></pre></div>

<p>The key here is that the scrutinee of a <code><span>handle</span></code> expression is not fully evaluated before the <code><span>handle</span></code> expression itself, the way a <code><span>match</span></code> scrutinee would be. Instead, the scrutinee and the <code><span>handle</span></code> arms are evaluated together, switching back and forth for effect operations. The <code><span>sleep</span></code> operation performed by <code><span>read</span></code> crosses the inner <code><span>handle</span></code> expression to reach the outer one in the same way that a <code><span>break</span></code> crosses any number of containing expressions to reach a loop, or a <code><span>return</span></code> crosses its containing expressions to reach a <code><span>fn</span></code>.</p>

<p>In most contexts, effectful computations in Rust “decay” to their lowering, such that expressions like <code><span>async</span> <span>{</span> <span>42</span> <span>}</span></code> or a call to an <code><span>async</span> <span>fn</span><span>()</span> <span>-&gt;</span> <span>i32</span></code> have type <code><span>impl</span> <span>Future</span><span>&lt;</span><span>Output</span> <span>=</span> <span>i32</span><span>&gt;</span></code> rather than <code><span>i32</span></code>. But as the scrutinee of a <code><span>handler</span></code> for the <code><span>async</span></code> effect, these expressions remain un-decayed, and the outermost handler expression that removes the last effect becomes a non-effectful, non-decaying computation. Properly handling multiple effects means deferring this decay until the point that the program actually demands it, for a containing expression that is not a handler.</p>

<blockquote>
  <p>If this deferred behavior feels strange or magical, consider the behavior of place and value expressions (also called lvalues and rvalues). A place expression like <code><span>obj</span><span>.field</span></code>, <code><span>*</span><span>expr</span></code>, or <code><span>slice</span><span>[</span><span>i</span><span>]</span></code> does not immediately do anything beyond computing a location. The choice of what to do with that location is deferred until the containing expression demands a specific behavior: an address-of operator <code><span>&amp;</span><span>expr</span></code> will materialize the location as a reference; a call <code><span>f</span><span>(</span><span>expr</span><span>)</span></code> will move from the location; an assignment <code><span>expr</span> <span>=</span> <span>v</span></code> will write to the location. Like reading vs writing, the choice of running vs lowering is a property of how the expression is used.</p>
</blockquote>

<h3 id="how-rust-implements-effects">How Rust implements effects</h3>

<p>Rust implements effectful computations by lowering them to stackless coroutines. (More precisely, this is Rust’s most general strategy; some effects use a subset or specialization of this approach.) The compiler transforms each computation into an object to hold its state while suspended, with a method to resume the computation. In Rust this object is often called a “state machine,” but to avoid ambiguity I will use the more specific term <em>coroutine frame.</em></p>

<p>In <a href="https://without.boats/blog/why-async-rust/">Why async rust?</a>, boats covers the history of and motivation for this choice: while typical implementations of effects use continuation passing or stackful coroutines, these implementations also introduce allocation and indirection that Rust cannot afford. Rust’s coroutine frames exhibit two key characteristics that satisfy these requirements:</p>
<ul>
  <li>They are ordinary value types, with a statically-knowable layout and statically-dispatchable resumption method, that can be composed into into larger computations that are themselves ordinary value types. The entire chain of frames, from handler to effect operation, uses only a single allocation which may come from anywhere—the heap, the stack, a global, a struct field, etc.</li>
  <li>They are mutated in-place, giving a stable address to the local variables of the computation. If the coroutine frame were re-constructed or moved at each suspension, then live references to locals would force those locals to live in a separate allocation despite the previous point.</li>
</ul>

<p>Rust’s lowering gives each effect a trait method corresponding to its signature. Effectful computations (encoded as coroutine frames) implement the trait; handlers invoke the method repeatedly and match on the result. Thus, an effect signature with operation <code><span>e</span><span>(</span><span>A</span><span>)</span> <span>-&gt;</span> <span>B</span></code> becomes a trait method <code><span>fn</span> <span>m</span><span>(</span><span>Pin</span><span>&lt;&amp;</span><span>mut</span> <span>Self</span><span>&gt;</span><span>,</span> <span>B</span><span>)</span> <span>-&gt;</span> <span>Either</span><span>&lt;</span><span>A</span><span>,</span> <span>Output</span><span>&gt;</span></code> to be invoked until the computation completes by returning <code><span>Output</span></code>. This picture is complicated by three factors:</p>
<ul>
  <li>This method is also used to kick off the computation before it has performed any effects. The <code><span>B</span></code> parameter does not make sense for this initial call. Because of this, Rust iterators and futures are said to be “lazy,” while failure (with <code><span>B</span> <span>=</span> <span>!</span></code>) cannot use this method for its initial call and is “eager.”</li>
  <li>Computations with the <code><span>async</span></code> effect do not literally pass an <code><span>impl</span> <span>FnOnce</span><span>(</span><span>&amp;</span><span>Waker</span><span>)</span></code> to the handler. Instead, the handler preemptively supplies a <code><span>&amp;</span><span>Waker</span></code> as an additional parameter to the resumption method, and computations are expected to use it before transferring control to the handler. This relies on the point above—the initial part of the computation needs a <code><span>&amp;</span><span>Waker</span></code> just as later parts do.</li>
  <li>The trait for the iteration effect was designed long before the language added support for self-referential coroutine frames. The <code><span>Pin</span><span>&lt;&amp;</span><span>mut</span> <span>Self</span><span>&gt;</span></code> parameter becomes <code><span>&amp;</span><span>mut</span> <span>self</span></code> in this case.</li>
</ul>

<p>The <code><span>Either</span><span>&lt;</span><span>A</span><span>,</span> <span>Output</span><span>&gt;</span></code> return type is also instantiated to a distinct <code><span>enum</span></code> for each effect, giving us the current form of Rust’s three effect lowerings as specializations of this general recipe:</p>

<div><pre><code><span>trait</span> <span>Iterator</span> <span>{</span>
    <span>type</span> <span>Item</span><span>;</span>

    <span>// isomorphic to Either&lt;Item, ()&gt;</span>
    <span>fn</span> <span>next</span><span>(</span><span>&amp;</span><span>mut</span> <span>self</span><span>)</span> <span>-&gt;</span> <span>Option</span><span>&lt;</span><span>Self</span><span>::</span><span>Item</span><span>&gt;</span><span>;</span>
<span>}</span>
</code></pre></div>

<div><pre><code><span>trait</span> <span>Future</span> <span>{</span>
    <span>type</span> <span>Output</span><span>;</span>

    <span>// isomorphic to Either&lt;impl FnOnce(&amp;Waker), Output&gt;</span>
    <span>fn</span> <span>poll</span><span>(</span><span>Pin</span><span>&lt;&amp;</span><span>mut</span> <span>Self</span><span>&gt;</span><span>,</span> <span>&amp;</span><span>mut</span> <span>Context</span><span>&lt;</span><span>'_</span><span>&gt;</span><span>)</span> <span>-&gt;</span> <span>Poll</span><span>&lt;</span><span>Self</span><span>::</span><span>Output</span><span>&gt;</span><span>;</span>
<span>}</span>
</code></pre></div>

<div><pre><code><span>// isomorphic to Either&lt;E, Output&gt;</span>
<span>fn</span> <span>/* ... */</span> <span>-&gt;</span> <span>Result</span><span>&lt;</span><span>Output</span><span>,</span> <span>E</span><span>&gt;</span><span>;</span>
</code></pre></div>

<blockquote>
  <h4 id="an-alternate-history-zero-cost-continuation-passing">An alternate history: zero-cost continuation passing</h4>

  <p>With deeper language and compiler integration, a language could bring the efficiency of stackless coroutines to continuation passing style. The relevant insight is that the traditional call stack is already a form of continuation passing, restricted with linearity to enable contiguous allocation and in-place mutation. Restricting continuations further to a static depth makes their layout statically-knowable, in the same way as a chain of coroutine frames.</p>

  <p>Each suspension point can be lowered to a distinct closure-like anonymous struct holding live values, with a dynamically-sized tail representing its chain of callers. Each struct’s <code><span>resume</span></code> method ends with an adjustment to the continuation followed by a tail-call to a callee, a caller, or a handler. The handler supplies a fixed-size space from which to allocate these objects, and each leaf suspension point lends its object back to the handler.</p>

  <p>This approach has several nice properties:</p>
  <ul>
    <li>Resumption bypasses the chain of callers, jumping directly to the leaf frame.</li>
    <li>Propagation operators like <code><span>?</span></code> or <code><span>.await</span></code> do not generate any glue code.</li>
    <li><code><span>Waker</span></code>s are not constructed or passed around until an effect is performed.</li>
    <li>The type system prevents handlers from resuming completed computations.</li>
  </ul>

  <p>Rust’s coroutine frames are essentially an emulation of this approach, necessitated by the language’s lack of tail calls. The complications above are part of this emulation, not essential to zero-cost effects.</p>
</blockquote>

<h3 id="a-detour-combining-effects-by-layering">A detour: combining effects by layering</h3>

<p>Because these lowerings are so specialized, it is not always obvious how they should be combined. Haskell lowers effects in a way that is related to Rust: effectful computations are defined in terms of an ordinary in-language interface, making the lowering observable to other parts of the program. This interface, the <code><span>Monad</span></code> typeclass, is implemented by the handler rather than the computation, and has what Rust would call an <code><span>and_then</span></code> method.</p>

<blockquote>
  <p>One other interesting detail that is not directly relevant here: while Rust’s effectful computations can be reused with any handler, monadic programs essentially bake in their choice of handler by default. It is possible to write them in a way that does not do this, e.g. by using a particular implementation of the <code><span>Monad</span></code> typeclass (known as the “free monad”) that saves all the invocations of <code><span>and_then</span></code> in an AST-like structure to be interpreted later by an arbitrary handler.</p>
</blockquote>

<p>For computations with multiple effects, Haskell makes this <code><span>and_then</span></code> method generic over a “wrapper” monad representing an outer handler. These generics, or “monad transformers,” can then be nested in arbitrary ways. Unfortunately, this introduces an arbitrary ordering to the set of effects, which infects both computations and handlers. Handlers must implement a <code><span>lift</span></code> method alongside their generic <code><span>and_then</span></code>, and computations must use the appropriate number of <code><span>lift</span></code> calls when performing an outer effect operation.</p>

<p>Notably, this layering approach is very similar to the one proposed by Rust’s keyword generics initiative. There, traits like <code><span>Iterator</span></code> would become generic over any additional effects their method might perform, supporting instantiations like <code><span>async</span> <span>Iterator</span></code>. This has a similar unfortunate implication for handlers, which must use an appropriate number of nested <code><span>map</span></code> calls to get at the representation of the effect they care about.</p>

<p>This layering also interferes with Rust’s lowering of coroutine frames. While Haskell’s monadic computations pass a new closure to the handler for each place they can resume, Rust relies on these continuations (represented as coroutine frames) being used linearly so it can mutate them in-place. When the computation is lowered one effect at a time, each effect is forced to produce a separate coroutine frame to satisfy the API. Each frame must borrow from the next, and must be reconstructed after any of the frames it borrows from is resumed.</p>

<p>When a coroutine frame is used as a trait object, things get even worse. An effectful resumption method returns an associated type for the next frame in the chain—where should it be allocated? The number of resumption calls increases from one per effect operation to, at worst, the total number of effects <em>times</em> the number of effect operations—are these all dynamically dispatched? It is possible to mitigate these costs by reserving enough space for the whole chain of frames up front, and simultaneously monomorphizing a new method that dispatches the chain of resumptions and reconstructions statically, but this is not something we can ever expect the compiler to do automatically, because it changes observable behavior and the type of the trait object.</p>

<p>Do we at least get any benefits in exchange for dealing with this complexity everywhere? No—neither the computation nor the handler can really do anything with the layering, because it carries no semantic meaning and is purely an artifact of the lowering. Conversely, if we want it for any reason, we can always recover this layering from an un-layered lowering, by exploiting the ability to handle algebraic effects in any order we choose! For example, we can produce an <code><span>async</span> <span>fn</span> <span>next</span></code> from a lowered <code><span>poll_next</span></code>, and vice versa produce a <code><span>poll_next</span></code> from a hand-written <code><span>async</span> <span>fn</span> <span>next</span></code>, with just a few lines of code.</p>

<blockquote>
  <p>This is not to say that effectful traits are necessarily a bad idea in general. Traits like <code><span>Read</span></code> and <code><span>Write</span></code> do not represent coroutine frames, and thus do not run into these problems in quite the same way. But this post is about how effects are lowered, not general API design.</p>
</blockquote>

<p>Precisely because of this sort of type tetris, the Haskell ecosystem has grown several libraries designed to represent effects without this layering, and the Haskell compiler recently <a href="https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7942">gained support</a> for delimited continuations to make these kinds of libraries more efficient. Rust should learn from this work and skip the layering.</p>

<h3 id="lowering-combined-effects">Lowering combined effects</h3>

<p>A running computation produces a sequence of effects drawn from a set. Its handler (or equivalently, set of handlers) must be prepared to accept any of them. Rust’s single-effect lowering already uses an <code><span>enum</span></code> with one variant for the effect operation and another to signal that the operation has completed. This naturally extends to a larger <code><span>enum</span></code> with one variant for each effect, plus one for the initial call and final return.</p>

<p>Given a set of effect signatures, their combined lowering looks like this:</p>

<div><pre><code><span>effect</span> <span>eff1</span> <span>{</span> <span>op1</span><span>(</span><span>A</span><span>)</span> <span>-&gt;</span> <span>B</span><span>;</span> <span>}</span>
<span>effect</span> <span>eff2</span> <span>{</span> <span>op2</span><span>(</span><span>C</span><span>)</span> <span>-&gt;</span> <span>D</span><span>;</span> <span>}</span>
<span>// ...</span>

<span>trait</span> <span>/* ... */</span> <span>{</span>
    <span>type</span> <span>Output</span><span>;</span>
    <span>fn</span> <span>resume</span><span>(</span><span>Pin</span><span>&lt;&amp;</span><span>mut</span> <span>Self</span><span>&gt;</span><span>,</span> <span>Either</span><span>&lt;</span><span>(),</span> <span>B</span><span>,</span> <span>D</span><span>&gt;</span><span>)</span> <span>-&gt;</span> <span>Either</span><span>&lt;</span><span>A</span><span>,</span> <span>C</span><span>,</span> <span>Self</span><span>::</span><span>Output</span><span>&gt;</span><span>;</span>
<span>}</span>
</code></pre></div>

<blockquote>
  <p>This does lean further into the design choice not to enforce appropriate use of this protocol at the type level. Just as it is possible to call <code><span>Iterator</span><span>::</span><span>next</span></code> after it has returned <code><span>None</span></code>, it is possible to pass the wrong variant to <code><span>resume</span></code>. It is, of course, possible to prevent this with increasingly-elaborate type system machinery like ZST tokens and existential or generative lifetimes, but that is really beside the point here.</p>
</blockquote>

<p>The <code><span>AsyncIterator</span></code> (formerly known as <code><span>Stream</span></code>) trait which combines the <code><span>async</span></code> and <code><span>gen</span></code> effects is, once again, a specialization of this pattern:</p>

<div><pre><code><span>trait</span> <span>AsyncIterator</span> <span>{</span>
    <span>type</span> <span>Item</span><span>;</span>
    <span>fn</span> <span>poll_next</span><span>(</span><span>Pin</span><span>&lt;&amp;</span><span>mut</span> <span>Self</span><span>&gt;</span><span>,</span> <span>&amp;</span><span>mut</span> <span>Context</span><span>&lt;</span><span>'_</span><span>&gt;</span><span>)</span> <span>-&gt;</span> <span>Poll</span><span>&lt;</span><span>Option</span><span>&lt;</span><span>Self</span><span>::</span><span>Item</span><span>&gt;&gt;</span><span>;</span>
<span>}</span>
</code></pre></div>

<p>It can be tempting to read a return type like <code><span>Poll</span><span>&lt;</span><span>Option</span><span>&lt;</span><span>Item</span><span>&gt;&gt;</span></code> as more nesting, especially when Rust programmers are so used to simply wrapping <code><span>Output</span></code> in a <code><span>Result</span></code> when writing the <code><span>try</span></code> lowering by hand, but this is a red herring. <code><span>Poll</span><span>&lt;</span><span>Option</span><span>&lt;</span><span>Item</span><span>&gt;&gt;</span></code> is isomorphic to an enum with the three variants <code><span>Pending</span></code> (the <code><span>sleep</span></code> operation), <code><span>Some</span><span>(</span><span>Item</span><span>)</span></code> (the <code><span>yield</span></code> operation), and <code><span>None</span></code> (a completed computation). The general recipe is to add more variants, not to add more layers.</p>

<p>Similarly, <code><span>impl</span> <span>Future</span><span>&lt;</span><span>Output</span> <span>=</span> <span>Result</span><span>&gt;</span></code> has a return type <code><span>Poll</span><span>&lt;</span><span>Result</span><span>&lt;</span><span>Output</span><span>,</span> <span>E</span><span>&gt;&gt;</span></code> which is isomorphic to the three variants <code><span>Pending</span></code> (<code><span>sleep</span></code>), <code><span>Err</span><span>(</span><span>E</span><span>)</span></code> (<code><span>throw</span></code>), and <code><span>Ok</span><span>(</span><span>Output</span><span>)</span></code> (completion). Even <code><span>impl</span> <span>Iterator</span><span>&lt;</span><span>Item</span> <span>=</span> <span>Result</span><span>&gt;</span></code>’s return type <code><span>Option</span><span>&lt;</span><span>Result</span><span>&lt;</span><span>Item</span><span>,</span> <span>E</span><span>&gt;&gt;</span></code> is isomorphic to the three variants <code><span>Ok</span><span>(</span><span>Item</span><span>)</span></code> (<code><span>yield</span></code>), <code><span>Err</span><span>(</span><span>E</span><span>)</span></code> (<code><span>throw</span></code>), and <code><span>None</span></code> (completion), though this one collides with the type of an iterator yielding <code><span>Result</span></code>s.</p>

<p>This recipe is not merely a “god trait” that indiscriminately accumulates everything we need in one place. It is a more faithful representation of the commutative semantics of effects and handlers, which avoids the complexities that come from layering and restores the flexibility to handle effects without regard for where they sit in an irrelevant ordering.</p>

<p>Other variations we might want, like (un)pinning or lending, are not themselves effects, but aspects or modes of effects that involve the coroutine frame. If we extend our notation to include an explicit continuation type (analogous to an explicit receiver type like <code><span>&amp;</span><span>self</span></code>), we can express these variations as part of an effect’s signature.</p>

<p>For example, we might write the un-pinned iteration effect like this:</p>

<div><pre><code><span>effect</span> <span>gen</span><span>&lt;</span><span>Item</span><span>&gt;</span> <span>{</span>
    <span>yield</span><span>(</span><span>Item</span><span>)</span> <span>-&gt;</span> <span>(</span><span>&amp;</span><span>mut</span> <span>resume</span><span>,</span> <span>());</span>
<span>}</span>
</code></pre></div>

<p>Similarly, we might write a pinned, lending iteration effect like this:</p>

<div><pre><code><span>effect</span> <span>gen</span><span>&lt;</span><span>Item</span><span>&lt;</span><span>'a</span><span>&gt;&gt;</span> <span>{</span>
    <span>yield</span><span>&lt;</span><span>'a</span><span>&gt;</span><span>(</span><span>Item</span><span>&lt;</span><span>'a</span><span>&gt;</span><span>)</span> <span>-&gt;</span> <span>(</span><span>Pin</span><span>&lt;&amp;</span><span>'a</span> <span>mut</span> <span>resume</span><span>&gt;</span><span>,</span> <span>());</span>
<span>}</span>
</code></pre></div>

<p>Combining these continuation types calls for a different approach than adding variants. Because <code><span>Pin</span></code> guarantees that its target stays pinned, we can’t use an <code><span>enum</span></code> with <code><span>&amp;</span><span>mut</span> <span>self</span></code> and <code><span>Pin</span><span>&lt;&amp;</span><span>mut</span> <span>Self</span><span>&gt;</span></code> variants (though this might work in another language). Instead, we need a single receiver type that combines the restrictions of all the effects. If any of them are pinned, use <code><span>Pin</span></code>; if any of them are lending, add a lifetime. For example, this justifies the use of <code><span>Pin</span><span>&lt;&amp;</span><span>mut</span> <span>Self</span><span>&gt;</span></code> for async iterators—the iteration effect signature does not use pinning but the async one does.</p>

<p>Finally, the use of a single coroutine frame also simplifies the design of features like <code><span>async</span> <span>Drop</span></code> or <code><span>poll_progress</span></code>, which do interesting things to the effectful computation’s control flow graph. Where a chain of layered frames would require the cooperation of the handler to propagate these signals across the layers, the states of a single combined coroutine frame represent the whole control flow graph in one place.</p>

<h3 id="future-possibilities">Future possibilities</h3>

<p>One of the motivations for the keyword generics initiative to consider the layered approach is a desire to avoid a combinatorial explosion of traits. The un-layered lowering already reduces this number because it does not differentiate between orderings. But if necessary, it can go even further than the <code><span>async</span> <span>Iterator</span></code> approach by using more modest and more widely-applicable extensions to the language, many of which are already implemented on nightly or have been repeatedly proposed. Allow me to engage in some wild speculation and play fast and loose with syntax.</p>

<p>As Rust’s existing effect traits are already instantiations of the pattern described above, they could be given bridge <code><span>impl</span></code>s to or from a generic trait along the lines of the unstable <code><span>Coroutine</span></code>. Going further, they could be made into aliases of that trait, using something along the lines of the unstable trait alias feature. Doing this compatibly would additionally require the ability to <code><span>impl</span></code> a trait alias, as well as the ability to remap associated types and method names the way same aliases can remap generic parameters.</p>

<p>Is replacing a combinatorial explosion of traits with a combinatorial explosion of aliases good enough? Maybe! But the cosmetics of these aliases could be improved in a similar way to the <code><span>Fn</span></code> trait bound sugar. Instead of using names like <code><span>AsyncIterator</span></code>, the appropriate instantiation of the general trait could be referred to using its effect keywords. For example, <code><span>async</span> <span>gen</span><span>&lt;</span><span>I</span><span>&gt;</span> <span>()</span></code> would mean <code><span>AsyncIterator</span><span>&lt;</span><span>Item</span> <span>=</span> <span>I</span><span>&gt;</span></code> or equivalently <code><span>Coroutine</span><span>&lt;</span><span>Yield</span> <span>=</span> <span>Pending</span> <span>+</span> <span>Some</span><span>(</span><span>Item</span><span>)</span> <span>+</span> <span>None</span><span>&gt;</span></code>, while <code><span>try</span><span>&lt;</span><span>E</span><span>&gt;</span> <span>async</span> <span>T</span></code> would mean <code><span>Future</span><span>&lt;</span><span>Output</span> <span>=</span> <span>Result</span><span>&lt;</span><span>T</span><span>,</span> <span>E</span><span>&gt;&gt;</span></code> or equivalently <code><span>Coroutine</span><span>&lt;</span><span>Yield</span> <span>=</span> <span>Pending</span> <span>+</span> <span>Err</span><span>(</span><span>E</span><span>)</span> <span>+</span> <span>Ok</span><span>(</span><span>T</span><span>)</span><span>&gt;</span></code>. This treats all the effects uniformly, unlike <code><span>async</span> <span>Iterator</span></code> which singles one out as the base trait.</p>

<p>What about sharing combinators across multiple instantiations? This would involve being generic over some of the variants while specifying others concretely. We can do this with another language extension called open <code><span>enum</span></code>s, sometimes known as open polymorphic variants, and related to the existing <code><span>#[non_exhaustive]</span></code> feature. For example, here is <code><span>Iterator</span><span>::</span><span>map</span></code> generalized to any computation with the <code><span>yield</span></code> effect, using the notation <code><span>Ts</span><span>...</span></code> to declare an open <code><span>enum</span></code> generic parameter, and <code><span>A</span> <span>+</span> <span>Bs</span></code> to add a variant to one:</p>

<div><pre><code><span>trait</span> <span>Coroutine</span> <span>{</span>
    <span>type</span> <span>Resume</span><span>...</span><span>;</span>
    <span>type</span> <span>Yield</span><span>...</span><span>;</span>
    <span>type</span> <span>Output</span><span>;</span>
    <span>fn</span> <span>resume</span><span>(</span><span>Pin</span><span>&lt;&amp;</span><span>mut</span> <span>Self</span><span>&gt;</span><span>,</span> <span>()</span> <span>+</span> <span>Self</span><span>::</span><span>Resume</span><span>)</span> <span>-&gt;</span> <span>Self</span><span>::</span><span>Yield</span> <span>+</span> <span>Self</span><span>::</span><span>Output</span><span>;</span>
<span>}</span>

<span>impl</span><span>&lt;</span><span>I</span><span>:</span> <span>Coroutine</span><span>,</span> <span>F</span><span>,</span> <span>B</span><span>&gt;</span> <span>Coroutine</span> <span>for</span> <span>Map</span><span>&lt;</span><span>I</span><span>,</span> <span>F</span><span>&gt;</span> <span>where</span>
    <span>F</span><span>:</span> <span>FnMut</span><span>(</span><span>I</span><span>::</span><span>Item</span><span>)</span> <span>-&gt;</span> <span>B</span><span>,</span>
<span>{</span>
    <span>type</span> <span>Resume</span> <span>=</span> <span>I</span><span>::</span><span>Resume</span><span>;</span>
    <span>type</span> <span>Yield</span> <span>=</span> <span>Option</span><span>&lt;</span><span>B</span><span>&gt;</span><span>::</span><span>Some</span> <span>+</span> <span>I</span><span>::</span><span>Yield</span><span>;</span>
    <span>type</span> <span>Output</span> <span>=</span> <span>I</span><span>::</span><span>Output</span><span>;</span>

    <span>fn</span> <span>resume</span><span>(</span><span>self</span><span>:</span> <span>Pin</span><span>&lt;&amp;</span><span>mut</span> <span>Self</span><span>&gt;</span><span>,</span> <span>r</span><span>:</span> <span>()</span> <span>+</span> <span>Self</span><span>::</span><span>Resume</span><span>)</span> <span>-&gt;</span> <span>Self</span><span>::</span><span>Yield</span> <span>+</span> <span>Self</span><span>::</span><span>Output</span> <span>{</span>
        <span>match</span> <span>self</span><span>.project</span><span>()</span><span>.iter</span><span>.resume</span><span>(</span><span>r</span><span>)</span> <span>{</span>
            <span>Some</span><span>(</span><span>item</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>Some</span><span>((</span><span>self</span><span>.f</span><span>)(</span><span>item</span><span>))</span> <span>}</span>
            <span>y</span> <span>=&gt;</span> <span>{</span> <span>y</span> <span>}</span>
        <span>}</span>
    <span>}</span>
<span>}</span>
</code></pre></div>

<p>Another sense in which a function can be polymorphic over effects is to support effectful closures. Here is <code><span>Iterator</span><span>::</span><span>map</span></code> generalized in this way instead:</p>

<div><pre><code><span>impl</span><span>&lt;</span><span>I</span><span>:</span> <span>Iterator</span><span>,</span> <span>F</span><span>,</span> <span>B</span><span>:</span> <span>Coroutine</span><span>&gt;</span> <span>Coroutine</span> <span>for</span> <span>Map</span><span>&lt;</span><span>I</span><span>,</span> <span>F</span><span>&gt;</span> <span>where</span>
    <span>F</span><span>:</span> <span>FnMut</span><span>(</span><span>I</span><span>::</span><span>Item</span><span>)</span> <span>-&gt;</span> <span>B</span><span>,</span>
<span>{</span>
    <span>type</span> <span>Resume</span> <span>=</span> <span>()</span> <span>+</span> <span>B</span><span>::</span><span>Resume</span><span>;</span>
    <span>type</span> <span>Yield</span> <span>=</span> <span>Option</span><span>&lt;</span><span>B</span><span>::</span><span>Output</span><span>&gt;</span><span>::</span><span>Some</span> <span>+</span> <span>B</span><span>::</span><span>Yield</span><span>;</span>
    <span>type</span> <span>Output</span> <span>=</span> <span>Option</span><span>&lt;</span><span>B</span><span>::</span><span>Output</span><span>&gt;</span><span>::</span><span>None</span><span>;</span>

    <span>fn</span> <span>resume</span><span>(</span><span>self</span><span>:</span> <span>Pin</span><span>&lt;&amp;</span><span>mut</span> <span>Self</span><span>&gt;</span><span>,</span> <span>r</span><span>:</span> <span>()</span> <span>+</span> <span>Self</span><span>::</span><span>Resume</span><span>)</span> <span>-&gt;</span> <span>Self</span><span>::</span><span>Yield</span> <span>+</span> <span>Self</span><span>::</span><span>Output</span> <span>{</span>
        <span>let</span> <span>state</span> <span>=</span> <span>self</span><span>.project</span><span>()</span><span>.state</span><span>;</span>
        <span>match</span> <span>state</span> <span>{</span>
            <span>State</span><span>::</span><span>Done</span> <span>=&gt;</span> <span>{</span> <span>panic!</span><span>()</span> <span>}</span>
            <span>State</span><span>::</span><span>Iter</span> <span>=&gt;</span> <span>match</span> <span>self</span><span>.project</span><span>()</span><span>.iter</span><span>.next</span><span>()</span> <span>{</span>
                <span>None</span> <span>=&gt;</span> <span>{</span> <span>*</span><span>state</span> <span>=</span> <span>State</span><span>::</span><span>Done</span><span>;</span> <span>None</span> <span>}</span>
                <span>Some</span><span>(</span><span>item</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>*</span><span>state</span> <span>=</span> <span>State</span><span>::</span><span>Call</span><span>(</span><span>f</span><span>(</span><span>item</span><span>));</span> <span>self</span><span>.resume</span><span>(())</span> <span>}</span>
            <span>}</span>
            <span>State</span><span>::</span><span>Call</span><span>(</span><span>c</span><span>)</span> <span>=&gt;</span> <span>match</span> <span>c</span><span>.resume</span><span>(</span><span>r</span><span>)</span> <span>{</span>
                <span>item</span><span>:</span> <span>B</span><span>::</span><span>Output</span> <span>=&gt;</span> <span>{</span> <span>*</span><span>state</span> <span>=</span> <span>State</span><span>::</span><span>Iter</span><span>;</span> <span>Some</span><span>(</span><span>item</span><span>)</span> <span>}</span>
                <span>y</span> <span>=&gt;</span> <span>{</span> <span>y</span> <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
<span>}</span>
</code></pre></div>

<p>Of course, there is little reason to write either of these by hand when we have the ability to handle effects selectively, so here is a version generalized in both ways simultaneously, using one final language extension in the form of a <code><span>do</span></code> operator for propagating unknown effects:</p>

<div><pre><code><span>gen</span> <span>do</span> <span>{</span>
    <span>for</span> <span>do</span> <span>item</span> <span>in</span> <span>/* ... */</span> <span>{</span>
        <span>yield</span> <span>f</span><span>(</span><span>item</span><span>)</span><span>.do</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre></div>

<p>For good measure, here it is again using <code><span>handle</span></code> expressions:</p>

<div><pre><code><span>handle</span> <span>/* ... */</span> <span>{</span>
    <span>yield</span><span>(</span><span>resume</span><span>,</span> <span>item</span><span>)</span> <span>=&gt;</span> <span>handle</span> <span>f</span><span>(</span><span>item</span><span>)</span> <span>{</span>
        <span>eff</span><span>(</span><span>resume</span><span>,</span> <span>x</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>resume</span><span>(</span><span>eff</span><span>(</span><span>x</span><span>))</span> <span>}</span>
        <span>return</span><span>(</span><span>x</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>resume</span><span>(</span><span>yield</span><span>(</span><span>x</span><span>))</span> <span>}</span>
    <span>}</span>
    <span>eff</span><span>(</span><span>resume</span><span>,</span> <span>x</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>resume</span><span>(</span><span>eff</span><span>(</span><span>x</span><span>))</span> <span>}</span>
    <span>return</span><span>(</span><span>x</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>x</span> <span>}</span>
<span>}</span>
</code></pre></div>

<p>At this point, I am still unconvinced that this sort of generality is actually important for Rust. My point is rather that the un-layered effect lowering strategy (represented by <code><span>poll_next</span></code>) is forward-compatible with mechanisms for reducing trait proliferation, and indeed that it does this more directly than the layered strategy. This is what algebraic effects were designed for, after all.</p>

<h3 id="conclusion">Conclusion</h3>

<p>Algebraic effects are an attractive framework for designing these features of Rust, because they are more composable than approaches like monad transformers or effectful coroutine traits. Many of their affordances come from the way that effects are <em>commutative</em> and can be handled in any order. Languages like Haskell have already covered similar ground. We can learn from their experience to unblock features like <code><span>async</span> <span>gen</span></code> and <code><span>for</span> <span>await</span></code> now, while retaining a path toward greater flexibility.</p>


				</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Haiku OS: The Open Source BeOS You Can Daily Drive in 2024 (119 pts)]]></title>
            <link>https://hackaday.com/2024/01/15/haiku-os-the-open-source-beos-you-can-daily-drive-in-2024/</link>
            <guid>39005505</guid>
            <pubDate>Mon, 15 Jan 2024 20:14:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hackaday.com/2024/01/15/haiku-os-the-open-source-beos-you-can-daily-drive-in-2024/">https://hackaday.com/2024/01/15/haiku-os-the-open-source-beos-you-can-daily-drive-in-2024/</a>, See on <a href="https://news.ycombinator.com/item?id=39005505">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">
    

    <p><a href="#content">Skip to content</a></p><!-- #masthead -->

    <div id="content">
        <main id="main" role="main">

        
            
<article itemscope="" itemtype="http://schema.org/Article" id="post-655975">
    <!-- .entry-header -->

    <div itemprop="articleBody">
        <p>Haiku is one of those open source operating systems that seem to be both exceedingly well-known while flying completely under the radar. Part of this is probably due to it being an open source version and continuation of the Be Operating System (BeOS). Despite its strong feature set in the 1990s, BeOS never got much love in the wider computer market. Nevertheless, it has a strong community that after twenty-two years of development has now reached a point where you can daily drive it, <a href="https://www.youtube.com/watch?v=-NMDYT-hCOk" target="_blank">according to</a> the [Action Retro] channel on YouTube.</p>
<p>One point where <a href="https://www.haiku-os.org/" target="_blank">Haiku</a> definitely scores points is with the super-fast installation and boot. [Action Retro] demonstrates this on real hardware, and we can confirm that it boots very fast in VirtualBox on a low-end Intel N100-based host system as well. With the recently introduced QtWebEngine-based <a href="https://depot.haiku-os.org/#!/pkg/falkon/haikuports/haikuports_x86_64/23/08/4/-/2/x86_64?bcguid=bc2-HEBH" target="_blank">Falkon</a> browser (formerly known as QupZilla) even JavaScript-heavy sites like YouTube and retro Mac emulators work well. You can even get a Minecraft client for Haiku.</p>
<p>Although [Action Retro] notes that 3D acceleration is still a work-in-progress for Haiku, his 2014-era AMD system smoothly played back 1080p YouTube videos. Although not addressed in the video, Haiku is relatively easy to port existing software to, as it is POSIX-compatible. There is a relatively modern GCC 11.2 compiler in the Beta 4 release from 2022, backed up by solid <a href="https://www.haiku-os.org/docs/api/" target="_blank">API documentation</a>. Who doesn’t want to take a poke at a modern take on the OS that <a href="https://hackaday.com/2020/01/09/beos-the-alternate-universes-mac-os-x/">nearly became MacOS</a>?</p>

<p><iframe title="You Should Daily Drive Haiku OS" width="800" height="450" src="https://www.youtube.com/embed/-NMDYT-hCOk?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></p>
	            </div><!-- .entry-content -->
    
    <!-- .entry-footer -->
</article><!-- #post-## -->

            	<!-- .navigation -->
	
            

            
<!-- #comments -->

        
        

        
        

        
        </main><!-- #main -->
    </div><!-- #content -->

</div></div>]]></description>
        </item>
    </channel>
</rss>