<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 23 Apr 2025 17:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[How a 20 year old bug in GTA San Andreas surfaced in Windows 11 24H2 (446 pts)]]></title>
            <link>https://cookieplmonster.github.io/2025/04/23/gta-san-andreas-win11-24h2-bug/</link>
            <guid>43772311</guid>
            <pubDate>Wed, 23 Apr 2025 14:00:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cookieplmonster.github.io/2025/04/23/gta-san-andreas-win11-24h2-bug/">https://cookieplmonster.github.io/2025/04/23/gta-san-andreas-win11-24h2-bug/</a>, See on <a href="https://news.ycombinator.com/item?id=43772311">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
  <header id="main">
    <div>
      
      <p>April 23, 2025</p>
      <p>14 min. to read</p>
    </div>
  </header>
  <section>
    
      <ul id="markdown-toc">
  <li><a href="#introduction" id="markdown-toc-introduction">Introduction</a></li>
  <li><a href="#investigating-the-bug" id="markdown-toc-investigating-the-bug">Investigating the bug</a>    <ul>
      <li><a href="#what-is-broken" id="markdown-toc-what-is-broken">What is broken?</a></li>
      <li><a href="#but-why-and-how" id="markdown-toc-but-why-and-how">But why and how?</a></li>
    </ul>
  </li>
  <li><a href="#here-be-dragons--the-true-root-cause" id="markdown-toc-here-be-dragons--the-true-root-cause">Here be dragons ‚Äì the true root cause</a>    <ul>
      <li><a href="#diving-deeper" id="markdown-toc-diving-deeper">Diving deeper</a></li>
      <li><a href="#whose-stack-is-it-anyway" id="markdown-toc-whose-stack-is-it-anyway">Whose Stack Is It Anyway?</a></li>
      <li><a href="#what-are-the-odds-this-only-broke-now-darn-windows-11" id="markdown-toc-what-are-the-odds-this-only-broke-now-darn-windows-11">What are the odds this only broke now? Darn Windows 11!</a></li>
    </ul>
  </li>
  <li><a href="#i-want-this-fixed-in-my-game" id="markdown-toc-i-want-this-fixed-in-my-game">I want this fixed in my game!</a></li>
  <li><a href="#final-word" id="markdown-toc-final-word">Final word</a></li>
</ul>
<h2 id="introduction">
  
  
    Introduction <a href="#introduction"></a>
  
  
</h2>
    

<p>On the <a href="https://github.com/CookiePLMonster/SilentPatch/issues/172" target="_blank">SilentPatch GitHub issue tracker</a>,
I received a rather specific bug report:</p>

<blockquote>
<h3 id="skimmer-airplane-doesnt-exist-in-windows-11-24h2">
  
  
    Skimmer airplane doesn‚Äôt exist in Windows 11 24H2
  
  
</h3>
    

  <p>When I upgraded my windows to version 24H2, the Skimmer plane disappear completely from the game.
It can‚Äôt be spawn using trainer nor it can‚Äôt be found anywhere on it‚Äôs normal spawn points.
I‚Äôm using both my modded copy (which is before the update, is completely fine) and vanilla copy with only silentpatch
(I tried the 2018, 2020 and the most recent version of silentpatch) and the plane still won‚Äôt exist.</p>
</blockquote>

<p>If this was the first time I had heard about it, I‚Äôd likely consider it dubious and suspect there are more things at play,
and it‚Äôs not specifically Windows 11 24H2. However, on GTAForums, I‚Äôve been receiving comments about this exact issue since November last year.
Some of them said SilentPatch causes this issue, others however stated the same happens on a completely unmodded game:</p>

<blockquote>
  <p>Apparently the skimmer cant spawn when playing on Windows 11 24h2 update, hope this bug gets fixed.</p>

  <p>EDIT: So I think I confirmed it, I set up a VM with Windows 11 23h2 and the damn plane spawns fine,
and updating that same VM to 24h2 breaks the skimmer, why would a small feature update in 2024 break a random plane in a 2005 game is anyone‚Äôs guess.</p>
</blockquote>

<blockquote>
  <p>After the latest Silent patch update there is no Skimmer in the game and when I try to spawn it with RZL-Trainer or Cheat Menu by Grinch,
the game freezes and I have to close it via Task Manager.</p>
</blockquote>

<blockquote>
  <p>[‚Ä¶] I was forced to update to 24H2, and now after the update, I have the same problem with the Skimmer in GTA SA as others.
This means that mods or anything else are not causing the issue, the problem appeared after the latest Windows update.</p>
</blockquote><hr>

<p>My home PC is still on Windows 10 22H2, while my work machine is on Windows 11 23H2, and, to no surprise, neither machine reproduced the issue ‚Äì Skimmer spawned
on the water just fine, creating one via script and putting CJ in a driver‚Äôs seat worked too.</p>

<p>That said, I also asked a few people who upgraded to 24H2 to test this on their machines and they <strong>all</strong> hit this bug. Attempts to debug ‚Äúremotely‚Äù
by giving instructions over the chat didn‚Äôt go anywhere, so I set up a 24H2 virtual machine on my own. I copied the game over to the machine, set it up for remote
debugging from the host OS, headed to the usual place the Skimmer spawns, and sure enough, it wasn‚Äôt there. All other planes and boats still spawned fine,
only this one vehicle did not:</p>

<figure>
<figure><a href="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/gta_sa_SqUlKDKCRs.jpg" target="_blank"><img src="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/thumb/gta_sa_SqUlKDKCRs.jpg" alt="" width="1024" height="576"></a><figcaption>Skimmer is gone.</figcaption></figure>

<figure><a href="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/gta_sa_qnldPBAKRl.jpg" target="_blank"><img src="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/thumb/gta_sa_qnldPBAKRl.jpg" alt="" width="1024" height="576"></a><figcaption>Other planes are still here, though.</figcaption></figure>

</figure>

<p>I then used the script to spawn a Skimmer and put CJ inside it, just to be launched
<code>1.0287648030984853e+0031</code> = <strong>10.3 nonillion meters</strong>, or <strong>10.3 octillion kilometers</strong>, or <strong>1.087 quadrillion light-years</strong> up in the sky üòÜ</p>

<figure><a href="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/gta_sa_5KOLUPPHLe.jpg" target="_blank"><img src="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/thumb/gta_sa_5KOLUPPHLe.jpg" alt="" width="1024" height="576"></a><figcaption>Scientists claim to have discovered a ‚Äònew color‚Äô no one has seen before.</figcaption></figure>

<p>With SilentPatch installed, the game freezes shortly after launching the player up, as the game code gets stuck in a loop.
Without SilentPatch, the game doesn‚Äôt freeze, but instead, it succumbs to a famous ‚Äúburn-in effect‚Äù known to occur when the camera gets launched into infinity or close to it.
Funny enough, you can still kind of make out the shape of the plane even though the animations give up completely to the inaccuracies of the floating point values:</p>

<figure>
<figure><a href="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/gta_sa_GXULFRni6Y.jpg" target="_blank"><img src="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/thumb/gta_sa_GXULFRni6Y.jpg" alt="" width="1024" height="576"></a></figure>

<figure><a href="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/gta_sa_qQUqnmyhV6.jpg" target="_blank"><img src="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/thumb/gta_sa_qQUqnmyhV6.jpg" alt="" width="1024" height="576"></a></figure>

</figure>
<h2 id="investigating-the-bug">
  
  
    Investigating the bug <a href="#investigating-the-bug"></a>
  
  
</h2>
    
<h2 id="what-is-broken">
  
  
    What is broken? <a href="#what-is-broken"></a>
  
  
</h2>
    

<p>But, enough messing around; now I knew it was a real bug and I needed to figure out the root cause. At this point it wasn‚Äôt possible to say
whether the game was at fault, or if I was really dealing with an API bug introduced in 24H2, as looking at how many games have issues with this OS version,
it could go either way.</p>

<p>I didn‚Äôt have much to go with, but the fact the game froze with SilentPatch installed provided me with a good starting point. Upon entering the seaplane,
the game froze in a very small loop in <code>CPlane::PreRender</code>, attempting to normalize the rotor blade angle to the 0-360 degree range:</p>

<div><pre><code><span>this</span><span>-&gt;</span><span>m_fBladeAngle</span> <span>=</span> <span>CTimer</span><span>::</span><span>ms_fTimeStep</span> <span>*</span> <span>this</span><span>-&gt;</span><span>m_fBladeSpeed</span> <span>+</span> <span>this</span><span>-&gt;</span><span>m_fBladeAngle</span><span>;</span>
<span>while</span> <span>(</span><span>v12</span> <span>&gt;</span> <span>6.2831855</span><span>)</span>
<span>{</span>
  <span>this</span><span>-&gt;</span><span>m_fBladeAngle</span> <span>=</span> <span>this</span><span>-&gt;</span><span>m_fBladeAngle</span> <span>-</span> <span>6.2831855</span><span>;</span>
<span>}</span>
</code></pre></div>

<p>In the debugged session, <code>this-&gt;m_fBladeSpeed</code> was <code>3.73340132e+29</code>. This value is obviously enormous, big enough to make decrementing the value by <code>6.2831855</code>
entirely ineffective due to the difference in floating point exponents of these two values.<sup id="fnref:fp-explanation" role="doc-noteref"><a href="#fn:fp-explanation" rel="footnote">1</a></sup> But why is the blade speed so ridiculously high?
The blade speed is derived from the following formula:</p>
<div><pre><code><span>this</span><span>-&gt;</span><span>m_fBladeSpeed</span> <span>=</span> <span>(</span><span>v34</span> <span>-</span> <span>this</span><span>-&gt;</span><span>m_fBladeSpeed</span><span>)</span> <span>*</span> <span>CTimer</span><span>::</span><span>ms_fTimeStep</span> <span>/</span> <span>100.0</span> <span>+</span> <span>this</span><span>-&gt;</span><span>m_fBladeSpeed</span><span>;</span>
</code></pre></div>

<p>where <code>v34</code> is <strong>proportional to the plane‚Äôs altitude</strong>. This matches the initial findings ‚Äì as mentioned earlier, the ‚Äúburn-in effect‚Äù traditionally happens
when the camera is very far away from the map center, or at a great height.</p>

<p>What caused the plane to shoot so high up? There are two possibilities:</p>
<ol>
  <li>The plane spawns high up in the sky already.</li>
  <li>The plane spawns at ground level and then shoots up in the next frame.</li>
</ol>

<p>As for this test, I was spawning the Skimmer myself with a test script, so I could start from the function used in the game‚Äôs SCM (script) interpreter,
named <code>CCarCtrl::CreateCarForScript</code>. This function spawns a vehicle with a specified ID at the provided coordinates, and those come from my test script,
so I know they are correct. However, this function transforms the supplied Z coordinate slightly:</p>

<div><pre><code><span>if</span> <span>(</span><span>posZ</span> <span>&lt;=</span> <span>100.0</span><span>)</span>
<span>{</span>
  <span>posZ</span> <span>=</span> <span>CWorld</span><span>::</span><span>FindGroundZForCoord</span><span>(</span><span>posX</span><span>,</span> <span>posY</span><span>);</span>
<span>}</span>
<span>posZ</span> <span>+=</span> <span>newVehicle</span><span>-&gt;</span><span>GetDistanceFromCentreOfMassToBaseOfModel</span><span>();</span>
</code></pre></div>

<p><code>CEntity::GetDistanceFromCentreOfMassToBaseOfModel</code> contains multiple code paths, but the one used in this case simply gets the negated maximum Z value
of the model‚Äôs bounding box:</p>
<div><pre><code><span>return</span> <span>-</span><span>CModelInfo</span><span>::</span><span>ms_modelInfoPtrs</span><span>[</span><span>this</span><span>-&gt;</span><span>m_wModelIndex</span><span>]</span><span>-&gt;</span><span>pColModel</span><span>-&gt;</span><span>bbox</span><span>.</span><span>sup</span><span>.</span><span>z</span><span>;</span>
</code></pre></div>

<p>At this point, I expected this value to be incorrect, so I peeked into Skimmer‚Äôs bounding box values just to find out that the maximum Z value is indeed corrupted:</p>

<div><pre><code>- *(RwBBox**)0x00B2AC48	RwBBox *
  - sup	RwV3d
      x	-5.39924574	float
      y	-6.77431822	float
      z	-4.30747210e+33	float
  - inf	RwV3d
      x	5.42313004	float
      y	4.02343750	float
      z	1.87021971	float
</code></pre></div>

<p>If all the components of the bounding box were corrupted, I would have suspected some memory corruption, like another code writing past boundaries and overwriting
these values, but it‚Äôs specifically <code>sup.z</code> that is corrupted that is neither the first nor the last field in the bounding box. Once again, two possibilities came to my mind:</p>
<ol>
  <li>The collision file is read incorrectly and some fields remain uninitialized, or read unrelated data instead of the bounding box? Highly unlikely, but not impossible given that
  this issue could potentially have been an OS bug.</li>
  <li>The bounding box is read correctly, but then it‚Äôs updated with an outrageously incorrect value.</li>
</ol>

<p>A data breakpoint set up at <code>pColModel</code> reveals that at the time of the initial setup, the bounding box is correct, and the value of the Z coordinate is completely reasonable:</p>
<div><pre><code>- *(RwBBox**)0x00B2AC48	RwBBox *
  - sup	RwV3d
    x	-5.39924574	float
    y	-6.77431822	float
    z	-2.21952772	float
  - inf	RwV3d
    x	5.42313004	float
    y	4.02343750	float
    z	1.87021971	float
</code></pre></div>

<p>Turns out, the first time a vehicle with a specific model is spawned, the game sets up the suspension in a function <code>SetupSuspensionLines</code>, and updates the Z coordinate
of the bounding box to reflect the car‚Äôs natural suspension height:</p>
<div><pre><code><span>if</span> <span>(</span><span>pSuspensionLines</span><span>[</span><span>0</span><span>].</span><span>p1</span><span>.</span><span>z</span> <span>&lt;</span> <span>colModel</span><span>-&gt;</span><span>bbox</span><span>.</span><span>sup</span><span>.</span><span>z</span><span>)</span>
<span>{</span>
  <span>colModel</span><span>-&gt;</span><span>bbox</span><span>.</span><span>sup</span><span>.</span><span>z</span> <span>=</span> <span>pSuspensionLines</span><span>[</span><span>0</span><span>].</span><span>p1</span><span>.</span><span>z</span><span>;</span>
<span>}</span>
</code></pre></div>

<p>This is where things went wrong first. The suspension lines are computed using a combination of values from <code>handling.cfg</code> and the wheel scale parameter
coming from <code>vehicles.ide</code>:</p>
<div><pre><code><span>for</span> <span>(</span><span>int</span> <span>i</span> <span>=</span> <span>0</span><span>;</span> <span>i</span> <span>&lt;</span> <span>4</span><span>;</span> <span>i</span><span>++</span><span>)</span>
<span>{</span>
  <span>CVector</span> <span>posn</span><span>;</span>
  <span>modelInfo</span><span>-&gt;</span><span>GetWheelPosn</span><span>(</span><span>i</span><span>,</span> <span>posn</span><span>);</span>

  <span>posn</span><span>.</span><span>z</span> <span>+=</span> <span>pHandling</span><span>-&gt;</span><span>fSuspensionUpperLimit</span><span>;</span>
  <span>colModel</span><span>-&gt;</span><span>lines</span><span>[</span><span>i</span><span>].</span><span>p0</span> <span>=</span> <span>posn</span><span>;</span>

  <span>float</span> <span>wheelScale</span> <span>=</span> <span>i</span> <span>!=</span> <span>0</span> <span>&amp;&amp;</span> <span>i</span> <span>!=</span> <span>2</span> <span>?</span> <span>modelInfo</span><span>-&gt;</span><span>m_frontWheelScale</span> <span>:</span> <span>modelInfo</span><span>-&gt;</span><span>m_rearWheelScale</span><span>;</span>

  <span>posn</span><span>.</span><span>z</span> <span>+=</span> <span>pHandling</span><span>-&gt;</span><span>fSuspensionLowerLimit</span> <span>-</span> <span>pHandling</span><span>-&gt;</span><span>fSuspensionUpperLimit</span><span>;</span>
  <span>posn</span><span>.</span><span>z</span> <span>-=</span> <span>wheelScale</span> <span>/</span> <span>2.0</span><span>;</span>
  <span>colModel</span><span>-&gt;</span><span>lines</span><span>[</span><span>i</span><span>].</span><span>p1</span> <span>=</span> <span>posn</span><span>;</span>
<span>}</span>
</code></pre></div>

<p>Since I knew <code>colModel-&gt;lines[0].p1</code> is corrupted, this meant either <code>pHandling-&gt;fSuspensionLowerLimit</code>, <code>pHandling-&gt;fSuspensionUpperLimit</code>, or <code>wheelScale</code> were bogus.
Skimmer‚Äôs <code>handling.cfg</code> values didn‚Äôt seem any different to any other plane in the game, but then I spotted something interesting in <code>vehicles.ide</code>. Skimmer‚Äôs line looks like this:</p>
<div><pre><code>460, 	skimmer,	skimmer, 	plane,		SEAPLANE,	SKIMMER,	null,	ignore,		5,	0,	0
</code></pre></div>

<p>Compare this line to any other plane in the game, in this example Rustler:</p>
<div><pre><code>476, 	rustler, 	rustler, 	plane, 		RUSTLER, 	RUSTLER,	rustler, ignore,		10,	0,	0,		-1, 0.6, 0.3,		-1
</code></pre></div>

<p>The line is shorter and it‚Äôs missing the last four parameters, moreover, <strong>two of the missing parameters are the front and rear wheel scale!</strong>
This is normal for boats, but Skimmer is <strong>the only</strong> plane to omit these parameters.</p>

<p>Does re-adding those parameters fix the seaplane? Unsurprisingly, it does!</p>

<figure><a href="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/gta_sa_3hbE1KfRUe.jpg" target="_blank"><img src="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/screens/thumb/gta_sa_3hbE1KfRUe.jpg" alt="" width="1024" height="576"></a></figure>
<h2 id="but-why-and-how">
  
  
    But why and how? <a href="#but-why-and-how"></a>
  
  
</h2>
    

<p>I have a likely explanation for why Rockstar made this specific mistake in the data to begin with ‚Äì in Vice City, Skimmer was defined as a <strong>boat</strong>,
and therefore did not have those values defined by design!
When in San Andreas they changed Skimmer‚Äôs vehicle type to a <strong>plane</strong>, someone forgot to add those now-required extra parameters.
Since this game seldom verifies the completeness of its data, this mistake simply slipped under the radar.</p>

<p>Problem solved? Not quite yet, as for SilentPatch, I need to fix it from the code. A peek into the pseudocode of <code>CFileLoader::LoadVehicleObject</code>
reveals the true nature of this bug: the game assumes all parameters are always present in the definition line and it doesn‚Äôt default any but two parameters,
nor it checks the return value of <code>sscanf</code>, and so in the case of all boats and Skimmer, those parameters remained uninitialized:</p>
<div><pre><code><span>void</span> <span>CFileLoader</span><span>::</span><span>LoadVehicleObject</span><span>(</span><span>const</span> <span>char</span><span>*</span> <span>line</span><span>)</span>
<span>{</span>
  <span>int</span> <span>objID</span> <span>=</span> <span>-</span><span>1</span><span>;</span>
  <span>char</span> <span>modelName</span><span>[</span><span>24</span><span>];</span>
  <span>char</span> <span>texName</span><span>[</span><span>24</span><span>];</span>
  <span>char</span> <span>type</span><span>[</span><span>8</span><span>];</span>
  <span>char</span> <span>handlingID</span><span>[</span><span>16</span><span>];</span>
  <span>char</span> <span>gameName</span><span>[</span><span>32</span><span>];</span>
  <span>char</span> <span>anims</span><span>[</span><span>16</span><span>];</span>
  <span>char</span> <span>vehClass</span><span>[</span><span>16</span><span>];</span>
  <span>int</span> <span>frq</span><span>;</span>
  <span>int</span> <span>flags</span><span>;</span>
  <span>int</span> <span>comprules</span><span>;</span>
  <span>int</span> <span>wheelModelID</span><span>;</span> <span>// Uninitialized!</span>
  <span>float</span> <span>frontWheelScale</span><span>,</span> <span>rearWheelScale</span><span>;</span> <span>// Uninitialized!</span>
  <span>int</span> <span>wheelUpgradeClass</span> <span>=</span> <span>-</span><span>1</span><span>;</span> <span>// Funny enough, this one IS initialized</span>

  <span>int</span> <span>TxdSlot</span> <span>=</span> <span>CTxdStore</span><span>::</span><span>FindTxdSlot</span><span>(</span><span>"vehicle"</span><span>);</span>
  <span>if</span> <span>(</span><span>TxdSlot</span> <span>==</span> <span>-</span><span>1</span><span>)</span>
  <span>{</span>
    <span>TxdSlot</span> <span>=</span> <span>CTxdStore</span><span>::</span><span>AddTxdSlot</span><span>(</span><span>"vehicle"</span><span>);</span>
  <span>}</span>
  <span>sscanf</span><span>(</span><span>line</span><span>,</span> <span>"%d %s %s %s %s %s %s %s %d %d %x %d %f %f %d"</span><span>,</span> <span>&amp;</span><span>objID</span><span>,</span> <span>modelName</span><span>,</span> <span>texName</span><span>,</span> <span>type</span><span>,</span> <span>handlingID</span><span>,</span>
        <span>gameName</span><span>,</span> <span>anims</span><span>,</span> <span>vehClass</span><span>,</span> <span>&amp;</span><span>frq</span><span>,</span> <span>&amp;</span><span>flags</span><span>,</span> <span>&amp;</span><span>comprules</span><span>,</span> <span>&amp;</span><span>wheelModelID</span><span>,</span> <span>&amp;</span><span>frontWheelScale</span><span>,</span> <span>&amp;</span><span>rearWheelScale</span><span>,</span>
        <span>&amp;</span><span>wheelUpgradeClass</span><span>);</span>

  <span>// More processing here...</span>
<span>}</span>
</code></pre></div>

<p>Given the symptoms, those uninitialized values must have evaluated to small, valid floating point values all the way until now,
whereas with Windows 11 24H2 they got out of hand and tripped the bounding box calculations.</p>

<p>In SilentPatch, the fix is easy ‚Äì I wrap this call to <code>sscanf</code> and provide reasonable defaults for the final four parameters:</p>
<div><pre><code><span>static</span> <span>int</span> <span>(</span><span>*</span><span>orgSscanf</span><span>)(</span><span>const</span> <span>char</span><span>*</span> <span>s</span><span>,</span> <span>const</span> <span>char</span><span>*</span> <span>format</span><span>,</span> <span>...);</span>
<span>static</span> <span>int</span> <span>sscanf_Defaults</span><span>(</span><span>const</span> <span>char</span><span>*</span> <span>s</span><span>,</span> <span>const</span> <span>char</span><span>*</span> <span>format</span><span>,</span> <span>int</span><span>*</span> <span>objID</span><span>,</span> <span>char</span><span>*</span> <span>modelName</span><span>,</span> <span>char</span><span>*</span> <span>texName</span><span>,</span> <span>char</span><span>*</span> <span>type</span><span>,</span>
      <span>char</span><span>*</span> <span>handlingID</span><span>,</span> <span>char</span><span>*</span> <span>gameName</span><span>,</span> <span>char</span><span>*</span> <span>anims</span><span>,</span> <span>char</span><span>*</span> <span>vehClass</span><span>,</span> <span>int</span><span>*</span> <span>frequency</span><span>,</span> <span>int</span><span>*</span> <span>flags</span><span>,</span> <span>int</span><span>*</span> <span>comprules</span><span>,</span>
      <span>int</span><span>*</span> <span>wheelModelID</span><span>,</span> <span>float</span><span>*</span> <span>frontWheelSize</span><span>,</span> <span>float</span><span>*</span> <span>rearWheelSize</span><span>,</span> <span>int</span><span>*</span> <span>wheelUpgradeClass</span><span>)</span>
<span>{</span>
  <span>*</span><span>wheelModelID</span> <span>=</span> <span>-</span><span>1</span><span>;</span>
  <span>// Why 0.7 and not 1.0, I'll explain later</span>
  <span>*</span><span>frontWheelSize</span> <span>=</span> <span>0.7</span><span>;</span>
  <span>*</span><span>rearWheelSize</span> <span>=</span> <span>0.7</span><span>;</span>
  <span>*</span><span>wheelUpgradeClass</span> <span>=</span> <span>-</span><span>1</span><span>;</span>

  <span>return</span> <span>orgSscanf</span><span>(</span><span>s</span><span>,</span> <span>format</span><span>,</span> <span>objID</span><span>,</span> <span>modelName</span><span>,</span> <span>texName</span><span>,</span> <span>type</span><span>,</span> <span>handlingID</span><span>,</span> <span>gameName</span><span>,</span> <span>anims</span><span>,</span> <span>vehClass</span><span>,</span>
                  <span>frequency</span><span>,</span> <span>flags</span><span>,</span> <span>comprules</span><span>,</span> <span>wheelModelID</span><span>,</span> <span>frontWheelSize</span><span>,</span> <span>rearWheelSize</span><span>,</span> <span>wheelUpgradeClass</span><span>);</span>
<span>}</span>
</code></pre></div>

<p><a href="https://github.com/CookiePLMonster/SilentPatch/commit/881aded7237067202025934796cc2313104cba8c" target="_blank">Fixed!</a>
Another compatibility win for the patch.</p><hr>

<p>If this was a regular bug, I would‚Äôve ended the post right here. However, in the case of this rabbit hole, the discovery of this fix only
raised more questions ‚Äì why did this break only now? What made the game work fine despite of this issue for over twenty years,
before a new update to Windows 11 suddenly challenged this status quo?</p>

<p><strong>Finally, is this somehow caused by a problem in Windows 11 24H2, or is this just an unfortunate coincidence, stars aligning just right?</strong></p>
<h2 id="here-be-dragons--the-true-root-cause">
  
  
    Here be dragons ‚Äì the true root cause <a href="#here-be-dragons--the-true-root-cause"></a>
  
  
</h2>
    
<h2 id="diving-deeper">
  
  
    Diving deeper <a href="#diving-deeper"></a>
  
  
</h2>
    

<p>At this point, the working theory was that the uninitialized local variables in <code>CFileLoader::LoadVehicleObject</code>
happened to have reasonable values until <em>something</em> changed in Windows 11 24H2, and those values became ‚Äúunreasonable‚Äù.
What I knew could <strong>not</strong> be the cause was the CRT (and thus, the <code>sscanf</code> call) ‚Äì San Andreas uses a statically compiled CRT,
and therefore any OS-level hotfixes wouldn‚Äôt apply to it.
However, considering the plethora of security enhancements in Windows 11, I couldn‚Äôt rule out that one of those enhancements,
for example, <strong>Kernel-mode Hardware-enforced Stack Protection</strong>, ends up scrambling the stack in a way the game‚Äôs bugged function doesn‚Äôt like.</p>

<p>I set up an experiment where I broke into a debugger before a <code>sscanf</code> call when parsing Skimmer‚Äôs line (vehicle ID 460) specifically,
and the observed variable values supported that claim. On my Windows 10 machine, they happened to be both <code>0.7</code>:</p>
<div><pre><code>frontWheelSize  0x01779f14 {0.699999988}
rearWheelSize   0x01779f10 {0.699999988}
</code></pre></div>
<p>while on the Win11 24H2 VM, they are huge, similar in order of magnitude to the wrong values observed in the bounding box earlier.
The stack pointer has also shifted by 4 bytes for some reason, but that is unlikely to be related ‚Äì and it‚Äôs likely caused by some changes
to the thread startup boilerplate inside <code>kernel32.dll</code>:</p>
<div><pre><code>frontWheelSize  0x01779f18 {7.84421263e+33}
rearWheelSize   0x01779f14 {4.54809690e-38}
</code></pre></div>

<p>This got me curious - <code>0.7</code> is a bit ‚Äútoo good‚Äù of a value to be a result of interpreting random garbage from the stack as a floating point;
what‚Äôs more likely is that it‚Äôs an actual floating point value that was sitting on the stack in exactly the right spot.
I then inspected <code>vehicles.ide</code> for TopFun ‚Äì the vehicle defined directly before Skimmer. Sure enough, its wheel scale is <code>0.7</code>!</p>
<div><pre><code>459,	topfun,		topfun,		car,		TOPFUN,		TOPFUN,		van,	ignore,		1,	0,	0,		-1, 0.7, 0.7,		-1
</code></pre></div>

<p><code>vehicles.ide</code> is parsed in order, in a function working similarly to this (pseudocode):</p>
<div><pre><code><span>void</span> <span>CFileLoader</span><span>::</span><span>LoadObjectTypes</span><span>(</span><span>const</span> <span>char</span><span>*</span> <span>filename</span><span>)</span>
<span>{</span>
  <span>// Open the file...</span>

  <span>while</span> <span>((</span><span>line</span> <span>=</span> <span>fgets</span><span>(</span><span>file</span><span>))</span> <span>!=</span> <span>NULL</span><span>)</span>
  <span>{</span>
    <span>// Parse the section indicators...</span>
    <span>switch</span> <span>(</span><span>section</span><span>)</span>
    <span>{</span>
      <span>// Different sections...</span>
    <span>case</span> <span>SECTION_CARS</span><span>:</span>
      <span>LoadVehicleObject</span><span>(</span><span>line</span><span>);</span>
      <span>break</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre></div>

<p>Seems like the code somehow persisted the stale wheel scale values, so Skimmer ends up getting the same wheel scales as Topfun.
I set up another experiment to verify this claim:</p>
<ol>
  <li>Set up a breakpoint before <code>sscanf</code> again, but this time before Topfun‚Äôs line (vehicle ID 459) gets parsed.</li>
  <li>Set up write breakpoints on <code>frontWheelScale</code> and <code>rearWheelScale</code>.</li>
  <li>Resume execution until the game gets to parsing the next vehicle definition.</li>
</ol>

<p>Windows 10 verified my claim ‚Äì <strong>nothing wrote to these two stack values between the calls to <code>CFileLoader::LoadVehicleObject</code>,
so the function‚Äôs effective behavior was to preserve (albeit, unintentionally) the wheel scale values between the consecutive calls!</strong></p>

<p>Repeating the same exercise on Windows 11 24H2 triggered the write breakpoint! However, it wasn‚Äôt anywhere close to any security feature:
the stack values were overwritten by‚Ä¶ <code>LeaveCriticalSection</code> inside <code>fgets</code>:</p>
<div><pre><code>&gt;	ntdll.dll!_RtlpAbFindLockEntry@4()	Unknown
 	ntdll.dll!_RtlAbPostRelease@8()	Unknown
 	ntdll.dll!_RtlLeaveCriticalSection@4()	Unknown
 	gta_sa.exe!fgets()	Unknown
</code></pre></div>

<p>Seems like a change in Windows 11 24H2 modified the way <a href="https://learn.microsoft.com/en-us/windows/win32/sync/critical-section-objects" target="_blank">Critical Section Objects</a>
work internally, and the new code unlocking the critical section uses more stack space than the old one.
I ran one more experiment, comparing the changes to the stack space that happened after <code>sscanf</code> inside <code>LoadVehicleObject</code>, until the next invocation of this function.
Changed values are highlighted in red:</p>

<figure>
<figure><a href="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/stack-win10.jpg" target="_blank"><img src="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/stack-win10.jpg" alt="" width="1190" height="611"></a><figcaption>On Windows 10, the stack values didn‚Äôt change much between the calls.
        In fact, you can spot the two values of <code>0x3F449BA6</code> = <code>0.768</code> (highlighted on the screenshot).
        They correspond to Landstalker‚Äôs wheel scales.</figcaption></figure>

<figure><a href="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/stack-win11.jpg" target="_blank"><img src="https://cookieplmonster.github.io/assets/img/posts/sa-win11-24h2-bug/stack-win11.jpg" alt="" width="1190" height="611"></a><figcaption>On Windows 11 24H2, more stack space was modified by a new implementation of Critical Sections.
                The wheel scales are nowhere to be found, as they were overwritten!</figcaption></figure>

</figure>

<p>This is the exact proof I needed ‚Äì notice that in the Windows 10 run, some of the local variables are even still visible to the human eye (like the <code>normal</code> vehicle class),
while in Windows 11, they are completely gone. It‚Äôs also worth pointing out that even in Windows 10, <strong>the very next local variable</strong> after the wheel scales has been overwritten
by <code>LeaveCriticalSection</code>, which means the game was <strong>4 bytes away</strong> from hitting this exact bug years earlier! The luck at display here is insane.</p>
<h2 id="whose-stack-is-it-anyway">
  
  
    Whose Stack Is It Anyway? <a href="#whose-stack-is-it-anyway"></a>
  
  
</h2>
    

<p>To illustrate why the game got away with this bug for so long, I need to show how the stack changes across calls.
Let‚Äôs say the stack looks like this after the call to <code>LoadVehicleObject</code>. <strong>Emphasis</strong> on the local variables we‚Äôre interested in:</p>

<table>
  <tbody>
    <tr>
      <td>return address from <code>LoadObjectTypes</code></td>
    </tr>
    <tr>
      <td>local variables of <code>LoadObjectTypes</code>‚Ä¶</td>
    </tr>
    <tr>
      <td>return address from <code>LoadVehicleObject</code></td>
    </tr>
    <tr>
      <td>local variables of <code>LoadVehicleObject</code>‚Ä¶</td>
    </tr>
    <tr>
      <td><strong>frontWheelScale</strong></td>
    </tr>
    <tr>
      <td><strong>rearWheelScale</strong></td>
    </tr>
    <tr>
      <td>more local variables‚Ä¶</td>
    </tr>
  </tbody>
</table>

<p>The call to <code>fgets</code>, and consequently <code>LeaveCriticalSection</code>, that follows the call to <code>LoadVehicleObject</code>, reuses the stack space previously occupied by that function,
as the lifetime of the function stack is limited to the duration of the function itself and once the function is done, this space is up for grabs again.
On Windows 10, the stack looked like this once <code>fgets</code> and <code>LeaveCriticalSection</code> returned:</p>

<table>
  <tbody>
    <tr>
      <td>return address from <code>LoadObjectTypes</code></td>
    </tr>
    <tr>
      <td>local variables of <code>LoadObjectTypes</code>‚Ä¶</td>
    </tr>
    <tr>
      <td>return address from <code>fgets</code></td>
    </tr>
    <tr>
      <td>local variables of <code>fgets</code>‚Ä¶</td>
    </tr>
    <tr>
      <td>return address from <code>LeaveCriticalSection</code></td>
    </tr>
    <tr>
      <td>local variables of <code>LeaveCriticalSection</code>‚Ä¶</td>
    </tr>
    <tr>
      <td><strong>frontWheelScale</strong></td>
    </tr>
    <tr>
      <td><strong>rearWheelScale</strong></td>
    </tr>
    <tr>
      <td>more local variables‚Ä¶</td>
    </tr>
  </tbody>
</table>

<p><span>Highlighted parts</span> overwrite what used to be the stack space of <code>LoadVehicleObject</code>,
but notice how it doesn‚Äôt reach the area of the stack where the wheel scales resided.
In Windows 11 24H2, <code>LeaveCriticalSection</code> uses more stack space, so the stack space instead looks more like this:</p>

<table>
  <tbody>
    <tr>
      <td>return address from <code>LoadObjectTypes</code></td>
    </tr>
    <tr>
      <td>local variables of <code>LoadObjectTypes</code>‚Ä¶</td>
    </tr>
    <tr>
      <td>return address from <code>fgets</code></td>
    </tr>
    <tr>
      <td>local variables of <code>fgets</code>‚Ä¶</td>
    </tr>
    <tr>
      <td>return address from <code>LeaveCriticalSection</code></td>
    </tr>
    <tr>
      <td>local variables of <code>LeaveCriticalSection</code>‚Ä¶</td>
    </tr>
    <tr>
      <td><strong>frontWheelScale is overwritten!</strong></td>
    </tr>
    <tr>
      <td><strong>rearWheelScale is overwritten!</strong></td>
    </tr>
    <tr>
      <td>more local variables‚Ä¶</td>
    </tr>
  </tbody>
</table>

<p>Parts of the stack <span>highlighted in red</span> are now also scrambled
when in the past they were left intact; those parts include the wheel scales read by the previous call to <code>LoadVehicleObject</code>!
This in turn exposes the bug caused by those variables being uninitialized, and since <code>sscanf</code> can‚Äôt read those values from Skimmer‚Äôs <code>vehicles.ide</code> definition,
they are kept as-is in garbage form, and propagate further to the vehicle‚Äôs data.</p>
<h2 id="what-are-the-odds-this-only-broke-now-darn-windows-11">
  
  
    What are the odds this only broke now? Darn Windows 11! <a href="#what-are-the-odds-this-only-broke-now-darn-windows-11"></a>
  
  
</h2>
    

<p>I want to make it clear: <strong>all these findings prove that the bug is NOT an issue with Windows 11 24H2,
as things like the way the stack is used by internal WinAPI functions are not contractual and they may change at any time, with no prior notice</strong>.
The real issue here is the game relying on undefined behavior (uninitialized local variables), and to be honest,
I‚Äôm shocked that the game didn‚Äôt hit this bug on so many OS versions, although as I pointed out earlier, it was extremely close.
San Andreas still supported Windows 98, which means it got away with this bug in <strong>at least</strong> a dozen different Windows versions <strong>and</strong> many more releases of Wine!</p>

<p>‚Ä¶or, did it? I found it hard to believe that the game would never hit this issue on any of the many, many platforms it released on,
so I looked into the binary files of some other releases. While this bug was <strong>not</strong> fixed in the official 1.01 PC patch, it <strong>was</strong> fixed in the original Xbox release,
where a ‚Äúreasonable default‚Äù of <code>1.0</code> was added to the code, much like in my fix. This fix was then ‚Äúinherited‚Äù by many future versions of San Andreas, including:</p>
<ul>
  <li>Steam 3.0, newsteam, and RGL, as they were all based on the Xbox branch of the code.</li>
  <li>Any releases from War Drum Studios, including Android, X360, and PS3.</li>
  <li>The Definitive Edition.</li>
</ul>

<p>However, unlike Rockstar, I decided to use the wheel scale of <code>0.7</code> instead of <code>1.0</code> as a default, for multiple reasons:</p>
<ol>
  <li>This is the effective wheel scale Skimmer had on PC (and possibly PS2) until now since that‚Äôs the wheel scale of Topfun.</li>
  <li>Two other non-boat vehicles that float on water, Sea Sparrow and Vortex, both have a wheel scale of <code>0.7</code>.</li>
  <li>Many cars in the game have a wheel scale of <code>0.7</code>.</li>
</ol>
<h2 id="i-want-this-fixed-in-my-game">
  
  
    I want this fixed in my game! <a href="#i-want-this-fixed-in-my-game"></a>
  
  
</h2>
    

<p>The code fix will be included in <a href="https://github.com/CookiePLMonster/SilentPatch/milestone/3" target="_blank">the next SilentPatch hotfix</a>,
but for now, you may easily fix it yourself by editing <code>vehicles.ide</code>:</p>
<ol>
  <li>In your San Andreas directory, open <code>data\vehicles.ide</code> with Notepad.</li>
  <li>Scroll down to Skimmer‚Äôs line beginning with <code>460, 	skimmer</code>.</li>
  <li>Replace the original line with:
    <div><pre><code>460, 	skimmer,	skimmer, 	plane,		SEAPLANE,	SKIMMER,	null,	ignore,		5,	0,	0,		-1, 0.7, 0.7,		-1
</code></pre></div>
  </li>
  <li>Save the file.</li>
</ol>
<h2 id="final-word">
  
  
    Final word <a href="#final-word"></a>
  
  
</h2>
    

<p>This was the most interesting bug I‚Äôve encountered for a while. I initially had a hard time believing that a bug like this would directly tie to a specific OS release,
but I was proven completely wrong. At the end of the day, it was a simple bug in San Andreas and this function should have never worked right,
and yet, at least on PC it hid itself for two decades.</p>

<p>This is an interesting lesson in compatibility: even changes to the stack layout of the internal implementations can have compatibility implications if an application
is bugged and unintentionally relies on a specific behavior. This is also not the first time I encountered issues like this: regular visitors might remember
<a href="https://cookieplmonster.github.io/mods/bully/">Bully: Scholarship Edition</a> which famously broke on Windows 10, for very similar reasons. Just like in this case,
Bully should have never worked properly to begin with, but instead, it got away with making incorrect assumptions for years, before changes in Windows 10 finally
made it run out of luck.</p>

<p>Yet again, we are reminded to:</p>
<ul>
  <li><strong>Validate your input data</strong> ‚Äì San Andreas was notoriously bad at this, and ultimately this was the main reason why an incomplete config line remained unnoticed.</li>
  <li><strong>Not ignore the compilation warnings</strong> ‚Äì this code most likely threw a warning in the original code that was either ignored or disabled!</li>
</ul>

<p>In the end, the GTA players are lucky: in many other games, issues like this would‚Äôve remained unfixed and they‚Äôd become a folk legend.
Thankfully, GTAs are moddable and well understood, so we can act upon problems like this and ensure the game stays functional for many more years to come.</p><hr>


    
  </section>


  

  
  

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How I Blog with Obsidian, Hugo, GitHub, and Cloudflare ‚Äì Zero Cost, Fully Owned (149 pts)]]></title>
            <link>https://ingau.me/blog/how-i-write-my-blogs-in-obsidian-and-publish-instantly/</link>
            <guid>43771645</guid>
            <pubDate>Wed, 23 Apr 2025 13:00:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ingau.me/blog/how-i-write-my-blogs-in-obsidian-and-publish-instantly/">https://ingau.me/blog/how-i-write-my-blogs-in-obsidian-and-publish-instantly/</a>, See on <a href="https://news.ycombinator.com/item?id=43771645">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <p>I‚Äôve been using Obsidian for all my writing lately, and it‚Äôs been a game changer. The local-first model means everything lives as plain text on my machine, and with the Minimal theme, the interface stays clean and distraction-free.</p>
<p>My vault lives in iCloud (Dropbox or Google Drive work too), so notes sync seamlessly across devices - I often start drafts on my phone and finish them later on my laptop.</p>
<p>For publishing, I use Hugo with the Bear Blog theme (fast, minimal), and deploy via GitHub and Cloudflare Pages. This stack gives me full control: no subscriptions, no vendor lock-in, and no risk of platforms disappearing or changing policies.</p>
<p>If you:</p>
<ul>
<li>Use (or want to try) Obsidian</li>
<li>Don‚Äôt mind a bit of technical setup</li>
<li>Prefer writing in plain text with Git-based version control</li>
<li>Want a fast, cost-free, portable publishing flow</li>
</ul>
<p>Then this setup might be exactly what you‚Äôre looking for. Once set up, publishing is as simple as toggling a draft flag and pushing to GitHub.</p>
<p><img src="https://ingau.me/images/obsidian-publish.png" alt="Screenshot of my Obsidian vault"></p>
<h2 id="setting-up-your-system">Setting Up Your System</h2>
<p>This post is a <strong>high-level outline</strong> of how it all fits together. It‚Äôs not a tutorial, but if you‚Äôre familiar with basic dev tools, it should be easy to follow. And if anything‚Äôs unclear, LLMs like ChatGPT or Claude are great for filling in the gaps.</p>
<h3 id="1-install-and-set-up-hugo">1. Install and Set Up Hugo</h3>
<p>First, you‚Äôll need to <a href="https://gohugo.io/installation/">install Hugo</a> on your machine. Once installed, create a new site:</p>
<pre tabindex="0"><code>hugo new site myblog
cd myblog
</code></pre><p>Then add the Bear Blog theme (or your preferred theme):</p>
<pre tabindex="0"><code>git init
git submodule add https://github.com/janraasch/hugo-bearblog.git themes/hugo-bearblog
</code></pre><p>Update your <code>config.toml</code> file to use the theme. See the <a href="https://github.com/janraasch/hugo-bearblog">Bear Blog theme documentation</a> for configuration options.</p>
<h3 id="2-connect-obsidian-to-hugo">2. Connect Obsidian to Hugo</h3>
<p>This is the key part. Hugo has a specific folder structure, and you want to write your posts in the <code>content</code> folder. Inside that folder, I created a <code>blog</code> subfolder for all my posts.</p>
<p>So my folder structure looks like this:</p>
<pre tabindex="0"><code>myblog/
  ‚îú‚îÄ‚îÄ content/
  ‚îÇ   ‚îú‚îÄ‚îÄ blog/   &lt;- This is where I write my posts
  ‚îÇ   ‚îî‚îÄ‚îÄ ...
  ‚îî‚îÄ‚îÄ ...
</code></pre><p>To set up Obsidian:</p>
<ol>
<li>Open Obsidian</li>
<li>Click ‚ÄúOpen folder as vault‚Äù</li>
<li>Navigate to your Hugo site‚Äôs blog folder (myblog/content/blog)</li>
<li>Select this folder</li>
</ol>
<p>This way, everything you write in Obsidian goes directly into the right folder for Hugo to process.</p>
<h3 id="3-set-up-front-matter-template">3. Set Up Front Matter Template</h3>
<p>In Obsidian, make sure that your posts includes the necessary Hugo front matter:</p>
<pre tabindex="0"><code>+++
title= "Your Post Title"
date= YYYY-MM-DD
tags= ["post"]
draft= true
+++
</code></pre><p>The <code>draft: true</code> tag is crucial - this is what you‚Äôll toggle to <code>false</code> when you‚Äôre ready to publish.</p>
<h3 id="4-preview-posts-locally">4. Preview Posts Locally</h3>
<p>While writing, I use Hugo‚Äôs local server with draft visibility:</p>
<p><code>hugo server -D</code></p>
<p>This lets me see how everything looks in-browser before pushing live.</p>
<h3 id="5-connect-to-github">5. Connect to GitHub</h3>
<p>Create a new GitHub repository for your blog, then connect your local Hugo site:</p>
<pre tabindex="0"><code>git remote add origin https://github.com/yourusername/yourblog.git
git add .
git commit -m "Initial commit"
git push -u origin main
</code></pre><p>There are plenty of <a href="https://docs.github.com/en/get-started/quickstart/hello-world">GitHub tutorials</a> if you need help with this step.</p>
<h3 id="6-set-up-cloudflare-pages">6. Set Up Cloudflare Pages</h3>
<ol>
<li>Sign up for a <a href="https://dash.cloudflare.com/sign-up">Cloudflare account</a> if you don‚Äôt have one</li>
<li>Go to the Pages section and create a new project</li>
<li>Connect to your GitHub account and select your blog repository</li>
<li>For build settings:
<ul>
<li>Build command: <code>hugo --minify</code></li>
<li>Build output directory: <code>public</code></li>
</ul>
</li>
</ol>
<p>Cloudflare‚Äôs <a href="https://developers.cloudflare.com/pages/framework-guides/deploy-a-hugo-site/">own documentation</a> covers this process well.</p>
<h2 id="the-publishing-workflow">The Publishing Workflow</h2>
<p>Once everything is set up, publishing is simple:</p>
<ol>
<li>Write your post in Obsidian</li>
<li>When ready to publish, change <code>draft: true</code> to <code>draft: false</code> in the front matter</li>
<li>Commit and push to GitHub:</li>
</ol>
<pre tabindex="0"><code>git add .
git commit -m "Publish new post"
git push
</code></pre><p>Cloudflare Pages will automatically detect the change and rebuild your site, typically within a minute or two.</p>
<h2 id="final-thoughts">Final Thoughts</h2>
<p>This setup takes a bit of initial work, but the payoff is enormous. Once it‚Äôs all set up, this workflow fades into the background - I just write, commit, and publish. No friction, no fees, and everything stays in my hands. If you‚Äôre looking for a lightweight, sustainable way to blog, this might be worth trying.</p>
 </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Show HN: Node.js video tutorials where you can edit and run the code (120 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=43771365</link>
            <guid>43771365</guid>
            <pubDate>Wed, 23 Apr 2025 12:35:49 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=43771365">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="43771365">
      <td><span></span></td>      <td><center><a id="up_43771365" href="https://news.ycombinator.com/vote?id=43771365&amp;how=up&amp;goto=item%3Fid%3D43771365"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=43771365">Show HN: Node.js video tutorials where you can edit and run the code</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_43771365">104 points</span> by <a href="https://news.ycombinator.com/user?id=somebee">somebee</a> <span title="2025-04-23T12:35:49 1745411749"><a href="https://news.ycombinator.com/item?id=43771365">3 hours ago</a></span> <span id="unv_43771365"></span> | <a href="https://news.ycombinator.com/hide?id=43771365&amp;goto=item%3Fid%3D43771365">hide</a> | <a href="https://hn.algolia.com/?query=Show%20HN%3A%20Node.js%20video%20tutorials%20where%20you%20can%20edit%20and%20run%20the%20code&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=43771365&amp;auth=f2fed84ff1e053cd2fd7c67a4f2106ff939b6f87">favorite</a> | <a href="https://news.ycombinator.com/item?id=43771365">35&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><div><p>Hey HN,</p><p>I'm Sindre, CTO of Scrimba (YC S20). We originally launched Scrimba to make video learning more interactive for aspiring frontend developers. So instead of passively watching videos, you can jump in an experiment with the code directly inside the video player. Since launch, almost two million people have used Scrimba to grow their skills.</p><p>However, one limitation is that we've only supported frontend code, as our interactive videos run in the browser, whereas most of our learners want to go fullstack‚Äîbuilding APIs, handling auth, working with databases, and so forth.</p><p>To fix this, we spent the last 6 months integrating StackBlitz WebContainers into Scrimba. This enables a full Node.js environment‚Äîincluding a terminal, shell, npm access, and a virtual file system‚Äîdirectly inside our video player. Everything runs in the browser.</p><p>Here is a 2-minute recorded demo: <a href="https://scrimba.com/s08dpq3nom">https://scrimba.com/s08dpq3nom</a></p><p>If you want to see more, feel free to enroll into any of the seven fullstack courses we've launched so far, on subject like Node, Next, Express, SQL, Vite, and more. We've opened them up for Hacker News today so that you don't even need to create an account to watch the content:</p><p><a href="https://scrimba.com/fullstack">https://scrimba.com/fullstack</a></p><p><i>Other notable highlights about our "IDE videos":</i></p><p>- Based on events (code edits, cursor moves, etc) instead of pixels</p><p>- Roughly 100x smaller than traditional videos</p><p>- Recording is simple: just talk while you code</p><p>- Can be embedded in blogs, docs, or courses, like MDN does here: <a href="https://developer.mozilla.org/en-US/curriculum/core/css-fundamentals/" rel="nofollow">https://developer.mozilla.org/en-US/curriculum/core/css-fund...</a></p><p>- Entirely built in Imba, a language I created myself: <a href="https://news.ycombinator.com/item?id=28207662">https://news.ycombinator.com/item?id=28207662</a></p><p>We think this format could be useful for open-source maintainers and API-focused teams looking to create interactive docs or walkthroughs. Our videos are already embedded by MDN, LangChain, and Coursera.</p><p>If you maintain a library or SDK and want an interactive video about it, let us know‚Äîhappy to record one for free that you can use however you like.</p><p>Would love to answer any questions or hear people's feedback!</p></div></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[MinC Is Not Cygwin (200 pts)]]></title>
            <link>https://minc.commandlinerevolution.nl/english/home.html</link>
            <guid>43770445</guid>
            <pubDate>Wed, 23 Apr 2025 10:21:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://minc.commandlinerevolution.nl/english/home.html">https://minc.commandlinerevolution.nl/english/home.html</a>, See on <a href="https://news.ycombinator.com/item?id=43770445">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><section>
<article>
<p>Welcome to the MinC home page. MinC is a Unix emulator for Windows, based on the OpenBSD operating system.
MinC was written to help children at vocational education learn Linux without the hassle of virtualization. 
It runs on all versions of Windows, except Win95 and Win98.
</p>
<p>MinC is a tiny kernel which runs on Windows. The rest of the software was 
taken verbatim from OpenBSD, version 6.1. This means that by installing MinC, 
you run OpenBSD on your Windows machine at native speed.
</p>
</article>
<article>
<img src="https://minc.commandlinerevolution.nl/_images/ppuf1000X907_small.png" width="96" alt="Puffy, the OpenBSD mascotte" title="Puffy"></article>
</section>

<section>

<article>
<h2>Install</h2>
<p>To install MinC you no longer have to copy it "by hand". You can now use the new installation
wizard. Download the current version by clicking the link:
<a href="https://minc.commandlinerevolution.nl/minc-6.1.exe">minc-6.1.exe</a> (20Mb).
</p>
<img src="https://minc.commandlinerevolution.nl/_images/Installer-1.0_10.png" width="288"><p>After installation you will see a new icon called <b>Console</b> on your Desktop.
This starts the MinC terminal.
</p>
</article>

<article>
<h2>Use</h2>
<p>The current MinC realease contains the following functions:
</p>
<ul>
<li>All Unix standard commands, like: ls, du, ps, df, find, grep, awk, mkdir, chmod, 
chown, wc, top, diff, etc.
</li><li>Editing: less, vi, nano, hexedit
</li><li>Compression: unzip, gzip, bzip2, xz
</li><li>Networking: route, ifconfig, ping, ftp, ssh, scp, telnet, wget, curl, lynx, mutt, BitchX
</li><li>Development: vim, git, ImageMagick
</li></ul>
<p>Services and daemons, like Apache (httpd), Sendmail and sshd are not yet available, 
but will be released as soon as possible.
</p>
<p>If you like to compile code for MinC, you can install the toolchain: 
<a href="https://minc.commandlinerevolution.nl/buildtools-6.1.exe">buildtools-6.1.exe</a> The package contains BSD libc, GNU 
binutils, GNU cc, GNU make, vim and git.
</p>
</article>

<article>
<h2>Donate</h2>
<p>Writing the kernel took a lot of time. To help me finish MinC, you can make a donation
via PayPal. Any amount is welcome.
</p>

<p>Let me know if you wish to have a particular software included in the next release.
Send an e-mail to dboland@xs4all.nl.
</p>
</article>

<article>
<h2>Antivirus</h2>
<p>MinC works well with antivirus software, such as the built-in
<b>Windows Defender</b> or <b>Kaspersky</b>.
</p>
<p>In some cases you need to temporarily disable antivirus before downloading and 
installing (<a target="_blank" href="https://support.kaspersky.com/KIS/21.2/en-US/70886.htm" title="How to pause and resume computer protection">Kaspersky</a>). After that, MinC works fine.
</p>
<p>In other cases, MinC installs well, but the antivirus does not let you 
run its programs. You need to exclude the MinC root directory from scanning 
(<a target="_blank" href="https://help.f-secure.com/product.html#home/total-windows/latest/en/allow_program_on_sys_control_blocklist_to_run-latest-en" title="Allowing blocked applications">f-secure</a>).
</p>
</article>

<article>
<h2>Visual Studio</h2>
<p>MinC can be integrated into <b>MS Visual Studio Code</b> as a terminal.
Put following snippet in your personal settings.json file:
</p>
<pre>"terminal.integrated.profiles.windows": {
   "MinC": {
      "path": "<u>C:\\MinC</u>\\sbin\\bsd.exe"
   }
}
</pre>
<p>If you installed MinC at another location, make sure 
the underlined part is correct.
</p>
</article>

</section>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[EU fines Apple ‚Ç¨500M and Meta ‚Ç¨200M (127 pts)]]></title>
            <link>https://www.politico.eu/article/eu-fines-apple-meta-breaking-europe-digital-markets-act-dma/</link>
            <guid>43770396</guid>
            <pubDate>Wed, 23 Apr 2025 10:12:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.politico.eu/article/eu-fines-apple-meta-breaking-europe-digital-markets-act-dma/">https://www.politico.eu/article/eu-fines-apple-meta-breaking-europe-digital-markets-act-dma/</a>, See on <a href="https://news.ycombinator.com/item?id=43770396">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-count="4" data-remainder="0" data-block-attributes="[]" data-page="0">
					
<div>
			<p><img src="https://www.politico.eu/cdn-cgi/image/width=380,height=253,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/13/GettyImages-2112143030-1.jpg" srcset="https://www.politico.eu/cdn-cgi/image/width=480,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/13/GettyImages-2112143030-1.jpg 480w, https://www.politico.eu/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/13/GettyImages-2112143030-1.jpg 768w, https://www.politico.eu/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/13/GettyImages-2112143030-1.jpg 1024w, https://www.politico.eu/cdn-cgi/image/width=1280,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/13/GettyImages-2112143030-1.jpg 1280w, https://www.politico.eu/cdn-cgi/image/width=1440,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/13/GettyImages-2112143030-1.jpg 1440w, https://www.politico.eu/cdn-cgi/image/width=1920,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/13/GettyImages-2112143030-1.jpg 1920w, https://www.politico.eu/cdn-cgi/image/width=2640,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/13/GettyImages-2112143030-1.jpg 2640w" sizes="(max-width: 380px) 100vw, 380px" alt="Big Tech fines just got political, whether the Commission likes it or not" width="380" height="253" role="" loading="lazy" decoding="async">

					</p>
	
	
		
		<div>

			
			
			
			
			
							<h2>
										<a href="https://www.politico.eu/article/big-tech-fines-digital-markets-act-political-european-commission-meta-apple-donald-trump-tariffs/">
						Big Tech fines just got political, whether the Commission likes it or not					</a>
				</h2>
			
			
							<p>By delaying expected announcements on fining Apple and Meta, the bloc‚Äôs Digital Markets Act is being dragged into the global trade war.</p>
			
			<p><span>
			Apr 14		</span>
	
	
	
<span>
	<span>5 mins read</span>
</span>
</p>

			
			
			
			
					</div>

			</div>

<div>
			<p><img src="https://www.politico.eu/cdn-cgi/image/width=380,height=242,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/08/GettyImages-1090864832-scaled.jpg" srcset="https://www.politico.eu/cdn-cgi/image/width=480,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/08/GettyImages-1090864832-scaled.jpg 480w, https://www.politico.eu/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/08/GettyImages-1090864832-scaled.jpg 768w, https://www.politico.eu/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/08/GettyImages-1090864832-scaled.jpg 1024w, https://www.politico.eu/cdn-cgi/image/width=1280,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/08/GettyImages-1090864832-scaled.jpg 1280w, https://www.politico.eu/cdn-cgi/image/width=1440,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/08/GettyImages-1090864832-scaled.jpg 1440w, https://www.politico.eu/cdn-cgi/image/width=1920,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/08/GettyImages-1090864832-scaled.jpg 1920w, https://www.politico.eu/cdn-cgi/image/width=2640,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/08/GettyImages-1090864832-scaled.jpg 2640w" sizes="(max-width: 380px) 100vw, 380px" alt="Top EU official downplays expectations over Apple, Meta digital fines" width="380" height="242" role="" loading="lazy" decoding="async">

					</p>
	
	
		
		<div>

			
			
			
			
			
							<h2>
										<a href="https://www.politico.eu/article/apple-meta-top-eu-official-downplays-expectations-over-apple-meta-digital-fines/">
						Top EU official downplays expectations over Apple, Meta digital fines					</a>
				</h2>
			
			
							<p>The bloc‚Äôs Digital Markets Act is about compliance, not fines, says Olivier Guersent.</p>
			
			<p><span>
			Apr 8		</span>
	
	
	
<span>
	<span>2 mins read</span>
</span>
</p>

			
			
			
			
					</div>

			</div>

<div>
			<p><img src="https://www.politico.eu/cdn-cgi/image/width=380,height=259,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/02/GettyImages-2204511832-scaled.jpg" srcset="https://www.politico.eu/cdn-cgi/image/width=480,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/02/GettyImages-2204511832-scaled.jpg 480w, https://www.politico.eu/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/02/GettyImages-2204511832-scaled.jpg 768w, https://www.politico.eu/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/02/GettyImages-2204511832-scaled.jpg 1024w, https://www.politico.eu/cdn-cgi/image/width=1280,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/02/GettyImages-2204511832-scaled.jpg 1280w, https://www.politico.eu/cdn-cgi/image/width=1440,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/02/GettyImages-2204511832-scaled.jpg 1440w, https://www.politico.eu/cdn-cgi/image/width=1920,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/02/GettyImages-2204511832-scaled.jpg 1920w, https://www.politico.eu/cdn-cgi/image/width=2640,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/04/02/GettyImages-2204511832-scaled.jpg 2640w" sizes="(max-width: 380px) 100vw, 380px" alt="EU fines big carmakers ‚Ç¨458M for green cartel" width="380" height="259" role="" loading="lazy" decoding="async">

					</p>
	
	
		
		<div>

			
			
			
			
			
							<h2>
										<a href="https://www.politico.eu/article/eu-fines-big-carmakers-e458m-for-green-cartel/">
						EU fines big carmakers ‚Ç¨458M for green cartel					</a>
				</h2>
			
			
							<p>European groups received some of the biggest fines.</p>
			
			<p><span>
			Apr 1		</span>
	
	
	
<span>
	<span>1 min read</span>
</span>
</p>

			
			
			
			
					</div>

			</div>

<div>
			<p><img src="https://www.politico.eu/cdn-cgi/image/width=380,height=253,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/03/28/1742468554355_20250320_EP-182433A_PB9_227-scaled.jpg" srcset="https://www.politico.eu/cdn-cgi/image/width=480,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/03/28/1742468554355_20250320_EP-182433A_PB9_227-scaled.jpg 480w, https://www.politico.eu/cdn-cgi/image/width=768,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/03/28/1742468554355_20250320_EP-182433A_PB9_227-scaled.jpg 768w, https://www.politico.eu/cdn-cgi/image/width=1024,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/03/28/1742468554355_20250320_EP-182433A_PB9_227-scaled.jpg 1024w, https://www.politico.eu/cdn-cgi/image/width=1280,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/03/28/1742468554355_20250320_EP-182433A_PB9_227-scaled.jpg 1280w, https://www.politico.eu/cdn-cgi/image/width=1440,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/03/28/1742468554355_20250320_EP-182433A_PB9_227-scaled.jpg 1440w, https://www.politico.eu/cdn-cgi/image/width=1920,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/03/28/1742468554355_20250320_EP-182433A_PB9_227-scaled.jpg 1920w, https://www.politico.eu/cdn-cgi/image/width=2640,quality=80,onerror=redirect,format=auto/wp-content/uploads/2025/03/28/1742468554355_20250320_EP-182433A_PB9_227-scaled.jpg 2640w" sizes="(max-width: 380px) 100vw, 380px" alt="EU set to fine Apple and Meta amid escalating trade war" width="380" height="253" role="" loading="lazy" decoding="async">

					</p>
	
	
		
		<div>

			
			
			
			
			
							<h2>
										<a href="https://www.politico.eu/article/eu-set-fine-apple-meta-amid-escalating-trade-war/">
						EU set to fine Apple and Meta amid escalating trade war					</a>
				</h2>
			
			
							<p>The Commission‚Äôs first fines under its Digital Markets Act are expected this week.</p>
			
			<p><span>
			Mar 31		</span>
	
	
	
<span>
	<span>4 mins read</span>
</span>
</p>

			
			
			
			
					</div>

			</div>
				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[America's cyber defenses are being dismantled from the inside (310 pts)]]></title>
            <link>https://www.theregister.com/2025/04/23/trump_us_security/</link>
            <guid>43770382</guid>
            <pubDate>Wed, 23 Apr 2025 10:10:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2025/04/23/trump_us_security/">https://www.theregister.com/2025/04/23/trump_us_security/</a>, See on <a href="https://news.ycombinator.com/item?id=43770382">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p><span>Opinion</span> We almost lost the Common Vulnerabilities and Exposures (CVE) database system, but that's only the tip of the iceberg of what President Trump and company are doing to US cybersecurity efforts.</p>
<p>When it comes to technology security, let's face it. We're lame and we're lazy. But we don't normally go out of our way to make it worse. Until now. Until President Donald Trump and his cohort of tech minions, better known as Elon Musk's Department of Government Efficiency (DOGE), took over.</p>
<p>You might think, if you're outside the US, who cares? Unfortunately, whether you like it or not, the US has long taken the lead in technical security.</p>

    

<p>Take, for example, the fact that we <a target="_blank" href="https://www.theregister.com/2025/04/16/homeland_security_funding_for_cve/">almost lost the Common Vulnerabilities and Exposures (CVE) database</a>. Anyone familiar with cybersecurity will have heard of the CVE. It's the master list of essentially all security holes for the last 25 years.</p>

        


        

<p>As Jen Easterly, former director of the Cybersecurity and Infrastructure Security Agency (CISA), explained on LinkedIn: "It's the global catalog that helps everyone ‚Äì security teams, software vendors, researchers, governments ‚Äì organize and talk about vulnerabilities using the same reference system."</p>
<p>Without it, everyone is using a different catalog or no catalog at all, no one knows if they're talking about the same problem, and defenders waste precious time figuring out what's wrong. Worst of all, threat actors take advantage of the confusion.</p>

        

<p>How could such an important project go under? Easily. It wasn't funded. The group that oversees the CVE, CISA, had been targeted for staff cuts of over a third of its employees. In addition, CISA employees were given until midnight Monday to choose between <a target="_blank" rel="nofollow" href="https://www.govinfosecurity.com/cisa-braces-for-major-workforce-cuts-amid-security-fears-a-27996">staying on the job or resigning</a>. So it was that the decision to <a target="_blank" href="https://www.theregister.com/2025/04/16/cve_program_funding_save/?td=rt-3a">extend the MITRE CVE contract didn't come until literally the 11th hour</a>.</p>
<p>That contract will still run out in March 2026. Who knows if Trump et al will extend it again? Once upon a time, this kind of decision would be a no-brainer. I mean, all technology security, for better or worse, depends on the CVE system. Now? Your guess is as good as mine.</p>
<p>You can't depend on guesses when it comes to security.</p>

        

<p>The Trump administration's tenure, though, has already been marked by significant setbacks to US federal government technology security efforts, over and over again.</p>
<p>For example, General Timothy D. Haugh, the head of the National Security Agency (NSA) and US Cyber Command, was <a target="_blank" href="https://www.theregister.com/2025/04/04/nsa_boss_deputy_fired/">fired in early April</a>. General Haugh was a pivotal figure in defending the nation's cyber infrastructure, especially noted for countering Russian interference dating back to the 2016 election. His dismissal, along with the removal of other senior cyber officials, has significantly weakened the country's cyber defense. Why? What was his offense? Laura Loomer, a far-right conspiracy theorist and Trump buddy, disliked him.</p>
<p>The administration has also systematically dismantled critical cybersecurity advisory bodies. Notably, the Cyber Safety Review Board (CSRB), established under the previous Biden administration to investigate major cyber incidents, was effectively disbanded by terminating all its members. This <a target="_blank" href="https://www.theregister.com/2025/01/22/dhs_axes_cyber_advisory_boards/">move halted</a> investigations into significant cyberattacks, including the Chinese "Salt Typhoon" hacks.</p>
<p>Mind you, the Salt Typhoon attacks were also aimed at Trump and VP JD Vance, but for some reason, don't ask me why, they don't care. We already know that Trump is buddy-buddy with Russia, but China? The country he's having a major trade war with? This makes no sense to me.</p>
<p>So, who should be in charge of protecting the US's cyber resources? The state and local governments, would you believe?</p>
<p>According to Trump's <a target="_blank" rel="nofollow" href="https://www.whitehouse.gov/presidential-actions/2025/03/test/">Achieving Efficiency Through State and Local Preparedness</a> executive order: "Preparedness is most effectively owned and managed at the State, local, and even individual levels, supported by a competent, accessible, and efficient Federal Government. Citizens are the immediate beneficiaries of sound local decisions and investments designed to address risks, including cyberattacks, wildfires, hurricanes, and space weather."</p>
<ul>

<li><a href="https://www.theregister.com/2025/04/14/miyazaki_ai_and_intellectual_property/">It's fun making Studio Ghibli-style images with ChatGPT ‚Äì but intellectual property is no laughing matter</a></li>

<li><a href="https://www.theregister.com/2025/02/07/opinion_column_musk/">Musk's move fast and break things mantra won't work in US.gov</a></li>

<li><a href="https://www.theregister.com/2025/01/28/windows_10_demise_linux/">Windows 10's demise nears, but Linux is forever</a></li>

<li><a href="https://www.theregister.com/2025/01/11/opinion_column_us_moves/">Is it really the plan to take over Greenland and the Panama Canal? It's been a weird week</a></li>
</ul>
<p>Part of that clearly sets the stage for getting rid of the Federal Emergency Management Administration (FEMA), but space weather!? Cyberattacks!!? Do you know how few real IT security experts are out there? Do you think all 50 states can hire enough? I don't. Oh, and let us not forget, cyberattacks aren't only made against, say, North Carolina and West Virginia, they hit everyone, everywhere. Fifty different groups trying to cope with state-sponsored elite hacking teams is too stupid for words.</p>
<p>Oh, and did I mention? Earlier in his tenure, <a target="_blank" rel="nofollow" href="https://cyberscoop.com/trump-pause-grants-aid-federal-cyber-programs/">Trump had cut funding for cybersecurity-specific federal grant programs</a>. So, good luck hiring top-flight security mavens to protect your home state.</p>
<p>Let's also not forget the enemy inside. DOGE has access to sensitive federal systems. These include the Treasury Department's payment systems and the Social Security System. It appears that this data had been copied to God alone knows where and can now be accessed by people without the right to see or use it.</p>
<p>So not only has America's external cyber defenses been dismantled, but the data is out there for the greatest security attacks ever on individual citizens. <a target="_blank" href="https://www.theregister.com/2025/04/15/landmark_admin_data_loss/?td=rt-3a">1.6 million people had their Social Security information stolen from an insurance company</a>? That's so penny-ante.</p>
<p>The US will suffer the most from these self-inflicted security wounds, but the entire world will feel the pain. "Buckle up, we're in for a bumpy ride." ¬Æ</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple and Meta fined millions for breaching EU law (223 pts)]]></title>
            <link>https://ca.finance.yahoo.com/news/apple-fined-570-million-meta-094701712.html</link>
            <guid>43770337</guid>
            <pubDate>Wed, 23 Apr 2025 10:01:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ca.finance.yahoo.com/news/apple-fined-570-million-meta-094701712.html">https://ca.finance.yahoo.com/news/apple-fined-570-million-meta-094701712.html</a>, See on <a href="https://news.ycombinator.com/item?id=43770337">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>  <p><!-- HTML_TAG_START -->By Foo Yun Chee and Jan Strupczewski<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->BRUSSELS (Reuters) -Apple was fined 500 million euros ($570 million) on Wednesday and Meta 200 million euros, as European Union antitrust regulators handed out the first sanctions under landmark legislation aimed at curbing the power of Big Tech.<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->The EU fines could stoke tensions with U.S. President Donald Trump who has threatened to levy tariffs against countries that penalise U.S. companies.<!-- HTML_TAG_END --></p>    <p><!-- HTML_TAG_START -->They follow a year-long investigation by the European Commission, the EU executive, into whether the companies comply with the Digital Markets Act (DMA) that seeks to allow smaller rivals into markets dominated by the biggest companies.<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->The fines signal that the EU is sticking to its guns in enforcing the new rules, which were introduced in 2023. That is despite Trump citing the DMA while vowing in February to "defend American companies and innovators from overseas extortion".<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->Alphabet's Google and Elon Musk's X are also facing potential fines from European regulators.<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->The EU will be encouraged by a U.S. court judgment earlier this month which found that Google illegally dominates two markets for online advertising technology, Commission sources say. That ruling could pave the way for U.S. antitrust prosecutors to seek a breakup of its ad products.<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->Apple said it would challenge the EU fine.<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->"Today's announcements are yet another example of the European Commission unfairly targeting Apple in a series of decisions that are bad for the privacy and security of our users, bad for products, and force us to give away our technology for free," Apple said in an emailed statement.<!-- HTML_TAG_END --></p>    <p><!-- HTML_TAG_START -->Meta also criticised the EU decision.<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->"The European Commission is attempting to handicap successful American businesses while allowing Chinese and European companies to operate under different standards," its Chief Global Affairs Officer Joel Kaplan said in an emailed statement.<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->"This isn't just about a fine; the Commission forcing us to change our business model effectively imposes a multi-billion-dollar tariff on Meta while requiring us to offer an inferior service."<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->The fines are modest compared to the penalties meted out by the previous EU antitrust chief Margrethe Vestager during her term. Sources, speaking on condition of anonymity, have said this is due to the short period of the breaches, a focus on compliance rather than sanctions, and a desire to avoid possible retaliation from Trump.<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->PAY-OR-CONSENT MODEL<!-- HTML_TAG_END --></p>  <p><!-- HTML_TAG_START -->The EU competition watchdog said Apple must remove technical and commercial restrictions that prevent app developers from steering users to cheaper deals outside the App Store.<!-- HTML_TAG_END --></p> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenAI wants to buy Chrome and make it an "AI-first" experience (137 pts)]]></title>
            <link>https://arstechnica.com/ai/2025/04/chatgpt-head-tells-court-openai-is-interested-in-buying-chrome/</link>
            <guid>43770312</guid>
            <pubDate>Wed, 23 Apr 2025 09:55:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/ai/2025/04/chatgpt-head-tells-court-openai-is-interested-in-buying-chrome/">https://arstechnica.com/ai/2025/04/chatgpt-head-tells-court-openai-is-interested-in-buying-chrome/</a>, See on <a href="https://news.ycombinator.com/item?id=43770312">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          
          
<p>According to Turley, OpenAI would throw its proverbial hat in the ring if Google had to sell. When asked if OpenAI would want Chrome, he was unequivocal. "Yes, we would, as would many other parties," <a href="https://www.theinformation.com/articles/openai-buy-chrome-executive-testifies">Turley said</a>.</p>
<p>OpenAI has reportedly considered building its own Chromium-based browser to compete with Chrome. Several months ago, the company hired former Google developers Ben Goodger and Darin Fisher, both of whom worked to bring Chrome to market.</p>
<figure><a href="https://cdn.arstechnica.net/wp-content/uploads/2025/01/google-chrome-browser.jpg">
    <p><img width="1000" height="665" src="https://cdn.arstechnica.net/wp-content/uploads/2025/01/google-chrome-browser.jpg" alt="Close-up of Google Chrome Web Browser web page on the web browser. Chrome is widely used web browser developed by Google." decoding="async" loading="lazy" srcset="https://cdn.arstechnica.net/wp-content/uploads/2025/01/google-chrome-browser.jpg 1000w, https://cdn.arstechnica.net/wp-content/uploads/2025/01/google-chrome-browser-640x426.jpg 640w, https://cdn.arstechnica.net/wp-content/uploads/2025/01/google-chrome-browser-768x511.jpg 768w, https://cdn.arstechnica.net/wp-content/uploads/2025/01/google-chrome-browser-980x652.jpg 980w" sizes="auto, (max-width: 1000px) 100vw, 1000px">
                  </p>
          <figcaption>
        <div>
    
    <p><span>
          Credit:

          
          Getty Images

                  </span>
          </p>
  </div>
      </figcaption>
      </a></figure>
<p>It's not hard to see why OpenAI might want a browser, particularly Chrome with its 4 billion users and 67 percent market share. Chrome would instantly give OpenAI a massive install base of users who have been incentivized to use Google services. If OpenAI were running the show, you can bet ChatGPT would be integrated throughout the experience‚ÄîTurley said as much, predicting an "AI-first" experience. The user data flowing to the owner of Chrome could also be invaluable in training <a href="https://arstechnica.com/ai/2025/01/openai-launches-operator-an-ai-agent-that-can-operate-your-computer/">agentic AI models</a> that can operate browsers on the user's behalf.</p>
<p>Interestingly, there's so much discussion about who should buy Chrome, but relatively little about spinning off Chrome into an independent company. Google has contended that Chrome can't survive on its own. However, the existence of Google's multibillion-dollar search placement deals, which the DOJ wants to end, suggests otherwise. Regardless, if Google has to sell, and OpenAI has the cash, we might get the proposed "AI-first" browsing experience.</p>


          
                  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Gruen Transfer is consuming the internet (231 pts)]]></title>
            <link>https://sebs.website/blog/the%20gruen-transfer-is-consuming-the-internet</link>
            <guid>43769936</guid>
            <pubDate>Wed, 23 Apr 2025 08:49:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sebs.website/blog/the%20gruen-transfer-is-consuming-the-internet">https://sebs.website/blog/the%20gruen-transfer-is-consuming-the-internet</a>, See on <a href="https://news.ycombinator.com/item?id=43769936">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    <p>Have you ever walked into a supermarket, pharmacy, or department store looking to buy a specific item, only to find the layout confusing? Perhaps you ended up aimlessly strolling around, purchasing other items? This is deliberate, and known as the Gruen Transfer.  </p>
<p>The 'Transfer' part is the moment that you, as a consumer surrounded by a deliberately confusing layout, lose track of your original intentions.  </p>
<p>We've all experienced it, and now it's starting to consume the internet. It first appeared on Facebook, with the introduction of the feed. Originally intended as a way to simplify updates from your friends, and hold your attention captive for longer. However somewhere along the line, the feed became more than that. Facebook now feels more confusing than my local department store, and my original reason for visiting (keeping up to date with friends &amp; family) is quickly forgotten. The last time I checked Facebook, maybe 10% of my feed was updates from friends. The rest was a combination of ads, memes, and influencer marketing videos, leaving me doom scrolling endlessly.    </p>
<p>This isn't relegated to Facebook though, or even social media. So many websites are now designed to disorient you upon visiting, so that you start acting impulsively. This can even happen in a relatively benign way - who hasn't looked up something on Wikipedia and fell down a rabbit hole that ended looking at a <a href="https://en.wikipedia.org/wiki/List_of_animals_awarded_human_credentials">list of animals awarded human credentials</a>?  </p>
<p>It pops up in other areas as well, closely associated with several UX dark patterns. If you've tried to permanently delete your account from any major social network, you‚Äôll know what I mean. It is utterly confusing to find and navigate to the page you need, and the site will desperately conjole you into doing something other than deleting your account. It's the same for trying to alter your insurance policy, cancel subscriptions, spend frequent flyer miles, and so on...  </p>
<p>I wonder where all this will end? There must be a point at which the friction generated by needless complexity has a detrimental effect. A kind of <a href="https://en.wikipedia.org/wiki/Laffer_curve#:~:text=In%20economics%2C%20the%20Laffer%20curve,of%20the%20government's%20tax%20revenue.">Laffer Curve</a> of web design.  </p>
<p>In the EU, it is a legal requirement to allow your customers the same method, with the same number of steps and complexity, for canceling as for subscribing. So if it takes 10 seconds to fill in a form online to get subscribed, they need to offer the same ease of use for canceling.  </p>
<p>I like this idea of ‚Äòcomplexity‚Äô as a measure for legislation. Now if only they could apply the same thing to my local Boots when I'm trying to buy toothpaste.  </p>
                  </div><p>If you've made it this far I owe you a beer the next time I see you üç∫. Want to get in touch? <a href="http://twitter.com/sebs_tweets">Follow me on Twitter(X)</a>.</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Advanced Python Features (329 pts)]]></title>
            <link>https://blog.edward-li.com/tech/advanced-python-features/</link>
            <guid>43769486</guid>
            <pubDate>Wed, 23 Apr 2025 07:21:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.edward-li.com/tech/advanced-python-features/">https://blog.edward-li.com/tech/advanced-python-features/</a>, See on <a href="https://news.ycombinator.com/item?id=43769486">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
      <p>Python is one of the <a href="https://survey.stackoverflow.co/2024/technology#most-popular-technologies">most widely adopted programming languages</a> in the world. Yet, because of it‚Äôs ease and simplicity to just ‚Äúget <em>something</em> working‚Äù, it‚Äôs also one of the most underappreciated.</p>
<p>If you search for <a href="https://www.google.com/search?q=Top+10+Advanced+Python+Tricks"><code>Top 10 Advanced Python Tricks</code></a> on Google or any other search engine, you‚Äôll find tons of blogs or LinkedIn articles going over trivial (but still useful) things like <code>generators</code> or <code>tuples</code>.</p>
<p><em><strong>However</strong></em>, as someone who‚Äôs written Python for the past 12 years, I‚Äôve come across a lot of really interesting, underrated, unique, or (as some might say) ‚Äúun-pythonic‚Äù tricks to <em>really</em> level up what Python can do.</p>
<p>That‚Äôs why I decided to compile the top 14 of said features alongside examples and additional resources if you want to dive deeper into any of them.</p>
<blockquote>
<p>These tips &amp; tricks were originally featured as part of a 14-day series on X/Twitter between March 1st and March 14th (pi-day, hence why there are 14 topics in the article).</p>
<p>All X/Twitter links will also be accompanied with a Nitter counterpart. Nitter is a privacy-abiding open source Twitter frontend. Learn more about the project <a href="https://github.com/zedeus/nitter">here</a>.</p></blockquote>
<h2 id="table-of-contents">Table of Contents</h2>
<ul>
<li><a href="#1-typing-overloads">1. Typing Overloads</a></li>
<li><a href="#2-keyword-only-and-positional-only-arguments">2. Keyword-only and Positional-only Arguments</a></li>
<li><a href="#3-future-annotations">3. Future Annotations</a></li>
<li><a href="#4-generics">4. Generics</a></li>
<li><a href="#5-protocols">5. Protocols</a></li>
<li><a href="#6-context-managers">6. Context Managers</a></li>
<li><a href="#7-structural-pattern-matching">7. Structural Pattern Matching</a></li>
<li><a href="#8-python-slots">8. Python Slots</a></li>
<li><a href="#9-python-nitpicks">9. Python Nitpicks</a></li>
<li><a href="#10-advanced-f-string-string-formatting">10. Advanced f-string String Formatting</a></li>
<li><a href="#11-cache--lru_cache">11. Cache / lru_cache</a></li>
<li><a href="#12-python-futures">12. Python Futures</a></li>
<li><a href="#13-proxy-properties">13. Proxy Properties</a></li>
<li><a href="#14-metaclasses">14. Metaclasses</a></li>
</ul>
<h2 id="1-typing-overloads">1. Typing Overloads</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1895937864527192320">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1895937864527192320">Nitter Mirror</a></strong></p></blockquote>
<p><strong><code>@overload</code></strong> is a decorator from Python‚Äôs <code>typing</code> module that lets you define multiple signatures for the same function. Each overload tells the type checker exactly what types to expect when specific parameters are passed in.</p>
<p>For example, the code below dictates that <em>only</em> <code>list[str]</code> can be returned if <code>mode=split</code>, and <em>only</em> <code>str</code> can be returned if <code>mode=upper</code>. (The <code>Literal</code> type also forces mode to be either one of <code>split</code> or <code>upper</code>)</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> typing <span>import</span> Literal, overload
</span></span><span><span>
</span></span><span><span><span>@overload</span>
</span></span><span><span><span>def</span> <span>transform</span>(data: str, mode: Literal[<span>"split"</span>]) <span>-&gt;</span> list[str]:
</span></span><span><span>    <span>...</span>
</span></span><span><span>
</span></span><span><span><span>@overload</span>
</span></span><span><span><span>def</span> <span>transform</span>(data: str, mode: Literal[<span>"upper"</span>]) <span>-&gt;</span> str:
</span></span><span><span>    <span>...</span>
</span></span><span><span>
</span></span><span><span><span>def</span> <span>transform</span>(data: str, mode: Literal[<span>"split"</span>, <span>"upper"</span>]) <span>-&gt;</span> list[str] <span>|</span> str:
</span></span><span><span>    <span>if</span> mode <span>==</span> <span>"split"</span>:
</span></span><span><span>        <span>return</span> data<span>.</span>split()
</span></span><span><span>    <span>else</span>:
</span></span><span><span>        <span>return</span> data<span>.</span>upper()
</span></span><span><span>
</span></span><span><span>split_words <span>=</span> transform(<span>"hello world"</span>, <span>"split"</span>)  <span># Return type is list[str]</span>
</span></span><span><span>split_words[<span>0</span>]  <span># Type checker is happy</span>
</span></span><span><span>
</span></span><span><span>upper_words <span>=</span> transform(<span>"hello world"</span>, <span>"upper"</span>)  <span># Return type is str</span>
</span></span><span><span>upper_words<span>.</span>lower()  <span># Type checker is happy</span>
</span></span><span><span>
</span></span><span><span>upper_words<span>.</span>append(<span>"!"</span>)  <span># Cannot access attribute "append" for "str"</span>
</span></span></code></pre></div><p>Overloads can do more than just change return type based on arguments! In another example, we use typing overloads to ensure that either one of <code>id</code> OR <code>username</code> are passed in, but <em><strong>never both</strong></em>.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>@overload</span>
</span></span><span><span><span>def</span> <span>get_user</span>(id: int <span>=</span> <span>...</span>, username: <span>None</span> <span>=</span> <span>None</span>) <span>-&gt;</span> User:
</span></span><span><span>    <span>...</span>
</span></span><span><span>
</span></span><span><span><span>@overload</span>
</span></span><span><span><span>def</span> <span>get_user</span>(id: <span>None</span> <span>=</span> <span>None</span>, username: str <span>=</span> <span>...</span>) <span>-&gt;</span> User:
</span></span><span><span>    <span>...</span>
</span></span><span><span>
</span></span><span><span><span>def</span> <span>get_user</span>(id: int <span>|</span> <span>None</span> <span>=</span> <span>None</span>, username: str <span>|</span> <span>None</span> <span>=</span> <span>None</span>) <span>-&gt;</span> User:
</span></span><span><span>    <span>...</span>
</span></span><span><span>
</span></span><span><span>get_user(id<span>=</span><span>1</span>)  <span># Works!</span>
</span></span><span><span>get_user(username<span>=</span><span>"John"</span>)  <span># Works!</span>
</span></span><span><span>get_user(id<span>=</span><span>1</span>, username<span>=</span><span>"John"</span>)  <span># No overloads for "get_user" match the provided arguments</span>
</span></span></code></pre></div><blockquote>
<p>The <code>...</code> is a special value often used in overloads to indicate that a parameter is optional, but still requires a value.</p></blockquote>
<p><strong>‚ú® Quick bonus trick:</strong> As you probably saw, Python also has support for <strong>String Literals</strong>. These help assert that only specific string values can be passed to a parameter, giving you even more type safety. Think of them like a lightweight form of Enums!</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>def</span> <span>set_color</span>(color: Literal[<span>"red"</span>, <span>"blue"</span>, <span>"green"</span>]) <span>-&gt;</span> <span>None</span>:
</span></span><span><span>    <span>...</span>
</span></span><span><span>
</span></span><span><span>set_color(<span>"red"</span>)
</span></span><span><span>set_color(<span>"blue"</span>)
</span></span><span><span>set_color(<span>"green"</span>)
</span></span><span><span>set_color(<span>"fuchsia"</span>)  <span># Argument of type "Literal['fuchsia']" cannot be assigned to parameter "color"</span>
</span></span></code></pre></div><h3 id="additional-resources">Additional Resources</h3>
<ul>
<li><a href="https://adamj.eu/tech/2021/05/29/python-type-hints-how-to-use-overload/">Python Type Hints: How to use <code>@overload</code></a></li>
<li><a href="https://peps.python.org/pep-3124/">PEP 3124 ‚Äì Overloading, Generic Functions, Interfaces, and Adaptation</a></li>
<li><a href="https://docs.python.org/3/library/typing.html#overload">Python Docs - Overloads</a></li>
<li><a href="https://peps.python.org/pep-0586/">PEP 586 ‚Äì Literal Types</a></li>
</ul>
<h2 id="2-keyword-only-and-positional-only-arguments">2. Keyword-only and Positional-only Arguments</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1896257050147246306">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1896257050147246306">Nitter Mirror</a></strong></p></blockquote>
<p>By default, both required parameters and optional parameters can be assigned with both positional and keyword syntax. However, what if you <em>don‚Äôt</em> want that to happen? <strong>Keyword-only and Positional-only args</strong> let you control that.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>def</span> <span>foo</span>(a, b, <span>/</span>, c, d, <span>*</span>, e, f):
</span></span><span><span>	<span>#         ^        ^</span>
</span></span><span><span>	<span># Ever seen these before?</span>
</span></span><span><span>	<span>...</span>
</span></span></code></pre></div><p><strong><code>*</code> (asterisk)</strong> marks keyword-only parameters. Arguments <em>after</em> <code>*</code> <em>must</em> be passed as keyword arguments.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>#   KW+POS | KW ONLY</span>
</span></span><span><span><span>#       vv | vv</span>
</span></span><span><span><span>def</span> <span>foo</span>(a, <span>*</span>, b):
</span></span><span><span>    <span>...</span>
</span></span><span><span>
</span></span><span><span><span># == ALLOWED ==</span>
</span></span><span><span>foo(a<span>=</span><span>1</span>, b<span>=</span><span>2</span>)  <span># All keyword</span>
</span></span><span><span>foo(<span>1</span>, b<span>=</span><span>2</span>)  <span># Half positional, half keyword</span>
</span></span><span><span>
</span></span><span><span><span># == NOT ALLOWED ==</span>
</span></span><span><span>foo(<span>1</span>, <span>2</span>)  <span># Cannot use positional for keyword-only parameter</span>
</span></span><span><span><span>#      ^</span>
</span></span></code></pre></div><p><strong><code>/</code> (forward slash)</strong> marks positional-only parameters. Arguments <em>before</em> <code>/</code> <em>must</em> be passed positionally and cannot be used as keyword arguments.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># POS ONLY | KW POS</span>
</span></span><span><span><span>#       vv | vv</span>
</span></span><span><span><span>def</span> <span>bar</span>(a, <span>/</span>, b):
</span></span><span><span>    <span>...</span>
</span></span><span><span>
</span></span><span><span><span># == ALLOWED ==</span>
</span></span><span><span>bar(<span>1</span>, <span>2</span>)  <span># All positional</span>
</span></span><span><span>bar(<span>1</span>, b<span>=</span><span>2</span>)  <span># Half positional, half keyword</span>
</span></span><span><span>
</span></span><span><span><span># == NOT ALLOWED ==</span>
</span></span><span><span>bar(a<span>=</span><span>1</span>, b<span>=</span><span>2</span>)  <span># Cannot use keyword for positional-only parameter</span>
</span></span><span><span><span>#   ^</span>
</span></span></code></pre></div><p>Keyword-only and Positional-only arguments are especially helpful for API developers to enforce how their arguments may be used and passed in.</p>
<h3 id="additional-resources-1">Additional Resources</h3>
<ul>
<li><a href="https://thepythoncodingbook.com/2022/12/11/positional-only-and-keyword-only-arguments-in-python/">Using Positional-Only And Keyword-Only Arguments in Python</a></li>
<li><a href="https://stackoverflow.com/questions/58477827/why-use-positional-only-parameters-in-python-3-8">Stack Overflow: Why use positional-only parameters in Python 3.8+?</a></li>
<li><a href="https://peps.python.org/pep-3102/">PEP 3102 ‚Äì Keyword-Only Arguments</a></li>
<li><a href="https://peps.python.org/pep-0570/">PEP 570 ‚Äì Python Positional-Only Parameters</a></li>
</ul>
<h2 id="3-future-annotations">3. Future Annotations</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1896667340777091212">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1896667340777091212">Nitter Mirror</a></strong></p></blockquote>
<p>A quick history lesson into Python‚Äôs typing:</p>
<blockquote>
<p>This is less of a ‚ÄúPython Feature‚Äù and more of a history lesson into Python‚Äôs type system, and what <code>from __future__ import annotations</code> does if you ever encounter it in production code.</p></blockquote>
<p><em>Python‚Äôs typing system started off as a hack</em>. Function annotation syntax was first introduced with <a href="https://peps.python.org/pep-3107/">PEP 3107</a> back in Python 3.0 as purely an extra way to decorate functions with no actual type-checking functionality.</p>
<p>Proper specifications for type annotations were later added in Python 3.5 through <a href="https://peps.python.org/pep-0484/">PEP 484</a>, but they were designed to be evaluated at bound / definition time. This worked great for simple cases, but it increasingly caused headaches with one type of problem: <strong>forward references</strong>.</p>
<p>This meant that forward references (using a type before it gets defined) required falling back to string literals, making the code less elegant and more error-prone.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># This won't work</span>
</span></span><span><span><span>class</span> <span>Foo</span>:
</span></span><span><span>    <span>def</span> <span>action</span>(self) <span>-&gt;</span> Foo:
</span></span><span><span>        <span># The `-&gt; Foo` return annotation is evaluated immediately during definition,</span>
</span></span><span><span>        <span># but the class `Foo` is not yet fully defined at that point,</span>
</span></span><span><span>        <span># causing a NameError during type checking.</span>
</span></span><span><span>        <span>...</span>
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># This is the workaround -&gt; Using string types</span>
</span></span><span><span><span>class</span> <span>Bar</span>:
</span></span><span><span>    <span>def</span> <span>action</span>(self) <span>-&gt;</span> <span>"Bar"</span>:
</span></span><span><span>        <span># Workaround with string literals, but ugly and error-prone</span>
</span></span><span><span>        <span>...</span>
</span></span></code></pre></div><p>Introduced as a PEP (Python Enhancement Proposal), <a href="https://peps.python.org/pep-0563/">PEP 563: Postponed Evaluation of Annotations</a> aimed to fix this by changing when type annotations were evaluated. Instead of evaluating annotations at definition time, PEP 563 ‚Äú<em>string-ifies</em>‚Äù types behind the scenes and postpones evaluation until they‚Äôre actually needed, typically during static analysis. This allows for cleaner forward references without explicitly defining string literals and reduces the runtime overhead of type annotations.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> __future__ <span>import</span> annotations
</span></span><span><span>
</span></span><span><span><span>class</span> <span>Foo</span>:
</span></span><span><span>    <span>def</span> <span>bar</span>(self) <span>-&gt;</span> Foo:  <span># Works now!</span>
</span></span><span><span>        <span>...</span>
</span></span></code></pre></div><p><strong>So what was the problem?</strong></p>
<p>For type checkers, this change is largely transparent. But because PEP 563 implements this by essentially treating all types as strings behind the scenes, anything that relies on accessing return types at runtime (i.e., ORMs, serialization libraries, validators, dependency injectors, etc.) will have compatibility issues with the new setup.</p>
<p>That‚Äôs why even after ten years after the initial proposal, modern Python (3.13 as of writing this) still relies on the same hacked-together type system introduced in Python 3.5.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Regular Python Typing =====</span>
</span></span><span><span><span>def</span> <span>foobar</span>() <span>-&gt;</span> int:
</span></span><span><span>    <span>return</span> <span>1</span>
</span></span><span><span>
</span></span><span><span>ret_type <span>=</span> foobar<span>.</span>__annotations__<span>.</span>get(<span>"return"</span>)
</span></span><span><span>ret_type
</span></span><span><span><span># Returns: &lt;class 'int'&gt;</span>
</span></span><span><span>new_int <span>=</span> ret_type()
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== With Postponed Evaluation =====</span>
</span></span><span><span><span>from</span> __future__ <span>import</span> annotations
</span></span><span><span>
</span></span><span><span><span>def</span> <span>foobar</span>() <span>-&gt;</span> int:
</span></span><span><span>    <span>return</span> <span>1</span>
</span></span><span><span>
</span></span><span><span>ret_type <span>=</span> foobar<span>.</span>__annotations__<span>.</span>get(<span>"return"</span>)
</span></span><span><span>ret_type
</span></span><span><span><span># "int" (str)</span>
</span></span><span><span>new_int <span>=</span> ret_type()  <span># TypeError: 'str' object is not callable</span>
</span></span></code></pre></div><p>Recently, <a href="https://peps.python.org/pep-0649/">PEP 649</a> proposes a new method to handle Python function and class annotations through deferred, or ‚Äúlazy,‚Äù evaluation. Instead of evaluating annotations at the time of function or class definition, as is traditionally done, this approach delays their computation until they are actually accessed.</p>
<p>This is achieved by compiling the annotation expressions into a separate function, stored in a special <code>__annotate__</code> attribute. When the <code>__annotations__</code> attribute is accessed for the first time, this function is invoked to compute and cache the annotations, making them readily available for subsequent accesses.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># Example code from the PEP 649 proposal</span>
</span></span><span><span>
</span></span><span><span><span>class</span> <span>function</span>:
</span></span><span><span>    <span># __annotations__ on a function object is already a</span>
</span></span><span><span>    <span># "data descriptor" in Python, we're just changing</span>
</span></span><span><span>    <span># what it does</span>
</span></span><span><span>    <span>@property</span>
</span></span><span><span>    <span>def</span> <span>__annotations__</span>(self):
</span></span><span><span>        <span>return</span> self<span>.</span>__annotate__()
</span></span><span><span>
</span></span><span><span><span># ...</span>
</span></span><span><span>
</span></span><span><span><span>def</span> <span>annotate_foo</span>():
</span></span><span><span>    <span>return</span> {<span>'x'</span>: int, <span>'y'</span>: MyType, <span>'return'</span>: float}
</span></span><span><span>
</span></span><span><span><span>def</span> <span>foo</span>(x <span>=</span> <span>3</span>, y <span>=</span> <span>"abc"</span>):
</span></span><span><span>    <span>...</span>
</span></span><span><span>
</span></span><span><span>foo<span>.</span>__annotate__ <span>=</span> annotate_foo
</span></span><span><span>
</span></span><span><span><span>class</span> <span>MyType</span>:
</span></span><span><span>   <span>...</span>
</span></span><span><span>
</span></span><span><span>foo_y_annotation <span>=</span> foo<span>.</span>__annotations__[<span>'y'</span>]
</span></span></code></pre></div><p>This deferred evaluation strategy addresses issues like forward references and circular dependencies, as annotations are only evaluated when needed. Moreover, it enhances performance by avoiding the immediate computation of annotations that might not be used, and maintains full semantic information, supporting introspection and runtime type-checking tools.</p>
<p><strong>‚ú® Bonus Fact:</strong> Since Python 3.11, Python now supports a ‚ÄúSelf‚Äù type (<a href="https://peps.python.org/pep-0673/">PEP 673</a>) that allows for proper typing of methods that return instances of their own class, solving this particular example of self-referential return types.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> typing <span>import</span> Self
</span></span><span><span>
</span></span><span><span><span>class</span> <span>Foo</span>:
</span></span><span><span>    <span>def</span> <span>bar</span>(self) <span>-&gt;</span> Self:
</span></span><span><span>        <span>...</span>
</span></span></code></pre></div><h3 id="additional-resources-2">Additional Resources</h3>
<ul>
<li><a href="https://peps.python.org/pep-0649/#a-history-of-annotations">A History Of Annotations</a></li>
<li><a href="https://blog.derlin.ch/python-type-hints-and-future-annotations">Python, Type Hints, and Future Annotations</a></li>
<li><a href="https://docs.python.org/3/library/__future__.html"><code>__future__</code> ‚Äî Future Statement Definitions</a></li>
<li><a href="https://peps.python.org/pep-0484/">PEP 484 ‚Äì Type Hints</a></li>
<li><a href="https://peps.python.org/pep-0563/">PEP 563 ‚Äì Postponed Evaluation of Annotations</a></li>
<li><a href="https://peps.python.org/pep-0649/">PEP 649 ‚Äì Deferred Evaluation Of Annotations Using Descriptors</a></li>
<li><a href="https://peps.python.org/pep-0749/">PEP 749 ‚Äì Implementing PEP 649</a></li>
</ul>
<h2 id="4-generics">4. Generics</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1896994839516020825">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1896994839516020825">Nitter Mirror</a></strong></p></blockquote>
<p>Did you know that Python has <strong>Generics</strong>? In fact, <a href="https://docs.python.org/3/whatsnew/3.12.html">since Python 3.12</a>, a newer, sleeker, and sexier syntax for Generics was introduced.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>class</span> <span>KVStore</span>[K: str <span>|</span> int, V]:
</span></span><span><span>    <span>def</span> __init__(self) <span>-&gt;</span> <span>None</span>:
</span></span><span><span>        self<span>.</span>store: dict[K, V] <span>=</span> {}
</span></span><span><span>
</span></span><span><span>    <span>def</span> <span>get</span>(self, key: K) <span>-&gt;</span> V:
</span></span><span><span>        <span>return</span> self<span>.</span>store[key]
</span></span><span><span>
</span></span><span><span>    <span>def</span> <span>set</span>(self, key: K, value: V) <span>-&gt;</span> <span>None</span>:
</span></span><span><span>        self<span>.</span>store[key] <span>=</span> value
</span></span><span><span>
</span></span><span><span>kv <span>=</span> KVStore[str, int]()
</span></span><span><span>kv<span>.</span>set(<span>"one"</span>, <span>1</span>)
</span></span><span><span>kv<span>.</span>set(<span>"two"</span>, <span>2</span>)
</span></span><span><span>kv<span>.</span>set(<span>"three"</span>, <span>3</span>)
</span></span></code></pre></div><p>Python 3.5 initially introduced Generics through the <code>TypeVar</code> syntax. However, <a href="https://peps.python.org/pep-0695/">PEP 695</a> for Python 3.12 revamped type annotations with native syntax for generics, type aliases, and more.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># OLD SYNTAX - Python 3.5 to 3.11</span>
</span></span><span><span><span>from</span> typing <span>import</span> Generic, TypeVar
</span></span><span><span>
</span></span><span><span>UnBounded <span>=</span> TypeVar(<span>"UnBounded"</span>)
</span></span><span><span>Bounded <span>=</span> TypeVar(<span>"Bounded"</span>, bound<span>=</span>int)
</span></span><span><span>Constrained <span>=</span> TypeVar(<span>"Constrained"</span>, int, float)
</span></span><span><span>
</span></span><span><span><span>class</span> <span>Foo</span>(Generic[UnBounded, Bounded, Constrained]):
</span></span><span><span>    <span>def</span> __init__(self, x: UnBounded, y: Bounded, z: Constrained) <span>-&gt;</span> <span>None</span>:
</span></span><span><span>        self<span>.</span>x <span>=</span> x
</span></span><span><span>        self<span>.</span>y <span>=</span> y
</span></span><span><span>        self<span>.</span>z <span>=</span> z
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># NEW SYNTAX - Python 3.12+</span>
</span></span><span><span><span>class</span> <span>Foo</span>[UnBounded, Bounded: int, Constrained: int <span>|</span> float]:
</span></span><span><span>    <span>def</span> __init__(self, x: UnBounded, y: Bounded, z: Constrained) <span>-&gt;</span> <span>None</span>:
</span></span><span><span>        self<span>.</span>x <span>=</span> x
</span></span><span><span>        self<span>.</span>y <span>=</span> y
</span></span><span><span>        self<span>.</span>z <span>=</span> z
</span></span></code></pre></div><p>This change also introduces an even more powerful version of <strong>variadic generics</strong>. Meaning you can have an arbitrary number of type parameters for complex data structures and operations.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>class</span> <span>Tuple</span>[<span>*</span>Ts]:
</span></span><span><span>    <span>def</span> __init__(self, <span>*</span>args: <span>*</span>Ts) <span>-&gt;</span> <span>None</span>:
</span></span><span><span>        self<span>.</span>values <span>=</span> args
</span></span><span><span>
</span></span><span><span><span># Works with any number of types!</span>
</span></span><span><span>pair <span>=</span> Tuple[str, int](<span>"hello"</span>, <span>42</span>)
</span></span><span><span>triple <span>=</span> Tuple[str, int, bool](<span>"world"</span>, <span>100</span>, <span>True</span>)
</span></span></code></pre></div><p>Finally, as part of the 3.12 typing changes, Python also introduced a new concise syntax for type aliases!</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># OLD SYNTAX - Python 3.5 to 3.9</span>
</span></span><span><span><span>from</span> typing <span>import</span> NewType
</span></span><span><span>Vector <span>=</span> NewType(<span>"Vector"</span>, list[float])
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># OLD-ish SYNTAX - Python 3.10 to 3.11</span>
</span></span><span><span><span>from</span> typing <span>import</span> TypeAlias
</span></span><span><span>Vector: TypeAlias <span>=</span> list[float]
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># NEW SYNTAX - Python 3.12+</span>
</span></span><span><span>type Vector <span>=</span> list[float]
</span></span></code></pre></div><h3 id="additional-resources-3">Additional Resources</h3>
<ul>
<li><a href="https://arjancodes.com/blog/python-generics-syntax/">Blog on Python 3.12 Generics</a></li>
<li><a href="https://realpython.com/python312-typing/">Python 3.12 Preview: Static Typing Improvements</a></li>
<li><a href="https://typing.python.org/en/latest/spec/generics.html">Python Docs - Generics</a></li>
<li><a href="https://peps.python.org/pep-0695/">PEP 695 ‚Äì Type Parameter Syntax</a></li>
</ul>
<h2 id="5-protocols">5. Protocols</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1897373856475836829">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1897373856475836829">Nitter Mirror</a></strong></p></blockquote>
<p>One of Python‚Äôs major features (and also major complaints) is its support for <a href="https://realpython.com/duck-typing-python/"><strong>Duck Typing</strong></a>. There‚Äôs a saying that goes:</p>
<p><q>
    ‚ÄúIf it walks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck.‚Äù
</q></p><p>However, that raises the question: <em>How do you <strong>type</strong> duck typing?</em></p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>class</span> <span>Duck</span>:
</span></span><span><span>    <span>def</span> <span>quack</span>(self): print(<span>'Quack!'</span>)
</span></span><span><span>
</span></span><span><span><span>class</span> <span>Person</span>:
</span></span><span><span>    <span>def</span> <span>quack</span>(self): print(<span>"I'm quacking!"</span>)
</span></span><span><span>
</span></span><span><span><span>class</span> <span>Dog</span>:
</span></span><span><span>    <span>def</span> <span>bark</span>(self): print(<span>'Woof!'</span>)
</span></span><span><span>
</span></span><span><span><span>def</span> <span>run_quack</span>(obj):
</span></span><span><span>    obj<span>.</span>quack()
</span></span><span><span>
</span></span><span><span>run_quack(Duck())  <span># Works!</span>
</span></span><span><span>run_quack(Person())  <span># Works!</span>
</span></span><span><span>run_quack(Dog())  <span># Fails with AttributeError</span>
</span></span></code></pre></div><p>That‚Äôs where <strong>Protocols</strong> come in. Protocols (also known as <strong>Structural Subtyping</strong>) are typing classes in Python defining the structure or behavior that classes can follow <strong>without</strong> the use of interfaces or inheritance.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> typing <span>import</span> Protocol
</span></span><span><span>
</span></span><span><span><span>class</span> <span>Quackable</span>(Protocol):
</span></span><span><span>    <span>def</span> <span>quack</span>(self) <span>-&gt;</span> <span>None</span>:
</span></span><span><span>        <span>...</span>  <span># The ellipsis indicates this is just a method signature</span>
</span></span><span><span>
</span></span><span><span><span>class</span> <span>Duck</span>:
</span></span><span><span>    <span>def</span> <span>quack</span>(self): print(<span>'Quack!'</span>)
</span></span><span><span>
</span></span><span><span><span>class</span> <span>Dog</span>:
</span></span><span><span>    <span>def</span> <span>bark</span>(self): print(<span>'Woof!'</span>)
</span></span><span><span>
</span></span><span><span><span>def</span> <span>run_quack</span>(obj: Quackable):
</span></span><span><span>    obj<span>.</span>quack()
</span></span><span><span>
</span></span><span><span>run_quack(Duck())  <span># Works!</span>
</span></span><span><span>run_quack(Dog())  <span># Fails during TYPE CHECKING (not runtime)</span>
</span></span></code></pre></div><p>In essence, Protocols check what your object <em><strong>can</strong></em> do, not what it <em><strong>is</strong></em>. They simply state that as long as an object implements certain methods or behaviors, it qualifies, regardless of its actual type or inheritance.</p>
<p><strong>‚ú® Additional quick tip:</strong>  Add the <code>@runtime_checkable</code> decorator if you want <code>isinstance()</code> checks to work alongside your Protocols!</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>@runtime_checkable</span>
</span></span><span><span><span>class</span> <span>Drawable</span>(Protocol):
</span></span><span><span>    <span>def</span> <span>draw</span>(self) <span>-&gt;</span> <span>None</span>:
</span></span><span><span>        <span>...</span>
</span></span></code></pre></div><h3 id="additional-resources-4">Additional Resources</h3>
<ul>
<li><a href="https://realpython.com/python-protocol/">Python Protocols: Leveraging Structural Subtyping</a></li>
<li><a href="https://mypy.readthedocs.io/en/stable/protocols.html">MyPy: Protocols and structural subtyping</a></li>
<li><a href="https://typing.python.org/en/latest/spec/protocol.html">Python Docs - Protocols</a></li>
<li><a href="https://peps.python.org/pep-0544/">PEP 544 ‚Äì Protocols: Structural subtyping</a></li>
</ul>
<h2 id="6-context-managers">6. Context Managers</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1897714940297068624">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1897714940297068624">Nitter Mirror</a></strong></p></blockquote>
<p><strong>Context Managers</strong> are objects that define the methods: <code>__enter__()</code> and <code>__exit__()</code>. The <code>__enter__()</code> method runs when you enter the <code>with</code> block, and the <code>__exit__()</code> method runs when you leave it (even if an exception occurs).</p>
<p><strong><code>Contextlib</code></strong> simplifies this process by wrapping all that boilerplate code in a single easy-to-use decorator.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># OLD SYNTAX - Traditional OOP-style context manager</span>
</span></span><span><span><span>class</span> <span>retry</span>:
</span></span><span><span>    <span>def</span> __enter__(self):
</span></span><span><span>        print(<span>"Entering Context"</span>)
</span></span><span><span>
</span></span><span><span>    <span>def</span> __exit__(self, exc_type, exc_val, exc_tb):
</span></span><span><span>        print(<span>"Exiting Context"</span>)
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># NEW SYNTAX - New contextlib-based context manager</span>
</span></span><span><span><span>import</span> contextlib
</span></span><span><span>
</span></span><span><span><span>@contextlib.contextmanager</span>
</span></span><span><span><span>def</span> <span>retry</span>():
</span></span><span><span>    print(<span>"Entering Context"</span>)
</span></span><span><span>    <span>yield</span>
</span></span><span><span>    print(<span>"Exiting Context"</span>)
</span></span></code></pre></div><p>To create your own, write a function with the <code>@contextlib.contextmanager</code> decorator. Add setup code before <code>yield</code>, cleanup code after it. Any variables on yield will be passed in as additional context. That‚Äôs it.</p>
<p>The <code>yield</code> statement instructs the context manager to pause your function and lets content within the <code>with</code> block run.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>import</span> contextlib
</span></span><span><span>
</span></span><span><span><span>@contextlib.contextmanager</span>
</span></span><span><span><span>def</span> <span>context</span>():
</span></span><span><span>    <span># Setup code here</span>
</span></span><span><span>    setup()
</span></span><span><span>    <span>yield</span> (<span>...</span>)  <span># Any variables you want to be passed to the with block</span>
</span></span><span><span>    <span># Teardown code here</span>
</span></span><span><span>    takedown()
</span></span></code></pre></div><p>Overall, this is a much more concise and readable way of creating and using context managers in Python.</p>
<h3 id="additional-resources-5">Additional Resources</h3>
<ul>
<li><a href="https://realpython.com/python-with-statement/">Context Managers and Python‚Äôs with Statement</a></li>
<li><a href="https://book.pythontips.com/en/latest/context_managers.html">Python Tips: Context Manager</a></li>
<li><a href="https://docs.python.org/3/library/contextlib.html">Python Docs: <code>contextlib</code> ‚Äî Utilities for with-statement contexts</a></li>
</ul>
<h2 id="7-structural-pattern-matching">7. Structural Pattern Matching</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1898065958578929801">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1898065958578929801">Nitter Mirror</a></strong></p></blockquote>
<p>Introduced in <a href="https://docs.python.org/3/whatsnew/3.10.html">Python 3.10</a>, <strong>Structural Pattern Matching</strong> gives Python developers a powerful alternative to traditional conditional logic. At its most basic, the syntax looks like this:</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>match</span> value:
</span></span><span><span>    <span>case</span> pattern1:
</span></span><span><span>        <span># code if value matches pattern1</span>
</span></span><span><span>    <span>case</span> pattern2:
</span></span><span><span>        <span># code if value matches pattern2</span>
</span></span><span><span>    <span>case</span> _:
</span></span><span><span>        <span># wildcard case (default)</span>
</span></span></code></pre></div><p>The real power comes with <strong>destructuring</strong>! Match patterns break down complex data structures and extract values in a single step.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># Destructuring and matching tuples</span>
</span></span><span><span><span>match</span> point:
</span></span><span><span>    <span>case</span> (<span>0</span>, <span>0</span>):
</span></span><span><span>        <span>return</span> <span>"Origin"</span>
</span></span><span><span>    <span>case</span> (<span>0</span>, y):
</span></span><span><span>        <span>return</span> <span>f</span><span>"Y-axis at </span><span>{</span>y<span>}</span><span>"</span>
</span></span><span><span>    <span>case</span> (x, <span>0</span>):
</span></span><span><span>        <span>return</span> <span>f</span><span>"X-axis at </span><span>{</span>x<span>}</span><span>"</span>
</span></span><span><span>    <span>case</span> (x, y):
</span></span><span><span>        <span>return</span> <span>f</span><span>"Point at (</span><span>{</span>x<span>}</span><span>, </span><span>{</span>y<span>}</span><span>)"</span>
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># Using OR pattern (|) to match multiple patterns</span>
</span></span><span><span><span>match</span> day:
</span></span><span><span>    <span>case</span> (<span>"Monday"</span>
</span></span><span><span>          <span>|</span> <span>"Tuesday"</span>
</span></span><span><span>          <span>|</span> <span>"Wednesday"</span>
</span></span><span><span>          <span>|</span> <span>"Thursday"</span>
</span></span><span><span>          <span>|</span> <span>"Friday"</span>):
</span></span><span><span>        <span>return</span> <span>"Weekday"</span>
</span></span><span><span>    <span>case</span> <span>"Saturday"</span> <span>|</span> <span>"Sunday"</span>:
</span></span><span><span>        <span>return</span> <span>"Weekend"</span>
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># Guard clauses with inline 'if' statements</span>
</span></span><span><span><span>match</span> temperature:
</span></span><span><span>    <span>case</span> temp <span>if</span> temp <span>&lt;</span> <span>0</span>:
</span></span><span><span>        <span>return</span> <span>"Freezing"</span>
</span></span><span><span>    <span>case</span> temp <span>if</span> temp <span>&lt;</span> <span>20</span>:
</span></span><span><span>        <span>return</span> <span>"Cold"</span>
</span></span><span><span>    <span>case</span> temp <span>if</span> temp <span>&lt;</span> <span>30</span>:
</span></span><span><span>        <span>return</span> <span>"Warm"</span>
</span></span><span><span>    <span>case</span> _:
</span></span><span><span>        <span>return</span> <span>"Hot"</span>
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># Capture entire collections using asterisk (*)</span>
</span></span><span><span><span>match</span> numbers:
</span></span><span><span>    <span>case</span> [f]:
</span></span><span><span>        <span>return</span> <span>f</span><span>"First: </span><span>{</span>f<span>}</span><span>"</span>
</span></span><span><span>    <span>case</span> [f, l]:
</span></span><span><span>        <span>return</span> <span>f</span><span>"First: </span><span>{</span>f<span>}</span><span>, Last: </span><span>{</span>l<span>}</span><span>"</span>
</span></span><span><span>    <span>case</span> [f, <span>*</span>m, l]:
</span></span><span><span>        <span>return</span> <span>f</span><span>"First: </span><span>{</span>f<span>}</span><span>, Middle: </span><span>{</span>m<span>}</span><span>, Last: </span><span>{</span>l<span>}</span><span>"</span>
</span></span><span><span>    <span>case</span> []:
</span></span><span><span>        <span>return</span> <span>"Empty list"</span>
</span></span></code></pre></div><p>You can also combine match-case with other Python features like <strong><a href="https://realpython.com/python-walrus-operator/">walrus operators</a></strong> to create even more powerful patterns.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># Check if a packet is valid or not</span>
</span></span><span><span>packet: list[int] <span>=</span> [<span>0x01</span>, <span>0x02</span>, <span>0x03</span>, <span>0x04</span>, <span>0x05</span>, <span>0x06</span>, <span>0x07</span>]
</span></span><span><span>
</span></span><span><span><span>match</span> packet:
</span></span><span><span>    <span>case</span> [c1, c2, <span>*</span>data, footer] <span>if</span> (  <span># Deconstruct packet into header, data, and footer</span>
</span></span><span><span>        (checksum <span>:=</span> c1 <span>+</span> c2) <span>==</span> sum(data) <span>and</span>  <span># Check that the checksum is correct</span>
</span></span><span><span>        len(data) <span>==</span> footer  <span># Check that the data length is correct</span>
</span></span><span><span>    ):
</span></span><span><span>        print(<span>f</span><span>"Packet received: </span><span>{</span>data<span>}</span><span> (Checksum: </span><span>{</span>checksum<span>}</span><span>)"</span>)
</span></span><span><span>    <span>case</span> [c1, c2, <span>*</span>data]:  <span># Failure case where structure is correct but checksum is wrong</span>
</span></span><span><span>        print(<span>f</span><span>"Packet received: </span><span>{</span>data<span>}</span><span> (Checksum Failed)"</span>)
</span></span><span><span>    <span>case</span> [_, <span>*</span>__]:  <span># Failure case where packet is too short</span>
</span></span><span><span>        print(<span>"Invalid packet length"</span>)
</span></span><span><span>    <span>case</span> []:  <span># Failure case where packet is empty</span>
</span></span><span><span>        print(<span>"Empty packet"</span>)
</span></span><span><span>    <span>case</span> _:  <span># Failure case where packet is invalid</span>
</span></span><span><span>        print(<span>"Invalid packet"</span>)
</span></span></code></pre></div><h3 id="additional-resources-6">Additional Resources</h3>
<ul>
<li><a href="https://realpython.com/structural-pattern-matching/">Structural Pattern Matching in Python</a></li>
<li><a href="https://benhoyt.com/writings/python-pattern-matching/">Structural pattern matching in Python 3.10</a></li>
<li><a href="https://stackoverflow.com/questions/70815197/how-to-do-structural-pattern-matching-in-python-3-10-with-a-type-to-match">Good StackOverflow Thread</a></li>
<li><a href="https://docs.python.org/3/reference/compound_stmts.html#match">Python Docs: The match statement</a></li>
<li><a href="https://peps.python.org/pep-0634/">PEP 634 ‚Äì Structural Pattern Matching: Specification</a></li>
<li><a href="https://peps.python.org/pep-0636/">PEP 636 ‚Äì Structural Pattern Matching: Tutorial</a></li>
</ul>
<h2 id="8-python-slots">8. Python Slots</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1898596367045640193">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1898596367045640193">Nitter Mirror</a></strong></p></blockquote>
<p><strong>Slots</strong> are a way to potentially speed up the creation and access of any Python class.</p>
<p><strong>TLDR:</strong> They define a fixed set of attributes for classes, optimizing and speeding up accesses during runtime.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>class</span> <span>Person</span>:
</span></span><span><span>    __slots__ <span>=</span> (<span>'name'</span>, <span>'age'</span>)
</span></span><span><span>
</span></span><span><span>    <span>def</span> __init__(self, name, age):
</span></span><span><span>        self<span>.</span>name <span>=</span> name
</span></span><span><span>        self<span>.</span>age <span>=</span> age
</span></span></code></pre></div><p>Under the hood, Python classes store instance attributes in an internal dictionary called <code>__dict__</code>, meaning a hash table lookup is required each time you want to access a value.</p>
<p>In contrast, <code>__slots__</code> uses an array-like structure where attributes can be looked up in true O(1) time, bringing a minor overall speed bump to Python.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># Without __slots__</span>
</span></span><span><span><span>class</span> <span>FooBar</span>:
</span></span><span><span>    <span>def</span> __init__(self):
</span></span><span><span>        self<span>.</span>a <span>=</span> <span>1</span>
</span></span><span><span>        self<span>.</span>b <span>=</span> <span>2</span>
</span></span><span><span>        self<span>.</span>c <span>=</span> <span>3</span>
</span></span><span><span>
</span></span><span><span>f <span>=</span> FooBar()
</span></span><span><span>print(f<span>.</span>__dict__)  <span># {'a': 1, 'b': 2, 'c': 3}</span>
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># With __slots__</span>
</span></span><span><span><span>class</span> <span>FooBar</span>:
</span></span><span><span>    __slots__ <span>=</span> (<span>'a'</span>, <span>'b'</span>, <span>'c'</span>)
</span></span><span><span>
</span></span><span><span>    <span>def</span> __init__(self):
</span></span><span><span>        self<span>.</span>a <span>=</span> <span>1</span>
</span></span><span><span>        self<span>.</span>b <span>=</span> <span>2</span>
</span></span><span><span>        self<span>.</span>c <span>=</span> <span>3</span>
</span></span><span><span>
</span></span><span><span>f <span>=</span> FooBar()
</span></span><span><span>print(f<span>.</span>__dict__)  <span># AttributeError</span>
</span></span><span><span>print(f<span>.</span>__slots__)  <span># ('a', 'b', 'c')</span>
</span></span></code></pre></div><p>There is still debate about whether <code>__slots__</code> is worth using, as it complicates class definitions with very marginal or no performance benefits at all. However, it is a useful tool to have in your arsenal if you ever need it.</p>
<h3 id="additional-resources-7">Additional Resources</h3>
<ul>
<li><a href="https://wiki.python.org/moin/UsingSlots">Using Slots - Python Wiki</a></li>
<li><a href="https://medium.com/@apps.merkurev/dont-forget-about-slots-in-python-c397f414c490">Don‚Äôt forget about <code>__slots__</code> in Python!</a></li>
<li><a href="https://stackoverflow.com/questions/472000/usage-of-slots">StackOverflow - Usage of <code>__slots__</code></a></li>
</ul>
<h2 id="9-python-nitpicks">9. Python Nitpicks</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1898934432939290658">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1898934432939290658">Nitter Mirror</a></strong></p></blockquote>
<blockquote>
<p>This is not a Python ‚Äúfeature‚Äù or ‚Äútip‚Äù per se, but instead a handful of quick syntax tips to really clean up your Python codebase.</p>
<p>As someone who‚Äôs seen a lot of Python code.</p></blockquote>
<h2 id="91-for-else-statements">9.1 For-else statements</h2>
<p>If you ever need to check if a for loop completes without a break, <strong>for-else statements</strong> are a great way to accomplish this <strong>without</strong> using a temporary variable.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Don't write this =====</span>
</span></span><span><span>found_server <span>=</span> <span>False</span>  <span># Keep track of whether we found a server</span>
</span></span><span><span><span>for</span> server <span>in</span> servers:
</span></span><span><span>    <span>if</span> server<span>.</span>check_availability():
</span></span><span><span>        primary_server <span>=</span> server
</span></span><span><span>        found_server <span>=</span> <span>True</span>  <span># Set the flag to True</span>
</span></span><span><span>        <span>break</span>
</span></span><span><span><span>if</span> <span>not</span> found_server:
</span></span><span><span>    <span># Use the backup server if no server was found</span>
</span></span><span><span>    primary_server <span>=</span> backup_server
</span></span><span><span>
</span></span><span><span><span># Continue execution with whatever server we found</span>
</span></span><span><span>deploy_application(primary_server)
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Write this instead =====</span>
</span></span><span><span><span>for</span> server <span>in</span> servers:
</span></span><span><span>    <span>if</span> server<span>.</span>check_availability():
</span></span><span><span>        primary_server <span>=</span> server
</span></span><span><span>        <span>break</span>
</span></span><span><span><span>else</span>:
</span></span><span><span>    <span># Use the backup server if no server was found</span>
</span></span><span><span>    primary_server <span>=</span> backup_server
</span></span><span><span>
</span></span><span><span><span># Continue execution with whatever server we found</span>
</span></span><span><span>deploy_application(primary_server)
</span></span></code></pre></div><h2 id="92-walrus-operator">9.2 Walrus Operator</h2>
<p>If you need to define and evaluate a variable all in one expression, the <strong>Walrus Operator</strong> (new in Python 3.8 with <a href="https://peps.python.org/pep-0572/">PEP 572</a>) is a quick way to accomplish just that.</p>
<blockquote>
<p>Walrus operators are really useful for using a value right after checking if it is <strong><code>not None</code></strong>!</p></blockquote>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Don't write this =====</span>
</span></span><span><span>response <span>=</span> get_user_input()
</span></span><span><span><span>if</span> response:
</span></span><span><span>    print(<span>'You pressed:'</span>, response)
</span></span><span><span><span>else</span>:
</span></span><span><span>    print(<span>'You pressed nothing'</span>)
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Write this instead =====</span>
</span></span><span><span><span>if</span> response <span>:=</span> get_user_input():
</span></span><span><span>    print(<span>'You pressed:'</span>, response)
</span></span><span><span><span>else</span>:
</span></span><span><span>    print(<span>'You pressed nothing'</span>)
</span></span></code></pre></div><h2 id="93-short-circuit-evaluation">9.3 Short Circuit Evaluation</h2>
<p><strong>Short-circuit Evaluation</strong> is a shortcut for getting the ‚Äúnext available‚Äù or ‚Äúnext truthy‚Äù value in a list of expressions. It turns out you can simply chain <code>or</code> statements!</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Don't write this =====</span>
</span></span><span><span>username, full_name, first_name <span>=</span> get_user_info()
</span></span><span><span>
</span></span><span><span><span>if</span> username <span>is</span> <span>not</span> <span>None</span>:
</span></span><span><span>    display_name <span>=</span> username
</span></span><span><span><span>elif</span> full_name <span>is</span> <span>not</span> <span>None</span>:
</span></span><span><span>    display_name <span>=</span> full_name
</span></span><span><span><span>elif</span> first_name <span>is</span> <span>not</span> <span>None</span>:
</span></span><span><span>    display_name <span>=</span> first_name
</span></span><span><span><span>else</span>:
</span></span><span><span>    display_name <span>=</span> <span>"Anonymous"</span>
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Write this instead =====</span>
</span></span><span><span>username, full_name, first_name <span>=</span> get_user_info()
</span></span><span><span>
</span></span><span><span>display_name <span>=</span> username <span>or</span> full_name <span>or</span> first_name <span>or</span> <span>"Anonymous"</span>
</span></span></code></pre></div><h2 id="94-operator-chaining">9.4 Operator Chaining</h2>
<p>Finally, Python lets you <strong>chain comparison operators</strong> together to shorten up integer range comparisons, making them more readable than the equivalent boolean expressions.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Don't write this =====</span>
</span></span><span><span><span>if</span> <span>0</span> <span>&lt;</span> x <span>and</span> x <span>&lt;</span> <span>10</span>:
</span></span><span><span>    print(<span>"x is between 0 and 10"</span>)
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Write this instead =====</span>
</span></span><span><span><span>if</span> <span>0</span> <span>&lt;</span> x <span>&lt;</span> <span>10</span>:  <span># Instead of if 0 &lt; x and x &lt; 10</span>
</span></span><span><span>    print(<span>"x is between 0 and 10"</span>)
</span></span></code></pre></div><h3 id="additional-resources-8">Additional Resources</h3>
<ul>
<li><a href="https://book.pythontips.com/en/latest/for_-_else.html"><code>for/else</code> - Python Tips</a></li>
<li><a href="https://realpython.com/python-walrus-operator/">The Walrus Operator: Python‚Äôs Assignment Expressions</a></li>
<li><a href="https://peps.python.org/pep-0572/">PEP 572 ‚Äì Assignment Expressions</a></li>
<li><a href="https://realpython.com/python-or-operator/#default-values-for-variables">Using the ‚Äúor‚Äù Boolean Operator in Python</a></li>
<li><a href="https://mathspp.com/blog/pydonts/chaining-comparison-operators">Chaining Comparison Operators</a></li>
</ul>
<h2 id="10-advanced-f-string-string-formatting">10. Advanced f-string String Formatting</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1899162302131122430">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1899162302131122430">Nitter Mirror</a></strong></p></blockquote>
<p>Python‚Äôs <strong>f-strings</strong> are no secret by now. Introduced in Python 3.6 with <a href="https://peps.python.org/pep-0498/">PEP 498</a>, they are a better, cleaner, faster, and safer method of interpolating variables, objects, and expressions into strings.</p>
<p>But did you know there is more to f-strings than just inserting variables? There exists a hidden formatting syntax called the <strong>Format Mini-Language</strong> that allows you to have much greater control over string formatting.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span>print(<span>f</span><span>"</span><span>{</span><span>' [ Run Status ] '</span><span>:</span><span>=^50</span><span>}</span><span>"</span>)
</span></span><span><span>print(<span>f</span><span>"[</span><span>{</span>time<span>:</span><span>%H:%M:%S</span><span>}</span><span>] Training Run </span><span>{</span>run_id<span>=}</span><span> status: </span><span>{</span>progress<span>:</span><span>.1%</span><span>}</span><span>"</span>)
</span></span><span><span>print(<span>f</span><span>"Summary: </span><span>{</span>total_samples<span>:</span><span>,</span><span>}</span><span> samples processed"</span>)
</span></span><span><span>print(<span>f</span><span>"Accuracy: </span><span>{</span>accuracy<span>:</span><span>.4f</span><span>}</span><span> | Loss: </span><span>{</span>loss<span>:</span><span>#.3g</span><span>}</span><span>"</span>)
</span></span><span><span>print(<span>f</span><span>"Memory: </span><span>{</span>memory <span>/</span> <span>1e9</span><span>:</span><span>+.2f</span><span>}</span><span> GB"</span>)
</span></span></code></pre></div><p><strong>Output:</strong></p>
<pre tabindex="0"><code>=================== [ Run Status ] ===================
[11:16:37] Training Run run_id=42 status: 87.4%
Summary: 12,345,678 samples processed
Accuracy: 0.9876 | Loss: 0.0123
Memory: +2.75 GB
</code></pre><p>You can do things like enable debug expressions, apply number formatting (similar to <code>str.format</code>), add string padding, format datetime objects, and more! All within f-string format specifiers.</p>
<h2 id="regular-f-strings">Regular f-strings</h2>
<pre tabindex="0"><code>Hello World!
</code></pre><h2 id="debug-expressions">Debug Expressions</h2>
<div><pre tabindex="0"><code data-lang="python"><span><span>print(<span>f</span><span>"</span><span>{</span>name<span>=}</span><span>, </span><span>{</span>age<span>=}</span><span>"</span>)
</span></span></code></pre></div><pre tabindex="0"><code>name='Claude', age=3
</code></pre><h2 id="number-formatting">Number Formatting</h2>
<div><pre tabindex="0"><code data-lang="python"><span><span>print(<span>f</span><span>"Pi: </span><span>{</span>pi<span>:</span><span>.2f</span><span>}</span><span>"</span>)
</span></span><span><span>print(<span>f</span><span>"Avogadro: </span><span>{</span>avogadro<span>:</span><span>.2e</span><span>}</span><span>"</span>)
</span></span><span><span>print(<span>f</span><span>"Big Number: </span><span>{</span>big_num<span>:</span><span>,</span><span>}</span><span>"</span>)
</span></span><span><span>print(<span>f</span><span>"Hex: </span><span>{</span>num<span>:</span><span>#0x</span><span>}</span><span>"</span>)
</span></span><span><span>print(<span>f</span><span>"Number: </span><span>{</span>num<span>:</span><span>09</span><span>}</span><span>"</span>)
</span></span></code></pre></div><pre tabindex="0"><code>Pi: 3.14
Avogadro: 6.02e+23
Big Number: 1,000,000
Hex: 0x1a4
Number: 000000420
</code></pre><h2 id="string-padding">String Padding</h2>
<div><pre tabindex="0"><code data-lang="python"><span><span>print(<span>f</span><span>"Left: |</span><span>{</span>word<span>:</span><span>&lt;10</span><span>}</span><span>|"</span>)
</span></span><span><span>print(<span>f</span><span>"Right: |</span><span>{</span>word<span>:</span><span>&gt;10</span><span>}</span><span>|"</span>)
</span></span><span><span>print(<span>f</span><span>"Center: |</span><span>{</span>word<span>:</span><span>^10</span><span>}</span><span>|"</span>)
</span></span><span><span>print(<span>f</span><span>"Center *: |</span><span>{</span>word<span>:</span><span>*^10</span><span>}</span><span>|"</span>)
</span></span></code></pre></div><pre tabindex="0"><code>Left: |Python    |
Right: |    Python|
Center: |  Python  |
Center *: |**Python**|
</code></pre><h2 id="date-formatting">Date Formatting</h2>
<div><pre tabindex="0"><code data-lang="python"><span><span>print(<span>f</span><span>"Date: </span><span>{</span>now<span>:</span><span>%Y-%m-%d</span><span>}</span><span>"</span>)
</span></span><span><span>print(<span>f</span><span>"Time: </span><span>{</span>now<span>:</span><span>%H:%M:%S</span><span>}</span><span>"</span>)
</span></span></code></pre></div><pre tabindex="0"><code>Date: 2025-03-10
Time: 14:30:59
</code></pre><h2 id="percentage-formatting">Percentage Formatting</h2>
<div><pre tabindex="0"><code data-lang="python"><span><span>print(<span>f</span><span>"Progress: </span><span>{</span>progress<span>:</span><span>.1%</span><span>}</span><span>"</span>)
</span></span></code></pre></div><pre tabindex="0"><code>Progress: 75.0%
</code></pre><h3 id="additional-resources-9">Additional Resources</h3>
<ul>
<li><a href="https://realpython.com/python-f-strings/">Python‚Äôs F-String for String Interpolation and Formatting</a></li>
<li><a href="https://realpython.com/python-format-mini-language/">Python‚Äôs Format Mini-Language for Tidy Strings</a></li>
<li><a href="https://docs.python.org/3/tutorial/inputoutput.html">Python Docs - Input and Output</a></li>
<li><a href="https://peps.python.org/pep-0498/">PEP 498 ‚Äì Literal String Interpolation</a></li>
</ul>
<h2 id="11-cache--lru_cache">11. Cache / lru_cache</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1899571802873135208">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1899571802873135208">Nitter Mirror</a></strong></p></blockquote>
<p>You can use the built-in <strong><code>@cache</code></strong> decorator to dramatically speed up recursive functions and expensive calculations! (which superseded <code>@lru_cache</code> in Python 3.9!)</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> functools <span>import</span> cache
</span></span><span><span>
</span></span><span><span><span>@cache</span>
</span></span><span><span><span>def</span> <span>fib</span>(n):
</span></span><span><span>    <span>return</span> n <span>if</span> n <span>&lt;</span> <span>2</span> <span>else</span> fib(n<span>-</span><span>1</span>) <span>+</span> fib(n<span>-</span><span>2</span>)
</span></span></code></pre></div><p>Since Python 3.2, <code>@lru_cache</code> was introduced as part of the <code>functools</code> module for quick &amp; clean function memoization. Starting with Python 3.9, <code>@cache</code> was added for the same effect with less code. <code>lru_cache</code> still exists if you want explicit control of the cache size.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span>FIB_CACHE <span>=</span> {}
</span></span><span><span>
</span></span><span><span><span># With Manual Caching :(</span>
</span></span><span><span><span>def</span> <span>fib</span>(n):
</span></span><span><span>    <span>if</span> n <span>in</span> FIB_CACHE:
</span></span><span><span>        <span>return</span> FIB_CACHE[n]
</span></span><span><span>    <span>if</span> n <span>&lt;=</span> <span>2</span>:
</span></span><span><span>        <span>return</span> <span>1</span>
</span></span><span><span>    FIB_CACHE[n] <span>=</span> fib(n <span>-</span> <span>1</span>) <span>+</span> fib(n <span>-</span> <span>2</span>)
</span></span><span><span>    <span>return</span> FIB_CACHE[n]
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> functools <span>import</span> lru_cache
</span></span><span><span>
</span></span><span><span><span># Same code with lru_cache :)</span>
</span></span><span><span><span>@lru_cache</span>(maxsize<span>=</span><span>None</span>)
</span></span><span><span><span>def</span> <span>fib</span>(n):
</span></span><span><span>    <span>return</span> n <span>if</span> n <span>&lt;</span> <span>2</span> <span>else</span> fib(n<span>-</span><span>1</span>) <span>+</span> fib(n<span>-</span><span>2</span>)
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> functools <span>import</span> cache
</span></span><span><span>
</span></span><span><span><span># Same code with new Python 3.9's cache :D</span>
</span></span><span><span><span>@cache</span>
</span></span><span><span><span>def</span> <span>fib</span>(n):
</span></span><span><span>    <span>return</span> n <span>if</span> n <span>&lt;</span> <span>2</span> <span>else</span> fib(n<span>-</span><span>1</span>) <span>+</span> fib(n<span>-</span><span>2</span>)
</span></span></code></pre></div><h3 id="additional-resources-10">Additional Resources</h3>
<ul>
<li><a href="https://www.datacamp.com/tutorial/python-cache-introduction">Python Cache: Two Simple Methods</a></li>
<li><a href="https://realpython.com/lru-cache-python/">(outdated) Caching in Python Using the LRU Cache Strategy</a></li>
<li><a href="https://docs.python.org/3/library/functools.html#functools.cache">Python Docs - <code>@functools.cache</code></a></li>
<li><a href="https://docs.python.org/3/library/functools.html#functools.lru_cache">Python Docs - <code>@functools.lru_cache</code></a></li>
</ul>
<h2 id="12-python-futures">12. Python Futures</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1899900763977228374">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1899900763977228374">Nitter Mirror</a></strong></p></blockquote>
<p>Did you know that Python has native <code>Promise</code>-like concurrency control?</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> concurrent.futures <span>import</span> Future
</span></span><span><span>
</span></span><span><span><span># Manually create a Future Object</span>
</span></span><span><span>future <span>=</span> Future()
</span></span><span><span>
</span></span><span><span><span># Set its result whenever you want</span>
</span></span><span><span>future<span>.</span>set_result(<span>"Hello from the future!"</span>)
</span></span><span><span>
</span></span><span><span><span># Get the result</span>
</span></span><span><span>print(future<span>.</span>result())  <span># "Hello from the future!"</span>
</span></span></code></pre></div><p>Python‚Äôs <strong><code>concurrent.futures</code></strong> module gives you direct control over async operations, just like JS Promises. For example, they let you attach callbacks that run when the result is ready (just like JS‚Äôs <code>.then()</code>).</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> concurrent.futures <span>import</span> Future
</span></span><span><span>
</span></span><span><span>future <span>=</span> Future()
</span></span><span><span>
</span></span><span><span><span># Add callbacks BEFORE or AFTER completion!</span>
</span></span><span><span>future<span>.</span>add_done_callback(<span>lambda</span> f: print(<span>f</span><span>"Got: </span><span>{</span>f<span>.</span>result()<span>}</span><span>"</span>))
</span></span><span><span>
</span></span><span><span>future<span>.</span>set_result(<span>"Async result"</span>)
</span></span><span><span><span># Prints: "Got: Async result"</span>
</span></span><span><span>
</span></span><span><span>future<span>.</span>add_done_callback(<span>lambda</span> f: print(<span>f</span><span>"After: </span><span>{</span>f<span>.</span>result()<span>}</span><span>"</span>))
</span></span><span><span><span># Prints: "After: Async result"</span>
</span></span></code></pre></div><p>Python Futures also come with primitives to handle exceptions, set timeouts, or stop tasks completely.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> concurrent.futures <span>import</span> Future
</span></span><span><span><span>import</span> time<span>,</span> threading
</span></span><span><span>
</span></span><span><span><span># Create and manage a future manually</span>
</span></span><span><span>future <span>=</span> Future()
</span></span><span><span>
</span></span><span><span><span># Background task function</span>
</span></span><span><span><span>def</span> <span>background_task</span>():
</span></span><span><span>    time<span>.</span>sleep(<span>2</span>)
</span></span><span><span>    future<span>.</span>set_result(<span>"Done!"</span>)
</span></span><span><span>
</span></span><span><span>thread <span>=</span> threading<span>.</span>Thread(target<span>=</span>background_task)
</span></span><span><span>thread<span>.</span>daemon <span>=</span> <span>True</span>
</span></span><span><span>thread<span>.</span>start()
</span></span><span><span>
</span></span><span><span><span># Try all control operations</span>
</span></span><span><span>print(<span>f</span><span>"Cancelled: </span><span>{</span>future<span>.</span>cancel()<span>}</span><span>"</span>)  <span># Likely False if started</span>
</span></span><span><span>
</span></span><span><span><span>try</span>:
</span></span><span><span>    <span># Wait at most 0.5 seconds</span>
</span></span><span><span>    result <span>=</span> future<span>.</span>result(timeout<span>=</span><span>0.5</span>)
</span></span><span><span><span>except</span> <span>TimeoutError</span>:
</span></span><span><span>    print(<span>"Timed out!"</span>)
</span></span><span><span>
</span></span><span><span><span># Create failed future</span>
</span></span><span><span>err_future <span>=</span> Future()
</span></span><span><span>err_future<span>.</span>set_exception(<span>ValueError</span>(<span>"Failed"</span>))
</span></span><span><span>print(<span>f</span><span>"Has error: </span><span>{</span>bool(err_future<span>.</span>exception())<span>}</span><span>"</span>)
</span></span></code></pre></div><p>Just like modern JS, the <code>asyncio</code> module has its own Future that works seamlessly with Python‚Äôs <code>async/await</code> syntax:</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>import</span> asyncio
</span></span><span><span>
</span></span><span><span><span>async</span> <span>def</span> <span>main</span>():
</span></span><span><span>    future <span>=</span> asyncio<span>.</span>Future()
</span></span><span><span>
</span></span><span><span>    <span># Set result after delay</span>
</span></span><span><span>    asyncio<span>.</span>create_task(set_after_delay(future))
</span></span><span><span>
</span></span><span><span>    <span># Await just like a JS Promise!</span>
</span></span><span><span>    result <span>=</span> <span>await</span> future
</span></span><span><span>    print(result)  <span># "Worth the wait!"</span>
</span></span><span><span>
</span></span><span><span><span>async</span> <span>def</span> <span>set_after_delay</span>(future):
</span></span><span><span>    <span>await</span> asyncio<span>.</span>sleep(<span>1</span>)
</span></span><span><span>    future<span>.</span>set_result(<span>"Worth the wait!"</span>)
</span></span><span><span>
</span></span><span><span>asyncio<span>.</span>run(main())
</span></span></code></pre></div><p>Finally, for CPU or I/O bound tasks, Python‚Äôs <code>ThreadPoolExecutor</code> can automatically create and manage futures for you.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> concurrent.futures <span>import</span> ThreadPoolExecutor
</span></span><span><span><span>import</span> time
</span></span><span><span>
</span></span><span><span><span>def</span> <span>slow_task</span>():
</span></span><span><span>    time<span>.</span>sleep(<span>1</span>)
</span></span><span><span>    <span>return</span> <span>"Done!"</span>
</span></span><span><span>
</span></span><span><span><span>with</span> ThreadPoolExecutor() <span>as</span> executor:
</span></span><span><span>    <span># Returns a Future immediately</span>
</span></span><span><span>    future <span>=</span> executor<span>.</span>submit(slow_task)
</span></span><span><span>
</span></span><span><span>    <span># Do other work while waiting...</span>
</span></span><span><span>    print(<span>"Working..."</span>)
</span></span><span><span>
</span></span><span><span>    <span># Get result when needed</span>
</span></span><span><span>    print(future<span>.</span>result())
</span></span></code></pre></div><h3 id="additional-resources-11">Additional Resources</h3>
<ul>
<li><a href="https://medium.com/@smrati.katiyar/introduction-to-concurrent-futures-in-python-009fe1d4592c">Introduction to <code>concurrent.futures</code> in Python</a></li>
<li><a href="https://alexwlchan.net/2019/adventures-with-concurrent-futures/">Adventures in Python with <code>concurrent.futures</code></a></li>
<li><a href="https://docs.python.org/3/library/asyncio-future.html">Python Docs - Futures</a></li>
<li><a href="https://docs.python.org/3/library/concurrent.futures.html">Python Docs - <code>concurrent.futures</code></a></li>
</ul>
<h2 id="13-proxy-properties">13. Proxy Properties</h2>
<blockquote>
<p><strong><a href="https://x.com/edwardjxli/status/1900316544066007332">Original X/Twitter Thread</a>  |  <a href="https://nitter.hydranet.dev/edwardjxli/status/1900316544066007332">Nitter Mirror</a></strong></p></blockquote>
<p>Did you know you can make class attributes act as <strong>BOTH</strong> methods <strong>AND</strong> properties?!? <em>This isn‚Äôt a built-in feature of Python</em>, but instead a demonstration of what you can do with clever use of Python‚Äôs dunder (magic) methods and descriptors.</p>
<blockquote>
<p>(Note that this is very much an example implementation and should not be used in production)</p></blockquote>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>from</span> typing <span>import</span> Callable, Generic, TypeVar, ParamSpec, Self
</span></span><span><span>
</span></span><span><span>P <span>=</span> ParamSpec(<span>"P"</span>)
</span></span><span><span>R <span>=</span> TypeVar(<span>"R"</span>)
</span></span><span><span>T <span>=</span> TypeVar(<span>"T"</span>)
</span></span><span><span>
</span></span><span><span><span>class</span> <span>ProxyProperty</span>(Generic[P, R]):
</span></span><span><span>    func: Callable[P, R]
</span></span><span><span>    instance: object
</span></span><span><span>
</span></span><span><span>    <span>def</span> __init__(self, func: Callable[P, R]) <span>-&gt;</span> <span>None</span>:
</span></span><span><span>        self<span>.</span>func <span>=</span> func
</span></span><span><span>
</span></span><span><span>    <span>def</span> __get__(self, instance: object, _<span>=</span><span>None</span>) <span>-&gt;</span> Self:
</span></span><span><span>        self<span>.</span>instance <span>=</span> instance
</span></span><span><span>        <span>return</span> self
</span></span><span><span>
</span></span><span><span>    <span>def</span> __call__(self, <span>*</span>args: P<span>.</span>args, <span>**</span>kwargs: P<span>.</span>kwargs) <span>-&gt;</span> R:
</span></span><span><span>        <span>return</span> self<span>.</span>func(self<span>.</span>instance, <span>*</span>args, <span>**</span>kwargs)
</span></span><span><span>
</span></span><span><span>    <span>def</span> __repr__(self) <span>-&gt;</span> str:
</span></span><span><span>        <span>return</span> self<span>.</span>func(self<span>.</span>instance)
</span></span><span><span>
</span></span><span><span><span>def</span> <span>proxy_property</span>(func: Callable[P, R]) <span>-&gt;</span> ProxyProperty[P, R]:
</span></span><span><span>    <span>return</span> ProxyProperty(func)
</span></span><span><span>
</span></span><span><span><span>class</span> <span>Container</span>:
</span></span><span><span>    <span>@proxy_property</span>
</span></span><span><span>    <span>def</span> <span>value</span>(self, val: int <span>=</span> <span>5</span>) <span>-&gt;</span> str:
</span></span><span><span>        <span>return</span> <span>f</span><span>"The value is: </span><span>{</span>val<span>}</span><span>"</span>
</span></span><span><span>
</span></span><span><span><span># Example usage</span>
</span></span><span><span>c <span>=</span> Container()
</span></span><span><span>print(c<span>.</span>value)      <span># Returns: The value is: 5</span>
</span></span><span><span>print(c<span>.</span>value(<span>7</span>))   <span># Returns: The value is: 7</span>
</span></span></code></pre></div><p><em>How does this work under the hood?</em> It comes down to Python‚Äôs <strong><a href="https://docs.python.org/3/howto/descriptor.html">Descriptor Protocol</a></strong>:</p>
<ol>
<li>
<p>The <code>__get__</code> method transforms the <code>ProxyProperty</code> object into a <strong>descriptor</strong>.</p>
</li>
<li>
<p>When you access <code>c.value</code>, Python calls <code>__get__</code> which returns <code>self</code> (the descriptor instance).</p>
</li>
<li>
<p>The <code>__repr__</code> method handles property access (returning default values).</p>
</li>
<li>
<p>The <code>__call__</code> method handles method calls with parameters.</p>
</li>
</ol>
<p>This creates a dual-purpose attribute that can be both read directly AND called like a function!</p>
<p>The benefit of this class is that it allows you to create intuitive APIs where a property might need configuration, or properties that should have sensible defaults but still allow for customization.</p>
<blockquote>
<p>If you want to look at a proper production-ready implementation of <strong>proxy properties</strong>, check out Codegen‚Äôs implementation of <code>ProxyProperty</code> here: <a href="https://github.com/codegen-sh/codegen/blob/590ce812c08d973d8f2c22795ab3e5055cea6b1e/src/codegen/sdk/_proxy.py#L5">codegen/src/codegen/sdk/_proxy.py</a></p></blockquote>
<h3 id="additional-resources-12">Additional Resources</h3>
<ul>
<li><a href="https://realpython.com/python-descriptors/">Python Descriptors: An Introduction</a></li>
<li><a href="https://deepsource.com/blog/demystifying-python-descriptor-protocol">Demystifying Python‚Äôs Descriptor Protocol</a></li>
<li><a href="https://docs.python.org/3/howto/descriptor.html">Descriptor Guide - Python Wiki</a></li>
<li><a href="https://wrapt.readthedocs.io/en/latest/wrappers.html">Proxies and Wrappers</a></li>
</ul>

<p>Finally, introducing one of Python‚Äôs most powerful yet mysterious features: <strong>Metaclasses</strong></p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>class</span> <span>MyMetaclass</span>(type):
</span></span><span><span>    <span>def</span> __new__(cls, name, bases, namespace):
</span></span><span><span>        <span># Magic happens here</span>
</span></span><span><span>        <span>return</span> super()<span>.</span>__new__(cls, name, bases, namespace)
</span></span><span><span>
</span></span><span><span><span>class</span> <span>MyClass</span>(metaclass<span>=</span>MyMetaclass):
</span></span><span><span>    <span>pass</span>
</span></span><span><span>
</span></span><span><span>obj <span>=</span> MyClass()
</span></span></code></pre></div><p>Classes in Python aren‚Äôt just blueprints for objects. They‚Äôre objects too! And every object needs a class that created it. So what creates class objects? <strong>Metaclasses</strong>.</p>
<p>By default, Python uses the <code>type</code> metaclass to create all classes. For example, these two are equivalent to each other:</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># Create a MyClass object</span>
</span></span><span><span><span>class</span> <span>MyClass</span>:
</span></span><span><span>    <span>...</span>
</span></span><span><span>obj <span>=</span> MyClass()
</span></span><span><span>
</span></span><span><span><span># Also creates a MyClass object</span>
</span></span><span><span>obj2 <span>=</span> type(<span>"MyClass"</span>, (), {})
</span></span></code></pre></div><p>To break down what those arguments mean, here is an example that creates a class with an attribute <code>x</code> and a method <code>say_hi</code>, that also subclasses off <code>object</code>.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># type(</span>
</span></span><span><span><span>#     name,</span>
</span></span><span><span><span>#     bases,</span>
</span></span><span><span><span>#     attributes</span>
</span></span><span><span><span># )</span>
</span></span><span><span>CustomClass <span>=</span> type(
</span></span><span><span>    <span>'CustomClass'</span>,
</span></span><span><span>    (object,),
</span></span><span><span>    {<span>'x'</span>: <span>5</span>, <span>'say_hi'</span>: <span>lambda</span> self: <span>'Hello!'</span>}
</span></span><span><span>)
</span></span><span><span>
</span></span><span><span>obj <span>=</span> CustomClass()
</span></span><span><span>print(obj<span>.</span>x)  <span># 5</span>
</span></span><span><span>print(obj<span>.</span>say_hi())  <span># Hello!</span>
</span></span></code></pre></div><p>In essence, Metaclasses let you customize and modify these arguments during class creation. For example, here is a metaclass that doubles every integer attribute for a class:</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span>class</span> <span>DoubleAttrMeta</span>(type):
</span></span><span><span>    <span>def</span> __new__(cls, name, bases, namespace):
</span></span><span><span>        new_namespace <span>=</span> {}
</span></span><span><span>        <span>for</span> key, val <span>in</span> namespace<span>.</span>items():
</span></span><span><span>            <span>if</span> isinstance(val, int):
</span></span><span><span>                val <span>*=</span> <span>2</span>
</span></span><span><span>            new_namespace[key] <span>=</span> val
</span></span><span><span>        <span>return</span> super()<span>.</span>__new__(cls, name, bases, new_namespace)
</span></span><span><span>
</span></span><span><span><span>class</span> <span>MyClass</span>(metaclass<span>=</span>DoubleAttrMeta):
</span></span><span><span>    x <span>=</span> <span>5</span>
</span></span><span><span>    y <span>=</span> <span>10</span>
</span></span><span><span>
</span></span><span><span>print(MyClass<span>.</span>x)  <span># 10</span>
</span></span><span><span>print(MyClass<span>.</span>y)  <span># 20</span>
</span></span></code></pre></div><p>Here is another example of a metaclass that registers every class created into a registry.</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Metaclass Solution =====</span>
</span></span><span><span><span>class</span> <span>RegisterMeta</span>(type):
</span></span><span><span>    registry <span>=</span> []
</span></span><span><span>    <span>def</span> __new__(mcs, name, bases, attrs):
</span></span><span><span>        cls <span>=</span> super()<span>.</span>__new__(mcs, name, bases, attrs)
</span></span><span><span>        mcs<span>.</span>registry<span>.</span>append(cls)
</span></span><span><span>        <span>return</span> cls
</span></span></code></pre></div><p><em>The problem is</em>, decorators could achieve this same goal without the use of black magic (and it‚Äôs often cleaner too).</p>
<div><pre tabindex="0"><code data-lang="python"><span><span><span># ===== Decorator Solution =====</span>
</span></span><span><span><span>def</span> <span>register</span>(cls):
</span></span><span><span>    registry<span>.</span>append(cls)
</span></span><span><span>    <span>return</span> cls
</span></span><span><span>
</span></span><span><span><span>@register</span>
</span></span><span><span><span>class</span> <span>MyClass</span>:
</span></span><span><span>    <span>pass</span>
</span></span></code></pre></div><p>And that kind of brings to light the biggest problem with metaclasses:</p>
<p><strong>Almost 100% of the time, you will never need to touch them.</strong></p>
<p>In your day-to-day development, 99% of your code won‚Äôt ever hit a use case where metaclasses could be useful. And of that 1%, 95% of those cases could just be solved with regular decorators, dunder methods, or just plain inheritance.</p>
<p>That‚Äôs why there is that one famous Python quote that goes:</p>
<p><q>
    Metaclasses are deeper magic than 99% of users should ever worry about. If you wonder whether you need them, you don‚Äôt. - Tim Peters
</q></p><p>But if you are that 1% which has a unique enough problem that only metaclasses can solve, they are a powerful tool that lets you tinker with the internals of the Python object system.</p>
<blockquote>
<p><strong>As for some real-world examples of metaclasses:</strong></p>
<ul>
<li>Python‚Äôs ‚ÄúABC‚Äù implementation uses metaclasses to implement abstract classes.</li>
<li>Python‚Äôs ‚ÄúEnum‚Äù implementation uses it to create enumeration types.</li>
<li>A bunch of 3rd party libraries like Django, SQLAlchemy, Pydantic, and Pytest use metaclasses for a variety of purposes.</li>
</ul></blockquote>
<h3 id="additional-resources-13">Additional Resources</h3>
<ul>
<li><a href="https://realpython.com/python-metaclasses/">Python Metaclasses</a></li>
<li><a href="https://sentry.io/answers/what-are-Python-metaclasses/">What are Python Metaclasses?</a></li>
<li><a href="https://medium.com/@miguel.amezola/demystifying-python-metaclasses-understanding-and-harnessing-the-power-of-custom-class-creation-d7dff7b68de8">Demystifying Python Metaclasses</a></li>
<li><a href="https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/files/meta-vladimir.txt">Re: The metaclass saga using Python</a></li>
</ul>
<h2 id="fin">Fin</h2>
<p><strong>And that‚Äôs it folks!</strong> 14 of some of the most interesting &amp; underrated Python features that I‚Äôve encountered in my Python career.</p>
<p>If you‚Äôve made it this far, shoot me a quick message as to which ones you‚Äôve seen before and which ones you haven‚Äôt! I‚Äôd love to hear from you.</p>
<p>Happy Python-ing, y‚Äôall üêç!</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Open Source Projects Receive Funding to Reclaim the Public Internet (427 pts)]]></title>
            <link>https://nlnet.nl/news/2025/20250422-announcement-grants-CommonsFund.html</link>
            <guid>43769482</guid>
            <pubDate>Wed, 23 Apr 2025 07:20:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nlnet.nl/news/2025/20250422-announcement-grants-CommonsFund.html">https://nlnet.nl/news/2025/20250422-announcement-grants-CommonsFund.html</a>, See on <a href="https://news.ycombinator.com/item?id=43769482">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincolumn">
          
          <p>It is wonderful to see the growing number of people working on digital commons, inventing and improving technologies to the benefit of all humanity. 42 of such projects have been selected for funding in the October call of the NGI Zero Commons Fund. In terms of applications, it was the largest call round in NGI Zero's life time. And we'd like to take this space to thank <em>all</em> applicants for their contributions to an internet for people rather than for profit.</p>
          <p>The selected projects all contribute, one way or another, to the mission of the Commons Fund: reclaiming the public nature of the internet. For example, there are people working on <a href="https://nlnet.nl/project/MNT-Reform-Touch/">MNT Reform Touch</a> (an open hardware tablet device) and the <a href="https://nlnet.nl/project/Solar-FemtoTX/">Solar FemtoTX motherboard</a> ‚Äî a collaborative effort to create an ultra-low power motherboard that can run on solar power. The Open Terms Archive offers <a href="https://nlnet.nl/project/Modular-OTA/">public tracking of the evolution of terms and conditions</a> to facilitate democratic oversight. <a href="https://nlnet.nl/project/LLM2FPGA/">LLM2FPGA</a> aims to enable running open source LLMs locally on FPGAs using a fully open-source toolchain. <a href="https://nlnet.nl/project/bcachefs-crypto-API/">bcachefs</a> readies itself as the next generation filesystem for Linux, improving performance, scalability and reliability when compared to legacy filesystems and <a href="https://nlnet.nl/project/KDEPlasma-gestures/">KDE Plasma Gestures</a> will add multi-touch and stroke gestures to the Plasma Desktop. And that's just a small sample of the wide range of important contributions being worked on. Read on to meet all the projects selected in this funding round.</p>
          <p><b>If you applied for a grant</b><br> This is the selection for the <a href="https://nlnet.nl/news/2024/20240601-call.html">October call</a> of the NGI Zero Commons Fund fund only. We always inform <em>all</em> applicants about the outcome of the review ahead of the public announcement, whether they are selected or not. If you have not heard anything, you probably applied to a later call or a different fund that is still under review.</p><details>
              <summary>How do I find out which call round I applied to?</summary>You can see which call round you applied to by checking the application number assigned to the project when you submitted the proposal. The number starts with the year and month of the call, so 2024-10- in the case of the October 2024 call. You see that same number featured in the emails we send you (It should not happen, but if you did apply to another call and did not hear anything, do contact us)</details>
          <br> <h2>Meet the new projects!</h2>
          <p><em>(you can click or tap on the project name to fold out additional information)</em></p>
          <h3>Trustworthy hardware and manufacturing</h3>
          <ul>
            <li>
              <details>
                <summary><strong>FuseSoc-compatible Web Catalog</strong> ‚Äî A catalog of gateware that can be easily used with FuseSoC</summary>
                <div>
                  <p>FuseSoC is a package manager for chip designs, allowing for easy reuse and sharing of IP cores as well as combining them into larger systems. Its native core description format (CAPI2) allows describing IP cores in a tool- and vendor-independent way. Together with FuseSoC's backend library Edalize this enables creating and using portable IP cores and SoCs for a large number of EDA tools and flows.</p>
                  <p>This project will extend FuseSoC with a collaborative database and a web frontend that allows users to upload their core description files to a central repository to make it easier for others to find and inspect them. In addition, signing, SBOM generation and a web frontend will be added to increase transparency, trust and security.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/FuseSoC-catalog">https://nlnet.nl/project/FuseSoC-catalog</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>MNT Reform Touch</strong> ‚Äî Open Hardware tablet device</summary>
                
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Solar FemtoTX motherboard with 802.3 cg Ethernet cards</strong> ‚Äî Low-power motherboard that can run on solar power</summary>
                <div>
                  <p>Solar FemtoTX motherboard with 802.3 cg Ethernet cards is an open, collaborative effort towards designing an ultra-low power motherboard in a mobile device-sized form factor. It aims to achieve several goals: 1) to design a plug and play (PnP) motherboard that can be seamlessly integrated into an open-source hardware laptop for easy repair/replacement/upgrade. 2) to utilize the new, 802.3cg ethernet standard for a low-power LAN port, and 3) to integrate the 802.3 cg ethernet port into a single board computer with a FemtoTX-sized form factor for the lowest power consumption, facilitating minimal solar energy requirements and quick recharging.</p>
                  <p>Furthermore, the project aims to make the open-hardware framework extensible by supporting socket-based or embedded processors and peripheral devices that meet a defined size and TDP limit. This interoperability allows newer, ultra low power microprocessors to work within the FemtoTX specification, and is optimized for solar power.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Solar-FemtoTX">https://nlnet.nl/project/Solar-FemtoTX</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Tin Snipe DAQ</strong> ‚Äî Digital Aquisition module</summary>
                <div>
                  <p>The Tin Snipe DAQ is a digital acquisition (DAQ) module targeting diverse professional measurement applications typically found in mid to high end hand-held Multimeters. It focuses on digital mixed signal systems while offering an upgrade over traditional Multimeters in terms of sample rate, giving usable time series data for signal integrity analysis of low speed signals. It's designed as a compact fully integrated module that comes with the necessary AFE, ADC and Signal Processor. It exposes a digital control interface over various buses (UART, I2C, USB and potentially more) to be controlled and read out via an external system processor, thus making it easy to integrate into other systems. It is targeting battery operation like traditional handheld Multimeters and will be heavily optimized for low power consumption but can also be used for bench top applications.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/TinSnipe-DAQ">https://nlnet.nl/project/TinSnipe-DAQ</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>USB 3 PHY implementation on GateMate FPGAs</strong> ‚Äî USB 3 PHY implementation with Cologne Chip GateMate FPGA Transceiver</summary>
                <div>
                  <p>Since its introduction at the end of the previous century, USB has developed into the most widely used interface to connect all sorts of electronic devices. Recent versions of the USB standard provide serial communication at speeds of 5Gbps and higher, which require a dedicated hardware block (transceiver) inside a chip. Throughout the last decade, FPGA devices are gaining popularity in many applications and this trend will not stop. Even small and low-cost modern FPGA devices, such as GateMate FPGA from Cologne Chip AG, include transceivers capable of communication at 5Gbps. However, no Open Hardware and FOSS implementation of USB 3.x is available. This project will enable a universal and libre USB 3.2 Gen.1 x1 (5Gbps) connectivity on the GateMate FPGA.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/GateMate-USB3-PHY">https://nlnet.nl/project/GateMate-USB3-PHY</a></p>
                </div>
              </details>
            </li>
          </ul>
          <h3>Operating Systems, firmware and virtualisation</h3>
          <ul>
            <li>
              <details>
                <summary><strong>SSH Stamp</strong> ‚Äî Secure SSH-to-UART bridge for devices with a serial port</summary>
                <div>
                  <p>SSH Stamp is a secure wireless-to-UART bridge implemented in Rust (no_std, no_alloc and no_unsafe whenever possible) with simplicity and robustness as its main design tenets. The firmware runs on a microcontroller running Secure SHell Protocol (RFC 4253 and related IETF standards series). This firmware can be used for multiple purposes, conveniently avoiding physical tethering and securely tunneling traffic via SSH by default: easily add telemetry to a (moving) robot, monitor and operate any (domestic) appliance remotely, conduct remote cybersecurity audits on network gear of a company, reverse engineer hardware and software for right to repair purposes, just to name a few examples -a "low level-to-SSH Swiss army knife".</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/SSH-Stamp/">https://nlnet.nl/project/SSH-Stamp/</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Ada Bootstrap Compiler</strong> ‚Äî Full source bootstrap for Ada</summary>
                <div>
                  <p>Ada is an important computer language with a long history, with the compilers being built for new architectures in an ad-hoc basis based on previously existing Ada compilers from other architectures. This project aims to create a bootstrap path from the C language to an Ada compiler without relying on an existing Ada compiler binary. This will allow us to have a fully auditable trail from C to a working Ada compiler, removing concerns about hidden backdoors or other issues that may arise from using a compiler without a clear bootstrap path.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Ada-bootstrap">https://nlnet.nl/project/Ada-bootstrap</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Bcachefs userspace integration</strong> ‚Äî Next generation filesystem</summary>
                <div>
                  <p>bcachefs is a next generation filesystem for Linux, with a fully modern featureset and vastly improved performance, scalability and reliability as compared to legacy filesystems. The main focus of this grant is achieving stability, but on the side there will be work on userspace integration with systemd, reworking the cryptographic API to be more robust, as well as adding the potential for users to generate telemetry data - in order to capture edge cases in the real-world.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/bcachefs-crypto-API">https://nlnet.nl/project/bcachefs-crypto-API</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>KDE Plasma Gestures</strong> ‚Äî Advanced customisable gesture input on desktop and mobile</summary>
                <div>
                  <p>Plasma Desktop, made by the KDE community, is a powerful free and open source platform that competes with proprietary operating systems. This project will introduce new functionality for multi-touch and stroke gestures. Multi-touch gestures allow a user to easily switch between virtual desktops, or to open Plasma's Overview mode. They will become customizable, with a wide selection of available desktop actions. Stroke gestures allow drawing shapes to trigger actions, launch apps, and more. They will be introduced into Plasma's core desktop experience, complete with a configuration page in System Settings. Together, these features will make Plasma Desktop even more productive and intuitive to use.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/KDEPlasma-gestures">https://nlnet.nl/project/KDEPlasma-gestures</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>LeanFTL</strong> ‚Äî Flash Translation Layer library for embeddedsystems</summary>
                <div>
                  <p>LeanFTL is a "Flash Translation Layer" library targeting embedded systems. An FTL library is needed on all embedded systems to deal with the constraints inherent to flash memories and to be able to resume operations safely after an unexpected loss of power (AKA "tearing events"). LeanFTL aims at being a minimal library easily portable to any MCU and able to manage both internal and external flash memories. LeanFTL goal is to avoid fragmentation by design, this means that fragmentation never occurs no matter the usage pattern. Another important feature is the emulator which allows running LeanFTL on a personal computer, allowing the integrator to provide such an emulator for its firmware. Last but not least, the emulator is able to simulate "tearing events" - this is key to ensure robustness and security of an embedded system. In other words, LeanFTL not only provide the Flash Translation Layer, it also provides a tool for validating it is correctly used, something which is typically lacking even in commercial libraries.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/LeanFTL">https://nlnet.nl/project/LeanFTL</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Maemo Leste Daedalus</strong> ‚Äî Improve device coverage and advanced security for mobile Linux distro</summary>
                <div>
                  <p>Maemo Leste is a Free and Open Source mobile operating system based on GNU/Linux. The goal of the initiative is to provide a secure and modern mobile operating system that consists only of free software, obeys and respects the users' privacy and digital rights. Maemo Leste is currently focussing on upgrading and modernising it's core to the latest Debian and Devuan versions, improving the stability and security of the system as well as widening the array of supported devices.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/MaemoLeste-AppArmour">https://nlnet.nl/project/MaemoLeste-AppArmour</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Reproducible Builds in the Scala ecosystem</strong> ‚Äî Deterministic builds for software written in Scala</summary>
                <div>
                  <p>While open source components can be audited through their open version history, there is no guarantee that any binaries that are distributed actually correspond to those sources. The technique to validate this is known as "Reproducible Builds": by building the same code on independent infrastructure and verifying the results are identical, you can verify the binary artifacts have not been tampered with. This is useful both for project members who want to verify no malware was inserted via their CI system or developer build machine, and for 'external' auditors who can independently verify the project as a whole is not compromised.</p>
                  <p>This project intends to improve Reproducible Builds for software written in the Scala language, which typically use the 'sbt' build tool. It will do so by making improvements to the sbt-reproducible-builds sbt plugin and other toolchain components such as sbt plugins and the Scala compiler, so that projects will be reproducible 'out of the box' as much as possible.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/ReproducibleSBT">https://nlnet.nl/project/ReproducibleSBT</a></p>
                </div>
              </details>
            </li>
          </ul>
          <h3>Measurement, monitoring, analysis and abuse handling</h3>
          <ul>
            <li>
              <details>
                <summary><strong>Alaveteli GDPR and Search</strong> ‚Äî Better search and redacting capabilities for Alaveteli FOI request portal</summary>
                <div>
                  <p>Alaveteli is an open source platform deployed in 20+ countries that helps citizens make Freedom of Information requests and publishes them and the responses online. Access to Information laws are powerful tools by which citizens, journalists, and civil society organisations can obtain information to scrutinise government. Such legislation is an important prerequisite for accountability and bottom up participation, making it one of the cornerstones of a healthy democracy.</p>
                  <p>Alaveteli‚Äôs architecture was designed long before the introduction of GDPR. This makes it challenging to balance public access to information with protection of citizens' individual data rights. The project aims to redesign and replace Alaveteli‚Äôs antiquated search architecture and technology and implement key missing functionality to effectively locate and, when appropriate, remove personally identifiable information to ensure GDPR compliance.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Wiktionary-QA">https://nlnet.nl/project/Wiktionary-QA</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Wiktionary QA tools</strong> ‚Äî QA tools to improve the quality, reliability, and consistency of Wiktionary</summary>
                <div>
                  <p>Part of the Wikimedia commons, Wiktionary.org offers a global open data set pertaining to many languages. However, this data is contributed and crowdsourced in different formats, leading to conflicting information which creates inconsistencies across languages and makes Wiktionary less reliable than it could be.</p>
                  <p>This project will develop QA modules for Wiktionary, leading to easy parsing and processing of cross-linguistic data. This helps to unify data formats across Wiktionary, and improve the overall reliability of this invaluable resource.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Wiktionary-QA/">https://nlnet.nl/project/Wiktionary-QA/</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Clearance</strong> ‚Äî Curating changes to OpenStreetMap data of interest</summary>
                
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Open Terms Archive vendor lock-in break</strong> ‚Äî Public tracking of the evolution of terms and conditions</summary>
                <div>
                  <p>Open Terms Archive is a digital public good that archives every version of the terms of over 800 digital services to support democratic oversight by regulators, lawmakers, journalists, researchers, and civil society. Open Terms Archive has prioritized adoption in multiple industries and jurisdictions over the past four years, by enabling easy connection from its fully open-source engine to free but proprietary platforms. The "Open Terms Archive vendor lock-in break" project aims at replacing the hardcoded interconnections with proprietary software with standardized APIs and connectors for at least one open-source platform for issue reporting, email notifications, dataset distribution, and RSS feeds publishing, while keeping compatibility with existing integrations that are used by community members.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Modular-OTA">https://nlnet.nl/project/Modular-OTA</a></p>
                </div>
              </details>
            </li>
          </ul>
          <h3>Middleware and identity</h3>
          <ul>
            <li>
              <details>
                <summary><strong>Accessible KDE File Management</strong> ‚Äî Accessible file dialogs throughout KDE applications</summary>
                <div>
                  <p>This project aims to make a core part of computing with KDE software, namely file management, fully accessible. Many applications and frameworks by KDE are used in high-profile institutions and the public sector. Even though a main point of focus of this project is the improvement of accessibility in KDE's default file manager Dolphin, most of the work benefits framework code which is used in many of the most popular applications in the FLOSS ecosystem. As such, this project will empower people with disabilities around the world to perform more computer-driven tasks efficiently.</p>
                  <p>The accessibility improvements to "Open/Save" dialogs, the keyboard shortcut editor, and various other panels and dialogs will simplify integration of people with handicaps in various social and work contexts including public institutions and private companies, which in turn will allow more of them to base their digital infrastructure on open standards and digital commons in line with EU's value "to be free from discrimination on the basis of [‚Ä¶] disability".</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/KDE-Dolphin-a11y">https://nlnet.nl/project/KDE-Dolphin-a11y</a></p>
                </div>
              </details>
            </li>
          </ul>
          <h3>Decentralised solutions, including blockchain/distributed ledger</h3>
          <ul>
            <li>
              <details>
                <summary><strong>Redwax Server Modernisation</strong> ‚Äî Self-hostable X509 certificate based identity management solution</summary>
                <div>
                  <p>The Redwax Project is a set of tools and web server modules to make it easy to build and deploy secure services on the web. The Redwax modular certificate authority mod_ca provides a set of Apache http server modules that can be combined to form various types of certificate authorities, issuing certificates from a Certificate Sign Request, or with the SPKAC and SCEP protocols, servicing certificate revocation with CRLs and OCSP, and creating timestamps.</p>
                  <p>The Redwax tool provides a mechanism to read certificates and keys from a wide variety of sources, automatically associating leaf, intermediate, and trusted certificates, and optionally their private keys, then showing the metadata of or writing the certificates in a wide variety of target formats. This project will update the key modules, adjust to the current Apache API's and also fully implement the meanwhile published RFC 8894.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Redwax-SCEP-LDAP">https://nlnet.nl/project/Redwax-SCEP-LDAP</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Securing Internet protocols with decentralized identity</strong> ‚Äî DIDs and Verified Credentials as SASL method</summary>
                <div>
                  <p>There has been much innovation in the last few years in the area of decentralized digital identity, including the development of standards such as Decentralized Identifiers (DIDs) and Verifiable Credentials (VCs). These technologies have led to large-scale initiatives around the world to develop digital identity wallets, including for example the European Digital Identity Wallet (EUDI). These initiatives aim at making it possible to obtain and use digital versions of identity documents such as drivers' licenses, birth certificates, university diplomas, and more.</p>
                  <p>The potential of these technologies however is much greater than just logging in to websites. In this project, we work on integrating decentralized digital identity technologies into widely used Internet protocols themselves, such as XMPP for instant messaging. In this case, a combination of identity and messaging means that you can authenticate to a messaging service using a digital identity wallet, rather than username and password. We accomplish this by specifying and building a DID-based extension for the Simple Authentication and Security Layer (SASL).</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/DID-SASL">https://nlnet.nl/project/DID-SASL</a></p>
                </div>
              </details>
            </li>
          </ul>
          <h3>Data and AI</h3>
          <ul>
            <li>
              <details>
                <summary><strong>Data Package implementation in TypeScript</strong> ‚Äî Reference implementation of data definition language and data API</summary>
                <div>
                  <p>Data Package is a standard consisting of a set of simple yet extensible specifications to describe datasets, data files and tabular data. It is a data definition language (DDL) and data API that facilitates findability, accessibility, interoperability, and reusability (FAIR) of data. TypeScript implementation of the Data Package standard provides all the necessary functionality for working with data packages in Node.js or similar environments ‚Äî including validating and extending metadata, and reading or writing data in various formats such as CSV, TSV, JSON, and OpenDocument Format (ISO/IEC 26300) as used by e.g. Excel and LibreOffice.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/DataPackage-TS">https://nlnet.nl/project/DataPackage-TS</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Livebook</strong> ‚Äî Robust and distributed data and ML workflows with Python, Elixir, and Livebook</summary>
                <div>
                  <p>Livebook is an open-source interactive notebook application for the Elixir programming language and the Erlang VM ecosystem. It enables users to write, execute, and document code in real-time within a browser interface, making it ideal for exploratory programming, data analysis, teaching, and documentation. Livebook features built-in markdown support, real-time collaboration, custom visualizations, "smart cells" to automate common workflows, as well as built-in concurrent and distributed execution. The project supports the Elixir and Erlang languages and is integrating additional ones.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Livebook-Python">https://nlnet.nl/project/Livebook-Python</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>LLM2FPGA</strong> ‚Äî Run Open Source LLMs locally on FPGAs</summary>
                <div>
                  <p>LLM2FPGA aims to enable local inference of open-source Large Language Models (LLMs) on FPGAs using a fully open-source toolchain. While LLM inference has been demonstrated on proprietary hardware and software, we are not aware of any widely recognized project running open-source LLMs on FPGAs through a fully open-source EDA (Electronics Design Automation) flow. To fill this gap, the project will produce an HDL implementation of a lightweight open-source LLM, verify it via simulation, and then attempt synthesis and place-and-route on freely supported FPGA devices. By providing a fully open alternative to proprietary and cloud-based LLM inference, LLM2FPGA will offer a transparent, flexible, and privacy-friendly way to run your own LLM on local hardware.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/LLM2FPGA">https://nlnet.nl/project/LLM2FPGA</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>PodOS</strong> ‚Äî Personal Online Data Operating System aimed at exploring W3C Solid pods</summary>
                <div>
                  <p>PodOS is an operating system for data on Solid Pods, designed to bridge the gap between specialized apps and raw data management. It is built from the ground up for mobile-first UX, accessibility and maintainability, on top of re-usable custom elements. In the upcoming phase, PodOS will introduce new ways for users to structure, link, and repurpose their data, allowing them to organize information beyond the constraints of individual applications. Users will be able to extract information from classic documents or notes and transform them into structured resources that could be used with other Solid Apps. New developments will emphasise modularity and interoperability by integrating existing data modules, dynamically loaded dashboards and seamless transitions between PodOS and specialized apps. These advancements will give individuals and organizations greater flexibility and control over their data, making the Solid ecosystem more practical, interactive, and user-friendly.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/PodOS">https://nlnet.nl/project/PodOS</a></p>
                </div>
              </details>
            </li>
          </ul>
          <h3>Services + Applications (e.g. email, instant messaging, video chat, collaboration)</h3>
          <ul>
            <li>
              <details>
                <summary><strong>Mobile Typst editor</strong> ‚Äî Mobile editor/viewer for Typst documents</summary>
                <div>
                  <p>Typst is a new markup-based typesetting system that is designed to be as powerful as LaTeX while being much easier to learn and use. The Typst for iOS project focuses on creating a smooth Typst document editing experience akin to Swift Playground's editing experience. Additionally it allows the compilation, presenting and sharing of pdf files all from an iPhone or iPad.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Mobile-Typst-editor/">https://nlnet.nl/project/Mobile-Typst-editor/X</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Dino</strong> ‚Äî User-friendly and secure instant messaging based on XMPP</summary>
                <div>
                  <p>Dino is an open-source messaging application. It uses XMPP as an underlying protocol, which allows federated, provider-independent communication and offers a world-wide network of interconnected servers. Dino aims to be secure and privacy-friendly while at the same time offering a good user experience and a modern feature set.</p>
                  <p>This project is about adding various additional usability and privacy features such as Message moderation in groupchats (XEP-0425), message deletion (XEP-0424) and local message deletion, improved password handling and connection establishment via SASL2 (XEP-0388), Bind2 (XEP-0386), FAST (XEP-484) and storing secrets in the system keyring, improved file transfers including sending multiple images in the same message via Stateless File Sharing (XEP-0447), improving the UX in MUCs by using more efficient protocols like MUC Affiliation Versioning (XEP-0463) and by making further use of occupant IDs (XEP-0421) in the context of message correction and message deletion. It will also extending support of message formatting via Message Markup (XEP-0394).</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Dino-UX">https://nlnet.nl/project/Dino-UX</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Podlibre</strong> ‚Äî Dedicated, customizable podcast editor</summary>
                <div>
                  <p>Podlibre is an all-in-one, customizable podcast editor designed to empower podcasters with a tool they can rely on daily. In the past decade, the popularity of podcasts has exploded - but so far there was no good podcast-specific workflow for creators to handle the process. Obviously one can use generic sound editors, but these are typically geared toward music production and lack features that make it easy for podcasters and journalists to produce consistent podcast content. With a customizable workflow and plugin architecture, Podlibre allows users to tailor their experience while integrating with third-party services. It provides all essential features in one place, including noise reduction, mouth noise editing, multi-channel audio editing, music insertion, local transcription with manual correction, chapter editing, metadata editing (ID3, RSS), local publishing, and publishing to hosting platforms (Castopod, Funkwale, Faircamp).</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Podlibre">https://nlnet.nl/project/Podlibre</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Signature PDF</strong> ‚Äî PDF editing and server-based digital signing workflow</summary>
                <div>
                  <p>Signature PDF allows users to sign PDFs online, individually or with others. The project offers as well the possibilities to reorganize pages (merge, sort, rotate, delete, extract pages, etc.), edit metadata, and compress PDFs. This tool aims to be a free alternative to existing proprietary web services, offering users more control and guarantee of what happens to the PDF processed by the software.</p>
                  <p>Signature PDF is easily deployable on a server of any size, a laptop, a container image or a Yunohost instance. Scope of the project is to implement verification of signed PDFs, integration into third-party software, improve smartphone ergonomy and accessibility, and other improvementes to meet the requests/needs identified by users.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/SignaturePDF-UX">https://nlnet.nl/project/SignaturePDF-UX</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Flock XR</strong> ‚Äî 3D visual creativity and coding tool</summary>
                <div>
                  <p>Flock XR is a visual creativity and coding tool that allows young people to create 3D experiences in a web browser. Flock XR allows young people and beginners to create apps relevant to the virtual worlds that they use socially. Through creating with Flock XR, young people develop technical and creative skills such as coding and working in 3D space with 3D models and animations. They will be able to create using extended reality features including VR, Augmented Reality, 3D printing and spatial audio. This puts them on the path to amazing career opportunities across many industries. Flock XR is being developed with an inclusion first approach using co-design techniques with young people in our pilots. After a successful schools pilot we are focussing on improving user experience, stability and access for all.</p>
                  <p>Flock XR builds on established open source tools, Blockly and Babylon.js to bring modern 3D creation to young people on the devices they already use. We‚Äôre designing Flock XR for users who may have older hardware and limited data access. And we take young people‚Äôs rights, safety and data privacy very seriously. We‚Äôre extending young people‚Äôs reality with Flock XR and giving them the skills to create the virtual worlds that humanity needs.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/FlockXR">https://nlnet.nl/project/FlockXR</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>ClassQuiz</strong> ‚Äî Libre quizing tool</summary>
                <div>
                  <p>ClassQuiz is a quiz application designed for, but not limited to, classrooms. It allows anyone to create live quizzes to engage the audience in a fun way, where each player also competes against the others by answering questions as fast as possible to score high. By providing a simple setup for self-hosting, it also allows many educators to host quizzes without any privacy concerns. ClassQuiz was born as an alternative to Kahoot! because educational software for students should be built with privacy in mind.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/ClassQuiz">https://nlnet.nl/project/ClassQuiz</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Federating pedagogical immersive experiences</strong> ‚Äî Framework for playful learning content in enhanced reality</summary>
                <div>
                  <p>Emerging technologies like augmented and virtual reality (XR) provide incredible avenues to teach and learn. Unfortunately, nearly all content and ways to create it remain centralized through large captive platforms. Such platforms lock users and their creations to their closed source environment and filtering mechanisms. This process risk reflecting assumptions on how teaching can be done. The project "Federating pedagogical immersive experiences" proposes a self-hostable platform to remix simple pedagogical XR games. Learners themselves can then, together with parents and teachers, freely share back pedagogically, culturally and linguistically adapted content - curated by their own instance and benefiting from immersive technologies without being locked to a platform.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/ImmersiveXP">https://nlnet.nl/project/ImmersiveXP</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Kaidan MUC + legacy OMEMO</strong> ‚Äî Multi-user chat and improved legacy interoperability for Kaidan XMPP client</summary>
                <div>
                  <p>Kaidan is a user-friendly and modern chat app for every device. It uses the open communication protocol XMPP (Jabber). Unlike other chat apps, you are not dependent on one specific service provider. Instead, you can choose between various servers and clients. Kaidan is one of those XMPP clients.</p>
                  <p>It is easy to get started and switch devices with Kaidan. Additionally, it adapts to your operating system and device's dimensions. It runs on mobile and desktop systems including Linux, Windows, macOS, Android, Plasma Mobile and Ubuntu Touch. The user interface makes use of Kirigami and Qt Quick. The backend of Kaidan is entirely written in C++ using Qt and the Qt-based XMPP library QXmpp.</p>
                  <p>This project will make improvements to Kaidan across the board, ranging from multi-user chat, backups, bookmarks, support for legacy OMEMO encryption, SASL improvements, message retraction and more media sharing functionality.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Kaidan-MUC">https://nlnet.nl/project/Kaidan-MUC</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>LiberaForms</strong> ‚Äî Self-hostable E2EE libre form server</summary>
                <div>
                  <p>LiberaForms is an online form tool to easily create and manage forms. It can be used by neighbours, friends, colleagues and anyone else who values privacy. The server can be self-hosted and form answers can be end-to-end OpenPGP encrypted. LiberaForms comes with a comprehensible list of features for both form authors and site administrators alike, such as integrated GDPR policies. This grant will be used to make a number of usability improvements, to make LiberaForms a relevant tool for educational use cases, and add many new features requested by the people who already use it.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/LiberaForms-Edu">https://nlnet.nl/project/LiberaForms-Edu</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Modernizing Paged.js Web-to-Print</strong> ‚Äî Quality typesetting based on HTML and CSS</summary>
                <div>
                  <p>Paged.js is a free and open source JavaScript library that paginates content in the browser to create print/PDF output from HTML and CSS content. This is necessary for instance for delivering browser-native office productivity solutions - users expect these to produce good output but don't want to have the burden of legacy formats. The proposed project will fundamentally revisit/upgrade the architecture of paged.js. to support additional layouts, add advanced layout capabilities and implement PDF/UA tagging.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/PagedJS">https://nlnet.nl/project/PagedJS</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Peertube plugin livechat</strong> ‚Äî Public and private messaging for Peertube content + live streams</summary>
                <div>
                  <p>Peertube is a free, decentralized and sovereign alternative to video-on-demand and live-streaming platforms. The Peertube Livechat project is a popular plugin for PeerTube that adds chatting capabilities to Peertube, so the audience can interact with streamers during their live streams. The functionality goes way beyond a mere chat system: it also provides moderation tools, polls, chat integration in the live stream, TODO-list for streamers and moderation team, and more. Its ambition is to become a complete ecosystem for live streaming.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/PeerTube-Livechat-UX">https://nlnet.nl/project/PeerTube-Livechat-UX</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>PeerTube for Institutions</strong> ‚Äî Make PeerTube easier to manage and moderate at scale</summary>
                <div>
                  <p>PeerTube is a free-libre and federated video platforms that empowers anyone to self host video content without being isolated in the wide web. Many institutions have started using PeerTube, to reclaim control over their video hosting. By choosing PeerTube, they offer a wider audience the opportunity to familiarize themselves with PeerTube.</p>
                  <p>A significant part of this project focuses on enabling these institutional use cases, and is designed from their feedback. We plan to add ownership transfer and shared administration for video channels, quality of life features for moderation and administration, more control on an instance look and experience and a set-up wizard with relevant presets (and more). We also want to adapt the mobile app to tablet and TV devices, and add a watch offline option.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/PeerTube-for-Institutions/">https://nlnet.nl/project/PeerTube-for-Institutions/</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Repath Studio</strong> ‚Äî SVG editor written in Clojurescript</summary>
                <div>
                  <p>Repath Studio is a cross platform vector graphics editor, that combines procedural tooling with traditional design workflows. It includes an interactive shell, which allows evaluating code to generate shapes, or even extend the editor on the fly. Supporting multiple programming languages and enriching the existing API is planned. The tool relies heavily on the SVG specification, and aims to educate users about it. Creating and editing SMIL animations - an SVG extension ‚Äì is an important aspect of the project, that is yet to be fully implemented. An advanced undo/redo mechanism is used to maintain a full history tree of actions in memory, so users will never lose their redo stack. We are exploring ways to persist this history to disk. Some built-in accessibility testing tools are already included, but we want to add more. Extensibility is also something that we want to enhance, in order to allow creating and sharing custom tools and workflows. Integrations with third party tools will also be investigated.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/RepathStudio">https://nlnet.nl/project/RepathStudio</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>StreetComplete Multiplatform</strong> ‚Äî OpenStreetMap editing beyond Android</summary>
                <div>
                  <p>The goal of this project is to migrate StreetComplete from an Android app to a multiplatform app, making use of Kotlin Multiplatform and Compose Multiplatform for the UI, thus, allowing the app to be released on other platforms, such as iOS and eventually Linux.</p>
                  <p>This will allow for a significantly larger audience that is able to casually contribute missing data to OpenStreetMap on the go, as StreetComplete is the go-to app for this purpose, aimed at non-tech-savvy people and presented in a slightly gamified fashion. OpenStreetMap, in turn, is the free wiki worldmap.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/StreetComplete-multiplatform">https://nlnet.nl/project/StreetComplete-multiplatform</a></p>
                </div>
              </details>
            </li>
          </ul>
          <h3>Vertical use cases, Search, Community</h3>
          <ul>
            <li>
              <details>
                <summary><strong>An OpenScience flavour of Bonfire on NixOS for preprints</strong> ‚Äî Discuss preprints based on W3C ActivityPub federation</summary>
                <div>
                  <p>Preprints have revolutionised scholarly publishing, offering a rapid and open way to share research findings, establishing priority, receiving early feedback, and accelerating scientific discovery. Online discussions around preprints regularly take place on social media, but there still exists a gap in encouraging fluid discourse around science and making it a recognised academic activity.</p>
                  <p>This project aims to address the gap by facilitating and integrating these conversations into the scholarly framework using FOSS tooling. Outcomes include; establishing a Bonfire network tailored for preprints, with reproducible deployment made possible via NixOS, bringing existing communities into the Fediverse, amplifying contributions using existing scholarly infrastructure, exploring new models of peer evaluation, and supporting recognition of this crucial scholarly activity.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Sciety-ActivityPub">https://nlnet.nl/project/Sciety-ActivityPub</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>cables.gl editor features</strong> ‚Äî Create beautiful, interactive, visual web content</summary>
                <div>
                  <p>Cables is a tool which allows people to create beautiful, interactive, visual web content without knowing how to type a line of code. Your work is easily exportable at any time, so you can embed it into your website, use it an immersive VR experience, or integrate into other kinds of creative output. Cables patches can be published, shared, copied and remixed by the entire community. This allows people to constantly learn new things from each other. There is both a browser based version and a standalone, offline version offering a user-friendly development environment.</p>
                  <p>This new grant adds an improved keyframing- and animation user interface (timeline) that makes cables.gl much more accessible for animators and motion designers. The team will also add a physics engine, Gaussian Splatting (a new method of rendering realistic 3d scenes), dynamic operator instancing/repeating, a stepping debugger and a comprehensive shadergraph system that allows to create complex shaders by combining small modules.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/cables.gl-editorfeatures">https://nlnet.nl/project/cables.gl-editorfeatures</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>MOTIS</strong> ‚Äî European Public Transport Door to Door Real-Time Routing with MOTIS</summary>
                <div>
                  <p>This project aims to enhance MOTIS, an open-source, scalable, intermodal real-time routing system that powers the provider-neutral public transport routing service transitous.org. This grant will add support for the relevant European Transmodel data standards NeTEx, SIRI-ET, SIRI-SX, and OJP. Hereby, we will enable open and privacy friendly borderless routing across Europe from door to door using data published by European National Access Points (NAP) in compliance with EU regulation 2017/1926. Its results will be deployed via transitous.org and integrated into applications such as KDE Itinerary, KTrip, and Gnome Maps, fostering a fully open alternative to proprietary solutions.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/MOTIS">https://nlnet.nl/project/MOTIS</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Open Terms Archive vendor lock-in break</strong> ‚Äî Public tracking of the evolution of terms and conditions</summary>
                <div>
                  <p>Open Terms Archive is a digital public good that archives every version of the terms of over 800 digital services to support democratic oversight by regulators, lawmakers, journalists, researchers, and civil society. Open Terms Archive has prioritized adoption in multiple industries and jurisdictions over the past four years, by enabling easy connection from its fully open-source engine to free but proprietary platforms. The "Open Terms Archive vendor lock-in break" project aims at replacing the hardcoded interconnections with proprietary software with standardized APIs and connectors for at least one open-source platform for issue reporting, email notifications, dataset distribution, and RSS feeds publishing, while keeping compatibility with existing integrations that are used by community members.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/Modular-OTA">https://nlnet.nl/project/Modular-OTA</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>PodOS</strong> ‚Äî Personal Online Data Operating System aimed at exploring W3C Solid pods</summary>
                <div>
                  <p>PodOS is an operating system for data on Solid Pods, designed to bridge the gap between specialized apps and raw data management. It is built from the ground up for mobile-first UX, accessibility and maintainability, on top of re-usable custom elements. In the upcoming phase, PodOS will introduce new ways for users to structure, link, and repurpose their data, allowing them to organize information beyond the constraints of individual applications. Users will be able to extract information from classic documents or notes and transform them into structured resources that could be used with other Solid Apps. New developments will emphasise modularity and interoperability by integrating existing data modules, dynamically loaded dashboards and seamless transitions between PodOS and specialized apps. These advancements will give individuals and organizations greater flexibility and control over their data, making the Solid ecosystem more practical, interactive, and user-friendly.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/PodOS">https://nlnet.nl/project/PodOS</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>Pushing forward for CSS Print</strong> ‚Äî High end print from HTML and CSS</summary>
                <div>
                  <p>The Web is one of the largest common resources, accessible to everyone across the globe, based on standards maintained by the World Wide Web Consortium (W3C). Certain CSS modules have been developed specifically for paginated design and publication: the fragmentation model, which divides content into pages, columns, or regions, and includes features such as controlling flow breakpoints (page breaks, column breaks, etc.). Additionally, three W3C CSS modules focus on formatting for "paginated media", defining how pages are structured and providing essential functionality for printed page layouts, including margin sizes, page numbering, running headers, footnotes, templates, and element positioning on the page. However, these modules remain in the Working Draft phase, and currently no web browser has fully implemented them.</p>
                  <p>In response to this limited browser support, several open-source initiatives (such as WeasyPrint and Paged.js) have emerged over the past 15 years, each with a unique approach to addressing these challenges. The user community continues to grow, new layout requirements have arisen, revealing that the current specifications are insufficient to meet the demands of modern paginated layout. As developers, maintainers and users of these open-source solutions, our goal is to address these gaps by collaborating on the development of new specifications in a structured and collective manner, demonstrating the feasibility of these new specifications by implementing them in various tools and engaging in advocacy with the CSS Working Group (CSSWG) to promote the adoption of these new specification proposals.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/CSS-Print">https://nlnet.nl/project/CSS-Print</a></p>
                </div>
              </details>
            </li>
            <li>
              <details>
                <summary><strong>XR Fragments Teamware</strong> ‚Äî Design, deploy, federate and integrate portable XR experiences</summary>
                <div>
                  <p>XR Teamware will develop a publishing platform/forge for XR content, and a Blender plugin with direct import export capabilities to said forge and to Icosa gallery. This would allow 3D creators to easily publish and share their ideas, and preview metadata in Blender before exporting.</p>
                  <p>XR Fragments itself is a simple public protocol for networked 3D content to discover, reference, navigate and query 3D online assets (read-only), making it part of the web and thus liberating 3D content creation and content from only existing inside gated products. Within the scope of this project, XR Fragments will streamline the design, deployment, hosting, and integration of portable XR experiences - and thus further simplify embedding, cross-platform support and hosting, as well as add vendor specific support.</p>
                  <p>‚ñ∏ <em>For more details see</em>: <a href="https://nlnet.nl/project/XR-Teamware">https://nlnet.nl/project/XR-Teamware</a></p>
                </div>
              </details>
            </li>
          </ul>
          <hr>
          <p>Still hungry for more projects? Check out the <a href="https://nlnet.nl/project/current.html">overview of all our current and recent projects</a>...</p>
          <p>Inspired? If you are working on a project that contributes to the Next Generation Internet you can <a href="https://nlnet.nl/propose/">submit a proposal</a>. The next deadline is June 1<sup>st</sup>.</p>
          <h2 id="ack">Acknowledgements</h2>
          <p><a href="https://ec.europa.eu/info/departments/communications-networks-content-and-technology_en"><img src="https://nlnet.nl/image/logos/EC.svg" alt="Logo European Commission"></a></p>
          <p>The NGI0 Core fund is made possible with financial support from the <a href="https://ec.europa.eu/">European Commission</a>'s <a href="https://ngi.eu/">Next Generation Internet</a> programme, under the aegis of <a href="https://ec.europa.eu/info/departments/communications-networks-content-and-technology_en">DG Communications Networks, Content and Technology</a>.</p>
          <p><a href="https://nlnet.nl/core/"><img src="https://nlnet.nl/image/logos/NGI0CommonsFund_tag.svg" alt="Logo NGI Zero Commons Fund: letterlogo shaped like a tag"></a></p>
          
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Native visionOS platform support (332 pts)]]></title>
            <link>https://github.com/godotengine/godot/pull/105628</link>
            <guid>43768421</guid>
            <pubDate>Wed, 23 Apr 2025 03:37:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/godotengine/godot/pull/105628">https://github.com/godotengine/godot/pull/105628</a>, See on <a href="https://news.ycombinator.com/item?id=43768421">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
  <task-lists disabled="" sortable="">
    <div>
      <p dir="auto">Dear Godot community,</p>
<p dir="auto">I'm on Apple's visionOS engineering team, and we would like to contribute Vision Pro support to the Godot engine. This is the first PR that lays the foundation for that.</p>
<p dir="auto">First, I'd like to mention that we're really excited to be working with the Godot community on adding visionOS support. We've attempted to follow Godot's coding standards and a high-quality bar for our contributions. We hope that our contributions align with Godot's goals. Lastly, even though we have tried to split the changes into smaller self-contained PRs, we acknowledge that some of these PRs can be of considerable size.</p>
<p dir="auto">We're very happy to iterate on our PRs after receiving feedback and suggestions from the community.</p>
<h2 dir="auto">High Level Overview</h2>
<p dir="auto">The immediate goals of our contributions are:</p>
<ol dir="auto">
<li>To support current Godot games running natively on a planar window on visionOS.</li>
<li>To support creating Immersive experiences by using a new Godot's visionOS VR Plugin.</li>
</ol>
<p dir="auto">To achieve that, and in order to make reviewing easier, we have structured our contributions in three incremental PRs.</p>
<ol dir="auto">
<li>Add the native <code>visionOS</code> platform. Uses iOS as the starting point. Reuses as much code as possible between the iOS and Vision Pro platforms. (This PR).</li>
<li>Add ability to compile and link Swift files within Godot, and replace <code>main.mm</code> on the <code>visionOS</code> platform by the SwiftUI app lifecycle. This is a requirement to be able to launch Immersive scenes on visionOS.</li>
<li>Introduce Vision Pro VR plugin for Immersive support.</li>
</ol>
<p dir="auto">Even though we have a working version including points 2 and 3, those PRs are not up yet. Our current plan is to open them sequentially, after each of the previous PRs merge.</p>
<h2 dir="auto">Technical Discussion</h2>
<p dir="auto">This PR implements a new native <code>visionOS</code> platform.</p>
<p dir="auto">It's very close to the <code>iOS</code> platform in terms of implementation. In order to reuse as much code as possible, it introduces a new <code>drivers/apple_embedded</code> folder, to host code shared between the <code>iOS</code> and <code>visionOS</code> (but not <code>macOS</code>) platforms. We took inspiration from the new <code>drivers/apple</code> folder, which hosts code that applies to all Apple platforms.</p>
<p dir="auto">The platform-specific logic (including app instantiation, client code, display server, os support, and export plugin) was refactored, and now the bulk of the implementation is on <code>drivers/apple_embedded</code>. The platforms provide small subclasses that specialize the concrete aspects that are different between platforms. We did this refactor with care, trying not to alter the existing iOS functionality.</p>
<p dir="auto">The <code>visionOS</code> platform doesn't have OpenGL support, as it's not supported by visionOS.</p>
<p dir="auto">In order to make reviewing easier, we have tried to split this PR into individual self-contained commits when that made sense, and we have added detailed descriptions to most of them about what's contained in each commit. It's easier to review commit by commit, to see how the changes were incrementally implemented.</p>
<h3 dir="auto">Documentation Considerations</h3>
<p dir="auto">Now, the export plugin for <code>iOS</code> and <code>visionOS</code> share the majority of the code and most of their options (with the exception of launch storyboard support, which is iOS only; and specific platform icon support). Because of this, we have renamed <code>EditorExportPlatformIOS.xml</code> to <code>EditorExportPlatformAppleEmbedded.xml</code>, and moved it to <code>drivers/apple_embedded</code>.</p>
<p dir="auto">We'd like to ask the community if this is appropriate from the docs tooling perspective, and we're requesting further guidance on how to modify this file or the docs tooling to provide specific documentation for each of the platforms.</p>
<h2 dir="auto">Testing</h2>
<p dir="auto">We have been testing this PR mainly with the <a href="https://github.com/godotengine/godot-demo-projects/tree/master/3d/platformer">Platformer demo project</a>. We have verified the project continues to work on iOS, and it now runs natively on visionOS. We have tested both the Mobile and Forward+ renderers with the Metal rendering driver on both platforms.</p>
<h3 dir="auto">Open Questions</h3>
<p dir="auto">In all our tests, we exported an Xcode project using the corresponding export plugin and template, and we then ran this project directly to an iOS or visionOS device.</p>
<p dir="auto">We'd like to ask the community to provide guidance, or to help testing the following functionality:</p>
<ul dir="auto">
<li>We have not tested the ability of the iOS/visionOS export templates to embed and link plugins at export time. We tried to preserve this functionality on the <code>visionOS</code> platform, and we assume it will work in the same way it works on iOS. If anybody can attach a project using this functionality, we can help test it.</li>
<li>We have not been able to make direct Archive/IPA export, nor One-Click-Deploy to work, not even in <code>master</code>. There are some differences between our developer account and what external developers use, so it's a bit difficult to pinpoint the problem. We'd appreciate it if anybody that has One-Click-Deploy currently working is able to test on both platforms.</li>
<li>Likewise, we have not tested deploying directly to an iOS device using <code>ios_deploy</code> (used with Xcode versions prior to 14.0). If somebody has a working setup using this, we'd appreciate it if you could test this functionality still works. Alternatively, if <code>ios_deploy</code> support is no longer desired due to its age, we're happy to remove those codepaths for code simplicity.</li>
</ul>
<h2 dir="auto">Missing Functionality</h2>
<ul dir="auto">
<li>The DPI metrics on visionOS are hardcoded for now. They can change at runtime depending on how close the window is to the viewer. We'll address this in the PR adding SwiftUI, as the metrics come from SwiftUI APIs.</li>
<li>We have not implemented building a visionOS Icon Asset Catalog into the exporter. If somebody from the community can step in and implement it, that would be awesome. Otherwise, we may submit this as a later PRs. For now, you can work around this by manually creating your visionOS icon after exporting the Xcode project. <a href="https://developer.apple.com/design/human-interface-guidelines/app-icons" rel="nofollow">Here</a> you can read how visionOS icons work. And here's an example icon showing the Asset Catalog structure: <a href="https://github.com/user-attachments/files/19839704/visionOS-icon.xcassets.zip">visionOS-icon.xcassets.zip</a></li>
<li>The SVG logo for the visionOS platform is just text, it'd be good if somebody could come up with a nice graphic.</li>
</ul>
<hr>
<p dir="auto">We're happy to answer any questions or address any concerns. We're looking forward to collaborating with all of you.</p>
<p dir="auto"><a data-hovercard-type="user" data-hovercard-url="/users/BastiaanOlij/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/BastiaanOlij">@BastiaanOlij</a> <a data-hovercard-type="user" data-hovercard-url="/users/clayjohn/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/clayjohn">@clayjohn</a> <a data-hovercard-type="user" data-hovercard-url="/users/coppolaemilio/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/coppolaemilio">@coppolaemilio</a> <a data-hovercard-type="user" data-hovercard-url="/users/stuartcarnie/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/stuartcarnie">@stuartcarnie</a> Feel free to mention anybody who would be interested in this change.</p>
    </div>
  </task-lists>
  
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Projects for Old OS X (126 pts)]]></title>
            <link>https://jonathanalland.com/old-osx-projects.html</link>
            <guid>43767944</guid>
            <pubDate>Wed, 23 Apr 2025 01:42:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jonathanalland.com/old-osx-projects.html">https://jonathanalland.com/old-osx-projects.html</a>, See on <a href="https://news.ycombinator.com/item?id=43767944">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				<p><span>I</span><span>n the fall of 2019, I came to a decision: it was time to leave modern macOS behind.</span></p>
				<p>A decade prior, switching to OS X had been a revelatory experience, as though the software was working in perfect sync with my mind. That feeling had long since disappeared.</p>
				<p>I surveyed the computing landscape. Windows was still fine, and Linux was still Linux. A normal person would have just picked one, but I was apparently not a normal person. I cared far too much about having the <em>perfect</em> computer, and I couldn't get that wonderful memory out of my head...</p>
			</div><div>
			<p><small>Most downloads include source code. Where code was omitted for practical or aesthetic reasons, it is available upon request.</small></p>
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google won't ditch third-party cookies in Chrome after all (124 pts)]]></title>
            <link>https://arstechnica.com/gadgets/2025/04/google-wont-ditch-third-party-cookies-in-chrome-after-all/</link>
            <guid>43766803</guid>
            <pubDate>Tue, 22 Apr 2025 22:15:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/gadgets/2025/04/google-wont-ditch-third-party-cookies-in-chrome-after-all/">https://arstechnica.com/gadgets/2025/04/google-wont-ditch-third-party-cookies-in-chrome-after-all/</a>, See on <a href="https://news.ycombinator.com/item?id=43766803">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          
          
<h2>Maintaining the status quo</h2>
<p>While Google's sandbox project is looking more directionless today, it is not completely ending the initiative. The team still plans to deploy promised improvements in Chrome's Incognito Mode, which has been re-architected to <a href="https://arstechnica.com/tech-policy/2024/04/google-agrees-to-delete-private-browsing-data-to-settle-incognito-mode-lawsuit/">preserve user privacy</a> after <a href="https://arstechnica.com/tech-policy/2023/12/google-agrees-to-settle-in-chrome-incognito-mode-class-action-lawsuit/">numerous complaints</a>. Incognito Mode blocks all third-party cookies, and later this year, it will gain IP protection, which masks a user's IP address to protect against cross-site tracking.</p>
<figure><p><iframe allow="fullscreen" loading="lazy" src="https://www.youtube.com/embed/BGSGlFP_Sk8?start=0&amp;wmode=transparent"></iframe></p><div>
    
    <p>
      What is Topics?

          </p>
  </div>
</figure>
<p>Chavez admits that this change will mean Google's Privacy Sandbox APIs will have a "different role to play" in the market. That's a kind way to put it. Google will continue developing these tools and will work with industry partners to find a path forward in the coming months. The company still hopes to see adoption of the Privacy Sandbox increase, but the industry is unlikely to give up on cookies voluntarily.</p>
<p>While Google focuses on how ad privacy has improved since it began working on the Privacy Sandbox, the changes in Google's legal exposure are probably more relevant. Since launching the program, Google has lost three antitrust cases, two of which are relevant here: the search case <a href="https://arstechnica.com/tech-policy/2025/04/chrome-on-the-chopping-block-as-googles-search-antitrust-trial-moves-forward/">currently in the remedy phase</a> and the newly decided <a href="https://arstechnica.com/tech-policy/2025/04/google-loses-ad-tech-monopoly-trial-faces-additional-breakups/">ad tech case</a>. As the government begins arguing that Chrome gives Google too much power, it would be a bad look to force a realignment of the advertising industry using the dominance of Chrome.</p>
<p>In some ways, this is a loss‚Äîtracking cookies are undeniably terrible, and Google's proposed alternative is better for privacy, at least on paper. However, universal adoption of the Privacy Sandbox could also give Google more power than it already has, and the supposed privacy advantages may never have fully materialized as Google continues to seek higher revenue.</p>


          
                  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to quickly charge your smartphone: fast charging technologies in detail (135 pts)]]></title>
            <link>https://eb43.github.io/articles/fast-charging-technologies-in-detail.html</link>
            <guid>43766728</guid>
            <pubDate>Tue, 22 Apr 2025 22:00:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eb43.github.io/articles/fast-charging-technologies-in-detail.html">https://eb43.github.io/articles/fast-charging-technologies-in-detail.html</a>, See on <a href="https://news.ycombinator.com/item?id=43766728">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>


<p>The great days are gone when charging a smartphone only required two wires. Today, <a href="https://techtoday.in.ua/news/zaryadky-usb-c-mayut-bilshe-obchyslyuvalnoyi-potuzhnosti-nizh-navigaczijnyj-kompyuter-apollo-11-shho-dopravyv-jogo-na-misyacz-125316.html">a charger is a full-fledged computer with more processing power than the Apollo 11 spacecraft</a> that brought humans to the Moon. A processor is necessary in the charger to negotiate charging parameters with the smartphone. Let's dive into fast charging technologies in detail.</p>

<h2>The Best Charger ‚Äì From Your Old Feature Phone</h2>

<p>If you plug in your smartphone before bed, unplug it in the morning, and the charge lasts the whole day ‚Äì you don't need to worry about specific charging standards or chargers.</p>

<p><a href="https://techtoday.in.ua/wp-content/uploads/2025/05/slow-phone-charger.jpg"><img src="https://techtoday.in.ua/wp-content/uploads/2025/05/slow-phone-charger.jpg" alt="" width="2548" height="1473"></a></p>

<p>In such a situation, the best solution is slow charging, for which a low-power charger from your old feature phone is ideal. These devices offer a small power output of 2‚Äì5 W, stretching the charging process to 5‚Äì7 hours depending on the adapter's power and the battery capacity. This way, your phone's battery charges under the best conditions, minimizing degradation. <a href="https://techtoday.in.ua/news/shvydke-zaryadzhannya-za-100-dniv-z-yidaye-1-6-yemnosti-batareyi-telefona-164005.html">Fast charging leads to up to 1.6% battery degradation every 100 days</a>, according to an experiment comparing 5W and 25W charging on six identical smartphone batteries.</p>

<p>With a regular charger, your phone will charge in 30 minutes to an hour, and the rest of the time, the battery remains under stress caused by reaching maximum voltage. You can verify this yourself by feeling the battery heating up or by <a href="https://eb43.github.io/android-battery-temperature-app.html">using the Android Battery Temperature app</a>. See battery voltage in real time with <a href="https://eb43.github.io/android-battery-voltage-indicator-in-status-bar.html">Android battery voltage indicator in status bar</a>. An ultra-slow charger will power the phone overnight while keeping the battery temperature at room level.</p>

<h2>What Is Considered Fast Charging?</h2>

<p>Fast charging is a general term whose technical meaning has changed over time.</p>

<p>Starting with Android 15, Google modified the OS so that Android smartphones display a fast charging notification when the charger delivers at least 20W of power.</p>

<p>Earlier versions of <a href="https://techtoday.in.ua/news/android-pidvyshhuye-minimalnyj-riven-potuzhnosti-zaryadky-shhob-vona-vvazhalasya-shvydkoyu-172476.html">Android consider charging to be fast if it delivers more than 7.5W of power</a>. Charging at 5‚Äì7.5W is considered normal, while anything below 5W will display ‚Äúslow charging.‚Äù</p>

<h2>What You Need to Know About Fast Charging</h2>

<p>If you want to charge your phone quickly, you need to understand the technologies behind it. First, you need to know the power your phone can handle. Charging power is measured in watts. Watts are calculated by multiplying voltage (in volts) by current (in amps).</p>

<p>For example, Google claims that the Pixel 9 can "fast charge" using a 45W Google USB-C charger, but stepping away from this marketing finesse reveals that the phone‚Äôs actual maximum charging power is 27W.</p>

<p>You also need to know which charging protocol your smartphone supports. Today, there has been a shift toward standardization, and most phones now support the USB PD protocol. However, many other protocols still exist. It‚Äôs important to remember that these protocols are not compatible with each other. If the phone and charger do not support a common protocol, they won‚Äôt be able to negotiate fast charging.</p>

<p>Once you know the power and protocol, you can choose a cable and charger capable of delivering the required power. The thing is, USB cables contain ultra-thin wires inside, which are not always made of copper. This significantly reduces the cable‚Äôs energy transfer efficiency and causes it to heat up. <a href="https://techtoday.in.ua/reviews/deyaki-usb-kabeli-tse-obigrivachi-yak-magnitom-vyznachyty-duzhe-poganyj-usb-kabel-158905.html">Some USB cables heat up more than the phone or charger itself</a>.</p>

<p>Keep in mind that the technical specifications of cables, chargers, and smartphones are often exaggerated. Just because a charger says 30W doesn‚Äôt mean it can reliably deliver that power over time. At best, it will activate overheat protection and reduce power. At worst, it may fail and even cause a fire.</p>

<p>To use electronics safely, avoid running them at their maximum rated power. For example, if your phone peaks at 30W charging, it‚Äôs better to use a charger rated for 45W or more.</p>

<p>The same applies to USB cables. A cable rated for 30W might work well for phone charging but won‚Äôt be ideal for a laptop that draws 100W.</p>

<p>Remember that the best USB cables are rated for no more than 5A of current. High-quality USB cables can handle 3A without excessive heating. USB-C to USB-C cables have a special e-marker chip that tells the charger the maximum power the cable can handle. However, keep in mind that the presence of the chip doesn‚Äôt guarantee the physical wires are thick enough to safely carry the claimed power.</p>


<h2>Fast Wired Charging Technologies</h2>

<p>The fastest possible charging is only achievable when a cable is connected to the smartphone. Only wired charging ensures minimal energy loss during the transfer from the charger to the device.</p>

<p>All fast-charging technologies use the same basic principle to deliver high power at the physical level ‚Äì increasing voltage to reduce current. High current is what melts cables and can potentially cause fires.</p>

<p>However, before the charging adapter starts increasing the voltage, it must first communicate with the smartphone. Incompatibility of the communication software protocol is the reason why a smartphone with USB PD, for example, cannot fast charge from a VOOC charger.</p>

<h3>USB PD Fast Charging</h3>

<p>USB Power Delivery (USB PD) is the most common charging standard for smartphones, not to mention tablets and laptops.</p>

  <img src="https://techtoday.in.ua/wp-content/uploads/2025/05/unnamed_file_from_a-us.storyblok.com_.jpg_75.jpg" alt="" width="480" height="323">

<p>USB PD is only available via a USB-C connection. USB PD is not supported with a USB-A connector (rectangular plug), unlike some other charging protocols.</p>


<table>
  <thead>
    <tr>
      <th>Version</th>
      <th>Voltage Parameters (V)</th>
      <th>Max Current (A)</th>
      <th>Max Power (W)</th>
      <th>Typical Use</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>USB PD 1.0</strong></td>
      <td>5, 12, 20</td>
      <td>Up to 3.0</td>
      <td>Up to 60</td>
      <td>Smartphones, tablets, small accessories</td>
    </tr>
    <tr>
      <td><strong>USB PD 2.0 / 3.0</strong></td>
      <td>5, 9, 15, 20</td>
      <td>Up to 5.0</td>
      <td>Up to 100</td>
      <td>Laptops, monitors, high-power peripherals</td>
    </tr>
    <tr>
      <td><strong>USB PD 3.1</strong></td>
      <td>28, 36, 48</td>
      <td>Up to 5.0</td>
      <td>Up to 240</td>
      <td>High-performance laptops, gaming devices, displays</td>
    </tr>
  </tbody>
</table>

<p>USB PD is as close to a universal standard as possible, being supported by almost every modern gadget and charger. Apple, Google, and Samsung use it in all their latest phones and other devices.</p>

<p>While there are different versions of PD, here are just a few key things to know:</p>

<ul>
  <li>USB PD 1.0 is outdated (since 2020) and supports up to 100W. Its fixed voltages are 5V, 9V, 15V, and 20V with currents of 1.5A, 2A, 3A, and 5A.</li>
  <li>Today, USB PD 2.0 is relevant. It also supports up to 100W of power but does so more flexibly. A USB PD 2.0 charger rated at 36W should support 5V 3A, 9V 3A, and 15V 2.4A. A charger rated at 45‚Äì60W adds support for 20V 3A. Chargers rated at 60‚Äì100W provide an additional 20V 5A mode.</li>
  <li>USB PD 3.0, now widely adopted, allows for even more flexible voltage negotiation via PPS mode. PPS exists alongside the list of fixed voltages. The max power of USB PD 3.0 is 100W.</li>
  <li>PPS (Programmable Power Supply) support in USB PD 3.0 allows the smartphone and charger to select any voltage within the supported range, in 0.02V steps. For example, instead of fixed 9V, the phone may request 8.7V if its charging controller deems it optimal. These finely tuned voltage levels help precisely control power consumption, minimizing heat while maintaining fast charging. Phones that support PPS require a PPS-compatible charger.</li>
  <li>Extended Power Range (EPR) in PD 3.1 adds 28V, 36V, and 48V options. PD 3.1 enables charging at up to 240W. This power is achieved by increasing voltage to 48V, since USB cables can‚Äôt handle more than 5A without melting. At 48V, 240W equals a current of 5A.</li>
</ul>

<h3>Qualcomm Quick Charge (QC) Fast Charging</h3>

<p>Qualcomm's Quick Charge (QC) technology was developed to charge batteries faster than standard USB (not USB PD, but fixed 5V 2A). Hardware fast charging is achieved by increasing the output voltage supplied by the charger.</p>

<p>Since many phones use Qualcomm processors, QC support is widespread. There have been several versions of QC, but all the latest three versions (QC 4, 4+, 5) support USB PD and can operate with power up to 100W. QC is also cross-compatible with many other standards.</p>

<p>Starting from QC 3.0, the INOV technology was introduced, which resembles USB PD PPS, allowing the charger and smartphone to adjust the voltage in 0.2V increments.</p>

<table>
  <thead>
    <tr>
      <th>Version</th>
      <th>Voltage Range</th>
      <th>Max Current</th>
      <th>Max Power</th>
      <th>Key Features</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>QC 1.0</strong> (2013)</td>
      <td>Up to 6.3V</td>
      <td>2A</td>
      <td>10W</td>
      <td>Introduced higher-voltage charging</td>
    </tr>
    <tr>
      <td><strong>QC 2.0</strong> (2014)</td>
      <td>Class A: 5V, 9V, 12V<br>Class B: 5V, 9V, 12V, 20V</td>
      <td>Up to 3A</td>
      <td>Up to 36W</td>
      <td>Improved efficiency and charging speed</td>
    </tr>
    <tr>
      <td><strong>QC 3.0</strong> (2016)</td>
      <td>3.6V‚Äì20V in 0.2V steps</td>
      <td>Up to 3A</td>
      <td>Up to 36W</td>
      <td>INOV (Intelligent Negotiation for Optimal Voltage) for optimization</td>
    </tr>
    <tr>
      <td><strong>QC 4.0 / 4+</strong> (2017)</td>
      <td>3.6V‚Äì20V (Quick Charge)<br>5V, 9V (USB PD)</td>
      <td>Up to 5A</td>
      <td>Up to 100W (QC)<br>27W (USB PD)</td>
      <td>Supports USB PD, enhanced safety</td>
    </tr>
    <tr>
      <td><strong>QC 5.0</strong> (2020)</td>
      <td>3.3V‚Äì20V</td>
      <td>Up to 7A</td>
      <td>Over 100W</td>
      <td>Supports dual-cell batteries, USB PD PPS, advanced cooling</td>
    </tr>
  </tbody>
</table>


<h3>MediaTek Pump Express Fast Charging</h3>

  <img src="https://techtoday.in.ua/wp-content/uploads/2025/05/mediatek-pump-express.jpg" alt="MediaTek Pump Express" width="482" height="622">

<p>MediaTek is another major chipmaker with its own fast charging technology called Pump Express, which is quite similar to Qualcomm‚Äôs QC. It seems that MediaTek is no longer actively promoting this technology, but the Pump Express 4.0, introduced almost a decade ago, is compatible with the USB PD 3.0 standard.</p>

<table>
  <thead>
    <tr>
      <th>Version</th>
      <th>Voltage Range</th>
      <th>Max Current</th>
      <th>Max Power</th>
      <th>Key Features</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Pump Express</strong></td>
      <td>Up to 5V</td>
      <td>‚Äî</td>
      <td>&lt;10W</td>
      <td>Initial version; negotiates voltage up to 5V depending on battery state.</td>
    </tr>
    <tr>
      <td><strong>Pump Express Plus</strong></td>
      <td>Up to 12V</td>
      <td>‚Äî</td>
      <td>=&lt;15W</td>
      <td>Improved version for chargers with output power of 15W or more.</td>
    </tr>
    <tr>
      <td><strong>Pump Express 2.0+</strong></td>
      <td>5V‚Äì20V (0.5V step)</td>
      <td>3A‚Äì4.5A+</td>
      <td>~15W</td>
      <td>Offers multiple charging stages: Normal, Turbo 1, and Turbo 2.</td>
    </tr>
    <tr>
      <td><strong>Pump Express 3.0</strong></td>
      <td>3V‚Äì6V (step of 0.010‚Äì0.020V)</td>
      <td>&gt;5A</td>
      <td>25‚Äì30W</td>
      <td>Uses direct charging via USB Type-C, bypassing the phone‚Äôs internal charging circuitry.</td>
    </tr>
  </tbody>
</table>

<p>Pump Express 3.0 introduced an interesting solution: direct battery charging. In a typical smartphone, the charger does not actually charge the battery directly ‚Äî it supplies power to the phone. Charging is handled by the internal charging controller, which steps down the voltage from 5V, 9V, or 12V to a battery-safe level of around 4V. This process generates additional heat in both the phone and the battery.</p>

<p>With Pump Express 3.0, the smartphone disables its internal charging electronics and connects the battery directly to the charger. The charger supplies voltage matching the battery's level ‚Äî between 3V and 6V ‚Äî compensating for voltage drop across the USB cable and connectors. Thanks to direct charging, the smartphone heats up significantly less.</p>


<h3>VOOC and SuperVOOC Fast Charging</h3>

<p>Voltage Open Loop (VOOC) and SuperVOOC protocols remain arguably the most problematic due to the fact that the BBK conglomerate‚Äîwhich owns several well-known smartphone brands including Realme and Oppo‚Äîis reluctant to license it to third-party charger manufacturers. This means that owners of Vivo, Oppo, Realme, and other BBK brands get fast charging only when using the original cable and charger included with the phone.</p>

<a href="https://techtoday.in.ua/wp-content/uploads/2025/05/supervooc.jpg">
  <img src="https://techtoday.in.ua/wp-content/uploads/2025/05/supervooc.jpg" alt="" width="532" height="451">
</a>

<p>VOOC was first introduced in 2014 and supported 5V/4A, which was nearly twice as fast as the standard USB 5V/2A. Two years later, its successor SuperVOOC was released with a full voltage range.</p>

<p>BBK‚Äôs sub-brands received these charging technologies under different names. For example: Flash Charge (also VOOC), Warp Charge (also OnePlus Dash Charge and Realme DART), Super Flash Charge (also SuperVOOC).</p>

<p>SuperVOOC is significantly different from other fast-charging technologies. Firstly, smartphones supporting it feature a dual-cell battery. This dual design helps reduce heat when charging at high currents. Secondly, SuperVOOC moves the charging controller from the smartphone into the charger itself. This reduces heating of the smartphone, though it transfers the heat source to the charger.</p>

<p>With SuperVOOC, separating the battery and moving the controller outside the smartphone is essential, as this technology more than doubles the maximum current compared to the current 5A USB standard:</p>

<ul>
  <li>SuperVOOC (2016): 10V / 5A = 50W</li>
  <li>SuperVOOC 2.0 (2020): 10V / 6.5A = 65W</li>
  <li>SuperVOOC 2.0 (2022): 11V / 6‚Äì7.3A = up to 80W</li>
  <li>SuperVOOC 240W (2022): 20V / 12A = 240W</li>
</ul>

<h3>Mi Turbo Charge and Xiaomi HyperCharge Fast Charging</h3>

<p>Another less common charging standard that works only when using the USB cable and charger included with Xiaomi, Poco, or Redmi smartphones.</p>


  <img src="https://techtoday.in.ua/wp-content/uploads/2025/05/xiaomi-mi-turbo-charge.jpg" alt="" width="779" height="534">


<p>Mi Turbo Charge is the marketing name for Xiaomi‚Äôs early fast-charging technology. It supports up to 33W of power. Xiaomi HyperCharge has since replaced Mi Turbo Charge.</p>

<p>Xiaomi HyperCharge requires an original Xiaomi cable and charger because the USB-A connector used includes an additional physical contact‚Äîfive pins instead of the usual four.</p>

<a href="https://techtoday.in.ua/wp-content/uploads/2025/05/original-xiaomi-cable-and-charger-usb-5-pin.jpg">
  <img src="https://techtoday.in.ua/wp-content/uploads/2025/05/original-xiaomi-cable-and-charger-usb-5-pin.jpg" alt="" width="831" height="1188">
</a>

<p>Although Xiaomi advertises up to 120W in its promotional materials, this figure is only achievable when connected to a 240V power outlet. In Brazil, the USA, Canada, Colombia, Japan, and other countries with 120V power outlets, Xiaomi HyperCharge provides only 96W of power.</p>

<p>Xiaomi HyperCharge supports up to 20V, with current reaching 6A, enabling a maximum power of 120W.</p>

<h3>Motorola TurboPower Fast Charging</h3>

<p>Earlier Motorola phones used regular fast charging, but their recent models now use TurboPower. Different phone models have different maximum charging speeds, with the fastest TurboPower charger rated for 125W.</p>

<a href="https://techtoday.in.ua/wp-content/uploads/2025/05/motorola-turbo-power.jpg">
  <img src="https://techtoday.in.ua/wp-content/uploads/2025/05/motorola-turbo-power.jpg" alt="" width="831" height="640">
</a>

<h3>Samsung Adaptive Fast Charge (AFC) and Super Fast Charge (SFC)</h3>
Samsung offers two main fast-charging technologies: Adaptive Fast Charge (AFC) and Super Fast Charge (SFC).

<a href="https://techtoday.in.ua/wp-content/uploads/2025/05/samsung-superfast-charging.jpg">
  <img src="https://techtoday.in.ua/wp-content/uploads/2025/05/samsung-superfast-charging.jpg" alt="" width="524" height="630">
</a>

<p>Samsung Adaptive Fast Charge (AFC) works with 5V for standard charging and 9V for fast charging, supporting up to 2A, which delivers a maximum of 18W. This technology is based on Qualcomm Quick Charge 2.0 and is compatible with most modern Samsung smartphones. It uses USB-A to Micro-USB or USB-C cables and is supported on Exynos and Snapdragon devices.</p>

<p>Samsung Super Fast Charge (SFC) includes two versions. The first, Super Fast Charge 1.0, uses 5V (standard) and 9V (fast) with up to 2.25A, delivering up to 25W. This version uses USB PD 3.0.</p>

<p>The second version, Super Fast Charge 2.0, supports 5V, 9V, 15V, and 20V with a maximum of 2.25A at 20V, and variable current for other voltages‚Äîup to 4.05A at 3.3V and up to 2.1A at 21V. This version can deliver up to 45W using USB PD 3.0 with PPS support. It requires a USB-C to USB-C cable rated for 5A.</p>

<h3>Huawei Fast Charge Protocol (FCP) and SuperCharge Protocol (SCP)</h3>
Huawei promotes two proprietary fast-charging technologies: Fast Charge Protocol (FCP) and SuperCharge Protocol (SCP).

<a href="https://techtoday.in.ua/wp-content/uploads/2025/05/huawei-scp.jpg">
  <img src="https://techtoday.in.ua/wp-content/uploads/2025/05/huawei-scp.jpg" alt="" width="379" height="400">
</a>

<p>Fast Charge Protocol (FCP) was introduced in 2015 and uses high voltage with low current for charging. It operates at 9V and 2A, providing up to 18W. FCP was widely used in early Huawei and Honor smartphones.</p>

<p>SuperCharge Protocol (SCP), introduced in 2016, is an advanced version of FCP and supports higher charging power. SCP includes different voltage and current combinations to achieve more power. For example, one SCP configuration is 10V at 4A, which delivers up to 40W. Other variations include 11V at 6A (66W) and 20V at 5A (100W). SCP is used in modern Huawei models like the Mate 20 Pro, Mate 40 Pro, and P60 Pro.</p>


<h3>Anker PowerIQ Fast Charging</h3>

<p>Fast charging is offered not only by phone and processor manufacturers. Anker, a company that produces power banks and chargers, has its own standard called PowerIQ.</p>

<p>PowerIQ 1.0 delivers a maximum power of 12W by supplying 5V at up to 2.4A. PowerIQ 2.0 is an improved version that includes VoltageBoost technology, which compensates for voltage loss due to cable heating. It still provides 5V at up to 2.4A.</p>

<p>PowerIQ 3.0 is the latest version, supporting up to 100W of power. It is compatible with USB-C Power Delivery (PD) and Qualcomm Quick Charge 3.0. For example, the PowerPort+ Atom III charger with PowerIQ 3.0 features USB-C outputs supporting 5V at 2.4A, 9V at 3A, 15V at 3A, and 20V at 2.25A, as well as a USB-A output providing 5V at 2.4A, 9V at 1.66A, and 12V at 1.25A.</p>

<h3>iPhone Fast Charging</h3>

<p>Apple provides iPhone users with a fast charging technology called Fast Charge. However, this is just a marketing name‚ÄîiPhones do not have a proprietary charging protocol like Huawei‚Äôs SCP or SuperVOOC. For fast charging, iPhones use the USB PD standard.</p>

<a href="https://techtoday.in.ua/wp-content/uploads/2025/05/iphone-fast-charge.jpg">
  <img src="https://techtoday.in.ua/wp-content/uploads/2025/05/iphone-fast-charge.jpg" alt="iPhone Fast Charging" width="638" height="466">
</a>

<p>Compared to fast charging on Android phones (except Samsung), iPhone‚Äôs fast charging looks rather slow:</p>

<ul>
  <li>The iPhone 16, which supports up to 45W charging, uses up to 15V and 3A current.</li>
  <li>The iPhone 15 and earlier models have a maximum charging power of 29W, with 9V at 3A.</li>
  <li>For models like iPhone 12, iPhone SE (3rd generation), and newer, the recommended charging is 20W (9V / 2.2A).</li>
  <li>For iPhone 8, iPhone X, iPhone XR, iPhone 11, and older, the maximum charging power is 18W, with 9V at 2A.</li>
</ul>

<h2>Fast Wireless Charging Technologies</h2>

<p>The most important thing to remember about wireless charging is that it is extremely inefficient. Around 50% of the energy consumed by a wireless charger is lost as heat, which warms up your smartphone. Because of this, wireless charging typically has much lower power output than wired charging.</p>

<p>Wireless charging technology is more accurately described as ‚ÄúUSB connector-less charging.‚Äù It replaces the USB plug with energy transfer based on electromagnetic induction. In simple terms, a copper coil receives alternating current, generating an alternating magnetic field. A second copper coil placed nearby enters this magnetic field and converts it into alternating electric current. As mentioned earlier, the energy losses are significant.</p>

<p>Here are the main wireless charging standards you might encounter:</p>

<h3>Qi Wireless Charging</h3>

<p>The Qi wireless charging technology (pronounced ‚Äúchee‚Äù), developed by the Wireless Power Consortium (WPC) in 2010, enables energy transfer over a distance of up to 4 cm between coils. The magnetic field oscillation frequency ranges from 110‚Äì205 kHz and adjusts dynamically based on feedback control to regulate charging power.</p>

<p>Qi supports several power profiles. The Baseline Power Profile (BPP) delivers up to 5W of charging power. The Extended Power Profile (EPP) increases this to 15W and is the most common fast-charging option for smartphones. Additionally, there is a Medium Power Profile, offering between 30 and 65W.</p>

<ul>
  <li>Basic electrical parameters for Qi BPP coils:
    <ul>
      <li>Voltage at the secondary coil (device side): 5V up to 1A</li>
      <li>Voltage at the primary coil (charger side): 12V, current approx. 0.5‚Äì1A for up to 5W output</li>
    </ul>
  </li>
  <li>Extended Qi EPP parameters (up to 15W):
    <ul>
      <li>Voltage at the secondary coil: 9V, current up to 1.67A</li>
      <li>Voltage at the primary side: 12V or higher, current up to 2A</li>
    </ul>
  </li>
</ul>

<h3>Apple MagSafe</h3>

<p>The Qi standard, like any wireless energy transfer method, has a major issue‚Äîprecise alignment of the coils. Some manufacturers even printed crosshairs on their devices to help with alignment. But in 2020, Apple introduced a brilliantly simple and effective solution‚Äîmagnets placed around the outer edge of the coil (as seen in the photo below, with silver rectangles surrounding a yellow copper coil).</p>

<a href="https://techtoday.in.ua/wp-content/uploads/2025/05/apple-magsafe-teardown.jpg">
  <img src="https://techtoday.in.ua/wp-content/uploads/2025/05/apple-magsafe-teardown.jpg" alt="Apple MagSafe Teardown" width="672" height="397">
</a>

<p>Apple essentially took the Qi standard, added a ring of magnets that snap the charger precisely into place, and branded it as MagSafe. MagSafe has been available starting with the iPhone 12 and newer models.</p>

<p>MagSafe initially offered up to 15W of charging power, and with the iPhone 16 and MagSafe 2 (second generation), the power increased to 25W. To achieve maximum charging speed, a power adapter supporting USB Power Delivery (PD) 3.0 with output of 9V / 2.22A or 9V / 2.56A is required.</p>

<h3>Qi2 Wireless Charging</h3>

<p>Apple‚Äôs MagSafe successfully solved the primary issue of wireless charging, and fortunately, Apple shared this design for use in the Qi2 standard, introduced in 2023. Essentially, Qi2 is a marketing name for Apple‚Äôs MagSafe adapted for Android smartphones.</p>

<p>Qi2 includes the same magnetic ring as MagSafe. Qi2-compatible devices can charge using MagSafe chargers, and MagSafe-compatible iPhones can charge using Qi2 chargers. However, due to Apple's proprietary certification, only certified MagSafe chargers deliver 15W power. Qi2 chargers, lacking certification, charge iPhones at up to 7.5W.</p>




</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[CSS Hell (212 pts)]]></title>
            <link>https://csshell.com/</link>
            <guid>43766715</guid>
            <pubDate>Tue, 22 Apr 2025 21:58:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://csshell.com/">https://csshell.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43766715">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Atuin Desktop: Runbooks That Run (506 pts)]]></title>
            <link>https://blog.atuin.sh/atuin-desktop-runbooks-that-run/</link>
            <guid>43766200</guid>
            <pubDate>Tue, 22 Apr 2025 20:54:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.atuin.sh/atuin-desktop-runbooks-that-run/">https://blog.atuin.sh/atuin-desktop-runbooks-that-run/</a>, See on <a href="https://news.ycombinator.com/item?id=43766200">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

    <article>

        <header>

                <a href="https://blog.atuin.sh/tag/news/">News</a>
            
                <p>Atuin Desktop looks like a doc, but runs like your terminal. Script blocks, embedded terminals, database clients and prometheus charts - all in one place.</p>

            <div>
                <p><a href="https://blog.atuin.sh/author/ellie/">
                                <img src="https://blog.atuin.sh/content/images/size/w160/2024/01/me2.jpg" alt="Ellie Huxtable">
                            </a>
                </p>
                
            </div>

            
        </header>

        <section>
            <figure data-kg-thumbnail="https://blog.atuin.sh/content/media/2025/04/atuin-demo-final_thumb.jpg" data-kg-custom-thumbnail="">
            <div>
                <video src="https://blog.atuin.sh/content/media/2025/04/atuin-demo-final.mp4" poster="https://img.spacergif.org/v1/1852x1600/0a/spacer.png" width="1852" height="1600" loop="" autoplay="" muted="" playsinline="" preload="metadata"></video>
                
                <div>
                        <p>
                        
                        <span>0:00</span></p><p>
                            /<span>0:27</span>
                        </p>
                        </div>
            </div>
            
        <img src="https://blog.atuin.sh/content/media/2025/04/atuin-demo-final_thumb.jpg"></figure><p>Most infrastructure is held together by five commands someone remembers when shit breaks. Docs are out of date, if they exist. The real answers? Buried in Slack threads, rotting in Notion, or trapped in someone's shell history.</p><p><a href="https://atuin.sh/?ref=blog.atuin.sh" rel="noreferrer">Atuin CLI</a> fixed part of this, with synced, searchable shell history. But teams need more than history. They need workflows that don't live in someone's head (or their shell).</p><p>Set up. SSH in. Export some variables. Run some commands. Hope nothing breaks. Stuff we do every day, but still have to piece together from fragments of the past, or copy paste from some document somewhere.</p><p>That's why we built the next step.</p><h2 id="introducing-atuin-desktop"><strong>Introducing Atuin Desktop</strong></h2><blockquote>A local-first, executable runbook editor for real terminal workflows</blockquote><figure><div><p><img src="https://blog.atuin.sh/content/images/2025/04/CleanShot-2025-04-22-at-15.28.30.png" width="1581" height="1382" loading="lazy" alt="" srcset="https://blog.atuin.sh/content/images/size/w600/2025/04/CleanShot-2025-04-22-at-15.28.30.png 600w, https://blog.atuin.sh/content/images/size/w1000/2025/04/CleanShot-2025-04-22-at-15.28.30.png 1000w, https://blog.atuin.sh/content/images/2025/04/CleanShot-2025-04-22-at-15.28.30.png 1581w" sizes="(min-width: 720px) 720px"></p><p><img src="https://blog.atuin.sh/content/images/2025/04/CleanShot-2025-04-22-at-15.27.40.png" width="1643" height="1386" loading="lazy" alt="" srcset="https://blog.atuin.sh/content/images/size/w600/2025/04/CleanShot-2025-04-22-at-15.27.40.png 600w, https://blog.atuin.sh/content/images/size/w1000/2025/04/CleanShot-2025-04-22-at-15.27.40.png 1000w, https://blog.atuin.sh/content/images/size/w1600/2025/04/CleanShot-2025-04-22-at-15.27.40.png 1600w, https://blog.atuin.sh/content/images/2025/04/CleanShot-2025-04-22-at-15.27.40.png 1643w" sizes="(min-width: 720px) 720px"></p></div></figure><p>Built to make workflows repeatable, shareable, and reliable.</p><p>Runbooks should run. Workflows shouldn't live in someone's head. Docs shouldn't rot the moment you write them.</p><p>Atuin Desktop looks like a doc, but runs like your terminal. Script blocks, embedded terminals, database clients and prometheus charts - all in one place.</p><ul><li><strong>Kill context switching: </strong>chain shell commands, database queries and HTTP requests</li><li><strong>Docs that don't rot: </strong>execute directly + stay relevant</li><li><strong>Reusable automation: </strong>dynamic runbooks with Jinja-style templating</li><li><strong>Instant recall: </strong>autocomplete from your real shell history</li><li><strong>Local-first, CRDT-powered: </strong>if it runs in your terminal, it runs in a runbook</li><li><strong>Sync and share with Atuin Hub: </strong>up to date, across devices and teams</li></ul><h3 id="how-we-use-it-today">How we use it today</h3><p>We‚Äôre already running real-world workflows in Atuin Desktop:</p><ul><li>Releasing Atuin CLI (no more checklist hell)</li><li>Migrating infra safely between environments</li><li>Spinning up staging or prod with confidence</li><li>Managing and collaborating on live database queries</li></ul><p>This is how we ship, manage infra, and collaborate.</p><figure><div><p><img src="https://blog.atuin.sh/content/images/2025/04/CleanShot-2025-04-22-at-00.34.29@2x-1.png" width="1693" height="1554" loading="lazy" alt="" srcset="https://blog.atuin.sh/content/images/size/w600/2025/04/CleanShot-2025-04-22-at-00.34.29@2x-1.png 600w, https://blog.atuin.sh/content/images/size/w1000/2025/04/CleanShot-2025-04-22-at-00.34.29@2x-1.png 1000w, https://blog.atuin.sh/content/images/size/w1600/2025/04/CleanShot-2025-04-22-at-00.34.29@2x-1.png 1600w, https://blog.atuin.sh/content/images/2025/04/CleanShot-2025-04-22-at-00.34.29@2x-1.png 1693w" sizes="(min-width: 720px) 720px"></p><p><img src="https://blog.atuin.sh/content/images/2025/04/CleanShot-2025-04-22-at-00.35.39@2x.png" width="1688" height="1494" loading="lazy" alt="" srcset="https://blog.atuin.sh/content/images/size/w600/2025/04/CleanShot-2025-04-22-at-00.35.39@2x.png 600w, https://blog.atuin.sh/content/images/size/w1000/2025/04/CleanShot-2025-04-22-at-00.35.39@2x.png 1000w, https://blog.atuin.sh/content/images/size/w1600/2025/04/CleanShot-2025-04-22-at-00.35.39@2x.png 1600w, https://blog.atuin.sh/content/images/2025/04/CleanShot-2025-04-22-at-00.35.39@2x.png 1688w" sizes="(min-width: 720px) 720px"></p></div></figure><h3 id="what%E2%80%99s-next">What‚Äôs next</h3><ul><li>Team accounts: true collaborative ops</li><li>Generate runbooks from your shell history. Workflows that write themselves</li></ul><h3 id="get-early-access">Get early access</h3><p>We're rolling out Atuin Desktop now. If you're done copy-pasting from Notion and Slack, or spelunking through shell history, join the <a href="https://wt.ls/atuin?ref=blog.atuin.sh" rel="noreferrer">early access list</a>!</p>
        </section>

    </article>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How long does it take to create a new habit? (2015) (187 pts)]]></title>
            <link>https://thelogicaloptimist.com/index.php/2015/10/25/the-21-day-myth-create-new-habit/</link>
            <guid>43765084</guid>
            <pubDate>Tue, 22 Apr 2025 18:47:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thelogicaloptimist.com/index.php/2015/10/25/the-21-day-myth-create-new-habit/">https://thelogicaloptimist.com/index.php/2015/10/25/the-21-day-myth-create-new-habit/</a>, See on <a href="https://news.ycombinator.com/item?id=43765084">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
    	 
        
			<main id="main" role="main">

			
	<article id="post-2478"> 
	
		<div>
		<h3><a href="https://thelogicaloptimist.com/wp-content/uploads/2015/10/myth.jpg"><img fetchpriority="high" decoding="async" src="https://thelogicaloptimist.com/wp-content/uploads/2015/10/myth.jpg" alt="21 day myth" width="954" height="584" srcset="https://thelogicaloptimist.com/wp-content/uploads/2015/10/myth.jpg 954w, https://thelogicaloptimist.com/wp-content/uploads/2015/10/myth-300x184.jpg 300w" sizes="(max-width: 954px) 100vw, 954px"></a></h3>
<h3>In 1960, Dr. Maxwell Maltz published his bestseller book ‚ÄúPsycho-Cybernetics‚Äù in which he defines happiness as a habit and claims that ‚Äúit usually requires a minimum of about 21 days‚Äù to form a new habit. The 21 day idea caught on, because 3 weeks is neither too short (that it‚Äôs unbelievable), nor too long (that it‚Äôs discouraging).</h3>
<p><a href="https://thelogicaloptimist.com/wp-content/uploads/2015/10/21-day-1.jpg"><img decoding="async" src="https://thelogicaloptimist.com/wp-content/uploads/2015/10/21-day-1.jpg" alt="21 day myth" width="179" height="267"></a>However, Dr. Maltz was simply making an observation as a plastic surgeon. He was not declaring a statement of fact that is based on research. Also, the phrase ‚Äúit usually requires a minimum of about 21 days‚Äù was propagated without the words ‚Äúusually‚Äù, ‚Äúminimum‚Äù and ‚Äúabout‚Äù.</p>
<p><strong>So how long does it really take to create a new habit?</strong></p>
<p>Published in the October 2010 issue of the European Journal of Social Psychology, the research article ‚ÄúHow habits are formed: Modelling habit formation in the real world‚Äù (Phillippa Lally, et al.) attempted to answer that question. The study examined the habits of 96 people over a period of 12 week, and the data was then analyzed to determine how long it took each person to go from starting a new behavior to automatically doing it. The answer? Not 21 days.</p>
<p>According to Lally‚Äôs study, implementing meaningful change in our lives requires 2 to 8 months. The variation is due to the type of habit in question, the person developing it and his/her circumstances. On average it takes 66 days, not just 21. However here‚Äôs the good news:</p>
<ol>
<li><a href="https://thelogicaloptimist.com/wp-content/uploads/2015/10/21-day-2.jpg"><img loading="lazy" decoding="async" src="https://thelogicaloptimist.com/wp-content/uploads/2015/10/21-day-2.jpg" alt="21 day myth" width="337" height="222"></a>The study showed that if you miss an opportunity to perform an action that‚Äôs helping you build a habit, there is no significant impact on the habit formation process. In other words, if you fall off the wagon, it doesn‚Äôt mean you‚Äôve failed ‚Ä¶ you can go back and continue trying.</li>
<li>Initially, it takes longer to form a habit and persevere it, but over time, it starts to happen more easily and it requires less effort.</li>
</ol>
<p><strong>So what does this all mean?&nbsp; Well, a couple of things:</strong></p>
<ol>
<li>If you‚Äôre trying a new diet, attempting to quit smoking or changing any daily routine, don‚Äôt expect new habits to be created in a week, or two or even three.&nbsp; Research suggests that the process requires 66 days (on average) and up to 8 months.</li>
<li>It also means, when trying to make lasting change in your life, be cautious of general claims such as the 21 day rule. False ideas become accepted as fact if repeated too often, but that doesn‚Äôt mean they‚Äôre true. So, do your research in order to set realistic expectations and avoid future disappointment.</li>
</ol>
<p><strong><a href="https://thelogicaloptimist.com/wp-content/uploads/2015/10/21-day-3.jpg"><img loading="lazy" decoding="async" src="https://thelogicaloptimist.com/wp-content/uploads/2015/10/21-day-3.jpg" alt="21 day myth" width="326" height="196" srcset="https://thelogicaloptimist.com/wp-content/uploads/2015/10/21-day-3.jpg 600w, https://thelogicaloptimist.com/wp-content/uploads/2015/10/21-day-3-300x180.jpg 300w" sizes="auto, (max-width: 326px) 100vw, 326px"></a>Change is what you make it out to be</strong></p>
<p>Personally, I would not concern myself with the 21 day rule or even the Lally study. Throughout my years of research on personal transformation, I realized that generalizations are often deceiving.&nbsp; At the end of the day, it doesn‚Äôt really matter if it takes you 21, 66 or even a thousand days to create a new habit. What matters is your dedication to making that change happen. Plus, we‚Äôre all different and our circumstances vary, so there can never be one timeline that works for every person, even if it‚Äôs only a guideline.</p>
<p>I tell my clients: irrespective of how chaotic and difficult life might be, you are the master of your own behaviours. You dictate the when, where and how your habits are created, so focus on the ‚Äúwhy‚Äù and everything else will fall into place. New habits shouldn‚Äôt have timelines ‚Ä¶ none whatsoever.</p>

				</div><!-- .entry-content -->

		<!-- .entry-footer -->  
	</article><!-- #post-## -->
  

				<!-- .navigation -->
	
			
		
			</main><!-- #main -->
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sapphire: Rust based package manager for macOS (Homebrew replacement) (414 pts)]]></title>
            <link>https://github.com/alexykn/sapphire</link>
            <guid>43765011</guid>
            <pubDate>Tue, 22 Apr 2025 18:39:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/alexykn/sapphire">https://github.com/alexykn/sapphire</a>, See on <a href="https://news.ycombinator.com/item?id=43765011">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Sapphire</h2><a id="user-content-sapphire" aria-label="Permalink: Sapphire" href="#sapphire"></a></p>
<blockquote>
<p dir="auto"><strong>WARNING: ALPHA SOFTWARE</strong> &gt; Sapphire is experimental, under heavy development, and may be unstable. Use at your own risk!</p>
<p dir="auto">Uninstalling a cask with brew then reinstalling it with Sapphire will have it installed with slightly different paths, your user settings etc. will not be migrated automatically.</p>
</blockquote>
<p dir="auto">Sapphire is a next‚Äëgeneration, Rust‚Äëpowered package manager inspired by Homebrew. It installs and manages:</p>
<ul dir="auto">
<li><strong>Formulae:</strong> command‚Äëline tools, libraries, and languages</li>
<li><strong>Casks:</strong> desktop applications and related artifacts on macOS</li>
</ul>
<blockquote>
<p dir="auto"><em>ARM only for now, might add x86 support eventually</em></p>
</blockquote>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">‚öôÔ∏è Project Structure</h2><a id="user-content-Ô∏è-project-structure" aria-label="Permalink: ‚öôÔ∏è Project Structure" href="#Ô∏è-project-structure"></a></p>
<ul dir="auto">
<li>
<p dir="auto"><strong>sapphire‚Äëcore</strong> Core library: fetching, dependency resolution, archive extraction, artifact handling (apps, binaries, pkg installers, fonts, plugins, zap/preflight/uninstall stanzas, etc.)</p>
</li>
<li>
<p dir="auto"><strong>sapphire‚Äëcli</strong> Command‚Äëline interface: <code>sapphire</code> executable wrapping the core library.</p>
</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">üöß Current Status</h2><a id="user-content--current-status" aria-label="Permalink: üöß Current Status" href="#-current-status"></a></p>
<ul dir="auto">
<li>Bottle installation and uninstallation</li>
<li>Cask installation and uninstallation</li>
<li>Parallel downloads and installs for speed</li>
<li>Automatic dependency resolution and installation</li>
<li>Building Formulae from source (very early impl)</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">üöÄ Roadmap</h2><a id="user-content--roadmap" aria-label="Permalink: üöÄ Roadmap" href="#-roadmap"></a></p>
<ol dir="auto">
<li><strong>Upgrade</strong> command to update installed packages</li>
<li><strong>Cleanup</strong> old downloads, versions, caches</li>
<li><strong>Reinstall</strong> command for quick re‚Äëpours</li>
<li><strong>Prefix isolation:</strong> support <code>/opt/sapphire</code> as standalone layout</li>
<li><strong><code>sapphire init</code></strong> helper to bootstrap your environment</li>
<li><strong>Ongoing</strong> Bug fixes and stability improvements</li>
</ol>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">üì¶ Usage</h2><a id="user-content--usage" aria-label="Permalink: üì¶ Usage" href="#-usage"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Print help
sapphire --help

# Update metadata
sapphire update

# Search for packages
sapphire search <formula/cask>

# Get package info
sapphire info <formula/cask>

# Install bottles or casks
sapphire install <formula/cask>

# Build and install a formula from source
sapphire install --build-from-source <formula>

# Uninstall
sapphire uninstall <formula/cask>

# (coming soon)
sapphire upgrade [--all] <name>
sapphire cleanup
sapphire init"><pre><span><span>#</span> Print help</span>
sapphire --help

<span><span>#</span> Update metadata</span>
sapphire update

<span><span>#</span> Search for packages</span>
sapphire search <span>&lt;</span>formula/cask<span>&gt;</span>

<span><span>#</span> Get package info</span>
sapphire info <span>&lt;</span>formula/cask<span>&gt;</span>

<span><span>#</span> Install bottles or casks</span>
sapphire install <span>&lt;</span>formula/cask<span>&gt;</span>

<span><span>#</span> Build and install a formula from source</span>
sapphire install --build-from-source <span>&lt;</span>formula<span>&gt;</span>

<span><span>#</span> Uninstall</span>
sapphire uninstall <span>&lt;</span>formula/cask<span>&gt;</span>

<span><span>#</span> (coming soon)</span>
sapphire upgrade [--all] <span>&lt;</span>name<span>&gt;</span>
sapphire cleanup
sapphire init</pre></div>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">üèóÔ∏è Building from Source</h2><a id="user-content-Ô∏è-building-from-source" aria-label="Permalink: üèóÔ∏è Building from Source" href="#Ô∏è-building-from-source"></a></p>
<p dir="auto"><strong>Prerequisites:</strong> Rust toolchain (stable).</p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone <repo-url>
cd sapphire
cargo build --release"><pre>git clone <span>&lt;</span>repo-url<span>&gt;</span>
<span>cd</span> sapphire
cargo build --release</pre></div>
<p dir="auto">The <code>sapphire</code> binary will be at <code>target/release/sapphire</code>. Add it to your <code>PATH</code>.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">ü§ù Contributing</h2><a id="user-content--contributing" aria-label="Permalink: ü§ù Contributing" href="#-contributing"></a></p>
<p dir="auto">Sapphire lives and grows by your feedback and code! We‚Äôre particularly looking for:</p>
<ul dir="auto">
<li>Testing and bug reports for Cask &amp; Bottle installation + <code>--build-from-source</code></li>
<li>Test coverage for core and cask modules</li>
<li>CLI UI/UX improvements</li>
<li>See <a href="https://github.com/alexykn/sapphire/blob/main/CONTRIBUTING.md">CONTRIBUTING.md</a></li>
</ul>
<p dir="auto">Feel free to open issues or PRs. Every contribution helps!</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">üìÑ License</h2><a id="user-content--license" aria-label="Permalink: üìÑ License" href="#-license"></a></p>
<ul dir="auto">
<li><strong>Sapphire:</strong> BSD‚Äë3‚ÄëClause - see <a href="https://github.com/alexykn/sapphire/blob/main/LICENSE.md">LICENSE.md</a></li>
<li>Inspired by Homebrew BSD‚Äë2‚ÄëClause ‚Äî see <a href="https://www.google.com/search?q=NOTICE.md" rel="nofollow">NOTICE.md</a></li>
</ul>
<hr>
<blockquote>
<p dir="auto"><em>Alpha software. No guarantees. Use responsibly.</em></p>
</blockquote>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ping, You've Got Whale: AI detection system alerts ships of whales in their path (164 pts)]]></title>
            <link>https://www.biographic.com/ping-youve-got-whale/</link>
            <guid>43764915</guid>
            <pubDate>Tue, 22 Apr 2025 18:28:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.biographic.com/ping-youve-got-whale/">https://www.biographic.com/ping-youve-got-whale/</a>, See on <a href="https://news.ycombinator.com/item?id=43764915">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><span>From inside a package about the size of a shoebox mounted to a ship‚Äôs deck, a set of highly stabilized heat-sensing cameras scans the ocean‚Äôs surface. Suddenly, against the misty waves far in the distance, they spot a small puff of white. And another. Now the algorithm catches on. A machine learning system snags the footage and runs it through a neural network trained on millions of similar snippets.&nbsp;&nbsp;</span></p><p><span>Comparing what it‚Äôs detecting against its training data, the artificial intelligence model makes a call: that small burst of heat in the distance is a spout of whale breath. The computer system pings a remote expert on standby who double-checks the machine‚Äôs work. Within a minute, the expert forwards the alert back to the ship, catching the captain‚Äôs attention with enough time for the crew to change course and, hopefully, avoid the whale becoming maritime roadkill.</span></p><p><span>This is WhaleSpotter, an artificial intelligence-powered whale detection system that aims to transmit real-time alerts to ships to prevent them from colliding with whales‚Äîa threat that leads to the injury or death of <a href="https://www.washington.edu/news/2024/11/21/whale-ship-collisions/">thousands of whales each year</a>.</span></p></div><div><p><span><em>Video courtesy of WhaleSpotter</em></span></p></div><div><p><span>Led by Daniel Zitterbart, a biophysicist at Woods Hole Oceanographic Institution in Massachusetts, scientists have been testing this new AI-powered but human-verified whale detection system on ferries, research vessels, and cruise ships, and from land-based installations along the east and west coasts of North America, as well as in parts of the Southern Ocean. </span><span>&nbsp;</span></p><p><span>Since WhaleSpotter first got underway during research trials in 2019, its capabilities have grown tremendously. Across its more than two dozen ship- and land-based installations, the global WhaleSpotter network made more than 51,000 marine mammal detections in 2024, up from just 78 its first year. All of those detections were automatically sent to a remote data center in real time, but only a few ships have opted in to receiving the 24/7 alerts.</span></p><p><span>But those ships are modestly sized. And in the quest to save whales from deadly collisions, one of the greatest challenges is protecting them from some of the biggest‚Äîand most common‚Äîvessels at sea: container ships. </span><span>&nbsp;</span></p><p><span>Strikes from container ships, which are massive and hard to maneuver, are one of the leading causes of death for large whales, according to Zitterbart. Peering out from a cargo ship‚Äôs bridge high above the waves, especially at night or in fog, a captain may struggle to see a whale soon enough to shift the course of the vessel, which can easily be 250 meters (800 feet) long. That‚Äôs why Zitterbart‚Äôs team recently began a research partnership with the Hawai‚Äòi-based Matson Navigation Company to start adapting WhaleSpotter‚Äôs technology for this key class of vessels.</span><span>&nbsp;</span></p><p><span>Tailoring WhaleSpotter to work on container ships has required special considerations. Slower and harder to turn, container ships need more advance notice than other craft. However, container ships also tower over the ocean. Making use of the higher vantage point, Zitterbart and his team have been able to increase the distance at which their system can reliably spot whales. Testing longer-range cameras and adjusting the stabilization system on Matson‚Äôs container ships plying routes along Hawai‚Äòi, Alaska, and the U.S. west coast, the team found that the technology can now reliably spot marine mammals up to 6 kilometers (nearly 4 miles) away. Matson‚Äôs ships are not yet receiving real-time alerts through WhaleSpotter‚Äôs systems, but Zitterbart and his colleagues continue fine-tuning their detection system to get it ready for prime time.</span><span>&nbsp;</span></p><p><span>‚ÄúI think we‚Äôre almost there,‚Äù says Zitterbart. </span><span>&nbsp;</span></p><p><span>‚ÄúWe are excited by the early results,‚Äù adds Keoni Wagner, a Matson spokesperson. ‚ÄúAssuming the system achieves current expectations, we plan to expand use to our entire domestic fleet.‚Äù</span></p><p><span>From the perspective of John Calambokidis, a marine biologist with the nonprofit Cascadia Research Collective, there are, broadly, three strategies for reducing incidences of ships hitting whales: shift vessels‚Äô routes, slow them down, and use real-time detection to avoid whales. Calambokidis says the third strategy has not received nearly enough attention, and that Zitterbart‚Äôs approach provides an important contribution. ‚ÄúThat‚Äôs no simple feat,‚Äù he says of the expert-reviewed AI approach. He adds that the reliance on thermal cameras‚Äîwhich detect heat rather than light‚Äîmakes the system particularly useful at night, when <a href="https://www.frontiersin.org/journals/marine-science/articles/10.3389/fmars.2019.00543/full">many whale species are more likely</a> to be near the surface than during the day. </span><span>&nbsp;</span></p><p><span>WhaleSpotter, which has just spun off into <a href="https://whalespotter.ai/">a for-profit company</a>, isn‚Äôt the only AI-enhanced thermal camera system able to detect whales. Awarion and SEA.AI can, too. But Zitterbart contends that what sets his technology apart is that WhaleSpotter is purpose-built for marine conservation. As such, he‚Äôs adamant about having humans validate the machine‚Äôs work. ‚ÄúMany people said, ‚ÄòIsn‚Äôt that overkill? Can‚Äôt we get rid of that?‚Äô‚Äù Zitterbart says. </span></p><p><span>While the AI system is designed to filter out false alarms‚Äîsuch as signals from birds, breaking waves, and boats‚ÄîZitterbart‚Äôs aim is for ship captains to receive zero false alerts, so that every ping truly requires their attention. Removing human oversight risks flooding ship captains with false reports, which could lead to frustration and alert fatigue. At risk is the very survival of species like the North Atlantic right whale, an endangered animal that has suffered heavily from ship strikes and has only 370 individuals left: ‚ÄúWe cannot afford to ever miss an animal,‚Äù he says.</span></p><p><span>Calambokidis emphasizes that preventing collisions between whales and ships requires using multiple, complementary strategies. While Zitterbart readily agrees that WhaleSpotter is no silver bullet, he says it‚Äôs particularly suited to certain goals‚Äîlike limiting the deaths of endangered species. </span></p><p><span>Ultimately, he wants more ships to carry WhaleSpotter cameras. ‚ÄúThe true power will come to life once there are hundreds of vessels using this tech,‚Äù he says. ‚ÄúThen the collected information can be shared in real time with vessels not using the technology, too.‚Äù </span></p><p>Yet as he works to grow WhaleSpotter‚Äôs reach, Zitterbart‚Äôs focus remains on the animals: ‚ÄúEvery single whale that is not struck because of the technology is a success.‚Äù</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The complex origin story of domestic cats (129 pts)]]></title>
            <link>https://phys.org/news/2025-04-complex-story-domestic-cats-tunisia.html</link>
            <guid>43764771</guid>
            <pubDate>Tue, 22 Apr 2025 18:07:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://phys.org/news/2025-04-complex-story-domestic-cats-tunisia.html">https://phys.org/news/2025-04-complex-story-domestic-cats-tunisia.html</a>, See on <a href="https://news.ycombinator.com/item?id=43764771">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
										
<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2025/domestic-cat.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2025/domestic-cat.jpg" data-sub-html="Credit: Pixabay/CC0 Public Domain">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2025/domestic-cat.jpg" alt="domestic cat" title="Credit: Pixabay/CC0 Public Domain" width="800" height="530">
             <figcaption>
                Credit: Pixabay/CC0 Public Domain
            </figcaption>        </figure>
    </div><p>Researchers looking into the origin of domestic cats have long considered that cats likely accompanied early farmers during the Neolithic, spreading through Europe alongside the adoption of agriculture.</p>


										      
																																	<p>Two new large-scale investigations, one led by the University of Rome Tor Vergata in collaboration with 42 institutions and another led by the University of Exeter with contributors from 37 institutions, reveal a more complex history than previously imagined. Both point to Tunisia as the likely origin of the domestic cat.</p>
<p>Both studies, which merge extensive genetic data with <a href="https://phys.org/tags/archaeological+evidence/" rel="tag">archaeological evidence</a>, challenge the timeline of European <a href="https://phys.org/tags/domestic+cats/" rel="tag">domestic cats</a>, and hint at cultural and religious factors that may have been pivotal in driving feline domestication and translocation.</p>
<p>Cats have long posed a puzzle for archaeologists. Their skeletal features and commonly used mitochondrial DNA markers can overlap significantly with those of their wild counterparts.</p>
<p>Researchers from the University of Rome Tor Vergata‚Äìled team conducted paleogenomic analyses of ancient cat specimens from 97 <a href="https://phys.org/tags/archaeological+sites/" rel="tag">archaeological sites</a> in Europe and Anatolia, as well as museum samples from Italy, Bulgaria, and North Africa.</p>
<p>In their study, "The dispersal of domestic cats from Northern Africa and their introduction to Europe over the last two millennia," <a href="http://biorxiv.org/lookup/doi/10.1101/2025.03.28.645893" target="_blank">published</a> on the <i>bioRxiv</i> preprint server , 70 low-coverage ancient genomes, 17 additional modern and museum genomes, and 37 radiocarbon-dated cat remains were analyzed.</p>

																																						
																																			<p>Results from these nuclear DNA analyses revealed that felines with domestic ancestry only appeared in Europe from around the 1st century CE onward, thousands of years later than traditional narratives suggest.</p>
<p>The Tor Vergata team also identified two introductory waves. An earlier one brought wildcats from Northwest Africa to Sardinia by the 2nd century BCE, giving rise to the island's present-day wild population. A subsequent wave, during the Roman Imperial period, introduced cats genetically similar to modern domestic lines across Europe, pointing towards Tunisia as a key center of early domestication.</p>
<p>In the University of Exeter collaboration study, "Redefining the timing and circumstances of cat domestication, their dispersal trajectories, and the extirpation of European wildcats," also <a href="https://www.biorxiv.org/content/10.1101/2025.03.28.645877v1" target="_blank">published</a> as a preprint on <i>bioRxiv</i>, a slightly different timeline is presented.</p>
<p>By analyzing 2,416 archaeological felid bones across 206 sites and cross-referencing morphological data with genetic findings, they concluded that domestic cats had already appeared in Europe by the early first millennium BCE, before the height of Roman expansion.</p>
<p>Distinct mitochondrial haplogroups were discovered in Britain by the 4th to 2nd centuries BCE, suggesting Iron Age contact, with subsequent waves of introduction occurring during the Roman, Late Antique, and Viking periods. Tunisia is also suggested as the origin point of domestic cats.</p>

																									
																																			<p>Whereas earlier models framed domestication as a primarily commensal relationship, cats as rodent control around <a href="https://phys.org/tags/human+populations/" rel="tag">human populations</a> and grain stores, religious and cultural dimensions emerge from both stories as a driving human interest in cats.</p>
<p>In Egypt, cats were venerated alongside deities such as Bastet, which may have fostered their mummification and movement via religious networks. Cats became symbols of Artemis and Diana in Greek/Roman <a href="https://phys.org/tags/religious+practice/" rel="tag">religious practice</a>, mirroring Bastet's significance in Egypt.</p>
<p>Norse mythology similarly featured cats linked to the goddess Freyja, implying that spiritual and ritual beliefs helped propel cats across wider geographies.</p>
<p>Both studies document admixture and competition between arriving domestic cats and Europe's native wildcats. Evidence points to a decline in wildcat populations beginning in the first millennium CE, potentially related to resource overlap, disease, and hybridization events.</p>
<p>Although the two investigations differ in their proposed arrival dates and dispersal routes for domestic cats, they share a key conclusion that the domestication and spread of cats in Europe happened more recently, and under more culturally driven circumstances, than once thought.</p>
<p>Findings dismantle the considerations that cats were ubiquitous in Neolithic settlements and underscore how previous reliance on mitochondrial markers alone can obscure the full picture of feline domestication.</p>
<p>Taken together, these studies significantly alter our understanding of one of humanity's most familiar companions. Rather than silently trailing behind <a href="https://phys.org/tags/early+farmers/" rel="tag">early farmers</a>, slinking ever closer to human activity and community, cats likely moved into Europe in multiple waves post-domestication from North Africa, propelled by human cultural practices, trade networks, and religious reverence.</p>

																																																					
																				<div>
																						<p><strong>More information:</strong>
												M. De Martino et al, The dispersal of domestic cats from Northern Africa and their introduction to Europe over the last two millennia, <i>biorxiv</i> (2025). <a data-doi="1" href="https://dx.doi.org/10.1101/2025.03.28.645893" target="_blank">DOI: 10.1101/2025.03.28.645893</a>
</p><p>Sean Doherty et al, Redefining the timing and circumstances of cat domestication, their dispersal trajectories, and the extirpation of European wildcats, <i>biorxiv</i> (2025). <a data-doi="1" href="https://dx.doi.org/10.1101/2025.03.28.645877" target="_blank">DOI: 10.1101/2025.03.28.645877</a></p>

																						
																						
																					</div>
                               											
																															 <p>
												  ¬© 2025 Science X Network
											 </p>
										                                        
										<!-- print only -->
										<div>
											 <p><strong>Citation</strong>:
												The complex origin story of domestic cats: Research points to Tunisia (2025, April 16)
												retrieved 23 April 2025
												from https://phys.org/news/2025-04-complex-story-domestic-cats-tunisia.html
											 </p>
											 <p>
											 This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no
											 part may be reproduced without the written permission. The content is provided for information purposes only.
											 </p>
										</div>
                                        
									</div></div>]]></description>
        </item>
    </channel>
</rss>