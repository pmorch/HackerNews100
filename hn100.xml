<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 05 Apr 2025 23:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Llama4 (744 pts)]]></title>
            <link>https://www.llama.com/llama4/</link>
            <guid>43595585</guid>
            <pubDate>Sat, 05 Apr 2025 18:33:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.llama.com/llama4/">https://www.llama.com/llama4/</a>, See on <a href="https://news.ycombinator.com/item?id=43595585">Hacker News</a></p>
Couldn't get https://www.llama.com/llama4/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[What If We Made Advertising Illegal? (623 pts)]]></title>
            <link>https://simone.org/advertising/</link>
            <guid>43595269</guid>
            <pubDate>Sat, 05 Apr 2025 17:57:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://simone.org/advertising/">https://simone.org/advertising/</a>, See on <a href="https://news.ycombinator.com/item?id=43595269">Hacker News</a></p>
Couldn't get https://simone.org/advertising/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I built a word game. My mom thinks it's great. What do you think? (247 pts)]]></title>
            <link>https://www.whatsit.today/</link>
            <guid>43593789</guid>
            <pubDate>Sat, 05 Apr 2025 14:26:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.whatsit.today/">https://www.whatsit.today/</a>, See on <a href="https://news.ycombinator.com/item?id=43593789">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Loading daily challenge...</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Vision for WebAssembly Support in Swift (161 pts)]]></title>
            <link>https://forums.swift.org/t/pitch-a-vision-for-webassembly-support-in-swift/79060</link>
            <guid>43593596</guid>
            <pubDate>Sat, 05 Apr 2025 13:58:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://forums.swift.org/t/pitch-a-vision-for-webassembly-support-in-swift/79060">https://forums.swift.org/t/pitch-a-vision-for-webassembly-support-in-swift/79060</a>, See on <a href="https://news.ycombinator.com/item?id=43593596">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text">
              <p>As WebAssembly support has been developed by the Swift community and significantly improved over the years, I would like to put up a pitch for a vision describing WebAssembly support in Swift. Your feedback would be highly appreciated! Full vision text is included below, while <a href="https://github.com/swiftlang/swift-evolution/pull/2590">the corresponding PR is also available on GitHub</a>.</p>
<h2><a name="p-362448-introduction-1" href="#p-362448-introduction-1"></a>Introduction</h2>
<p>WebAssembly (abbreviated <a href="https://webassembly.github.io/spec/core/intro/introduction.html#wasm">Wasm</a>) is a virtual machine instruction set focused on portability, security, and high performance. It is vendor-neutral, designed and developed by <a href="https://w3.org/">W3C</a>. An implementation of a WebAssembly virtual machine is usually called a <strong>WebAssembly runtime</strong>.</p>
<p>One prominent spec-compliant implementation of a Wasm runtime in Swift is <a href="https://github.com/swiftwasm/WasmKit">WasmKit</a>. It is available as a Swift package, supports multiple host platforms, and has a simple API for interaction with guest Wasm modules.</p>
<p>An application compiled to a Wasm module can run on any platform that has a Wasm runtime available. Despite its origins in the browser, it is a general-purpose technology that has use cases in client-side and server-side applications and services. WebAssembly support in Swift makes the language more appealing in those settings, and also brings it to the browser where it previously wasn't available at all<sup><a href="#footnote-362448-1" id="footnote-ref-362448-1">[1]</a></sup>. It facilitates a broader adoption of Swift in more environments and contexts.</p>
<p>The WebAssembly instruction set has useful properties from a security perspective, as it has no interrupts or peripheral access instructions. Access to the underlying system is always done by calling explicitly imported functions, implementations for which are provided by an imported WebAssembly module or a WebAssembly runtime itself. The runtime has full control over interactions of the virtual machine with the outside world.</p>
<p>WebAssembly code and data live in completely separate address spaces, with all executable code in a given module loaded and validated by the runtime upfront. Combined with the lack of "jump to address" and a limited set of control flow instructions that require explicit labels in the same function body, this makes a certain class of attacks impossible to execute in a correctly implemented spec-compliant WebAssembly runtime.</p>
<h3><a name="p-362448-webassembly-system-interface-and-the-component-model-2" href="#p-362448-webassembly-system-interface-and-the-component-model-2"></a>WebAssembly System Interface and the Component Model</h3>
<p>The WebAssembly virtual machine has no in-built support for I/O; instead, a Wasm module's access to I/O is dependent entirely upon the runtime that executes it.</p>
<p>A standardized set of APIs implemented by a Wasm runtime for interaction with the host operating system is called <a href="https://wasi.dev/">WebAssembly System Interface (WASI)</a>. <a href="https://github.com/WebAssembly/wasi-libc">WASI libc</a> is a layer on top of WASI that Swift apps compiled to Wasm can already use thanks to C interop. The current implementation of Swift stdlib and runtime for <code>wasm32-unknown-wasi</code> triple is based on this C library. It is important for WASI support in Swift to be as complete as possible to ensure portability of Swift code in the broader Wasm ecosystem.</p>
<p>In the last few years, the W3C WebAssembly Working Group considered multiple proposals for improving the WebAssembly <a href="https://github.com/webassembly/interface-types">type system</a> and <a href="https://github.com/webassembly/module-linking">module linking</a>. These were later subsumed into a combined <a href="https://component-model.bytecodealliance.org/">Component Model</a> proposal thanks to the ongoing work on <a href="https://github.com/WebAssembly/WASI/blob/main/wasip2/README.md">WASI Preview 2</a>, which served as playground for the new design.</p>
<p>The Component Model defines these core concepts:</p>
<ul>
<li>
<p>A <strong>component</strong> is a composable container for one or more WebAssembly modules that have a predefined interface;</p>
</li>
<li>
<p><strong>WebAssembly Interface Types (WIT) language</strong> allows defining contracts between components;</p>
</li>
<li>
<p><strong>Canonical ABI</strong> is an ABI for types defined by WIT and used by component interfaces in the Component Model.</p>
</li>
</ul>
<p>Preliminary support for WIT has been implemented in <a href="https://github.com/swiftwasm/WasmKit/blob/0.0.3/Sources/WITTool/WITTool.swift">the <code>wit-tool</code> subcommand</a> of the WasmKit CLI. Users of this tool can generate <code>.wit</code> files from Swift declarations, and vice versa: Swift bindings from <code>.wit</code> files.</p>
<h2><a name="p-362448-use-cases-3" href="#p-362448-use-cases-3"></a>Use Cases</h2>
<p>We can't anticipate every possible application Swift developers are going to create with Wasm, but we can provide a few examples of its possible adoption in the Swift toolchain itself. To quote <a href="https://www.swift.org/gsoc2024/#building-swift-macros-with-webassembly">a GSoC 2024 idea</a>:</p>
<blockquote>
<p>WebAssembly could provide a way to build Swift macros into binaries that can be distributed and run anywhere, eliminating the need to rebuild them continually.</p>
</blockquote>
<p>This can be applicable not only to Swift macros, but also for the evaluation of SwiftPM manifests and plugins.</p>
<p>In the context of Swift developer tools, arbitrary code execution during build time can be virtualized with Wasm. While Swift macros, SwiftPM manifests, and plugins are sandboxed on Darwin platforms, with Wasm we can provide stronger security guarantees on other platforms that have a compatible Wasm runtime available.</p>
<p>The WebAssembly instruction set is designed with performance in mind. A WebAssembly module can be JIT-compiled or compiled on a client machine to an optimized native binary ahead of time. With recently accepted proposals to the Wasm specification it now supports features such as SIMD, atomics, multi-threading, and more. A WebAssembly runtime can generate a restricted subset of native binary code that implements these features with little performance overhead.</p>
<p>Adoption of Wasm in developer tools does not imply unavoidable performance overhead. With security guarantees that virtualization brings, there's no longer a need to spawn a separate process for each Swift compiler and SwiftPM plugin/manifest invocation. Virtualized Wasm binaries can run in the host process of a Wasm runtime, removing the overhead of new process setup and IPC infrastructure.</p>
<h2><a name="p-362448-goals-4" href="#p-362448-goals-4"></a>Goals</h2>
<p>As of March 2024 all patches necessary for basic Wasm and WASI Preview 1 support have been merged to the Swift toolchain and core libraries. Based on this, we propose a high-level roadmap for WebAssembly support and adoption in the Swift ecosystem:</p>
<ol>
<li>
<p>Make it easier to evaluate and adopt Wasm with increased API coverage for this platform in the Swift core libraries. Main prerequisite for that is setting up CI jobs for those libraries that run tests for WASI and also Embedded Wasm, where possible. As a virtualized embeddable platform, not all system APIs are always available or easy to port to WASI. For example, multi-threading, file system access, networking and localization need special support in Wasm runtimes and a certain amount of consideration from a developer adopting these APIs.</p>
</li>
<li>
<p>Improve support for cross-compilation in Swift and SwiftPM. We can simplify versioning, installation, and overall management of Swift SDKs for cross-compilation in general, which is beneficial not only for WebAssembly, but for all platforms.</p>
</li>
<li>
<p>Continue work on Wasm Component Model support in Swift as the Component Model proposal is stabilized. Ensure that future versions of WASI are available to Swift developers targeting Wasm.</p>
</li>
<li>
<p>Make interoperability with Wasm components as smooth as C and C++ interop already is for Swift. With a formal specification for Canonical ABI progressing, this will become more achievable with time. This includes consuming components from, and building components with Swift.</p>
</li>
<li>
<p>Improve debugging experience of Swift code compiled to Wasm. While rudimentary support for debugging exists in some Wasm runtimes, we aim to improve it and, where possible, make it as good as debugging Swift code compiled to other platforms.</p>
</li>
</ol>
<h3><a name="p-362448-proposed-language-features-5" href="#p-362448-proposed-language-features-5"></a>Proposed Language Features</h3>
<p>In our work on Wasm support in Swift, we experimented with a few function attributes that could be considered as pitches and eventually Swift Evolution proposals, if the community is interested in their wider adoption. These attributes allow easier interoperation between Swift code and other Wasm modules linked with it by a Wasm runtime.</p>
<h2><a name="p-362448-platform-specific-considerations-6" href="#p-362448-platform-specific-considerations-6"></a>Platform-specific Considerations</h2>
<h3><a name="p-362448-debugging-7" href="#p-362448-debugging-7"></a>Debugging</h3>
<p>Debugging Wasm modules is challenging because Wasm does not expose ways to introspect and control the execution of a Wasm module instance, so a debugger cannot be built on top of Wasm itself. Special support from the Wasm execution engine is necessary for debugging.</p>
<p>The current state of debugging tools in the Wasm ecosystem is not as mature as other platforms, but there are two main directions:</p>
<ol>
<li>
<p><a href="https://github.com/llvm/llvm-project/pull/77949">LLDB debugger with Wasm runtime</a> supporting GDB Remote Serial Protocol;</p>
</li>
<li>
<p><a href="https://book.swiftwasm.org/getting-started/debugging.html#enhanced-dwarf-extension-for-swift">Wasm runtime with a built-in debugger</a>.</p>
</li>
</ol>
<p>The first approach provides an almost equivalent experience to existing debugging workflows on other platforms. It can utilize LLDB's Swift support, remote metadata inspection, and serialized Swift module information. However, since Wasm is a Harvard architecture and has no way to allocate executable memory space at runtime, implementing expression evaluation with JIT in user space is challenging. In other words, GDB stub in Wasm engines need tricky implementations or need to extend the GDB Remote Serial Protocol.</p>
<p>The second approach embeds the debugger within the Wasm engine. In scenarios where the Wasm engine is embedded as a guest in another host engine (e.g. within a Web Browser), this approach allows seamless debugging experiences with the host language by integrating with the host debugger. For example, in cases where JavaScript and Wasm call frames are interleaved, the debugger works well in both contexts without switching tools. Debugging tools like Chrome DevTools can use DWARF information embedded in Wasm file to provide debugging support. However, supporting Swift-specific metadata information and JIT-based expression evaluation will require integrating LLDB's Swift plugin with these debuggers in some way.</p>
<p>In summary, debugging in the browser and outside of the browser context are sufficiently different activities to require separate implementation approaches.</p>
<h3><a name="p-362448-multi-threading-and-concurrency-8" href="#p-362448-multi-threading-and-concurrency-8"></a>Multi-threading and Concurrency</h3>
<p>WebAssembly has <a href="https://github.com/WebAssembly/threads">atomic operations in the instruction set</a> (only sequential consistency is supported), but it does not have a built-in way to create threads. Instead, it relies on the host environment to provide multi-threading support. This means that multi-threading in Wasm is dependent on the Wasm runtime that executes a module. There are two proposals to standardize ways to create threads in Wasm:</p>
<p>(1) <a href="https://github.com/WebAssembly/wasi-threads">wasi-threads</a>, which is already supported by some toolchains, runtimes, and libraries but has been superseded;</p>
<p>(2) The new <a href="https://github.com/WebAssembly/shared-everything-threads">shared-everything-threads</a> proposal is still in the early stages, but is expected to be the future of multi-threading in Wasm.</p>
<p>Swift currently supports two threading models in Wasm: single-threaded (<code>wasm32-unknown-wasi</code>) and multi-threaded using wasi-threads (<code>wasm32-unknown-wasip1-threads</code>). Despite the latter supporting multi-threading, Swift Concurrency defaults to a cooperative single-threaded executor due to the lack of wasi-threads support in libdispatch. Preparing for the shared-everything-threads proposal is crucial to ensure that Swift Concurrency can adapt to future multi-threading standards in Wasm.</p>
<h3><a name="p-362448-h-64-bit-address-space-9" href="#p-362448-h-64-bit-address-space-9"></a>64-bit address space</h3>
<p>WebAssembly currently uses a 32-bit address space, but <a href="https://github.com/WebAssembly/memory64/">64-bit address space</a> proposal is already in the implementation phase.</p>
<p>Swift supports 64-bit pointers on other platforms where available, however WebAssembly is the first platform where relative reference from data to code is not allowed. Alternative solutions like image-base relative addressing or "small code model" for fitting 64-bit pointer in 32-bit are unavailable, at least for now. This means that we need cooperation from the WebAssembly toolchain side or different memory layout in Swift metadata to support 64-bit linear memory support in WebAssembly.</p>
<h3><a name="p-362448-shared-libraries-10" href="#p-362448-shared-libraries-10"></a>Shared libraries</h3>
<p>There are two approaches to using shared libraries in the WebAssembly ecosystem:</p>
<ol>
<li>
<p><a href="https://emscripten.org/docs/compiling/Dynamic-Linking.html">Emscripten-style dynamic linking</a></p>
</li>
<li>
<p><a href="https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md">Component Model-based "ahead-of-time" linking</a></p>
</li>
</ol>
<p>Emscripten-style dynamic linking is a traditional way to use shared libraries in WebAssembly, where the host environment provides non-standard dynamic loading capabilities.</p>
<p>The latter approach cannot fully replace the former, as it is unable to handle dynamic loading of shared libraries at runtime, but it is more portable way to distribute programs linked with shared libraries, as it does not require the host environment to provide any special capabilities except for Component Model support.</p>
<p>Support for shared libraries in Swift means ensuring that Swift programs can be compiled in position-independent code mode and linked with shared libraries by following the corresponding dynamic linking ABI.</p>
<hr>

<ol>
<li id="footnote-362448-1"><p>Browser-specific use cases remain to be addressed in a separate document. <a href="#footnote-ref-362448-1">↩︎</a></p>
</li>
</ol>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Earth's clouds are shrinking, boosting global warming (151 pts)]]></title>
            <link>https://www.science.org/content/article/earth-s-clouds-are-shrinking-boosting-global-warming</link>
            <guid>43592756</guid>
            <pubDate>Sat, 05 Apr 2025 12:08:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.science.org/content/article/earth-s-clouds-are-shrinking-boosting-global-warming">https://www.science.org/content/article/earth-s-clouds-are-shrinking-boosting-global-warming</a>, See on <a href="https://news.ycombinator.com/item?id=43592756">Hacker News</a></p>
Couldn't get https://www.science.org/content/article/earth-s-clouds-are-shrinking-boosting-global-warming: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Emulating an iPhone in QEMU (176 pts)]]></title>
            <link>https://eshard.com/posts/emulating-ios-14-with-qemu</link>
            <guid>43592409</guid>
            <pubDate>Sat, 05 Apr 2025 10:57:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eshard.com/posts/emulating-ios-14-with-qemu">https://eshard.com/posts/emulating-ios-14-with-qemu</a>, See on <a href="https://news.ycombinator.com/item?id=43592409">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2>Start of the journey</h2>
<p>We started our journey with iOS emulation by looking at existing open-source solutions. We had successfully run <a href="https://github.com/alephsecurity/xnu-qemu-arm64">alephsecurity/xnu-qemu-arm64</a> before, but the project being read-only was concerning.</p>
<p>Then we tried <a href="https://github.com/TrungNguyen1909/qemu-t8030">TrungNguyen1909/qemu-t8030</a> and it had quite a few interesting features:</p>
<ul>
<li>the ability to actually restore iOS (using a second "companion" QEMU for USB connectivity)</li>
<li>running iOS 14</li>
<li>a more recent version of QEMU</li>
<li>a nice wiki on how to bring up the emulator</li>
</ul>
<p>With that project, we quickly managed to get a shell and ssh by modifying <code>System/Library/xpc/launchd.plist</code> so it was a great starting point.</p>
<p><img src="https://cms.eshard.com/uploads/image_16_ff7341d07a.png" alt="image (16).png"></p>
<p>We set our long term objective on getting a functional iOS emulated, with UI and at least the ability to execute some apps.</p>
<p>The first thing that bothered us with the <code>t8030</code> project was the fact that they added code in QEMU itself to patch the xnu kernel. We knew we were going to probably need more patching and wanted a cleaner way to do this.
As we had some experience with a jailbroken real iPhone, we looked into using <a href="https://github.com/palera1n/PongoOS">Pongo</a> to apply checkra1n patches, as this would allow us to remove any patching done in QEMU.</p>
<p>In a jailbreaking scenario, after getting pwned by checkmate, PongoOS is injected in SRAM and the checkra1n-kpf module is sent through USB.
Rather than bothering with early USB we chose to increase the SRAM on our emulated phone, and use PongoOS with checkra1n’s KPF module.</p>
<p>Executing PongoOS, first, was not without its issues, any boot code usually done by the bootrom or iboot would be missing, such as setting up the FPU before performing any double/float instructions. Skimming through <a href="https://developer.arm.com/documentation/dai0527/latest/">ARM documentation (section 5.4)</a> and a some <a href="https://github.com/citruz/pongoOS-QEMU/commit/033413bfaa6ebc4e1b8680b7548a3505fabe808b#diff-94255394208544c1bce0ef3fc2b955262dc6f5e8ed391005a521f28a0440a042L109-R117">Googling</a> helped.</p>
<p>Features introduced with A13 and later devices, not supported by Pongo, broke the pattern-matching of some patches. For example Pointer Authentication (PAC) instructions added <code>autda</code> / <code>xpacd</code> and Apple used a different slide.</p>
<p>Example with the infamous <a href="https://theapplewiki.com/wiki/Tfp0_patch">task_for_pid (tfp0)</a></p>
<pre><p><code><span>% ipsw macho info kernelcache.release.iphone10b.decompressed
</span>000: LC_SEGMENT_64 sz=0x006d8000 off=0x00000000-0x006d8000 addr=0xfffffff007004000-0xfffffff0076dc000 r-x/r-x   __TEXT
<!-- -->
<!-- -->Previous version (iphone-X (14.0_18A373_GM))
<!-- --> - tfp0 address 0xfffffff0076e9e70
<!-- -->   0xfffffff0076e9e70 - 0ffffffff007004000 = 0x6e5e70
<!-- --> - binary
<!-- -->   % hexdump -s 0x6e5e70 -n 8 kernelcache.release.iphone10b.decompressed
<!-- -->   06e5e70 7f70 07ec fff0 0017
<!-- -->
<!-- --> 	Raw: 	0x0017_fff0_07ec_7f70
<!-- --> 	Ghidra:  0xffff_fff0_70ec_7f70
<!-- -->
<!-- -->Later version (iphone-11 (14.0_18A5351d))
<!-- --> - tfp0 address 0x0xfffffff0076c9e40
<!-- -->   0xfffffff0076c9e40 - 0ffffffff007004000 = 0x6c5e40
<!-- --> - binary
<!-- -->   % hexdump -s 0x6c5e40 -n 8 kernelcache.research.iphone12b.decompressed
<!-- -->   06c5e40 1d70 00f0 307a 8010
<!-- -->	 
<!-- -->	Raw:	0x8010_307a_00f0_1d70
<!-- -->	Ghidra: 0xffff_fff0_07f0_5d70
</code></p></pre>
<p><img src="https://cms.eshard.com/uploads/unnamed2_cb01bfe271.png" alt="unnamed2.png"></p>

<p>Pongo allowed us to get access to existing checkra1n patches for multiple iOS versions, and although the dynamic application was interesting, it wasn't easy to read, modify or share. We wanted a more declarative approach, just like actual code patches.</p>
<p>So we made tools allowing us to diff between two <code>Mach-O</code>, and generate a text patch file with the assembly differences. The other program would take this patch file and simply apply to a binary.</p>
<p><img src="https://cms.eshard.com/uploads/Screenshot_20250224_174126_cde0ed3bb5.png" alt="Screenshot_20250224_174126.png"></p>

<p>We then booted with Pongo, and used QEMU monitor to dump the memory sections patched by Pongo, then reassembled a patched kernel and finally generated a patch file with all the modifications.
The big patch was then split and commented properly, allowing us to review and control exactly what was patched in the kernel.</p>
<p><img src="https://cms.eshard.com/uploads/unnamed_e4a4ff90f0.png" alt="unnamed.png"></p>

<h2>It’s dark in there</h2>
<p>We knew that on modern iPhones every graphical rendering ends up going through their <a href="https://developer.apple.com/documentation/metal"><code>Metal</code></a> API, which then needs an actual GPU. We believed emulating the Apple Silicon GPU would be way too complex and so we had two solutions in mind:</p>
<ul>
<li>Use software rendering: it seemed it was possible in older versions of iOS (using the gpu=0 bootarg)</li>
<li>Forwarding the Metal calls to a device capable of doing the rendering such as real iPhone or maybe a Mac with OSX</li>
</ul>
<p><img src="https://cms.eshard.com/uploads/graphic_architecture_8d6484c452.png" alt="graphic_architecture.png"></p>

<p>The software rendering seemed much easier, so we first looked into that. Unfortunately, the <code>XNU</code> kernel bootarg option was gone in iOS 14. After looking at the <code>QuartzCore</code> framework with Ghidra it seemed that the software rendering would only be called as a fallback if no <code>Metal</code> renderer was available.</p>
<p>In order to confirm that software rendering was indeed usable we worked on a real jailbroken iPhone, and patched <code>Quartzcore</code> to use software rendering. And indeed we confirmed it was possible! With these modifications, the UI was much slower, and had artifacts on parts which probably directly required <code>Metal</code> for rendering.</p>
<p><img src="https://cms.eshard.com/uploads/iphonex_sw_rendering_fae74d73b1.png" alt="iphonex_sw_rendering.png"></p>

<p>After these experiments, we knew we could get software rendering on QEMU, for anything not using <code>Metal</code> or <code>OpenGL</code> directly (so basically all <code>UIKit</code> apps).</p>
<p>We also explored the alternative of proxying the metal calls, working with 2 physical iPhones. What we did was:</p>
<ul>
<li>Parse all iOS headers with LLVM</li>
<li>All pointers to objective C object on the server is a stub pointer on the client</li>
<li>Generate automatic code to exchange structs and pointers</li>
<li>Hook all functions and methods</li>
<li>Forward every call to a server, executing them and returning the result</li>
</ul>
<p>We got some basic calls to go back and forth for Metal initialization, but we realized the road was still very long to get something to actually work. The Objetive C language and the <code>Metal</code> API are quite complex and have many features making this endeavor very complex.</p>
<p><img src="https://cms.eshard.com/uploads/metal_hook_da83384ee9.png" alt="metal_hook.png"></p>

<p>We ended up postponing this solution for a later time and thought starting with software rendering, even though it’s more restrictive, would help us advance with other problems faster.</p>
<p>Furthermore, we found out, iOS frameworks actually expose private APIs not present in the public headers. Although there are some ways to parse these and generate headers, they are most of the time not usable directly and complicate things further.</p>

<h2>IOSurface hunting</h2>
<p>After trying to make software rendering work, we decided we still needed at least a framebuffer device and the original t8030 QEMU didn’t implement one. However, we found <a href="https://github.com/ChefKissInc/QEMUAppleSilicon">a fork of the project</a> which was apparently working on IOMFB support, and decided to try debugging the display with it.</p>
<p><img src="https://cms.eshard.com/uploads/image_2_2c83473f84.png" alt="image (2).png"></p>

<p>And indeed while restoring iOS with that version, we could see the Apple logo and progress bar. However on normal boot the display would remain completely black so it was time for debugging!</p>
<p>Looking at the IOMFB kext in Ghidra and the framebuffer implementation in QEMU, it seemed that two modes were possible:</p>
<ul>
<li>A raw framebuffer at fixed hardware address was available (we guessed for early display)</li>
<li>A more complex API using registers to configure multiple planes and using dma to write surfaces data</li>
</ul>
<p>We first started experimenting with the raw framebuffer (which we later found out was how <code>Pongo</code> displayed stuff). Using it, we could display arbitrary ARGB surfaces, but when booting, that framebuffer was never written to by the system.</p>
<p>Therefore, we started looking into the second display mode. By enabling traces in the framebuffer implementation in QEMU, we could see that the kernel would set up graphical planes using registers but then nothing happened.</p>
<p>At this point we needed to debug why nothing was displayed after boot, even though the framebuffer seemed implemented and detected by the kernel.</p>

<h2>Address randomization</h2>
<p>Even though we had SSH access, we quickly got limited on what we could observe on the running system. We needed to be able to debug the kernel and userspace components with GDB.</p>
<p>For the kernel randomization, it was actually set up in the t8030 board initialization and allowed to turn it off entirely, so it was easy enough.</p>
<p>For userland we had two cases, randomization for executables and for dynamic libraries inside the dyld cache. For executables, simply patching the _load_machfile kernel function was enough to disable it.</p>
<p><img src="https://cms.eshard.com/uploads/image_20_ec79b11511.png" alt="image (20).png"></p>

<p>For the dynamic libraries we ended up handling it a bit differently.  The first thing to know is that every library is contained in a big binary blob called the dyld cache (located at <code>/System/Library/Caches/com.apple.dyld/dyld_shared_cache_arm64e</code>).</p>
<p>All libraries from this cache (called frameworks) are loaded once at boot and then mapped into processes memory space, even though dlopen is called with a path on the filesystem (like <code>/System/Library/Frameworks/QuartzCore</code>).</p>
<p>We noticed that address randomization actually happened only once at boot, and then a library was always loaded by every executable at the same address later on.</p>
<p>So all we had to do was to write some C tool which would dlopen every framework library and then use the <code>_dyld*</code> functions to list the loaded images and get their offset.</p>
<p>Using this solution (and also the reverse process while debugging with addresses coming from GDB), we could easily debug any library from the dyld cache. We were particularly interested with the <code>IOMFB</code> kext, the <code>backboardd</code> and <code>SpringBoard</code> daemons and the <code>QuartzCore</code> framework.</p>
<p><img src="https://cms.eshard.com/uploads/unnamed5_ad1129e037.png" alt="unnamed5.png"></p>

<p><img src="https://cms.eshard.com/uploads/unnamed4_1148ce717f.png" alt="unnamed4.png"></p>

<p><img src="https://cms.eshard.com/uploads/unnamed3_6dc57084e9.png" alt="unnamed3.png"></p>

<p><img src="https://cms.eshard.com/uploads/unnamed6_1acb33616d.png" alt="unnamed6.png"></p>

<pre><p><code><span>debugserver localhost:1111 –attach backboardd
</span>iproxy 1111:1111
<!-- -->gdb-multiarch -x "set architecture arch" -x "target remote localhost:1111"
</code></p></pre>
<p><strong>Note2:</strong> we later found out how to disable the dyld  cache by patching the kernel. Doing so allows to get look for virtual address directly in the dyld cache on the host (which we did using the great <a href="https://github.com/gimli-rs/object">object</a> Rust library from the Gimli project).</p>
<p><strong>Note1:</strong> to debug userspace you need to have a gdb server on the guest (see the debugserver package from <a href="https://github.com/ProcursusTeam">Procursus</a> for example). We started using gdb on the host but it’s somehow limited or bugged, and lldb seemed better.</p>

<h2>Please talk to me</h2>
<p>Armed with a working GDB we could see that  <code>backboardd</code> appeared to be starting properly, but we realized system logs would be a great help to know what was or wasn’t happening.</p>
<p>On a real iPhone, you can get the system logs (after pairing with you computer in USB) with the tool <code>idevicesyslog</code>. This pairing process involves the generation of key pair with the private key being stored on the phone. <code>lockdownd</code> uses this to verify the identity of the computer (after the user has authorized it once in the UI).</p>
<p>In our case, although we could interact with the phone through USB, <code>lockdownd</code> would not work properly. After some Ghidra sessions we realized that <code>lockdownd</code> was trying to use the <code>keybag</code> to store the private key, which would require the SEP we are lacking.</p>
<p>In order to go further, we created a shellcode injected in place of some presumably useless existing function. The code reads a pre-generated pair of private/public keys from the filesystem, and basically loads them every time <code>lockdownd</code> tries to get them from the <code>keybag</code>.</p>
<p>After much debugging (and some more patching to simulate the user trusting the computer and the phone being unlocked), we finally got it to work, and could pair with the emulated iPhone from our companion QEMU.</p>
<p><img src="https://cms.eshard.com/uploads/unnamed7_d7cd518551.png" alt="unnamed7.png"></p>
<p>We found out later on you can also use a tool called oslog on the iphone directly to show the logs (didn’t seem to work at the time), although having the ability would give us much more than just the logs afterwards.</p>
<p><img src="https://cms.eshard.com/uploads/unnamed8_a1c58cc9ab.png" alt="unnamed8.png"></p>
<p>Unfortunately, the logs revealed that <code>QuartzCore</code> seemed to be initializing properly, detecting the size of the display. It also showed that software rendering was being used as a fallback. So everything was working properly but still no display!</p>
<p>Note:  a single error about pixel format was showing and we worked around it by forcing RGBA (we’ll talk later about patching userspace), although this was removed later on.</p>
<p><img src="https://cms.eshard.com/uploads/unnamed9_675d25af99.png" alt="unnamed9.png"></p>

<h2>PAC or not PAC</h2>
<p>Modifying <code>backboardd</code> to fix a pixel format error showed us we were going to have issues with multiple aspects of iOS security.</p>
<p>The signature check at load and runtime were fixed with kernel patches, however we still had issues with pointer authentication failure interrupting our modified <code>backboardd</code> execution.</p>
<p>Pointer authentication is a feature added with ARM8.3 which is used on the <code>t8030</code> board we were emulating and not on t8015 which we used before, so this was new to us.</p>
<p>Since we had foreseen a lot more patching in the future, we decided to tackle that issue at that moment, and try to find a way to bypass this to make our life easier.</p>
<p><img src="https://cms.eshard.com/uploads/esr_pac_2e382a4e6a.png" alt="esr_pac.png"></p>
<p><img src="https://cms.eshard.com/uploads/esr_pac_decoded_8ec8ba3ab6.png" alt="esr_pac_decoded.png"></p>
<p>At the time, we first thought we could just replace all the PAC instructions with either NOP or equivalent non PAC instructions.</p>
<p>Although this would have probably worked, it was a bit invasive and we later found out that you can build an ARM64 PAC binary two ways:</p>
<ul>
<li>Either use a dedicated PAC instruction set, which can only be executed on ARM8.3+ CPU</li>
<li>Or an “unused” instruction set which will be interpreted as PAC on ARM8.3+ or non and non PAC equivalent on earlier ARM versions</li>
</ul>
<p>After running some tests with buildroot and an ARM64 linux system, we verified this to be true and also verified that the binaries compiled for our t8030, used the backward compatible instruction set (architecture called arm64e).</p>
<p>So basically, all we had to do was to disable PAC enforcing in QEMU, and it would just run like non PAC code. Unfortunately this didn’t work, and at the time we were using QEMU 7, and found out that QEMU 8 didn’t have the same behavior.</p>
<p>So we did the natural thing, and started porting the current code base to QEMU 8.2.1. This was painful as a lot of code modified QEMU generic code, particularly the code handling the apple specific instructions <code>genter</code>/<code>gexit</code> and the GL exception levels.</p>
<p>After countless xnu panics, gdb attaching to the kernel, gdb attaching to qemu itself, and a desperate git bisect to find our last bug, we finally got iOS booting again on QEMU 8!
And with it, the ability to disable PAC, and modify any executable code, anywhere as we want it.</p>

<h2>The light at the end of the tunnel</h2>
<p>Since <code>backboardd</code> appeared to be working properly in the system logs, we had no choice but to dig further into backboard behavior to try and understand why it still wasn’t displaying anything.</p>
<p>Writing raw ARGB frames on these addresses allowed us to actually modify the display and write on the different graphical planes, so we knew that the display part was actually working properly.</p>
<p>We were left with a few possibilities, either:</p>
<ul>
<li><code>backboardd</code> was not writing anything for some reason</li>
<li>or it wasn’t writing at the proper addresses</li>
<li>or what was written was not valid</li>
</ul>
<p>To investigate, we started by trying to dump physical DMA memory, where <code>backboardd</code> was supposed to write, maybe it was written to but not displayed properly.</p>
<p><img src="https://cms.eshard.com/uploads/Screenshot_20250225_092231_cf2b7f405a.png" alt="Screenshot_20250225_092231.png"></p>

<p>To do this, we used a QEMU monitor to get the non contiguous addresses, and then a crude script to dump the physical memory and merge it all in a single file.</p>
<p><img src="https://cms.eshard.com/uploads/Screenshot_20250225_092657_bec571344d.png" alt="Screenshot_20250225_092657.png"></p>

<p>Finally using ffplay we tried interpreting that data as an ARGB frame but unfortunately we didn’t get anything interesting.</p>
<p><img src="https://cms.eshard.com/uploads/unnamed10_1e6630e287.png" alt="unnamed10.png"></p>

<p>The second idea was to play with the surfaces allocated by iOS, getting the mapped address in <code>backboardd</code> memory with GDB (by breaking in iosurface_lock).</p>
<p>Searching for all these addresses for some clue, even though we had no idea what was being displayed or if something was even supposed to be displayed. We sometimes found strange things shaped apple an logo, but clearly something was wrong about the way the frames were being written.</p>
<p><img src="https://cms.eshard.com/uploads/unnamed11_5f113d14b2.png" alt="unnamed11.png"></p>

<p>We did the same thing on a real iPhone 10, and we easily dumped perfect raw ARGB frames of the current display. It turned out that with iPhone 11 (so t8030) and later, surfaces appear to be passed compressed to the GPU which knows how to handle it.</p>
<p>But since this doesn’t happen on iPhone X (t8015), we tried modifying the DTB in the QEMU to pass 8015 as <code>chip-id</code> instead of 8030. And finally, we got some apple logo showing on screen after the boot!</p>
<p><img src="https://cms.eshard.com/uploads/unnamed12_7806fbaf2d.png" alt="unnamed12.png"></p>

<h2>Some progress…bar</h2>
<p>At this point, we were happy to finally get a logo displayed but that’s all it did, and the system logs were quite verbose with many system daemons and different libraries we didn’t know about.</p>
<p>All we could do at this point is guess which of the many errors shown in the logs were related to the current issue and fix them one by one until the behavior of the UI changed.</p>
<p>We noticed issues about user authentication and found the errors originated from the daemon <code>mobileactivationd</code> and the framework <code>SpringBoardFoundation</code>.</p>
<p>After patching these, the UI started to display a white progress bar similar to what is shown during the restore phase. The bar seemed to progress indeed but seemed stuck at 90% even after waiting for hours :\</p>

<h2>Patching them all</h2>
<p>Patching the userspace and the framework of the dyld cache was made possible by disabling address randomization. The same way we patched the kernel, we created textual patch files split for each binary / library that we applied with our internal tools.</p>
<p>However, we quickly realized we were going to patch the dyld cache quite often, and while trying modifications it was very painful to handle the 2GB binary file.</p>
<p>Patching it directly was not realistic, we all work on Linux so we cannot modify the nvme directly, and copying the 2GB back and forth through SSH would take forever.</p>
<p>So what we did was to update our internal diffing/patching tool to work with dyld, search the offset of the framework in the dyld cache blob.</p>
<p>Furthermore, we added an option to allow generating simple “dd” commands (and their revert), which can be applied directly on the iPhone (after remounting the fs in rw).</p>
<p>This method allowed us to test many iterations of modifications, and only required a reboot of iOS to have modifications of the dyld cache taken into account.</p>
<p><strong>Note:</strong> a few extra modifications of signature checks in the kernel were necessary for these to work.</p>

<h2>It’s alive!</h2>
<p>Before finding out how to fix the stuck progress bar, we had a little experiment with a system process called <code>PreBoard</code>. It appears to be normally only shown to the user if something goes wrong (like an update interrupting).</p>
<p>Because it’s a system application which draws directly using <code>backboardd</code> (just like <code>SpringBoard</code> would do), it can be started directly from the command line. And with it we get a white screen asking us to swipe to upgrade!</p>

<p><img src="https://cms.eshard.com/uploads/unnamed13_35a54c70e0.png" alt="unnamed13.png"></p>

<p>Armed with knowledge of a past project about using a VNC server on a physical iPhone, we tried adding it, and after quite a few failed attempts, managed to actually unlock that white screen (not by swiping but with a keyboard key).</p>
<p>Right after unlocking, QEMU would stop the execution because iOS was apparently using an illegal instruction. After some digging into <code>backboardd</code>, we found out that it uses the <code>vImage</code> framework to do some hardware accelerated graphical operations (like _vHorizontal_Scale_ARGB_8888_Accelerate).</p>
<p>These operations rely on AMX (Apple Matrix Coprocessor) which have a set of proprietary instructions which are not implemented in the emulated ARM CPU running in QEMU. Fortunately, the <code>vImage</code> framework provides alternative software versions for these calls which only use generic ARM instructions, so we did yet again some patching.</p>
<p>The result is a new screen with an actual <code>IOKit</code> window asking us to enter the passcod and working textbox, in which we can type with the VNC injected keyboard events.</p>

<p><img src="https://cms.eshard.com/uploads/unnamed14_9319700bbb.png" alt="unnamed14.png"></p>

<p>At this point we knew everything was ready for <code>SpringBoard</code> to display properly and it was only a matter of time before we got it to start.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Nebula Sans (332 pts)]]></title>
            <link>https://nebulasans.com/</link>
            <guid>43591225</guid>
            <pubDate>Sat, 05 Apr 2025 06:03:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nebulasans.com/">https://nebulasans.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43591225">Hacker News</a></p>
<div id="readability-page-1" class="page">

<section>
  <img src="https://nebulasans.com/img/star_120.png" alt="Nebula star">
  <div>
    <p>Introducing</p>
    <h2>Nebula<span>Sans</span></h2>
    <p>A versatile, modern, humanist sans-serif with a neutral aesthetic, designed for legibility in both digital and print applications.</p>
    <p>Based on <em>Source Sans</em> by Paul D. Hunt for Adobe Fonts.</p>
  </div>
</section>

<div>
    <p>Nebula Sans is the new brand typeface for <a href="https://nebula.tv/">Nebula</a>, the premium streaming service from independent creators. Based on <a href="https://adobe-fonts.github.io/source-sans/" rel="noopener noreferrer"><em>Source Sans</em></a> and designed to be a drop-in alternative to <a href="https://www.typography.com/fonts/whitney/styles/screensmart" rel="noopener noreferrer"><em>Whitney SSm</em></a>, Nebula Sans is available for anyone to use under the SIL Open Font License.</p>
      
    <a href="https://nebula.tv/videos/nebula-sans">
      <img src="https://nebulasans.com/img/NebulaSans-thumbnail.jpg" alt="">
      <svg viewBox="0 0 96 111" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M93.9694 52.0324C96.6442 53.5704 96.6442 57.4296 93.9693 58.9676L5.99388 109.554C3.32722 111.087 1.68452e-07 109.162 3.03461e-07 106.086L4.7439e-06 4.91411C4.87891e-06 1.83804 3.32723 -0.0868459 5.99389 1.44648L93.9694 52.0324Z" fill="white"></path>
        </svg>
    </a>
    <p>
      Watch our short documentary film about the story behind Nebula&nbsp;Sans, written &amp; directed by David Friedman.
    </p>  
    
    <p>Featuring two styles in six weights, Nebula Sans is well-suited for use in interfaces, print, and for any other graphical, digital, physical, metaphysical, metaphorical, or allegorical typeface needs.</p>
 


    <p><a href="https://nebulasans.com/download/NebulaSans-1.010.zip">Download</a> 
      <a href="https://nebulasans.com/license">View font license</a>
    </p>
  </div>



<div data-theme="light">
    <div>
      <p>Nebula Sans Light</p>
      <p>I’d take the awe of understanding over the awe of ignorance any day</p>
    </div>
    <div>
      <p>Nebula Sans Book</p>
      <p>The “tv” in nebula.tv stands for “Taylor’s Version”</p>
    </div>
    <div>
      <p>Nebula Sans Medium</p>
      <p>Don’t use seven words when four will do</p>
    </div>
    <div>
      <p>Nebula Sans Semibold</p>
      <p>Introducing: Facts and fiction</p>
    </div>
    <div>
      <p>Nebula Sans Bold</p>
      <p id="test2">An indie streaming service</p>
    </div>
    <div>
      <p>Nebula Sans Black</p>
      <p id="test">Powered by humans</p>
    </div>
  </div>

<div data-theme="dark">
    <div>
      <p>Nebula Sans Black Italic</p>
      <p id="test">Enter the Snack Zone</p>
    </div>
    <div>
      <p>Nebula Sans Bold Italic</p>
      <p id="test2">There’s no place like home</p>
    </div>
    <div>
      <p>Nebula Sans Semibold Italic</p>
      <p>Charl is the key to our success</p>
    </div>
    <div>
      <p>Nebula Sans Medium Italic</p>
      <p>We’re assembling a crew for a heist</p>
    </div>
    <div>
      <p>Nebula Sans Book Italic</p>
      <p>We believe in facts, science, and human rights</p>
    </div>
    <div>
      <p>Nebula Sans Light Italic</p>
      <p>I’ve been navigating based on cardinal directions…and vibes</p>
    </div>
  </div>



<section>
    <h2>Why we made this</h2>
  
    <p>We built our own typeface for a few key reasons:</p>
    
    <ol>
      <li><strong>Personalization</strong>: we can customize the fonts to align with our preferences.</li>
      <li><strong>Features</strong>: we can integrate advanced typography features tailored to our use cases.</li>
      <li><strong>Sustainability</strong>: the cost of licensing commercial typefaces increases as we grow.</li>
    </ol>

    <p>Source Sans was the perfect foundation for Nebula Sans because it shares many primary characteristics with <em>Whitney SSm</em>, our previous brand typeface — both were designed to bridge the gap between American gothic and European humanist typefaces, with a strong emphasis on readability. The majority of the adjustments we made were to adapt the metrics of <em>Source Sans</em> to better match those of <em>Whitney SSm</em>, since <em>Source Sans</em> is smaller and narrower by default.</p>

    <figure>
      <img src="https://nebulasans.com/img/handgloves.png" alt="The word 'handgloves' in both fonts, overlayed on each other to show the differences.">
      <figcaption>Comparison of Nebula Sans versus <em>Whitney SSm</em></figcaption>
    </figure>

</section>


<section>
  <img src="https://nebulasans.com/img/upright-italic.png" alt="Nebual Sans upright and italic examples.">
  <img src="https://nebulasans.com/img/centaurus.png" alt="Text about a literal nebula, showcasing the font's capital letters and numbers.">
  <img src="https://nebulasans.com/img/standard-alternates.png" alt="Alternate glyphs for the letters 'A', 'L', and 'G'.">
</section>


<section>

  <h2>Typographical Details</h2>

  <h3>Punctuation</h3>
  <p>The default punctuation marks in <em>Whitney SSm</em> were, to our taste, too straight. Nebula Sans uses beautiful curly glyphs from <em>Source Sans</em>.</p>

  <figure role="group">
    <figure>
      <img src="https://nebulasans.com/svg/curly-quotes.svg" alt="Curly, or smart, quotes.">
    </figure>
    <figure>
      <img src="https://nebulasans.com/svg/comma-period.svg" alt="Comma and period.">
    </figure>
    <figure>
      <img src="https://nebulasans.com/svg/colon-semicolon.svg" alt="Colon and semicolon.">
    </figure>
    <figure>
      <img src="https://nebulasans.com/svg/at-sign.svg" alt="At sign.">
    </figure>
    <figure>
      <img src="https://nebulasans.com/svg/ampersand.svg" alt="Ampersand.">
    </figure>
    <figure>
      <img src="https://nebulasans.com/svg/parentheses.svg" alt="Parentheses.">
    </figure>
    <figcaption>Whitney SSm vs Nebula Sans</figcaption>
  </figure>

  <h3>Stylistic Alternates</h3>
  <p>Nebula Sans features the same stylistic alternates as <em>Source Sans</em>, with the defaults aligned with those of <em>Whitney SSm</em>.</p>

  <figure role="group">
    <figure>
      <img src="https://nebulasans.com/svg/alternate_a.svg" alt="">
      <figcaption>
        Single storey a
        <pre>font-feature-settings: 'ss01';</pre>
      </figcaption>
    </figure>
    <figure>
      <img src="https://nebulasans.com/svg/alternate_g.svg" alt="">
      <figcaption>
        Open g
        <pre>font-feature-settings: 'ss02';</pre>
      </figcaption>
    </figure>
    <figure>
      <img src="https://nebulasans.com/svg/alternate_l.svg" alt="">
      <figcaption>
        Tailed l
        <pre>font-feature-settings: 'ss03';</pre>
      </figcaption>
    </figure>
  </figure>


  <h3>Asterisk</h3>
  <p>In typography, the asterisk symbol was named as such because it resembles a star. We love stars, so how could we not put our own spin on this little glyph?</p>

  <figure role="group">
    <figure>
      <img src="https://nebulasans.com/svg/star.svg" alt="An upside-down star.">
      <figcaption>Nebula logo</figcaption>
    </figure>
    <figure>
      <img src="https://nebulasans.com/svg/asterisk.svg" alt="An upside-down five-pointed asterisk.">
      <figcaption>Nebula Sans asterisk</figcaption>
    </figure>
  </figure>


  <h3>Tabular Figures</h3>
  <p>The default version of <em>Whitney SSm</em> lacks support for tabular lining figures, so we were thrilled to be able to include them in Nebula Sans. Tabular figures (or monospaced numerals) allow us to do things like increment the timestamp in the video player while keeping the digits from jumping around as they change.</p>

  <figure role="group">
    <figure>
      <img src="https://nebulasans.com/svg/tabular-2.svg" alt="Proportional versus tabular figures. With tabular figures, every digit is the same width.">
    </figure>
    <figure>
      <img src="https://nebulasans.com/img/timestamps-2.png" alt="The timestamp on a Nebula video player.">
    </figure>
  </figure>

</section>


<div>
      <p>Wait now it’s working</p>
      <p>Why did it not work <em>5 minutes ago</em></p>
      <p>Internet weather</p>
      <p>Sent 2:57pm</p>
      <p>@&amp;%!$#?!*</p>
      <p>Sent 3:06pm</p>
    </div>



<section>
  
  <p contenteditable="true" spellcheck="false">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>

   
</section>









</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Recreating Daft Punk's Something About Us (237 pts)]]></title>
            <link>https://thoughts-and-things.ghost.io/recreating-daft-punks-something-about-us/</link>
            <guid>43591050</guid>
            <pubDate>Sat, 05 Apr 2025 05:31:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thoughts-and-things.ghost.io/recreating-daft-punks-something-about-us/">https://thoughts-and-things.ghost.io/recreating-daft-punks-something-about-us/</a>, See on <a href="https://news.ycombinator.com/item?id=43591050">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p><strong>Marca Tatem</strong><em>&nbsp;</em>—&nbsp;San Francisco, April 3rd, 2025</p><p>After years of finding it confusing and unintuitive, I finally gave <a href="https://www.ableton.com/en/live/?ref=thoughts-and-things.ghost.io"><strong>Ableton Live</strong></a> another shot. With <strong>version 12</strong> (current as of this writing), it feels significantly more refined—so much so that it's officially become my DAW of choice.</p><p>When learning a new music production software, recreating a cover track is always a smart move. You don't have to worry too much about the songwriting itself, which frees you up to focus on the tools and the production process.</p><p>For this project, I picked a track that's emblematic of the<strong> French Touch</strong> movement and now nearing its 25th anniversary: <strong>Daft Punk's </strong><a href="https://www.youtube.com/watch?v=sOS9aOIXPEk&amp;ref=thoughts-and-things.ghost.io"><strong><em>Something About Us</em></strong></a>. Rebuilding it in a modern production environment turned out to be trickier than I expected, but here's how it went, track by track.</p><figure></figure><h2 id="wait-whats-the-french-touch-anyway">Wait... What's the French Touch, Anyway?</h2><p>To me, <strong>French Touch</strong> isn't just a genre—it's a <em>cultural artifact</em> born from a very specific time and place: France in the late <strong>'70s</strong> and <strong>'80s</strong>. Its distinct sound is the product of a generation raised on <em>analog dreams of the digital future</em>.</p><p>These artists—<strong>Daft Punk</strong>, <strong>Justice</strong>, <strong>Kavinsky</strong>, and others—grew up immersed in a bizarre and colorful media landscape. Japanese TV shows like <a href="https://www.youtube.com/watch?v=rV2yjpuPjaU&amp;ref=thoughts-and-things.ghost.io"><em>X-OR</em></a>, <a href="https://www.youtube.com/watch?v=amrDS3CvrNI&amp;ref=thoughts-and-things.ghost.io"><em>Sankukai</em></a>, and <a href="https://www.youtube.com/watch?v=ROXpxDtKv7o&amp;ref=thoughts-and-things.ghost.io"><em>Albator 84</em></a> filled French screens with space corsairs, robotic heroes, and mythological remixes set in futuristic worlds. Their themes were packed with synths, arpeggiators, and digitized voices—sounds that now echo, with a grown-up edge, in the textures of <strong>French Touch</strong> music.</p><p>At the same time, France was pushing into the future: science museums, open-air <a href="https://www.youtube.com/watch?v=NRO2EtDQ_nA&amp;ref=thoughts-and-things.ghost.io">electronic concerts by pioneers like <strong>Jean-Michel Jarre</strong></a>, and a sense that the 21st century was just around the corner. Yet beneath that techno-utopian veneer, cities like Paris remained gritty and raw. That tension—between the shiny and the grimy—runs deep in the DNA of <strong>French Touch</strong>. You hear it, especially in the darker, distorted edges of <strong>Justice</strong> and <strong>Kavinsky</strong>.</p><p>Let's also not forget the artists who laid the groundwork long before the <strong>French Touch</strong> became a thing. Quirky French electronic pioneers like <a href="https://www.youtube.com/watch?v=Gv3wVHiqP9g&amp;ref=thoughts-and-things.ghost.io"><strong>Jacno</strong></a>, the retro-futurist charm of <a href="https://www.youtube.com/watch?v=6OpnRuooGfw&amp;ref=thoughts-and-things.ghost.io"><strong>Telex</strong></a> from Belgium, and, of course,<strong> </strong><a href="https://www.youtube.com/watch?v=V-HqE1VdPgA&amp;ref=thoughts-and-things.ghost.io"><strong>Giorgio Moroder</strong></a>, the godfather of <strong>Italo Disco</strong>—all contributed textures, tones, and sensibilities that would echo decades later. Even mainstream pop acts like <a href="https://www.youtube.com/watch?v=sJZ1G0e5bWU&amp;ref=thoughts-and-things.ghost.io"><strong>Lio</strong></a>, <a href="https://www.youtube.com/watch?v=EqeJUGzvnq0&amp;ref=thoughts-and-things.ghost.io"><strong>Étienne Daho</strong></a>, or the orchestral-synth hybrids of <a href="https://www.youtube.com/watch?v=Y4FrnrD7jCA&amp;ref=thoughts-and-things.ghost.io"><strong>Rondo Veneziano</strong></a> were constantly spinning on French FM radio, which in the '80s was a chaotic, genre-blurring space. This eclectic mix quietly wired an entire generation of young listeners with an appetite for melody, groove, and synthetic textures—key ingredients in what would later become <strong>French Touch</strong>.</p><figure><img src="https://thoughts-and-things.ghost.io/content/images/2025/04/outrun.png" alt="" loading="lazy" width="1536" height="1024" srcset="https://thoughts-and-things.ghost.io/content/images/size/w600/2025/04/outrun.png 600w, https://thoughts-and-things.ghost.io/content/images/size/w1000/2025/04/outrun.png 1000w, https://thoughts-and-things.ghost.io/content/images/2025/04/outrun.png 1536w" sizes="(min-width: 720px) 720px"><figcaption><span>Outrun never looked as good as in your dreams</span></figcaption></figure><p>There's also a certain <em>California dreamin</em>g that runs through much of <strong>French Touch</strong>. The imagery of Los Angeles—<em>endless boulevards flanked by towering palm trees and that golden sunset light</em>—is a romanticized vision of America that influenced the aesthetic, especially in later works. This fusion of European electronic sensibilities with American dream imagery created something uniquely transportive.</p><p>What started as a movement became a signature sound: <em>nostalgic, futuristic, cinematic, dirty, emotional.</em></p><h2 id="why-it-was-so-hard-to-recreate">Why It Was So Hard to Recreate</h2><p>Part of what makes <strong>French Touch</strong> so compelling is also what makes it hard to replicate today. Those<em> lush, imperfect textures</em> weren't just stylistic choices—they were the natural result of a specific time, place, and set of tools. Many of these tracks were recorded in a single take, often in cramped Parisian apartments or modest studios, using vintage analog gear and early digital samplers.</p><p>There's a rawness and spontaneity to that process. The <em>hiss of a dusty synth</em>, the <em>unquantized groove of a looped disco break</em>, the warmth of <em>tape compression</em>—all of it baked into the DNA of those tracks. Today’s high-resolution digital tools are often too clean, too precise. When you remove the imperfections, you also risk scrubbing out the soul.</p><figure><img src="https://thoughts-and-things.ghost.io/content/images/2025/04/124DC7C1-7FAF-427F-9C62-8B637496C697_1_102_a.jpeg" alt="" loading="lazy" width="2000" height="1125" srcset="https://thoughts-and-things.ghost.io/content/images/size/w600/2025/04/124DC7C1-7FAF-427F-9C62-8B637496C697_1_102_a.jpeg 600w, https://thoughts-and-things.ghost.io/content/images/size/w1000/2025/04/124DC7C1-7FAF-427F-9C62-8B637496C697_1_102_a.jpeg 1000w, https://thoughts-and-things.ghost.io/content/images/size/w1600/2025/04/124DC7C1-7FAF-427F-9C62-8B637496C697_1_102_a.jpeg 1600w, https://thoughts-and-things.ghost.io/content/images/2025/04/124DC7C1-7FAF-427F-9C62-8B637496C697_1_102_a.jpeg 2364w" sizes="(min-width: 720px) 720px"><figcaption><span>The Ableton Live's session</span></figcaption></figure><p>So when I set out to recreate <em>Something About Us</em> using modern software, I knew that recreating this track would be more than just copying notes or layering samples—I’d have to <em>chase a feeling</em>.</p><h2 id="the-keys">The Keys</h2><p>In the original track, the keyboard part is likely played on a <a href="https://en.wikipedia.org/wiki/Wurlitzer_electronic_piano?ref=thoughts-and-things.ghost.io"><strong>Wurlitzer</strong></a><strong> electric piano</strong>—its <em>signature bite and warmth</em> are unmistakable. For my version, I opted for something slightly different: a warmer, more rounded tone using the excellent <a href="https://www.skystudiosplugins.com/?ref=thoughts-and-things.ghost.io"><strong>S.K.Y.&nbsp;Keys plugin</strong></a>, specifically the <em>Everything Right</em> preset. It doesn't try to mimic the original exactly but brings a vibe that fits the song's emotional core.</p><p>I kept the processing minimal: just a gentle midrange boost (mainly to make the part shine a bit more on <a href="https://en.wikipedia.org/wiki/Smiley_face_curve?ref=thoughts-and-things.ghost.io"><strong>AirPods</strong></a>), a touch of Ableton's stock <strong>Vinyl Distortion</strong> for added warmth, and <strong>side-chain compression</strong> tied to the kick for subtle movement in the mix. After the intro section, I remove the bass note from the keys to carve out space for the actual bassline to enter cleanly.</p><p>Here's what that part sounds like, dry and uncompressed:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/keys_thumb.png" alt="audio-thumbnail"></p></div><h2 id="drums">Drums</h2><p>The drum part in <em>Something About Us</em> is deceptively simple. For this project, I built a custom kit: the <strong>kick</strong> comes from a <a href="https://en.wikipedia.org/wiki/Roland_TR-505?ref=thoughts-and-things.ghost.io"><strong>Roland TR-505</strong></a>, the <strong>closed hi-hats</strong> are from a <a href="https://en.wikipedia.org/wiki/Roland_TR-808?ref=thoughts-and-things.ghost.io"><strong>TR-808</strong></a>, and I kept the <strong>open hi-hat</strong> from the stock<strong> TR-505</strong> sounds. It’s a classic combo that delivers the crisp, laid-back groove the track needs.</p><figure><img src="https://thoughts-and-things.ghost.io/content/images/2025/04/IMG_1131-1.jpeg" alt="" loading="lazy" width="2000" height="1381" srcset="https://thoughts-and-things.ghost.io/content/images/size/w600/2025/04/IMG_1131-1.jpeg 600w, https://thoughts-and-things.ghost.io/content/images/size/w1000/2025/04/IMG_1131-1.jpeg 1000w, https://thoughts-and-things.ghost.io/content/images/size/w1600/2025/04/IMG_1131-1.jpeg 1600w, https://thoughts-and-things.ghost.io/content/images/2025/04/IMG_1131-1.jpeg 2000w" sizes="(min-width: 720px) 720px"><figcaption><span>My Arturia Beatstep Pro</span></figcaption></figure><p>Now—the <strong>snare</strong>. This one was tough. I spent a long time trying to recreate it, convinced it was a processed acoustic snare layered with something synthetic. After too many failed attempts, I caved and sampled the original. Yes, the snare is the only part I couldn’t fully replicate.</p><p>To isolate it, I used an AI stem-splitting tool called <a href="https://www.landr.com/plugins/landr-stems?ref=thoughts-and-things.ghost.io"><strong>LANDR Stems</strong>,</a> which did a surprisingly clean job of pulling the drum track apart from the rest of the mix.</p><p>Here's the full drum pattern:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Drums_thumb.png" alt="audio-thumbnail"></p></div><p>Here's the final snare sample, isolated:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Snare_thumb.png" alt="audio-thumbnail"></p></div><p>In terms of processing, I applied <strong>compression</strong> to give the groove some punch and then ran the whole drum track through a <strong>tape emulation</strong> plugin (<a href="https://www.ikmultimedia.com/products/trtapemac24/?ref=thoughts-and-things.ghost.io"><strong>Tape Machine 24</strong></a> from IK Multimedia) to smooth out the transients and give it that slightly worn-in warmth.</p><h2 id="bassline">Bassline</h2><p>Like the drums, the bassline in <em>Something About Us</em> is incredibly minimal—just a straightforward <strong>octave pattern</strong>, no ghost notes. It's tightly quantized and split across two layers that work together to form the full tone.</p><p>The <strong>low octave</strong> is a simple synth—nothing fancy. I used Ableton's stock <strong>Operator</strong> with the <em>Guitar Bass</em> preset as a starting point. A bit of EQ boosts the low mids and rolls off everything below 40Hz, and it sits nicely in the mix.</p><p>The <strong>high octave</strong>, on the other hand, comes from a sampled electric bass. I recorded a single plucked note on my own bass, loaded it into <strong>Simpler</strong>, activated Warping, and that was enough to get the right texture.</p><p>I grouped both tracks and ran them through a <strong>Glue Compressor</strong>, side-chained to the drum track for a bit of breathing and bounce. It's clean, tight, and fits under the keys without stepping on anything.</p><p>Here's the bassline coupled with drums:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Drums-and-Bass_thumb.png" alt="audio-thumbnail"></p></div><p>Here's the bassline soloed.</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Bass_thumb.png" alt="audio-thumbnail"></p></div><h2 id="the-cocotte">The Cocotte</h2><p>One of the more unique textures in <em>Something About Us</em> is what we in France call a <em>"cocotte"</em>—a muted, rhythmic funk guitar riff, aka <strong>chicken guitar</strong>. In this case, it's processed through a <strong>Talkbox</strong>, which gives it that vocal, filtered tone.</p><figure><img src="https://thoughts-and-things.ghost.io/content/images/2025/04/00C0D7EA-02BB-46CC-96C7-A738C7E4824E_1_102_a.jpeg" alt="" loading="lazy" width="2000" height="1500" srcset="https://thoughts-and-things.ghost.io/content/images/size/w600/2025/04/00C0D7EA-02BB-46CC-96C7-A738C7E4824E_1_102_a.jpeg 600w, https://thoughts-and-things.ghost.io/content/images/size/w1000/2025/04/00C0D7EA-02BB-46CC-96C7-A738C7E4824E_1_102_a.jpeg 1000w, https://thoughts-and-things.ghost.io/content/images/size/w1600/2025/04/00C0D7EA-02BB-46CC-96C7-A738C7E4824E_1_102_a.jpeg 1600w, https://thoughts-and-things.ghost.io/content/images/2025/04/00C0D7EA-02BB-46CC-96C7-A738C7E4824E_1_102_a.jpeg 2048w" sizes="(min-width: 720px) 720px"><figcaption><span>My old, beaten Talkbox</span></figcaption></figure><p>If you're unfamiliar with a <strong>Talkbox</strong>, it's essentially a tiny speaker pushing sound through a plastic tube into your mouth. You shape the sound using your mouth movements, almost like playing a <em>mouth harp</em>, and that modulated sound is then picked up by a microphone. It's been famously used by artists like <a href="https://youtu.be/L_CBZkd2tGE?t=31&amp;ref=thoughts-and-things.ghost.io"><strong>Zapp &amp; Roger</strong></a>, <a href="https://www.youtube.com/watch?v=-c3N_0a_WJc&amp;ref=thoughts-and-things.ghost.io"><strong>Stevie Wonder</strong></a>, and of course, <strong>Daft Punk</strong>.</p><p>I must admit something: while I consider <strong>Daft Punk's</strong> first two albums absolute masterpieces, I've never been a huge fan of their guitar tones—especially their later collaborations with <strong>Nile Rodgers</strong>. There's nothing technically wrong with them, but I prefer funk guitars that are punchier, more percussive, and full-bodied. <a href="https://www.youtube.com/watch?v=FtzBduHNol8&amp;ref=thoughts-and-things.ghost.io"><strong>Yarol Poupaud’s</strong></a> work with <strong>FFF</strong> is more my jam—or, even closer to home, <a href="https://www.youtube.com/watch?v=EzjJQs9jHBY&amp;ref=thoughts-and-things.ghost.io"><strong>Nicolas Bogue</strong></a>, <strong>Breakbot's</strong> guitarist, who taught me everything I know about <strong>funk guitar</strong> when I was a teenager.</p><p>In <em>Something About Us,</em> the cocotte is very subdued—the ghost notes are barely there, almost unnaturally so. That may have been intentional, but I wanted to bring a little more texture and bounce into my version.</p><p>I recorded the part using a <strong>Les Paul</strong> through <a href="https://www.native-instruments.com/en/products/komplete/guitar/guitar-rig-7-pro/amps-and-cabinets/?ref=thoughts-and-things.ghost.io"><strong>Guitar Rig's</strong></a><strong> "High White"</strong> amp sim (a <strong>Hiwatt</strong> emulation), with a touch of cabinet (around 5%) to keep it from sounding too boxy. The space and depth come mostly from reverb, sent through a bus using <a href="https://www.wavealchemy.co.uk/product/magic7/?ref=thoughts-and-things.ghost.io"><strong>Wave Alchemy's Magic 7</strong></a> (a lush emulation of the <a href="https://www.bricasti.com/en/pro/m7.php?ref=thoughts-and-things.ghost.io"><strong>Bricasti M7</strong></a>).</p><p>Here's the cocotte soloed:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Cocotte_thumb.png" alt="audio-thumbnail"></p></div><h2 id="the-wakawak">The Wakawak</h2><p>Okay, I couldn't think of a better name for this one—<em>Wakawak</em> just fits. It's a synthetic take on a trimmed <strong>funk guitar chord</strong>, dripping in <strong>reverb</strong> and slapped with a tightly <strong>synced, panned echo</strong>. It's playful and rhythmic and adds a little magic sparkle in the background.</p><p>This sound was one of the trickiest to get right. It took quite a bit of back-and-forth. At its core, it's a <strong>synth patch</strong> designed to mimic that snappy, vocal-like quality you'd get from a well-timed guitar chop.</p><p>The patch starts with a simple waveform in Ableton Live's <strong>Wavetable</strong>, shaped by a smooth, triangle-like <strong>LFO</strong> that modulates both the amplitude and filter cutoff frequency, creating the signature pulsing movement. To add a bit more funk character, I ran it through an <strong>envelope filter stompbox</strong> emulation, which gave it a gritty, slightly overdriven sweep—more like a dusty analog auto-wah you'd find on an old pedalboard than a pristine digital effect.</p><p>The spacey vibe comes from a stock Ableton <strong>Delay</strong> on a send bus, <strong>panned hard right</strong> and set to <strong>tempo-sync</strong>. Tons of reverb helps it blend into the background without losing presence.</p><p>Here's the Wakawaka soloed:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Wakawaka_thumb.png" alt="audio-thumbnail"></p></div><h2 id="the-theme">The Theme</h2><p>This lead sound—<em>silly, playful, and deceptively simple</em>—was surprisingly difficult to pin down. After quite a bit of experimenting, I landed on something pretty close using <a href="https://www.arturia.com/products/software-instruments/jun-6-v/overview?ref=thoughts-and-things.ghost.io"><strong>Arturia's Jun-6V</strong></a>, their emulation of the iconic <a href="https://en.wikipedia.org/wiki/Roland_Juno-60?ref=thoughts-and-things.ghost.io"><strong>Roland Juno-6</strong></a>.</p><p>That<em> soft, rubbery tone</em> with just a hint of analog instability is key to the emotional feel of <em>Something About Us</em>. While you can approximate it using Ableton Live's <strong>Operator</strong> with the <em>Analog Bouquet</em> preset, it still lacks the warmth and nuance of a proper analog emulation.</p><p>Here's the theme soloed:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Theme_thumb.png" alt="audio-thumbnail"></p></div><h2 id="the-guitar-solo">The Guitar Solo</h2><p>The <em>silky, melancholic guitar solo</em> is one of the emotional peaks of <em>Something About Us</em>. While I can't say for sure, I'd wager the original was played on a <strong>hollow or semi-hollow body guitar</strong>—you can hear that smooth resonance and airy tone in the phrasing.</p><figure><img src="https://thoughts-and-things.ghost.io/content/images/2025/04/IMG_1128.jpeg" alt="" loading="lazy" width="2000" height="1500" srcset="https://thoughts-and-things.ghost.io/content/images/size/w600/2025/04/IMG_1128.jpeg 600w, https://thoughts-and-things.ghost.io/content/images/size/w1000/2025/04/IMG_1128.jpeg 1000w, https://thoughts-and-things.ghost.io/content/images/size/w1600/2025/04/IMG_1128.jpeg 1600w, https://thoughts-and-things.ghost.io/content/images/size/w2400/2025/04/IMG_1128.jpeg 2400w" sizes="(min-width: 720px) 720px"><figcaption><span>My humble Honey burst Les Paul ❤️</span></figcaption></figure><p>For my version, I recorded the solo <em>ad-lib</em> on my <strong>Les Paul</strong>, and I was lucky enough to stumble upon a preset in <strong>Guitar Rig</strong> that felt just right. I gave it a few subtle tweaks, adding in simulated hum and noise via the <strong>Noise Machine</strong> rack to inject a bit of vintage character and imperfection.</p><p>I ran it through a <strong>compressor</strong> to even out dynamics and used <strong>Raum</strong>, also in <strong>Guitar Rig</strong>, for some warm, spacey reverb that lets the notes breathe without feeling too polished.</p><p>Here's the guitar solo (with the keys):</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Solo_thumb.png" alt="audio-thumbnail"></p></div><h2 id="the-vocals">The Vocals</h2><h3 id="lead">Lead</h3><p>Ah yes—the vocals. Now<em> that's</em> a big one. First, I genuinely believe you can't fully replicate the vocal texture of the original unless you're <em>slightly sick</em>—it's got that warm, congested, <strong>Vick Vaporub feel</strong>.</p><p>I tried a few approaches, including a <strong>vocoder</strong>, but it ended up sounding too synthetic. Even with careful dry/wet blending, it was either too robotic or too clean—and in both cases, it lost clarity.</p><figure><img src="https://thoughts-and-things.ghost.io/content/images/2025/04/IMG_1129.jpeg" alt="" loading="lazy" width="2000" height="2000" srcset="https://thoughts-and-things.ghost.io/content/images/size/w600/2025/04/IMG_1129.jpeg 600w, https://thoughts-and-things.ghost.io/content/images/size/w1000/2025/04/IMG_1129.jpeg 1000w, https://thoughts-and-things.ghost.io/content/images/size/w1600/2025/04/IMG_1129.jpeg 1600w, https://thoughts-and-things.ghost.io/content/images/size/w2400/2025/04/IMG_1129.jpeg 2400w" sizes="(min-width: 720px) 720px"><figcaption><span>A dreamy vocal booth</span></figcaption></figure><p>In the end, I went with a more organic solution: I tracked the vocals in my apartment in the Mission, San Francisco, and used Ableton's <strong>Auto Filter</strong> to sculpt the tone dynamically. I automated the filter to <strong>gradually open</strong> during the second half of each phrase, and <strong>close it sharply</strong> at the start of the next one—giving the vocal that breathing, evolving texture. I also played around with the filter automation on specific words like<em> "do"</em> and <em>"you"</em> in the phrase <em>"I've got to do/share with you."</em> It's not perfect, but it captures the vibe.</p><h3 id="harmonies">Harmonies</h3><p>There's a beautiful, super-typical Daft Punk harmony on <em>"right one"</em> and <em>"right time"</em> in the second verse—possibly vocoded in the original. It took me a while to figure out the voicings (I'm no music theory wizard), but after some trial and error, I got something I'm really happy with. <em>"Right one"</em> might still be a little off, but I think I nailed <em>"right time"</em>—and let's be honest, that's <strong>the pretty one</strong>.</p><p>I filtered the harmonies using <strong>Auto Filter</strong> again, bounced them down to a stereo track, and used the <em>Wide Stereo</em> preset in Ableton's <strong>Utility</strong> plugin to give them that spread. Add a bit of <strong>Magic 7 reverb</strong> on a bus, and boom—they melt right into the mix.</p><p>Here are the harmonies soloed:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Harmonies_thumb.png" alt="audio-thumbnail"></p></div><p>Here they are with the lead vocals:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Harmonies-and-Main_thumb.png" alt="audio-thumbnail"></p></div><h3 id="vocoder">Vocoder</h3><p>For the final section, I went <em>full robot</em>. I used a stock <strong>Operator</strong> synth as the carrier, routed it into Ableton's stock <strong>Vocoder</strong>, and processed the output with a <strong>high-pass filter</strong> and the <strong>Chorus-Ensemble</strong> plugin to give it more dimension and movement.</p><p>The vocoder is mixed in with the dry vocal until the balance feels just right—enough to sound synthetic but emotionally grounded. Basically, it ends up sounding like <em>a little robot backing me up with its heart on its sleeve.</em></p><p>Here's the vocoder soloed:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Vocoder_thumb.png" alt="audio-thumbnail"></p></div><p>And here's the vocoder blended with the lead:</p><div><p><img src="https://thoughts-and-things.ghost.io/content/media/2025/04/Vocoder-and-Main_thumb.png" alt="audio-thumbnail"></p></div><h2 id="from-paris-to-san-francisco-a-personal-note">From Paris to San Francisco: A Personal Note</h2><p>This project was as much about nostalgia as it was about production techniques. Born and raised in <strong>Paris in the '80s</strong>, I grew up surrounded by the cultural influences that would eventually shape <strong>French Touch</strong>. Now, having lived in California for the past seven years, reconstructing this track felt like building a <em>sonic bridge</em> between my past and present.</p><p>This recreation isn't perfect—nor was it meant to be. It's a <em>personal interpretation</em> filtered through my musical sensibilities and the tools available to me. What mattered more than technical precision was <em>capturing the emotional essence</em> that made the original so affecting.</p><p>A huge part of the joy came from working in <strong>Ableton Live 12</strong>, which now feels like an extension of how I think:</p><ul><li>The <strong>keyboard shortcuts</strong> and editing feel almost like using a great text editor—<strong>Sublime Text</strong> for music.</li><li><strong>Audio editing</strong> has improved dramatically. Where <a href="https://www.avid.com/pro-tools?ref=thoughts-and-things.ghost.io" rel="noreferrer"><strong>Pro Tools</strong></a> was once the undisputed champion, it now feels more like <a href="https://www.barebones.com/products/bbedit/?ref=thoughts-and-things.ghost.io"><strong>BBEdit</strong></a>. Still powerful, but clunky. <a href="https://www.apple.com/logic-pro/?ref=thoughts-and-things.ghost.io"><strong>Logic</strong></a>, meanwhile, still lags behind.</li><li>The <strong>stock effects</strong> and instruments are incredibly well-designed. The built-in <strong>Sampler</strong> and <strong>Wavetable</strong> synths are top-notch. For certain sounds, sure, I still reach for plugins (especially analog emulations like <strong>Arturia’s</strong>), but the native tools are more than enough to create something great.</li><li>Every module shares a <strong>consistent user interface</strong>, which really helps you stay in the flow.</li><li><strong>It’s <em>fast</em>.</strong> Projects load quickly, startup is near-instant, and it handles plugins like a champ. (Seriously, how does Logic still take so long?)</li><li>Even under load, <strong>Live</strong> stays snappy. It never gets in the way of the creative process.</li><li>The <strong>Drum Rack</strong> is beautifully intuitive—a joy to use and <em>miles ahead</em> of <strong>Logic’s</strong> equivalent.</li></ul><p>After bouncing the session, I moved to <a href="https://www.ikmultimedia.com/products/tr6/?ref=thoughts-and-things.ghost.io"><strong>T-Racks</strong></a> for mastering, putting the final polish on a project that was as educational as it was enjoyable.</p><p>This is a personal interpretation, not a definitive one. But I <em>hope you enjoyed reading it</em>, and maybe even listening along&nbsp;❤️</p><p>Here's my <a href="https://marca.fyi/?ref=thoughts-and-things.ghost.io" rel="noreferrer">personal page</a> and my <a href="https://www.instagram.com/marcatatem/?ref=thoughts-and-things.ghost.io" rel="noreferrer">Instagram account</a>.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: OCR pipeline for ML training (tables, diagrams, math, multilingual) (144 pts)]]></title>
            <link>https://github.com/ses4255/Versatile-OCR-Program</link>
            <guid>43590998</guid>
            <pubDate>Sat, 05 Apr 2025 05:22:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ses4255/Versatile-OCR-Program">https://github.com/ses4255/Versatile-OCR-Program</a>, See on <a href="https://news.ycombinator.com/item?id=43590998">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">OCR System Optimized for Machine Learning: Figures, Diagrams, Tables, Math &amp; Multilingual Text</h2><a id="user-content-ocr-system-optimized-for-machine-learning-figures-diagrams-tables-math--multilingual-text" aria-label="Permalink: OCR System Optimized for Machine Learning: Figures, Diagrams, Tables, Math &amp; Multilingual Text" href="#ocr-system-optimized-for-machine-learning-figures-diagrams-tables-math--multilingual-text"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Overview</h2><a id="user-content-overview" aria-label="Permalink: Overview" href="#overview"></a></p>
<p dir="auto">This OCR system is specifically designed to extract structured data from complex educational materials—such as exam papers—in a format optimized for machine learning (ML) training.
It supports multilingual text, mathematical formulas, tables, diagrams, and charts, making it ideal for creating high-quality training datasets.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Key Features</h2><a id="user-content-key-features" aria-label="Permalink: Key Features" href="#key-features"></a></p>
<p dir="auto">– Optimized for ML Training: Extracted elements such as diagrams, tables, and figures are semantically annotated with contextual explanations.
This includes automatic generation of natural language descriptions for visual content (e.g., “This figure shows the process of mitosis in four stages”) to enhance downstream model training.</p>
<p dir="auto">– Multilingual Support: Works with Japanese, Korean, and English, and can be easily customized for additional languages.</p>
<p dir="auto">– Structured Output: Generates AI-ready outputs in JSON or Markdown, including human-readable descriptions of mathematical expressions, table summaries, and figure captions.</p>
<p dir="auto">– High Accuracy: Achieves over 90–95% accuracy on real-world academic datasets such as EJU Biology and UTokyo Math.</p>
<p dir="auto">– Complex Layout Support: Accurately processes exam-style PDFs with dense scientific content, formula-heavy paragraphs, and rich visual elements.</p>
<p dir="auto">– Built With: DocLayout-YOLO, Google Vision API, Gemini Pro Vision, MathPix OCR, OpenAI API, OpenCV, and more.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Sample Outputs</h2><a id="user-content-sample-outputs" aria-label="Permalink: Sample Outputs" href="#sample-outputs"></a></p>
<p dir="auto">Below are actual examples of outputs generated by this system using real-world materials (2017 EJU Biology &amp; 2014 University of Tokyo Math), including English-translated semantic context and extracted data.</p>
<p dir="auto"><strong>Math Input</strong>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ses4255/Versatile-OCR-Program/blob/main/sample_images/Math_Original.jpeg"><img src="https://github.com/ses4255/Versatile-OCR-Program/raw/main/sample_images/Math_Original.jpeg" alt="Math Original"></a>
<strong>Output</strong>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ses4255/Versatile-OCR-Program/blob/main/sample_images/Math_Converted.jpeg"><img src="https://github.com/ses4255/Versatile-OCR-Program/raw/main/sample_images/Math_Converted.jpeg" alt="Math Converted"></a></p>
<p dir="auto"><strong>English-translated outputs</strong></p>
<p dir="auto">Question 1. Consider the rectangular prism OABC–DEFG with a square base of side length 1. Points P, Q, R are on the segments AE, BF, and CG, respectively, and four points O, P, Q, and R lie on the same plane. Let S be the area of quadrilateral OPQR. Also, let ∠AOP be α and ∠COR be β. (2) If α + β = 1 and S = S, find the value of tan α + tan β. Also, if α ≤ β, find the value of tan α.</p>
<p dir="auto">[Image Start]</p>
<p dir="auto">Image description:
This image shows the rectangular prism OAB–CDEFGQ. Each vertex is labeled with alphabets. The angle α is marked on face OAB. The plane ORPQ intersects the prism and is highlighted. Line RC lies on face ODCG, and line PB lies on face ABFQ.</p>
<p dir="auto">Educational value:
This image enhances spatial reasoning by visualizing 3D geometry and cross-sections. It helps learners understand concepts such as plane geometry, solid shapes, spatial visualization, and angles.</p>
<p dir="auto">Related topics:
Solid geometry, cross-sections, prism faces, triangle, spatial reasoning</p>
<p dir="auto">Exam relevance:
This type of question appears in entrance exams like:</p>
<ol dir="auto">
<li>Calculate the area of ORPQ using angle α</li>
<li>Find the lengths of OR, RP, PQ, QO</li>
<li>Determine the angle between ORPQ and the prism's face</li>
<li>Locate points P, Q, R in coordinate space</li>
<li>Calculate volume/area of the prism parts</li>
<li>Predict shapes based on constraints</li>
<li>Sketch the shape of the prism</li>
</ol>
<p dir="auto">[Image End]</p>
<p dir="auto"><strong>Biology Input</strong>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ses4255/Versatile-OCR-Program/blob/main/sample_images/Biology_Original.jpeg"><img src="https://github.com/ses4255/Versatile-OCR-Program/raw/main/sample_images/Biology_Original.jpeg" alt="Biology Original"></a>
<strong>Output</strong>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/ses4255/Versatile-OCR-Program/blob/main/sample_images/Biology_Converted.jpeg"><img src="https://github.com/ses4255/Versatile-OCR-Program/raw/main/sample_images/Biology_Converted.jpeg" alt="Biology Converted"></a></p>
<p dir="auto"><strong>English-translated outputs</strong></p>
<p dir="auto">Question 39. The photo shows the mitotic cell division process (somatic cell division) of an onion root tip. Cells A–D are in different stages of division. Match the stages (prophase, metaphase, anaphase, telophase) to each cell and select the correct combination from options ①–⑧.</p>
<p dir="auto">[Image Start]</p>
<p dir="auto">Image description:
This image shows the process of plant cell division observed under a microscope. Various cells are in different mitotic phases, including chromosomes aligned at the center (metaphase), separating to poles (anaphase), or forming daughter nuclei (telophase).</p>
<p dir="auto">A – appears to be in anaphase<br>
B – possibly telophase<br>
C – prophase or prometaphase<br>
D – metaphase</p>
<p dir="auto">Educational value:
This helps students visually understand the process of mitosis, reinforcing knowledge of cell division phases and their characteristics. It connects to biology concepts like DNA replication, cancer biology, and genetics.</p>
<p dir="auto">Related topics:
Mitosis, Cell cycle, Prophase, Metaphase, Anaphase, Telophase, DNA replication</p>
<p dir="auto">Exam relevance:
This image is used in questions such as:</p>
<ol dir="auto">
<li>Match A, B, C, D to appropriate mitotic phases</li>
<li>Describe characteristics of each phase</li>
<li>Explain the significance of mitosis</li>
<li>Discuss how errors in mitosis lead to genetic diseases</li>
</ol>
<p dir="auto">[Image End]</p>
<p dir="auto">[Table Start]</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>前期</th>
<th>中期</th>
<th>後期</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>C</td>
<td>D</td>
</tr>
<tr>
<td>A</td>
<td>D</td>
<td>B</td>
</tr>
<tr>
<td>B</td>
<td>C</td>
<td>C</td>
</tr>
<tr>
<td>B</td>
<td>D</td>
<td>C</td>
</tr>
<tr>
<td>C</td>
<td>A</td>
<td>D</td>
</tr>
<tr>
<td>C</td>
<td>D</td>
<td>A</td>
</tr>
<tr>
<td>D</td>
<td>A</td>
<td>B</td>
</tr>
<tr>
<td>D</td>
<td>C</td>
<td>A</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto">Summary:
Each option (①–⑧) corresponds to a specific mapping of A, B, C, D to prophase, metaphase, and anaphase.</p>
<p dir="auto">Educational value:
Understanding time-based transition in mitosis and data organization in tables. Enhances data interpretation, pattern recognition, and analysis skills.</p>
<p dir="auto">Related topics:
Data analysis, table interpretation, biological data classification</p>
<p dir="auto">[Table End]</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage Workflow</h2><a id="user-content-usage-workflow" aria-label="Permalink: Usage Workflow" href="#usage-workflow"></a></p>
<ol dir="auto">
<li>
<p dir="auto">Step 1 – Initial OCR Extraction
Run ocr_stage1.py to extract raw elements (text, tables, figures, etc.) from input PDFs.
This step performs layout detection and stores intermediate results (e.g., coordinates, cropped images, raw content).</p>
</li>
<li>
<p dir="auto">Step 2 – Semantic Interpretation &amp; Final Output
Run ocr_stage2.py to process the intermediate data and convert it into structured, human-readable output.
This includes generating natural-language explanations, summaries, and organizing content into AI-ready formats (JSON/Markdown).</p>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Technical Implementation</h2><a id="user-content-technical-implementation" aria-label="Permalink: Technical Implementation" href="#technical-implementation"></a></p>
<p dir="auto">– Table Processing OptimizationTable regions are detected using DocLayout-YOLO</p>
<p dir="auto">– Google Vision OCR is used for table processing instead of MathPix for better accuracy with Japanese text</p>
<p dir="auto">– Table structures are preserved in structured JSON format (maintaining row/column structure)</p>
<p dir="auto">– Y-coordinate information is maintained to ensure contextual continuity</p>
<p dir="auto">– Original layout information is preserved alongside structured data for ML training</p>
<p dir="auto">– Image and Special Region ProcessingImage regions are processed using Google Vision API's image analysis features (imageProperties, labelDetection, textDetection)</p>
<p dir="auto">– Image descriptions are generated using Google Cloud Vision API</p>
<p dir="auto">– Graphs/charts are processed using Google Cloud Vision API's document analysis features with data point extraction</p>
<p dir="auto">– Special region processing results are stored in structured JSON format for ML training</p>
<p dir="auto">– Original coordinate information and region type metadata are added to maintain contextual continuity</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Purpose and Contact</h2><a id="user-content-purpose-and-contact" aria-label="Permalink: Purpose and Contact" href="#purpose-and-contact"></a></p>
<p dir="auto">This OCR system is an open project, and I’d love to see others improve or build upon it. Continuous updates and community-driven enhancements are the goal.</p>
<p dir="auto">If you’re interested in custom AI tools or would like to collaborate on an AI-related project, feel free to reach out via email:</p>
<p dir="auto"><strong>Email</strong>: <a href="mailto:ses425500000@gmail.com">ses425500000@gmail.com</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">This project is licensed under the <strong>MIT License</strong>.<br>
You are free to use, modify, distribute, and sublicense this software for any purpose, including commercial use.</p>
<p dir="auto">See the <a href="https://github.com/ses4255/Versatile-OCR-Program/blob/main/LICENSE">LICENSE</a> file for full terms.
⸻
<em>Note: The English translations in the examples were manually reformatted for clarity and consistency. Please treat them as reference only, as structure and layout may differ slightly from the original.</em>
_Keywords: OCR, exam OCR, table recognition, diagram OCR, AI education tools, OpenAI, Gemini Pro Vision, multilingual OCR, DocLayout-YOLO, Machine Learning, educational ML dataset, research OCR, paper OCR, document AI</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Trump's Tariff Formula Makes No Economic Sense. It's Also Based on an Error (236 pts)]]></title>
            <link>https://www.aei.org/economics/president-trumps-tariff-formula-makes-no-economic-sense-its-also-based-on-an-error/</link>
            <guid>43590421</guid>
            <pubDate>Sat, 05 Apr 2025 03:24:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.aei.org/economics/president-trumps-tariff-formula-makes-no-economic-sense-its-also-based-on-an-error/">https://www.aei.org/economics/president-trumps-tariff-formula-makes-no-economic-sense-its-also-based-on-an-error/</a>, See on <a href="https://news.ycombinator.com/item?id=43590421">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                        
                    <article>
                        
                        <div>
                                                        
<p>President Trump on Wednesday announced tariffs on practically every foreign country (and some non-countries), ranging from a 10 percent minimum all the way up to 50 percent. The economic fallout has been dramatic, with the stock market losing nine percent of its value (based on the S&amp;P 500 index at the time of writing) and forecasted probabilities of a recession rising.</p>



<p>President Trump described the tariffs as reciprocal, equal to half of the rate of tariffs and non-tariff trade barriers imposed by other countries. However, they are nothing of the sort. The tariff the United States is placing on other countries is equal to the US trade deficit divided by US imports from a given country, divided by two, or 10 percent, whichever rate is higher. So even if the United States has no trade deficit (or a trade surplus) with a country, they still receive a minimum tariff of 10 percent.</p>



<p>As an example, if the US imports $100 million worth of goods and services while exporting $50 million to a country, then the Trump Administration alleges that country levies a 50 percent tariff on the United States (the difference between $100 million and $50 million, divided by $100 million). The “reciprocal” tariff put into effect by President Trump on Wednesday would be half of that, 25 percent.</p>



<p>The formula for the tariffs, originally credited to the Council of Economic Advisers and&nbsp;<a href="https://ustr.gov/issue-areas/reciprocal-tariff-calculations" target="_blank" rel="noreferrer noopener">published</a>&nbsp;by the Office of the United States Trade Representative, does not make economic sense. The trade deficit with a given country is not determined only by tariffs and non-tariff trade barriers, but also by international capital flows, supply chains, comparative advantage, geography, etc.&nbsp;&nbsp;</p>



<p>But even if one were to take the Trump Administration’s tariff formula seriously, it makes an error that inflates the tariffs assumed to be levied by foreign countries four-fold. As a result, the “reciprocal” tariffs imposed by President Trump are highly inflated as well.</p>



<p>Though in effect the formula for the tariff placed on the United States by another country is equal to the trade deficit divided by imports, the formula published by the Office of the US Trade Representative has two additional terms in the denominator that just so happen to cancel out: (1) the elasticity of import demand with respect to import prices,&nbsp;<em>ε</em>, and (2) the elasticity of import prices with respect to tariffs,&nbsp;<em>φ</em>.</p>


<div>
<figure><img decoding="async" width="236" height="83" src="https://www.aei.org/wp-content/uploads/2025/04/corinthveugerequation040425.png?x85095" alt=""></figure></div>


<p>The idea is that as tariffs rise, the change in the trade deficit will depend on the responsiveness of import demand to tariffs, which depends on how import demand responds to import prices and how import prices respond to tariffs. The Trump Administration assumes an elasticity of import demand with respect to import prices of four, and an elasticity of import prices with respect to tariffs of 0.25, the product of which is one and is the reason they cancel out in the Administration’s formula.</p>



<p>However, the elasticity of import prices with respect to tariffs should be about one (actually 0.945), not 0.25 as the Trump Administration states. Their mistake is that they base the elasticity on the response of&nbsp;<em>retail&nbsp;</em>prices to tariffs, as opposed to&nbsp;<em>import</em>&nbsp;prices as they should have done. The&nbsp;<a href="https://www.aeaweb.org/articles?id=10.1257/aeri.20190536" target="_blank" rel="noreferrer noopener">article</a>&nbsp;they cite by&nbsp;<a href="https://x.com/albertocavallo/status/1907974351967633570" target="_blank" rel="noreferrer noopener">Alberto Cavallo</a>&nbsp;and his coauthors makes this distinction clear. The authors state that “tariffs [are] passed through almost fully to US import prices,” while finding “more mixed evidence regarding retail price increases.” It is inconsistent to multiply the elasticity of import demand with respect to&nbsp;<em>import</em>&nbsp;prices by the elasticity of&nbsp;<em>retail</em>&nbsp;prices with respect to tariffs.</p>



<p>Correcting the Trump Administration’s error would reduce the tariffs assumed to be applied by each country to the United States to about a fourth of their stated level, and as a result, cut the tariffs announced by President Trump on Wednesday by the same fraction, subject to the 10 percent tariff floor. As shown in Table 1, the tariff rate would not exceed 14 percent for any country. For all but a few countries, the tariff would be exactly 10 percent, the floor imposed by the Trump Administration.</p>



<p>Now, our view is that the formula the administration relied on has no foundation in either economic theory or trade law. But if we are going to pretend that it is a sound basis for US trade policy, we should at least be allowed to expect that the relevant White House officials do their calculations carefully. Hopefully they will correct their mistake soon: the resulting trade liberalization would provide a much-needed boost to the economy and may yet help us stave off a recession.</p>



<p><strong>Table 1. President Trump’s Tariffs Announced April 2, 2025, actual and with corrected formula</strong></p>



<figure><table><tbody><tr><td><strong>Country</strong></td><td><strong>(Announced) Tariff</strong></td><td><strong>(Corrected) Tariff</strong></td></tr><tr><td>Lesotho</td><td>50%</td><td>13.2%</td></tr><tr><td>Cambodia</td><td>49%</td><td>13.0%</td></tr><tr><td>Laos</td><td>48%</td><td>12.7%</td></tr><tr><td>Madagascar</td><td>47%</td><td>12.4%</td></tr><tr><td>Vietnam</td><td>46%</td><td>12.2%</td></tr><tr><td>Myanmar (Burma)</td><td>44%</td><td>11.6%</td></tr><tr><td>Sri Lanka</td><td>44%</td><td>11.6%</td></tr><tr><td>Falkland Islands</td><td>41%</td><td>10.8%</td></tr><tr><td>Syria</td><td>41%</td><td>10.8%</td></tr><tr><td>Mauritius</td><td>40%</td><td>10.6%</td></tr><tr><td>Iraq</td><td>39%</td><td>10.3%</td></tr><tr><td>Guyana</td><td>38%</td><td>10.1%</td></tr><tr><td>Bangladesh</td><td>37%</td><td>10.0%</td></tr><tr><td>Botswana</td><td>37%</td><td>10.0%</td></tr><tr><td>Liechtenstein</td><td>37%</td><td>10.0%</td></tr><tr><td>Serbia</td><td>37%</td><td>10.0%</td></tr><tr><td>Thailand</td><td>36%</td><td>10.0%</td></tr><tr><td>Bosnia and Herzegovina</td><td>35%</td><td>10.0%</td></tr><tr><td>China</td><td>34%</td><td>10.0%</td></tr><tr><td>North Macedonia</td><td>33%</td><td>10.0%</td></tr><tr><td>Angola</td><td>32%</td><td>10.0%</td></tr><tr><td>Fiji</td><td>32%</td><td>10.0%</td></tr><tr><td>Indonesia</td><td>32%</td><td>10.0%</td></tr><tr><td>Taiwan</td><td>32%</td><td>10.0%</td></tr><tr><td>Libya</td><td>31%</td><td>10.0%</td></tr><tr><td>Moldova</td><td>31%</td><td>10.0%</td></tr><tr><td>Switzerland</td><td>31%</td><td>10.0%</td></tr><tr><td>Algeria</td><td>30%</td><td>10.0%</td></tr><tr><td>Nauru</td><td>30%</td><td>10.0%</td></tr><tr><td>South Africa</td><td>30%</td><td>10.0%</td></tr><tr><td>Pakistan</td><td>29%</td><td>10.0%</td></tr><tr><td>Tunisia</td><td>28%</td><td>10.0%</td></tr><tr><td>Kazakhstan</td><td>27%</td><td>10.0%</td></tr><tr><td>India</td><td>26%</td><td>10.0%</td></tr><tr><td>South Korea</td><td>25%</td><td>10.0%</td></tr><tr><td>Brunei</td><td>24%</td><td>10.0%</td></tr><tr><td>Japan</td><td>24%</td><td>10.0%</td></tr><tr><td>Malaysia</td><td>24%</td><td>10.0%</td></tr><tr><td>Vanuatu</td><td>22%</td><td>10.0%</td></tr><tr><td>Cote d’Ivoire</td><td>21%</td><td>10.0%</td></tr><tr><td>Namibia</td><td>21%</td><td>10.0%</td></tr><tr><td>European Union</td><td>20%</td><td>10.0%</td></tr><tr><td>Jordan</td><td>20%</td><td>10.0%</td></tr><tr><td>Nicaragua</td><td>18%</td><td>10.0%</td></tr><tr><td>Zimbabwe</td><td>18%</td><td>10.0%</td></tr><tr><td>Israel</td><td>17%</td><td>10.0%</td></tr><tr><td>Malawi</td><td>17%</td><td>10.0%</td></tr><tr><td>Philippines</td><td>17%</td><td>10.0%</td></tr><tr><td>Zambia</td><td>17%</td><td>10.0%</td></tr><tr><td>Mozambique</td><td>16%</td><td>10.0%</td></tr><tr><td>Norway</td><td>15%</td><td>10.0%</td></tr><tr><td>Venezuela</td><td>15%</td><td>10.0%</td></tr><tr><td>Nigeria</td><td>14%</td><td>10.0%</td></tr><tr><td>Chad</td><td>13%</td><td>10.0%</td></tr><tr><td>Equatorial Guinea</td><td>13%</td><td>10.0%</td></tr><tr><td>Cameroon</td><td>11%</td><td>10.0%</td></tr><tr><td>Democratic Republic of the Congo</td><td>11%</td><td>10.0%</td></tr></tbody></table><figcaption>Source: Annex I,&nbsp;<a href="https://www.whitehouse.gov/presidential-actions/2025/04/regulating-imports-with-a-reciprocal-tariff-to-rectify-trade-practices-that-contribute-to-large-and-persistent-annual-united-states-goods-trade-deficits/" target="_blank" rel="noreferrer noopener">https://www.whitehouse.gov/presidential-actions/2025/04/regulating-imports-with-a-reciprocal-tariff-to-rectify-trade-practices-that-contribute-to-large-and-persistent-annual-united-states-goods-trade-deficits/</a>. Note: Countries with an announced tariff of 10% are not included in the table. Their tariffs would not change.</figcaption></figure>




                        </div>
                    </article>
                            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenVertebrate Presents a Database of 13,000 3D Scans of Specimens (160 pts)]]></title>
            <link>https://www.openculture.com/2024/03/openvertebrate-presents-a-massive-database-of-13000-3d-scans-of-vertebrate-specimens.html</link>
            <guid>43589989</guid>
            <pubDate>Sat, 05 Apr 2025 02:15:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.openculture.com/2024/03/openvertebrate-presents-a-massive-database-of-13000-3d-scans-of-vertebrate-specimens.html">https://www.openculture.com/2024/03/openvertebrate-presents-a-massive-database-of-13000-3d-scans-of-vertebrate-specimens.html</a>, See on <a href="https://news.ycombinator.com/item?id=43589989">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			<p><img loading="lazy" fetchpriority="high" decoding="async" src="https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM.png" alt="" width="2386" height="1588" srcset="https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM.png 2386w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-360x240.png 360w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-1024x682.png 1024w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-240x160.png 240w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-768x511.png 768w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-1536x1022.png 1536w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-2048x1363.png 2048w" sizes="(max-width: 2386px) 100vw, 2386px" data-old-src="https://www.openculture.com/wp-content/plugins/native-lazyload/assets/images/placeholder.svg" data-src="https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM.png" data-srcset="https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM.png 2386w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-360x240.png 360w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-1024x682.png 1024w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-240x160.png 240w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-768x511.png 768w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-1536x1022.png 1536w, https://cdn8.openculture.com/2024/03/18230102/Screenshot-2024-03-18-at-10.57.49%E2%80%AFPM-2048x1363.png 2048w"></p>
<p>From The Flori­da Muse­um of Nat­ur­al His­to­ry comes the <a href="https://www.floridamuseum.ufl.edu/overt/gallery/">open­Ver­te­brate project</a>, a new ini­tia­tive to “pro­vide free, dig­i­tal 3D ver­te­brate anato­my mod­els and data to researchers, edu­ca­tors, stu­dents and the pub­lic.” Intro­duc­ing the new project (oth­er­wise known as oVert), the muse­um writes:</p>
<blockquote><p>Between 2017 and 2023, oVert project mem­bers took CT scans of more than 13,000 spec­i­mens, with rep­re­sen­ta­tive species across the ver­te­brate tree of life. This includes more than half the gen­era of all amphib­ians, rep­tiles, fish­es and mam­mals. CT scan­ners use high-ener­gy X‑rays to peer past an organism’s exte­ri­or and view the dense bone struc­ture beneath. Thus, skele­tons make up the major­i­ty of oVert recon­struc­tions. A small num­ber of spec­i­mens were also stained with a tem­po­rary con­trast-enhanc­ing solu­tion that allowed researchers to visu­al­ize soft tis­sues, such as skin, mus­cle and oth­er organs.</p>
<p>The mod­els give an inti­mate look at inter­nal por­tions of a spec­i­men that could pre­vi­ous­ly only be observed through destruc­tive dis­sec­tion and tis­sue sam­pling.</p></blockquote>
<p>In the com­ing years, the <a href="https://www.floridamuseum.ufl.edu/overt/gallery/">open­Ver­te­brate</a> team will “CT scan 20,000 flu­id-pre­served spec­i­mens from U.S. muse­um col­lec­tions, pro­duc­ing high-res­o­lu­tion anatom­i­cal data for more than 80 per­cent of ver­te­brate gen­era.” The project will also make dig­i­tal images and 3D mesh files avail­able to down­load and 3D print.</p>
<p>The video below pro­vides a short, visu­al intro­duc­tion to the <a href="https://www.floridamuseum.ufl.edu/overt/">dig­i­tal col­lec­tion</a>. You can learn more about the project <a href="https://www.floridamuseum.ufl.edu/science/scientists-ct-scanned-thousands-of-natural-history-specimens-which-you-can-access-for-free/">here</a>.</p>
<div>
<p><span><iframe title="YouTube video player" type="text/html" width="640" height="505" src="//www.youtube.com/embed/1VqLsNMIPmc?wmode=transparent&amp;fs=1&amp;hl=en&amp;showsearch=0&amp;rel=0&amp;theme=dark" frameborder="0" allowfullscreen="" loading="lazy"></iframe></span>
	</p>
</div>

<p><a href="https://boingboing.net/2024/03/10/openvertebrate-is-a-massive-database-of-3-d-scanned-images-of-13000-and-counting-vertebrate-specimens.html" rel="nofollow">via Boing­Bo­ing</a></p>
<p><strong>Relat­ed Con­tent</strong></p>
<p><a title="Permanent Link to Franz Kafka Says the Insect in <i>The Metamorphosis</i> Should Never Be Drawn; and Vladimir Nabokov Draws It Anyway" href="https://www.openculture.com/2022/03/franz-kafka-says-the-insect-in-the-metamorphosis-should-never-be-drawn-and-vladimir-nabokov-draws-it-anyway.html" rel="bookmark">Franz Kaf­ka Says the Insect in&nbsp;The Meta­mor­pho­sis&nbsp;Should Nev­er Be Drawn; and Vladimir Nabokov Draws It Any­way</a></p>
<p><a title="Permanent Link to Watch <i>The Insects’ Christmas</i> from 1913: A Stop Motion Film Starring a Cast of Dead Bugs" href="https://www.openculture.com/2019/12/watch-the-insects-christmas-from-1913.html" rel="bookmark">Watch&nbsp;<em>The Insects’ Christ­mas&nbsp;</em>from 1913: A Stop Motion Film Star­ring a Cast of Dead Bugs</a></p>
<p><a title="Permanent Link to Captivating Collaboration: Artist Hubert Duprat Uses Insects to Create Golden Sculptures" href="https://www.openculture.com/2013/02/artist_hubert_duprat_uses_insects_to_create_golden_sculptures.html" rel="bookmark">Cap­ti­vat­ing Col­lab­o­ra­tion: Artist Hubert Duprat Uses Insects to Cre­ate Gold­en Sculp­tures</a></p>

<br>		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Learn electricity and electronics fundamentals without taking a formal course (380 pts)]]></title>
            <link>https://simonmonk.org/tyee7</link>
            <guid>43589776</guid>
            <pubDate>Sat, 05 Apr 2025 01:50:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://simonmonk.org/tyee7">https://simonmonk.org/tyee7</a>, See on <a href="https://news.ycombinator.com/item?id=43589776">Hacker News</a></p>
<div id="readability-page-1" class="page"><div aria-label="Content">
        <article>

  

  <div>
    

<p>Learn electricity and electronics fundamentals and up-to-date applications―all without taking a formal course</p>

<p><img src="https://simonmonk.org/assets/images/cover_tyee7.jpg" alt="cover"></p>

<p>This fully updated guide offers practical, easy-to-follow instruction on electricity and electronics. Written by a pair of experienced instructors, Teach Yourself Electricity and Electronics, Seventh Edition features plain language explanations and step-by-step lessons that make it easy to understand the material quickly. Throughout, detailed illustrations and practical examples reinforce key concepts. This new edition brings the book up to date with modern electronics and places much more emphasis on the use of Integrated Circuits and practical electronics design. You will also get access to a valuable online exam to test your knowledge and identify areas for further study.</p>

<p>This thoroughly revised seventh edition covers:</p>

<ul>
  <li>Direct current (DC) circuits</li>
  <li>Electrical units</li>
  <li>Resistors</li>
  <li>Cells and batteries</li>
  <li>Magnetism</li>
  <li>Alternating current (AC) circuits</li>
  <li>Inductors and capacitors</li>
  <li>Phase</li>
  <li>Inductive and capacitive reactance</li>
  <li>Impedance and admittance</li>
  <li>AC power and resonance</li>
  <li>Transformers and impedance matching</li>
  <li>Semiconductors, diodes, and transistors</li>
  <li>Integrated Circuits (ICs)</li>
  <li>Amplifiers and oscillators</li>
  <li>Wireless transmitters and receivers</li>
  <li>Digital circuits</li>
  <li>Microcontrollers, including the Arduino</li>
  <li>Transducers and sensors</li>
  <li>Acoustics and audio</li>
  <li>Antennas for RF communications</li>
</ul>

<p><a href="https://simonmonk.org/assets/downloads/quiz_section_1.pdf">Quiz Section 1</a></p>

<p><a href="https://simonmonk.org/assets/downloads/quiz_section_2.pdf">Quiz Section 2</a></p>

<p><a href="https://simonmonk.org/assets/downloads/quiz_section_3.pdf">Quiz Section 3</a></p>

<p><a href="https://simonmonk.org/assets/downloads/quiz_section_4.pdf">Quiz Section 4</a></p>

<p><a href="https://simonmonk.org/assets/downloads/quiz_final.pdf">Final Quiz</a></p>

  </div>

</article>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AT&T Email-to-Text Gateway Service Ending June 17 (125 pts)]]></title>
            <link>https://www.att.com/support/article/wireless/KM1061254/</link>
            <guid>43589523</guid>
            <pubDate>Sat, 05 Apr 2025 01:22:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.att.com/support/article/wireless/KM1061254/">https://www.att.com/support/article/wireless/KM1061254/</a>, See on <a href="https://news.ycombinator.com/item?id=43589523">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><div><p>Starting June 17, 2025, you won’t be able to send or receive texts using email.</p></div><hr></div><div><div id="firstStepComponentDiv"><h2>What to know</h2><div id="FirstStepContentLess"><p>On June 17, 2025, our email-to-text and text-to-email service is going away. This means you won’t be able to use email to send or receive texts. Also, others who have AT&amp;T Wireless<sup>SM</sup> won’t be able to use email to send you a text or use text to send you an email.&nbsp;</p>
<p>Have a FirstNet account? <a id="idFirstToReportClicks1" href="https://www.firstnet.com/help/email-messaging-gateway.html" title="Link opens in a new window" target="_blank">Find out if you’ll be impacted by end of email-to-text service</a>.</p>
<p>Have Business or Internet of Things (IoT) account? <a id="idFirstToReportClicks2" href="https://businessdigital.att.com/email-messaging-gateway" title="Link opens in a new window" target="_blank">Learn how ending email-to-text service might impact you</a>.</p></div></div><hr></div><div id="FAQData"><p><h2>FREQUENTLY ASKED QUESTIONS</h2></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Trump's Tariffs Wipe Out over $6T on Wall Street in Epic Two-Day Rout (421 pts)]]></title>
            <link>https://www.wsj.com/finance/stocks/u-s-stock-futures-fall-further-after-china-retaliates-against-trump-tariffs-3be33fa7</link>
            <guid>43589231</guid>
            <pubDate>Sat, 05 Apr 2025 00:41:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wsj.com/finance/stocks/u-s-stock-futures-fall-further-after-china-retaliates-against-trump-tariffs-3be33fa7">https://www.wsj.com/finance/stocks/u-s-stock-futures-fall-further-after-china-retaliates-against-trump-tariffs-3be33fa7</a>, See on <a href="https://news.ycombinator.com/item?id=43589231">Hacker News</a></p>
Couldn't get https://www.wsj.com/finance/stocks/u-s-stock-futures-fall-further-after-china-retaliates-against-trump-tariffs-3be33fa7: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Annotated Unix Magic Poster (182 pts)]]></title>
            <link>https://unixmagic.net/</link>
            <guid>43589042</guid>
            <pubDate>Sat, 05 Apr 2025 00:04:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://unixmagic.net/">https://unixmagic.net/</a>, See on <a href="https://news.ycombinator.com/item?id=43589042">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>Get ready for some Unix magic... 🪄</p><div id="poster-info"><p>This is the <strong>UNIX Magic Poster</strong>, originally created by <strong>Gary Overacre</strong> in
the mid-1980s and published by UniTech Software.
It was later seen on display at a <a href="https://www.usenix.org/" target="_blank">USENIX
Conference</a>, reflecting its lasting influence in UNIX culture.
Head over to the <a href="https://github.com/drio/unixmagic" target="_blank">repo</a> if you’d like to
contribute!</p><p>UNIX has been a major influence on my career
from the very beginning. My first exposure to UNIX was during my college years,
when I had to write most of my first-year programming assignments on terminals
connected to an <a href="https://en.wikipedia.org/wiki/HP-UX">HP-UX</a> main server.
I was immediately captivated by the simplicity
and power UNIX offered—especially compared to the operating systems I had used
before, like DOS and Windows.</p><p>That experience changed the way I thought about computers. From that point on,
I never looked back—UNIX has been my constant companion in my computing journey
ever since.
This project is my humble rendition—a celebration of UNIX and its lasting impact
on me.</p></div><div><div id="annotation-01-shell"><p>The prominent position of the shell in the UNIX Magic poster reflects its
central role in UNIX systems. The shell was (and still is) the primary
interface for interacting with the kernel, serving as the workbench of the UNIX
user. It is an incredibly powerful tool, allowing users to launch and
coordinate processes, perform complex computations, and interface directly with
the operating system.</p><p>The shell is not just an interface; it is also a full programming language.
Users can write scripts to automate tasks, control processes, and build
pipelines to process data efficiently. This makes the shell both interactive
and programmable—something remarkably different from other operating systems of
its time.</p><p>While many shells exist today, the original was the Bourne shell (sh), which
laid the foundation for everything that followed.</p><p>Finally, I want to emphasize that the shell is the gateway to UNIX power. It is
the first point of contact when learning UNIX, and mastering it unlocks the
system’s full potential. I believe the poster captures this perfectly—the shell
is at the heart of the wizard’s magic because it is the gateway to controlling
the system.</p></div><div id="annotation-02-man"><p>The <a href="https://man7.org/linux/man-pages/man1/man.1.html">man(1)</a>
command (short for manual) is used to display online reference manuals (man
pages) for commands, system calls, configuration files, and other aspects of
the system. man provides detailed documentation on how to use a command,
including its options, usage examples, related files, and other pertinent
details.</p><p>There’s some ambiguity as to what the interpretation of the man in the window
could represent.
The man is holding a scythe, which could represent <a href="https://en.wikipedia.org/wiki/Zombie_process">reaping a process</a>.
Under Unix like systems, process reaping is when a parent process reads
the exit status of a spawned child process, allowing the child process
to be removed from the process table.</p><p>Others have suggested that the man could represent a <a href="https://en.wikipedia.org/wiki/Hacker">hacker</a>,
a term used to mean a skilled or clever programmer.</p></div><div id="annotation-03-pipes"><p><a href="https://en.wikipedia.org/wiki/Pipeline_(Unix)">Pipes</a> are a
foundational feature in Unix that enable you to combine simple utilities into
more powerful workflows. By passing data from one command’s output to another
command’s input, pipes allow you to quickly create flexible, efficient, and
maintainable solutions directly at the command line. They are denoted in the
shell by the vertical bar character (|).</p></div><div id="annotation-04-leak"><p>A memory leak occurs when a computer program improperly manages memory
allocation, failing to release memory that’s no longer needed. Over time, these
un-freed allocations accumulate, reducing the amount of available memory for
other processes and potentially leading to slowdowns or crashes.</p></div><div id="annotation-05-kandr"><p>In the context of Unix history these three sets of initials refer to legendary
figures in the creation and development of Unix:</p><p>dmr: Dennis M. Ritchie, co-creator of Unix and creator of the C programming
language.</p><p>kt: Ken Thompson (often just “ken” in historical Unix references), co-creator
of Unix alongside Ritchie.</p><p>bwk: Brian W. Kernighan, co-author of several influential Unix programs and
books (including “The C Programming Language” and “The UNIX Programming
Environment”).</p></div><div id="annotation-06-c"><p>C is deeply intertwined with the history and development of the Unix operating
system. Created by Dennis M. Ritchie at Bell Labs in the early 1970s, C was
used to rewrite Unix from low-level assembly into a higher-level language. This
shift made Unix significantly more portable across different hardware
platforms, fueling its rapid adoption in academia and industry. Over time, C
evolved into one of the most influential and widely used programming languages
in history.</p></div><div id="annotation-07-backpressure"><p>When two processes communicate over a pipe, the process sending data is the
producer, and the process receiving data is the consumer. The OS maintains a
buffer to temporarily store data if the producer sends data faster than the
consumer can process it. However, if the buffer becomes full, the OS will block
the producer until space is available.</p><p>Was that the intention of the artist? You decide—is the valve handle in the
pipes a clever reference to UNIX back pressure, or is that a stretch?</p></div><div id="annotation-08-daemons"><p><a href="https://en.wikipedia.org/wiki/Daemon_(computing)">Daemons</a> are programs that run in the background
and are often started at system boot time. They respond to network requests, hardware activity,
or other programs by performing some task. Daemons such as cron may also perform
defined tasks at scheduled times.</p><p>The term was coined by the programmers at MIT’s Project MAC. It is inspired by Maxwell’s demon and
greek mythology, acting as a metaphor for a supernatural being working in the background.</p></div><div id="annotation-09-su"><p>The <a href="https://www.man7.org/linux/man-pages/man1/su.1.html">su</a> command (short for “substitute user” or
“switch user”) is used to start a shell under a different user account.
Typically, one of the most common uses of su is switching to the superuser
(root) account to gain administrative privileges.</p></div><div id="annotation-10-null"><p>The <a href="https://en.wikipedia.org/wiki/Null_device">Null device</a> is a device file that discards all data written
to it but reports that the write operation succeeded.
This device is called /dev/null on Unix and Unix-like systems.
The null device is typically used for disposing of unwanted output streams of a process, or as a convenient empty file for input streams.</p></div><div id="annotation-11-oregano"><p>From <a href="https://groups.google.com/g/comp.unix.wizards/c/qkiqSJWgEPE/m/E5BwZYMvXwAJ">Sarah Groves Hobart</a>:</p><blockquote><p>The oregano is reputedly referring to an incident in which one of the
original folks involved with BSD was hassled for coming across the
Canadian/U.S. border with a bag of what was assumed to be an illegal
substance, and turned out to be oregano.</p></blockquote></div><div id="annotation-12-tar"><p><a href="https://en.wikipedia.org/wiki/Tar_(computing)">Tar</a> is a software tool for collecting multiple
files into a single archive file, often called a tarball.
The name is derived from “tape archive”, as it was originally developed to write
data to sequential I/O devices with no file system of their own, such as devices that use magnetic tape.</p><p>The command-line utility was first introduced in the Version 7 Unix in January 1979, replacing the <code>tp</code> program (which in turn replaced <code>tap</code>).</p></div><div id="annotation-13-fork"><p>In multitasking operating systems, processes need a way to create new processes.
<a href="https://en.wikipedia.org/wiki/Fork_(system_call)">Forking</a> a process is typically the
only way of doing so in Unix-like systems.</p><p>One of the earliest references to a fork concept appeared in A Multiprocessor System Design by Melvin Conway, published in 1962.</p></div><div id="annotation-14-shell-script"><p>A <a href="https://en.wikipedia.org/wiki/Shell_script">shell script</a> is a computer program designed to be run by a Unix shell.
The term is also used more generally to mean the automated mode of running an operating system shell.</p></div><div id="annotation-15-awk"><p><a href="https://en.wikipedia.org/wiki/AWK">AWK</a> is a domain specific language designed for text
processing, either run directly on files or used as part of a pipeline.</p><p>AWK was created at Bell Labs in the 1970s, and its name is
derived from the surnames of its authors: Alfred Aho, Peter Weinberger and Brian Kernighan.</p></div><div id="annotation-16-usr"><p>The “user file system” (<a href="https://en.wikipedia.org/wiki/Unix_filesystem#Conventional_directory_layout"><code>/usr</code></a> ),
is a directory holding user home directories, including executables, libraries and shared resources.</p><p>The spool of threads may be also a reference to <strong>Unix threads</strong>, which are lightweight processes.<br>A <strong>process</strong> is an instance of a running program, with its own separate memory space.<br>A <strong>thread</strong>, on the other hand, is a <strong>lighter-weight unit of execution within a process</strong>.<br>Threads <strong>share the same memory space</strong> as the process but <strong>can run independently</strong>, allowing for:</p><ul><li><strong>Parallelism:</strong> Different parts of a program can run at the same time.</li><li><strong>Efficiency:</strong> Threads are faster to create and use fewer system resources compared to processes.</li><li><strong>Easy Data Sharing:</strong> Threads can easily access and modify shared data since they operate within the same memory space.</li></ul><p>This makes threads a powerful tool for <strong>concurrent programming</strong> in Unix systems.</p></div><div id="annotation-17-troff"><p><a href="https://en.wikipedia.org/wiki/Troff">Troff</a> is the major component of a document processing system developed by Bell Labs for the Unix operating system.
Troff stands for “typesetter roff”, where <code>roff</code> is a typesetting markup language.
A typical distribution of troff includes macros for many document styles, including ones for the Unix <code>man</code> pages.</p><p>Troff was developed by Bell Labs in th 1970s, where Joseph Ossanna created <code>troff</code> by modifying <code>nroff</code> to support multiple fonts and proportional spacing.</p></div><div id="annotation-18-B"><p><a href="https://en.wikipedia.org/wiki/B_(programming_language)">B</a> is a programming language
designed for recursive, non-numeric, machine-independent applications.
B was derived from BCPL, and its name may possibly be a contraction of BCPL.
B is an almost extinct programming language, superseded by the more modern C language.</p><p>B was developed at Bell Labs circa 1969 by Ken Thompson and Dennis Ritchie.</p></div><div id="annotation-19-cat"><p><a href="https://en.wikipedia.org/wiki/Cat_(Unix)"><code>cat</code></a> derives its name from its function of
(con)<em>cat</em>enating files together.</p><p>The original version of <code>cat</code> was part of version 1 of Unix, and written by Ken Thompson and Dennis Ritchie.</p></div><div id="annotation-20-uucp"><p><a href="https://en.wikipedia.org/wiki/UUCP"><code>uucp</code></a> is one of the programs in the suite of Unix-to-Unix Copy programs.</p><p>UUCP was originally written at AT&amp;T Bell Laboratories by Mike Lesk.</p></div><div id="annotation-21-boot"><p>I have to admit, this object looks more like a boot than a sock, but I find it
hard to believe that the author would leave out a reference to sockets,
considering how important they are—not only in UNIX but in the history of
operating systems.</p><p>For that reason, I see two possibilities:</p><ul><li><p>If it is a boot, it may represent the booting process of the UNIX operating
system, a fundamental part of bringing the system to life.</p></li><li><p>Alternatively, if it is a sock (granted, a thick and oversized one! 😄), it
is likely a playful reference to UNIX network sockets. Network sockets were an
abstraction pioneered by UNIX in BSD UNIX (4.2BSD, 1983). Sockets provided a
unified interface for interprocess communication (IPC), enabling processes to
communicate both locally (on the same machine) via UNIX domain sockets, and
over a network using TCP/IP. This innovation became foundational to modern
networking, and the socket API was later adopted by all major operating
systems, shaping how network programming is done today.</p></li></ul><p>For more on the history of BSD sockets, see <a href="https://en.wikipedia.org/wiki/Berkeley_sockets">Berkeley Sockets –
Wikipedia</a>, or read the
official Linux man page for
<a href="https://man7.org/linux/man-pages/man2/socket.2.html"><code>socket()</code></a>.</p></div><div id="annotation-22-make"><p><a href="https://en.wikipedia.org/wiki/Make_(software)">Make</a> is a command line interface
that reads in a configuration <code>Makefile</code> that is often used in code executable
compilation and automation.
Before Make, building on Unix mostly consisted of shell scripts written for each program’s codebase.
Make’s dependency ordering and out-of-date checking makes the build process more robust and more efficient.</p><p>Stuart Feldman was the original author of Make, completing an early version in April 1976 at
Bell Labs.</p></div><div id="annotation-23-spawn"><p>Spawning is the process of loading and executing a new child process.
Closely related is the idea of <code>fork</code> and <code>exec</code> that can be used
to simulate spawning, by forking a process, having the parent terminate
and <code>exec</code>ing the child into the desired spawn process.</p><p>POSIX allow for the concept of spawning by itself that can be made
to be more efficient than <code>fork</code> and <code>exec</code>.</p><p>The spawn metaphor had its early use in the VMS operating system from 1977.</p></div><div id="annotation-24-jfo-nroff"><p><a href="https://en.wikipedia.org/wiki/Nroff"><code>nroff</code></a>, short for “new roff”
is a text-formatting program produces output suitable for simple fixed-width
printers and terminal windows.
It is an integral part of the Unix help system, being used to format man pages for display.</p><p>The letters <em>Jfo</em> stand for Joseph Frank Ossanna
who created the original version of <code>nroff</code> for Version 2 Unix.</p></div><div id="annotation-25-root"><p>The root user is the name often given to the administrator or superuser account
on UNIX systems.
In Unix-like systems, root is the conventional name of the user who has all rights or
permissions to all files and programs in all modes (e.g. single- or multi-user).
The root user can do many things an ordinary user cannot, such as changing the
ownership of files and binding to network ports numbered below 1024.</p></div><div id="annotation-26-dates"><p><a href="https://man7.org/linux/man-pages/man1/date.1.html"><code>date</code></a> is a command to display and set a UNIX system date.</p><p>Unix time is currently defined as the number of non-leap seconds which have passed since 00:00:00 UTC on Thursday, 1 January 1970,
which is referred to as the Unix epoch.</p><p>The earliest versions of Unix time had a 32-bit integer incrementing at a rate of 60 Hz, which was the rate of the system clock
on the hardware of the early Unix systems.
Timestamps stored this way could only represent a range of a little over two and a quarter years.</p><p>The current epoch of 1 January 1970 00:00:00 UTC was selected arbitrarily by Unix engineers because it was considered a
convenient date to work with.</p></div><div id="annotation-27-whoami"><p>Users on UNIX systems may want to
switch to other accounts, allowing for switching roles, escalation or deescalation of
privileges or might be logging into multiple machines across networks.
The <a href="https://en.wikipedia.org/wiki/Whoami"><code>whoami</code></a> is a command to tell the invoker
what user they are logged in as.</p><p>The earliest versions were created in 2.9 BSD.</p></div><div id="annotation-28-pwd"><p><a href="https://man7.org/linux/man-pages/man1/pwd.1.html"><code>pwd</code></a> is a simple command
that shows your current location in the filesystem. Is it a coincidence that
<code>pwd</code> is visually presented in a box? Maybe. But perhaps it’s a visual clue,
suggesting that <code>pwd</code> is a small, self-contained tool—like many classic UNIX
commands.</p></div><div id="annotation-29-mbox"><p><code>mbox</code> is a reference to the mail format from the early days of UNIX. UNIX was
one of the first operating systems to come with built-in email capabilities,
and it did so while staying true to its mantra: “everything is a file.” In the
<code>mbox</code> format, all email messages are stored in a single file, with new
messages simply appended to the end. By default, users’ mail was stored in
<code>/usr/mail/&lt;username&gt;</code>. This design naturally enabled the integration of
system logs and notifications to be sent via email—further embedding email as
a core part of the UNIX experience.</p></div><div id="annotation-30-login"><p><code>login</code> is the gateway into the system. It authenticates the user, initializes
the environment by changing to the user’s home directory, and spawns a process
running as the user (with their <code>uid</code> and <code>gid</code>), using their shell of choice.</p><p>Additionally, the standard input and output need to be attached to a terminal:
this could be a <strong>pseudo-terminal</strong> (if you are in a graphical interface or
using <code>ssh</code>), or a <strong>physical terminal</strong> (as was common at the time).</p></div><div id="annotation-31-spells"><p><a href="https://en.wikipedia.org/wiki/Spell_(Unix)"><code>spell</code></a> is the standard English
language spell checker for Unix and other Unix-like operating systems.</p><p>The original version was written by Stephen C. Johnson for Version 6 UNIX while at Bell Labs in 1976.</p></div><div id="annotation-32-curses"><p>The <a href="https://en.wikipedia.org/wiki/Curses_(programming_library)"><code>curses</code></a> programming
library provides a layer of abstraction over sending graphical and positioning
data directly to allow for graphical elements and cursor positioning in Unix terminals.
The name is a pun on the term “cursor optimization”.</p><p>The first curses library was written by Ken Arnold and originally released with BSD UNIX.</p></div><div id="annotation-33-diff"><p><a href="https://en.wikipedia.org/wiki/Diff"><code>diff</code></a> is a data comparison tool that computes
and displays the differences in the contents of files.
<code>diff</code> is line oriented and is often used to determine changes between two versions
of the same file.
For example, <code>diff</code> can be used to find which lines have changed in a source file,
allowing for only transmission of the changes, rather than the whole file.</p><p><code>diff</code> as developed in the early 1970s at Bell Labs.</p></div><div id="annotation-34-traps"><p>Traps, or <a href="https://en.wikipedia.org/wiki/Signal_(IPC)">signals</a>, are sent
from the kernel to a process, notifying the process of an event.
Common signals are interrupt, terminate or kill, with some signal
handling useful for inter-process communication and coordination.</p></div><div id="annotation-35-shell-symbols"><h3 id="shell-symbols-on-the-wizards-cloak">Shell Symbols on the Wizard’s Cloak</h3><p>The wizard’s cloak is decorated with symbols that represent some of the most
important special characters used in the UNIX shell. These symbols are the
“runes” of UNIX power, allowing users to combine commands, redirect input and
output, and control processes with precision. Mastery of these symbols is part
of what transforms a regular user into a “UNIX wizard.”</p><h4 id="--job-control"><code>%</code> – Job Control</h4><p>Used to <strong>refer to background jobs in the shell</strong>.</p><ul><li><code>jobs</code> → List background jobs.</li><li><code>fg %1</code> → Bring <strong>job 1 to the foreground</strong>.</li><li><code>bg %2</code> → Resume <strong>job 2 in the background</strong>.</li></ul><h4 id="--variable-expansion--shell-prompt"><code>$</code> – Variable Expansion &amp; Shell Prompt</h4><p>Represents <strong>variables and parameter substitution</strong>.</p><ul><li><code>$HOME</code> → Expands to <strong>the value of the <code>HOME</code> environment variable</strong>.</li><li><code>$?</code> → Shows <strong>the exit status of the last command</strong>.</li></ul><p>Also often <strong>appears as the shell prompt</strong> for <strong>a regular user</strong>.</p><h4 id="--output-redirection"><code>&gt;</code> – Output Redirection</h4><p>Redirects <strong>standard output to a file</strong>.</p><ul><li><code>ls &gt; files.txt</code> → Writes the <strong>output of <code>ls</code> into <code>files.txt</code></strong> (overwriting it).</li></ul><h4 id="--input-redirection"><code>&lt;</code> – Input Redirection</h4><p>Redirects <strong>standard input from a file</strong>.</p><ul><li><code>sort &lt; input.txt</code> → Reads <strong>input from <code>input.txt</code> instead of the keyboard</strong>.</li></ul><h4 id="--wildcard-glob"><code>*</code> – Wildcard (Glob)</h4><p><strong>Matches any number of characters</strong> in filenames.</p><ul><li><code>ls *.txt</code> → Lists <strong>all files ending in <code>.txt</code></strong>.</li><li><code>rm *</code> → <strong>Deletes all files in the current directory</strong> (Dangerous!).</li></ul><h4 id="--history-expansion"><code>!</code> – History Expansion</h4><p><strong>Expands to previously executed commands</strong>.</p><ul><li><code>!!</code> → Repeats <strong>the last command</strong>.</li><li><code>!ls</code> → Repeats <strong>the last command starting with <code>ls</code></strong>.</li><li><code>!$</code> → Expands <strong>to the last argument of the previous command</strong>.</li></ul><h4 id="---test--conditional-expressions"><code>[</code> <code>]</code> – Test / Conditional Expressions</h4><p>Used <strong>in shell conditionals</strong> and <strong><code>if</code> statements</strong>.</p><ul><li><code>[ -f file.txt ]</code> → <strong>Tests if <code>file.txt</code> is a regular file</strong>.</li><li>Common <strong>in shell scripting</strong>:<div><pre tabindex="0"><code data-lang="bash"><span><span><span>if</span> <span>[</span> -f file.txt <span>]</span>; <span>then</span>
</span></span><span><span>    echo <span>"File exists!"</span>
</span></span><span><span><span>fi</span>
</span></span></code></pre></div></li></ul></div><div id="annotation-36-overflows"><p>This may be a bit of a stretch, but considering how prevalent buffer overflows
have been in the history of UNIX, the imagery might be intentional. The
overflowing liquid from the shell could be a visual reference to a buffer overflow.</p><p>A buffer overflow occurs when a program writes more data into a buffer (a fixed
block of memory) than it can hold. The excess data “spills over” into adjacent
memory, often overwriting critical information like return addresses, which can
cause crashes or open security vulnerabilities. Buffer overflows were (and still
are) a classic type of exploit in C programming on UNIX systems.</p><p>For more information, see
<a href="https://en.wikipedia.org/wiki/Buffer_overflow">Buffer overflow – Wikipedia</a>.</p></div><div id="annotation-37-tee"><p>The T shape of the pipes may also reference the
<a href="https://man7.org/linux/man-pages/man1/tee.1.html"><code>tee</code></a> command, a classic
utility in UNIX. The <code>tee</code> command is used to split the output of a command,
sending it to both a file and the next command in a pipeline.</p></div><div id="annotation-38-tree-graph"><p>The tree-like shape of the liquid the wizard is manipulating may be a reference to
the UNIX filesystem hierarchy. UNIX organizes files and directories in a tree
structure, starting from the root (<code>/</code>) and branching into subdirectories.</p><p>Navigating this structure is a fundamental part of working with UNIX, typically done
through the shell using commands like <code>cd</code>, <code>ls</code>, and <code>pwd</code>. The tree shape could
symbolize this concept, visually representing how users move through directories,
access files, and execute commands.</p><p>Alternatively, the branching form could represent recursive operations or the
parent-child relationships in process trees, both key concepts in UNIX systems.</p><p>Some modern readers might associate the tree shape with version control systems like
Git, where branching is a common visual metaphor. However, this is likely not the
intended reference, as branching version control workflows were not as prevalent in
the UNIX world at the time the poster was created. Tools like SCCS (1972) and RCS
(1982) were available, but they focused more on linear versioning and file locking
than the branching models popular today.</p></div><div id="annotation-39-skull"><p>The skull connected to the shell may symbolize <code>/dev/null</code>, the special UNIX
device that discards all data written to it.
In UNIX, redirecting output to
<code>/dev/null</code> effectively sends it into a “black hole,” where it is lost
forever.
Output redirection is part of a broader
<a href="https://en.wikipedia.org/wiki/Standard_streams">standard stream</a> UNIX concept that
allows outputs of one process to be redirected to the input of another.</p><p>Another interpretation is that the spigot is reminiscent of a gargoyle, perhaps
referencing a UNIX <a href="https://en.wikipedia.org/wiki/Daemon_(computing)">daemon</a>
process.</p><p>See the (<a href="#annotation-10-null">/dev/null</a>) mark.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The 'Judicial Black Hole' of El Salvador's Prisons Is a Warning for Americans (307 pts)]]></title>
            <link>https://www.rollingstone.com/politics/politics-features/el-salvador-prisons-warning-americans-trump-1235309721/</link>
            <guid>43588970</guid>
            <pubDate>Fri, 04 Apr 2025 23:52:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.rollingstone.com/politics/politics-features/el-salvador-prisons-warning-americans-trump-1235309721/">https://www.rollingstone.com/politics/politics-features/el-salvador-prisons-warning-americans-trump-1235309721/</a>, See on <a href="https://news.ycombinator.com/item?id=43588970">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>
	On March 27, 2022, on the heels of a weekend marked by dozens of gang-related murders, <a href="https://www.rollingstone.com/t/el-salvador/" id="auto-tag_el-salvador" data-tag="el-salvador">El Salvador</a>’s President <a href="https://www.rollingstone.com/t/nayib-bukele/" id="auto-tag_nayib-bukele" data-tag="nayib-bukele">Nayib Bukele</a> and his legislature plunged the country into a <em>régimen de excepción</em> — a state of exception — and declared war against the gangs. The state of exception suspended fundamental rights like freedom of assembly and association, the right to legal representation, and the right to see a judge within 72 hours of detention. The age of criminal responsibility was lowered to 12.</p>



<p>
	The crackdown that ensued saw tens of thousands of arrests of suspected gang members, who were tried en masse and disappeared into the nation’s prison system without even the illusion of due process. Allegations of torture, extrajudicial killings, and other human rights abuses abounded — and still do. Bukele is serving a second term despite a constitutional prohibition against it. The state of exception — originally a 30-day decree —&nbsp; has been extended 37 times. Over the course of three years, human rights in El Salvador have crumbled under its boot.

	</p>




<p>
	It’s here that President <a href="https://www.rollingstone.com/t/donald-trump/" id="auto-tag_donald-trump" data-tag="donald-trump">Donald Trump</a> hopes<strong> </strong>to find a workable model for his own <a href="https://www.rollingstone.com/t/immigration/" id="auto-tag_immigration" data-tag="immigration">immigration</a> crackdown, and the potential eradication of opposition to his nativist, right-wing agenda.&nbsp;</p>



<p>
	In March, the Trump administration sent three plane loads of primarily Venezuelan migrants to El Salvador, where they were <a href="https://www.nytimes.com/2025/03/19/world/americas/deportation-videos-el-salvador.html" rel="nofollow" target="_blank">greeted by professional camera crews</a>, blinding lights, and soldiers clad in military fatigues who manhandled them as they were frogmarched, shaved, and transported into the Terrorism Confinement Center (CECOT) — a massive prison that functions as both a detention center, and a propaganda soundstage for the Bukele government.<strong> </strong>The planes landed in El Salvador despite a court order from a federal judge <a href="https://www.rollingstone.com/politics/politics-news/trump-deport-alleged-gang-members-court-order-1235297412/">blocking the administration</a> from deporting the detained migrants to a third nation without appropriate due process. The Trump administration paid El Salvador <a href="https://www.cnn.com/2025/03/16/politics/trump-administration-deportations-alien-enemies-act/index.html" rel="nofollow" target="_blank">at least $6 million</a> for the stunt, and the migrants have been thrust into a legal void that few manage to escape.&nbsp;


</p><section>
			

	<h2 id="section-heading">

	
		Editor’s picks
	
	</h2>

	
	
</section>




<p>
	“The Venezuelans have been sent to basically a judicial black hole,” says Noah Bullock, executive director of Cristosal, a leading human rights organization that has represented victims and the families of those internally displaced and disappeared in Central America for more than 20 years. “There’s already tens of thousands of El Salvadorans who are in it, who have not been able to exercise a defense, who have been subjected to systematic torture. Hundreds — probably more like thousands — have been killed.”&nbsp;

	</p>




<p>
	Ruth López, a <a href="https://www.elsalvadornow.org/2024/12/03/bbc-nominates-lawyer-ruth-eleonora-lopez-among-the-100-most-influential-women-on-the-planet-in-2024-la-cadena-publica-britanica-bbc-nomina-a-la-abogada-ruth-eleonora-lopez-entre-las-100-muje/" rel="nofollow" target="_blank">renowned</a> Salvadoran human rights lawyer who works as a chief legal officer at Cristosal, says the organization has been contacted by roughly 70 relatives and families of individuals caught in the deportation stunt, including “migrants without a prior criminal record, people who were detained on the street or upon entering the United States, others who had previously applied through the CPB One app or had existing formal asylum processes.”</p>



<p>
	López says it’s often Cristosal’s job to explain to families — who in these cases live primarily outside of El Salvador — the reality of what the detained person will face, and the challenges of fighting for their release. “Here in Salvador, between March 27, 2022, and December 31, 2024, there have been over 7,200 writs of habeas corpus submitted just to the Supreme Court. We can estimate that the rulings in favor of the people on those cases don’t surpass one percent,” she says. “These cases are also unique because these are not Salvadoran citizens, and additionally the government of El Salvador is being paid to hold them in an irregular situation — an unconstitutional situation.”&nbsp;</p>



<p>
	El Salvador’s state of exception — billed as a necessary measure to eliminate crime and corruption — has led to the imprisonment of thousands of innocents alongside dozens of community leaders, union leaders, and human rights defenders. The situation in El Salvador may seem like a far cry from the institutions of the United States, which for decades have been revered as the global gold standard for democratic governance. But the erosion of individual rights, and the Trump administration’s willingness to recreate — even partially — the Bukele model at home, should be a warning and a wake up call for Americans.&nbsp;


</p><section>
			

	<h2 id="section-heading">

	
		Related Content
	
	</h2>

	
	
</section>




<p>
	“America constantly talks about corruption elsewhere, this assumption that American institutions are incorruptible,” Bullock says. “In the end, human rights, corruption, autocracy — from an American exceptionalist mindset — is for the third world, and it makes it hard for people to see when it’s playing out in front of their faces.”&nbsp;</p>



<p>
	In the aftermath of the Salvadoran Civil War — a more than decade-long conflict <a href="https://www.rollingstone.com/politics/politics-features/jimmy-carter-oscar-romero-legacy-el-salvador-1235224083/">made exponentially worse</a> by the meddling of the United States — the country struggled to create a new egalitarian state, at the the same time that the American government began deporting undocumented migrants with criminal convictions from California <a href="https://newamericanstoryproject.org/context/brief-history-of-el-salvador/" rel="nofollow" target="_blank">back to Central America</a>. The result was the rapid entrenchment and growth of criminal groups within an already unstable El Salvador, and the nation quickly became one of the world’s most dangerous countries. When Bukele entered office in 2019, the murder rate in El Salvador was 38 per 100,000 people, and gangs outright controlled parts of rural El Salvador. While it’s undeniable that the Bukele crackdown has reduced violent crime in the nation, the extent of its success is a matter of debate, as crime statistics are <a href="https://www.dw.com/es/los-presuntos-%C3%A9xitos-de-nayib-bukele-en-la-lucha-contra-la-violencia/a-63107030" rel="nofollow" target="_blank">controlled by the Bukele government</a>. Allegations have also persisted that Bukele negotiated <a href="https://apnews.com/article/nayib-bukele-el-salvador-gangs-c378285a36d55c18f741c3f65892f801" rel="nofollow" target="_blank">a backdoor truce</a> between some of the nation’s <a href="https://www.dropsitenews.com/p/secret-bukele-trump-deal-grenas" rel="nofollow" target="_blank">most powerful gangs</a>. At the same time, over <a href="https://www.cnn.com/2022/12/15/americas/el-salvador-war-on-gangs-bukele-intl-latam/index.html" rel="nofollow" target="_blank">two percent</a> of the nation’s population is now incarcerated — the highest percentage in the world — and reports of state-sponsored violence and human rights abuses have skyrocketed.&nbsp;

	</p>




<p>
	“Of course we were on board with neutralizing the gangs and the criminal elements, but that wasn’t the only thing the state of exception was for,” says Samuel Ramirez, founder of Movimiento de Víctimas del Régimen (Movement of Victims of the Regime), a protest and advocacy group that works with thousands of individuals and families affected by the state of exception. Bukele “used the gangs to create a spectacle, to command the attention of the world” he says.&nbsp;</p>



<p>
	While polling consistently shows that Bukele is quite popular in El Salvador, surveys also show <a href="https://freedomhouse.org/country/el-salvador/freedom-world/2025" rel="nofollow" target="_blank">a steady increase</a> in fear of public criticism of the government — to degrees that sometimes match the president’s approval rating. “There’s a sector of the population that feels better, because it’s true that we perceive more security, we’re no longer afraid of the gangs. Now we’re afraid of the regime,” says Ramirez. “We see soldiers everywhere, police everywhere, patrol cars, and they’re arresting people.” Ramirez notes that on top of Bukele’s control of all three branches of government, and repression of <a href="https://latamjournalismreview.org/articles/journalists-fear-renewed-hostility-towards-the-press-with-bukeles-re-election-in-el-salvador/" rel="nofollow" target="_blank">the free press</a>, families and activists he works with fear retaliation or arrest if they speak out against abuses or advocate for their imprisoned relatives. The murder rate — a statistic <a href="https://foreignpolicy.com/2024/08/08/el-salvador-bukele-crime-homicide-prison-gangs/#:~:text=In%20May%202021%2C%20Bukele's%20government,of%20the%20nation's%20homicide%20figures." rel="nofollow" target="_blank">provided by</a> the Bukele government — is down, but doesn’t include those who die in custody of the prison system or are killed by police.&nbsp;</p>



<p>
	El Salvador’s prisons have long been a hotbed of arbitrary detention and abuse, but the Bukele regime has operated under new levels of impunity. Officers are reportedly given daily <a href="https://www.hrw.org/news/2024/12/20/el-salvador-statement-us-house-tom-lantos-human-rights-commission#:~:text=Many%20arrests%20appear%20to%20be,number%20of%20people%20per%20day." rel="nofollow" target="_blank">arrest quotas</a>, transfers to other prisons are frequent, and the government closely guards information about detainees from families, attorneys, and their advocates. The state of exception means little more is needed than the suspicion of an arresting officer to secure a lengthy stay in prison. Detainees are <a href="https://www.reuters.com/world/americas/el-salvador-launches-mass-trial-nearly-500-accused-gang-leaders-2024-02-08/" rel="nofollow" target="_blank">tried en masse</a>, with no opportunity to present counter evidence — or even access to the evidence against them — and are often handed decades-long prison sentences. “People [are] being held for now three full years [since the state of exception was imposed], in some cases, without even going to trial,” Bullock says.&nbsp;</p>



<p>
	As the Trump administration looks to crack down on undocumented immigration — using the specter of crime, gang violence, and “terrorism” as the justification for their dismissal of established law — their playbook is looking increasingly similar to Bukele.&nbsp;

	</p>




<p>
	Over the weekend, the American Civil Liberties Union (ACLU) <a href="https://x.com/reichlinmelnick/status/1906378176856572001?s=46" rel="nofollow" target="_blank">obtained a copy</a> of a “Validation Guide,” used by U.S. Immigrations and Customs Enforcement (ICE) to determine if a Venezuelan detainee was <a href="https://www.rollingstone.com/politics/politics-news/ice-list-venezuelan-immigrants-gang-members-1235306641/">a member of the Tren de Aragua (TDA) gang</a>, and subject to removal under the Alien Enemies Act — an <a href="https://www.brennancenter.org/our-work/research-reports/alien-enemies-act-explained" rel="nofollow" target="_blank">18th century law</a> that allows the government to arrest, detain, and deport men over the age of 14 who are citizens of an enemy nation during times of war. Citing this infamous law — which was used to justify the internment of Japanese Americans during World War II — is a major stretch. The United States is not at war with Venezuela.</p>



<p>
	The guide included a points system through which suspected members are graded on their degree of suspected affiliation with the gang (scoring anything above a five is potentially enough to be declared an “alien enemy”). Criteria include tattoos and other symbolism; residing with someone declared a member of TDA; group photos featuring two or more “known” TDA members; and any form of communication with alleged members of TDA.&nbsp;</p>



<p>
	The administration’s guide does not require due process; the supposed links between the detainee and a criminal group are not presented as evidence before a judge at a deportation hearing. The arresting officer has discretion, much like in El Salvador.&nbsp;</p>



<p>
	Following the deportations in March, the Trump administration resisted releasing information regarding the identities of those arrested, and any evidence against them. The names of the more than 200 men deported were not made public <a href="https://www.cbsnews.com/news/venezuelans-deported-el-salvador-names/" rel="nofollow" target="_blank">until CBS News</a> obtained the full list from an anonymous source last month.&nbsp;</p>



<p>
	The Trump administration <a href="https://abcnews.go.com/US/noncitizens-deported-alien-enemies-act-criminal-records-ice/story?id=119912375" rel="nofollow" target="_blank">admitted in court documents</a> that “many” of those sent to El Salvador did not have criminal records. As more information about those deported was unearthed, it became clear that some of the “evidence” against them was as absurd as a tattoo of <a href="https://cnnespanol.cnn.com/2025/03/21/eeuu/tatuajes-ordinarios-deportados-el-salvador-ap" rel="nofollow" target="_blank">a Real Madrid CF</a> logo, or an <a href="https://www.msnbc.com/all-in/watch/-incredible-trump-admin-reportedly-deports-man-over-autism-awareness-tattoo-235625029616" rel="nofollow" target="_blank">autism awareness</a> tattoo.&nbsp;</p>



<p>
	Under the Alien Enemies Act, they have no recourse to challenge their removal, especially when they’re sent into a third country’s penal system as part of a financial agreement to hold prisoners.&nbsp;</p>



<p>
	The videos produced by Bukele’s government in CECOT make clear the prison is also a propaganda casting department. Inmates are more often than not shirtless, displaying large tattoos and body art supposedly indicating their affiliations with transnational gangs. It’s an image both Bukele and the Trump administration are actively searching for when they make arrests — even though, for years now, gangs have been <a href="https://www.nbcnews.com/id/wbna22279005" rel="nofollow" target="_blank">increasingly reluctant</a> to <a href="https://www.nbcnews.com/news/latino/tattoos-deported-venezuelans-not-necessarily-gang-members-rcna197089" rel="nofollow" target="_blank">brand members</a> with clearly identifying, permanent symbols and tattoos as governments crack down on organized crime. More often than not, arrests in El Salvador are based on anonymous tips to police, or social and geographic proximity to someone previously arrested.<strong>&nbsp;</strong>

	</p>




<p>
	On Tuesday, a report from <em>The Atlantic </em>revealed that in one court filing, the Trump administration admitted it had <a href="https://www.rollingstone.com/politics/politics-news/trump-admin-admits-wrongfully-deported-el-salvador-1235307858/">wrongfully deported</a> a man with protected status to El Salvador. The man, Kilmar Abrego Garcia, previously won a legal battle against the Trump administration after being accused in 2019 of being a member of the gang MS-13, and was granted protected status that should have prevented his removal to El Salvador.&nbsp;</p>



<p>
	While the Trump administration acknowledged that Abrego Garcia had been deported due to an “administrative error,” they claimed neither they nor the court had standing to order the U.S. government to secure his return, as he was in the custody of El Salvador and outside of their jurisdiction. Despite that logic, the Trump and Bukele administrations last week <a href="https://sv.usembassy.gov/secretary-kristi-noem-visits-el-salvador/" rel="nofollow" target="_blank">inked</a> a “memorandum of cooperation” in which the two countries agreed to work together to deport “fugitives” who are wanted in El Salvador back to the Central American nation.&nbsp;</p>



<p>
	Department of Homeland Security Secretary Kristi Noem thanked Bukele for his “partnership” <a href="https://x.com/AdamParkhomenko/status/1905050186977624065" rel="nofollow" target="_blank">in a video</a> filmed inside CECOT late last month. Before a backdrop of shirtless prisoners crowded into cage-like cells, Noem — sporting a $50,000 <a href="https://www.nytimes.com/2025/03/28/style/kristi-noem-venezuela-prison-rolex-watch.html" rel="nofollow" target="_blank">Rolex Daytona watch</a> — warned that CECOT is “one of the tools in our toolkit that we will use if you commit crimes against the American people.”</p>



<p>
	Bullock, of Cristosal, notes that the Trump administration sending people without convictions to El Salvador with no chance to defend themselves constitutes a “forced disappearance,” a violation of international human rights law. “It also violates another principle of international law, which is called <a href="https://migrationnetwork.un.org/resources/principle-non-refoulement-under-international-human-rights-law" rel="nofollow" target="_blank">non-refoulement</a>, he says. “Non-refoulement is an established tenant of international human rights law that prohibits nations from <a href="https://www.ohchr.org/sites/default/files/Documents/Issues/Migration/GlobalCompactMigration/ThePrincipleNon-RefoulementUnderInternationalHumanRightsLaw.pdf" rel="nofollow" target="_blank">deporting or removing</a> individuals under their control — regardless of their immigration status — into a situation where they are likely to face imminent harm.&nbsp;</p>



<p>
	Bullock continues: “[Bukele] brags about the ways that they use cruel and inhumane treatment in CECOT and our organization has documented amply systematic practices of torture generally in the prison system. So the United States, in doing this, is generating a point of inflection for the international human rights system. The outcome of this is basically the creation of this transnational penal colony where a president, a head of state, can make a deal with President Bukele and disappear undesirables indefinitely.”&nbsp;

	</p>




<p>
	Disappeared is an apt description for the state of those in El Salvador’s prisons. Cristosal and other advocacy groups working with the families of the detained say that CECOT is just “the public face” of a much larger system of prisons in El Salvador holding the vast majority of those arrested under the state of exception. The Bukele administration makes it nearly impossible to track the whereabouts of an arrestee once they’ve entered the system. Family members are not allowed contact with inmates, and are given little information on their condition and location. Release papers, if they manage to secure them, <a href="https://www.vozdeamerica.com/a/el-salvador-no-excarcela-a-sus-presos-pese-a-que-tienen-cartas-de-liberacion-/7801430.html" rel="nofollow" target="_blank">are often ignored</a>. “We do work with hundreds of families of people, innocent people have been detained, and they don’t even know for sure if they’re alive.” Bullock says. “They bring monthly packages [of basic goods] to the prisons out of fear that their loved ones don’t think they’ve been forgotten, but they have no guarantees or assurances that they’re even there or they ever received the packages.” (In many Latin American countries, prisons do not provide basic goods for inmates, whose families are expected to collect and deliver them to detention centers on a monthly basis.)&nbsp;</p>



<p>
	In 2024, Cristosal <a href="https://cristosal.org/ES/el-silencio-no-es-opcion-informe-completo/" rel="nofollow" target="_blank">published a report</a> detailing alleged torture within El Salvador’s prison system, unreported deaths of inmates, and the systematic dissappearances of those arrested. The organization has received thousands of complaints, investigated over 1,000 specific cases of alleged abuse, and documented the deaths in custody of over 200 prisoners.&nbsp;</p>



<p>
	Cristosal provided <em>Rolling Stone</em> with recorded testimony from a former inmate named Oscar<em> </em>who said he and other detainees are often forced to sign confessions by arresting officers, crammed into cells with over 250 other inmates, and regularly beaten by guards. Oscar describes witnessing food deprivation, denial of medical treatment, frequent transfers (he spent time at several prisons in El Salvador), deaths of inmates due to illness or abuse, and burials in mass graves.&nbsp;</p>



<p>
	In a 2023 <a href="https://cristosal.org/EN/2023/08/17/report-one-year-under-the-state-of-exception/" rel="nofollow" target="_blank">report</a> examining in-custody deaths investigated by the state-run Institute of Legal Medicine (IML), Cristosal was able to corroborate that the institute has investigated at least 28 deaths within prisons that were likely caused by torture. The actual number is estimated to be at least in the hundreds. Deaths in custody are often reported to be the result of chronic disease or natural causes, despite inmates’ families claiming they had no known conditions before being arrested.&nbsp;

	</p>




<p>
	In the case of a 30-year-old man whose IML reports were obtained by Cristosal, “the forensic medical examination of the IML stated that he had died as a result of ‘mechanical asphyxia by strangulation.’ The corpse presented a kind of protuberance at the level of the sternocleidomastoid muscle and hematomas, possibly perpetrated with a rigid object. That is to say, he could have been strangled with a stick, club, or tonfa.”&nbsp;</p>



<p>
	One 24-year-old man, whose family spoke to Cristosal, died of a burst intestine theorized to have been caused by a severe beating. After an initial hospitalization due to malnutrition after seven months in prison, he was granted special release by a judge who told him that the “good news” was that a polygraph determined he was innocent — but the bad news was that he had “terminal renal insufficiency.” He told a relative shortly before he died that at Mariona Prison the “water is hot and tastes like chlorine and they hardly give us food, we get fed once a day, they don’t give us breakfast or lunch only dinner … we wait in line in a large court and everyone who gets food receives two hard blows on the back … so I stopped going out to eat so they wouldn’t hit me, because those blows hurt.”</p>



<p>
	One man previously incarcerated at Mariona testified to Cristosal that at one point, guards “showed up with a bucket of food. We arrived on a Thursday (and it was Monday), the guard asked, ‘Are you hungry?’ When we answered yes, the guard threw the food on the floor, which was full of mud and other dirt, and said, ‘You are only going to pick the food up with your mouth and if you grab it with your hands I will take you out and I will beat you,’ and gave them five seconds to pick up the food with their mouths.”&nbsp;</p>



<p>
	Luisa — a woman whose daughter was arrested by the regime — wondered in an interview with Cristosal why her daughter was being held prisoner. “I would like for someone to come to me and say, ‘Look, here is [the evidence against your daughter] I can prove it,’ but I’ve always said we’re not of a dual-morality.” Luisa notes that since her daughter, who was the primary source of the family’s income, was arrested, she now spends around $120 a month on supplies her daughter needs, taking them to the prison with only the vaguest assurance that they will actually reach her daughter. Thousands of families whose loved ones are lost in the system are now forced to carry a similar financial burden. “Many of them already have a letter of release, they know they are innocent, why don’t they let them go?” Luisa asks.&nbsp;

	</p>




<p>
	It’s into this system that the United States is now sending migrants without trial, with the infliction of cruel and unusual punishment being part of the system’s appeal. The families of those deported from the United States cannot deliver life-saving subsistence packages to inmates. They may not even know where they are. And they will face the additional challenge of having to contend with two hostile governments — one of which is their own — as they work to extricate their loved ones from a foreign penitentiary.&nbsp;</p>



<p>
	Meanwhile, the changes ushered in by the Trump administration are quickly eroding support services in El Salvador. Cristosal has had to <a href="https://episcopalnewsservice.org/2025/02/04/trumps-foreign-aid-freeze-halts-episcopal-affiliated-humanitarian-aid-program-in-central-america/" rel="nofollow" target="_blank">downsize its operations significantly</a> in the wake of Trump and billionaire Elon Musk’s purge of international aid and financial assistance programs. The cuts to their operations are also taking place alongside <a href="https://amnesty.ca/urgent-actions/el-salvador-free-fidel-zavala-and-other-community-leaders/" rel="nofollow" target="_blank">a wave of government retaliation</a> against activists and advocates in El Salvador. “The capacity of the human rights community in El Salvador to respond is significantly diminished,” Bullock says.&nbsp;&nbsp;</p>



<p>
	The biggest challenge, Bullock explains, is helping the families of those who are detained or missing navigate a system in El Salvador that is increasingly serving the interests of the president rather than the people — a pattern he says mirrors the changes rapidly taking place in the United States. “Bukele often talked about his popularity and his electoral victories as a source of legitimacy that makes any institution or norm that doesn’t align with him, illegitimate,” he says. “You hear that same language with President Trump.”&nbsp;</p>



<p>
	The public dialogue taking place between Bukele and the Trump administration is undeniable. In the aftermath of U.S. District Court Judge James Boasberg’s attempt to block the deportation flights, Bukele echoed Republican complaints of obstruction and claimed that the U.S. was “facing a judicial coup” on <a href="https://x.com/nayibbukele/status/1902164881769467923" rel="nofollow" target="_blank">social media</a>. Bukele would know all about it, given that one of his first actions upon gaining control of the legislature in 2021 was to launch a judicial coup within El Salvador. Five Supreme Court justices and the attorney general — who had ruled against Bukele’s attempts at overreach — <a href="https://www.bbc.com/news/world-latin-america-56970026" rel="nofollow" target="_blank">were removed from their positions</a> via votes by the legislature, and replaced by Bukele loyalists.&nbsp;</p>



<p>
	From López’s perspective in El Salvador, the similarities between the two men — and the manner in which they approach power — is clear. “One has to understand that the limits [placed on power] are for the population,” she says.&nbsp;

	</p>




<p>
	Checks and balances are often explained as a mechanism to prevent discord between branches of a government, or resolve disputes, but López argues that their primary function is the “protection of the population” from government abuses and overreach. When those protective systems are attacked and dismantled “the population ends up suffering those consequences.”&nbsp;</p>



<p>
	Trump is currently testing the limits of the United States’ checks and balances, seizing power for the executive through initiatives like he and Musk’s so-called Department of Government Efficiency (DOGE), daring the courts to defy him, and threatening consequences if they do. El Salvador’s state of exception has only been in place for three years — ages for those in it, a blink in the timeline of global politics — but it’s been long enough for democratic norms to crumble virtually unopposed.&nbsp;&nbsp;</p>



<p>
	In a 2023 speech before <a href="https://www.americanrhetoric.com/speeches/nayibbukeleunga78.htm" rel="nofollow" target="_blank">the United Nations General Assembly</a>, Bukele defended his attacks against El Salvador’s judiciary, telling the international community that if his party “had left the same general prosecutor as before, if we had left the magistrates of the previous chamber, if we had left the judges, who many protected and who even issued convictions when we removed them, we would still be the murder capital of the world. If we had listened to them, we would still be losing thousands of Salvadorans to terrorists.”&nbsp;</p>



<p>
	Bukele made similar statements during a decidedly Trumpian speech at the Conservative Political Action Conference (CPAC) in Maryland last year. He <a href="https://www.youtube.com/watch?v=SfgSshYXD98" rel="nofollow" target="_blank">received raucous applause</a> after telling the audience that in order to “cleanse our society,” his government embraced the “unthinkable” and removed “corrupt judges, and corrupt attorneys, and prosecutors,” who — according to him — were practically supportive of the violent criminals he sought to thwart.&nbsp;&nbsp;</p>



<p>
	Trump’s inauguration earlier this year brought with it a purge of career prosecutors and federal attorneys who the president deemed disloyal to the cause, and now threats of impeachment or investigation against jurists who don’t let him have his way. Foreign student activists opposing American policies toward Israel and Gaza have been arrested, stripped of their visas, <a href="https://www.cnn.com/2025/03/31/us/what-we-know-college-activists-immigration-hnk/index.html" rel="nofollow" target="_blank">and deported</a>. “It’s the classic authoritarian proposition that ‘I as the leader am uniquely equipped to solve this crisis and everyone else needs to get out of my way,’” says Bullock.

	</p>




<p>
	“Leaders constantly need emergencies in order to justify the concentration of power, the capture of the state itself, and also they need to create the image of an internal enemy,” Bullock explains.


</p><section>
			

	<h2 id="section-heading">

	
		Trending Stories
	
	</h2>

	
	
</section>




<p>
	Trump has centered his political career around a drumbeat of fear mongering over “invasions” by criminal gangs and undocumented migrants, positioning himself as the only one who can combat them. The beat grew especially intense down the stretch of his most recent presidential campaign. In October, just weeks before the election, Trump drew <a href="https://www.rollingstone.com/politics/politics-news/trump-enemy-from-within-democrats-evil-1235135375/">widespread backlash</a> after repeatedly stating that he intended to squash the threat of the “enemy from within.” One of his first actions upon assuming office in January was to <a href="https://www.whitehouse.gov/presidential-actions/2025/01/declaring-a-national-emergency-at-the-southern-border-of-the-united-states/" rel="nofollow" target="_blank">sign an executive order</a> declaring a national emergency at the southern border, and he’s since used this imaginary war against immigrants as a predicate for a fascist crackdown — one many Americans never thought they’d see.</p>



<p>
	“This deceptive bargain between security and rights will only take the American people down a pathway of loss of rights for all people,” Bullock adds. “A leader who offers that bargain to their population doesn’t do it out of a concern for security, rather to concentrate power and to capture institutions.”</p>
















</div></div>]]></description>
        </item>
    </channel>
</rss>