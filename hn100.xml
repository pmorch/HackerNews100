<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 16 Jun 2024 20:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Experts vs. Imitators (116 pts)]]></title>
            <link>https://fs.blog/experts-vs-imitators/</link>
            <guid>40699079</guid>
            <pubDate>Sun, 16 Jun 2024 18:33:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fs.blog/experts-vs-imitators/">https://fs.blog/experts-vs-imitators/</a>, See on <a href="https://news.ycombinator.com/item?id=40699079">Hacker News</a></p>
Couldn't get https://fs.blog/experts-vs-imitators/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Building SimCity: How to put the world in a machine (124 pts)]]></title>
            <link>https://mitpress.mit.edu/9780262547482/building-simcity/</link>
            <guid>40698442</guid>
            <pubDate>Sun, 16 Jun 2024 16:55:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mitpress.mit.edu/9780262547482/building-simcity/">https://mitpress.mit.edu/9780262547482/building-simcity/</a>, See on <a href="https://news.ycombinator.com/item?id=40698442">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">
        <p><a href="#content">Skip to content</a></p><header role="banner" id="masthead">
                <div>
            
        <p><a href="https://mitpress.mit.edu/" rel="home"><img width="386" height="610" src="https://dhjhkxawhe8q4.cloudfront.net/mit-press/wp-content/uploads/2022/05/20143118/logo.png" alt="MIT Press" decoding="async" fetchpriority="high" srcset="https://dhjhkxawhe8q4.cloudfront.net/mit-press/wp-content/uploads/2022/05/20143118/logo.png 386w, https://dhjhkxawhe8q4.cloudfront.net/mit-press/wp-content/uploads/2022/05/20143118/logo-190x300.png 190w, https://dhjhkxawhe8q4.cloudfront.net/mit-press/wp-content/uploads/2022/05/20143118/logo-309x488.png 309w, https://dhjhkxawhe8q4.cloudfront.net/mit-press/wp-content/uploads/2022/05/20143118/logo-127x200.png 127w" sizes="(max-width: 386px) 100vw, 386px"></a>
        </p>

        
        <div>

                
        <nav role="navigation" aria-label="main menu: press escape to close the menu">
            <div><ul id="primary-menu"><li><a href="https://mitpress.mit.edu/" role="link"><img src="https://dhjhkxawhe8q4.cloudfront.net/mit-press/wp-content/uploads/2021/11/26163520/mitp-colophon-white-black-bkg.gif" alt="MIT Press"></a></li><li id="menu-item-10853"><a href="#" aria-haspopup="true" aria-expanded="false">Books</a>
<ul>
	<li id="menu-item-77"><a href="#" aria-haspopup="true" aria-expanded="false">Column</a>
	<ul>
		<li id="menu-item-121"><a href="https://mitpress.mit.edu/books/subjects/">View all subjects</a></li>
		<li id="menu-item-11089"><a href="https://mitpress.mit.edu/new-releases/">New releases</a></li>
		<li id="menu-item-85"><a href="https://mitpress.mit.edu/catalogs/">Catalogs</a></li>
		<li id="menu-item-9600"><a href="https://mitpress.mit.edu/textbooks/">Textbooks</a></li>
		<li id="menu-item-118"><a href="https://mitpress.mit.edu/books/series/">Series</a></li>
		<li id="menu-item-13156"><a href="https://mitpress.mit.edu/awards/">Awards</a></li>
	</ul>
</li>
	<li id="menu-item-117"><a href="#" aria-haspopup="true" aria-expanded="false">Column</a>
	<ul>
		<li id="menu-item-76"><a href="https://mitpress.mit.edu/authors/">Authors</a></li>
		<li id="menu-item-9677"><a href="https://mitpress.mit.edu/publishers/">Distributed presses</a></li>
		<li id="menu-item-3490"><a target="_blank" rel="noopener" href="https://thereader.mitpress.mit.edu/">The MIT Press Reader</a></li>
		<li id="menu-item-3492"><a target="_blank" rel="noopener" href="https://newbooksnetwork.com/category/up-partners/mit-press-podcast">Podcasts</a></li>
		<li id="menu-item-12667"><a href="https://mitpress.mit.edu/collections/">Collections</a></li>
	</ul>
</li>
	<li id="menu-item-124"><a href="#" aria-haspopup="true" aria-expanded="false">Column</a>
	<ul>
		<li id="menu-item-3434"><a target="_blank" rel="noopener" href="https://direct.mit.edu/" aria-haspopup="true" aria-expanded="false">MIT Press Direct</a><p>MIT Press Direct is a distinctive collection of influential MIT Press books curated for scholars and libraries worldwide.</p>
		<ul>
			<li id="menu-item-3435"><a href="https://direct.mit.edu/">Learn more</a></li>
		</ul>
</li>
	</ul>
</li>
</ul>
</li>
<li id="menu-item-3494"><a href="#" aria-haspopup="true" aria-expanded="false">Journals</a>
<ul>
	<li id="menu-item-3495"><a href="#" aria-haspopup="true" aria-expanded="false">column</a>
	<ul>
		<li id="menu-item-3497"><a target="_blank" rel="noopener" href="https://direct.mit.edu/journals/pages/browse_by_topic">Journals all topics</a></li>
		<li id="menu-item-3498"><a target="_blank" rel="noopener" href="https://direct.mit.edu/journals/pages/browse_by_topic#econ">Economics</a></li>
		<li id="menu-item-3499"><a target="_blank" rel="noopener" href="https://direct.mit.edu/journals/pages/browse_by_topic#interpol">International Affairs, History, &amp; Political Science</a></li>
	</ul>
</li>
	<li id="menu-item-3496"><a href="#" aria-haspopup="true" aria-expanded="false">column</a>
	<ul>
		<li id="menu-item-3500"><a target="_blank" rel="noopener" href="https://direct.mit.edu/journals/pages/browse_by_topic#artshuman">Arts &amp; Humanities</a></li>
		<li id="menu-item-3501"><a target="_blank" rel="noopener" href="https://direct.mit.edu/journals/pages/browse_by_topic#scitech">Science &amp; Technology</a></li>
		<li id="menu-item-11045"><a target="_blank" rel="noopener" href="https://direct.mit.edu/journals/pages/open-access">Open access</a></li>
	</ul>
</li>
	<li id="menu-item-3503"><a href="#" aria-haspopup="true" aria-expanded="false">column</a>
	<ul>
		<li id="menu-item-3502"><a target="_blank" rel="noopener" href="https://direct.mit.edu/journals" aria-haspopup="true" aria-expanded="false">MIT Press journals</a><p>MIT Press began publishing journals in 1970 with the first volumes of <em>Linguistic Inquiry</em> and the <em>Journal of Interdisciplinary History</em>. Today we publish over 30 titles in the arts and humanities, social sciences, and science and technology.</p>
		<ul>
			<li id="menu-item-3504"><a target="_blank" rel="noopener" href="https://direct.mit.edu/journals">Learn more</a></li>
		</ul>
</li>
	</ul>
</li>
</ul>
</li>
<li id="menu-item-3430"><a aria-haspopup="true" aria-expanded="false">Open Access</a>
<ul>
	<li id="menu-item-3464"><a href="#" aria-haspopup="true" aria-expanded="false">column</a>
	<ul>
		<li id="menu-item-18875"><a href="https://mitpress.mit.edu/open-access-at-mit-press/">Open access at the MIT Press</a></li>
		<li id="menu-item-18876"><a href="https://mitpress.mit.edu/open-access-at-mit-press/initiatives/">Open access initiatives</a></li>
		<li id="menu-item-3467"><a target="_blank" rel="noopener" href="https://direct.mit.edu/books/pages/direct-to-open">Direct to Open</a></li>
		<li id="menu-item-18847"><a href="https://mitpress.mit.edu/open-access-at-mit-press/mit-open-publishing-services/">MIT Open Publishing Services</a></li>
	</ul>
</li>
	<li id="menu-item-3468"><a href="#" aria-haspopup="true" aria-expanded="false">column</a>
	<ul>
		<li id="menu-item-18878"><a href="https://mitpress.mit.edu/open-access-at-mit-press/books/">Open access books</a></li>
		<li id="menu-item-18877"><a href="https://mitpress.mit.edu/open-access-at-mit-press/journals/">Open access journals</a></li>
		<li id="menu-item-11873"><a href="https://mitpressonpubpub.mitpress.mit.edu/">MIT Press Open Access @ PubPub</a></li>
	</ul>
</li>
	<li id="menu-item-3470"><a href="#" aria-haspopup="true" aria-expanded="false">Column</a>
	<ul>
		<li id="menu-item-10527"><a href="https://mitpress.mit.edu/?page_id=9671" aria-haspopup="true" aria-expanded="false">Open access</a><p>The MIT Press has been a leader in open access book publishing for over two decades, beginning in 1995 with the publication of William Mitchell’s City of Bits, which appeared simultaneously in print and in a dynamic, open web edition.</p>
		<ul>
			<li id="menu-item-10445"><a href="https://mitpress.mit.edu/about-our-oa-program/">Learn more</a></li>
		</ul>
</li>
	</ul>
</li>
</ul>
</li>
<li id="menu-item-3431"><a href="#" aria-haspopup="true" aria-expanded="false">Info for</a>
<ul>
	<li id="menu-item-3474"><a href="#" aria-haspopup="true" aria-expanded="false">column</a>
	<ul>
		<li id="menu-item-3482"><a href="https://mitpress.mit.edu/for-authors/">Current authors</a></li>
		<li id="menu-item-3478"><a href="https://mitpress.mit.edu/prospective-authors/">Prospective authors</a></li>
		<li id="menu-item-9771"><a href="https://mitpress.mit.edu/instructors/">Instructors</a></li>
	</ul>
</li>
	<li id="menu-item-3476"><a href="#" aria-haspopup="true" aria-expanded="false">column</a>
	<ul>
		<li id="menu-item-9665"><a href="https://mitpress.mit.edu/media-inquiries/">Media inquiries</a></li>
		<li id="menu-item-9664"><a href="https://mitpress.mit.edu/booksellers/">Booksellers</a></li>
		<li id="menu-item-3609"><a href="https://mitpress.mit.edu/rights-permissions/">Rights and permissions</a></li>
	</ul>
</li>
	<li id="menu-item-3475"><a href="#" aria-haspopup="true" aria-expanded="false">column</a>
	<ul>
		<li id="menu-item-3485"><a href="#" aria-haspopup="true" aria-expanded="false">Resources</a><p>Collaborating with authors, instructors, booksellers, librarians, and the media is at the heart of what we do as a scholarly publisher. If you can’t find the resource you need here, visit our contact page to get in touch.</p>
		<ul>
			<li id="menu-item-10443"><a href="https://mitpress.mit.edu/for-authors/">Learn more</a></li>
		</ul>
</li>
	</ul>
</li>
</ul>
</li>
<li id="menu-item-19570"><a href="https://mitpress.mit.edu/give-to-the-mit-press/">Give</a></li>
<li id="menu-item-10854"><a href="#" aria-haspopup="true" aria-expanded="false">About</a>
<ul>
	<li id="menu-item-10441"><a href="#" aria-haspopup="true" aria-expanded="false">Column</a>
	<ul>
		<li id="menu-item-11348"><a href="https://mitpress.mit.edu/about/">About</a></li>
		<li id="menu-item-10327"><a href="https://mitpress.mit.edu/jobs/">Jobs</a></li>
		<li id="menu-item-10328"><a href="https://mitpress.mit.edu/internships-paid-internships-books-journals/">Internships</a></li>
		<li id="menu-item-10324"><a href="https://mitpress.mit.edu/mit-press-editorial-board/">MIT Press Editorial Board</a></li>
		<li id="menu-item-10325"><a href="https://mitpress.mit.edu/mit-press-management-board/">MIT Press Management Board</a></li>
		<li id="menu-item-14905"><a href="https://mitpress.mit.edu/collections/our-mit-story/">Our MIT story</a></li>
	</ul>
</li>
	<li id="menu-item-10329"><a href="#" aria-haspopup="true" aria-expanded="false">Column</a>
	<ul>
		<li id="menu-item-10330"><a href="https://mitpress.mit.edu/catalogs/">Catalogs</a></li>
		<li id="menu-item-10331"><a href="https://mitpress.mit.edu/?page_id=105">News</a></li>
		<li id="menu-item-9516"><a href="https://mitpress.mit.edu/events/">Events</a></li>
		<li id="menu-item-10332"><a href="https://mitpress.mit.edu/conferences/">Conferences</a></li>
		<li id="menu-item-10333"><a href="http://mitpressbookstore.mit.edu/">Bookstore</a></li>
	</ul>
</li>
	<li id="menu-item-10440"><a href="#" aria-haspopup="true" aria-expanded="false">Column</a>
	<ul>
		<li id="menu-item-10334"><a href="#" aria-haspopup="true" aria-expanded="false">The MIT Press</a><p>Established in 1962, the MIT Press is one of the largest and most distinguished university presses in the world and a leading publisher of books and journals at the intersection of science, technology, art, social science, and design.</p>
		<ul>
			<li id="menu-item-10442"><a href="https://mitpress.mit.edu/about">Learn more</a></li>
		</ul>
</li>
	</ul>
</li>
</ul>
</li>
<li id="menu-item-11708"><a href="https://mitpress.mit.edu/contact-us/">Contact Us</a></li>
</ul></div>        </nav>

                        
        
                </div>

                </div>
        
        

        
                    
        
            </header>
    
    <div id="content">
        
    <main id="main">

        <div id="product-details-32" data-widget-params="{&quot;include_price&quot;:1}" data-ajax-url="https://mitpress.mit.edu/wp-admin/admin-ajax.php">
                <ul>
                                                                        <li>
                                <a href="#tab-1">
                                    Description                                </a>
                            </li>
                                                                                                                                            <li>
                                <a href="#tab-3">Author(s)</a>
                            </li>
                                                                                                <li>
                                <a href="#tab-4">Praise</a>
                            </li>
                                                                                                                                </ul>
                                                            
                                                                                                                    
                                                                                
                                                                                    </div>

    </main><!-- #main -->


</div><!-- #content -->



    

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Raspberry Pi 5 Is No Match for a Tini-Mini-Micro PC (251 pts)]]></title>
            <link>https://louwrentius.com/the-raspberry-pi-5-is-no-match-for-a-tini-mini-micro-pc.html</link>
            <guid>40697831</guid>
            <pubDate>Sun, 16 Jun 2024 15:38:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://louwrentius.com/the-raspberry-pi-5-is-no-match-for-a-tini-mini-micro-pc.html">https://louwrentius.com/the-raspberry-pi-5-is-no-match-for-a-tini-mini-micro-pc.html</a>, See on <a href="https://news.ycombinator.com/item?id=40697831">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
              <p>I've always been fond of the idea of the Raspberry Pi. An energy efficient, small, cheap but capable computer. An ideal home server. Until the Pi 4, the Pi was not that capable, and only with the relatively recent Pi 5 (fall 2023) do I feel the Pi is OK performance wise, although still hampered by SD card performance<sup id="fnref:good"><a href="#fn:good">1</a></sup>. And the Pi isn't that cheap either.</p>
<p>The Pi 5 can be fitted with an NVME SSD, but for me it's too little, too late.
Because I feel there is a type of computer on the market, that is much more compelling than the Pi. </p>
<p>I'm talking about the <a href="https://www.servethehome.com/introducing-project-tinyminimicro-home-lab-revolution/">tinyminimicro</a> home lab 'revolution' started by
<a href="https://www.servethehome.com/">servethehome.com</a> about four years ago (2020).</p>
<p><img alt="mini pc" src="https://louwrentius.com/static/images/tmm/tmm01.webp"></p>
<p><em>A 1L mini PC (Elitedesk 705 G4) with a Raspberry Pi 5 on top</em></p>
<p>During the pandemic, the Raspberry Pi was in short supply and people started looking for alternatives. The people at servethehome realised that these small enterprise desktop PCs could be a good option. Dell (micro), Lenovo (tiny) and HP (mini) all make these small desktop PCs, which are also known as 1L (one liter) PCs.</p>
<p>These Mini PC are not cheap<sup id="fnref:cheap"><a href="#fn:cheap">2</a></sup> when bought new, but older models are sold at a very steep discount as enterprises offload old models by the thousands on the second hand market (through intermediates).</p>
<p>Although these computers are often several years old, they are still much faster than a Raspberry Pi (including the Pi 5) and can hold more RAM.</p>
<p>I decided to buy two HP Elitedesk Mini PCs to try them out, one based on AMD and the other based on AMD.</p>
<h3>The Hardware</h3>
<table>
<thead>
<tr>
<th></th>
<th><a href="https://support.hp.com/th-en/document/c05371240">Elitedesk Mini G3 800</a></th>
<th><a href="https://support.hp.com/us-en/document/c06101574">Elitedesk Mini G4 705</a></th>
</tr>
</thead>
<tbody>
<tr>
<td>CPU</td>
<td>Intel i5-6500 (65W)</td>
<td>AMD Ryzen 3 PRO 2200GE (35W)</td>
</tr>
<tr>
<td>RAM</td>
<td>16 GB (max 32 GB)</td>
<td>16 GB (max 32 GB)</td>
</tr>
<tr>
<td>HDD</td>
<td>250 GB (SSD)</td>
<td>250 GB (NVME)</td>
</tr>
<tr>
<td>Network</td>
<td>1Gb (Intel)</td>
<td>1Gb (Realtek)</td>
</tr>
<tr>
<td>WiFi</td>
<td>Not installed</td>
<td>Not installed</td>
</tr>
<tr>
<td>Display</td>
<td>2 x DP, 1 x VGA</td>
<td>3 x DP</td>
</tr>
<tr>
<td>Remote management</td>
<td>Yes</td>
<td>No</td>
</tr>
<tr>
<td>Idle power</td>
<td>4 W</td>
<td>10 W</td>
</tr>
<tr>
<td>Price</td>
<td>€160</td>
<td>€115</td>
</tr>
</tbody>
</table>
<p>The AMD-based system is cheaper, but you 'pay' in higher idle power usage. In absolute terms 10 watt is still decent, but the Intel model directly competes with the Pi 5 on idle power consumption. </p>
<p><a href="https://louwrentius.com/static/images/tmm/tmm03.webp"><img alt="inside the mini pic" src="https://louwrentius.com/static/images/tmm/tmm03_small.webp"></a></p>
<p><em>Elitedesk 705 left, Elitedesk 800 right (click to enlarge)</em></p>
<p>Regarding display output, these devices have two fixed displayport outputs, but there is one port that is configurable. It can be displayport, VGA or HDMI. Depending on the supplier you may be able to configure this option, or you can buy them separately for €15-€25 online.</p>
<p><a href="https://louwrentius.com/static/images/tmm/HPEliteDesk800G3DesktopMini.pdf"><img alt="back800" src="https://louwrentius.com/static/images/tmm/tmm06.webp"></a>
<a href="https://louwrentius.com/static/images/tmm/HPEliteDesk705G4DesktopMini.pdf"><img alt="back705" src="https://louwrentius.com/static/images/tmm/tmm05.webp"></a>
<em>Click on image for official specs in PDF format</em></p>
<p>Both models seem to be equipped with socketed CPUs. Although options for this formfactor are limited, it's possible to upgrade.</p>
<h3>Comparing cost with the Pi 5</h3>
<p>The Raspberry Pi 5 with (max) 8 GB of RAM costs ~91 Euro, almost exactly the same price as the AMD-based mini PC<sup id="fnref:psu"><a href="#fn:psu">3</a></sup> in its base configuration (8GB RAM). Yet, with the Pi, you still need:</p>
<ol>
<li>power supply (€13)</li>
<li>case (€11)</li>
<li>SD card or NVME SSD (€10-€45)</li>
<li>NVME hat (€15) (optional but would be more comparable)</li>
</ol>
<p>It's true that I'm comparing a new computer to a second hand device, and you can decide if that matters in this case. With a complete Pi 5 at around €160 including taxes and shipping, the AMD-based 1L PC is clearly the cheaper and still more capable option.</p>
<h3>Comparing performance with the Pi 5</h3>
<p>The first two rows in this table show the Geekbench 6 score of the Intel and AMD mini PCs I've bought for evaluation. I've added the benchmark results of some other computers I've access to, just to provide some context.</p>
<table>
<thead>
<tr>
<th>CPU</th>
<th>Single-core</th>
<th>Multi-core</th>
</tr>
</thead>
<tbody>
<tr>
<td>AMD Ryzen 3 PRO 2200GE (32W)</td>
<td>1148</td>
<td>3343</td>
</tr>
<tr>
<td>Intel i5-6500 (65W)</td>
<td>1307</td>
<td>3702</td>
</tr>
<tr>
<td>Mac Mini M2</td>
<td>2677</td>
<td>9984</td>
</tr>
<tr>
<td>Mac Mini i3-8100B</td>
<td>1250</td>
<td>3824</td>
</tr>
<tr>
<td>HP Microserver Gen8 Xeon E3-1200v2</td>
<td>744</td>
<td>2595</td>
</tr>
<tr>
<td>Raspberry Pi 5</td>
<td>806</td>
<td>1861</td>
</tr>
<tr>
<td>Intel i9-13900k</td>
<td>2938</td>
<td>21413</td>
</tr>
<tr>
<td>Intel E5-2680 v2</td>
<td>558</td>
<td>5859</td>
</tr>
</tbody>
</table>
<p>Sure, these mini PCs won't come close to modern hardware like the Apple M2 or the intel i9. But if we look at the performance of the mini PCs we can observe that:</p>
<ol>
<li>The Intel i5-6500T CPU is 13% faster in single-core than the AMD Ryzen 3 PRO</li>
<li>Both the Intel and AMD processors are 42% - 62% faster than the Pi 5 regarding single-core performance.</li>
</ol>
<h3>Storage (performance)</h3>
<p>If there's one thing that really holds the Pi back, it's the SD card storage.
If you buy a decent SD card (A1/A2) that doesn't have terrible random IOPs performance, you realise that you can get a SATA or NVME SSD for almost the same price that has more capacity and much better (random) IO performance.</p>
<p>With the Pi 5, NVME SSD storage isn't standard and requires an extra hat. I feel that the missing integrated NVME storage option for the Pi 5 is a missed opportunity that - in my view - hurts the Pi 5.</p>
<p>Now in contrast, the Intel-based mini PC came with a SATA SSD in a special mounting bracket. That bracket also contained a small fan(1) to keep the underlying NVME storage (not present) cooled. </p>
<p><a href="https://louwrentius.com/static/images/tmm/tmm04.webp"><img alt="inside the mini pic" src="https://louwrentius.com/static/images/tmm/tmm04_small.webp"></a></p>
<p><em>There is a fan under the SATA SSD (click to enlarge)</em></p>
<p>The AMD-based mini PC was equipped with an NVME SSD and was not equipped with the SSD mounting bracket. The low price must come from somewhere...</p>
<p>However, both systems have support for SATA SSD storage, an 80mm NVME SSD and a small 2230 slot for a WiFi card. There seems no room on the 705 G4 to put in a small SSD, but there are adapters available that convert the WiFi slot to a slot usable for an extra NVME SSD, which might be an option for the 800 G3.</p>
<h3>Noice levels (subjective)</h3>
<p>Both systems are barely audible at idle, but you will notice them (if you sensitive to that sort of thing). The AMD system seems to become quite loud under full load. The Intel system also became loud under full load, but much more like a Mac Mini: the noise is less loud and more tolerable in my view.</p>
<h2>Idle power consumption</h2>
<h3>Elitedesk 800 (Intel)</h3>
<p>I can get the Intel-based Elitedesk 800 G3 to 3.5 watt at idle. Let that sink in for a moment. That's about the same power draw as the Raspberry Pi 5 at idle!</p>
<p>Just installing Debian 12 instead of Windows 10 makes the idle power consumption drop from 10-11 watt to around 7 watt. </p>
<p>Then on Debian, you:</p>
<ol>
<li>run <code>apt install powertop</code></li>
<li>run <code>powertop --auto-tune</code> (saves ~2 Watt)</li>
<li>Unplug the monitor (run headless) (saves ~1 Watt)</li>
</ol>
<p>You have to put the <code>powertop --auto-tune</code> command in /etc/rc.local:</p>
<div><pre><span></span><code><span>#!/usr/bin/env bash</span>
powertop<span> </span>--auto-tune
<span>exit</span><span> </span><span>0</span>
</code></pre></div>

<p>Then apply <code>chmod +x /etc/rc.local</code></p>
<p>So, for about the same idle power draw you get so much more performance, and go beyond the max 8GB RAM of the Pi 5.</p>
<h3>Elitedesk 705 (AMD)</h3>
<p>I managed to get this system to 10-11 watt at idle, but it was a pain to get there. </p>
<p>I measured around 11 Watts idle power consumption running a preinstalled Windows 11 (with monitor connected). After installing Debian 12 the system used 18 Watts at idle and so began a journey of many hours trying to solve this problem. </p>
<p>The culprit is the integrated Radeon Vega GPU. To solve the problem you have to:</p>
<ol>
<li>Configure the 'bios' to only use UEFI</li>
<li>Reinstall Debian 12 using UEFI</li>
<li>install the appropriate firmware with <code>apt install firmware-amd-graphics</code></li>
</ol>
<p>If you boot the computer using legacy 'bios' mode, the AMD Radeon firmware won't load no matter what you try. You can see this by issuing the commands:</p>
<div><pre><span></span><code>rmmod<span> </span>amdgpu
modprobe<span> </span>amdgpu
</code></pre></div>

<p>You may notice errors on the physical console or in the logs that the GPU driver isn't loaded because it's missing firmware (a lie).</p>
<p>This whole process got me to around 12 Watt at idle. To get to <strong>~10 Watts idle</strong> you need to do also run <code>powertop --auto-tune</code> and disconnect the monitor, as stated in the 'Intel' section earlier.</p>
<p>Given the whole picture, 10-11 Watt at idle is perfectly okay for a home server, and if you just want the cheapest option possible, this is still a fine system.</p>
<h2>KVM Virtualisation</h2>
<p>I'm running vanilla KVM (Debian 12) on these Mini PCs and it works totally fine. I've created multiple virtual machines without issue and performance seemed perfectly adequate. </p>
<h2>Boot performance</h2>
<p>From the moment I pressed the power button to SSH connecting, it took 17 seconds for the Elitedesk 800.</p>
<p>The Elitedesk 705 took 33 seconds until I got an SSH shell.</p>
<p>These boot times include the 5 second boot delay within the GRUB bootloader screen that is default for Debian 12.</p>
<h2>Remote management support</h2>
<p>Some of you may be familiar with <a href="https://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface">IPMI</a> (ILO, DRAC, and so on) which is standard on most servers. But there is also similar technology for (enterprise) desktops.</p>
<p>Intel <a href="https://en.wikipedia.org/wiki/Intel_Management_Engine">AMT/ME</a> is a technology used for remote out-of-band management of computers. It can be an interesting feature in a homelab environment but I have no need for it. If you want to try it, you can follow <a href="https://en.wikipedia.org/wiki/Intel_Management_Engine">this guide</a>.</p>
<p>For most people, it may be best to disable the AMT/ME feature as it has a history of security vulnerabilities. This may not be a huge issue within a trusted home network, but you have been warned.</p>
<p>The AMD-based Elitedesk 705 didn't came with equivalent remote management capabilities as far as I can tell.</p>
<h2>Alternatives</h2>
<p>The models discussed here are older models that are selected for a particular price point. Newer models from Lenovo, HP and Dell, equip more modern processors which are faster and have more cores. They are often also priced significantly higher. </p>
<p>If you are looking for low-power small formfactor PCs with more potent or customisable hardware, you may want to look at second-hand NUC formfactor PCs.</p>
<h2>Stacking multiple mini PCs</h2>
<p>The AMD-based Elitedesk 705 G4 is closed at the top and it's possible to stack other mini PCs on top. </p>
<p>The Intel-based Elitedesk 800 G3 has a perforated top enclosure, and putting another mini pc on top might suffocate the CPU fan.</p>
<p><img alt="topbottom" src="https://louwrentius.com/static/images/tmm/tmm07_small.webp"></p>
<p>As you can see, the bottom/foot of the mini PC doubles as a VESA mount and has four screw holes. By putting some screws in those holes, you may effectively create standoffs that gives the machine below enough space to breathe (maybe you can use actual standoffs).</p>
<h2>Evaluation and conclusion</h2>
<p>I think these second-hand 1L tinyminimicro PCs are better suited to play the role of home (lab) server than the Raspberry Pi (5). </p>
<p>The increased CPU performance, the built-in SSD/NVME support, the option to go beyond 8 GB of RAM (up to 32GB) and the price point on the second-hand market really makes a difference. </p>
<p>I love the Raspberry Pi and I still have a ton of Pi 4s. This <a href="https://louwrentius.com/i-made-my-blog-solar-powered-then-things-escalated.html">solar-powered</a> blog is hosted on a Pi 4 because of the low power consumption and the availability of GPIO pins for the solar status display. </p>
<p>That said, unless the Raspberry Pi becomes a lot cheaper (and more potent), I'm not so sure it's such a compelling home server.</p>

            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NLRB judge declares non-compete clause is an unfair labor practice (336 pts)]]></title>
            <link>https://www.nlrbedge.com/p/in-first-case-of-its-kind-nlrb-judge</link>
            <guid>40696992</guid>
            <pubDate>Sun, 16 Jun 2024 13:40:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nlrbedge.com/p/in-first-case-of-its-kind-nlrb-judge">https://www.nlrbedge.com/p/in-first-case-of-its-kind-nlrb-judge</a>, See on <a href="https://news.ycombinator.com/item?id=40696992">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg" width="1456" height="1820" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1820,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:544238,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bc49767-e9ba-4305-8c65-9f4243361e92_1638x2048.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>Administrative Law Judge (ALJ) Sarah Karpinen issued her decision in </span><em><strong><a href="https://nlrbresearch.com/pdfs/09031d4583d765f7.pdf" rel="">J.O. Mory, Inc.</a></strong></em><span> yesterday. The case mostly revolves around an employer firing a union organizer that became employed at the company with the goal of organizing his coworkers (also known as “salting”). The union salt in this case lied about his employment history to get hired, declared he was a union organizer after being hired, and then was fired. Salting is protected activity, lying about your employment history to salt is also protected activity, and firing someone for salting is an unfair labor practice. Thus, Judge Karpinen ordered that the employer rehire the salt with backpay.</span></p><p><span>As part of litigating this case, the General Counsel (GC) of the National Labor Relations Board (NLRB) also alleged that the employer’s non-compete clause and coworker non-solicitation clause were illegal work rules under the </span><em><a href="https://nlrbresearch.com/pdfs/09031d4583af43bd.pdf" rel="">Stericycle</a></em><span> standard. The GC has been pursuing this </span><a href="https://nlrbresearch.com/pdfs/09031d4583a87168.pdf" rel="">particular legal theory</a><span> since early last year, but this is the first time the theory has been put in front of an ALJ and also the first time an ALJ has ruled that these kinds of clauses are unfair labor practices that violate the National Labor Relations Act (NLRA).</span></p><p>The non-compete clause in question states that:</p><blockquote><p>(A) For a period of twelve (12) months following termination or separation of employment for any reason, Employee will not directly or indirectly, on Employee's behalf or on behalf of others:  … (iii) Engage in, be employed by, or become interested in, in any manner or capacity, as a principal, agent, partner, officer, director, employee, consultant, independent contractor, advisor or in any other capacity, with any insurance agency, insurance business or in any other business similar or competitive with Employer’s business as the same may exist at any time during the term of this Agreement, this covenant restricting Employee’s employment being limited to Employer’s service area which is defined as the county of the office where the Employee is located and to all contiguous counties thereto. If, during Employee’s employment, Employee is employed in any other of Employer’s locations, then these restrictions shall also apply to the county in which such office is located, and to all contiguous counties to that location. The parties expressly agree that the restrictions above set forth are fair and reasonable with regard to scope, time periods, geographic area and in all other respects.</p></blockquote><p>The ALJ determined that this clause was illegal with the following reasoning:</p><blockquote><p><span>The non-compete provision in Provision 2(A) is overly broad in scope and would deter a reasonable employee from engaging in protected activity by barring employees from directly or indirectly, and in any capacity, engaging in, being employed by, or becoming interested in any enterprise that is “similar or competitive” to the employer’s business. Not only is this provision ridiculously broad in scope (could an employee indirectly engage with a competitor by sending a family member to buy something from its store?), but </span><strong>it would also cause a reasonable employee to refrain from engaging in protected activities that come with a risk of retaliation. If an employee knows they are barred from being involved in any capacity with any company that operates a similar business to Respondent, they will logically be more fearful of being fired and less willing to rock the boat because they face the prospect of being unable to find any work in their geographic area if they are fired or forced to leave their job.</strong></p></blockquote><p>The coworker non-solicitation clause in question states that:</p><blockquote><p>(C) During the term of this Agreement and for a period of 24 months after termination of employment for any reason, Employee will not, either directly or indirectly for himself or on behalf of others, solicit, encourage, or attempt to persuade any other employee of Employer to leave the employ of Employer. This is intended to prevent “pirating” of Employer employees.</p></blockquote><p>The ALJ determined that this clause was illegal with the following reasoning:</p><blockquote><p><span>The prohibition in Provision 1(C) on soliciting employees to leave Respondent’s employ would </span><strong>dissuade a reasonable employee from engaging in protected activity like telling their coworkers about the wages and benefits offered by the Union out of a reasonable fear that Respondent might accuse them of inducing other employees to quit</strong><span>. See </span><strong><a href="https://nlrbresearch.com/pdfs/09031d45800b7ca9.pdf" rel="">M.J. Mechanical Services, 325 NLRB 1098, 1106 (1998)</a></strong><span> (telling employees about union benefits, encouraging them to engage in salting activities, and referring them to union hall protected even when it resulted in one employee going to work for a union contractor). </span><strong>It may also deter employees from asking their coworkers to make a concerted threat to quit unless their working conditions improve.</strong><span> See </span><strong><a href="https://nlrbresearch.com/pdfs/09031d4583883f78.pdf" rel="">Morgan Corp., 371 NLRB No. 142, slip op. at 5 (2022)</a></strong><span> (employee who told supervisor that he and his co-workers would quit over demand for higher wages was “indisputably” engaged in protected concerted activity).</span></p></blockquote><p>Despite all the discussion about the FTC banning non-competes, there still seems to be little recognition that non-competes for non-supervisory workers are effectively impossible to enforce at the moment due to the policies of the NLRB GC.</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Do not try to be the smartest in the room; try to be the kindest (347 pts)]]></title>
            <link>https://www.jorgegalindo.me/en/blog/posts/do-not-be-the-smartest-in-the-room-try-to-be-the-kindest</link>
            <guid>40695997</guid>
            <pubDate>Sun, 16 Jun 2024 10:27:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.jorgegalindo.me/en/blog/posts/do-not-be-the-smartest-in-the-room-try-to-be-the-kindest">https://www.jorgegalindo.me/en/blog/posts/do-not-be-the-smartest-in-the-room-try-to-be-the-kindest</a>, See on <a href="https://news.ycombinator.com/item?id=40695997">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="w-node-_5d141bd4-70dc-c230-96ee-97ce8d5b683a-a9ef052d"><p><img src="https://cdn.prod.website-files.com/65ff3881d9c8b3b51490c6bf/665eee53d6e16530d6d08e17_0_2.jpg" loading="lazy" alt="Do not try to be the smartest in the room; try to be the kindest."></p><div id="w-node-_33abfe72-f831-f4c0-40a3-a8f9a0405399-a9ef052d"><p>I always considered myself not especially smart. I mean, I think I have an "eye" or a "nose" for detecting good and bad things in advance, but I developed so many different things during my career that I am not an expert in anything in particular. In Spanish, we have a saying, "Maestro Liendre: De tó sabe, pero de ná entiende." I don't really know (and don't want) to translate it because it loses its punch, but it fits perfectly here.</p><p>Maybe that's why I had that saying in mind before every single meeting I had over the past few years.<strong><em> "Do not try to be the smartest in the room; try to be the kindest."</em></strong></p><blockquote>What does that mean? Well, the main point is always being willing to help.</blockquote><p>This might seem like obvious advice, but in the business world of winning and losing, that many people still use "war" concepts to refer to meetings and negotiations. This soft skill is a game changer.</p><p>Here's what I expect from someone <em>kind</em> in a meeting, we cold call it "The kind Framework" or "El Framework Güenagent":</p><ul role="list"><li><strong>Listening</strong>. This is very important and pretty difficult to find in meetings. Many people arrive with a speech in their heads and are just waiting for their turn to spit out the words without any link or context to others' points of view.</li><li><strong>Being respectful</strong>. Being nice is the new punk, and respect and understanding of other realities are the Rosetta Stone. We should not only try to be respectful but also demand this from others.</li><li><strong>Being empathetic</strong>. This is closely linked to listening. You need to understand the background of the topics or issues people bring to the table and put yourself in their shoes.</li><li><strong>Being resolutive</strong>. A meeting that doesn't end with a solution on the table is just a waste of time for everyone involved. Applying points 1, 2, and 3 in a killer combo can lead to a solution you probably didn't have in mind at the very beginning.</li></ul><p>For me, this is by default. And honestly, it's more common to find "nice" people than those with other, less pleasant traits. And guess what? Niceness is contagious. When you apply these aptitudes, you can expect the same from others, spreading the nice framework across teams.</p><p>So, this is my particular way of being nice in meetings, and I can tell you something: </p><blockquote>just a few people are going to miss the smartest in the room, but everyone is going to miss someone kind.</blockquote><p>‍</p></div><div id="w-node-_977870d7-14c7-5fa2-7568-051a69247d26-a9ef052d"><p>This article is tagged with:</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Simple sabotage for software (2023) (186 pts)]]></title>
            <link>https://erikbern.com/2023/12/13/simple-sabotage-for-software.html</link>
            <guid>40695839</guid>
            <pubDate>Sun, 16 Jun 2024 09:39:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://erikbern.com/2023/12/13/simple-sabotage-for-software.html">https://erikbern.com/2023/12/13/simple-sabotage-for-software.html</a>, See on <a href="https://news.ycombinator.com/item?id=40695839">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
  
  <time datetime="2023-12-13T00:00:00Z">2023-12-13</time>
  <p>CIA produced a fantastic book during the peak of World War 2 called <a href="https://www.cia.gov/static/5c875f3ec660e092cf893f60b4a288df/SimpleSabotage.pdf">Simple Sabotage</a>. It laid out various ways for infiltrators to ruin productivity of a company. Some of the advice is timeless, for instance the section about “General interference with Organizations and Production”:</p>
<ol>
<li>Insist on doing everything through “channels”. Never permit short-cuts to be taken in order to expedite decisions.</li>
<li>Make “speeches”. Talk as frequently as possible and at lengths. Illustrate your “points” by long anecdotes and accounts of personal experience. Never hesitate to make a few “patriotic” comments.</li>
<li>When possible, refer all matters to committees for “further study and consideration”. Attempt to make committees as large as possible — never less than five.</li>
<li>Bring up irrelevant issues as frequently as possible.</li>
<li>Haggle over precise wordings of communications, minutes, resolutions.</li>
<li>Refer back to matters decided upon at the last meeting and attempt to re-open the question of the advisability of that decision.</li>
<li>Advicate “caution”. Be “reasonable” and urge your fellow conferees to be “reasonable” and avoid haste which might result in embarrassments or difficulties later on.</li>
<li>Be worried about the propriety of any decision — raise the question of whether such action as is contemplated lies within the jurisdiction of the group or whether it might conflict with the policy of some higher echelon.</li>
</ol>
<p>I guess I've always been fascinated with how well this has stood the test of time? I even got this particular section framed and hung up at our office:</p>
<p><img src="https://erikbern.com/assets/simple_sabotage.jpeg" alt="simple sabotage"></p>
<h2 id="your-mission">Your mission</h2>
<p>Let's say you were employed as a CTO behind the front lines and you wanted to destroy productivity for as long as you can without getting caught. You can of course make a series of <em>obviously</em> bad decisions, but you'd get fired quickly. The real goal here is to sap the company of its productivity slowly, while maintaining a façade of plausibility and normalcy. What are some things you can do?</p>
<h2 id="technology">Technology</h2>
<ul>
<li>When joining, require a 6-18 months rewrite of core systems. Blame the previous CTO.</li>
<li>Encourage everyone use their own language and frameworks.</li>
<li>Split systems along arbitrary boundaries: maximize the number of systems involved in any feature.</li>
<li>Encourage a complex dev setup: running a service mesh with a dozen services at a minimum.</li>
<li>Make sure production environment differs from developer environments in as many ways as possible.</li>
<li>Deploy as infrequently as possible. Urge extreme caution about deployments. Leverage any production issue as a reason to “pull the brakes”.</li>
<li>Introduce very complex processes for code change and common workflows. Blame it on “security” or “compliance”.</li>
<li>Make sure every task is tracked in a task tracker and has been reviewed, prioritized, and signed off by a group of at least five people.</li>
<li>Disallow anything outside the scope of the original task, such as code cleanup or other drive-by improvements.</li>
<li>Build in-house versions of almost anything that's <em>not</em> a core competency. Justify it by “avoiding vendor lock-in”.</li>
<li>Insist on adding abstraction layers on top of everything. Use vendors that are themselves abstractions and then add extra layers of abstractions.</li>
<li>Encourage technical decisions based on wildly optimistic expectations of scale. Plan for at least 3 orders of magnitude more load than you have.</li>
<li>Encourage communal ownership of systems. Make sure no one feels responsible for maintenance.</li>
<li>Insist on centralizing almost everything as a “platform” owned by the “platform team”. Understaff the platform team and prevent other teams from building anythings that the platform might “own”.</li>
<li>Make the platform team iterate on APIs frequently and mandate that other teams refactor their code to the latest version as frequently as possible.</li>
<li>Hire “architects” and require even small changes to have an “architecture review”.</li>
<li>Require even small changes to have a “security review”.</li>
</ul>
<h2 id="product">Product</h2>
<ul>
<li>Dismiss useful metrics on academic grounds (e.g. “biased” or “lagging indicator”).</li>
<li>Pick vanity metrics with little or no correlation with business value and high amount of noise.</li>
<li>Insist on anything to be done as a “big bet” and insist on everything to be completely done before deployed.</li>
<li>Consider every feature a “must-have” and critical part of “version zero”. Do not budge.</li>
<li>Develop incredibly detailed “strategic” plans.</li>
<li>Pivot frequently.</li>
<li>Dismiss obvious improvements as “local optimization”.</li>
<li>Use latest trends to tie up resources. Kickstart a vacuous “AI strategy” that seems plausible at the surface. Spend heavily on vendors and consultants for these.</li>
<li>Encourage product managers to spend most of their time on “strategy” and “planning”.</li>
<li>Make it hard/impossible for engineers and product manager to use the product internally.</li>
<li>Dismiss users as “stupid” internally.</li>
</ul>
<h2 id="leadership">Leadership</h2>
<ul>
<li>Link compensation to title, and title to to team size, in order to incentivize bloat.</li>
<li>Make big talk about strategies, features, or technical complexity.</li>
<li>Make expensive acquisitions to enter new product areas. Refer to “synergies”. Shut down the acquired product.</li>
<li>Use lots of dotted lines in the reporting structure.</li>
<li>As much as possible, have people to report into managers in other teams, locations, or functions. Make sure managers are ill-equipped to supervise their reports.</li>
<li>Frequently reassign underperformers to other teams.</li>
<li>Put high performers on highly speculative R&amp;D projects with unclear deliverables.</li>
<li>Always require a meeting for any decision, no matter how trivial.</li>
<li>Insist that every “stakeholder” needs to be present in the meeting.</li>
</ul>
<h2 id="hiring">Hiring</h2>
<ul>
<li>Create a hiring process that seems plausibly objective but in reality subjective.</li>
<li>Reject the best people based on “poor culture fit” or other vague criteria.</li>
<li>Hire the weakest candidates based on “potential” or “attitude” or other vague criteria.</li>
<li>Recruit very expensive senior leaders with large headcount promises.</li>
<li>Use inflated titles and made-up roles to attract opportunists.</li>
<li>Hire highly specialized “experts”, then create contrived projects to prevent them from quitting.</li>
<li>Use specialization as a justification to hire other, complementary people.</li>
</ul>
<h2 id="project-management">Project management</h2>
<ul>
<li>Require very detailed estimates for any project.</li>
<li>Encourage projects that span as many teams as possible, ideally in different locations.</li>
<li>Add new requirements that depend on work done by other teams.</li>
<li>Frequently make use of expensive agencies. Make the scope ambigious and hand over unfinished prototypes on the in-house team for them to finish.</li>
<li>Build complex “self-service” systems for stakeholders in other teams.</li>
</ul>
<figure>
  <img src="https://erikbern.com/assets/sabotage.jpeg" alt="my alt text">
  <figcaption><small><em>This is from the 1994 music video <a href="https://www.youtube.com/watch?v=z5rRZdiu1UE">Sabotage</a> by Beastie Boys. The lyrics are mostly about technology leadership and developer productivity.</em></small></figcaption>
</figure>
<h2 id="the-outcome">The outcome</h2>
<p>It's a hard job to pull it off! But if you can parachute behind the enemy front lines, and land a job as a CTO, you can make this happen.</p>
<p>For the non-saboteur: this is obviously a story about how to get the most out of your team. Productivity in general is a story of a thousand cuts, and none of these things are in themselves the thing that will ruin the productivity. But productivity adds up on a logarithmic scale, meaning that all these things compound in a multiplicative way. Basically, do 100 things that each is a 5% tax on productivity, and you just slowed everything down by 131x! The only way to keep engineers happy is to say no to 100 minor cuts that each sound plausible and <a href="https://www.youtube.com/watch?v=6XsOO8j8NK0">specious</a>.</p>


  
<strong>

    Tagged with: 
    <a href="https://erikbern.com/tags/management">management</a>, <a href="https://erikbern.com/tags/software">software</a>
</strong>

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[European Alternatives (182 pts)]]></title>
            <link>https://european-alternatives.eu</link>
            <guid>40695754</guid>
            <pubDate>Sun, 16 Jun 2024 09:17:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://european-alternatives.eu">https://european-alternatives.eu</a>, See on <a href="https://news.ycombinator.com/item?id=40695754">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    

        <div>
            <p>
                <hgroup>
                    <h2>
                        European alternatives for digital products
                    </h2>
                    <h2>
                        We help you find European alternatives for digital service and products, like cloud services and SaaS products.
                    </h2>
                </hgroup>
            </p>

            <div>
                <dl>
                    <div>
                        <dt>
                            
                            <p>Support local businesses</p>
                        </dt>
                        <dd>
                            When you buy from local businesses, you are supporting yourself down the road. Taxes paid by the company come back to you indirectly and the company creates jobs in your region.
                        </dd>
                    </div>

                    <div>
                        <dt>
                            
                            <p>Data protection / GDPR</p>
                        </dt>
                        <dd>
                            Some companies outside Europe tend to ignore data protection and related laws such as the GDPR or do not implement them correctly.
                        </dd>
                    </div>

                    <div>
                        <dt>
                            
                            <p>VAT / Billing</p>
                        </dt>
                        <dd>
                            As a business that operates in Europe, it is possible to get a VAT refund for products/services of other European companies. European companies also tend to offer payment methods that are commonly used in Europe.
                        </dd>
                    </div>

                    <div>
                        <dt>
                            
                            <p>Similar legal requirements</p>
                        </dt>
                        <dd>
                            Within the EU, many laws and framework conditions are set by the EU, which helps to cover a large market without having to consider large country-specific differences. It is also easier to enforce your rights against another company located in the EU.
                        </dd>
                    </div>
                </dl>
            </div>
        </div>

    <section>
        <div>
                
                <p>
                    <h2>
                        Categories
                    </h2>
                </p>
            </div>

        <div>

            <ul role="list">
                                    <li>
    <a href="https://european-alternatives.eu/category/web-analytics-services">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/4e29da95-e5a9-445b-950b-46a75064896b/chart-bar.svg" alt="web analytics services logo"></p><div>
                <p>
                    <h3>Web analytics services</h3>
                </p>
                <p>A web analytics service tracks user behavior on websites so that website owners can understand user usage and optimize their websites.</p>
            </div>
        </div>
        <div>
                <p><span>
                        31 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/cloud-computing-platforms">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/a161ee4f-395e-4ad2-8bae-df8e9ea71e70/cloud.svg" alt="cloud computing platforms logo"></p><div>
                <p>
                    <h3>Cloud computing platforms</h3>
                </p>
                <p>A cloud computing platform provides on-demand hosting services.</p>
            </div>
        </div>
        <div>
                <p><span>
                        12 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/cdn-content-delivery-network">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/e0f28f2b-f025-49a0-a9e3-b41baa76322f/globe.svg" alt="content delivery network (CDN) services logo"></p><div>
                <p>
                    <h3>Content delivery network (CDN) services</h3>
                </p>
                <p>A content delivery network (CDN) is a geographically distributed network.</p>
            </div>
        </div>
        <div>
                <p><span>
                        7 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/email-providers">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/52675d0f-53e0-4a5c-ab45-592df8eaffb3/mail.svg" alt="email providers logo"></p><div>
                <p>
                    <h3>Email providers</h3>
                </p>
                <p>An email provider provides its users with an e-mail address and the corresponding mailboxes.</p>
            </div>
        </div>
        <div>
                <p><span>
                        20 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/vps-virtual-private-server-hosters">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/3db9ad09-6350-4d4d-81e4-971f62250c60/server.svg" alt="virtual private server (VPS) hosters logo"></p><div>
                <p>
                    <h3>Virtual private server (VPS) hosters</h3>
                </p>
                <p>A virtual private server (VPS) hoster provides virtual servers with predefined RAM, storage, traffic and virtual cores.</p>
            </div>
        </div>
        <div>
                <p><span>
                        23 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/search-engines">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/f0e5e0c5-8b48-421a-b9bf-aa2da29a080b/search.svg" alt="search engines logo"></p><div>
                <p>
                    <h3>Search engines</h3>
                </p>
                <p>A search engine allows their users to search the internet.</p>
            </div>
        </div>
        <div>
                <p><span>
                        6 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/transactional-email-service">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/31ae64ff-e583-4572-be41-be4946c12195/mail.svg" alt="transactional email service logo"></p><div>
                <p>
                    <h3>Transactional email service</h3>
                </p>
                <p>A transactional mail service offers users the ability to send emails from their applications via the service.</p>
            </div>
        </div>
        <div>
                <p><span>
                        5 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/domain-name-registrar">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/42ccd704-ce5f-4070-8e3e-48c581199b42/globe.svg" alt="domain name registrars logo"></p><div>
                <p>
                    <h3>Domain name registrars</h3>
                </p>
                <p>Domain name registrars are companies that manages the reservation of Internet domain names.</p>
            </div>
        </div>
        <div>
                <p><span>
                        12 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/navigation-apps">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/8aa6cb84-a814-4d75-9a3f-23e13cd4d4bc/location-marker.svg" alt="navigation apps logo"></p><div>
                <p>
                    <h3>Navigation apps</h3>
                </p>
                <p>Navigation apps help you get from A to B.</p>
            </div>
        </div>
        <div>
                <p><span>
                        9 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/microblogging-services">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/83a8bcfd-38fb-42ea-ba77-1940108b7026/user-group.svg" alt="microblogging services logo"></p><div>
                <p>
                    <h3>Microblogging services</h3>
                </p>
                <p>A microblogging service allows users to post short texts, images or links to videos.</p>
            </div>
        </div>
        <div>
                <p><span>
                        2 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/uptime-monitoring-services">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/4215d2c2-9841-459c-b62e-81c5b426166b/check-circle.svg" alt="uptime monitoring services logo"></p><div>
                <p>
                    <h3>Uptime monitoring services</h3>
                </p>
                <p>An uptime monitoring service periodically checks if a website or other service is active.</p>
            </div>
        </div>
        <div>
                <p><span>
                        8 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/file-hosting-services">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/379f2b3e-c489-4721-9469-0f5a3d239943/paper-clip.svg" alt="file hosting services logo"></p><div>
                <p>
                    <h3>File hosting services</h3>
                </p>
                <p>With a file hosting service, users can upload files to back them up or share them with others.</p>
            </div>
        </div>
        <div>
                <p><span>
                        9 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/machine-translation-services">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/c96ad29f-0fe2-4362-a7ea-94a719fc7024/translate.svg" alt="machine translation services logo"></p><div>
                <p>
                    <h3>Machine translation services</h3>
                </p>
                <p>A machine translation service (translator) is a service that programmatically translates text from one language to another.</p>
            </div>
        </div>
        <div>
                <p><span>
                        5 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/professional-networking-platforms">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/32579de8-77f6-41e5-828d-20b2f823a8c8/briefcase.svg" alt="professional networking platforms logo"></p><div>
                <p>
                    <h3>Professional networking platforms</h3>
                </p>
                <p>A professional networking platform is a social network focused on business relationships.</p>
            </div>
        </div>
        <div>
                <p><span>
                        1 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                                    <li>
    <a href="https://european-alternatives.eu/category/object-storage-providers">
        <div>
                            <p><img width="84" height="84" src="https://cdn.european-alternatives.eu/categoryLogo/79b8ce24-ca1f-4593-ab74-c0300ccc5a5b/database.svg" alt="object storage providers logo"></p><div>
                <p>
                    <h3>Object storage providers</h3>
                </p>
                <p>Object storage providers allow their users to store files hierarchically.</p>
            </div>
        </div>
        <div>
                <p><span>
                        10 alternatives
                    </span>
                </p>
            </div>
    </a>
</li>
                            </ul>
            <div>
                <p><a href="https://european-alternatives.eu/categories">
                    See all
                </a>
            </p></div>

        </div>
    </section>



    

    <div>
        
        <h2>
            Any suggestions?
        </h2>
        <p>
            Use the chat in the right bottom corner
        </p>
    </div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Making my first embedded Linux system (119 pts)]]></title>
            <link>https://popovicu.com/posts/making-my-first-embedded-linux-system/</link>
            <guid>40695165</guid>
            <pubDate>Sun, 16 Jun 2024 06:51:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://popovicu.com/posts/making-my-first-embedded-linux-system/">https://popovicu.com/posts/making-my-first-embedded-linux-system/</a>, See on <a href="https://news.ycombinator.com/item?id=40695165">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="article" role="article">
      <p><a href="https://twitter.com/popovicu94?ref_src=twsrc%5Etfw" data-show-count="false">Follow @popovicu94</a></p>
<p>This post is the documentation of my journey to building <a href="https://popovicu.com/linux-board">my first Linux system</a>. I started with no PCB experience whatsoever and I am here to document the journey to my Linux-ready PCB.</p>
<p>The initial part of this text may seem somewhat off-topic, but I promise there is cohesion to all these sections, so please patiently read through the whole text.</p>
<h2 id="table-of-contents">Table of contents</h2>
<details><summary>Open Table of contents</summary>
<ul>
<li>
<p><a href="#dont-be-scared">Don’t be scared!</a></p>
</li>
<li>
<p><a href="#pre-reading">Pre-reading</a></p>
</li>
<li>
<p><a href="#off-the-shelf-pcbs-and-hiding-the-details">Off-the-shelf PCBs and hiding the details</a></p>
</li>
<li>
<p><a href="#very-first-custom-pcb-board-not-linux-ready">Very first custom PCB board (not Linux-ready)</a></p>
<ul>
<li><a href="#booting-a-chip">Booting a chip</a></li>
<li><a href="#usage-of-programmers-ie-enter-the-dragon">Usage of programmers (i.e. “enter the dragon”)</a></li>
<li><a href="#the-dudes-who-program-avrdude">The dudes who program: <code>avrdude</code></a></li>
<li><a href="#what-is-a-dragon-and-do-i-need-it">What is a Dragon, and do I need it?</a></li>
<li><a href="#designing-a-pcb-for-attiny">Designing a PCB for ATtiny</a></li>
</ul>
</li>
<li>
<p><a href="#what-goes-into-designing-an-embedded-linux-system">What goes into designing an embedded Linux system?</a></p>
</li>
<li>
<p><a href="#inspirational-design">Inspirational design</a></p>
</li>
<li>
<p><a href="#designing-the-schematic">Designing the schematic</a></p>
<ul>
<li>
<p><a href="#power-supply">Power supply</a></p>
</li>
<li>
<p><a href="#crystal">Crystal</a></p>
</li>
<li>
<p><a href="#decoupling-capacitors">Decoupling capacitors</a></p>
</li>
<li>
<p><a href="#connectors-pins-and-io">Connectors, pins and IO</a></p>
<ul>
<li><a href="#fel-mode-button">“FEL mode” button</a></li>
</ul>
</li>
<li>
<p><a href="#spi-flash">SPI flash</a></p>
</li>
<li>
<p><a href="#svref-weirdness"><code>SVREF</code> weirdness</a></p>
</li>
<li>
<p><a href="#concrete-components">Concrete components</a></p>
</li>
<li>
<p><a href="#putting-the-schematic-together">Putting the schematic together</a></p>
</li>
</ul>
</li>
<li>
<p><a href="#routing-the-pcb">Routing the PCB</a></p>
</li>
<li>
<p><a href="#creating-the-software-image">Creating the software image</a></p>
</li>
<li>
<p><a href="#conclusion">Conclusion</a></p>
</li>
</ul>
</details>
<h2 id="dont-be-scared">Don’t be scared!</h2>
<p>While I’m not claiming that my design is something that should immediately go into production and be used to manage the treatment of hospital patients, I do think my prototype at least boots and runs Linux and if you’re reading this article, that’s probably your only goal to start with. Once you go through this initial hurdle, you’ll have a much better idea of where to go next to indeed get to that production readiness.</p>
<p>I’m sure as someone who is not a PCB expert I made a ton of rookie mistakes in my design for the <a href="https://popovicu.com/linux-board">Linux board</a>, but it got the job done — and it was easier than I thought it would be. If you know some basics of electrical engineering, and you’re disciplined and can spare a few hours a day, I think you may be a single-digit number of days away from putting together a similar prototype that can boot Linux. I hope that’s encouraging and I hope this text makes you cross that journey much faster.</p>
<h2 id="pre-reading">Pre-reading</h2>
<p>If <code>V = IR</code> means nothing to you, probably you should take a step back and review the absolute basics of electric circuits. You should have some intuition around words like resistors, capacitors, and inductors before you proceed. That said, the rest of this text should be easy to follow with only the absolute basics in electronics (not that I know much more anyway).</p>
<h2 id="off-the-shelf-pcbs-and-hiding-the-details">Off-the-shelf PCBs and hiding the details</h2>
<p>PCBs like Raspberry Pi are nice and popular, but if we just keep using them, especially by following the manufacturers’ basic tutorials, we probably don’t get much idea about how things work; and we need that knowledge to make our PCBs. My observation is that this is in particular true with microcontrollers, so we’ll use that as an example.</p>
<p>First, let’s see what’s different with Linux, though. For example, if you use Raspberry Pi to boot Linux, or any other board, at some point, you will reach an area of familiar environment. No matter whether you’re on a full-blown desktop Linux or some tiny RPi image, you still see things like <code>/dev</code> and often run familiar commands like <code>ls</code> and so on. The reason for this is the stability of the API (ABI?) of the Linux system. Standardization like this doesn’t exist with the microcontrollers.</p>
<p>When you load a sample code into an Arduino board, you may be going through a completely different journey compared to an STM32 Nucleo board. Not only is the process of loading the code different, but the methodology for writing the code itself can vary wildly. We see different IDEs and flows to do the same thing: write some C code to flicker LEDs. Sadly, the manufacturers indeed often corner us into using their customized flows (presumably to increase the vendor lock-in; consciously or otherwise, use your judgment and skepticism).</p>
<h2 id="very-first-custom-pcb-board-not-linux-ready">Very first custom PCB board (not Linux-ready)</h2>
<p>After observing the above, I decided to make my own first PCB with some programmable digital logic on it and make it as simple as possible.</p>
<p>First of all, what does it even mean to program the board? We write some code, compile it, send it over somehow to a chip that is capable of running the compiled machine code, and observe the effects. I won’t focus on writing and compiling the code, but rather, on what happens afterward.</p>
<h3 id="booting-a-chip">Booting a chip</h3>
<p>Thinking of some extremely simple microcontrollers, I asked myself — what happens when I power on a chip (no matter how I do it)? Where does it read the code from? And how does it give me a chance to give it some code in the first place?</p>
<p>A few years ago, I was looking for the cheapest possible MCUs and ran into the Atmel ATtiny MCUs (the brand is now Microchip, I believe). You can get these MCUs for like $1 per piece, if not less. Now the question is, once we have this chip, but just the chip and nothing else around it, how do we get started with it? Surely it must be very simple with such a tiny chip.</p>
<p>Conceptually, upon providing the power voltage, an ATtiny chip will inspect the state of its pins. If you satisfy certain conditions, such as setting some pins high or low, the chip will enter the programming mode. This mode then enables you to talk to the chip via some protocol, for example, SPI, and load its on-chip flash with some code. After you’re happy with the code you loaded, you can reset the chip, “unsatisfy” the programming conditions, and let the new code run.</p>
<h3 id="usage-of-programmers-ie-enter-the-dragon">Usage of programmers (i.e. “enter the dragon”)</h3>
<p>If I’m on my computer, however, I don’t have any individual pins or wires poking out of it to do the above, let alone run something like SPI protocol. I probably have a bunch of USB ports, and a lot of pre-cooked PCBs connect to our computers via USB for programming, so that may be the right approach.</p>
<p>However, I don’t have a board here, I just have my chip, so how do I go about programming over USB? ATtiny has SPI programming only, so something must bridge the gap between the USB and SPI.</p>
<p>In the ATtiny case, there’s something called <strong>AVR Dragon</strong> that’s the solution to this problem.</p>
<p><img alt="Hex dump of the USB device" decoding="async" loading="lazy" src="https://www.microchip.com/content/dam/mchp/mrt-dam/devtools/1979-atavrdragon.jpg">
</p>
<p><em>Image from the <a href="https://www.microchip.com/en-us/development-tool/atavrdragon">official AVR Dragon page</a></em></p>
<p>This is a device that you can connect to your computer via USB and drive through some software on your computer to do the signal orchestration that we mentioned above. Once your computer commands the AVR Dragon to program the ATtiny chip, AVR Dragon will satisfy the programming conditions and run the protocol (e.g. SPI) with the chip itself to fill out the on-chip flash of the microcontroller with the compiled code.</p>
<p>For the ATtiny use case, I was able to do the programming by connecting the Dragon and the MCU with a breadboard. Programming would fail until I figured out there’s a parameter to slow down the data rate of the code upload to the MCU, and once I did that, the breadboard setup worked just fine. All I had to do for the most part was hook up AVR Dragon’s SPI to my chip’s SPI.</p>
<h3 id="the-dudes-who-program-avrdude">The dudes who program: <code>avrdude</code></h3>
<p>We now have the hardware solution to the USB -&gt; SPI dance, but what on our host computer would make this programming happen?</p>
<p>There needs to be an application that would drive the messages on the USB port to the Dragon. In my case, I used <code>avrdude</code>. It’s an open-source application that can program various Atmel/Microchip chips, including the ATtiny series. One of the parameters to the <code>avrdude</code> is what kind of programming you’re doing. In my case, it was as simple as setting one of the flags to something like <code>avr_dragon</code>.</p>
<p>With this, I was able to load up my ATtiny with some code, then power it down, put it on another breadboard, and flicker some LEDs.</p>
<p>Great, so now I have a few important pieces of info if I were to do a PCB with ATtiny chips:</p>
<ul>
<li>I either program the chips like here, on a separate surface, and “drop” them into their operating environment, or…</li>
<li>Expose SPI pins so that I can hook them up to an AVR Dragon.</li>
</ul>
<p>The latter has a somewhat obvious consequence if those same pins connect to something like LEDs, these can flicker as the Dragon is setting the pins high and low, but that’s not of huge importance here.</p>
<h3 id="what-is-a-dragon-and-do-i-need-it">What is a Dragon, and do I need it?</h3>
<p>Now that we unpacked the end-to-end programming flow for the ATtiny, we understand that the AVR Dragon doesn’t do anything extremely complicated — as long as we have <strong>some</strong> device that can send out some SPI messages to the chip, we can use that device as a programmer.</p>
<p>Well, interestingly, <code>avrdude</code> can be used with a different flag value for the same flag that took in <code>avr_dragon</code> as the parameter. This value is meant to be used on Raspberry Pi and utilizes RPi’s GPIO pins to do the programming. A detailed write-up is <a href="https://learn.adafruit.com/program-an-avr-or-arduino-using-raspberry-pi-gpio-pins/installation">here</a>.</p>
<h3 id="designing-a-pcb-for-attiny">Designing a PCB for ATtiny</h3>
<p>At this point, I have a simple way to program my ATtiny using a breadboard and AVR Dragon connected to my computer, though I could even eliminate the Dragon if I wanted to.</p>
<p>My PCB goal now is to design a PCB where I have a socket in which I can plug a pre-programmed ATtiny. Once that PCB is powered on, some LEDs would flicker.</p>
<p>This is an extremely simple PCB. You only need a DIP-8 socket, which replaces your breadboard’s holes, and a few PCB traces which replace the jumper wires from your breadboard prototype. My circuit will be powered by a single 5 V trace that goes into the chip, then 2 traces come out of the GPIOs to power the LEDs, and then there’s a GND trace everywhere to close the circuit. Here’s the result:</p>
<p><img alt="Hex dump of the USB device" decoding="async" loading="lazy" src="https://popovicu.com/assets/simple_schematic.png.webp" height="708" width="843">
</p>
<p>And the actual PCB:</p>
<p><img alt="Hex dump of the USB device" decoding="async" loading="lazy" src="https://popovicu.com/assets/simple_pcb.png.webp" height="459" width="668">
</p>
<p>So there are 2 parts of the design here: the schematic and the physical implementation. The schematic is your textbook-like logical model of the circuit. Once you design that, you will click a button in your tool with which you’ll get a blank PCB surface to organize your components and connect them. The schematic drives your work here and your EDA tool can use it to catch errors, e.g. if you’re trying to make connections that exist nowhere in your schematic.</p>
<p>You can watch a somewhat lengthy absolute beginner 7-piece tutorial by Robert Feranec on building out your first PCB, though it can get fairly long. I’d say it’s worth at least just scanning through to see a knowledgeable person in action:</p>
<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" frameborder="0" height="315" loading="lazy" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/videoseries?si=4wa6NtDVVFFl2cNL&amp;list=PLXvLToQzgzdea0sQXmpY8k4tfiXpkYIwO" title="YouTube video player" width="560"></iframe>
<p>Now that I’ve gone through this experiment successfully, I thought let’s just go all in and make an embedded Linux board.</p>
<h2 id="what-goes-into-designing-an-embedded-linux-system">What goes into designing an embedded Linux system?</h2>
<p>There is a really good high-level article by Jay Carlson on getting started here, and you can find it on <a href="https://jaycarlson.net/embedded-linux/">this link</a>.</p>
<p>If you’re already sold on ‘why embedded Linux’, you can skip a decent chunk of the intro text there and hop into the design workflow section. We’ll deal with something much simpler than a BGA package, though, and we’ll also skip complex bits like DDR routing since all our RAM will be on-chip within the SoC we’ll explore. We also won’t be mega disciplined about the signal integrity as all our components will run reasonably fast (slow?) and will be forgiving when it comes to design decisions.</p>
<p>With that in mind, still read Jay’s article, and consider this article a gentler introduction to what Jay wrote about.</p>
<h2 id="inspirational-design">Inspirational design</h2>
<p>As I wrote in the text on <a href="https://popovicu.com/posts/run-mainline-linux-on-5-dollar-hardware">running Linux on $5 hardware</a>, my inspiration for the first embedded Linux system was <a href="https://www.thirtythreeforty.net/posts/2019/12/my-business-card-runs-linux/">the business card that runs Linux</a>. The fact that it’s a business card signaled to me it would be as simple as possible in its design and it would be the right design to study.</p>
<p>The article’s author generously posted <a href="https://www.thirtythreeforty.net/posts/2019/12/my-business-card-runs-linux/businesscard.pdf">the schematic</a> for the circuit design and understanding this was the first part of the journey.</p>
<h2 id="designing-the-schematic">Designing the schematic</h2>
<p>There aren’t that many components in the inspirational design, and that seems right. After all, we have demonstrated it’s possible to boot and run Linux with just on-board flash plus an Allwinner SoC! Let’s break down the problem of designing the schematic and center it around the F1C100s SoC.</p>
<h3 id="power-supply">Power supply</h3>
<p>As Jay Carlson mentioned and the inspirational design confirms, a Linux-ready SoC will need a couple of different voltages for the power supply. If we look at the F1C100s datasheet, we see the following:</p>
<p><img alt="Hex dump of the USB device" decoding="async" loading="lazy" src="https://popovicu.com/assets/f1c100s_voltages.png.webp" height="254" width="690">
</p>
<p>We see a couple of different voltages in the game, like <code>VCC-IO</code>, <code>VDD-CORE</code>, etc.</p>
<p>3.3 V seems to be the recommended voltage for a few values, so we can mark it right now that we’ll need that voltage on our board. We also see 2.5 V for <code>VCC-DRAM</code> and it’s also still within the OK values for <code>AVCC</code>. Let’s thus add 2.5 V to the list of voltages we need on-board. Finally, <code>VDD-CORE</code> has a pretty “tight” range, and we’ll add 1.1 V to our list.</p>
<p>The Linux board can be powered from the USB host, meaning our board will connect over USB to another machine and source 5 V from there. If this seems a bit unfamiliar, please check out my recent text on <a href="https://popovicu.com/posts/making-usb-devices">building USB devices</a>. That’s the only voltage we’ll have from “the external world” and we’ll need to equip our PCB with some components that can convert 5 V down to these values listed above.</p>
<p>We’ll use voltage regulators for these, and we need 3 of them, one for each voltage needed. We’ll put some capacitors around these voltage regulators and the way you go about finding out what you should do there is you would open the datasheet for your voltage regulator and find a section that’s titled something like “typical application”.</p>
<p><img alt="Hex dump of the USB device" decoding="async" loading="lazy" src="https://popovicu.com/assets/voltage_reg_application.png.webp" height="290" width="441">
</p>
<h3 id="crystal">Crystal</h3>
<p>F1C100s needs some oscillation to be able to run at 24 MHz clock speed. Therefore, we need a 24 MHz crystal for that, and we’ll need some capacitors around it. Luckily, this is a well-known recipe. Please check out <a href="https://microchip.my.site.com/s/article/Calculating-crystal-load-capacitor">this page</a> for this recipe (crystal + 2 capacitors).</p>
<p>And yes, in my design, I also estimated <code>Cstray</code> at 5 pF.</p>
<h3 id="decoupling-capacitors">Decoupling capacitors</h3>
<p>We’ll need to put a bunch of decoupling capacitors around the voltage supply pins. Without talking too much outside the area of my expertise, I’ll just link to a few YouTube videos I found helpful on this topic.</p>
<p>The first one will give you a very high-level idea of what these capacitors do:</p>
<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" frameborder="0" height="315" loading="lazy" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/KKjHZpNMeik?si=k__AmvRoMdTFbuVU" title="YouTube video player" width="560"></iframe>
<p>The next one is an awesome video on practical use cases from Zach Peterson:</p>
<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" frameborder="0" height="315" loading="lazy" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/MMY69_1U4w4?si=SrmSe7jwnLAq6Rb6" title="YouTube video player" width="560"></iframe>
<p>Finally, I also found this video from EEVblog useful to expand my intuition around this capacitor usage:</p>
<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" frameborder="0" height="315" loading="lazy" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/BcJ6UdDx1vg?si=c7jxusiSUlACQlHD" title="YouTube video player" width="560"></iframe>
<p>I pretty much used a bunch of 100 nF decoupling capacitors all over the place.</p>
<h3 id="connectors-pins-and-io">Connectors, pins and IO</h3>
<p>I powered the PCB via a USB connection (USB-micro connector on-board) and also used that same connection to fill up the onboard flash/RAM (more about it later). I’d say for this exercise, you’d want that the minimum.</p>
<p>Other pins and connections you would add at this point are your choice. How do you want your PCB to interact with the outside world? Maybe you want to expose an I2C port, a UART port, or something else, it’s really up to you.</p>
<p>One thing you may want to make your debugging easier is adding some LEDs, which should be easy.</p>
<h4 id="fel-mode-button">“FEL mode” button</h4>
<p>Going back to the article on <a href="https://popovicu.com/posts/run-mainline-linux-on-5-dollar-hardware">running Linux on $5 hardware</a>: FEL mode with F1C100s is very important to us. I’ll go through this again briefly in this article, but for now — I added a button that will ground the clock on the SPI flash which effectively takes it down. It may seem strange, but it makes life easier.</p>
<h3 id="spi-flash">SPI flash</h3>
<p>Something went wrong here. :) I wanted a 16 MB flash chip but ended up getting 2 MB only. Not sure if I messed up or the fabricator (with its documentation or otherwise), but it doesn’t matter, I managed to bail out here. The initial ramble about programming ATtiny is an important lesson here!</p>
<p>More importantly, for now, there were a couple of things about the SPI flash:</p>
<ul>
<li>We want it to be big enough to store our Linux image and maybe even store some runtime data (optional).</li>
<li>Ideally, we want it to be powered by a voltage that we already have on-board. 3.3 V should be doable.</li>
</ul>
<h3 id="svref-weirdness"><code>SVREF</code> weirdness</h3>
<p>There was one very weird pin on the SoC called <code>SVREF</code>. The datasheet says nothing about this pin except that it exists. In this case, I just looked at what the other designs do here and copied the approach. For this particular thing, I just applied a simple resistor-based voltage divider (take a look at the schematic from the inspirational design, for example).</p>
<h3 id="concrete-components">Concrete components</h3>
<p>What we listed above is pretty much everything you need, high-level, to stitch together your Linux system. You do need, however, to figure out which components <strong>exactly</strong> you want to use in your design. For example, you want to use 100 nF decoupling capacitors, but there are tons of models out there that your fabricator can use, each with different characteristics (price included as a characteristic). Additionally, some of these components may be preferred by your fabricator, some of them may be added faster to your PCB, some of them may or may not be in stock, etc. In my case, I used JLCPCB and they call these “easier-to-use” parts <em>basic parts</em>.</p>
<p>For the prototype, make sure the parts click together well. For example, if you use a resistor, make sure it can handle the current you’d be passing through it. Additionally, pay attention to the geometry as well, aka the footprints. The footprint is the space and connection layout for your component. You’ll see different designations for things like resistors. There are 0603 resistors, but they’re bigger than 0402 resistors. I used 0402 footprints for the most part, for both capacitors and resistors.</p>
<p>Lastly, there’s a strong reason why I liked using EasyEDA for this exercise: they provide a massive library of components they can throw onto the PCB, along with the footprints. Very often PCB designers (as I understand, I’m not a PCB designer) spend time struggling with component datasheets and whatnot to establish what the exact footprints are and how to match them to the components they want to use — EasyEDA links very nicely with the JLCPCB fabrication process.</p>
<h3 id="putting-the-schematic-together">Putting the schematic together</h3>
<p>Take a look at the schematic <a href="https://popovicu.com/assets/linux_board_schematic.pdf">here</a>.</p>
<p><img alt="Hex dump of the USB device" decoding="async" loading="lazy" src="https://popovicu.com/assets/linux_board_schematic.png.webp" height="521" width="800">
</p>
<p><strong>Caution: Please don’t expect a very readable schematic. :) Experienced PCB people will likely recoil after seeing it. It’s just a proof-of-concept and it’s hacky. On top of that, I’m most definitely not a PCB expert. I never really meant to share this schematic, but I guess it could still be useful to some of you.</strong></p>
<p>I’ll summarize below what is going on in this schematic:</p>
<ul>
<li>Most of the SoC pins are unconnected. The SoC itself is <code>U1</code>.</li>
<li><code>U2</code>, <code>U3</code>, and <code>U4</code> are the voltage regulators to obtain those different voltages you need to power up the SoC.</li>
<li><code>U5</code> is the SPI NOR flash memory. Again, check out the old article on $5 hardware Linux to figure out how to boot from here and so on. This memory can be “disabled” by holding the button <code>U6</code> in the schematic, which grounds the clock signal. This enables you to restart the SoC and make it believe there is nothing to boot from, thus forcing it to enter the FEL mode.</li>
<li><code>U7</code> is the reset switch.</li>
<li><code>U8</code> and <code>U9</code> are LED drivers. Total overkill, you can just hook up your LEDs to the GPIOs.</li>
<li>The decoupling capacitors should be fairly easy to spot at this point (there are a lot of them).</li>
<li><code>USB1</code> is the USB-micro connector, which both provides the raw 5 V to the voltage regulators and also gives you the differential pair you can route to the SoC for the USB communication. Check out the article <a href="https://popovicu.com/posts/making-usb-devices">on making USB devices</a> to understand what’s going on here.</li>
<li><code>X</code> is the crystal and it follows the standard recipe for hooking up the crystal to the chip.</li>
<li><code>L1</code> is the ferrite bead. As I understand, many times when you plug your USB into something like an outlet with a USB port, that 5 V can be noisy, and the ferrite bead helps.</li>
<li>The rest is mostly just header pins to expose signals to the outer world.</li>
</ul>
<p>And that’s pretty much it!</p>
<h2 id="routing-the-pcb">Routing the PCB</h2>
<p>Now that we have the schematic, it’s time to route things around and end up with a real piece of electronics.</p>
<p>For me, a big challenge here was laying out these decoupling capacitors. They should be as close as possible to the SoC pins, per best practices (check out the videos from the above), but the SoC packaging makes things challenging here. I thought it was my lack of experience that kicked in here, but then I found a video from Phil’s Lab that goes into detail on this matter. Namely, this packaging is called a QFN package, and the pins here are quite dense, everything is pretty tiny. Even though those capacitors aren’t very big, they still cluster pretty fast around those SoC pins and things become difficult. This is when I decided to use a 4-layer PCB instead, per best practices shared by Phil. The video is below:</p>
<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" frameborder="0" height="315" loading="lazy" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/PsyK1BXdclQ?si=El70GmAjEr8XIPg5" title="YouTube video player" width="560"></iframe>
<p>The other part that may seem challenging here is the USB routing. However, we’re only going for USB 2.0 full-speed, which is very very forgiving. Again, refresh your knowledge of USB devices <a href="https://popovicu.com/posts/making-usb-devices">here</a>, and don’t worry too much here. I just used EasyEDA’s differential pair routing from the USB-micro connector to the SoC. No need to pay too much attention to the trace width, and length, as long as it’s all reasonable (e.g. keep your trace length below 2 inches, I guess, and don’t use some weird width); things will just work.</p>
<p>Everything else should be pretty much straightforward. I used the following layer stack up: signal-GND-power-signal.</p>
<ol>
<li>The top signal layer has a lot of GPIO traces, as well as the USB differential pair (from what I understand you shouldn’t hop through different layers when routing a differential pair).</li>
<li>GND is just ground, the whole layer.</li>
<li>In the power layer, I routed different voltages for powering the SoC with fairly thick traces.</li>
<li>The bottom signal layer is mostly decoupling capacitors.</li>
</ol>
<p>I don’t think I should go into more detail on routing — I would probably give bad knowledge, so I’ll just stop here.</p>
<h2 id="creating-the-software-image">Creating the software image</h2>
<p>Ideally, I should have created a custom device tree for this board, but I was lazy and wanted to see the results right away. For my <a href="https://popovicu.com/posts/run-mainline-linux-on-5-dollar-hardware">running Linux on $5 hardware</a> exercise, I created an image for Lichee Pi, which also doesn’t have much more than just SoC + flash, and I decided to use the same, it should just work.</p>
<p>And it did work, but there was a catch — as I said, I somehow ended up with a 2 MB on-board flash instead of 16 MB as I originally intended. It would have been lots of work to slim down the image, and I just wanted to see something work.</p>
<p>This is where the FEL mode shines and why it’s important to have something like that hacky button that disables on-board flash easily. I used the <code>sunxi-fel</code> tool to communicate with my SoC since it was directly exposed to my computer via the USB differential pair. One of the things that this tool can do for you is populate the RAM with some content and then boot up while preserving those contents. This is why I had that intro talk about programming ATtinys and figuring out what are the ways you can pipe the bytes into your chip and get it to run some code you want it to run.</p>
<p>Therefore, instead of loading the U-boot FIT image from the on-board flash, I downloaded it from my computer and booted from that point. Linux worked just fine.</p>
<p>To have more confidence my connection with the on-board flash works as intended, I could package the U-boot image and write it into the NOR flash storage, but putting Linux alongside that was tight. U-boot worked just fine, though.</p>
<h2 id="conclusion">Conclusion</h2>
<p>This was an extremely hacky journey, but it satisfied a lot of my curiosity, and seeing the PCB come to life after all the studying and designing and waiting for the fabrication was a great feeling. I hope you feel the same joy once you put together your first embedded Linux system too. Good luck!</p>
<p>Please consider following on <a href="https://twitter.com/popovicu94">Twitter/X</a> and <a href="https://www.linkedin.com/in/upopovic/">LinkedIn</a> to stay updated.</p>
<p><img alt="Hex dump of the USB device" decoding="async" loading="lazy" src="https://popovicu.com/assets/linux_board.jpeg.webp" height="385" width="437">
</p>
    </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What You Get After Running an SSH Honeypot for 30 Days (476 pts)]]></title>
            <link>https://blog.sofiane.cc/ssh_honeypot/</link>
            <guid>40694768</guid>
            <pubDate>Sun, 16 Jun 2024 04:52:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.sofiane.cc/ssh_honeypot/">https://blog.sofiane.cc/ssh_honeypot/</a>, See on <a href="https://news.ycombinator.com/item?id=40694768">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
    <p><img src="https://i.imgur.com/5PZ4c8k.png"></p>
<h2 id="What-is-a-honeypot"><a href="#What-is-a-honeypot" title="What is a honeypot?"></a>What is a honeypot?</h2><p>A honeypot detects and records attacks when an attacker tries to break into a system. </p>
<p>The honeypot we will discuss here is an SSH honeypot.</p>
<h2 id="Environment"><a href="#Environment" title="Environment"></a>Environment</h2><figure><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br></pre></td><td><pre><span><span>OS</span>: Ubuntu <span>24</span>.<span>04</span> LTS x<span>86</span>_<span>64</span> </span><br><span><span>Kernel</span>: <span>6</span>.<span>8</span>.<span>0</span>-<span>31</span>-generic</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Login-Attempts"><a href="#Login-Attempts" title="Login Attempts"></a>Login Attempts</h2><figure><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br></pre></td><td><pre><span><span>cat</span> <span>X</span>.<span>log</span> | <span>grep</span> -<span>c</span> <span>"login attempt"</span></span><br><span><span>11599</span></span><br></pre></td></tr></tbody></table></figure>

<p>There were a total of 11,599 login attempts. Divided by 30 days, this means an average of 386 login attempts per day. </p>
<h2 id="Used-Usernames"><a href="#Used-Usernames" title="Used Usernames"></a>Used Usernames</h2><figure><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></pre></td><td><pre><span>cat X.log | grep -a <span>"login attempt"</span> | awk <span>'{print $5}'</span> | awk -F <span>"'"</span> <span>'{print $2}'</span> | sort | uniq -c | sort -nr | head</span><br><span>   8181 root</span><br><span>    977 345gs5662d34</span><br><span>    359 admin</span><br><span>    198 pi</span><br><span>    105 0</span><br><span>     71 ubuntu</span><br><span>     51 ubnt</span><br><span>     46 support</span><br><span>     37 user</span><br><span>     30 oracle</span><br></pre></td></tr></tbody></table></figure>
<p>As expected, there are many attacks that target customary and default usernames.</p>
<p>For the <code>345gs5662d34</code> user, according to the <strong>Aalborg University of Denmark Research</strong> this could be the default credential for a <strong>Polycom CX600 IP telephone</strong></p>
<p>Check it here :<br><a target="_blank" rel="noopener" href="https://vbn.aau.dk/ws/portalfiles/portal/573748244/sweetcam_honeypot_paper_1_.pdf">SweetCam: an IP Camera Honeypot</a></p>
<h3 id="Passwords"><a href="#Passwords" title="Passwords"></a>Passwords</h3><figure><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></pre></td><td><pre><span><span>cat</span> X.log | grep -a <span>"login attempt"</span> | awk '{print $<span>5</span>}' | awk -F <span>"'"</span> '{print $<span>4</span>}' | sort | uniq -c | sort -nr | head</span><br><span>    <span>977</span> <span>345</span>gs<span>5662</span>d<span>34</span></span><br><span>    <span>967</span> <span>3245</span>gs<span>5662</span>d<span>34</span></span><br><span>    <span>246</span> admin</span><br><span>    <span>239</span> <span>123456</span></span><br><span>    <span>208</span> password</span><br><span>    <span>155</span> <span>0</span></span><br><span>     <span>88</span> root</span><br><span>     <span>75</span> raspberry</span><br><span>     <span>73</span> <span>123</span></span><br><span>     <span>66</span> raspberryraspberry<span>993311</span></span><br></pre></td></tr></tbody></table></figure>

<p>Once again, the same as the default username for <strong>Polycom CX600 IP telephone</strong></p>
<h3 id="Commands-executed-after-login"><a href="#Commands-executed-after-login" title="Commands executed after login"></a>Commands executed after login</h3><figure><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></pre></td><td><pre><span>cat X.log | grep -a <span>"CMD"</span> | awk -F<span>'CMD: '</span> <span>'{print $2}'</span> | sort | uniq -c | sort -nr</span><br><span>   <span>6775</span> echo -e <span>"\x6F\x6B"</span></span><br><span>   <span>1016</span> cd ~; chattr -ia .ssh; lockr -ia .ssh</span><br><span>   <span>1016</span> cd ~ &amp;&amp; rm -rf .ssh &amp;&amp; mkdir .ssh &amp;&amp; echo <span>"ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEArDp4cun2lhr4KUhBGE7VvAcwdli2a8dbnrTOrbMz1+5O73fcBOx8NVbUT0bUanUV9tJ2/9p7+vD0EpZ3Tz/+0kX34uAx1RV/75GVOmNx+9EuWOnvNoaJe0QXxziIg9eLBHpgLMuakb5+BgTFB+rKJAw9u9FSTDengvS8hX1kNFS4Mjux0hJOK8rvcEmPecjdySYMb66nylAKGwCEE6WEQHmd1mUPgHwGQ0hWCwsQk13yCGPK5w6hYp5zYkFnvlC8hGmd4Ww+u97k6pfTGTUbJk14ujvcD9iUKQTTWYYjIIu5PmUux5bsZ0R4WFwdIe6+i6rBLAsPKgAySVKPRK+oRw== mdrfckr"</span>&gt;&gt;.ssh<span>/authorized_keys &amp;&amp; chmod -R go= ~/</span>.ssh &amp;&amp; cd ~</span><br><span>    <span>320</span> uname -s -v -n -r -m</span><br><span>    <span>112</span> .<span>/oinasf; dd if=/</span>proc<span>/self/</span>exe bs=<span>22</span> count=<span>1</span> || <span>while</span> read i; <span>do</span> echo <span>$i</span>; done &lt; <span>/proc/</span>self<span>/exe || cat /</span>proc<span>/self/</span>exe;</span><br><span>     <span>87</span> uname -a</span><br><span>     <span>29</span> ps | grep <span>'[Mm]iner'</span></span><br><span>     <span>29</span> ps -ef | grep <span>'[Mm]iner'</span></span><br><span>     <span>29</span> ls -la <span>/dev/</span>ttyGSM* <span>/dev/</span>ttyUSB-mod* <span>/var/</span>spool<span>/sms/</span>* <span>/var/</span>log<span>/smsd.log /</span>etc<span>/smsd.conf* /u</span>sr<span>/bin/</span>qmuxd <span>/var/</span>qmux_connect_socket <span>/etc/</span>config<span>/simman /</span>dev<span>/modem* /</span>var<span>/config/</span>sms/*</span><br><span>     <span>29</span> ifconfig</span><br><span>     <span>29</span> echo Hi | cat -n</span><br><span>     <span>29</span> cat <span>/proc/</span>cpuinfo</span><br><span>     <span>29</span> /ip cloud print</span><br><span>     <span>23</span> whoami</span><br><span>     <span>23</span> which ls</span><br><span>     <span>23</span> w</span><br><span>     <span>23</span> uname -m</span><br><span>     <span>23</span> uname</span><br><span>     <span>23</span> top</span><br><span>     <span>23</span> lscpu | grep Model</span><br><span>     <span>23</span> ls -lh $(which ls)</span><br><span>     <span>23</span> free -m | grep Mem | awk <span>'{print $2 ,$3, $4, $5, $6, $7}'</span></span><br><span>     <span>23</span> df -h | head -n <span>2</span> | awk <span>'FNR == 2 {print $2;}'</span></span><br><span>     <span>23</span> crontab -l</span><br><span>     <span>23</span> cat <span>/proc/</span>cpuinfo | grep name | wc -l</span><br><span>     <span>23</span> cat <span>/proc/</span>cpuinfo | grep name | head -n <span>1</span> | awk <span>'{print $4,$5,$6,$7,$8,$9;}'</span></span><br><span>     <span>23</span> cat <span>/proc/</span>cpuinfo | grep model | grep name | wc -l</span><br><span>     ・・・</span><br></pre></td></tr></tbody></table></figure>
<p>Now the interesting part starts </p>
<h3 id="The-oinasf-script"><a href="#The-oinasf-script" title="The oinasf script"></a>The oinasf script</h3><p><img src="https://i.imgur.com/7YmVqRo.png"></p>
<p>The execution of a mysterious script, <code>./oinasf</code>, followed by attempts to read and display the system’s executable content, indicates a probing strategy for vulnerabilities or valuable information. </p>
<p>The use of <code>/ip cloud print</code> suggests that bots target MikroTik routers to access or disrupt cloud-based services, while <code>uname -s -m</code> provides them with essential details about the operating system and machine architecture, valuable for crafting further actions tailored to the system’s specifics. </p>
<p>In conclusion, these commands represent a clear strategy to infiltrate, assess, and establish control over targeted systems. </p>
<p>They emphasize the bot’s preference for direct manipulation and sustained access highlighting the critical need for robust defenses against such common yet potentially devastating tactics.</p>
<h3 id="The-mdrfckr-crypto-miner"><a href="#The-mdrfckr-crypto-miner" title="The mdrfckr crypto miner"></a>The mdrfckr crypto miner</h3><p><img src="https://i.imgur.com/V6E9UiA.png"></p>
<p>This miner would simply create a cron job that would delete everything on  the <code>.ssh</code> folder and add a single ssh key and lock other users out. </p>
<p>After that it would kill other miners if they exist and just have the open field.</p>
<p>You can check this repo of someone who already got hacked and the miner was used on his server : <a target="_blank" rel="noopener" href="https://github.com/dangoldin/crypto-miner-hack/">Dump of the crypto-miner that got installed on my system - Github</a></p>
<h3 id="The-MIPS-malware"><a href="#The-MIPS-malware" title="The MIPS malware"></a>The MIPS malware</h3><p><img src="https://i.imgur.com/BkHTVej.png"></p>
<p>Probably another <strong>MIPS</strong> (Multiprocessor without Interlocked Pipeline Stages) architecture malware, targeting routers and IoT devices.</p>
<p>Here is a good read and analysis of the behaviour of a MIPS Malware :<br><a target="_blank" rel="noopener" href="https://www.giac.org/paper/grem/2573/analyzing-backdoor-bot-mips-platform/124977">Analyzing a Backdoor/Bot for the MIPS Platform</a></p>
<h3 id="The-Sakura-sh-Script"><a href="#The-Sakura-sh-Script" title="The Sakura.sh Script"></a>The Sakura.sh Script</h3><p><img src="https://i.imgur.com/GmR2OvK.png"></p>
<p>This script is part of the <strong>Gafgyt Malware</strong>. </p>
<p><strong>Gafgyt</strong>, also known as <strong>BASHLITE</strong>, is a botnet affecting Internet of Things (IoT) devices and Linux-based systems. The malware aims to compromise and gain control of these devices, often by exploiting weak or default passwords, as well as known vulnerabilities. Gafgyt has been around since 2014 and has evolved into multiple variants, each with its own set of features and capabilities, including the ability to launch distributed denial of service (DDoS) attacks.</p>
<p>Here is <a target="_blank" rel="noopener" href="https://securityscorecard.com/wp-content/uploads/2024/01/Report-A-Detailed-Analysis-Of-The-Gafgyt-Malware-Targeting-IoT-Devices.pdf">A Detailed Analysis of the Gafgyt Malware Targeting IoT Devices </a></p>
<p>© 2024 — Sofiane Hamlaooui — Making the world a better place 🌎</p>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: We Made The World's Smallest and Cheapest Network Switch (524 pts)]]></title>
            <link>https://docs.murexrobotics.com/elec/boards/networking/switch</link>
            <guid>40694254</guid>
            <pubDate>Sun, 16 Jun 2024 02:26:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://docs.murexrobotics.com/elec/boards/networking/switch">https://docs.murexrobotics.com/elec/boards/networking/switch</a>, See on <a href="https://news.ycombinator.com/item?id=40694254">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><main>
<p><img alt="Blender Render" loading="lazy" width="1920" height="1920" decoding="async" data-nimg="1" src="https://docs.murexrobotics.com/_next/static/media/ethernet_switch_v2_release.bba1f087.png"></p>
<h2>Outline<a href="#outline" id="outline" aria-label="Permalink for this section"></a></h2>
<p>The mrxSwitch is the world's smallest and cheapest networking switch, in addition to being fully open-source. With the focus on simplicity and cost, the MUREX Ethernet Switch utilizes external magnetics, a high performance unmanaged switch IC, and 1.25mm pitch Fast Ethernet (100BASE-TX) connectors.</p>
<h2>Detailed Description<a href="#detailed-description" id="detailed-description" aria-label="Permalink for this section"></a></h2>
<p>The MUREX Ethernet Switch, or mrxSwitch, is a 5 port 100BASE-TX unmanaged switch using the IP175Gx Ethernet Integrated Switch IC. mrxSwitch steps down an input up to 15V down to its operating voltage of 3.3V. Designed with a four layer board for minimal noise, the mrxSwitch has full Bob-Smith style termination for all center taps and calculated differential pairs of 100Ω. The switch utilizes 10 pairs of magnetic transformer and common-mode chokes to ensure proper compliance with the IEEE 802.3 standard.</p>
<p>Measuring 44.9mm by 42.2mm, mrxSwitch V2 is the smallest networking switch in the world and outperforms all commerically available options in size and cost. Its applications include but are not limited to embedded systems, ROVs and AUVs, consumer electronics, DIY projects, and other space-constrained networking applications.</p>
<h3>Current Status<a href="#current-status" id="current-status" aria-label="Permalink for this section"></a></h3>
<ul>
<li>V2.0 tested and functional, see the <a href="https://github.com/murexrobotics/electrical-2024/tree/main/networking/switch" target="_blank" rel="noreferrer">board layout files<span> (opens in a new tab)</span></a></li>
<li>V1.0 tested and functional, see the <a href="https://www.murexrobotics.com/blog/murex-ethernet-switch-v1/" target="_blank" rel="noreferrer">blog post<span> (opens in a new tab)</span></a></li>
</ul>
<h3>Integrated Sensors/ICs<a href="#integrated-sensorsics" id="integrated-sensorsics" aria-label="Permalink for this section"></a></h3>
<ul>
<li>
<p><a href="https://datasheet.lcsc.com/lcsc/2008201637_IC-Plus-IP175GHI_C703539.pdf" target="_blank" rel="noreferrer">IC Plus IP175Gx<span> (opens in a new tab)</span></a> 5 Port 10/100 Ethernet Integrated Switch</p>
<ul>
<li>5 Port 100BASE-TX Embedded Switch</li>
<li>High efficiency 85nm CMOS process</li>
<li>Full status LEDs</li>
<li>EEPROM configuration</li>
</ul>
</li>
<li>
<p><a href="https://www.ti.com/lit/ds/symlink/lm1117.pdf" target="_blank" rel="noreferrer">LM1117MP-3.3<span> (opens in a new tab)</span></a> 800mA LDO</p>
<ul>
<li>3.3V fixed output LDO</li>
<li>15V maximum input</li>
<li>1.2V dropout</li>
</ul>
</li>
<li>
<p><a href="https://www.lcsc.com/datasheet/lcsc_datasheet_1810082007_TNK-QT48A03_C216365.pdf" target="_blank" rel="noreferrer">QT48A03<span> (opens in a new tab)</span></a> 1000Base-T Dual Port Transformer</p>
<ul>
<li>350uH primary</li>
<li>8mA DC bias</li>
</ul>
</li>
<li>
<p><a href="https://datasheet.lcsc.com/lcsc/1806051531_TNK-BT16A07_C216355.pdf" target="_blank" rel="noreferrer">BT16A07<span> (opens in a new tab)</span></a> 10/100 Base-T Single Port Transformer</p>
<ul>
<li>350uH primary</li>
</ul>
</li>
<li>
<p><a href="https://datasheet.lcsc.com/szlcsc/TNK-QT24A23_C216362.pdf" target="_blank" rel="noreferrer">2x QT24A23 (retired)<span> (opens in a new tab)</span></a> 10/100/1000Base-T Single Port Transformer</p>
<ul>
<li>350uH primary</li>
<li>8mA DC bias</li>
</ul>
</li>
</ul>
<h3><a href="https://docs.murexrobotics.com/pdf/schematics/switch_v2.0_schematic.pdf">Schematic (PDF)</a><a href="#schematic-pdf" id="schematic-pdf" aria-label="Permalink for this section"></a></h3>
<p><img alt="Schematic Preview" loading="lazy" width="2206" height="1560" decoding="async" data-nimg="1" src="https://docs.murexrobotics.com/_next/static/media/switch_schematic_preview.5f64b16e.png"></p>
<h3>To Do<a href="#to-do" id="to-do" aria-label="Permalink for this section"></a></h3>
<h3>Changelog<a href="#changelog" id="changelog" aria-label="Permalink for this section"></a></h3>
<ul>
<li>V2 Changes:
<ul>
<li>a 30% size reduction, making the mrxSwitch the smallest networking switch in the world as of June 2024</li>
<li>overall BOM cost reduction by 15% (more basic parts)</li>
<li>replaced both QT24A23s with the QT48A03, a cheaper and more compact solution</li>
<li>removed config components and EEPROM</li>
</ul>
</li>
</ul>
<h3>More Photos!!<a href="#more-photos" id="more-photos" aria-label="Permalink for this section"></a></h3>
<p><img alt="Photo 1" loading="lazy" width="2286" height="1857" decoding="async" data-nimg="1" src="https://docs.murexrobotics.com/_next/static/media/switch1.777139e6.png">
<img alt="Photo 2" loading="lazy" width="2506" height="2251" decoding="async" data-nimg="1" src="https://docs.murexrobotics.com/_next/static/media/switch2.417fc590.png"></p><p><a title="Networking" href="https://docs.murexrobotics.com/elec/boards/networking/networking"><svg fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg>Networking</a><a title="PLC Module" href="https://docs.murexrobotics.com/elec/boards/networking/plc">PLC Module<svg fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg></a></p></main></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Architecture Behind a One-Person Tech Startup (2021) (200 pts)]]></title>
            <link>https://anthonynsimon.com/blog/one-man-saas-architecture/</link>
            <guid>40694103</guid>
            <pubDate>Sun, 16 Jun 2024 01:51:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://anthonynsimon.com/blog/one-man-saas-architecture/">https://anthonynsimon.com/blog/one-man-saas-architecture/</a>, See on <a href="https://news.ycombinator.com/item?id=40694103">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>This is a long-form post breaking down the setup I use to run a SaaS. From load balancing to cron job monitoring to payments and subscriptions. There's a lot of ground to cover, so buckle up!</p>
<p>As grandiose as the title of this article might sound, I should clarify we’re talking about a low-stress, one-person company that I run from my flat. It's fully self-funded, and I like to take things slow. It's probably not what most people imagine when I say "tech startup".</p>
<p>For context, I run a one-man SaaS, and this is a more detailed version of my post on <a href="https://anthonynsimon.com/blog/tech-stack/" rel="noopener">my tech stack</a>. I use Kubernetes on AWS, but don’t fall into the trap of thinking you need this. I learned these tools over several years mentored by a very patient team. These tools work well for me, but they might not be the right fit for you.</p>
<p>By the way, I drew inspiration for the format of this post from <a href="https://www.listennotes.com/blog/the-boring-technology-behind-a-one-person-23/" rel="noopener" target="_blank">Wenbin Fang’s blog post</a>. I really enjoyed reading his article, and you might want to check it out too!</p>
<p>With that said, let's jump right into the tour.</p>
<h2 id="table-of-contents">Table of contents</h2>
<ul>
<li><a href="#a-birds-eye-view" rel="noopener">A bird’s eye view</a></li>
<li><a href="#automatic-dns-ssl-and-load-balancing" rel="noopener">Automatic DNS, SSL, and Load Balancing</a></li>
<li><a href="#automated-rollouts-and-rollbacks" rel="noopener">Automated rollouts and rollbacks</a></li>
<li><a href="#let-it-crash" rel="noopener">Let it crash</a></li>
<li><a href="#horizontal-autoscaling" rel="noopener">Horizontal autoscaling</a></li>
<li><a href="#static-assets-cached-by-cdn" rel="noopener">Static assets cached by CDN</a></li>
<li><a href="#application-data-caching" rel="noopener">Application data caching</a></li>
<li><a href="#per-endpoint-rate-limiting" rel="noopener">Per endpoint rate-limiting</a></li>
<li><a href="#app-administration" rel="noopener">App administration</a></li>
<li><a href="#running-scheduled-jobs" rel="noopener">Running scheduled jobs</a></li>
<li><a href="#app-configuration" rel="noopener">App configuration</a></li>
<li><a href="#keeping-secrets" rel="noopener">Keeping secrets</a></li>
<li><a href="#relational-data-postgres" rel="noopener">Relational data: Postgres</a></li>
<li><a href="#columnar-data-clickhouse" rel="noopener">Columnar data: ClickHouse</a></li>
<li><a href="#dns-based-service-discovery" rel="noopener">DNS-based service discovery</a></li>
<li><a href="#version-controlled-infrastructure" rel="noopener">Version-controlled infrastructure</a></li>
<li><a href="#terraform-for-cloud-resources" rel="noopener">Terraform for cloud resources</a></li>
<li><a href="#kubernetes-manifests-for-app-deployments" rel="noopener">Kubernetes manifests for app deployments</a></li>
<li><a href="#subscriptions-and-payments" rel="noopener">Subscriptions and Payments</a></li>
<li><a href="#logging" rel="noopener">Logging</a></li>
<li><a href="#monitoring-and-alerting" rel="noopener">Monitoring and alerting</a></li>
<li><a href="#error-tracking" rel="noopener">Error tracking</a></li>
<li><a href="#profiling-and-other-goodies" rel="noopener">Profiling and other goodies</a></li>
<li><a href="#thats-all-folks" rel="noopener">That's all folks</a></li>
</ul>
<h2 id="a-birds-eye-view">A bird’s eye view</h2>
<p>My infrastructure handles multiple projects at once, but to illustrate things I’ll use my most recent SaaS, a <a href="https://panelbear.com/" rel="noopener" target="_blank">web performance and traffic analytics tool</a>, as a real-world example of this setup in action.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-performance-chart.png" alt="Panelbear's performance monitoring feature" width="100%" height="auto" loading="lazy"></span>
<em>Browser Timings chart in Panelbear, the example project I'll use for this tour.</em></p>
<p>From a technical point of view, this SaaS processes a large amount of requests per second from anywhere in the world, and stores the data in an efficient format for real time querying.</p>
<p>Business-wise it's still in its infancy (<del>I launched six months ago</del> update: it's been <a href="https://anthonynsimon.com/blog/panelbear-and-cronitor" rel="noopener">acquired</a>), but it has grown rather quickly for my own expectations, especially as I originally built it for myself as a Django app using SQLite on a single tiny VPS. For my goals at the time, it worked just fine and I could have probably pushed that model quite far.</p>
<p>However, I grew increasingly frustrated having to reimplement a lot of the tooling I was so accustomed to: zero downtime deploys, autoscaling, health checks, automatic DNS / TLS / ingress rules, and so on. Kubernetes spoiled me, I was used to dealing with higher level abstractions, while retaining control and flexibility.</p>
<p>Fast forward six months, a couple of iterations, and even though my current setup is still a Django monolith, I'm now using Postgres as the app DB, ClickHouse for analytics data, and Redis for caching. I also use Celery for scheduled tasks, and a custom event queue for buffering writes. I run most of these things on a managed Kubernetes cluster (EKS).</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/one-man-saas-architecture.png" alt="SaaS AWS architecture diagram" width="100%" height="auto" loading="lazy"></span>
<em>A high-level overview of the architecture.</em></p>
<p>It may sound complicated, but it's practically an old-school monolithic architecture running on Kubernetes. Replace Django with Rails or Laravel and you know what I'm talking about. The interesting part is how everything is glued together and automated: autoscaling, ingress, TLS certificates, failover, logging, monitoring, and so on.</p>
<p>It's worth noting I use this setup across multiple projects, which helps keep my costs down and launch experiments really easily (write a Dockerfile and git push). And since I get asked this a lot: contrary to what you might be thinking, I actually spend very little time managing the infrastructure, usually 0-2 hours per month total. Most of my time is spent developing features, doing customer support, and growing the business.</p>
<p>That said, these are the tools I’ve been using for several years now and I’m pretty familiar with them. I consider my setup simple for what it’s capable of, but it took many years of production fires at my day job to get here. So I won’t say it’s all sunshine and roses.</p>
<p>I don't know who said it first, but what I tell my friends is: "Kubernetes makes the simple stuff complex, but it also makes the complex stuff simpler".</p>
<h2 id="automatic-dns-ssl-and-load-balancing">Automatic DNS, SSL, and Load Balancing</h2>
<p>Now that you know I have a managed Kubernetes cluster on AWS and I run various projects in it, let's make the first stop of the tour: how to get traffic into the cluster.</p>
<p>My cluster is in a private network, so you won’t be able to reach it directly from the public internet. There’s a couple of pieces in between that control access and load balance traffic to the cluster.</p>
<p>Essentially, I have Cloudflare proxying all traffic to an NLB (AWS L4 Network Load Balancer). This Load Balancer is the bridge between the public internet and my private network. Once it receives a request, it forwards it to one of the Kubernetes cluster nodes. These nodes are in private subnets spread across multiple availability zones in AWS. It's all managed by the way, but more on that later.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/cloudflare-aws-ingress-kubernetes.png" alt="SaaS ingress diagram" width="100%" height="auto" loading="lazy"></span>
<em>Traffic gets cached at the edge, or forwarded to the AWS region where I operate.</em></p>
<p>"But how does Kubernetes know which service to forward the request to?" - That’s where <a href="https://github.com/kubernetes/ingress-nginx" rel="noopener" target="_blank">ingress-nginx</a> comes in. In short: it's an NGINX cluster managed by Kubernetes, and it's the entrypoint for all traffic inside the cluster.</p>
<p>NGINX applies rate-limiting and other traffic shaping rules I define before sending the request to the corresponding app container. In Panelbear’s case, the app container is Django being served by <a href="https://www.uvicorn.org/" rel="noopener" target="_blank">Uvicorn</a>.</p>
<p>It's not much different from a traditional nginx/gunicorn/Django in a VPS approach, with added horizontal scaling benefits and an automated CDN setup. It’s also a “setup once and forget” kind of thing, mostly a few files between Terraform/Kubernetes, and it’s shared by all deployed projects.</p>
<p>When I deploy a new project, it’s essentially 20 lines of ingress configuration and that’s it:</p>
<pre><div><pre><code><span>apiVersion</span><span>:</span><span> networking.k8s.io/v1beta1
</span><span></span><span>kind</span><span>:</span><span> Ingress
</span><span></span><span>metadata</span><span>:</span><span>
</span><span> </span><span>namespace</span><span>:</span><span> example
</span><span> </span><span>name</span><span>:</span><span> example</span><span>-</span><span>api
</span><span></span><span>annotations</span><span>:</span><span>
</span><span> </span><span>kubernetes.io/ingress.class</span><span>:</span><span> </span><span>"nginx"</span><span>
</span><span> </span><span>nginx.ingress.kubernetes.io/limit-rpm</span><span>:</span><span> </span><span>"5000"</span><span>
</span><span> </span><span>cert-manager.io/cluster-issuer</span><span>:</span><span> </span><span>"letsencrypt-prod"</span><span>
</span><span> </span><span>external-dns.alpha.kubernetes.io/cloudflare-proxied</span><span>:</span><span> </span><span>"true"</span><span>
</span><span></span><span>spec</span><span>:</span><span>
</span><span></span><span>tls</span><span>:</span><span>
</span><span></span><span>-</span><span> </span><span>hosts</span><span>:</span><span>
</span><span>   </span><span>-</span><span> api.example.com
</span><span> </span><span>secretName</span><span>:</span><span> example</span><span>-</span><span>api</span><span>-</span><span>tls
</span><span></span><span>rules</span><span>:</span><span>
</span><span></span><span>-</span><span> </span><span>host</span><span>:</span><span> api.example.com
</span><span> </span><span>http</span><span>:</span><span>
</span><span>   </span><span>paths</span><span>:</span><span>
</span><span>     </span><span>-</span><span> </span><span>path</span><span>:</span><span> /
</span><span>       </span><span>backend</span><span>:</span><span>
</span><span>         </span><span>serviceName</span><span>:</span><span> example</span><span>-</span><span>api
</span><span>         </span><span>servicePort</span><span>:</span><span> http</span></code></pre></div></pre>
<p>Those annotations describe that I want a DNS record, with traffic proxied by Cloudflare, a TLS certificate via letsencrypt, and that it should rate-limit the requests per minute by IP before forwarding the request to my app.</p>
<p>Kubernetes takes care of making those infra changes to reflect the desired state. It’s a little verbose, but it works well in practice.</p>
<h2 id="automated-rollouts-and-rollbacks">Automated rollouts and rollbacks</h2>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/ci-pipeline.png" alt="GitOps CI pipeline" width="100%" height="auto" loading="lazy"></span>
<em>The chain of actions that occur when I push a new commit.</em></p>
<p>Whenever I push to master one of my projects, it kicks off a CI pipeline on GitHub Actions. This pipeline runs some codebase checks, end-to-end tests (using Docker compose to setup a complete environment), and once these checks pass it builds a new Docker image that gets pushed to ECR (the Docker registry in AWS).</p>
<p>As far as the application repo is concerned, a new version of the app has been tested and is ready to be deployed as a Docker image:</p>
<pre><div><pre><code><span>panelbear/panelbear-webserver:6a54bb3</span></code></pre></div></pre>
<p>"So what happens next? There’s a new Docker image, but no deploy?" - My Kubernetes cluster has a component called <a href="https://fluxcd.io/" rel="noopener" target="_blank">flux</a>. It automatically keeps in sync what is currently running in the cluster and the latest image for my apps.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/flux-autorelease.png" alt="Fluxcd release commit" width="100%" height="auto" loading="lazy"></span>
<em>Flux automatically keeps track of new releases in my infrastructure monorepo.</em></p>
<p>Flux automatically triggers an incremental rollout when there’s a new Docker image available, and keeps record of these actions in an "Infrastructure Monorepo".</p>
<p>I want version controlled infrastructure, so that whenever I make a new commit on this repo, between Terraform and Kubernetes, they will make the necessary changes on AWS, Cloudflare and the other services to synchronize the state of my repo with what is deployed.</p>
<p>It’s all version-controlled with a linear history of every deployment made. This means less stuff for me to remember over the years, since I have no magic settings configured via clicky-clicky on some obscure UI.</p>
<p>Think of this monorepo as deployable documentation, but more on that later.</p>
<h2 id="let-it-crash">Let it crash</h2>
<p>A few years ago I used the Actor model of concurrency for various company projects, and fell in love with many of the ideas around its ecosystem. One thing led to another and soon I was reading books about Erlang, and its philosophy around <a href="https://stackoverflow.com/questions/4393197/erlangs-let-it-crash-philosophy-applicable-elsewhere" rel="noopener" target="_blank">letting things crash</a>.</p>
<p>I might be stretching the idea too much, but in Kubernetes I like to think of liveliness probes and automatic restarts as a means to achieve a similar effect.</p>
<p>From the <a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/" rel="noopener" target="_blank">Kubernetes documentation</a>:
“The kubelet uses liveness probes to know when to restart a container. For example, liveness probes could catch a deadlock, where an application is running, but unable to make progress. Restarting a container in such a state can help to make the application more available despite bugs.”</p>
<p>In practice this has worked pretty well for me. Containers and nodes are meant to come and go, and Kubernetes will gracefully shift the traffic to healthy pods while healing the unhealthy ones (more like killing). Brutal, but effective.</p>
<h2 id="horizontal-autoscaling">Horizontal autoscaling</h2>
<p>My app containers auto-scale based on CPU/Memory usage. Kubernetes will try to pack as many workloads per node as possible to fully utilize it.</p>
<p>In case there’s too many Pods per node in the cluster, it will automatically spawn more servers to increase the cluster capacity and ease the load. Similarly, it will scale down when there’s not much going on.</p>
<p>Here’s what a Horizontal Pod Autoscaler might look like:</p>
<pre><div><pre><code><span>apiVersion</span><span>:</span><span> autoscaling/v1
</span><span></span><span>kind</span><span>:</span><span> HorizontalPodAutoscaler
</span><span></span><span>metadata</span><span>:</span><span>
</span><span> </span><span>name</span><span>:</span><span> panelbear</span><span>-</span><span>api
</span><span> </span><span>namespace</span><span>:</span><span> panelbear
</span><span></span><span>spec</span><span>:</span><span>
</span><span> </span><span>scaleTargetRef</span><span>:</span><span>
</span><span>   </span><span>apiVersion</span><span>:</span><span> apps/v1
</span><span>   </span><span>kind</span><span>:</span><span> Deployment
</span><span>   </span><span>name</span><span>:</span><span> panelbear</span><span>-</span><span>api
</span><span> </span><span>minReplicas</span><span>:</span><span> </span><span>2</span><span>
</span><span> </span><span>maxReplicas</span><span>:</span><span> </span><span>8</span><span>
</span><span> </span><span>targetCPUUtilizationPercentage</span><span>:</span><span> </span><span>50</span></code></pre></div></pre>
<p>In this example, it will automatically adjust the number of <code>panelbear-api</code> pods based on the CPU usage, starting at 2 replicas but capping at 8.</p>
<h2 id="static-assets-cached-by-cdn">Static assets cached by CDN</h2>
<p>When defining the ingress rules for my app, the annotation <code>cloudflare-proxied: "true"</code> is what tells the Kubernetes that I want to use Cloudflare for DNS, and to proxy all requests via it’s CDN and DDoS protection too.</p>
<p>From then on, it’s pretty easy to make use of it. I just set standard HTTP cache headers in my applications to specify which requests can be cached, and for how long.</p>
<pre><div><pre><code><span># Cache this response for 5 minutes</span><span>
</span><span>response</span><span>[</span><span>"Cache-Control"</span><span>]</span><span> </span><span>=</span><span> </span><span>"public, max-age=300"</span></code></pre></div></pre>
<p>Cloudflare will use those response headers to control the caching behavior at the edge servers. It works amazingly well for such a simple setup.</p>
<p>I use <a href="https://github.com/evansd/whitenoise" rel="noopener" target="_blank">Whitenoise</a> to serve static files directly from my app container. That way I avoid needing to upload static files to Nginx/Cloudfront/S3 on each deployment. It has worked really well so far, and most requests will get cached by the CDN as it gets filled. It's performant, and keeps things simple.</p>
<p>I also use NextJS for a few static websites, such as the landing page of <a href="http://panelbear.com/" rel="noopener" target="_blank">Panelbear</a>. I could serve it via Cloudfront/S3 or even Netlify or Vercel, but it was easy to just run it as a container in my cluster and let Cloudflare cache the static assets as they are being requested. There’s zero added cost for me to do this, and I can re-use all tooling for deployment, logging and monitoring.</p>
<h2 id="application-data-caching">Application data caching</h2>
<p>Besides static file caching, there's also application data caching (eg. results of heavy calculations, Django models, rate-limiting counters, etc...).</p>
<p>On one hand I leverage an in-memory <a href="https://docs.python.org/3/library/functools.html#functools.lru_cache" rel="noopener" target="_blank">Least Recently Used (LRU) cache</a> to keep frequently accessed objects in memory, and I’d benefit from zero network calls (pure Python, no Redis involved).</p>
<p>However, most endpoints just use the in-cluster Redis for caching. It's still fast and the cached data can be shared by all Django instances, even after re-deploys, while an in-memory cache would get wiped.</p>
<p>Here's a real-world example:</p>
<p>My Pricing Plans are based on analytics events per month. For this some sort of metering is necessary to know how many events have been consumed within the current billing period and enforce limits. However, I don't interrupt the service immediately when a customer crosses the limit. Instead a "Capacity depleted" email is automatically sent, and a grace period is given to the customer before the API starts rejecting new data.</p>
<p>This is meant to give customers enough time to decide if an upgrade makes sense for them, while ensuring no data is lost. For example during a traffic spike in case their content goes viral or if they're just enjoying the weekend and not checking their emails. If the customer decides to stay in the current plan and not upgrade, there is no penalty and things will go back to normal once usage is back within their plan limits.</p>
<p>So for this feature I have a function that applies the rules above, which require several calls to the DB and ClickHouse, but get cached 15 minutes to avoid recomputing this on every request. It's good enough and simple. Worth noting: the cache gets invalidated on plan changes, otherwise it might take 15 minutes for an upgrade to take effect.</p>
<pre><div><pre><code><span>@cache</span><span>(</span><span>ttl</span><span>=</span><span>60</span><span> </span><span>*</span><span> </span><span>15</span><span>)</span><span>
</span><span></span><span>def</span><span> </span><span>has_enough_capacity</span><span>(</span><span>site</span><span>:</span><span> Site</span><span>)</span><span> </span><span>-</span><span>&gt;</span><span> </span><span>bool</span><span>:</span><span>
</span><span> </span><span>"""
</span><span> Returns True if a Site has enough capacity to accept incoming events,
</span><span> or False if it already went over the plan limits, and the grace period is over.
</span><span> """</span></code></pre></div></pre>
<h2 id="per-endpoint-rate-limiting">Per endpoint rate-limiting</h2>
<p>While I enforce global rate limits at the nginx-ingress on Kubernetes, I sometimes want more specific limits on a per endpoint/method basis.</p>
<p>For that I use the excellent <a href="https://django-ratelimit.readthedocs.io/en/stable/" rel="noopener" target="_blank">Django Ratelimit</a> library to easily declare the limits per Django view. It's configured to use Redis as a backend for keeping track of the clients making the requests to each endpoint (it stores a hash based on the client key, and not the IP).</p>
<p>For example:</p>
<pre><div><pre><code><span>class</span><span> </span><span>MySensitiveActionView</span><span>(</span><span>RatelimitMixin</span><span>,</span><span> LoginRequiredMixin</span><span>)</span><span>:</span><span>
</span><span> ratelimit_key </span><span>=</span><span> </span><span>"user_or_ip"</span><span>
</span><span> ratelimit_rate </span><span>=</span><span> </span><span>"5/m"</span><span>
</span><span> ratelimit_method </span><span>=</span><span> </span><span>"POST"</span><span>
</span><span> ratelimit_block </span><span>=</span><span> </span><span>True</span><span>
</span>
<span> </span><span>def</span><span> </span><span>get</span><span>(</span><span>)</span><span>:</span><span>
</span><span>   </span><span>.</span><span>.</span><span>.</span><span>
</span>
<span> </span><span>def</span><span> </span><span>post</span><span>(</span><span>)</span><span>:</span><span>
</span><span>   </span><span>.</span><span>.</span><span>.</span></code></pre></div></pre>
<p>In the example above, if the client attempts to POST to this particular endpoint more than 5 times per minute, the subsequent call will get rejected with a <code>HTTP 429 Too Many Requests</code> status code.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-rate-limited.png" alt="Rate limited HTTP error" width="100%" height="auto" loading="lazy"></span>
<em>The friendly error message you'd get when being rate-limited.</em></p>
<h2 id="app-administration">App administration</h2>
<p>Django gives me an admin panel for all my models for free. It’s built-in, and It’s pretty handy for inspecting data for customer support work on the go.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-staff.png" alt="Django admin panel" width="100%" height="auto" loading="lazy"></span>
<em>Django's built-in admin panel is very useful for doing customer support on the go.</em></p>
<p>I added actions to help me manage things from the UI. Things like blocking access to suspicious accounts, sending out announcement emails, and approving full account deletion requests (first a soft delete, and within 72 hours a full destroy).</p>
<p>Security-wise: only staff users are able to access the panel (me), and I’m planning to add 2FA for extra security on all accounts.</p>
<p>Additionally every time a user logs in, I send an automatic security email with details about the new session to the account’s email. Right now I send it on every new login, but I might change it in the future to skip known devices. It’s not a very “MVP feature”, but I care about security and it was not complicated to add. At least I’d be warned if someone logged in to my account.</p>
<p>Of course, there's a lot more to hardening an application than this, but that's out of the scope of this post.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-security-email.png" alt="Panelbear security email notification" width="100%" height="auto" loading="lazy"></span>
<em>Example security activity email you might receive when logging in.</em></p>
<h2 id="running-scheduled-jobs">Running scheduled jobs</h2>
<p>Another interesting use case is that I run a lot of different scheduled jobs as part of my SaaS. These are things like generating daily reports for my customers, calculating usage stats every 15 minutes, sending staff emails (I get a daily email with the most important metrics) and whatnot.</p>
<p>My setup is actually pretty simple, I just have a few Celery workers and a Celery beat scheduler running in the cluster. They are configured to use Redis as the task queue. It took me an afternoon to set it up once, and luckily I haven’t had any issues so far.</p>
<p>I want to get notified via SMS/Slack/Email when a scheduled task is not running as expected. For example when the weekly reports task is stuck or significantly delayed. For that I use <a href="https://cronitor.io/" rel="noopener" target="_blank">Cronitor.io</a>.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/cron-job-monitoring.png" alt="Cronitor.io cron job monitoring dashboard" width="100%" height="auto" loading="lazy"></span>
<em>The cron job monitoring dashboard from Cronitor.io</em></p>
<p>The <a href="https://github.com/cronitorio/cronitor-python" rel="noopener" target="_blank">celery monitoring integration</a> makes it super easy to instrument my scheduled tasks:</p>
<pre><div><pre><code><span># Auto-discovers celery beat tasks</span><span>
</span>
<span></span><span>import</span><span> cronitor</span><span>.</span><span>celery
</span><span></span><span>from</span><span> celery </span><span>import</span><span> Celery
</span>
<span>app </span><span>=</span><span> Celery</span><span>(</span><span>)</span><span>
</span><span>cronitor</span><span>.</span><span>celery</span><span>.</span><span>initialize</span><span>(</span><span>app</span><span>,</span><span> api_key</span><span>=</span><span>"super-secret"</span><span>,</span><span> celerybeat_only</span><span>=</span><span>True</span><span>)</span></code></pre></div></pre>
<h2 id="app-configuration">App configuration</h2>
<p>All my applications are configured via environment variables, old school but portable and well supported. For example, in my Django <code>settings.py</code> I’d setup a variable with a default value:</p>
<pre><div><pre><code><span>INVITE_ONLY </span><span>=</span><span> env</span><span>.</span><span>str</span><span>(</span><span>"INVITE_ONLY"</span><span>,</span><span> default</span><span>=</span><span>False</span><span>)</span></code></pre></div></pre>
<p>And use it anywhere in my code like this:</p>
<pre><div><pre><code><span>from</span><span> django</span><span>.</span><span>conf </span><span>import</span><span> settings
</span>
<span></span><span># If invite-only, then disable account creation endpoints</span><span>
</span><span></span><span>if</span><span> settings</span><span>.</span><span>INVITE_ONLY</span><span>:</span><span>
</span><span> </span><span>.</span><span>.</span><span>.</span></code></pre></div></pre>
<p>I can override the environment variable in my Kubernetes <code>configmap</code>:</p>
<pre><div><pre><code><span>apiVersion</span><span>:</span><span> v1
</span><span></span><span>kind</span><span>:</span><span> ConfigMap
</span><span></span><span>metadata</span><span>:</span><span>
</span><span> </span><span>namespace</span><span>:</span><span> panelbear
</span><span> </span><span>name</span><span>:</span><span> panelbear</span><span>-</span><span>webserver</span><span>-</span><span>config
</span><span></span><span>data</span><span>:</span><span>
</span><span> </span><span>INVITE_ONLY</span><span>:</span><span> </span><span>"True"</span><span>
</span><span> </span><span>DEFAULT_FROM_EMAIL</span><span>:</span><span> </span><span>"The Panelbear Team &lt;support@panelbear.com&gt;"</span><span>
</span><span> </span><span>SESSION_COOKIE_SECURE</span><span>:</span><span> </span><span>"True"</span><span>
</span><span> </span><span>SECURE_HSTS_PRELOAD</span><span>:</span><span> </span><span>"True"</span><span>
</span><span> </span><span>SECURE_SSL_REDIRECT</span><span>:</span><span> </span><span>"True"</span></code></pre></div></pre>
<h2 id="keeping-secrets">Keeping secrets</h2>
<p>The way secrets are handled is pretty interesting: I want to also commit them to my infrastructure repo, alongside other config files, but secrets should be encrypted.</p>
<p>For that I use <a href="https://github.com/bitnami-labs/sealed-secrets" rel="noopener" target="_blank">kubeseal</a> in Kubernetes. This component uses asymmetric crypto to encrypt my secrets, and only a cluster authorized to access the decryption keys can decrypt them.</p>
<p>For example this is what you might find in my infrastructure repo:</p>
<pre><div><pre><code><span>apiVersion</span><span>:</span><span> bitnami.com/v1alpha1
</span><span></span><span>kind</span><span>:</span><span> SealedSecret
</span><span></span><span>metadata</span><span>:</span><span>
</span><span> </span><span>name</span><span>:</span><span> panelbear</span><span>-</span><span>secrets
</span><span> </span><span>namespace</span><span>:</span><span> panelbear
</span><span></span><span>spec</span><span>:</span><span>
</span><span> </span><span>encryptedData</span><span>:</span><span>
</span><span>   </span><span>DATABASE_CONN_URL</span><span>:</span><span> AgBy3i4OJSWK+PiTySYZZA9rO43cGDEq</span><span>...</span><span>
</span><span>   </span><span>SESSION_COOKIE_SECRET</span><span>:</span><span> oi7ySY1ZA9rO43cGDEq+ygByri4OJBlK</span><span>...</span><span>
</span><span>   </span><span>...</span></code></pre></div></pre>
<p>The cluster will automatically decrypt the secrets and pass them to the corresponding container as an environment variable:</p>
<pre><div><pre><code><span>DATABASE_CONN_URL</span><span>=</span><span>'postgres://user:pass@my-rds-db:5432/db'</span><span>
</span><span>SESSION_COOKIE_SECRET</span><span>=</span><span>'this-is-supposed-to-be-very-secret'</span></code></pre></div></pre>
<p>To protect the secrets within the cluster, I use AWS-managed encryption keys via <a href="https://aws.amazon.com/kms/" rel="noopener" target="_blank">KMS</a>, which are rotated regularly. This is a single setting when creating the Kubernetes cluster, and it's fully managed.</p>
<p>Operationally what this means is that I write the secrets as environment variables in a Kubernetes manifest, I then run a command to encrypt them before committing, and push my changes.</p>
<p>The secrets are deployed within a few seconds, and the cluster will take care of automatically decrypting them before running my containers.</p>
<h2 id="relational-data-postgres">Relational data: Postgres</h2>
<p>For experiments I run a vanilla Postgres container within the cluster, and a Kubernetes cronjob that does daily backups to S3. This helps keep my costs down, and it’s pretty simple for just starting out.</p>
<p>However, as a project grows, like Panelbear, I move the database out of the cluster into RDS, and let AWS take care of encrypted backups, security updates and all the other stuff that’s no fun to mess up.</p>
<p>For added security, the databases managed by AWS are still deployed within my private network, so they’re unreachable via the public internet.</p>
<h2 id="columnar-data-clickhouse">Columnar data: ClickHouse</h2>
<p>I rely on <a href="https://clickhouse.tech/" rel="noopener" target="_blank">ClickHouse</a> for efficient storage and (soft) real-time queries over the analytics data in Panelbear. It’s a fantastic columnar database, incredibly fast and when you structure your data well you can achieve high compression ratios (less storage costs = higher margins).</p>
<p>I currently self-host a ClickHouse instance within my Kubernetes cluster. I use a StatefulSet with encrypted volume keys managed by AWS. I have a Kubernetes CronJob that periodically backups up all data in an efficient columnar format to S3. In case of disaster recovery, I have a couple of scripts to manually backup and restore the data from S3.</p>
<p>ClickHouse has been rock-solid so far, and it’s an impressive piece of software. It’s the only tool I wasn’t already familiar with when I started my SaaS, but thanks to their docs I was able to get up and running pretty quickly.</p>
<p>I think there’s a lot of low hanging fruit in case I wanted to squeeze out even more performance (eg. optimizing the field types for better compression, pre-computing materialized tables and tuning the instance type), but it’s good enough for now.</p>
<h2 id="dns-based-service-discovery">DNS-based service discovery</h2>
<p>Besides Django, I also run containers for Redis, ClickHouse, NextJS, among other things. These containers have to talk to each other somehow, and that somehow is via the built-in service discovery in Kubernetes.</p>
<p>It’s pretty simple: I define a Service resource for the container and Kubernetes automatically manages DNS records within the cluster to route traffic to the corresponding service.</p>
<p>For example, given a Redis service exposed within the cluster:</p>
<pre><div><pre><code><span>apiVersion</span><span>:</span><span> v1
</span><span></span><span>kind</span><span>:</span><span> Service
</span><span></span><span>metadata</span><span>:</span><span>
</span><span> </span><span>name</span><span>:</span><span> redis
</span><span> </span><span>namespace</span><span>:</span><span> weekend</span><span>-</span><span>project
</span><span></span><span>labels</span><span>:</span><span>
</span><span> </span><span>app</span><span>:</span><span> redis
</span><span></span><span>spec</span><span>:</span><span>
</span><span> </span><span>type</span><span>:</span><span> ClusterIP
</span><span> </span><span>ports</span><span>:</span><span>
</span><span>   </span><span>-</span><span> </span><span>port</span><span>:</span><span> </span><span>6379</span><span>
</span><span> </span><span>selector</span><span>:</span><span>
</span><span>   </span><span>app</span><span>:</span><span> redis</span></code></pre></div></pre>
<p>I can access this Redis instance anywhere from my cluster via the following URL:</p>
<pre><div><pre><code><span>redis://redis.weekend-project.svc.cluster:6379</span></code></pre></div></pre>
<p>Notice the service name and the project namespace is part of the URL. That makes it really easy for all your cluster services to talk to each other, regardless of where in the cluster they run.</p>
<p>For example, here’s how I’d configure Django via environment variables to use my in-cluster Redis:</p>
<pre><div><pre><code><span>apiVersion</span><span>:</span><span> v1
</span><span></span><span>kind</span><span>:</span><span> ConfigMap
</span><span></span><span>metadata</span><span>:</span><span>
</span><span> </span><span>name</span><span>:</span><span> panelbear</span><span>-</span><span>config
</span><span> </span><span>namespace</span><span>:</span><span> panelbear
</span><span></span><span>data</span><span>:</span><span>
</span><span> </span><span>CACHE_URL</span><span>:</span><span> </span><span>"redis://redis.panelbear.svc.cluster:6379/0"</span><span>
</span><span> </span><span>ENV</span><span>:</span><span> </span><span>"production"</span><span>
</span><span> </span><span>...</span></code></pre></div></pre>
<p>Kubernetes will automatically keep the DNS records in-sync with healthy pods, even as containers get moved across nodes during autoscaling. The way this works behind the scenes is pretty interesting, but out of the scope of this post. <a href="https://medium.com/google-cloud/understanding-kubernetes-networking-services-f0cb48e4cc82" rel="noopener" target="_blank">Here’s a good explanation</a> in case you find it interesting.</p>
<h2 id="version-controlled-infrastructure">Version-controlled infrastructure</h2>
<p>I want version-controlled, reproducible infrastructure that I can create and destroy with a few simple commands.</p>
<p>To achieve this, I use Docker, Terraform and Kubernetes manifests in a monorepo that contains all-things infrastructure, even across multiple projects. And for each application/project I use a separate git repo, but this code is not aware of the environment it will run on.</p>
<p>If you’re familiar with <a href="https://12factor.net/" rel="noopener" target="_blank">The Twelve-Factor App</a> this separation may ring a bell or two. Essentially, my application has no knowledge of the exact infrastructure it will run on, and is configured via environment variables.</p>
<p>By describing my infrastructure in a git repo, I don’t need to keep track of every little resource and configuration setting in some obscure UI. This enables me to restore my entire stack with a single command in case of disaster recovery.</p>
<p>Here’s an example folder structure of what you might find on the infra monorepo:</p>
<pre><div><pre><code><span># Cloud resources
</span>terraform/
<!-- -->aws/
<!-- --> rds.tf
<!-- --> ecr.tf
<!-- --> eks.tf
<!-- --> lambda.tf
<!-- --> s3.tf
<!-- --> roles.tf
<!-- --> vpc.tf
<!-- -->cloudflare/
<!-- --> projects.tf
<!-- -->
<!-- --># Kubernetes manifests
<!-- -->manifests/
<!-- --> cluster/
<!-- -->   ingress-nginx/
<!-- -->   external-dns/
<!-- -->   certmanager/
<!-- -->   monitoring/
<!-- -->
<!-- --> apps/
<!-- -->   panelbear/
<!-- -->     webserver.yaml
<!-- -->     celery-scheduler.yaml
<!-- -->     celery-workers.yaml
<!-- -->     secrets.encrypted.yaml
<!-- -->     ingress.yaml
<!-- -->     redis.yaml
<!-- -->     clickhouse.yaml
<!-- -->   another-saas/
<!-- -->   my-weekend-project/
<!-- -->   some-ghost-blog/
<!-- -->
<!-- --># Python scripts for disaster recovery, and CI
<!-- -->tasks/
<!-- --> ...
<!-- -->
<!-- --># In case of a fire, some help for future me
<!-- -->README.md
<!-- -->DISASTER.md
<!-- -->TROUBLESHOOTING.md</code></pre></div></pre>
<p>Another advantage of this setup is that all the moving pieces are described in one place. I can configure and manage reusable components like centralized logging, application monitoring, and encrypted secrets to name a few.</p>
<h2 id="terraform-for-cloud-resources">Terraform for cloud resources</h2>
<p>I use <a href="https://www.terraform.io/" rel="noopener" target="_blank">Terraform</a> to manage most of the underlying cloud resources. This helps me document, and keep track of the resources and configuration that makes up my infrastructure. In case of disaster recovery, I can spin up and rollback resources with a single command.</p>
<p>For example, here's one of my Terraform files for creating a private S3 bucket for encrypted backups which expire after 30 days:</p>
<pre><div><pre><code><span>resource </span><span>"aws_s3_bucket"</span><span> </span><span>"panelbear_app"</span><span> </span><span>{</span><span>
</span><span> bucket </span><span>=</span><span> </span><span>"panelbear-app"</span><span>
</span><span> acl    </span><span>=</span><span> </span><span>"private"</span><span>
</span>
<span> tags </span><span>=</span><span> </span><span>{</span><span>
</span><span>   </span><span>Name</span><span>        </span><span>=</span><span> </span><span>"panelbear-app"</span><span>
</span><span>   </span><span>Environment</span><span> </span><span>=</span><span> </span><span>"production"</span><span>
</span><span> </span><span>}</span><span>
</span>
<span> lifecycle_rule </span><span>{</span><span>
</span><span>   id      </span><span>=</span><span> </span><span>"backups"</span><span>
</span><span>   enabled </span><span>=</span><span> </span><span>true</span><span>
</span><span>   prefix  </span><span>=</span><span> </span><span>"backups/"</span><span>
</span>
<span>   expiration </span><span>{</span><span>
</span><span>     days </span><span>=</span><span> </span><span>30</span><span>
</span><span>   </span><span>}</span><span>
</span><span> </span><span>}</span><span>
</span>
<span> server_side_encryption_configuration </span><span>{</span><span>
</span><span>   rule </span><span>{</span><span>
</span><span>     apply_server_side_encryption_by_default </span><span>{</span><span>
</span><span>       sse_algorithm     </span><span>=</span><span> </span><span>"AES256"</span><span>
</span><span>     </span><span>}</span><span>
</span><span>   </span><span>}</span><span>
</span><span> </span><span>}</span><span>
</span><span></span><span>}</span></code></pre></div></pre>
<h2 id="kubernetes-manifests-for-app-deployments">Kubernetes manifests for app deployments</h2>
<p>Similarly, all my Kubernetes manifests are described in YAML files in the infrastructure monorepo. I have split them into two directories: <code>cluster</code> and <code>apps</code>.</p>
<p>Inside the <code>cluster</code> directory I describe all cluster-wide services and configuration, things like the nginx-ingress, encrypted secrets, prometheus scrapers, and so on. Essentially the reusable bits.</p>
<p>On the other hand, the <code>apps</code> directory contains one namespace per project, describing what is needed to deploy it (ingress rules, deployments, secrets, volumes, and so on).</p>
<p>One of the cool things about Kubernetes, is that you can customize almost everything about your stack. So for example, if I wanted to use encrypted SSD volumes that can be resized, I could define a new “StorageClass'' in the cluster. Kubernetes and in this case AWS will coordinate and make the magic happen for me. For example:</p>
<pre><div><pre><code><span>apiVersion</span><span>:</span><span> storage.k8s.io/v1
</span><span></span><span>kind</span><span>:</span><span> StorageClass
</span><span></span><span>metadata</span><span>:</span><span>
</span><span> </span><span>name</span><span>:</span><span> encrypted</span><span>-</span><span>ssd
</span><span> </span><span>provisioner</span><span>:</span><span> kubernetes.io/aws</span><span>-</span><span>ebs
</span><span></span><span>parameters</span><span>:</span><span>
</span><span> </span><span>type</span><span>:</span><span> gp2
</span><span> </span><span>encrypted</span><span>:</span><span> </span><span>"true"</span><span>
</span><span> </span><span>reclaimPolicy</span><span>:</span><span> Retain
</span><span> </span><span>allowVolumeExpansion</span><span>:</span><span> </span><span>true</span><span>
</span><span> </span><span>volumeBindingMode</span><span>:</span><span> WaitForFirstConsumer</span></code></pre></div></pre>
<p>I can now go ahead and attach this type of persistent storage for any of my deployments, and Kubernetes will manage the requested resources for me:</p>
<pre><div><pre><code><span># Somewhere in the ClickHouse StatefulSet configuration</span><span>
</span><span></span><span>...</span><span>
</span><span></span><span>storageClassName</span><span>:</span><span> encrypted</span><span>-</span><span>ssd
</span><span></span><span>resources</span><span>:</span><span>
</span><span> </span><span>requests</span><span>:</span><span>
</span><span>   </span><span>storage</span><span>:</span><span> 250Gi
</span><span></span><span>...</span></code></pre></div></pre>
<h2 id="subscriptions-and-payments">Subscriptions and Payments</h2>
<p>I use <a href="https://stripe.com/payments/checkout" rel="noopener" target="_blank">Stripe Checkout</a> to save all the work in handling payments, creating checkout screens, handling 3D secure requirements from credit cards, and even the customer billing portal.</p>
<p>I do not have access to the payment information itself, which is a huge relief and enables me to focus on my product instead of highly sensitive topics like credit card handling and <a href="https://stripe.com/radar" rel="noopener" target="_blank">fraud prevention</a>.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-billing-portal-stripe.png" alt="Panelbear's Customer Billing Portal" width="100%" height="auto" loading="lazy"></span>
<em>An example Customer Billing Portal in Panelbear.</em></p>
<p>All I have to do is create a new customer session and redirect the customer to one of Stripe's hosted pages. I then listen for webhooks about whether the customer upgraded/downgraded/cancelled and update my database accordingly.</p>
<p>Of course there's a few important parts like validating that the webhook really came from Stripe (you have to validate the request signature with a secret), but Stripe's documentation covers all the points really well.</p>
<p>I only have a few plans, so it's pretty easy for me to manage them in my codebase. I essentially have something like:</p>
<pre><div><pre><code><span># Plan constants</span><span>
</span><span>FREE </span><span>=</span><span> Plan</span><span>(</span><span>
</span><span>  code</span><span>=</span><span>'free'</span><span>,</span><span>
</span><span>  display_name</span><span>=</span><span>'Free Plan'</span><span>,</span><span>
</span><span>  features</span><span>=</span><span>{</span><span>'abc'</span><span>,</span><span> </span><span>'xyz'</span><span>}</span><span>,</span><span>
</span><span>  monthly_usage_limit</span><span>=</span><span>5e3</span><span>,</span><span>
</span><span>  max_alerts</span><span>=</span><span>1</span><span>,</span><span>
</span><span>  stripe_price_id</span><span>=</span><span>'...'</span><span>,</span><span>
</span><span></span><span>)</span><span>
</span>
<span>BASIC </span><span>=</span><span> Plan</span><span>(</span><span>
</span><span>  code</span><span>=</span><span>'basic'</span><span>,</span><span>
</span><span>  display_name</span><span>=</span><span>'Basic Plan'</span><span>,</span><span>
</span><span>  features</span><span>=</span><span>{</span><span>'abc'</span><span>,</span><span> </span><span>'xyz'</span><span>}</span><span>,</span><span>
</span><span>  monthly_usage_limit</span><span>=</span><span>50e3</span><span>,</span><span>
</span><span>  max_alerts</span><span>=</span><span>5</span><span>,</span><span>
</span><span>  stripe_price_id</span><span>=</span><span>'...'</span><span>,</span><span>
</span><span></span><span>)</span><span>
</span>
<!-- -->
<span>PREMIUM </span><span>=</span><span> Plan</span><span>(</span><span>
</span><span>  code</span><span>=</span><span>'premium'</span><span>,</span><span>
</span><span>  display_name</span><span>=</span><span>'Premium Plan'</span><span>,</span><span>
</span><span>  features</span><span>=</span><span>{</span><span>'abc'</span><span>,</span><span> </span><span>'xyz'</span><span>,</span><span> </span><span>'special-feature'</span><span>}</span><span>,</span><span>
</span><span>  monthly_usage_limit</span><span>=</span><span>250e3</span><span>,</span><span>
</span><span>  max_alerts</span><span>=</span><span>25</span><span>,</span><span>
</span><span>  stripe_price_id</span><span>=</span><span>'...'</span><span>,</span><span>
</span><span></span><span>)</span><span>
</span>
<span></span><span># Helpers for easy access</span><span>
</span><span>ALL_PLANS </span><span>=</span><span> </span><span>[</span><span>FREE</span><span>,</span><span> BASIC</span><span>,</span><span> PREMIUM</span><span>]</span><span>
</span><span>PLANS_BY_CODE </span><span>=</span><span> </span><span>{</span><span>p</span><span>.</span><span>code</span><span>:</span><span> p </span><span>for</span><span> p </span><span>in</span><span> ALL_PLANS</span><span>}</span></code></pre></div></pre>
<p>I can then use it in any API endpoint, cron job and admin task to determine which limits/features apply for a given customer. The current plan for a given customer is a column called <code>plan_code</code> on a <code>BillingProfile</code> model. I separate the user from the billing information since I'm planning to add organizations/teams at some point, and that way I can easily migrate the BillingProfile to the account owner / admin user.</p>
<p>Of course this model won't scale if you're offering thousands of individual products in an e-commerce shop, but it works pretty well for me since a SaaS usually only has a few plans.</p>
<h2 id="logging">Logging</h2>
<p>I don’t need to instrument my code with any logging agent or anything like that. I simply log to stdout and Kubernetes automatically collects, and rotates logs for me. I could also automatically ship those logs to something like Elasticsearch/Kibana using <a href="https://fluentbit.io/" rel="noopener" target="_blank">FluentBit</a>, but I don’t do that yet to keep things simple.</p>
<p>To inspect the logs I use <a href="https://github.com/wercker/stern" rel="noopener" target="_blank">stern</a>, a tiny CLI tool for Kubernetes that makes it super easy to tail application logs across multiple pods.
For example, <code>stern -n ingress-nginx</code> would tail the access logs for my nginx pods even across multiple nodes.</p>
<h2 id="monitoring-and-alerting">Monitoring and alerting</h2>
<p>In the beginning I used a self-hosted Prometheus / Grafana to automatically monitor my cluster and application metrics. However, I didn’t feel comfortable self-hosting my monitoring stack, because if something went wrong in the cluster, my alerting system would go down with it too (not great).</p>
<p>If there’s one thing that should never go down is your monitoring system, otherwise you’re essentially flying without instruments. That’s why I swapped my monitoring / alerting system with a hosted service (<a href="http://newrelic.com/" rel="noopener" target="_blank">New Relic</a>).</p>
<p>All my services have a Prometheus integration that automatically records and forwards the metrics to a compatible backend, such as Datadog, New Relic, Grafana Cloud or a self-hosted Prometheus instance (what I used to do). To migrate to New Relic, all I had to do was to use their Prometheus Docker image, and shutdown the self-hosted monitoring stack.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-newrelic-monitoring.png" alt="Panelbear New Relic Dashboard" width="100%" height="auto" loading="lazy"></span>
<em>Example New Relic dashboard with a summary of the most important stats.</em></p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-newrelic-uptime.png" alt="Panelbear New Relic Uptime Monitoring" width="100%" height="auto" loading="lazy"></span>
<em>I also monitor uptime around the world using New Relic's probes.</em></p>
<p>The migration from a self-hosted Grafana/Loki/Prometheus stack to New Relic reduced my operational surface. More importantly, I'd still get alerted even if my AWS region is down.</p>
<p>You might be wondering how I expose metrics from my Django app. I leverage the excellent <a href="https://github.com/korfuri/django-prometheus" rel="noopener" target="_blank">django-prometheus</a> library, and simply register a new counter/gauge in my application:</p>
<pre><div><pre><code><span>from</span><span> prometheus_client </span><span>import</span><span> Counter
</span>
<span>EVENTS_WRITTEN </span><span>=</span><span> Counter</span><span>(</span><span>
</span><span> </span><span>"events_total"</span><span>,</span><span>
</span><span> </span><span>"Total number of events written to the eventstore"</span><span>
</span><span></span><span>)</span><span>
</span>
<span></span><span># We can increment the counter to record the number of events</span><span>
</span><span></span><span># being written to the eventstore (ClickHouse)</span><span>
</span><span>EVENTS_WRITTEN</span><span>.</span><span>incr</span><span>(</span><span>count</span><span>)</span></code></pre></div></pre>
<p>It will expose this and other metrics in the <code>/metrics</code> endpoint of my server (only reachable within my cluster). Prometheus will automatically scrape this endpoint every minute and forward the metrics to New Relic.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/prometheus-metric-in-newrelic.png" alt="Prometheus metrics" width="100%" height="auto" loading="lazy"></span>
<em>The metric automatically shows up in New Relic thanks to the Prometheus integration.</em></p>
<h2 id="error-tracking">Error tracking</h2>
<p>Everyone thinks they don’t have errors in their application, until they start error tracking. It’s too easy for an exception to get lost in logs, or worse you’re aware of it but unable to reproduce the problem due to lack of context.</p>
<p>I use <a href="https://sentry.io/" rel="noopener" target="_blank">Sentry</a> to aggregate and notify me about errors across my applications. Instrumenting my Django apps is very simple:</p>
<pre><div><pre><code><span>SENTRY_DSN </span><span>=</span><span> env</span><span>.</span><span>str</span><span>(</span><span>"SENTRY_DSN"</span><span>,</span><span> default</span><span>=</span><span>None</span><span>)</span><span>
</span>
<span></span><span># Init Sentry if configured</span><span>
</span><span></span><span>if</span><span> SENTRY_DSN</span><span>:</span><span>
</span><span> sentry_sdk</span><span>.</span><span>init</span><span>(</span><span>
</span><span>   dsn</span><span>=</span><span>SENTRY_DSN</span><span>,</span><span>
</span><span>   integrations</span><span>=</span><span>[</span><span>DjangoIntegration</span><span>(</span><span>)</span><span>,</span><span> RedisIntegration</span><span>(</span><span>)</span><span>,</span><span> CeleryIntegration</span><span>(</span><span>)</span><span>]</span><span>,</span><span>
</span><span>   </span><span># Do not send user PII data to Sentry</span><span>
</span><span>   </span><span># See also inbound rules for special patterns</span><span>
</span><span>   send_default_pii</span><span>=</span><span>False</span><span>,</span><span>
</span><span>   </span><span># Only sample a small amount of performance traces</span><span>
</span><span>   traces_sample_rate</span><span>=</span><span>env</span><span>.</span><span>float</span><span>(</span><span>"SENTRY_TRACES_SAMPLE_RATE"</span><span>,</span><span> default</span><span>=</span><span>0.008</span><span>)</span><span>,</span><span>
</span><span> </span><span>)</span></code></pre></div></pre>
<p>It’s been very helpful because it automatically collects a bunch of contextual information about what happened when the exception occurred:</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-sentry-error-tracking.png" alt="Panelbear Sentry error tracking" width="100%" height="auto" loading="lazy"></span>
<em>Sentry aggregates and notifies me in case of exceptions.</em></p>
<p>I use a Slack <code>#alerts</code> channel to centralize all my alerts: downtime, cron job failures, security alerts, performance regressions, application exceptions, and whatnot. It's great because I can often correlate issues when multiple services ping me around the same time, on seemingly unrelated problems.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-slack-alerts-channel.png" alt="Panelbear Slack alerts channel" width="100%" height="auto" loading="lazy"></span>
<em>Example Slack alert due to a CDN endpoint being down in Sydney, Australia.</em></p>
<h2 id="profiling-and-other-goodies">Profiling and other goodies</h2>
<p>When I need to deep dive, I also use tools like <a href="https://docs.python.org/3/library/profile.html" rel="noopener" target="_blank">cProfile</a> and <a href="https://jiffyclub.github.io/snakeviz/" rel="noopener" target="_blank">snakeviz</a> to better understand allocations, number of calls and other stats about my app’s performance. Sounds fancy but they’re pretty easy to use tools, and have helped me identify various issues in the past that made my dashboards slow from seemingly unrelated code.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-cprofile-snakeviz.jpeg" alt="Panelbear New Relic Uptime Monitoring" width="100%" height="auto" loading="lazy"></span>
<em>cProfile and snakeviz are great tools to profile your Python code locally.</em></p>
<p>I also use the <a href="https://django-debug-toolbar.readthedocs.io/en/latest/" rel="noopener" target="_blank">Django debug toolbar</a> on my local machine to easily inspect the queries that a view triggers, preview outgoing emails during development, and many other goodies.</p>
<p><span><img src="https://anthonynsimon.com/img/blog/one-man-saas-architecture/panelbear-django-debug-toolbar.png" alt="Panelbear New Relic Uptime Monitoring" width="100%" height="auto" loading="lazy"></span>
<em>Django's Debug Toolbar is great for inspecting stuff in local dev, and previewing transactional emails.</em></p>
<h2 id="thats-all-folks">That's all folks</h2>
<p>I hope you enjoyed this post if you've made it this far. It ended up being a lot longer than I originally intended as there was a lot of ground to cover.</p>
<p>If you're not already familiar with these tools consider using a managed platform first, for example Render or Railway. This might help you focus on your product, and still gain many of the benefits I talk about here.</p>
<p>"Do you use Kubernetes for everything?" - No, different projects, different needs. For example this blog is hosted on <a href="https://vercel.com/" rel="noopener" target="_blank">Vercel</a>.</p>
<p>That said, I do intend to write more follow up posts on specific tips and tricks, and share more lessons learned along the way.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SimCity in the web browser using WebAssembly and OpenGL (212 pts)]]></title>
            <link>https://micropolisweb.com/</link>
            <guid>40693944</guid>
            <pubDate>Sun, 16 Jun 2024 01:12:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://micropolisweb.com/">https://micropolisweb.com/</a>, See on <a href="https://news.ycombinator.com/item?id=40693944">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><b>This is Micropolis in WebAssembly!</b><br> Based on the original SimCity sources,<br> designed by Will Wright, ported by Don Hopkins.<br> GitHub: <a target="_new" href="https://github.com/SimHacker/MicropolisCore">https://github.com/SimHacker/MicropolisCore</a><br> YouTube: <a target="_new" href="https://www.youtube.com/watch?v=wlHGfNlE8Os">"MicropolisWeb Demo 1"</a><br> More Info: <a target="_new" href="https://mitpress.mit.edu/9780262547482/building-simcity/">Chaim Gingold's book "Building SimCity"</a><br> and <a target="_new" href="https://smalltalkzoo.thechm.org/users/Dan/uploads/SimCityReverseDiagrams.pdf">Chaim Gingold's "SimCity Reverse Diagrams"</a>.<br> Left button drag to pan, mouse wheel to zoom.<br> Arrow keys pan, comma and period zoom. <br> Letter keys load various cities, tab to generate.<br> Numeric keys set the speed, 0 toggles pause.<br> The brackets lower and raise the tax rate.<br> <em>WARNING: DO NOT hit the space bar,<br> because that will open up the <a target="_new" href="https://www.youtube.com/watch?v=WPMeWas4kXM">Space Inventory</a><br></em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A collection of 2,299 blogs about every topic (116 pts)]]></title>
            <link>https://ooh.directory/</link>
            <guid>40693787</guid>
            <pubDate>Sun, 16 Jun 2024 00:42:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ooh.directory/">https://ooh.directory/</a>, See on <a href="https://news.ycombinator.com/item?id=40693787">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
<div>
<ol>
<li>

<span>
<a href="https://ooh.directory/blogs/arts/">Arts and media</a>
<small>(883)</small>
<ul>
<li><a href="https://ooh.directory/blogs/arts/architecture/">Architecture</a></li>
<li><a href="https://ooh.directory/blogs/arts/books/">Books</a></li>
<li><a href="https://ooh.directory/blogs/arts/design/">Design</a></li>
<li><a href="https://ooh.directory/blogs/arts/games/">Games</a></li>
<li><a href="https://ooh.directory/blogs/arts/music/">Music</a></li>
</ul>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/technology/">Computers, internet, tech</a>
<small>(381)</small>
<ul>
<li><a href="https://ooh.directory/blogs/technology/hardware/">Hardware</a></li>
<li><a href="https://ooh.directory/blogs/technology/internet/">Internet</a></li>
<li><a href="https://ooh.directory/blogs/technology/development/web/">Web development</a></li>
</ul>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/countries/">Countries, states, towns, etc.</a>
<small>(121)</small>
<ul>
<li><a href="https://ooh.directory/blogs/countries/uk/london/">London</a></li>
<li><a href="https://ooh.directory/blogs/countries/uk/">UK</a></li>
<li><a href="https://ooh.directory/blogs/countries/usa/">USA</a></li>
</ul>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/economics/">Economics and business</a>
<small>(80)</small>
<ul>
<li><a href="https://ooh.directory/blogs/economics/companies/bbc/">BBC</a></li>
<li><a href="https://ooh.directory/blogs/economics/economics/">Economics</a></li>
<li><a href="https://ooh.directory/blogs/economics/business/management/">Management</a></li>
</ul>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/education/">Education</a>
<small>(38)</small>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/politics/">Government, politics and law</a>
<small>(59)</small>
<ul>
<li><a href="https://ooh.directory/blogs/politics/law/">Law</a></li>
<li><a href="https://ooh.directory/blogs/politics/military/">Military</a></li>
<li><a href="https://ooh.directory/blogs/politics/politics/">Politics</a></li>
</ul>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/humanities/">Humanities</a>
<small>(167)</small>
<ul>
<li><a href="https://ooh.directory/blogs/humanities/futures/">Futures</a></li>
<li><a href="https://ooh.directory/blogs/humanities/geography/">Geography</a></li>
<li><a href="https://ooh.directory/blogs/humanities/history/">History</a></li>
<li><a href="https://ooh.directory/blogs/humanities/language/">Language</a></li>
</ul>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/personal/">Personal blogs</a>
<small>(358)</small>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/recreation/">Recreation</a>
<small>(239)</small>
<ul>
<li><a href="https://ooh.directory/blogs/recreation/food-and-drink/">Food &amp; drink</a></li>
<li><a href="https://ooh.directory/blogs/recreation/sport/">Sport &amp; exercise</a></li>
<li><a href="https://ooh.directory/blogs/recreation/travel/">Travel</a></li>
</ul>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/science/">Science</a>
<small>(141)</small>
<ul>
<li><a href="https://ooh.directory/blogs/science/earth-science/">Earth science</a></li>
<li><a href="https://ooh.directory/blogs/science/mathematics/">Mathematics</a></li>
<li><a href="https://ooh.directory/blogs/science/space/">Space</a></li>
</ul>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/society/">Society</a>
<small>(44)</small>
<ul>
<li><a href="https://ooh.directory/blogs/society/death-graves/">Death &amp; graves</a></li>
<li><a href="https://ooh.directory/blogs/society/psychogeography/">Psychogeography</a></li>
<li><a href="https://ooh.directory/blogs/society/religion/">Religion</a></li>
</ul>
</span>
</li>
<li>

<span>
<a href="https://ooh.directory/blogs/uncategorizable/">Uncategorizable blogs</a>
<small>(41)</small>
<ul>
<li><a href="https://ooh.directory/blogs/uncategorizable/completionists/">Completionist blogs</a></li>
</ul>
</span>
</li>
</ol>
</div>
<div>
<h2>Recently added blogs</h2>
<p>Or see <a href="https://ooh.directory/updated/">recently <em>updated</em> blogs</a></p>
<ol>
<li>
<p>
<a href="https://www.holdfastbespoke.com/blog-3-1">Hold Fast Bespoke Blog</a>
<img src="https://ooh.directory/static/oohdir/img/new.gif" alt="NEW" width="31" height="12">
<br>
<q>Stay abreast of what's happening in my midcoast Maine workroom. This is where I share a glimpse into the world of bespoke tailoring.</q>
<span>
<span>
<span aria-label="United States of America" title="United States of America">🇺🇸</span>
</span>
<a href="https://ooh.directory/blog/7je9j6/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-05-27T16:27:30+00:00">2 weeks ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://www.holdfastbespoke.com/blog-3-1/hold-fast-classic-tweed-overcoat">Hold Fast Classic Tweed Overcoat</a>
</figcaption>
<blockquote cite="https://www.holdfastbespoke.com/blog-3-1/hold-fast-classic-tweed-overcoat">
Classic Fabric / Classic Style This wool tweed rendition of the Hold Fast Balmacaan is, in my opinion, timeless. Tailored in collaboration with David Wood Clothiers of Portland, Maine; it will never go out of …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://blakegopnik.com/">BLAKE GOPNIK on art</a>
<img src="https://ooh.directory/static/oohdir/img/new.gif" alt="NEW" width="31" height="12">
<br>
<span>
<span>
<span aria-label="United States of America" title="United States of America">🇺🇸</span>
</span>
<a href="https://ooh.directory/blog/6py4p6/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-06-14T17:58:53+00:00">a day ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://blakegopnik.com/post/753284345668747264">THE FRIDAY PIC is a photo by Stephen Shore titled “Kingston, New York, November 8, 2020, …</a>
</figcaption>
<blockquote cite="https://blakegopnik.com/post/753284345668747264">
THE FRIDAY PIC is a photo by Stephen Shore titled “Kingston, New York, November 8, 2020, 41°56.9443167N, 74°1.7406167W.” (I love all that specificity.) The image is from Shore’s fabulous new show of photographs shot from …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://mleddy.blogspot.com/">Orange Crate Art</a>
<img src="https://ooh.directory/static/oohdir/img/new.gif" alt="NEW" width="31" height="12">
<br>
<q>“It goes idea by idea”.</q>
By Michael Leddy.
<span>
<span>
<span aria-label="United States of America" title="United States of America">🇺🇸</span>
</span>
<a href="https://ooh.directory/blog/8v35v6/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-06-15T22:06:00+00:00">12 hours ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://mleddy.blogspot.com/2024/06/trumps-bing.html">Trump’s “bing”</a>
</figcaption>
<blockquote cite="https://mleddy.blogspot.com/2024/06/trumps-bing.html">
It's a small thing, but I think I've discovered the source for Trump's strange "bing" habit. Here is a compilation or Trump moments. And here — wait for it — is Joe Pesci in Goodfellas. …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://saintjohnswort.ca/">St. John's Wort</a>
<img src="https://ooh.directory/static/oohdir/img/new.gif" alt="NEW" width="31" height="12">
<br>
<q>Beery Musings And Amusing Beers.</q>
By Jordan St. John.
<span>
<span>
<span aria-label="Canada" title="Canada">🇨🇦</span>
</span>
<a href="https://ooh.directory/blog/8nmqr6/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-05-21T12:56:17+00:00">3 weeks ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://saintjohnswort.ca/the-second-wedge-zivotni-czech-style-lager/">The Second Wedge&nbsp;Životní Czech Style Lager</a>
</figcaption>
<blockquote cite="https://saintjohnswort.ca/the-second-wedge-zivotni-czech-style-lager/">
It seems odd to write about a beer that’s almost gone. Usually when I write about a collaboration beer, I do it a couple of weeks before it comes out because the brewing process is …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://hitarththummar.xyz/posts/">ht.xyz - Blog posts</a>
<img src="https://ooh.directory/static/oohdir/img/new.gif" alt="NEW" width="31" height="12">
<br>
<q>I'm passionate about creativity, storytelling, and technology, and this website is my nook on the internet to express that passion.</q>
By Hitarth Thummar.
<span>
<span>
<span aria-label="India" title="India">🇮🇳</span>
</span>
<a href="https://ooh.directory/blog/89yrw7/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-05-20T00:00:00+00:00">3 weeks ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://hitarththummar.xyz/posts/goodbye_copilot">Goodbye Copilot, it was fun while it lasted.</a>
</figcaption>
<blockquote cite="https://hitarththummar.xyz/posts/goodbye_copilot">
I have been using GitHub Copilot for the past few months now, and honestly it is pretty fun. It felt like the kind of racy relationship that keeps giving you adrenaline every waking moment of …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://lord.technology/">Jamie Lord</a>
<img src="https://ooh.directory/static/oohdir/img/new.gif" alt="NEW" width="31" height="12">
<br>
<q>Solution Architect at CDS, based in Nottingham, UK, using Azure and C# to build awesome projects.</q>
<span>
<span>
<span aria-label="United Kingdom" title="United Kingdom">🇬🇧</span>
</span>
<a href="https://ooh.directory/blog/84pwg8/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-06-06T16:00:00+00:00">a week ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://lord.technology/2024/06/06/the-ai-dilemma-balancing-rapid-advancement-and-organisational-readiness.html">The AI Dilemma: Balancing Rapid Advancement and Organisational Readiness</a>
</figcaption>
<blockquote cite="https://lord.technology/2024/06/06/the-ai-dilemma-balancing-rapid-advancement-and-organisational-readiness.html">
As artificial intelligence continues to evolve at an astonishing rate, organisations find themselves at a critical juncture. The transformative potential of AI is undeniable, with breakthroughs in natural language processing, computer vision, and generative models …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://aows.co/blog">aows — black and white photography</a>
<br>
<q>Film &amp; Digital Monochrome Photography.</q>
By Adrian Vila.
<span>
<span>
<span aria-label="United States of America" title="United States of America">🇺🇸</span>
</span>
<a href="https://ooh.directory/blog/7r5ek8/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-06-15T21:02:57+00:00">13 hours ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://aows.co/blog/2024/6/15/alone">Alone</a>
</figcaption>
<blockquote cite="https://aows.co/blog/2024/6/15/alone">
Utah, September 2020. From the video Great Salt Lake: a photography adventure.
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://www.inthemargins.ca/">Flashing Palely in the Margins</a>
<br>
<q>An epistolarian, anthropologist, urban explorer, and over-user of the discretionary comma.</q>
By Sameer Vasta.
<span>
<span>
<span aria-label="Canada" title="Canada">🇨🇦</span>
</span>
<a href="https://ooh.directory/blog/6kyvm7/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-05-23T16:45:00+00:00">3 weeks ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://www.inthemargins.ca/asparagus">Asparagus season</a>
</figcaption>
<blockquote cite="https://www.inthemargins.ca/asparagus">
There is an asparagus farm a stone’s throw away from our house, and every spring, I’m so thankful that it’s there. I didn’t grow up eating asparagus; it wasn’t something that was easily put in …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://silviamaggidesign.com/blog/">Silvia Maggi - Designer</a>
<br>
<q>I write about design, technology, their effects on our lives, photography, and more. I curate the inspiration series Design, Digested.</q>
<span>
<span>
<span aria-label="United Kingdom" title="United Kingdom">🇬🇧</span>
</span>
<a href="https://ooh.directory/blog/75pod8/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-06-06T12:13:25+00:00">a week ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://silviamaggidesign.com/design-digested/design-digested-55/">Design, Digested 55 – Decline of the user interface, accessibility overlays, rituals</a>
</figcaption>
<blockquote cite="https://silviamaggidesign.com/design-digested/design-digested-55/">
If you ever thought ageing is the reason why technology seems more complicated, read on. Also, a guide to live in harmony with the world. The decline of the user interface Software has never looked …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://pawelurbanek.com/blog">Paweł U.</a>
<br>
<q>Ruby on Rails Web Development Consultant Full Stack Blog.</q>
By Paweł Urbanek.
<span>
<span>
<span aria-label="Poland" title="Poland">🇵🇱</span>
</span>
<a href="https://ooh.directory/blog/73po36/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-06-11T07:36:01+00:00">5 days ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://pawelurbanek.com/mev-yul-huff-gas">How to Optimize MEV Arbitrage Smart Contract with Yul and Huff</a>
</figcaption>
<blockquote cite="https://pawelurbanek.com/mev-yul-huff-gas">
Minimizing gas usage directly impacts the profitability of your MEV bot. In this blog post, we will start with a straightforward but nonoptimal approach for swapping two UniswapV2 pairs and gradually improve it. We will …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://blog.ignaciobrasca.com/">Happiness Machines | Entries</a>
<br>
<q>Technical and not-so technical articles I write.</q>
By Ignacio Brasca.
<span>
<span>
<span aria-label="Argentina" title="Argentina">🇦🇷</span>
</span>
<a href="https://ooh.directory/blog/7y2v56/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-05-18T00:00:00+00:00">4 weeks ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://blog.ignaciobrasca.com/programming/2024/05/18/pointer-stack-math.html">Nand2Tetris: Stack Pointer Math</a>
</figcaption>
<blockquote cite="https://blog.ignaciobrasca.com/programming/2024/05/18/pointer-stack-math.html">
After spending several days grappling with the intricacies of the stack pointer in my Hack computer, I finally decided to consolidate my understanding in a post. This will be a concise guide, almost a cheatsheet, …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://pantsaflame.blogspot.com/">Pants On Fire</a>
<br>
<q>The questionable activities of William J. Denby and his band of grifters in the city of Kawartha Lakes, Ontario, Canada.</q>
<span>
<span>
<span aria-label="Canada" title="Canada">🇨🇦</span>
</span>
<a href="https://ooh.directory/blog/7ewzo7/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-06-14T21:33:00+00:00">a day ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://pantsaflame.blogspot.com/2024/06/return-of-kawartha-first-nation.html">Return of Kawartha First Nation?</a>
</figcaption>
<blockquote cite="https://pantsaflame.blogspot.com/2024/06/return-of-kawartha-first-nation.html">
First, I know that yesterday's post probably upset a number of you who don't like Publication Bancakes - it feels unfair to be unable to discuss things that are of significant concern to many in …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://blog.atmtxphoto.com/">atmtx photo blog</a>
<br>
<q>For the Love of Photography + Stories + Gear.</q>
By Andy.
<span>
<span>
<span aria-label="United States of America" title="United States of America">🇺🇸</span>
</span>
<a href="https://ooh.directory/blog/6m5nr8/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-06-16T03:13:13+00:00">7 hours ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://blog.atmtxphoto.com/2024/06/15/cow-competition/">Cow Competition</a>
</figcaption>
<blockquote cite="https://blog.atmtxphoto.com/2024/06/15/cow-competition/">
Cow Competition, Rodeo Austin – Austin, Texas Beyond the large arena and the past poultry and livestock displays are the cows, neatly arranged in multiple rows with metal dividers. They take up a significant part …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://shoegazing.com/">Shoegazing.com</a>
<br>
<q>One of the largest blogs in the world on quality shoes, mainly welted footwear. Articles on shoe care, shoe construction, buying guides and more.</q>
By Jesper Ingevaldsson.
<span>
<span>
<span aria-label="Sweden" title="Sweden">🇸🇪</span>
</span>
<a href="https://ooh.directory/blog/8xxvg8/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-06-14T18:56:23+00:00">a day ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://shoegazing.com/2024/06/14/the-tip-dont-use-waterproofing-spray-on-regular-smooth-leather/">The tip – Don’t use waterproofing spray on regular smooth leather</a>
</figcaption>
<blockquote cite="https://shoegazing.com/2024/06/14/the-tip-dont-use-waterproofing-spray-on-regular-smooth-leather/">
One of the most common mistakes done when it comes to shoe care, if one look at the population as a whole, is the use of waterproofing spray also on full grain smooth leather. Yes, …
</blockquote>

</figure>
</div> 
</details>
</li>
<li>
<p>
<a href="https://sevenoutoften.co.uk/">Seven Out Of Ten</a>
<br>
<q>A personal writing project about video games, music and other things I’m interested in.</q>
By Liam Richardson.
<span>
<a href="https://ooh.directory/blog/7q3my6/">More info</a>
</span>
</p>
<details>
<summary>
Updated <time datetime="2024-06-06T12:22:53+00:00">a week ago</time>
</summary>
<div>
<figure>
<figcaption>
<a href="https://sevenoutoften.co.uk/here-have-some-keigh-3-2024-predictions/">Here, have some Keigh-3 2024 predictions</a>
</figcaption>
<blockquote cite="https://sevenoutoften.co.uk/here-have-some-keigh-3-2024-predictions/">
This year’s Not-E3 marks the first time in over a decade that I’m not covering the conference in some capacity, professional or otherwise. On the one hand, I am extremely relieved (covering E3 was hard …
</blockquote>

</figure>
</div> 
</details>
</li>
</ol>
<p>
<a href="https://ooh.directory/added/?d=20240602133623">See more</a>, or see <a href="https://ooh.directory/updated/">recently <em>updated</em> blogs</a>
</p>
</div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SQLite is likely used more than all other database engines combined (126 pts)]]></title>
            <link>https://sqlite.org/mostdeployed.html</link>
            <guid>40693500</guid>
            <pubDate>Sat, 15 Jun 2024 23:38:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sqlite.org/mostdeployed.html">https://sqlite.org/mostdeployed.html</a>, See on <a href="https://news.ycombinator.com/item?id=40693500">Hacker News</a></p>
<div id="readability-page-1" class="page">
<div>
<p><a href="https://sqlite.org/index.html">
<img src="https://sqlite.org/images/sqlite370_banner.gif" alt="SQLite">
</a></p>
<p>
Small. Fast. Reliable.<br>Choose any three.
</p>



</div>






<p>SQLite is likely used more than all other database engines
combined.  Billions and billions of copies
of SQLite exist in the wild.  SQLite is found in:

</p><ul>
<li>Every Android device
</li><li>Every iPhone and iOS device
</li><li>Every Mac
</li><li>Every Windows10 machine
</li><li>Every Firefox, Chrome, and Safari web browser
</li><li>Every instance of Skype
</li><li>Every instance of iTunes
</li><li>Every Dropbox client
</li><li>Every TurboTax and QuickBooks
</li><li>PHP and Python
</li><li>Most television sets and set-top cable boxes
</li><li>Most automotive multimedia systems
</li><li>Countless millions of other applications
</li></ul>

<p>Since SQLite is used extensively in every smartphone, and there are
more than 4.0 billion (4.0e9) smartphones in active use, each holding
hundreds of
SQLite database files, it is seems likely that there are over one trillion
(1e12) SQLite databases in active use.

</p><h2>Most Widely Deployed Software Module of Any Type?</h2>

<p>SQLite is probably one of the top five most deployed
software modules of any description.  
Other libraries with similar reach include:

</p><ul>
<li>
The original <a href="http://zlib.net/">zlib</a> implementation by
Jean-loup Gailly and Mark Adler.
</li><li>
The original reference implementation for
<a href="http://www.libpng.org/">libpng</a>
</li><li>
Libjpeg from the <a href="http://ijg.org/">Independent JPEG Group</a>
</li></ul>

<p>
Libc is omitted from the above list even though
it is more common than SQLite because
libc is not a single software component but rather several
competing implementations (ex: BSD vs. GNU) with similar interfaces.
There are also independent implementations of libjpeg and libpng,
though in those cases the canonical implementations are very popular.
</p>

<p>
Precise numbers are difficult to obtain and so exact rankings
are impossible.  But our best guess is that SQLite is the second
mostly widely deployed software library, after libz.
Some commentators observe that SQLite tends
to be statically linked and thus have multiple instances on
each machine, whereas libz tends to have just
a single instance per machine in the form of a shared library or DLL.
So even though the number of devices containing libz
may be greater than the number of
devices that contain SQLite, the total number of instances per device
<em>might</em> be higher for SQLite and so SQLite <em>might</em>
be the single most widely deployed and used software component.
</p>


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google, Cloudflare and Cisco will poison DNS to stop piracy block circumvention (295 pts)]]></title>
            <link>https://torrentfreak.com/google-cloudflare-cisco-will-poison-dns-to-stop-piracy-block-circumvention-240613/</link>
            <guid>40693451</guid>
            <pubDate>Sat, 15 Jun 2024 23:26:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://torrentfreak.com/google-cloudflare-cisco-will-poison-dns-to-stop-piracy-block-circumvention-240613/">https://torrentfreak.com/google-cloudflare-cisco-will-poison-dns-to-stop-piracy-block-circumvention-240613/</a>, See on <a href="https://news.ycombinator.com/item?id=40693451">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><a href="https://torrentfreak.com/images/football-block.png"><img loading="lazy" decoding="async" src="https://torrentfreak.com/images/football-block.png" alt="football block" width="290" height="286" srcset="https://torrentfreak.com/images/football-block.png 474w, https://torrentfreak.com/images/football-block-300x296.png 300w" sizes="(max-width: 290px) 100vw, 290px"></a>In France, where laws were introduced with site-blocking and similar anti-piracy measures already baked in, entertainment giant Canal+ seems intent on taking full advantage.</p>
<p>Like similar broadcasters with lucrative sports rights to exploit, Canal+ has a subset of viewers who prefer to consume from pirate sources which charge much less, or even nothing at all.</p>
<p>To maximize its existing site-blocking efforts through local ISPs, the French broadcaster has now taken the logical, albeit controversial, next step on the site-blocking ladder.</p>
<h2>DNS Tampering at the Local ISP Level</h2>
<p>In 2023, Canal+ went to court in France to tackle pirate sports streaming sites including Footybite.co, Streamcheck.link, SportBay.sx, TVFutbol.info, and Catchystream.com. The broadcaster said that since subscribers of local ISPs were accessing the pirate sites using their services, the ISPs should prevent them from doing so.</p>
<p>When the decision went in favor of Canal+, ISPs including Orange, SFR, OutreMer Télécom, Free, and Bouygues Télécom, were required to implement technical measures. Since the ISPs have their own DNS resolvers for use by their own customers, these were configured to provide non-authentic responses to deny access to the sites in question. </p>
<p>In response, increasingly savvy internet users that hadn’t already done so, simply changed their settings to use different DNS providers – Cloudflare, Google, and Cisco – whose resolvers hadn’t been tampered with; at least not yet.</p>
<h2>One More Step Up The Ladder: Public DNS Tampering</h2>
<p>Use of third-party DNS providers to circumvent blocking isn’t uncommon so last year Canal+ <a href="https://torrentfreak.com/dns-block-canal-sues-cloudflare-google-cisco-to-fight-piracy-231230/">took legal action</a> against three popular public DNS providers – Cloudflare (<a href="https://www.cloudflare.com/learning/dns/what-is-1.1.1.1/">1.1.1.1</a>), Google (<a href="https://developers.google.com/speed/public-dns">8.8.8.8</a>), and Cisco (<a href="http://208.69.38.205/">208.69.38.205</a>), demanding measures similar to those implemented by French ISPs.</p>
<p>Tampering with public DNS is a step too far for many internet advocates but for major rightsholders, if the law can be shaped to allow it, that’s what will happen. In this case, <a href="https://www.dalloz.fr/documentation/Document?id=CODE_CSPO_ARTI_L333-10&amp;scrll=CSPO010375&amp;FromId=CODES_SECS_CSPO_TALPHA">Article L333-10</a> of the French Sports Code (active Jan 2022) seems capable of accommodating almost anything.</p>
<p>When there are “serious and repeated violations” by an “online public communication service” whose main objective is the unauthorized broadcasting of sports competitions, rightsholders can demand “all proportionate measures likely to prevent or put an end to this infringement, against any person likely to contribute to remedying it.”</p>
<h2>Google, Cloudflare, and Cisco Ordered to Prevent Circumvention</h2>
<p>Two decisions were handed down by the Paris judicial court last month; one concerning Premier League matches and the other the Champions League. The orders instruct Google, Cloudflare, and Cisco to implement measures similar to those in place at local ISPs. To protect the rights of Canal+, the companies must prevent French internet users from using their services to access around 117 pirate domains.</p>
<p>According to French publication <a href="https://www.linforme.com/tech-telecom/article/piratage-sportif-canal-obtient-le-blocage-d-une-centaine-de-sites-par-google-cisco-et-cloudflare_1714.html">l’Informé</a>, which broke the news, Google attorney Sébastien Proust crunched figures published by government anti-piracy agency Arcom and concluded that the effect on piracy rates, if any, is likely to be minimal. </p>
<p>Starting with a pool of all users who use alternative DNS for any reason, users of pirate sites – especially sites broadcasting the matches in question – were isolated from the rest. Users of both VPNs and third-party DNS were further excluded from the group since DNS blocking is ineffective against VPNs. </p>
<p>Proust found that the number of users likely to be affected by DNS blocking at Google, Cloudflare, and Cisco, amounts to 0.084% of the total population of French Internet users. Citing a recent survey, which found that only 2% of those who face blocks simply give up and don’t find other means of circumvention, he reached an interesting conclusion.</p>
<p><em>“2% of 0.084% is 0.00168% of Internet users! In absolute terms, that would represent a small group of around 800 people across France!”</em></p>
<h2>Court Rejected Arguments Against Blocking</h2>
<p>In common with other courts presented with the same arguments, the Paris court said the number of people using alternative DNS to access the sites, and the simplicity of switching DNS, are irrelevant.</p>
<p>Canal+ owns the rights to the broadcasts and if it wishes to request a blocking injunction, it has the legal right to do so.</p>
<p>The DNS providers’ assertion that their services are not covered by the legislation was also waved aside by the court.</p>
<p>Google says it intends to comply with the order. As part of the original matter in 2023, it was already required to deindex the domains from search results under the same law.</p>
<p>At least in theory, this means that those who circumvented the original blocks using these alternative DNS services, will be back to square one and confronted by blocks all over again. </p>
<p>Given that circumventing this set of blocks will be as straightforward as circumventing the originals, that raises the question of what measures Canal+ will demand next, and from whom.</p>
<table>
<thead>
<tr><td colspan="2">Tribunal Judiciare de Paris | Canal+ | Cloudflare/Google/Cisco</td>
</tr><tr>
<th>Premier League</th>
<th>UEFA Champions league</th>
</tr>
</thead>
<tfoot>
<tr>
</tr>
</tfoot>
<tbody>
<tr>
<td>footybite.cc</td>
<td>footybite.tv</td>
</tr>
<tr>
<td>footybite.io</td>
<td>hesgoal.today</td>
</tr>
<tr>
<td>hesgoal.name</td>
<td>redditsoccerstreams.org</td>
</tr>
<tr>
<td>pirlotv.app</td>
<td>rsoccerstreams.net</td>
</tr>
<tr>
<td>reddit-soccerstreams.com</td>
<td>soccerstreams.football</td>
</tr>
<tr>
<td>redditsoccerstreams.tv</td>
<td>soccerstreamshd.com</td>
</tr>
<tr>
<td>streameast.gg</td>
<td>totalsporteks.net</td>
</tr>
<tr>
<td>volokit.to</td>
<td>sportsurge.app</td>
</tr>
<tr>
<td>totalsportek.ac</td>
<td>redditsoccerstreams.xyz</td>
</tr>
<tr>
<td>soccerstreamlinks.com</td>
<td>hesgoals.top</td>
</tr>
<tr>
<td>socceron.name</td>
<td>hdmatch.club</td>
</tr>
<tr>
<td>lacasadeltikitaka.net</td>
<td>bitestreams.net</td>
</tr>
<tr>
<td>streamseast.ai</td>
<td>livesoccer.sx</td>
</tr>
<tr>
<td>bestsolaris.com</td>
<td>footybite.one</td>
</tr>
<tr>
<td>radamel.icu</td>
<td>techclips.net</td>
</tr>
<tr>
<td>sports.f1livestream.top</td>
<td>sports.f1livestream.top</td>
</tr>
<tr>
<td>backfirstwo.site</td>
<td>reddit.soccerstreamshd.com</td>
</tr>
<tr>
<td>reddit.volokit.to</td>
<td>extratime.live</td>
</tr>
<tr>
<td>hitsports.pro</td>
<td>streameast.top</td>
</tr>
<tr>
<td>tvhd.tutvlive.site</td>
<td>soccerstreams.app</td>
</tr>
<tr>
<td>dotsport.live</td>
<td>freeviplive.com</td>
</tr>
<tr>
<td>dotsport1.com</td>
<td>fapxy.info</td>
</tr>
<tr>
<td>elkoora.live</td>
<td>1l1l.to</td>
</tr>
<tr>
<td>fel3ardaa.com</td>
<td>futbolonlinetv.club</td>
</tr>
<tr>
<td>golkoralive.com</td>
<td>hesgoal.world</td>
</tr>
<tr>
<td>silapathikaram.com</td>
<td>hesgoaltv.me</td>
</tr>
<tr>
<td>cainsoffering.net</td>
<td>sporthd.me</td>
</tr>
<tr>
<td>golkoralive.live</td>
<td>cdnz.one</td>
</tr>
<tr>
<td>kkooralives.com</td>
<td>ivesoccer.sx</td>
</tr>
<tr>
<td>koora-live.io</td>
<td>livetv705.me</td>
</tr>
<tr>
<td>kooralivs.com</td>
<td>livetv706.me</td>
</tr>
<tr>
<td>kora4live.net</td>
<td>pirlotvhd.online</td>
</tr>
<tr>
<td>live-kooora.com</td>
<td>rojadirectatv.uno</td>
</tr>
<tr>
<td>livekooora.online</td>
<td>soccerstreams100.io</td>
</tr>
<tr>
<td>live-kooora-tv.com</td>
<td>tarjetarojaenvivo.me</td>
</tr>
<tr>
<td>live-kooora-tv.net</td>
<td>tarjetarojatvhd.com</td>
</tr>
<tr>
<td>livekoora.io</td>
<td>stream.pajitotv.info</td>
</tr>
<tr>
<td>live-koora.online</td>
<td>hesgoaled.com</td>
</tr>
<tr>
<td>livetv707.me</td>
<td>1.ivesoccer.sx</td>
</tr>
<tr>
<td>livetv708.me</td>
<td>embx214129.apl275.me</td>
</tr>
<tr>
<td>monlive.info</td>
<td>emb.apl275.me</td>
</tr>
<tr>
<td>rojadirectaenvivotv.me</td>
<td>embx214161.apl275.me</td>
</tr>
<tr>
<td>rojadirectaes.org</td>
<td>stream.rodrixtv.info</td>
</tr>
<tr>
<td>awtsport.com</td>
<td>fk9.pw</td>
</tr>
<tr>
<td>live7.pro</td>
<td>m.soccerstreams100.io</td>
</tr>
<tr>
<td>sportsonline.so</td>
<td>ovo-line.com</td>
</tr>
<tr>
<td>4koora.elkoora.live</td>
<td>sportschamp.fun</td>
</tr>
<tr>
<td>f.fel3ardaa.com</td>
<td>givemereddit.eu</td>
</tr>
<tr>
<td>v3.sportsonline.sx</td>
<td>streamseast.ai</td>
</tr>
<tr>
<td>kora.live-koora.live</td>
<td>tazz.tv</td>
</tr>
<tr>
<td>alkora.golkoralive.live</td>
<td>embx214374.apl275.me</td>
</tr>
<tr>
<td>kooralive.koora-live.io</td>
<td>hd.espnv2.online</td>
</tr>
<tr>
<td>m.koora-live.io</td>
<td>embx210801.apl275.me</td>
</tr>
<tr>
<td>syria-live.us</td>
<td></td>
</tr>
<tr>
<td>4kooralive.live-kooora.com</td>
<td></td>
</tr>
<tr>
<td>5kooralive.live-kooora.com</td>
<td></td>
</tr>
<tr>
<td>tvkoora.livekooora.online</td>
<td></td>
</tr>
<tr>
<td>mypanlss.store</td>
<td></td>
</tr>
<tr>
<td>koora.live-kooora-tv.net</td>
<td></td>
</tr>
<tr>
<td>v2.sportsonline.so</td>
<td></td>
</tr>
<tr>
<td>kora.livekoora.io</td>
<td></td>
</tr>
<tr>
<td>koras.live-koora.online</td>
<td></td>
</tr>
<tr>
<td>embx214129.apl274.me</td>
<td></td>
</tr>
<tr>
<td>embx210130.apl276.me</td>
<td></td>
</tr>
<tr>
<td>capodeportes.run</td>
<td></td>
</tr>
<tr>
<td>sports-stream.info</td>
<td></td>
</tr>
<tr>
<td>topstreams.me</td>
<td></td>
</tr>
<tr>
<td>sports.chelsealivestream.com</td>
<td></td>
</tr>
<tr>
<td>sportsleading.online</td>
<td></td>
</tr>
</tbody>
</table>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ollama v0.1.45 (108 pts)]]></title>
            <link>https://github.com/ollama/ollama/releases/tag/v0.1.45-rc1</link>
            <guid>40692970</guid>
            <pubDate>Sat, 15 Jun 2024 21:54:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ollama/ollama/releases/tag/v0.1.45-rc1">https://github.com/ollama/ollama/releases/tag/v0.1.45-rc1</a>, See on <a href="https://news.ycombinator.com/item?id=40692970">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-turbo-body="">
      


    <div>
      <p><a href="#start-of-content" data-skip-target-assigned="false">Skip to content</a>

      <span data-view-component="true">
    <span data-view-component="true"></span>
</span></p><react-partial partial-name="keyboard-shortcuts-dialog" data-ssr="false">
  
  
  
</react-partial>




      

        

            


<header role="banner" data-color-mode="light" data-light-theme="light" data-dark-theme="dark">
  <h2>Navigation Menu</h2>

  

  <div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to GitHub Copilot&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>GitHub Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Enterprise&quot;,&quot;action&quot;:&quot;click to go to Enterprise platform&quot;,&quot;label&quot;:&quot;ref_cta:Enterprise platform;&quot;}" href="https://github.com/enterprise">
      
      <div>
        <p>Enterprise platform</p><p>
        AI-powered developer platform
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:ollama/ollama" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="kANto25PszObw4KeuZGz2ywV3QUpaCoQa9Rqwj0SdGf68aS5S8uFLzQkEa1eMVy1Sa27V-iU5O0Quw9KtfcYaA" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="ollama/ollama" data-current-org="ollama" data-current-owner="" data-logged-in="false" data-copilot-chat-enabled="false" data-blackbird-indexed-repo-csrf="<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=vaHbm4wqQ4hAl7iefLZKRpS4kzdgMWdzlK%2FIpzGC2dXhjN18z9n18zFiA0f2TWzg6DLw%2FQJg1UPDZAK2WFQIhL7JT5ZNxX%2FBRNSUY6SHfbvXr4QbGZw9Vwu85h%2FvxsS2WontZAvF7y4%2Bp3TjL0DuRmIkDsnsu83oiGW%2FmnHKQJdAoCmk1vGpg10XTtqyNlQ5QeHO5wgLGK9TZngvYCG0vwD21c60vgRHOOO5cLthPf46vlNC3ZGq3cLMNi0impwo9xUAf26d%2Fz%2BN2tfIqP9lgeeA3HHADgWjto5SpR0uBLWlzw8SufbegrwnxqVYv8a07w%2FoxYnzMmvCW2A9TRugyRJmUId899Jn8ecXUXSjkKn6d0C2y5yjBP2xFBbf2gJDqyGFtr4%2B7BEyChyBCh%2BBZs58%2BT5zOy66Et5uIZrAP2cT5rGjbfEOoeZxnTldFOtH7vspGVaJChrSIt4L4Sv3JSWmxJH2QMr1BCPxTapamIORXi7lxwzDoMqkXT70XXMP4R%2BZZ34Qe%2BjsgqbiAxaq5CPCswreFuvwZ9s0QT1ih0%2FnqGaMkdEvevkV--2OSG6tiCeMYcIAd6--vtN8D2ie%2B96k5JtsrQ0m4g%3D%3D&quot; />">
  
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
        
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Freleases%2Fshow&amp;source=header-repo&amp;source_repo=ollama%2Follama" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/ollama/ollama/releases/tag/v0.1.45-rc1&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="568edcd921d9ca52b249b7f4023b417620d789efb3b1bdb9316c36ed09b768f7" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>/releases/show;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div>
</header>

      
    </div>

  








    


    
    <include-fragment data-base-src="https://github.com/notifications/beta/shelf"></include-fragment>





  <div itemscope="" itemtype="http://schema.org/SoftwareSourceCode" data-commit-hovercards-enabled="" data-discussion-hovercards-enabled="" data-issue-and-pr-hovercards-enabled="">
    <main id="js-repo-pjax-container">
      
  
    
    

    






  
  

  



<turbo-frame id="repo-content-turbo-frame" target="_top" data-turbo-action="advance">
    <div id="repo-content-pjax-container">
  <nav data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" aria-label="Breadcrumb" data-view-component="true">
  <ol>
      <li data-view-component="true"><a href="https://github.com/ollama/ollama/releases" data-view-component="true">Releases</a></li>
      <li data-view-component="true"><a aria-current="page" href="https://github.com/ollama/ollama/releases/tag/v0.1.45-rc1" data-view-component="true">    v0.1.45-rc1
</a></li>
  </ol>
</nav>
<div data-view-component="true" data-hpc="">      

  <div data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame">
  

  
        <p>
          ·
          <a href="https://github.com/ollama/ollama/compare/v0.1.45-rc1...main">
            4 commits
          </a>
          to main
          since this release
        </p>

        
        <div>
          <a data-hovercard-type="commit" data-hovercard-url="/ollama/ollama/commit/4b0050cf0e0e2c9f3bdaf210f4f8a228314b66f7/hovercard" href="https://github.com/ollama/ollama/commit/4b0050cf0e0e2c9f3bdaf210f4f8a228314b66f7" data-view-component="true">
              <svg aria-label="Commit" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M11.93 8.5a4.002 4.002 0 0 1-7.86 0H.75a.75.75 0 0 1 0-1.5h3.32a4.002 4.002 0 0 1 7.86 0h3.32a.75.75 0 0 1 0 1.5Zm-1.43-.75a2.5 2.5 0 1 0-5 0 2.5 2.5 0 0 0 5 0Z"></path>
</svg>
              <code>4b0050c</code>
</a>          <details>
    <summary>
      <svg aria-label="Verified commit signature" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="m9.585.52.929.68c.153.112.331.186.518.215l1.138.175a2.678 2.678 0 0 1 2.24 2.24l.174 1.139c.029.187.103.365.215.518l.68.928a2.677 2.677 0 0 1 0 3.17l-.68.928a1.174 1.174 0 0 0-.215.518l-.175 1.138a2.678 2.678 0 0 1-2.241 2.241l-1.138.175a1.17 1.17 0 0 0-.518.215l-.928.68a2.677 2.677 0 0 1-3.17 0l-.928-.68a1.174 1.174 0 0 0-.518-.215L3.83 14.41a2.678 2.678 0 0 1-2.24-2.24l-.175-1.138a1.17 1.17 0 0 0-.215-.518l-.68-.928a2.677 2.677 0 0 1 0-3.17l.68-.928c.112-.153.186-.331.215-.518l.175-1.14a2.678 2.678 0 0 1 2.24-2.24l1.139-.175c.187-.029.365-.103.518-.215l.928-.68a2.677 2.677 0 0 1 3.17 0ZM7.303 1.728l-.927.68a2.67 2.67 0 0 1-1.18.489l-1.137.174a1.179 1.179 0 0 0-.987.987l-.174 1.136a2.677 2.677 0 0 1-.489 1.18l-.68.928a1.18 1.18 0 0 0 0 1.394l.68.927c.256.348.424.753.489 1.18l.174 1.137c.078.509.478.909.987.987l1.136.174a2.67 2.67 0 0 1 1.18.489l.928.68c.414.305.979.305 1.394 0l.927-.68a2.67 2.67 0 0 1 1.18-.489l1.137-.174a1.18 1.18 0 0 0 .987-.987l.174-1.136a2.67 2.67 0 0 1 .489-1.18l.68-.928a1.176 1.176 0 0 0 0-1.394l-.68-.927a2.686 2.686 0 0 1-.489-1.18l-.174-1.137a1.179 1.179 0 0 0-.987-.987l-1.136-.174a2.677 2.677 0 0 1-1.18-.489l-.928-.68a1.176 1.176 0 0 0-1.394 0ZM11.28 6.78l-3.75 3.75a.75.75 0 0 1-1.06 0L4.72 8.78a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L7 8.94l3.22-3.22a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z"></path>
</svg>
    </summary>

    <div>
          
          <p>
                This commit was created on GitHub.com and signed with GitHub’s <strong>verified signature</strong>.
          </p>
        </div>
</details>

        </div>

</div>
        <div data-pjax="true" data-test-selector="body-content" data-view-component="true"><h2>What's Changed</h2>
<ul>
<li>Setting <code>seed</code> in the <code>/v1/chat/completions</code> OpenAI compatibility endpoint no longer changes <code>temperature</code></li>
<li>Enhanced GPU discovery and multi-gpu support with concurrency</li>
<li>Skip searching for network devices in Linux install script</li>
<li>Report GPU configuration variables in server log</li>
<li>Update linux ROCm to v6.1.1</li>
<li>Workaround AMD Vega RX 56 SDMA support on linux</li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a data-hovercard-type="user" data-hovercard-url="/users/jayson-cloude/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/jayson-cloude">@jayson-cloude</a> made their first contribution in <a data-error-text="Failed to load title" data-id="2345709903" data-permission-text="Title is private" data-url="https://github.com/ollama/ollama/issues/4972" data-hovercard-type="pull_request" data-hovercard-url="/ollama/ollama/pull/4972/hovercard" href="https://github.com/ollama/ollama/pull/4972">#4972</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href="https://github.com/ollama/ollama/compare/v0.1.44...v0.1.45-rc1"><tt>v0.1.44...v0.1.45-rc1</tt></a></p></div>
</div>

</div>

</turbo-frame>


    </main>
  </div>

          




    <ghcc-consent id="ghcc" data-initial-cookie-consent-allowed="" data-cookie-consent-required="true"></ghcc-consent>


  

    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open="">
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog="">
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0 tooltipped-no-delay" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>
<template id="snippet-clipboard-copy-button-unpositioned">
  <div class="zeroclipboard-container">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 tooltipped-no-delay d-flex flex-justify-center flex-items-center" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>




    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Reverse engineering a restaurant pager system (174 pts)]]></title>
            <link>https://k3xec.com/td158/</link>
            <guid>40692535</guid>
            <pubDate>Sat, 15 Jun 2024 20:37:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://k3xec.com/td158/">https://k3xec.com/td158/</a>, See on <a href="https://news.ycombinator.com/item?id=40692535">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><a href="https://soylent.green/@paul">Paul Tagliamonte</a>
2024-06-14<p>It’s been a while since I played with something new – been stuck in a bit of a
rut with radios recently - working on refining and debugging stuff I mostly
understand for the time being. The other day, I was out getting some food and I
idly wondered how the restaurant pager system worked. Idle curiosity gave way
to the realization that I, in fact, likely had the means and ability to answer
this question, so I bought the first set of the most popular looking restaurant
pagers I could find on eBay, figuring it’d be a fun multi-week adventure.</p><h2 id="order-up">Order up!</h2><p>I wound up buying a Retekess brand TD-158 Restaurant Pager System (they looked
like ones I’d seen before and seemed to be low-cost and popular), and quickly
after, had a pack of 10 pagers and a base station in-hand. The manual stated
that the radios operated at 433 MHz` (cool! can do! Love a good ISM band
device), and after taking an inital read through the manual for tips on the
PHY, I picked out a few interesting things. First is that the base station ID
was limited to 0-999, which is weird because it means the limiting factor is
likely the base-10 display on the base station, not the protocol – we need
enough bits to store 999 – at least 10 bits. Nothing else seemed to catch my
eye, so I figured may as well jump right to it.</p><p>Not being the type to mess with success, I did exactly the same thing as I did
in my <a href="https://k3xec.com/christmas">christmas tree post</a>, and took a capture at <code>433.92MHz</code>
since it was in the middle of the band, and immediately got deja-vu. Not only
was the signal at <code>433.92MHz</code>, but throwing the packet into <code>inspectrum</code> gave
me the <em>identical</em> plot of the OOK encoding scheme.</p><p><img src="https://k3xec.com/imgs/td158/td158-packet.png" alt=""></p><p>Not just similar – identical. The only major difference was the baud rate and
bit structure of the packets, and the only minor difference was the existence
of what I think is a wakeup preamble packet (of all zeros), rather than a
preamble symbol that lasted longer than usual PHY symbol (which makes this
pager system a bit easier to work with than my tree, IMHO).</p><p>Getting down to work, I took some measurements to determine what the symbol
duration was over the course of a few packets, I was able to determine the
symbol rate was somewhere around <code>858</code> microseconds (<code>0.000858</code> seconds per
symbol), which is a weird number, but maybe I’m slightly off or there’s some
larger math I’m missing that makes this number satisfyingly round (internal
low cost crystal clock or something? I assume this is some hardware constrait
with the pager?)</p><p>Anyway, good enough. Moving along, let’s try our hand at a demod – let’s just
assume it’s all the same as the chrismas tree post and demod ones and zeros
the same way here. That gives us 26 bits:</p><pre><code>00001101110000001010001000
</code></pre><p>Now, I know we need at least 10 bits for the base station ID, some number
of bits for the pager ID, and some bits for the command. This was a capture
of me hitting “call” from a base station ID of 55 to a pager with the ID of
10, so let’s blindly look for 10 bit chunks with the numbers we’re looking for:</p><pre><code>0000110111 0000001010 001000
</code></pre><p>Jeez. First try. 10 bits for the base station ID (55 in binary is
<code>0000110111</code>), 10 bits for the pager ID (10 in binary is <code>0000001010</code>), which
leaves us with 6 bits for a command (and maybe something else too?) – which is
<code>8</code> here. Great, cool, let’s work off that being the case and revisit it if
we hit bugs.</p><p>Besides our data packet, there’s also a “preamble” packet that I’ll add in,
in case it’s used for signal detection or wakeup or something – which is
fairly easy to do since it’s the same packet structure as the above, just
all zeros. Very kind of them to leave it with the same number of bits and
encoding scheme – it’s nice that it can live outside the PHY.</p><p><img src="https://k3xec.com/imgs/td158/td158-preamble.png" alt=""></p><p>Once I got here, I wrote a quick and dirty modulator, and was able to ring up
pagers! Unmitigated success and good news – only downside was that it took me
a single night, and not the multi-week adventure I was looking for. Well, let’s
finish the job and document what we’ve found for the sake of completeness.</p><h2 id="boxing-everything-up">Boxing everything up</h2><p>My best guess on the packet structure is as follows:</p><p>For a <code>call</code> or <code>F2</code> operation, the <code>argument</code> is the Pager’s ID code,
but for other commands it’s a value or an enum, depending. Here’s a table
of my by-hand demodulation of all the packet types the base station
produces:</p><table><thead><tr><td>Type</td><td>Cmd Id</td><td>Description</td></tr></thead><tbody><tr><td>Call</td><td>8</td><td>Call the pager identified by the id in <code>argument</code></td></tr><tr><td>Off</td><td>60</td><td>Request any pagers on the charger power off when power is removed, <code>argument</code> is all zero</td></tr><tr><td>F2</td><td>40</td><td>Program a pager to the specified Pager ID (in <code>argument</code>) and base station</td></tr><tr><td>F3</td><td>44</td><td>Set the reminder duration in seconds specified in <code>argument</code></td></tr><tr><td>F4</td><td>48</td><td>Set the pager's beep mode to the one in <code>argument</code> (<code>0</code> is disabled, <code>1</code> is slow, <code>2</code> is medium, <code>3</code> is fast)</td></tr><tr><td>F5</td><td>52</td><td>Set the pager's vibration mode to the one in <code>argument</code> (<code>0</code> is disabled, <code>1</code> is enabled)</td></tr></tbody></table><h2 id="kitchens-closed-for-the-night">Kitchen’s closed for the night</h2><p>I’m not going to be publishing this code since I can’t think of a good use
anyone would have for this besides folks using a low cost SDR and annoying
local resturants; but there’s enough here for folks who find this interesting
to try modulating this protocol on their own hardware if they want to buy their
own pack of pagers and give it a shot, which I do encourage! It’s fun! Radios
are great, and this is a good protocol to hack with – it’s really nice.</p><p>All in all, this wasn’t the multi-week adventure I was looking for, this was
still a great exercise and a fun reminder that I’ve come a far way from when
I’ve started. It felt a lot like cheating since I was able to infer a lot about
the PHY because I’d seen it before, but it was still a great time. I may grab a
few more restaurant pagers and see if I can find one with a more exotic PHY to
emulate next. I mean why not, I’ve already got the
<a href="https://github.com/paultag/go-epson">thermal</a>
<a href="https://crates.io/crates/epson">printer</a>
libraries
<a href="https://soylent.green/@paul/111805908699444082">working</a>
🖨️</p></div></div>]]></description>
        </item>
    </channel>
</rss>