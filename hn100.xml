<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Thu, 26 Dec 2024 22:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Ghostty 1.0 (469 pts)]]></title>
            <link>https://ghostty.org/</link>
            <guid>42517447</guid>
            <pubDate>Thu, 26 Dec 2024 20:14:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ghostty.org/">https://ghostty.org/</a>, See on <a href="https://news.ycombinator.com/item?id=42517447">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[A Simple ELF (114 pts)]]></title>
            <link>https://4zm.org/2024/12/25/a-simple-elf.html</link>
            <guid>42516697</guid>
            <pubDate>Thu, 26 Dec 2024 18:10:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://4zm.org/2024/12/25/a-simple-elf.html">https://4zm.org/2024/12/25/a-simple-elf.html</a>, See on <a href="https://news.ycombinator.com/item?id=42516697">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-md-component="main">
    
    <article>
      
        



<p>Let's write a simple program for Linux. How hard can it be? Well, simple is the opposite of complex, not of hard, and it is surprisingly hard to create something simple. What is left when we get rid of the complexity from the standard library, all the modern security features, debugging information, and error handling mechanisms?</p>
<!-- more -->

<pre><p>•  •  •</p></pre>

<p>Let's start with something complex:</p>
<div><pre><span></span><code><span id="__span-0-1"><a id="__codelineno-0-1" name="__codelineno-0-1" href="#__codelineno-0-1"></a>#include &lt;stdio.h&gt;
</span><span id="__span-0-2"><a id="__codelineno-0-2" name="__codelineno-0-2" href="#__codelineno-0-2"></a>
</span><span id="__span-0-3"><a id="__codelineno-0-3" name="__codelineno-0-3" href="#__codelineno-0-3"></a>int main() {
</span><span id="__span-0-4"><a id="__codelineno-0-4" name="__codelineno-0-4" href="#__codelineno-0-4"></a>    printf("Hello Simplicity!\n");
</span><span id="__span-0-5"><a id="__codelineno-0-5" name="__codelineno-0-5" href="#__codelineno-0-5"></a>}
</span></code></pre></div>
<p>Wait, what?! It doesn't look very complex, does it... Hmm, let's compile it and take a look:</p>
<div><pre><span></span><code><span id="__span-1-1"><a id="__codelineno-1-1" name="__codelineno-1-1" href="#__codelineno-1-1"></a>$ gcc -o hello hello.c
</span><span id="__span-1-2"><a id="__codelineno-1-2" name="__codelineno-1-2" href="#__codelineno-1-2"></a>$ ./hello
</span><span id="__span-1-3"><a id="__codelineno-1-3" name="__codelineno-1-3" href="#__codelineno-1-3"></a>Hello Simplicity!
</span></code></pre></div>
<p>Still looks pretty simple, right? Wrong! While this might be familiar territory and <em>easy</em> to comprehend, the program is far from <em>simple</em>. Let's take a look behind the curtain.</p>
<div><pre><span></span><code><span id="__span-2-1"><a id="__codelineno-2-1" name="__codelineno-2-1" href="#__codelineno-2-1"></a>$ objdump -t hello
</span><span id="__span-2-2"><a id="__codelineno-2-2" name="__codelineno-2-2" href="#__codelineno-2-2"></a>
</span><span id="__span-2-3"><a id="__codelineno-2-3" name="__codelineno-2-3" href="#__codelineno-2-3"></a>hello:     file format elf64-x86-64
</span><span id="__span-2-4"><a id="__codelineno-2-4" name="__codelineno-2-4" href="#__codelineno-2-4"></a>
</span><span id="__span-2-5"><a id="__codelineno-2-5" name="__codelineno-2-5" href="#__codelineno-2-5"></a>SYMBOL TABLE:
</span><span id="__span-2-6"><a id="__codelineno-2-6" name="__codelineno-2-6" href="#__codelineno-2-6"></a>0000000000000000 l    df *ABS*  0000000000000000              Scrt1.o
</span><span id="__span-2-7"><a id="__codelineno-2-7" name="__codelineno-2-7" href="#__codelineno-2-7"></a>000000000000038c l     O .note.ABI-tag  0000000000000020              __abi_tag
</span><span id="__span-2-8"><a id="__codelineno-2-8" name="__codelineno-2-8" href="#__codelineno-2-8"></a>0000000000000000 l    df *ABS*  0000000000000000              crtstuff.c
</span><span id="__span-2-9"><a id="__codelineno-2-9" name="__codelineno-2-9" href="#__codelineno-2-9"></a>0000000000001090 l     F .text  0000000000000000              deregister_tm_clones
</span><span id="__span-2-10"><a id="__codelineno-2-10" name="__codelineno-2-10" href="#__codelineno-2-10"></a>00000000000010c0 l     F .text  0000000000000000              register_tm_clones
</span><span id="__span-2-11"><a id="__codelineno-2-11" name="__codelineno-2-11" href="#__codelineno-2-11"></a>0000000000001100 l     F .text  0000000000000000              __do_global_dtors_aux
</span><span id="__span-2-12"><a id="__codelineno-2-12" name="__codelineno-2-12" href="#__codelineno-2-12"></a>0000000000004010 l     O .bss   0000000000000001              completed.0
</span><span id="__span-2-13"><a id="__codelineno-2-13" name="__codelineno-2-13" href="#__codelineno-2-13"></a>0000000000003dc0 l     O .fini_array    0000000000000000              __do_global_dtors_aux_fini_array_entry
</span><span id="__span-2-14"><a id="__codelineno-2-14" name="__codelineno-2-14" href="#__codelineno-2-14"></a>0000000000001140 l     F .text  0000000000000000              frame_dummy
</span><span id="__span-2-15"><a id="__codelineno-2-15" name="__codelineno-2-15" href="#__codelineno-2-15"></a>0000000000003db8 l     O .init_array    0000000000000000              __frame_dummy_init_array_entry
</span><span id="__span-2-16"><a id="__codelineno-2-16" name="__codelineno-2-16" href="#__codelineno-2-16"></a>0000000000000000 l    df *ABS*  0000000000000000              hello.c
</span><span id="__span-2-17"><a id="__codelineno-2-17" name="__codelineno-2-17" href="#__codelineno-2-17"></a>0000000000000000 l    df *ABS*  0000000000000000              crtstuff.c
</span><span id="__span-2-18"><a id="__codelineno-2-18" name="__codelineno-2-18" href="#__codelineno-2-18"></a>00000000000020f8 l     O .eh_frame  0000000000000000              __FRAME_END__
</span><span id="__span-2-19"><a id="__codelineno-2-19" name="__codelineno-2-19" href="#__codelineno-2-19"></a>0000000000000000 l    df *ABS*  0000000000000000
</span><span id="__span-2-20"><a id="__codelineno-2-20" name="__codelineno-2-20" href="#__codelineno-2-20"></a>0000000000003dc8 l     O .dynamic   0000000000000000              _DYNAMIC
</span><span id="__span-2-21"><a id="__codelineno-2-21" name="__codelineno-2-21" href="#__codelineno-2-21"></a>0000000000002018 l       .eh_frame_hdr  0000000000000000              __GNU_EH_FRAME_HDR
</span><span id="__span-2-22"><a id="__codelineno-2-22" name="__codelineno-2-22" href="#__codelineno-2-22"></a>0000000000003fb8 l     O .got   0000000000000000              _GLOBAL_OFFSET_TABLE_
</span><span id="__span-2-23"><a id="__codelineno-2-23" name="__codelineno-2-23" href="#__codelineno-2-23"></a>0000000000000000       F *UND*  0000000000000000              __libc_start_main@GLIBC_2.34
</span><span id="__span-2-24"><a id="__codelineno-2-24" name="__codelineno-2-24" href="#__codelineno-2-24"></a>0000000000000000  w      *UND*  0000000000000000              _ITM_deregisterTMCloneTable
</span><span id="__span-2-25"><a id="__codelineno-2-25" name="__codelineno-2-25" href="#__codelineno-2-25"></a>0000000000004000  w      .data  0000000000000000              data_start
</span><span id="__span-2-26"><a id="__codelineno-2-26" name="__codelineno-2-26" href="#__codelineno-2-26"></a>0000000000000000       F *UND*  0000000000000000              puts@GLIBC_2.2.5
</span><span id="__span-2-27"><a id="__codelineno-2-27" name="__codelineno-2-27" href="#__codelineno-2-27"></a>0000000000004010 g       .data  0000000000000000              _edata
</span><span id="__span-2-28"><a id="__codelineno-2-28" name="__codelineno-2-28" href="#__codelineno-2-28"></a>0000000000001168 g     F .fini  0000000000000000              .hidden _fini
</span><span id="__span-2-29"><a id="__codelineno-2-29" name="__codelineno-2-29" href="#__codelineno-2-29"></a>0000000000004000 g       .data  0000000000000000              __data_start
</span><span id="__span-2-30"><a id="__codelineno-2-30" name="__codelineno-2-30" href="#__codelineno-2-30"></a>0000000000000000  w      *UND*  0000000000000000              __gmon_start__
</span><span id="__span-2-31"><a id="__codelineno-2-31" name="__codelineno-2-31" href="#__codelineno-2-31"></a>0000000000004008 g     O .data  0000000000000000              .hidden __dso_handle
</span><span id="__span-2-32"><a id="__codelineno-2-32" name="__codelineno-2-32" href="#__codelineno-2-32"></a>0000000000002000 g     O .rodata    0000000000000004              _IO_stdin_used
</span><span id="__span-2-33"><a id="__codelineno-2-33" name="__codelineno-2-33" href="#__codelineno-2-33"></a>0000000000004018 g       .bss   0000000000000000              _end
</span><span id="__span-2-34"><a id="__codelineno-2-34" name="__codelineno-2-34" href="#__codelineno-2-34"></a>0000000000001060 g     F .text  0000000000000026              _start
</span><span id="__span-2-35"><a id="__codelineno-2-35" name="__codelineno-2-35" href="#__codelineno-2-35"></a>0000000000004010 g       .bss   0000000000000000              __bss_start
</span><span id="__span-2-36"><a id="__codelineno-2-36" name="__codelineno-2-36" href="#__codelineno-2-36"></a>0000000000001149 g     F .text  000000000000001e              main
</span><span id="__span-2-37"><a id="__codelineno-2-37" name="__codelineno-2-37" href="#__codelineno-2-37"></a>0000000000004010 g     O .data  0000000000000000              .hidden __TMC_END__
</span><span id="__span-2-38"><a id="__codelineno-2-38" name="__codelineno-2-38" href="#__codelineno-2-38"></a>0000000000000000  w      *UND*  0000000000000000              _ITM_registerTMCloneTable
</span><span id="__span-2-39"><a id="__codelineno-2-39" name="__codelineno-2-39" href="#__codelineno-2-39"></a>0000000000000000  w    F *UND*  0000000000000000              __cxa_finalize@GLIBC_2.2.5
</span><span id="__span-2-40"><a id="__codelineno-2-40" name="__codelineno-2-40" href="#__codelineno-2-40"></a>0000000000001000 g     F .init  0000000000000000              .hidden _init
</span></code></pre></div>
<p>That's a lot of symbols! Actually, as far as symbol tables go, this one is quite modest. Any non-trivial program will have many more symbols, but still, what are they all for? We're just printing a string!</p>
<p>We recognize our <code>main</code> function in the <code>.text</code> segment at address <code>0x1149</code>. But where is the <code>printf</code> function?</p>
<p>It turns out that for simple cases, where there is no formatting work required by <code>printf</code>, GCC optimizes the code and replaces it with the simpler <code>puts@GLIBC_2.2.5</code> from libc. The address is all zeros since the symbol is undefined (<code>*UND*</code>). It will be resolved when the program is loaded together with the dynamic libc.so library as we run it.</p>
<div><pre><span></span><code><span id="__span-3-1"><a id="__codelineno-3-1" name="__codelineno-3-1" href="#__codelineno-3-1"></a>0000000000001149 g     F .text  000000000000001e              main
</span><span id="__span-3-2"><a id="__codelineno-3-2" name="__codelineno-3-2" href="#__codelineno-3-2"></a>0000000000000000       F *UND*  0000000000000000              puts@GLIBC_2.2.5
</span></code></pre></div>
<p>Let's keep digging. What sections are there in the program? The only data we have is the hardcoded string and its length. Surely we only need a <code>.text</code> section? Let's see what we got:</p>
<div><pre><span></span><code><span id="__span-4-1"><a id="__codelineno-4-1" name="__codelineno-4-1" href="#__codelineno-4-1"></a>$ objdump -h hello
</span><span id="__span-4-2"><a id="__codelineno-4-2" name="__codelineno-4-2" href="#__codelineno-4-2"></a>
</span><span id="__span-4-3"><a id="__codelineno-4-3" name="__codelineno-4-3" href="#__codelineno-4-3"></a>hello:     file format elf64-x86-64
</span><span id="__span-4-4"><a id="__codelineno-4-4" name="__codelineno-4-4" href="#__codelineno-4-4"></a>
</span><span id="__span-4-5"><a id="__codelineno-4-5" name="__codelineno-4-5" href="#__codelineno-4-5"></a>Sections:
</span><span id="__span-4-6"><a id="__codelineno-4-6" name="__codelineno-4-6" href="#__codelineno-4-6"></a>Idx Name          Size      VMA               LMA               File off  Algn
</span><span id="__span-4-7"><a id="__codelineno-4-7" name="__codelineno-4-7" href="#__codelineno-4-7"></a>  0 .interp       0000001c  0000000000000318  0000000000000318  00000318  2**0
</span><span id="__span-4-8"><a id="__codelineno-4-8" name="__codelineno-4-8" href="#__codelineno-4-8"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-9"><a id="__codelineno-4-9" name="__codelineno-4-9" href="#__codelineno-4-9"></a>  1 .note.gnu.property 00000030  0000000000000338  0000000000000338  00000338  2**3
</span><span id="__span-4-10"><a id="__codelineno-4-10" name="__codelineno-4-10" href="#__codelineno-4-10"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-11"><a id="__codelineno-4-11" name="__codelineno-4-11" href="#__codelineno-4-11"></a>  2 .note.gnu.build-id 00000024  0000000000000368  0000000000000368  00000368  2**2
</span><span id="__span-4-12"><a id="__codelineno-4-12" name="__codelineno-4-12" href="#__codelineno-4-12"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-13"><a id="__codelineno-4-13" name="__codelineno-4-13" href="#__codelineno-4-13"></a>  3 .note.ABI-tag 00000020  000000000000038c  000000000000038c  0000038c  2**2
</span><span id="__span-4-14"><a id="__codelineno-4-14" name="__codelineno-4-14" href="#__codelineno-4-14"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-15"><a id="__codelineno-4-15" name="__codelineno-4-15" href="#__codelineno-4-15"></a>  4 .gnu.hash     00000024  00000000000003b0  00000000000003b0  000003b0  2**3
</span><span id="__span-4-16"><a id="__codelineno-4-16" name="__codelineno-4-16" href="#__codelineno-4-16"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-17"><a id="__codelineno-4-17" name="__codelineno-4-17" href="#__codelineno-4-17"></a>  5 .dynsym       000000a8  00000000000003d8  00000000000003d8  000003d8  2**3
</span><span id="__span-4-18"><a id="__codelineno-4-18" name="__codelineno-4-18" href="#__codelineno-4-18"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-19"><a id="__codelineno-4-19" name="__codelineno-4-19" href="#__codelineno-4-19"></a>  6 .dynstr       0000008d  0000000000000480  0000000000000480  00000480  2**0
</span><span id="__span-4-20"><a id="__codelineno-4-20" name="__codelineno-4-20" href="#__codelineno-4-20"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-21"><a id="__codelineno-4-21" name="__codelineno-4-21" href="#__codelineno-4-21"></a>  7 .gnu.version  0000000e  000000000000050e  000000000000050e  0000050e  2**1
</span><span id="__span-4-22"><a id="__codelineno-4-22" name="__codelineno-4-22" href="#__codelineno-4-22"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-23"><a id="__codelineno-4-23" name="__codelineno-4-23" href="#__codelineno-4-23"></a>  8 .gnu.version_r 00000030  0000000000000520  0000000000000520  00000520  2**3
</span><span id="__span-4-24"><a id="__codelineno-4-24" name="__codelineno-4-24" href="#__codelineno-4-24"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-25"><a id="__codelineno-4-25" name="__codelineno-4-25" href="#__codelineno-4-25"></a>  9 .rela.dyn     000000c0  0000000000000550  0000000000000550  00000550  2**3
</span><span id="__span-4-26"><a id="__codelineno-4-26" name="__codelineno-4-26" href="#__codelineno-4-26"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-27"><a id="__codelineno-4-27" name="__codelineno-4-27" href="#__codelineno-4-27"></a> 10 .rela.plt     00000018  0000000000000610  0000000000000610  00000610  2**3
</span><span id="__span-4-28"><a id="__codelineno-4-28" name="__codelineno-4-28" href="#__codelineno-4-28"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-29"><a id="__codelineno-4-29" name="__codelineno-4-29" href="#__codelineno-4-29"></a> 11 .init         0000001b  0000000000001000  0000000000001000  00001000  2**2
</span><span id="__span-4-30"><a id="__codelineno-4-30" name="__codelineno-4-30" href="#__codelineno-4-30"></a>                  CONTENTS, ALLOC, LOAD, READONLY, CODE
</span><span id="__span-4-31"><a id="__codelineno-4-31" name="__codelineno-4-31" href="#__codelineno-4-31"></a> 12 .plt          00000020  0000000000001020  0000000000001020  00001020  2**4
</span><span id="__span-4-32"><a id="__codelineno-4-32" name="__codelineno-4-32" href="#__codelineno-4-32"></a>                  CONTENTS, ALLOC, LOAD, READONLY, CODE
</span><span id="__span-4-33"><a id="__codelineno-4-33" name="__codelineno-4-33" href="#__codelineno-4-33"></a> 13 .plt.got      00000010  0000000000001040  0000000000001040  00001040  2**4
</span><span id="__span-4-34"><a id="__codelineno-4-34" name="__codelineno-4-34" href="#__codelineno-4-34"></a>                  CONTENTS, ALLOC, LOAD, READONLY, CODE
</span><span id="__span-4-35"><a id="__codelineno-4-35" name="__codelineno-4-35" href="#__codelineno-4-35"></a> 14 .plt.sec      00000010  0000000000001050  0000000000001050  00001050  2**4
</span><span id="__span-4-36"><a id="__codelineno-4-36" name="__codelineno-4-36" href="#__codelineno-4-36"></a>                  CONTENTS, ALLOC, LOAD, READONLY, CODE
</span><span id="__span-4-37"><a id="__codelineno-4-37" name="__codelineno-4-37" href="#__codelineno-4-37"></a> 15 .text         00000107  0000000000001060  0000000000001060  00001060  2**4
</span><span id="__span-4-38"><a id="__codelineno-4-38" name="__codelineno-4-38" href="#__codelineno-4-38"></a>                  CONTENTS, ALLOC, LOAD, READONLY, CODE
</span><span id="__span-4-39"><a id="__codelineno-4-39" name="__codelineno-4-39" href="#__codelineno-4-39"></a> 16 .fini         0000000d  0000000000001168  0000000000001168  00001168  2**2
</span><span id="__span-4-40"><a id="__codelineno-4-40" name="__codelineno-4-40" href="#__codelineno-4-40"></a>                  CONTENTS, ALLOC, LOAD, READONLY, CODE
</span><span id="__span-4-41"><a id="__codelineno-4-41" name="__codelineno-4-41" href="#__codelineno-4-41"></a> 17 .rodata       00000011  0000000000002000  0000000000002000  00002000  2**2
</span><span id="__span-4-42"><a id="__codelineno-4-42" name="__codelineno-4-42" href="#__codelineno-4-42"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-43"><a id="__codelineno-4-43" name="__codelineno-4-43" href="#__codelineno-4-43"></a> 18 .eh_frame_hdr 00000034  0000000000002014  0000000000002014  00002014  2**2
</span><span id="__span-4-44"><a id="__codelineno-4-44" name="__codelineno-4-44" href="#__codelineno-4-44"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-45"><a id="__codelineno-4-45" name="__codelineno-4-45" href="#__codelineno-4-45"></a> 19 .eh_frame     000000ac  0000000000002048  0000000000002048  00002048  2**3
</span><span id="__span-4-46"><a id="__codelineno-4-46" name="__codelineno-4-46" href="#__codelineno-4-46"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-4-47"><a id="__codelineno-4-47" name="__codelineno-4-47" href="#__codelineno-4-47"></a> 20 .init_array   00000008  0000000000003db8  0000000000003db8  00002db8  2**3
</span><span id="__span-4-48"><a id="__codelineno-4-48" name="__codelineno-4-48" href="#__codelineno-4-48"></a>                  CONTENTS, ALLOC, LOAD, DATA
</span><span id="__span-4-49"><a id="__codelineno-4-49" name="__codelineno-4-49" href="#__codelineno-4-49"></a> 21 .fini_array   00000008  0000000000003dc0  0000000000003dc0  00002dc0  2**3
</span><span id="__span-4-50"><a id="__codelineno-4-50" name="__codelineno-4-50" href="#__codelineno-4-50"></a>                  CONTENTS, ALLOC, LOAD, DATA
</span><span id="__span-4-51"><a id="__codelineno-4-51" name="__codelineno-4-51" href="#__codelineno-4-51"></a> 22 .dynamic      000001f0  0000000000003dc8  0000000000003dc8  00002dc8  2**3
</span><span id="__span-4-52"><a id="__codelineno-4-52" name="__codelineno-4-52" href="#__codelineno-4-52"></a>                  CONTENTS, ALLOC, LOAD, DATA
</span><span id="__span-4-53"><a id="__codelineno-4-53" name="__codelineno-4-53" href="#__codelineno-4-53"></a> 23 .got          00000048  0000000000003fb8  0000000000003fb8  00002fb8  2**3
</span><span id="__span-4-54"><a id="__codelineno-4-54" name="__codelineno-4-54" href="#__codelineno-4-54"></a>                  CONTENTS, ALLOC, LOAD, DATA
</span><span id="__span-4-55"><a id="__codelineno-4-55" name="__codelineno-4-55" href="#__codelineno-4-55"></a> 24 .data         00000010  0000000000004000  0000000000004000  00003000  2**3
</span><span id="__span-4-56"><a id="__codelineno-4-56" name="__codelineno-4-56" href="#__codelineno-4-56"></a>                  CONTENTS, ALLOC, LOAD, DATA
</span><span id="__span-4-57"><a id="__codelineno-4-57" name="__codelineno-4-57" href="#__codelineno-4-57"></a> 25 .bss          00000008  0000000000004010  0000000000004010  00003010  2**0
</span><span id="__span-4-58"><a id="__codelineno-4-58" name="__codelineno-4-58" href="#__codelineno-4-58"></a>                  ALLOC
</span><span id="__span-4-59"><a id="__codelineno-4-59" name="__codelineno-4-59" href="#__codelineno-4-59"></a> 26 .comment      0000002b  0000000000000000  0000000000000000  00003010  2**0
</span><span id="__span-4-60"><a id="__codelineno-4-60" name="__codelineno-4-60" href="#__codelineno-4-60"></a>                  CONTENTS, READONLY
</span></code></pre></div>
<p>Ok, so that's definitely complex. It's not just a simple <code>.text</code> section. There are a LOT of them.</p>
<p>This is too much to deal with right now. Where does the program even start? It starts with <code>main</code>, right? Wrong again!</p>
<div><pre><span></span><code><span id="__span-5-1"><a id="__codelineno-5-1" name="__codelineno-5-1" href="#__codelineno-5-1"></a>$ objdump -f hello
</span><span id="__span-5-2"><a id="__codelineno-5-2" name="__codelineno-5-2" href="#__codelineno-5-2"></a>
</span><span id="__span-5-3"><a id="__codelineno-5-3" name="__codelineno-5-3" href="#__codelineno-5-3"></a>hello:     file format elf64-x86-64
</span><span id="__span-5-4"><a id="__codelineno-5-4" name="__codelineno-5-4" href="#__codelineno-5-4"></a>architecture: i386:x86-64, flags 0x00000150:
</span><span id="__span-5-5"><a id="__codelineno-5-5" name="__codelineno-5-5" href="#__codelineno-5-5"></a>HAS_SYMS, DYNAMIC, D_PAGED
</span><span id="__span-5-6"><a id="__codelineno-5-6" name="__codelineno-5-6" href="#__codelineno-5-6"></a>start address 0x0000000000001060
</span></code></pre></div>
<p>The "start address" (also known as the entry point), is <code>_start</code>, not <code>main</code>. This mystery function at <code>0x1060</code> must call our <code>main</code> somehow, but where does it come from!?</p>
<div><pre><span></span><code><span id="__span-6-1"><a id="__codelineno-6-1" name="__codelineno-6-1" href="#__codelineno-6-1"></a>0000000000001060 g     F .text  0000000000000026              _start
</span></code></pre></div>
<p>Let's start simplifying the program. As we peel off complexity, we will get a chance to focus on understanding a few things at a time.</p>
<h2 id="life-without-libc">Life without libc</h2>
<p>A major source of complexity in our program comes from the standard libraries. They are used for printing the string and initializing the program. Let's get rid of them.</p>
<p>Easy enough, just compile with: <code>-nostdlib</code>.</p>
<p>Unfortunately, that means we no longer have access to the <code>printf</code> (or the <code>puts</code>) function. That's unfortunate since we still want to print "Hello Simplicity!".</p>
<p>It also means we will lose the <code>_start</code> function. It is provided by the C runtime library (CRT) to perform some initialization (like clearing the <code>.bss</code> segment) and call our <code>main</code> function. Since we still need our <code>main</code> to be executed, we will have to do something about that.</p>
<p>Fortunately, we can provide our own entry point with <code>-Wl,-e,&lt;function_name&gt;</code>. We <em>could</em> specify <code>main</code> as our entry point directly, but that would mean treating it as <code>void main()</code> instead of <code>int main()</code>. The entry point doesn't return anything. I feel that changing the signature of <code>main</code> is one bridge too far; let's instead create our own <code>void startup()</code> function that calls <code>main</code>.</p>
<p>For writing to <code>stdout</code>, we resort to the <code>syscall</code> assembly instruction. This instruction is how we ask the Linux kernel to do things for us. In this particular case, we would like to execute the <code>write</code> syscall to write a string to <code>stdout</code> (file descriptor = 1). Later on, we also want to call <code>exit</code> to terminate the process.</p>
<p>When calling the <code>syscall</code> instruction, we pass the syscall number in the <code>rax</code> register and the arguments in registers <code>rdi</code>, <code>rsi</code>, and <code>rdx</code>. The <code>write</code> syscall has number <code>0x01</code> and the <code>exit</code> syscall has number <code>0x3c</code>.</p>
<p>These are their C signatures:</p>
<div><pre><span></span><code><span id="__span-7-1"><a id="__codelineno-7-1" name="__codelineno-7-1" href="#__codelineno-7-1"></a>ssize_t write(int fildes, const void *buf, size_t nbyte);
</span><span id="__span-7-2"><a id="__codelineno-7-2" name="__codelineno-7-2" href="#__codelineno-7-2"></a>void exit(int status);
</span></code></pre></div>
<p>and this is our new program <code>hello-syscall.c</code>:</p>
<div><pre><span></span><code><span id="__span-8-1"><a id="__codelineno-8-1" name="__codelineno-8-1" href="#__codelineno-8-1"></a>int main() {
</span><span id="__span-8-2"><a id="__codelineno-8-2" name="__codelineno-8-2" href="#__codelineno-8-2"></a>
</span><span id="__span-8-3"><a id="__codelineno-8-3" name="__codelineno-8-3" href="#__codelineno-8-3"></a>  volatile const char message[] = "Hello Simplicity!\n";
</span><span id="__span-8-4"><a id="__codelineno-8-4" name="__codelineno-8-4" href="#__codelineno-8-4"></a>  volatile const unsigned long length = sizeof(message) - 1;
</span><span id="__span-8-5"><a id="__codelineno-8-5" name="__codelineno-8-5" href="#__codelineno-8-5"></a>
</span><span id="__span-8-6"><a id="__codelineno-8-6" name="__codelineno-8-6" href="#__codelineno-8-6"></a>  // write(1, message, length)
</span><span id="__span-8-7"><a id="__codelineno-8-7" name="__codelineno-8-7" href="#__codelineno-8-7"></a>  asm volatile("mov $1, %%rax\n"                // write syscall number (0x01)
</span><span id="__span-8-8"><a id="__codelineno-8-8" name="__codelineno-8-8" href="#__codelineno-8-8"></a>               "mov $1, %%rdi\n"                // Stdout file descriptor (0x01)
</span><span id="__span-8-9"><a id="__codelineno-8-9" name="__codelineno-8-9" href="#__codelineno-8-9"></a>               "mov %0, %%rsi\n"                // Message buffer
</span><span id="__span-8-10"><a id="__codelineno-8-10" name="__codelineno-8-10" href="#__codelineno-8-10"></a>               "mov %1, %%rdx\n"                // Buffer length
</span><span id="__span-8-11"><a id="__codelineno-8-11" name="__codelineno-8-11" href="#__codelineno-8-11"></a>               "syscall"                        // Make the syscall
</span><span id="__span-8-12"><a id="__codelineno-8-12" name="__codelineno-8-12" href="#__codelineno-8-12"></a>               :                                // No output operands
</span><span id="__span-8-13"><a id="__codelineno-8-13" name="__codelineno-8-13" href="#__codelineno-8-13"></a>               : "r"(message), "r"(length)      // Input operands
</span><span id="__span-8-14"><a id="__codelineno-8-14" name="__codelineno-8-14" href="#__codelineno-8-14"></a>               : "%rax", "%rdi", "%rsi", "%rdx" // Clobbered registers
</span><span id="__span-8-15"><a id="__codelineno-8-15" name="__codelineno-8-15" href="#__codelineno-8-15"></a>  );
</span><span id="__span-8-16"><a id="__codelineno-8-16" name="__codelineno-8-16" href="#__codelineno-8-16"></a>
</span><span id="__span-8-17"><a id="__codelineno-8-17" name="__codelineno-8-17" href="#__codelineno-8-17"></a>  return 0;
</span><span id="__span-8-18"><a id="__codelineno-8-18" name="__codelineno-8-18" href="#__codelineno-8-18"></a>}
</span><span id="__span-8-19"><a id="__codelineno-8-19" name="__codelineno-8-19" href="#__codelineno-8-19"></a>
</span><span id="__span-8-20"><a id="__codelineno-8-20" name="__codelineno-8-20" href="#__codelineno-8-20"></a>void startup() {
</span><span id="__span-8-21"><a id="__codelineno-8-21" name="__codelineno-8-21" href="#__codelineno-8-21"></a>
</span><span id="__span-8-22"><a id="__codelineno-8-22" name="__codelineno-8-22" href="#__codelineno-8-22"></a>  volatile unsigned long status = main();
</span><span id="__span-8-23"><a id="__codelineno-8-23" name="__codelineno-8-23" href="#__codelineno-8-23"></a>
</span><span id="__span-8-24"><a id="__codelineno-8-24" name="__codelineno-8-24" href="#__codelineno-8-24"></a>  // exit(status)
</span><span id="__span-8-25"><a id="__codelineno-8-25" name="__codelineno-8-25" href="#__codelineno-8-25"></a>  asm volatile("mov $0x3c, %%rax\n" // exit syscall number (0x3c)
</span><span id="__span-8-26"><a id="__codelineno-8-26" name="__codelineno-8-26" href="#__codelineno-8-26"></a>               "mov %0, %%rdi\n"    // exit status
</span><span id="__span-8-27"><a id="__codelineno-8-27" name="__codelineno-8-27" href="#__codelineno-8-27"></a>               "syscall"            // Make the syscall
</span><span id="__span-8-28"><a id="__codelineno-8-28" name="__codelineno-8-28" href="#__codelineno-8-28"></a>               :                    // No output operands
</span><span id="__span-8-29"><a id="__codelineno-8-29" name="__codelineno-8-29" href="#__codelineno-8-29"></a>               : "r"(status)        // Input operands
</span><span id="__span-8-30"><a id="__codelineno-8-30" name="__codelineno-8-30" href="#__codelineno-8-30"></a>               : "%rax", "%rdi"     // Clobbered registers
</span><span id="__span-8-31"><a id="__codelineno-8-31" name="__codelineno-8-31" href="#__codelineno-8-31"></a>  );
</span><span id="__span-8-32"><a id="__codelineno-8-32" name="__codelineno-8-32" href="#__codelineno-8-32"></a>}
</span></code></pre></div>
<p>In case you are wondering, the <code>volatile</code> keyword is required to prevent GCC from optimizing away the variables. And <code>unsigned long</code> is used instead of <code>int</code> to match the size of the <code>r__</code> 64-bit registers.</p>
<p>We build it like so:</p>
<div><pre><span></span><code><span id="__span-9-1"><a id="__codelineno-9-1" name="__codelineno-9-1" href="#__codelineno-9-1"></a>gcc -Wl,-entry=startup -nostdlib -o hello-nostd hello-syscall.c
</span></code></pre></div>
<p>Is this really simpler than before? Well, yes!</p>
<p>It might not be <em>easier</em> to understand unless you are accustomed to assembly language, syscalls, and custom entry points. But simple is not synonymous with easy. Simple is the opposite of complex. Complex things are intrinsically hard to understand, no matter how much you know. Simple things are only hard to understand until you have acquired the appropriate skills. Rich Hickey explains this eloquently in his 2011 talk "<a href="https://youtu.be/SxdOUGdseq4?si=hsXwuad7doytJeJc">Simple Made Easy</a>".</p>
<p>Still not convinced that we have actually made the program simpler? Let's take a look at the symbols and sections:</p>
<div><pre><span></span><code><span id="__span-10-1"><a id="__codelineno-10-1" name="__codelineno-10-1" href="#__codelineno-10-1"></a>$ objdump -h -t hello-nostd
</span><span id="__span-10-2"><a id="__codelineno-10-2" name="__codelineno-10-2" href="#__codelineno-10-2"></a>
</span><span id="__span-10-3"><a id="__codelineno-10-3" name="__codelineno-10-3" href="#__codelineno-10-3"></a>Sections:
</span><span id="__span-10-4"><a id="__codelineno-10-4" name="__codelineno-10-4" href="#__codelineno-10-4"></a>Idx Name          Size      VMA               LMA               File off  Algn
</span><span id="__span-10-5"><a id="__codelineno-10-5" name="__codelineno-10-5" href="#__codelineno-10-5"></a>  0 .interp       0000001c  0000000000000318  0000000000000318  00000318  2**0
</span><span id="__span-10-6"><a id="__codelineno-10-6" name="__codelineno-10-6" href="#__codelineno-10-6"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-10-7"><a id="__codelineno-10-7" name="__codelineno-10-7" href="#__codelineno-10-7"></a>  1 .note.gnu.property 00000020  0000000000000338  0000000000000338  00000338  2**3
</span><span id="__span-10-8"><a id="__codelineno-10-8" name="__codelineno-10-8" href="#__codelineno-10-8"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-10-9"><a id="__codelineno-10-9" name="__codelineno-10-9" href="#__codelineno-10-9"></a>  2 .note.gnu.build-id 00000024  0000000000000358  0000000000000358  00000358  2**2
</span><span id="__span-10-10"><a id="__codelineno-10-10" name="__codelineno-10-10" href="#__codelineno-10-10"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-10-11"><a id="__codelineno-10-11" name="__codelineno-10-11" href="#__codelineno-10-11"></a>  3 .gnu.hash     0000001c  0000000000000380  0000000000000380  00000380  2**3
</span><span id="__span-10-12"><a id="__codelineno-10-12" name="__codelineno-10-12" href="#__codelineno-10-12"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-10-13"><a id="__codelineno-10-13" name="__codelineno-10-13" href="#__codelineno-10-13"></a>  4 .dynsym       00000018  00000000000003a0  00000000000003a0  000003a0  2**3
</span><span id="__span-10-14"><a id="__codelineno-10-14" name="__codelineno-10-14" href="#__codelineno-10-14"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-10-15"><a id="__codelineno-10-15" name="__codelineno-10-15" href="#__codelineno-10-15"></a>  5 .dynstr       00000001  00000000000003b8  00000000000003b8  000003b8  2**0
</span><span id="__span-10-16"><a id="__codelineno-10-16" name="__codelineno-10-16" href="#__codelineno-10-16"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-10-17"><a id="__codelineno-10-17" name="__codelineno-10-17" href="#__codelineno-10-17"></a>  6 .text         0000007f  0000000000001000  0000000000001000  00001000  2**0
</span><span id="__span-10-18"><a id="__codelineno-10-18" name="__codelineno-10-18" href="#__codelineno-10-18"></a>                  CONTENTS, ALLOC, LOAD, READONLY, CODE
</span><span id="__span-10-19"><a id="__codelineno-10-19" name="__codelineno-10-19" href="#__codelineno-10-19"></a>  7 .eh_frame_hdr 0000001c  0000000000002000  0000000000002000  00002000  2**2
</span><span id="__span-10-20"><a id="__codelineno-10-20" name="__codelineno-10-20" href="#__codelineno-10-20"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-10-21"><a id="__codelineno-10-21" name="__codelineno-10-21" href="#__codelineno-10-21"></a>  8 .eh_frame     00000058  0000000000002020  0000000000002020  00002020  2**3
</span><span id="__span-10-22"><a id="__codelineno-10-22" name="__codelineno-10-22" href="#__codelineno-10-22"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-10-23"><a id="__codelineno-10-23" name="__codelineno-10-23" href="#__codelineno-10-23"></a>  9 .dynamic      000000e0  0000000000003f20  0000000000003f20  00002f20  2**3
</span><span id="__span-10-24"><a id="__codelineno-10-24" name="__codelineno-10-24" href="#__codelineno-10-24"></a>                  CONTENTS, ALLOC, LOAD, DATA
</span><span id="__span-10-25"><a id="__codelineno-10-25" name="__codelineno-10-25" href="#__codelineno-10-25"></a> 10 .comment      0000002b  0000000000000000  0000000000000000  00003000  2**0
</span><span id="__span-10-26"><a id="__codelineno-10-26" name="__codelineno-10-26" href="#__codelineno-10-26"></a>                  CONTENTS, READONLY
</span><span id="__span-10-27"><a id="__codelineno-10-27" name="__codelineno-10-27" href="#__codelineno-10-27"></a>
</span><span id="__span-10-28"><a id="__codelineno-10-28" name="__codelineno-10-28" href="#__codelineno-10-28"></a>SYMBOL TABLE:
</span><span id="__span-10-29"><a id="__codelineno-10-29" name="__codelineno-10-29" href="#__codelineno-10-29"></a>0000000000000000 l    df *ABS*  0000000000000000 hello-syscall.c
</span><span id="__span-10-30"><a id="__codelineno-10-30" name="__codelineno-10-30" href="#__codelineno-10-30"></a>0000000000000000 l    df *ABS*  0000000000000000
</span><span id="__span-10-31"><a id="__codelineno-10-31" name="__codelineno-10-31" href="#__codelineno-10-31"></a>0000000000003f20 l     O .dynamic   0000000000000000 _DYNAMIC
</span><span id="__span-10-32"><a id="__codelineno-10-32" name="__codelineno-10-32" href="#__codelineno-10-32"></a>0000000000002000 l       .eh_frame_hdr  0000000000000000 __GNU_EH_FRAME_HDR
</span><span id="__span-10-33"><a id="__codelineno-10-33" name="__codelineno-10-33" href="#__codelineno-10-33"></a>0000000000001050 g     F .text  000000000000002f startup
</span><span id="__span-10-34"><a id="__codelineno-10-34" name="__codelineno-10-34" href="#__codelineno-10-34"></a>0000000000004000 g       .dynamic   0000000000000000 __bss_start
</span><span id="__span-10-35"><a id="__codelineno-10-35" name="__codelineno-10-35" href="#__codelineno-10-35"></a>0000000000001000 g     F .text  0000000000000050 main
</span><span id="__span-10-36"><a id="__codelineno-10-36" name="__codelineno-10-36" href="#__codelineno-10-36"></a>0000000000004000 g       .dynamic   0000000000000000 _edata
</span><span id="__span-10-37"><a id="__codelineno-10-37" name="__codelineno-10-37" href="#__codelineno-10-37"></a>0000000000004000 g       .dynamic   0000000000000000 _end
</span></code></pre></div>
<p>There's still a lot going on here, but at least it now fits on one screen. As expected, <code>objdump -f</code> gives us a new start address: <code>0x1050</code>. It's our <code>startup</code> function!</p>
<p>Let's continue simplifying!</p>
<h2 id="life-without-pie">Life without PIE</h2>
<p>For the last 20 years, your programs have been loaded into memory at random addresses as a security mitigation. ASLR (Address Space Layout Randomization) makes it harder to write exploits since the shellcode can't jump to hardcoded destinations. It also means jumps in your regular programs can't be hardcoded.</p>
<p>By default, programs on modern systems are built as Position Independent Executables (PIE). Addresses are resolved when the program is loaded into memory. It's great for security, but it adds complexity. Let's get rid of it with: <code>-no-pie</code>.</p>
<p>To further unclutter our assembly code, we turn off some more safety features with <code>-fcf-protection=none</code> and <code>-fno-stack-protector</code>. We also get rid of some metadata generation with <code>-Wl,--build-id=none</code> and some debugger-friendly stack unwinding info with <code>-fno-unwind-tables</code> and <code>-fno-asynchronous-unwind-tables</code>.</p>
<div><pre><span></span><code><span id="__span-11-1"><a id="__codelineno-11-1" name="__codelineno-11-1" href="#__codelineno-11-1"></a>gcc -no-pie \
</span><span id="__span-11-2"><a id="__codelineno-11-2" name="__codelineno-11-2" href="#__codelineno-11-2"></a>    -nostdlib \
</span><span id="__span-11-3"><a id="__codelineno-11-3" name="__codelineno-11-3" href="#__codelineno-11-3"></a>    -Wl,-e,startup \
</span><span id="__span-11-4"><a id="__codelineno-11-4" name="__codelineno-11-4" href="#__codelineno-11-4"></a>    -Wl,--build-id=none \
</span><span id="__span-11-5"><a id="__codelineno-11-5" name="__codelineno-11-5" href="#__codelineno-11-5"></a>    -fcf-protection=none \
</span><span id="__span-11-6"><a id="__codelineno-11-6" name="__codelineno-11-6" href="#__codelineno-11-6"></a>    -fno-stack-protector \
</span><span id="__span-11-7"><a id="__codelineno-11-7" name="__codelineno-11-7" href="#__codelineno-11-7"></a>    -fno-asynchronous-unwind-tables \
</span><span id="__span-11-8"><a id="__codelineno-11-8" name="__codelineno-11-8" href="#__codelineno-11-8"></a>    -fno-unwind-tables \
</span><span id="__span-11-9"><a id="__codelineno-11-9" name="__codelineno-11-9" href="#__codelineno-11-9"></a>    -o hello-nostd-nopie hello.c
</span></code></pre></div>
<p>We are now down to this:</p>
<div><pre><span></span><code><span id="__span-12-1"><a id="__codelineno-12-1" name="__codelineno-12-1" href="#__codelineno-12-1"></a>$ objdump -h -t hello-nostd-nopie
</span><span id="__span-12-2"><a id="__codelineno-12-2" name="__codelineno-12-2" href="#__codelineno-12-2"></a>
</span><span id="__span-12-3"><a id="__codelineno-12-3" name="__codelineno-12-3" href="#__codelineno-12-3"></a>hello-nostd-nopie:     file format elf64-x86-64
</span><span id="__span-12-4"><a id="__codelineno-12-4" name="__codelineno-12-4" href="#__codelineno-12-4"></a>
</span><span id="__span-12-5"><a id="__codelineno-12-5" name="__codelineno-12-5" href="#__codelineno-12-5"></a>Sections:
</span><span id="__span-12-6"><a id="__codelineno-12-6" name="__codelineno-12-6" href="#__codelineno-12-6"></a>Idx Name          Size      VMA               LMA               File off  Algn
</span><span id="__span-12-7"><a id="__codelineno-12-7" name="__codelineno-12-7" href="#__codelineno-12-7"></a>  0 .text         00000077  0000000000401000  0000000000401000  00001000  2**0
</span><span id="__span-12-8"><a id="__codelineno-12-8" name="__codelineno-12-8" href="#__codelineno-12-8"></a>                  CONTENTS, ALLOC, LOAD, READONLY, CODE
</span><span id="__span-12-9"><a id="__codelineno-12-9" name="__codelineno-12-9" href="#__codelineno-12-9"></a>  1 .comment      0000002b  0000000000000000  0000000000000000  00001077  2**0
</span><span id="__span-12-10"><a id="__codelineno-12-10" name="__codelineno-12-10" href="#__codelineno-12-10"></a>                  CONTENTS, READONLY
</span><span id="__span-12-11"><a id="__codelineno-12-11" name="__codelineno-12-11" href="#__codelineno-12-11"></a>SYMBOL TABLE:
</span><span id="__span-12-12"><a id="__codelineno-12-12" name="__codelineno-12-12" href="#__codelineno-12-12"></a>0000000000000000 l    df *ABS*  0000000000000000 hello-syscall.c
</span><span id="__span-12-13"><a id="__codelineno-12-13" name="__codelineno-12-13" href="#__codelineno-12-13"></a>000000000040104c g     F .text  000000000000002b startup
</span><span id="__span-12-14"><a id="__codelineno-12-14" name="__codelineno-12-14" href="#__codelineno-12-14"></a>0000000000402000 g       .text  0000000000000000 __bss_start
</span><span id="__span-12-15"><a id="__codelineno-12-15" name="__codelineno-12-15" href="#__codelineno-12-15"></a>0000000000401000 g     F .text  000000000000004c main
</span><span id="__span-12-16"><a id="__codelineno-12-16" name="__codelineno-12-16" href="#__codelineno-12-16"></a>0000000000402000 g       .text  0000000000000000 _edata
</span><span id="__span-12-17"><a id="__codelineno-12-17" name="__codelineno-12-17" href="#__codelineno-12-17"></a>0000000000402000 g       .text  0000000000000000 _end
</span></code></pre></div>
<p>Did you notice how the symbol addresses changed with <code>-no-pie</code>? Before, they were relative, waiting for some offset to be added at load time. Now, they are absolute, and <code>main</code> will really be at <code>0x00401000</code>.</p>
<div><pre><span></span><code><span id="__span-13-1"><a id="__codelineno-13-1" name="__codelineno-13-1" href="#__codelineno-13-1"></a>$ gdb hi
</span><span id="__span-13-2"><a id="__codelineno-13-2" name="__codelineno-13-2" href="#__codelineno-13-2"></a>(gdb) break main
</span><span id="__span-13-3"><a id="__codelineno-13-3" name="__codelineno-13-3" href="#__codelineno-13-3"></a>Breakpoint 1 at 0x401004
</span><span id="__span-13-4"><a id="__codelineno-13-4" name="__codelineno-13-4" href="#__codelineno-13-4"></a>(gdb) run
</span><span id="__span-13-5"><a id="__codelineno-13-5" name="__codelineno-13-5" href="#__codelineno-13-5"></a>Breakpoint 1, 0x0000000000401004 in main ()
</span></code></pre></div>
<p>Phew! We are finally approaching something simple-ish. Now, our entire program even fits on one screen:</p>
<div><pre><span></span><code><span id="__span-14-1"><a id="__codelineno-14-1" name="__codelineno-14-1" href="#__codelineno-14-1"></a>$ objdump -d -M intel hello-nostd-nopie
</span><span id="__span-14-2"><a id="__codelineno-14-2" name="__codelineno-14-2" href="#__codelineno-14-2"></a>
</span><span id="__span-14-3"><a id="__codelineno-14-3" name="__codelineno-14-3" href="#__codelineno-14-3"></a>Disassembly of section .text:
</span><span id="__span-14-4"><a id="__codelineno-14-4" name="__codelineno-14-4" href="#__codelineno-14-4"></a>
</span><span id="__span-14-5"><a id="__codelineno-14-5" name="__codelineno-14-5" href="#__codelineno-14-5"></a>0000000000401000 &lt;main&gt;:
</span><span id="__span-14-6"><a id="__codelineno-14-6" name="__codelineno-14-6" href="#__codelineno-14-6"></a>  401000:   55                      push   rbp
</span><span id="__span-14-7"><a id="__codelineno-14-7" name="__codelineno-14-7" href="#__codelineno-14-7"></a>  401001:   48 89 e5                mov    rbp,rsp
</span><span id="__span-14-8"><a id="__codelineno-14-8" name="__codelineno-14-8" href="#__codelineno-14-8"></a>  401004:   48 b8 48 65 6c 6c 6f    movabs rax,0x6953206f6c6c6548
</span><span id="__span-14-9"><a id="__codelineno-14-9" name="__codelineno-14-9" href="#__codelineno-14-9"></a>  40100b:   20 53 69
</span><span id="__span-14-10"><a id="__codelineno-14-10" name="__codelineno-14-10" href="#__codelineno-14-10"></a>  40100e:   48 ba 6d 70 6c 69 63    movabs rdx,0x79746963696c706d
</span><span id="__span-14-11"><a id="__codelineno-14-11" name="__codelineno-14-11" href="#__codelineno-14-11"></a>  401015:   69 74 79
</span><span id="__span-14-12"><a id="__codelineno-14-12" name="__codelineno-14-12" href="#__codelineno-14-12"></a>  401018:   48 89 45 e0             mov    QWORD PTR [rbp-0x20],rax
</span><span id="__span-14-13"><a id="__codelineno-14-13" name="__codelineno-14-13" href="#__codelineno-14-13"></a>  40101c:   48 89 55 e8             mov    QWORD PTR [rbp-0x18],rdx
</span><span id="__span-14-14"><a id="__codelineno-14-14" name="__codelineno-14-14" href="#__codelineno-14-14"></a>  401020:   66 c7 45 f0 21 0a       mov    WORD PTR [rbp-0x10],0xa21
</span><span id="__span-14-15"><a id="__codelineno-14-15" name="__codelineno-14-15" href="#__codelineno-14-15"></a>  401026:   c6 45 f2 00             mov    BYTE PTR [rbp-0xe],0x0
</span><span id="__span-14-16"><a id="__codelineno-14-16" name="__codelineno-14-16" href="#__codelineno-14-16"></a>  40102a:   48 c7 45 d8 12 00 00    mov    QWORD PTR [rbp-0x28],0x12
</span><span id="__span-14-17"><a id="__codelineno-14-17" name="__codelineno-14-17" href="#__codelineno-14-17"></a>  401031:   00
</span><span id="__span-14-18"><a id="__codelineno-14-18" name="__codelineno-14-18" href="#__codelineno-14-18"></a>  401032:   4c 8b 45 d8             mov    r8,QWORD PTR [rbp-0x28]
</span><span id="__span-14-19"><a id="__codelineno-14-19" name="__codelineno-14-19" href="#__codelineno-14-19"></a>  401036:   48 8d 4d e0             lea    rcx,[rbp-0x20]
</span><span id="__span-14-20"><a id="__codelineno-14-20" name="__codelineno-14-20" href="#__codelineno-14-20"></a>  40103a:   48 c7 c0 01 00 00 00    mov    rax,0x1
</span><span id="__span-14-21"><a id="__codelineno-14-21" name="__codelineno-14-21" href="#__codelineno-14-21"></a>  401041:   48 c7 c7 01 00 00 00    mov    rdi,0x1
</span><span id="__span-14-22"><a id="__codelineno-14-22" name="__codelineno-14-22" href="#__codelineno-14-22"></a>  401048:   48 89 ce                mov    rsi,rcx
</span><span id="__span-14-23"><a id="__codelineno-14-23" name="__codelineno-14-23" href="#__codelineno-14-23"></a>  40104b:   4c 89 c2                mov    rdx,r8
</span><span id="__span-14-24"><a id="__codelineno-14-24" name="__codelineno-14-24" href="#__codelineno-14-24"></a>  40104e:   0f 05                   syscall
</span><span id="__span-14-25"><a id="__codelineno-14-25" name="__codelineno-14-25" href="#__codelineno-14-25"></a>  401050:   b8 00 00 00 00          mov    eax,0x0
</span><span id="__span-14-26"><a id="__codelineno-14-26" name="__codelineno-14-26" href="#__codelineno-14-26"></a>  401055:   5d                      pop    rbp
</span><span id="__span-14-27"><a id="__codelineno-14-27" name="__codelineno-14-27" href="#__codelineno-14-27"></a>  401056:   c3                      ret
</span><span id="__span-14-28"><a id="__codelineno-14-28" name="__codelineno-14-28" href="#__codelineno-14-28"></a>
</span><span id="__span-14-29"><a id="__codelineno-14-29" name="__codelineno-14-29" href="#__codelineno-14-29"></a>0000000000401057 &lt;startup&gt;:
</span><span id="__span-14-30"><a id="__codelineno-14-30" name="__codelineno-14-30" href="#__codelineno-14-30"></a>  401057:   55                      push   rbp
</span><span id="__span-14-31"><a id="__codelineno-14-31" name="__codelineno-14-31" href="#__codelineno-14-31"></a>  401058:   48 89 e5                mov    rbp,rsp
</span><span id="__span-14-32"><a id="__codelineno-14-32" name="__codelineno-14-32" href="#__codelineno-14-32"></a>  40105b:   48 83 ec 10             sub    rsp,0x10
</span><span id="__span-14-33"><a id="__codelineno-14-33" name="__codelineno-14-33" href="#__codelineno-14-33"></a>  40105f:   b8 00 00 00 00          mov    eax,0x0
</span><span id="__span-14-34"><a id="__codelineno-14-34" name="__codelineno-14-34" href="#__codelineno-14-34"></a>  401064:   e8 97 ff ff ff          call   401000 &lt;main&gt;
</span><span id="__span-14-35"><a id="__codelineno-14-35" name="__codelineno-14-35" href="#__codelineno-14-35"></a>  401069:   48 98                   cdqe
</span><span id="__span-14-36"><a id="__codelineno-14-36" name="__codelineno-14-36" href="#__codelineno-14-36"></a>  40106b:   48 89 45 f8             mov    QWORD PTR [rbp-0x8],rax
</span><span id="__span-14-37"><a id="__codelineno-14-37" name="__codelineno-14-37" href="#__codelineno-14-37"></a>  40106f:   48 8b 55 f8             mov    rdx,QWORD PTR [rbp-0x8]
</span><span id="__span-14-38"><a id="__codelineno-14-38" name="__codelineno-14-38" href="#__codelineno-14-38"></a>  401073:   48 c7 c0 3c 00 00 00    mov    rax,0x3c
</span><span id="__span-14-39"><a id="__codelineno-14-39" name="__codelineno-14-39" href="#__codelineno-14-39"></a>  40107a:   48 89 d7                mov    rdi,rdx
</span><span id="__span-14-40"><a id="__codelineno-14-40" name="__codelineno-14-40" href="#__codelineno-14-40"></a>  40107d:   0f 05                   syscall
</span><span id="__span-14-41"><a id="__codelineno-14-41" name="__codelineno-14-41" href="#__codelineno-14-41"></a>  40107f:   90                      nop
</span><span id="__span-14-42"><a id="__codelineno-14-42" name="__codelineno-14-42" href="#__codelineno-14-42"></a>  401080:   c9                      leave
</span><span id="__span-14-43"><a id="__codelineno-14-43" name="__codelineno-14-43" href="#__codelineno-14-43"></a>  401081:   c3                      ret
</span></code></pre></div>
<p>You can see the <code>startup</code> function calling <code>main</code>, the two syscalls, and the "Hello Simplicity!" string hardcoded as a large number of ASCII values (being loaded onto the stack, relative to the stack base pointer <code>rbp</code>).</p>
<p>There's not a lot of complexity left, at least not at this level. Our ELF is actually quite simple! But wait, there is more!</p>
<h2 id="linker-scripts">Linker Scripts</h2>
<p>Where do the strange symbols (like <code>__bss_start</code>) come from? And who decides that our <code>startup</code> function should be loaded into memory at <code>0x0040104c</code>? What if we want our code to live in the cool <code>0xc0d30000</code> address range?</p>
<p>These things are specified in the linker script. Until now, we have been using the default one, which you can see with <code>ld -verbose</code>. It's very complex. Let's get rid of it.</p>
<p>Our simple hello world application doesn't use any global variables. If it had, they would fall into three categories:</p>
<ul>
<li><code>.rodata</code>: Constants with values provided at compile time, like our hardcoded string.</li>
<li><code>.data</code>: Non-const variables with values provided at compile time.</li>
<li><code>.bss</code>: Uninitialized global variables.</li>
</ul>
<p>Let's complicate our program a tiny bit by introducing a symbol for each category. This will provide a more interesting linker script example. Here is the new program <code>hello-data.c</code>:</p>
<div><pre><span></span><code><span id="__span-15-1"><a id="__codelineno-15-1" name="__codelineno-15-1" href="#__codelineno-15-1"></a>const char message[] = "Hello Simplicity!\n";   // .rodata
</span><span id="__span-15-2"><a id="__codelineno-15-2" name="__codelineno-15-2" href="#__codelineno-15-2"></a>unsigned long length = sizeof(message) - 1;     // .data
</span><span id="__span-15-3"><a id="__codelineno-15-3" name="__codelineno-15-3" href="#__codelineno-15-3"></a>unsigned long status;                           // .bss
</span><span id="__span-15-4"><a id="__codelineno-15-4" name="__codelineno-15-4" href="#__codelineno-15-4"></a>
</span><span id="__span-15-5"><a id="__codelineno-15-5" name="__codelineno-15-5" href="#__codelineno-15-5"></a>int main() {
</span><span id="__span-15-6"><a id="__codelineno-15-6" name="__codelineno-15-6" href="#__codelineno-15-6"></a>  // write(1, message, length)
</span><span id="__span-15-7"><a id="__codelineno-15-7" name="__codelineno-15-7" href="#__codelineno-15-7"></a>  asm volatile("mov $1, %%rax\n"                // write syscall number (0x01)
</span><span id="__span-15-8"><a id="__codelineno-15-8" name="__codelineno-15-8" href="#__codelineno-15-8"></a>               "mov $1, %%rdi\n"                // Stdout file descriptor (0x01)
</span><span id="__span-15-9"><a id="__codelineno-15-9" name="__codelineno-15-9" href="#__codelineno-15-9"></a>               "mov %0, %%rsi\n"                // Message buffer
</span><span id="__span-15-10"><a id="__codelineno-15-10" name="__codelineno-15-10" href="#__codelineno-15-10"></a>               "mov %1, %%rdx\n"                // Buffer length
</span><span id="__span-15-11"><a id="__codelineno-15-11" name="__codelineno-15-11" href="#__codelineno-15-11"></a>               "syscall"                        // Make the syscall
</span><span id="__span-15-12"><a id="__codelineno-15-12" name="__codelineno-15-12" href="#__codelineno-15-12"></a>               :                                // No output operands
</span><span id="__span-15-13"><a id="__codelineno-15-13" name="__codelineno-15-13" href="#__codelineno-15-13"></a>               : "r"(message), "r"(length)      // Input operands
</span><span id="__span-15-14"><a id="__codelineno-15-14" name="__codelineno-15-14" href="#__codelineno-15-14"></a>               : "%rax", "%rdi", "%rsi", "%rdx" // Clobbered registers
</span><span id="__span-15-15"><a id="__codelineno-15-15" name="__codelineno-15-15" href="#__codelineno-15-15"></a>  );
</span><span id="__span-15-16"><a id="__codelineno-15-16" name="__codelineno-15-16" href="#__codelineno-15-16"></a>
</span><span id="__span-15-17"><a id="__codelineno-15-17" name="__codelineno-15-17" href="#__codelineno-15-17"></a>  return 0;
</span><span id="__span-15-18"><a id="__codelineno-15-18" name="__codelineno-15-18" href="#__codelineno-15-18"></a>}
</span><span id="__span-15-19"><a id="__codelineno-15-19" name="__codelineno-15-19" href="#__codelineno-15-19"></a>
</span><span id="__span-15-20"><a id="__codelineno-15-20" name="__codelineno-15-20" href="#__codelineno-15-20"></a>void startup() {
</span><span id="__span-15-21"><a id="__codelineno-15-21" name="__codelineno-15-21" href="#__codelineno-15-21"></a>  status = main();
</span><span id="__span-15-22"><a id="__codelineno-15-22" name="__codelineno-15-22" href="#__codelineno-15-22"></a>
</span><span id="__span-15-23"><a id="__codelineno-15-23" name="__codelineno-15-23" href="#__codelineno-15-23"></a>  // exit(status)
</span><span id="__span-15-24"><a id="__codelineno-15-24" name="__codelineno-15-24" href="#__codelineno-15-24"></a>  asm volatile("mov $0x3c, %%rax\n" // exit syscall number (0x3c)
</span><span id="__span-15-25"><a id="__codelineno-15-25" name="__codelineno-15-25" href="#__codelineno-15-25"></a>               "mov %0, %%rdi\n"    // exit status
</span><span id="__span-15-26"><a id="__codelineno-15-26" name="__codelineno-15-26" href="#__codelineno-15-26"></a>               "syscall"            // Make the syscall
</span><span id="__span-15-27"><a id="__codelineno-15-27" name="__codelineno-15-27" href="#__codelineno-15-27"></a>               :                    // No output operands
</span><span id="__span-15-28"><a id="__codelineno-15-28" name="__codelineno-15-28" href="#__codelineno-15-28"></a>               : "r"(status)        // Input operands
</span><span id="__span-15-29"><a id="__codelineno-15-29" name="__codelineno-15-29" href="#__codelineno-15-29"></a>               : "%rax", "%rdi"     // Clobbered registers
</span><span id="__span-15-30"><a id="__codelineno-15-30" name="__codelineno-15-30" href="#__codelineno-15-30"></a>  );
</span><span id="__span-15-31"><a id="__codelineno-15-31" name="__codelineno-15-31" href="#__codelineno-15-31"></a>}
</span></code></pre></div>
<p>Looking at the symbol table again, without using a custom linker script, we can see the globals in <code>.data</code>, <code>.rodata</code> and <code>.bss</code> respectively:</p>
<div><pre><span></span><code><span id="__span-16-1"><a id="__codelineno-16-1" name="__codelineno-16-1" href="#__codelineno-16-1"></a>000000000040102f g     F .text  000000000000002d startup
</span><span id="__span-16-2"><a id="__codelineno-16-2" name="__codelineno-16-2" href="#__codelineno-16-2"></a>0000000000403010 g     O .data  0000000000000008 length
</span><span id="__span-16-3"><a id="__codelineno-16-3" name="__codelineno-16-3" href="#__codelineno-16-3"></a>0000000000402000 g     O .rodata    000000000000000e message
</span><span id="__span-16-4"><a id="__codelineno-16-4" name="__codelineno-16-4" href="#__codelineno-16-4"></a>0000000000401000 g     F .text  000000000000002f main
</span><span id="__span-16-5"><a id="__codelineno-16-5" name="__codelineno-16-5" href="#__codelineno-16-5"></a>0000000000403018 g     O .bss   0000000000000008 status
</span></code></pre></div>
<p>Now, let's create a simple and fun linker script (<code>hello.ld</code>) with a cool memory map and emojis in the section names:</p>
<div><pre><span></span><code><span id="__span-17-1"><a id="__codelineno-17-1" name="__codelineno-17-1" href="#__codelineno-17-1"></a>MEMORY {
</span><span id="__span-17-2"><a id="__codelineno-17-2" name="__codelineno-17-2" href="#__codelineno-17-2"></a>  IRAM (rx) : ORIGIN = 0xC0DE0000, LENGTH = 0x1000
</span><span id="__span-17-3"><a id="__codelineno-17-3" name="__codelineno-17-3" href="#__codelineno-17-3"></a>  RAM  (rw) : ORIGIN = 0xFEED0000, LENGTH = 0x1000
</span><span id="__span-17-4"><a id="__codelineno-17-4" name="__codelineno-17-4" href="#__codelineno-17-4"></a>  ROM  (r)  : ORIGIN = 0xDEAD0000, LENGTH = 0x1000
</span><span id="__span-17-5"><a id="__codelineno-17-5" name="__codelineno-17-5" href="#__codelineno-17-5"></a>}
</span><span id="__span-17-6"><a id="__codelineno-17-6" name="__codelineno-17-6" href="#__codelineno-17-6"></a>
</span><span id="__span-17-7"><a id="__codelineno-17-7" name="__codelineno-17-7" href="#__codelineno-17-7"></a>SECTIONS
</span><span id="__span-17-8"><a id="__codelineno-17-8" name="__codelineno-17-8" href="#__codelineno-17-8"></a>{
</span><span id="__span-17-9"><a id="__codelineno-17-9" name="__codelineno-17-9" href="#__codelineno-17-9"></a>  "📜 .text" : {
</span><span id="__span-17-10"><a id="__codelineno-17-10" name="__codelineno-17-10" href="#__codelineno-17-10"></a>    *(.text*)
</span><span id="__span-17-11"><a id="__codelineno-17-11" name="__codelineno-17-11" href="#__codelineno-17-11"></a>  } &gt; IRAM
</span><span id="__span-17-12"><a id="__codelineno-17-12" name="__codelineno-17-12" href="#__codelineno-17-12"></a>
</span><span id="__span-17-13"><a id="__codelineno-17-13" name="__codelineno-17-13" href="#__codelineno-17-13"></a>  "📦 .data" : {
</span><span id="__span-17-14"><a id="__codelineno-17-14" name="__codelineno-17-14" href="#__codelineno-17-14"></a>    *(.data*)
</span><span id="__span-17-15"><a id="__codelineno-17-15" name="__codelineno-17-15" href="#__codelineno-17-15"></a>  } &gt; RAM
</span><span id="__span-17-16"><a id="__codelineno-17-16" name="__codelineno-17-16" href="#__codelineno-17-16"></a>
</span><span id="__span-17-17"><a id="__codelineno-17-17" name="__codelineno-17-17" href="#__codelineno-17-17"></a>  "📁 .bss" : {
</span><span id="__span-17-18"><a id="__codelineno-17-18" name="__codelineno-17-18" href="#__codelineno-17-18"></a>    *(.bss*)
</span><span id="__span-17-19"><a id="__codelineno-17-19" name="__codelineno-17-19" href="#__codelineno-17-19"></a>  } &gt; RAM
</span><span id="__span-17-20"><a id="__codelineno-17-20" name="__codelineno-17-20" href="#__codelineno-17-20"></a>
</span><span id="__span-17-21"><a id="__codelineno-17-21" name="__codelineno-17-21" href="#__codelineno-17-21"></a>  "🧊 .rodata" : {
</span><span id="__span-17-22"><a id="__codelineno-17-22" name="__codelineno-17-22" href="#__codelineno-17-22"></a>    *(.rodata*)
</span><span id="__span-17-23"><a id="__codelineno-17-23" name="__codelineno-17-23" href="#__codelineno-17-23"></a>  }  &gt; ROM
</span><span id="__span-17-24"><a id="__codelineno-17-24" name="__codelineno-17-24" href="#__codelineno-17-24"></a>
</span><span id="__span-17-25"><a id="__codelineno-17-25" name="__codelineno-17-25" href="#__codelineno-17-25"></a>  /DISCARD/ : { *(.comment) }
</span><span id="__span-17-26"><a id="__codelineno-17-26" name="__codelineno-17-26" href="#__codelineno-17-26"></a>}
</span><span id="__span-17-27"><a id="__codelineno-17-27" name="__codelineno-17-27" href="#__codelineno-17-27"></a>
</span><span id="__span-17-28"><a id="__codelineno-17-28" name="__codelineno-17-28" href="#__codelineno-17-28"></a>ENTRY(startup)
</span></code></pre></div>
<p>We use the same build options as before but add <code>-T hello.ld</code> to start using our linker script.</p>
<p>This is the simple program in its final form:</p>
<div><pre><span></span><code><span id="__span-18-1"><a id="__codelineno-18-1" name="__codelineno-18-1" href="#__codelineno-18-1"></a>$ objdump -t -h hello-data
</span><span id="__span-18-2"><a id="__codelineno-18-2" name="__codelineno-18-2" href="#__codelineno-18-2"></a>
</span><span id="__span-18-3"><a id="__codelineno-18-3" name="__codelineno-18-3" href="#__codelineno-18-3"></a>hello-data:     file format elf64-x86-64
</span><span id="__span-18-4"><a id="__codelineno-18-4" name="__codelineno-18-4" href="#__codelineno-18-4"></a>
</span><span id="__span-18-5"><a id="__codelineno-18-5" name="__codelineno-18-5" href="#__codelineno-18-5"></a>Sections:
</span><span id="__span-18-6"><a id="__codelineno-18-6" name="__codelineno-18-6" href="#__codelineno-18-6"></a>Idx Name          Size      VMA               LMA               File off  Algn
</span><span id="__span-18-7"><a id="__codelineno-18-7" name="__codelineno-18-7" href="#__codelineno-18-7"></a>  0 📜 .text    0000005c  00000000c0de0000  00000000c0de0000  00001000  2**0
</span><span id="__span-18-8"><a id="__codelineno-18-8" name="__codelineno-18-8" href="#__codelineno-18-8"></a>                  CONTENTS, ALLOC, LOAD, READONLY, CODE
</span><span id="__span-18-9"><a id="__codelineno-18-9" name="__codelineno-18-9" href="#__codelineno-18-9"></a>  1 📦 .data    00000008  00000000feed0000  00000000feed0000  00003000  2**3
</span><span id="__span-18-10"><a id="__codelineno-18-10" name="__codelineno-18-10" href="#__codelineno-18-10"></a>                  CONTENTS, ALLOC, LOAD, DATA
</span><span id="__span-18-11"><a id="__codelineno-18-11" name="__codelineno-18-11" href="#__codelineno-18-11"></a>  2 📁 .bss     00000008  00000000feed0008  00000000feed0008  00003008  2**3
</span><span id="__span-18-12"><a id="__codelineno-18-12" name="__codelineno-18-12" href="#__codelineno-18-12"></a>                  ALLOC
</span><span id="__span-18-13"><a id="__codelineno-18-13" name="__codelineno-18-13" href="#__codelineno-18-13"></a>  3 🧊 .rodata  00000013  00000000dead0000  00000000dead0000  00002000  2**4
</span><span id="__span-18-14"><a id="__codelineno-18-14" name="__codelineno-18-14" href="#__codelineno-18-14"></a>                  CONTENTS, ALLOC, LOAD, READONLY, DATA
</span><span id="__span-18-15"><a id="__codelineno-18-15" name="__codelineno-18-15" href="#__codelineno-18-15"></a>SYMBOL TABLE:
</span><span id="__span-18-16"><a id="__codelineno-18-16" name="__codelineno-18-16" href="#__codelineno-18-16"></a>0000000000000000 l    df *ABS*  0000000000000000 hello-data.c
</span><span id="__span-18-17"><a id="__codelineno-18-17" name="__codelineno-18-17" href="#__codelineno-18-17"></a>00000000c0de002f g     F 📜 .text    000000000000002d startup
</span><span id="__span-18-18"><a id="__codelineno-18-18" name="__codelineno-18-18" href="#__codelineno-18-18"></a>00000000feed0000 g     O 📦 .data    0000000000000008 length
</span><span id="__span-18-19"><a id="__codelineno-18-19" name="__codelineno-18-19" href="#__codelineno-18-19"></a>00000000dead0000 g     O 🧊 .rodata  0000000000000013 message
</span><span id="__span-18-20"><a id="__codelineno-18-20" name="__codelineno-18-20" href="#__codelineno-18-20"></a>00000000c0de0000 g     F 📜 .text    000000000000002f main
</span><span id="__span-18-21"><a id="__codelineno-18-21" name="__codelineno-18-21" href="#__codelineno-18-21"></a>00000000feed0008 g     O 📁 .bss 0000000000000008 status
</span></code></pre></div>
<p>Isn't that absolutely adorable?!</p>
<p>I've put some sample code over at <a href="https://github.com/4ZM/elf-shenanigans">github.com/4ZM/elf-shenanigans</a> to reproduce the examples in this article.</p>
<p>If you want to learn more about linker scripts (and why wouldn't you?!) this is an outstanding technical documentation: "<a href="https://users.informatik.haw-hamburg.de/~krabat/FH-Labor/gnupro/5_GNUPro_Utilities/c_Using_LD/ldLinker_scripts.html">c_Using_LD</a>".</p>
<p>If you want to explore more ridiculous things to do with section names, check out my other article: "<a href="https://4zm.org/2024/12/25/elf-shenanigans.html">ELF Shenanigans</a>".</p>
<pre><p>•  •  •</p></pre>







  
  



  


  



      
    </article>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: A singing synthesizer for the browser with automatic 3-part harmony (155 pts)]]></title>
            <link>https://pbat.ch/recurse/demos/trio/</link>
            <guid>42513276</guid>
            <pubDate>Thu, 26 Dec 2024 05:14:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pbat.ch/recurse/demos/trio/">https://pbat.ch/recurse/demos/trio/</a>, See on <a href="https://news.ycombinator.com/item?id=42513276">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Differential Growth Addon for Blender (230 pts)]]></title>
            <link>https://boris.okunskiy.name/posts/blender-differential-growth</link>
            <guid>42513157</guid>
            <pubDate>Thu, 26 Dec 2024 04:41:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://boris.okunskiy.name/posts/blender-differential-growth">https://boris.okunskiy.name/posts/blender-differential-growth</a>, See on <a href="https://news.ycombinator.com/item?id=42513157">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><a href="https://github.com/inca/blender-differential-growth/releases/latest">Latest Release</a> · <a href="https://www.youtube.com/watch?v=Q-nu3SOcvOg">Tutorial Video</a></p>
<p>There’s something inexplicably fascinating about the shapes and patterns occurring in nature.</p>
<figure>
    <picture>
        <source srcset="https://boris.okunskiy.name/media/posts/lichen1-transparent.webp" type="image/webp">
        <source srcset="https://boris.okunskiy.name/media/posts/lichen1-transparent.png" type="image/png">
        <img src="https://boris.okunskiy.name/media/posts/lichen1-transparent.png" width="640" alt="Foliose lichen mesh">
    </picture>
    <figcaption>
        <a href="https://en.wikipedia.org/wiki/Xanthoria_parietina" target="_blank">Xanthoria foliose lichen</a>
        mesh, procedurally generated.
    </figcaption>
</figure>
<p>People have always been attracted to organic forms, as is evidenced by an endless number of various design elements found in human craft and art since prehistoric times; the “Mother Nature” has always been a source of inspiration and symbolism for people throughout the globe. The desire to contemplate and reflect upon the organic processes seems to be an inherent part of human nature.</p>
<p>In search for beauty people have come up with a large number of tools and ways to produce organic patterns.</p>
<p>Today I’m proud to introduce my humble contribution to the generative art ecosystem — <a href="https://github.com/inca/blender-differential-growth">Differential Growth Addon</a> for <a href="https://www.blender.org/">Blender</a>. Fully in-line with Blender Manifesto, it’s open source, completely free to use and built with tons of love.</p>
<p>A few examples follow.</p>
<figure>
    <video controls="" autoplay="" loop="">
        <source src="https://boris.okunskiy.name/media/posts/dg-lettuce.mp4" type="video/mp4">
    </video>
    <figcaption>
    Lettuce-like form produced from a unit circle with standard settings and gradually reducing Split Radius, resulting in finer detalization towards the end of simulation.
    </figcaption>
</figure>
<figure>
    <video controls="" autoplay="" loop="">
        <source src="https://boris.okunskiy.name/media/posts/dg-lichen.mp4" type="video/mp4">
    </video>
    <figcaption>
    Lichen-like form produced by inhibiting inner growth and limiting Z movement.
    </figcaption>
</figure>
<figure>
    <video controls="" autoplay="" loop="">
        <source src="https://boris.okunskiy.name/media/posts/dg-algae.mp4" type="video/mp4">
    </video>
    <figcaption>
    Algae-like form produced by adding growth along Z+ and inhibiting inner growth.
    </figcaption>
</figure>
<p>If you like what you see, please feel free to grab the latest <a href="https://github.com/inca/blender-differential-growth/releases/latest">release</a> from GitHub. The star 🌟 is also a great way to show your appreciation.</p>
<p>Also please consider joining <a href="https://github.com/inca/blender-differential-growth/discussions">discussions</a> where you can ask questions, help fellow artists, share the amazing things you create — or just say hi.</p>
<p>Most importantly, have fun!</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Minecraft server written in COBOL (238 pts)]]></title>
            <link>https://github.com/meyfa/CobolCraft</link>
            <guid>42513022</guid>
            <pubDate>Thu, 26 Dec 2024 03:59:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/meyfa/CobolCraft">https://github.com/meyfa/CobolCraft</a>, See on <a href="https://news.ycombinator.com/item?id=42513022">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">CobolCraft</h2><a id="user-content-cobolcraft" aria-label="Permalink: CobolCraft" href="#cobolcraft"></a></p>
<p dir="auto"><a href="https://github.com/meyfa/CobolCraft/actions/workflows/build.yml"><img src="https://github.com/meyfa/CobolCraft/actions/workflows/build.yml/badge.svg" alt="Build"></a>
<a href="https://github.com/meyfa/CobolCraft/actions/workflows/test.yml"><img src="https://github.com/meyfa/CobolCraft/actions/workflows/test.yml/badge.svg" alt="Test"></a></p>
<p dir="auto">A Minecraft server written in COBOL. It supports Minecraft 1.21.4 (the latest version at time of writing).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto">The following features are already working:</p>
<ul>
<li> infinite terrain generation and dynamic chunk loading</li>
<li> persisting world and player data to disk</li>
<li> support for Minecraft's file formats (import existing worlds)</li>
<li> multiplayer (up to 10 concurrent players)</li>
<li> ping/server status (i.e., show as online in the server list)</li>
<li> breaking and placing blocks</li>
<li> block interaction (right-clicking, e.g., to open doors)</li>
<li> player inventory (limited to creative mode)</li>
<li> chat</li>
<li> commands (in-game and via an interactive console)</li>
<li> configuration via server.properties</li>
<li> whitelist (persistent; stored in whitelist.json)</li>
</ul>
<p dir="auto">Note that blocks with multiple states, orientations, or interactive blocks require large amounts of specialized code
to make them behave properly, which is way beyond the scope of this project.
Some are supported, however:</p>
<ul dir="auto">
<li>torches (all variants)</li>
<li>slabs (all variants)</li>
<li>stairs (non-connecting)</li>
<li>rotated pillars, such as logs or basalt</li>
<li>buttons (non-interactive)</li>
<li>doors (including interaction)</li>
<li>trapdoors (including interaction)</li>
<li>beds</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">How-to</h2><a id="user-content-how-to" aria-label="Permalink: How-to" href="#how-to"></a></p>
<p dir="auto">CobolCraft was developed using GnuCOBOL and is meant to be run on Linux.
Support for other operating systems such as Windows has not been tested.
However, it is possible to use Docker for a platform-independent deployment.</p>
<p dir="auto">To deploy on Linux, make sure all prerequisites are installed:</p>
<ul dir="auto">
<li><code>cobc</code> (e.g., from the <code>gnucobol</code> APT package on Debian)</li>
<li><code>make</code></li>
<li><code>g++</code></li>
<li><code>zlib</code> (e.g. <code>zlib1g-dev</code> on Debian)</li>
<li><code>curl</code> (needed to download the official server .jar)</li>
<li>a recent version of Java (needed to extract data from the server .jar)</li>
</ul>
<p dir="auto">Then execute <code>make</code> to build, followed by <code>make run</code> to start a server on port 25565.</p>
<p dir="auto">Or, using Docker:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker build -t cobolcraft .
docker run --rm --interactive --tty \
     --publish 25565:25565 \
     --volume server.properties:/server.properties \
     --volume whitelist.json:/whitelist.json \
     --volume save:/save \
    cobolcraft"><pre>docker build -t cobolcraft <span>.</span>
docker run --rm --interactive --tty \
     --publish 25565:25565 \
     --volume server.properties:/server.properties \
     --volume whitelist.json:/whitelist.json \
     --volume save:/save \
    cobolcraft</pre></div>
<p dir="auto">To configure the server, edit the <code>server.properties</code> file.
This file is generated automatically on first run with default values for all supported options:</p>
<ul dir="auto">
<li><code>server-port</code> (default: 25565)</li>
<li><code>white-list</code> (default: false)</li>
<li><code>motd</code> (default: "CobolCraft")</li>
</ul>
<p dir="auto">Note: By default, the server is only accessible via localhost (i.e., only on your own system via <code>localhost:25565</code>).
To make it accessible from the outside (your local network, via VPN, port forwarding, on a rented server, ...), you
can start the Docker container like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run --rm -it -p 0.0.0.0:25565:25565 cobolcraft"><pre>docker run --rm -it -p 0.0.0.0:25565:25565 cobolcraft</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Why?</h2><a id="user-content-why" aria-label="Permalink: Why?" href="#why"></a></p>
<p dir="auto">Well, there are quite a lot of rumors and stigma surrounding COBOL.
This intrigued me to find out more about this language, which is best done with some sort of project, in my opinion.
You heard right - I had no prior COBOL experience going into this.</p>
<p dir="auto">Writing a Minecraft server was perhaps not the best idea for a first COBOL project, since COBOL is intended for
business applications, not low-level data manipulation (bits and bytes) which the Minecraft protocol needs lots of.
However, quitting before having a working prototype was not on the table! A lot of this functionality had to be
implemented completely from scratch, but with some clever programming, data encoding and decoding is not just fully
working, but also quite performant.</p>
<p dir="auto">If you too have never written COBOL before but are interested in CobolCraft, I recommend reading the GnuCOBOL
Programmer's Guide:
<a href="https://gnucobol.sourceforge.io/HTML/gnucobpg.html" rel="nofollow">https://gnucobol.sourceforge.io/HTML/gnucobpg.html</a></p>
<p dir="auto">To learn more about the Minecraft protocol, you can refer to <a href="https://wiki.vg/Protocol" rel="nofollow">https://wiki.vg/Protocol</a>.
In some cases, it may be helpful to look at real server traffic to better understand the flow of information.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Program Overview</h2><a id="user-content-program-overview" aria-label="Permalink: Program Overview" href="#program-overview"></a></p>
<p dir="auto">This section provides a high-level overview of CobolCraft from a software design viewpoint.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Source Components</h3><a id="user-content-source-components" aria-label="Permalink: Source Components" href="#source-components"></a></p>
<p dir="auto">The program entrypoint is <code>main.cob</code>.
The remaining COBOL sources are located in the <code>src/</code> directory, including <code>src/server.cob</code>, which contains the bulk
of CobolCraft.</p>
<p dir="auto">These sources are located in the <code>cpp/</code> directory and get compiled into a shared library (<code>.so</code> on Linux).</p>
<p dir="auto">TCP sockets are managed by the CBL_GC_SOCKET socket library located in the <code>CBL_GC_SOCKET/</code> directory.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Packet Blobs</h3><a id="user-content-packet-blobs" aria-label="Permalink: Packet Blobs" href="#packet-blobs"></a></p>
<p dir="auto">CobolCraft makes use of network data captured from an instance of the official server application via Wireshark.
This data is located in the <code>blobs/</code> directory and is decoded at run-time.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Data Extraction</h3><a id="user-content-data-extraction" aria-label="Permalink: Data Extraction" href="#data-extraction"></a></p>
<p dir="auto">The official Minecraft (Java Edition) server and client applications contain large amounts of data such as:</p>
<ul dir="auto">
<li>block and item types</li>
<li>entity types</li>
<li>biomes</li>
</ul>
<p dir="auto">Fortunately, the freely available server .jar offers a command-line interface for extracting this data as JSON.
The CobolCraft <code>Makefile</code> has a target that downloads the .jar and extracts the JSON data from it.
The JSON files are evaluated at runtime using a custom-built generic JSON parser, such that CobolCraft can
inter-operate successfully with the Minecraft client without distributing potentially copyrighted material.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Legal Notices</h2><a id="user-content-legal-notices" aria-label="Permalink: Legal Notices" href="#legal-notices"></a></p>
<p dir="auto">This project (except 3rd-party contents as stated below) is licensed under the MIT License.
See LICENSE for further information.</p>
<p dir="auto">This project includes the 3rd-party CBL_GC_SOCKET shared library, licensed under the LGPL v3.
See CBL_GC_SOCKET/COPYING.lesser for further information.
Note that line 939 of <code>CBL_GC_SOCKET/cob_socket.cpp</code> has been modified (compared to the original distribution of that
library) to fix improper <code>snprintf</code> usage.</p>
<p dir="auto">"Minecraft" is a trademark of Mojang Synergies AB.
CobolCraft is neither affiliated with nor endorsed by Mojang.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Blackcandy: Self hosted music streaming server (583 pts)]]></title>
            <link>https://github.com/blackcandy-org/blackcandy</link>
            <guid>42512896</guid>
            <pubDate>Thu, 26 Dec 2024 03:17:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/blackcandy-org/blackcandy">https://github.com/blackcandy-org/blackcandy</a>, See on <a href="https://news.ycombinator.com/item?id=42512896">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/blackcandy-org/black_candy/master/app/assets/images/logo.svg"><img alt="Black Candy logo" width="200" src="https://raw.githubusercontent.com/blackcandy-org/black_candy/master/app/assets/images/logo.svg"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Black Candy</h2><a id="user-content-black-candy" aria-label="Permalink: Black Candy" href="#black-candy"></a></p>
<p dir="auto"><a href="https://github.com/blackcandy-org/black_candy/actions/workflows/ci.yml"><img src="https://github.com/blackcandy-org/black_candy/actions/workflows/ci.yml/badge.svg" alt="CI"></a>
<a href="https://coveralls.io/github/blackcandy-org/black_candy?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/8ca1d878ecb6847c9042ccf042ef27695f509adff2c9545fdf367f41a8869545/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f626c61636b63616e64792d6f72672f626c61636b63616e64792f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/blackcandy-org/blackcandy/badge.svg?branch=master"></a>
<a href="https://github.com/testdouble/standard"><img src="https://camo.githubusercontent.com/5338a68a0f130dc684279ff3e42e45c9c74006018a1bdeaac76905979b3ccd49/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d7374616e646172642d627269676874677265656e2e737667" alt="Ruby Style Guide" data-canonical-src="https://img.shields.io/badge/code_style-standard-brightgreen.svg"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/35a0f5dee1d6ea31fe1f598aa4be82b94628bd1f322a60ef969788f300794243/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f626c61636b63616e64792f626c61636b63616e6479"><img src="https://camo.githubusercontent.com/35a0f5dee1d6ea31fe1f598aa4be82b94628bd1f322a60ef969788f300794243/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f626c61636b63616e64792f626c61636b63616e6479" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/blackcandy/blackcandy"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/blackcandy-org/blackcandy/master/docs/images/screenshot_main.png"><img src="https://raw.githubusercontent.com/blackcandy-org/blackcandy/master/docs/images/screenshot_main.png" alt="Screenshot"></a></p>
<p dir="auto">Black Candy is a self-hosted music streaming server, your personal music center.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Try The Demo</h2><a id="user-content-try-the-demo" aria-label="Permalink: Try The Demo" href="#try-the-demo"></a></p>
<p dir="auto">Please visit <a href="https://demo.blackcandy.org/" rel="nofollow">https://demo.blackcandy.org</a> and use demo user (email: <a href="mailto:admin@admin.com">admin@admin.com</a>, password: foobar) to log in. And feel free to try it.</p>
<div dir="auto"><p dir="auto">Note</p><p dir="auto">This demo user does not have administrator privileges. So you cannot experience all the features in Black Candy. And all music in the demo are from <a href="https://freemusicarchive.org/" rel="nofollow">Free Music Archive</a>. You can check their <a href="https://github.com/blackcandy-org/blackcandy/blob/master/docs/demo_music_licenses.md">licenses</a>.</p>
</div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">Black Candy uses docker image to install easily. You can run Black Candy like this.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -p 3000:3000 ghcr.io/blackcandy-org/blackcandy:latest 

# Or pull from Docker Hub.
docker run -p 3000:3000 blackcandy/blackcandy:latest "><pre>docker run -p 3000:3000 ghcr.io/blackcandy-org/blackcandy:latest 

<span><span>#</span> Or pull from Docker Hub.</span>
docker run -p 3000:3000 blackcandy/blackcandy:latest </pre></div>
<p dir="auto">That's all. Now, you can access either <a href="http://localhost:3000/" rel="nofollow">http://localhost:3000</a> or <a href="http://host-ip:3000/" rel="nofollow">http://host-ip:3000</a> in a browser, and use initial admin user to log in (email: <a href="mailto:admin@admin.com">admin@admin.com</a>, password: foobar).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Upgrade</h2><a id="user-content-upgrade" aria-label="Permalink: Upgrade" href="#upgrade"></a></p>
<div dir="auto"><p dir="auto">Important</p><p dir="auto">If you upgrade to a major version, you need to read the upgrade guide carefully before upgrade. Because there are some breaking changes in a major version.</p>
<ul dir="auto">
<li>See <a href="https://github.com/blackcandy-org/blackcandy/blob/master/docs/v3_upgrade.md">V3 Upgrade</a> for upgrade from V2 release.</li>
<li>See <a href="https://github.com/blackcandy-org/blackcandy/blob/master/docs/edge_upgrade.md">Edge Upgrade</a> for upgrade from edge release to latest stable release.</li>
</ul>
</div>
<p dir="auto">Upgrade Black Candy is pull new image from remote. Then remove an old container and create a new one.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker pull ghcr.io/blackcandy-org/blackcandy:latest
docker stop <your_blackcandy_container>
docker rm <your_blackcandy_container>
docker run <OPTIONS> ghcr.io/blackcandy-org/blackcandy:latest "><pre>docker pull ghcr.io/blackcandy-org/blackcandy:latest
docker stop <span>&lt;</span>your_blackcandy_container<span>&gt;</span>
docker rm <span>&lt;</span>your_blackcandy_container<span>&gt;</span>
docker run <span>&lt;</span>OPTIONS<span>&gt;</span> ghcr.io/blackcandy-org/blackcandy:latest </pre></div>
<p dir="auto">With docker compose, you can upgrade Black Candy like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker pull ghcr.io/blackcandy-org/blackcandy:latest
docker-compose down
docker-compose up"><pre>docker pull ghcr.io/blackcandy-org/blackcandy:latest
docker-compose down
docker-compose up</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Mobile Apps</h2><a id="user-content-mobile-apps" aria-label="Permalink: Mobile Apps" href="#mobile-apps"></a></p>
<p dir="auto">Black Candy mobile apps are available in the following app stores:</p>
<p dir="auto"><a href="https://apps.apple.com/app/blackcandy/id6444304071" rel="nofollow"><img src="https://raw.githubusercontent.com/blackcandy-org/ios/master/images/appstore_badge.png" alt="Get it on App Store" height="50"></a>
<a href="https://f-droid.org/packages/org.blackcandy.android/" rel="nofollow"><img src="https://raw.githubusercontent.com/blackcandy-org/android/master/images/fdroid_badge.png" alt="Get it on F-Droid" height="50"></a></p>
<p dir="auto">For Android app, you can also download APK from <a href="https://github.com/blackcandy-org/android/releases/latest">GitHub Release</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Configuration</h2><a id="user-content-configuration" aria-label="Permalink: Configuration" href="#configuration"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Port Mapping</h3><a id="user-content-port-mapping" aria-label="Permalink: Port Mapping" href="#port-mapping"></a></p>
<p dir="auto">Black Candy exports the 3000 port. If you want to be able to access it from the host, you can use the <code>-p</code> option to map the port.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -p 3000:3000 ghcr.io/blackcandy-org/blackcandy:latest"><pre>docker run -p 3000:3000 ghcr.io/blackcandy-org/blackcandy:latest</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Media Files Mounts</h3><a id="user-content-media-files-mounts" aria-label="Permalink: Media Files Mounts" href="#media-files-mounts"></a></p>
<p dir="auto">You can mount media files from host to container and use <code>MEDIA_PATH</code> environment variable to set the media path for black candy.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -v /media_data:/media_data -e MEDIA_PATH=/media_data ghcr.io/blackcandy-org/blackcandy:latest   "><pre>docker run -v /media_data:/media_data -e MEDIA_PATH=/media_data ghcr.io/blackcandy-org/blackcandy:latest   </pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Use PostgreSQL As Database</h3><a id="user-content-use-postgresql-as-database" aria-label="Permalink: Use PostgreSQL As Database" href="#use-postgresql-as-database"></a></p>
<p dir="auto">Black Candy use SQLite as database by default. Because SQLite can simplify the process of installation, and it's an ideal choice for self-hosted small server. If you think SQLite is not enough, or you are using some cloud service like heroku to host Black Candy, you can also use PostgreSQL as database.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -e DB_ADAPTER=postgresql -e DB_URL=postgresql://yourdatabaseurl ghcr.io/blackcandy-org/blackcandy:latest "><pre>docker run -e DB_ADAPTER=postgresql -e DB_URL=postgresql://yourdatabaseurl ghcr.io/blackcandy-org/blackcandy:latest </pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">How to Persist Data</h3><a id="user-content-how-to-persist-data" aria-label="Permalink: How to Persist Data" href="#how-to-persist-data"></a></p>
<p dir="auto">All the data that need to persist in Black Candy are stored in <code>/app/storage</code>, So you can mount this directory to host to persist data.</p>
<div dir="auto" data-snippet-clipboard-copy-content="mkdir storage_data

docker run -v ./storage_data:/app/storage ghcr.io/blackcandy-org/blackcandy:latest "><pre>mkdir storage_data

docker run -v ./storage_data:/app/storage ghcr.io/blackcandy-org/blackcandy:latest </pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Nginx To Send File</h3><a id="user-content-nginx-to-send-file" aria-label="Permalink: Nginx To Send File" href="#nginx-to-send-file"></a></p>
<p dir="auto">Black Candy supports use Nginx to delivery audio file to the client. It's a more effective way than handled by Black Candy backend. And Black Candy docker image is also ready for <a href="https://github.com/nginx-proxy/nginx-proxy">nginx-proxy</a>, which means you can set up a Nginx proxy for Black Candy easily.</p>
<p dir="auto">You can use docker-compose to set up those services. The docker-compose.yml file looks like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="version: '3'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - &quot;80:80&quot;
    volumes:
      - ./blackcandy.local:/etc/nginx/vhost.d/blackcandy.local:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /media_data:/media_data # Keep the path of media files in container the same as blackcandy container.

  app:
    image: ghcr.io/blackcandy-org/blackcandy:latest 
    volumes:
      - ./storage_data:/app/storage
      - /media_data:/media_data
    environment:
      VIRTUAL_HOST: blackcandy.local
      MEDIA_PATH: /media_data
      NGINX_SENDFILE: &quot;true&quot; # Don't forget to set `NGINX_SENDFILE` environment variable to true to enable nginx sendfile."><pre><span>version</span>: <span><span>'</span>3<span>'</span></span>

<span>services</span>:
  <span>nginx-proxy</span>:
    <span>image</span>: <span>nginxproxy/nginx-proxy</span>
    <span>ports</span>:
      - <span><span>"</span>80:80<span>"</span></span>
    <span>volumes</span>:
      - <span>./blackcandy.local:/etc/nginx/vhost.d/blackcandy.local:ro</span>
      - <span>/var/run/docker.sock:/tmp/docker.sock:ro</span>
      - <span>/media_data:/media_data </span><span><span>#</span> Keep the path of media files in container the same as blackcandy container.</span>

  <span>app</span>:
    <span>image</span>: <span>ghcr.io/blackcandy-org/blackcandy:latest </span>
    <span>volumes</span>:
      - <span>./storage_data:/app/storage</span>
      - <span>/media_data:/media_data</span>
    <span>environment</span>:
      <span>VIRTUAL_HOST</span>: <span>blackcandy.local</span>
      <span>MEDIA_PATH</span>: <span>/media_data</span>
      <span>NGINX_SENDFILE</span>: <span><span>"</span>true<span>"</span></span> <span><span>#</span> Don't forget to set `NGINX_SENDFILE` environment variable to true to enable nginx sendfile.</span></pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="# Get the default sendfile config for blackcandy. This file need to mount to nginx proxy container to add custom configuration for nginx.
curl https://raw.githubusercontent.com/blackcandy-org/blackcandy/v3.0.0/config/nginx/sendfile.conf > blackcandy.local

docker-compose up"><pre><span><span>#</span> Get the default sendfile config for blackcandy. This file need to mount to nginx proxy container to add custom configuration for nginx.</span>
curl https://raw.githubusercontent.com/blackcandy-org/blackcandy/v3.0.0/config/nginx/sendfile.conf <span>&gt;</span> blackcandy.local

docker-compose up</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Logging</h3><a id="user-content-logging" aria-label="Permalink: Logging" href="#logging"></a></p>
<p dir="auto">Black Candy logs to <code>STDOUT</code> by default. So if you want to control the log, Docker already supports a lot of options to handle the log in the container. See: <a href="https://docs.docker.com/config/containers/logging/configure/" rel="nofollow">https://docs.docker.com/config/containers/logging/configure/</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Environment Variables</h2><a id="user-content-environment-variables" aria-label="Permalink: Environment Variables" href="#environment-variables"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Name</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>DB_URL</td>
<td></td>
<td>The URL of PostgreSQL database. You must set this environment variable if you use PostgreSQL as database.</td>
</tr>
<tr>
<td>MEDIA_PATH</td>
<td></td>
<td>You can use this environment variable to set media path for Black Candy, otherwise you can set media path in settings page.</td>
</tr>
<tr>
<td>DB_ADAPTER</td>
<td>"sqlite"</td>
<td>There are two adapters are supported, "sqlite" and "postgresql".</td>
</tr>
<tr>
<td>NGINX_SENDFILE</td>
<td>false</td>
<td>Whether enable Nginx sendfile.</td>
</tr>
<tr>
<td>SECRET_KEY_BASE</td>
<td></td>
<td>When the SECRET_KEY_BASE environment variable is not set, Black candy will generate SECRET_KEY_BASE environment variable every time when service start up. This will cause old sessions invalid, You can set your own SECRET_KEY_BASE environment variable on docker service to avoid it.</td>
</tr>
<tr>
<td>FORCE_SSL</td>
<td>false</td>
<td>Force all access to the app over SSL.</td>
</tr>
<tr>
<td>DEMO_MODE</td>
<td>false</td>
<td>Whether to enable demo mode, when demo mode is on, all users cannot access administrator privileges, even user is admin. And also users cannot change their profile.</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Edge Version</h2><a id="user-content-edge-version" aria-label="Permalink: Edge Version" href="#edge-version"></a></p>
<p dir="auto">The edge version of Black Candy base on master branch, which means it's not stable, you may encounter data loss or other issues. However, I don't recommend normal user using an edge version. But if you are a developer who wants to test or contribute to Black Candy, you can use the edge version.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker pull ghcr.io/blackcandy-org/blackcandy:edge"><pre>docker pull ghcr.io/blackcandy-org/blackcandy:edge</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development</h2><a id="user-content-development" aria-label="Permalink: Development" href="#development"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Requirements</h3><a id="user-content-requirements" aria-label="Permalink: Requirements" href="#requirements"></a></p>
<ul dir="auto">
<li>Ruby 3.3</li>
<li>Node.js 20</li>
<li>libvips</li>
<li>FFmpeg</li>
</ul>
<p dir="auto">Make sure you have installed all those dependencies.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Install gem dependencies</h3><a id="user-content-install-gem-dependencies" aria-label="Permalink: Install gem dependencies" href="#install-gem-dependencies"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Install JavaScript dependencies</h3><a id="user-content-install-javascript-dependencies" aria-label="Permalink: Install JavaScript dependencies" href="#install-javascript-dependencies"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Database Configuration</h3><a id="user-content-database-configuration" aria-label="Permalink: Database Configuration" href="#database-configuration"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="rails db:prepare
rails db:seed"><pre>rails db:prepare
rails db:seed</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Start all services</h3><a id="user-content-start-all-services" aria-label="Permalink: Start all services" href="#start-all-services"></a></p>
<p dir="auto">After you’ve set up everything, now you can run <code>./bin/dev</code> to start all services you need to develop.
Then visit <a href="http://localhost:3000/" rel="nofollow">http://localhost:3000</a> use initial admin user to log in (email: <a href="mailto:admin@admin.com">admin@admin.com</a>, password: foobar).</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Running tests</h3><a id="user-content-running-tests" aria-label="Permalink: Running tests" href="#running-tests"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Running all test
$ rails test:all 

# Running lint
$ rails lint:all"><pre><span><span>#</span> Running all test</span>
$ rails test:all 

<span><span>#</span> Running lint</span>
$ rails lint:all</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Integrations</h2><a id="user-content-integrations" aria-label="Permalink: Integrations" href="#integrations"></a></p>
<p dir="auto">Black Candy support get artist and album image from Discogs API. You can create an API token from Discogs and set Discogs token on Setting page to enable it.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Sponsorship</h2><a id="user-content-sponsorship" aria-label="Permalink: Sponsorship" href="#sponsorship"></a></p>
<p dir="auto">This project is supported by:</p>
<p dir="auto"><a href="https://www.digitalocean.com/" rel="nofollow"><img src="https://camo.githubusercontent.com/6fbfffc4bceb6b40e0f244330c13a2671e243a7c9e849033e20869b6445910a5/68747470733a2f2f6f70656e736f757263652e6e7963332e63646e2e6469676974616c6f6365616e7370616365732e636f6d2f6174747269627574696f6e2f6173736574732f5356472f444f5f4c6f676f5f686f72697a6f6e74616c5f626c75652e737667" width="200px" data-canonical-src="https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg"></a>
<a href="https://www.jetbrains.com/community/opensource" rel="nofollow"><img src="https://camo.githubusercontent.com/61be5a726132ae9b0cd6c732c6b20acf80fde151b7530c9b798a7517c6d2f6dd/68747470733a2f2f7265736f75726365732e6a6574627261696e732e636f6d2f73746f726167652f70726f64756374732f636f6d70616e792f6272616e642f6c6f676f732f6a625f7371756172652e737667" data-canonical-src="https://resources.jetbrains.com/storage/products/company/brand/logos/jb_square.svg"></a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bird flu kills more than half the big cats at a Washington sanctuary (161 pts)]]></title>
            <link>https://www.cnn.com/2024/12/25/us/bird-flu-washington-cats-cases/index.html</link>
            <guid>42512772</guid>
            <pubDate>Thu, 26 Dec 2024 02:39:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnn.com/2024/12/25/us/bird-flu-washington-cats-cases/index.html">https://www.cnn.com/2024/12/25/us/bird-flu-washington-cats-cases/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=42512772">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/cm547x82h000y3b6mgeh5hfsd@published" data-name="still_21224701_23728.426_still.jpg" data-component-name="image" data-observe-resizes="" data-original-ratio="0.5625" data-original-height="1080" data-original-width="1920" data-url="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=original" data-editable="lede" data-freewheel-lede="true">
       <picture><source height="383" width="680" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=16x9&amp;q=h_383,w_680,c_fill/f_webp" type="image/webp"><source height="653" width="1160" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=16x9&amp;q=h_653,w_1160,c_fill/f_webp" type="image/webp"><source height="605" width="1075" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=16x9&amp;q=h_605,w_1075,c_fill/f_webp" type="image/webp"><source height="833" width="1480" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=16x9&amp;q=h_833,w_1480,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/still-21224701-23728-426-still.jpg?c=16x9&amp;q=h_833,w_1480,c_fill" alt="Twenty big cats at the Wild Felid Advocacy Center of Washington have died after contracting bird flu." onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="1080" width="1920"></picture>
    </div><div data-editable="content" itemprop="articleBody" data-reorderable="content">
                  <p><cite>
      <span data-editable="location"></span>
      <span data-editable="source">CNN</span>
        &nbsp;—&nbsp;
    </cite>
</p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm548gm4o001a3b6mzpwbwov9@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Bird flu has been on the rise in Washington state and one sanctuary was hit hard: 20 big cats – more than half of the facility’s population – died over the course of weeks.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547w5dd00073b6mxjogyui4@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The Wild Felid Advocacy Center of Washington announced the deaths Friday on <a href="https://www.facebook.com/WildFelidAdvocacyCenter" target="_blank">Facebook</a>. The nonprofit sanctuary is in Shelton, about 22 miles northwest of Olympia.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547u5dy00003b6mbwnsviwy@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            “It’s been one big nightmare. I never thought something like this would happen to us,” the center’s director and cofounder Mark Mathews told CNN affiliate <a href="https://komonews.com/news/local/avian-influenza-bird-flu-wild-felid-advocacy-center-mark-matthews-co-founder-december-washington-department-fish-and-wildlife-cougar-bird-droppings" target="_blank">KOMO</a>. “Maybe only in a facility that had cats near each other, and ours are spread out over five acres.”
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wd2s000d3b6mj9zguppc@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            It is currently unknown exactly how the big cats contracted bird flu, but Mathews said the first death occurred around Thanksgiving.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm548hmc9001c3b6mgfvvv9q4@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The 20 animals that died include: five African Servals, four bobcats, four cougars, two Canada Lynxes, one Amur-Bengal tiger mix and other species of big cats.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wcif000b3b6mxh7stxpx@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            “Tabbi, she was my favorite tiger,” Mathews told KOMO. “Before Thanksgiving, we had 37 cats. Today, we have 17 cats, (including) four recovering.”
    </p>

  


    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wjpu000g3b6mi5tsq9jm@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The sanctuary is under quarantine and closed to the public to prevent further spread of the bird flu, it said in a statement. The center said it is working with federal and state animal health officials, disinfecting each enclosure and working with veterinarians on “prevention strategies while they oversee treatment to protect animal welfare.”
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000l3b6m4oczeysb@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The sanctuary hopes to reopen in the new year, according to the center’s <a href="https://www.wildfelids.org/index.html" target="_blank">website</a>.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000m3b6m110w3q1r@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            While it is unknown how the big cats contracted the bird flu, the sanctuary said it “spreads primarily through respiratory secretions and bird-to-bird contact and can also be contracted by carnivorous mammals that ingest birds or other products,” the center <a href="https://www.facebook.com/WildFelidAdvocacyCenter" target="_blank">said in its statement</a>.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000o3b6m45mkxmz3@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Cats are particularly vulnerable to bird flu, which can cause subtle initial symptoms that may “progress rapidly, often resulting in death within 24 hours due to pneumonia-like conditions,” the center said. Symptoms include low energy, swelling of body parts, lack of coordination and diarrhea in pet birds, while cats and dogs may experience a fever, lethargy and low appetite, among other symptoms, according to the <a href="https://www.avma.org/resources-tools/animal-health-and-welfare/animal-health/avian-influenza/avian-influenza-companion-animals" target="_blank">American Veterinary Medical Association</a>.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm5481kvh00003b6m0zvbyps4@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            “Usually, when a vet comes out and they do immobilization, they start to feel better, and with Harley (the cougar), it was different because he made it pretty obvious he wasn’t feeling better after his treatment,” sanctuary employee Jolie Connolly-Poe told KOMO.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000q3b6mew5iuq4r@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The Washington Department of Fish and Wildlife <a href="https://wdfw.medium.com/avian-influenza-cases-increase-in-washington-a5cb8600ab0d" target="_blank">reported earlier this month</a> bird flu cases have been on the uptick across the state. It also confirmed two cougars contracted bird flu in another part of the state.
    </p>

  


    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000r3b6marffzvwi@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            “(I’m) feeling devastated, kind of in shock. It just feels terrible that you take such good care of them, and then something unforeseen takes its toll real fast,” Connolly-Poe said. The center is “just taking good care of those recovering.”
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000s3b6m4qc0is9i@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            In the 20 years since the sanctuary opened, Mathews told KOMO there hasn’t been an instance like this before. The center is taking additional precautions to avoid a further spread of bird flu as they prepare to disinfect everything.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000t3b6m0d4rod2c@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The <a href="https://www.cdc.gov/bird-flu/virus-transmission/avian-in-other-animals.html" target="_blank">US Centers for Disease Control and Prevention</a> said it’s “rare for people to be infected with bird flu viruses through contact with infected wild, stray, feral, or domestic mammals” but it is possible if there is “prolonged and unprotected exposure” to the sick animal.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm547wt73000u3b6mbtutn7g6@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            There have been two instances of bird flu being passed to a human from mammals, according to the CDC: one in 2016 involving a cat and the other in 2024 involving a cow.
    </p>

              </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Siyuan: Privacy-first, self-hosted personal knowledge management software (234 pts)]]></title>
            <link>https://github.com/siyuan-note/siyuan</link>
            <guid>42512713</guid>
            <pubDate>Thu, 26 Dec 2024 02:26:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/siyuan-note/siyuan">https://github.com/siyuan-note/siyuan</a>, See on <a href="https://news.ycombinator.com/item?id=42512713">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text">
<p dir="auto">
<a href="https://github.com/siyuan-note/siyuan/blob/master/README_zh_CN.md">中文</a> | <a href="https://github.com/siyuan-note/siyuan/blob/master/README_ja_JP.md">日本語</a>
</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Table of Contents</h2><a id="user-content-table-of-contents" aria-label="Permalink: Table of Contents" href="#table-of-contents"></a></p>
<ul dir="auto">
<li><a href="#-introduction">💡 Introduction</a></li>
<li><a href="#-features">🔮 Features</a></li>
<li><a href="#-architecture-and-ecosystem">🏗️ Architecture and Ecosystem</a></li>
<li><a href="#-star-history">🌟 Star History</a></li>
<li><a href="#%EF%B8%8F-roadmap">🗺️ Roadmap</a></li>
<li><a href="#-download-setup">🚀 Download Setup</a>
<ul dir="auto">
<li><a href="#app-market">App Market</a></li>
<li><a href="#installation-package">Installation Package</a></li>
<li><a href="#docker-hosting">Docker Hosting</a></li>
<li><a href="#unraid-hosting">Unraid Hosting</a></li>
<li><a href="#insider-preview">Insider Preview</a></li>
</ul>
</li>
<li><a href="#%EF%B8%8F-community">🏘️ Community</a></li>
<li><a href="#%EF%B8%8F-development-guide">🛠️ Development Guide</a></li>
<li><a href="#-faq">❓ FAQ</a>
<ul dir="auto">
<li><a href="#how-does-siyuan-store-data">How does SiYuan store data?</a></li>
<li><a href="#does-it-support-data-synchronization-through-a-third-party-sync-disk">Does it support data synchronization through a third-party sync disk?</a></li>
<li><a href="#is-siyuan-open-source">Is SiYuan open source?</a></li>
<li><a href="#how-to-upgrade-to-a-new-version">How to upgrade to a new version?</a></li>
<li><a href="#what-if-some-blocks-such-as-paragraph-blocks-in-list-items-cannot-find-the-block-icon">What if some blocks (such as paragraph blocks in list items) cannot find the block icon?</a></li>
<li><a href="#what-should-i-do-if-the-data-repo-key-is-lost">What should I do if the data repo key is lost?</a></li>
<li><a href="#do-i-need-to-pay-for-it">Do I need to pay for it?</a></li>
</ul>
</li>
<li><a href="#-acknowledgement">🙏 Acknowledgement</a>
<ul dir="auto">
<li><a href="#contributors">Contributors</a></li>
</ul>
</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">💡 Introduction</h2><a id="user-content--introduction" aria-label="Permalink: 💡 Introduction" href="#-introduction"></a></p>
<p dir="auto">SiYuan is a privacy-first personal knowledge management system, support fine-grained block-level reference and Markdown
WYSIWYG.</p>
<p dir="auto">Welcome to <a href="https://liuyun.io/" rel="nofollow">SiYuan English Discussion Forum</a> to learn more.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/25962b05bb71cf84f8bc0a05549b652e4c39a7d0f1c10e2a7de8204373066a11/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032342f30312f66656174757265302d316f7242526c492e706e67"><img src="https://camo.githubusercontent.com/25962b05bb71cf84f8bc0a05549b652e4c39a7d0f1c10e2a7de8204373066a11/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032342f30312f66656174757265302d316f7242526c492e706e67" alt="feature0.png" data-canonical-src="https://b3logfile.com/file/2024/01/feature0-1orBRlI.png"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/76b1284aaab42bf1e1f44a6f97fde5e415bb6e51832d8cfa23192502d459d633/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032342f30322f66656174757265352d312d7559596a4171792e706e67"><img src="https://camo.githubusercontent.com/76b1284aaab42bf1e1f44a6f97fde5e415bb6e51832d8cfa23192502d459d633/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032342f30322f66656174757265352d312d7559596a4171792e706e67" alt="feature51.png" data-canonical-src="https://b3logfile.com/file/2024/02/feature5-1-uYYjAqy.png"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔮 Features</h2><a id="user-content--features" aria-label="Permalink: 🔮 Features" href="#-features"></a></p>
<p dir="auto">Most features are free, even for commercial use.</p>
<ul dir="auto">
<li>Content block
<ul dir="auto">
<li>Block-level reference and two-way links</li>
<li>Custom attributes</li>
<li>SQL query embed</li>
<li>Protocol <code>siyuan://</code></li>
</ul>
</li>
<li>Editor
<ul dir="auto">
<li>Block-style</li>
<li>Markdown WYSIWYG</li>
<li>List outline</li>
<li>Block zoom-in</li>
<li>Million-word large document editing</li>
<li>Mathematical formulas, charts, flowcharts, Gantt charts, timing charts, staffs, etc.</li>
<li>Web clipping</li>
<li>PDF Annotation link</li>
</ul>
</li>
<li>Export
<ul dir="auto">
<li>Block ref and embed</li>
<li>Standard Markdown with assets</li>
<li>PDF, Word and HTML</li>
<li>Copy to WeChat MP, Zhihu and Yuque</li>
</ul>
</li>
<li>Database
<ul dir="auto">
<li>Table view</li>
</ul>
</li>
<li>Flashcard spaced repetition</li>
<li>AI writing and Q/A chat via OpenAI API</li>
<li>Tesseract OCR</li>
<li>Multi-tab, drag and drop to split screen</li>
<li>Template snippet</li>
<li>JavaScript/CSS snippet</li>
<li>Android/iOS/HarmonyOS App</li>
<li>Docker deployment</li>
<li><a href="https://github.com/siyuan-note/siyuan/blob/master/API.md">API</a></li>
<li>Community marketplace</li>
</ul>
<p dir="auto">Some features are only available to paid members, for more details please refer to <a href="https://b3log.org/siyuan/en/pricing.html" rel="nofollow">Pricing</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🏗️ Architecture and Ecosystem</h2><a id="user-content-️-architecture-and-ecosystem" aria-label="Permalink: 🏗️ Architecture and Ecosystem" href="#️-architecture-and-ecosystem"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/dc452f94331daee42f37747cec0027711ac2a06ecd20c487c26e71eb11ba76cc/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032332f30352f53695975616e5f417263682d536775387658542e706e67"><img src="https://camo.githubusercontent.com/dc452f94331daee42f37747cec0027711ac2a06ecd20c487c26e71eb11ba76cc/68747470733a2f2f62336c6f6766696c652e636f6d2f66696c652f323032332f30352f53695975616e5f417263682d536775387658542e706e67" alt="SiYuan Arch" title="SiYuan Arch" data-canonical-src="https://b3logfile.com/file/2023/05/SiYuan_Arch-Sgu8vXT.png"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Project</th>
<th>Description</th>
<th>Forks</th>
<th>Stars</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/88250/lute">lute</a></td>
<td>Editor engine</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/f5be27ebc967356b4ad56357489745cd168222c8f14716d915d36301b23925eb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f38383235302f6c757465"><img src="https://camo.githubusercontent.com/f5be27ebc967356b4ad56357489745cd168222c8f14716d915d36301b23925eb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f38383235302f6c757465" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/88250/lute"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/1cea1a3887633e55b429edd402f6f9266476dc31a60cea65ac289a82551a75fd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f38383235302f6c757465"><img src="https://camo.githubusercontent.com/1cea1a3887633e55b429edd402f6f9266476dc31a60cea65ac289a82551a75fd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f38383235302f6c757465" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/88250/lute"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/siyuan-chrome">chrome</a></td>
<td>Chrome/Edge extension</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/594f2c68cf4b2527223aaf931ca57e5ef8064acc68f2a91d39fb38529e7488d3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d6368726f6d65"><img src="https://camo.githubusercontent.com/594f2c68cf4b2527223aaf931ca57e5ef8064acc68f2a91d39fb38529e7488d3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d6368726f6d65" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/siyuan-chrome"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/dff4280191d0968f9f0949a1ca5d4d0ede251a1c0450927442ba624a49ecf3c0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d6368726f6d65"><img src="https://camo.githubusercontent.com/dff4280191d0968f9f0949a1ca5d4d0ede251a1c0450927442ba624a49ecf3c0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d6368726f6d65" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/siyuan-chrome"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/bazaar">bazaar</a></td>
<td>Community marketplace</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/22c5780723e5c3fb239876099668dd931aec5ad8a7c29c2a9cc39815afbff0b9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f62617a616172"><img src="https://camo.githubusercontent.com/22c5780723e5c3fb239876099668dd931aec5ad8a7c29c2a9cc39815afbff0b9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f62617a616172" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/bazaar"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/05a35d5d71e8e0cc61d32b4bee326b890db3809c980a85e69bf6fdbd8bcf07ed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f62617a616172"><img src="https://camo.githubusercontent.com/05a35d5d71e8e0cc61d32b4bee326b890db3809c980a85e69bf6fdbd8bcf07ed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f62617a616172" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/bazaar"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/dejavu">dejavu</a></td>
<td>Data repo</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/6ffd8bb609e1d3d7f19199060f940653686a2cf8c322dbbc36a565d90685a329/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f64656a617675"><img src="https://camo.githubusercontent.com/6ffd8bb609e1d3d7f19199060f940653686a2cf8c322dbbc36a565d90685a329/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f64656a617675" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/dejavu"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ab7ed4246fd7b23a1b86667bc3cac2cbf27019065687b6e62f13e0fc0c392aec/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f64656a617675"><img src="https://camo.githubusercontent.com/ab7ed4246fd7b23a1b86667bc3cac2cbf27019065687b6e62f13e0fc0c392aec/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f64656a617675" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/dejavu"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/petal">petal</a></td>
<td>Plugin API</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/c54906f43194c7eee0717839c89e22911c23ee8141d17dde20ebd5f338965c3e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f706574616c"><img src="https://camo.githubusercontent.com/c54906f43194c7eee0717839c89e22911c23ee8141d17dde20ebd5f338965c3e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f706574616c" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/petal"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/78007eb27f7c3ff7539a4dfd688133f3d1fb5fa652a7932a05ab2e5af4290ca3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f706574616c"><img src="https://camo.githubusercontent.com/78007eb27f7c3ff7539a4dfd688133f3d1fb5fa652a7932a05ab2e5af4290ca3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f706574616c" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/petal"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/siyuan-android">android</a></td>
<td>Android App</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/5cb4ed6a4aa44b70bcb44d842a562896a8bbe42c30c3ed3c404a660df0f24dd1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d616e64726f6964"><img src="https://camo.githubusercontent.com/5cb4ed6a4aa44b70bcb44d842a562896a8bbe42c30c3ed3c404a660df0f24dd1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d616e64726f6964" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/siyuan-android"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/3c3034ef8578773d6e2bd3aba592fb954cedc1c6080a76792701e698004825db/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d616e64726f6964"><img src="https://camo.githubusercontent.com/3c3034ef8578773d6e2bd3aba592fb954cedc1c6080a76792701e698004825db/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d616e64726f6964" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/siyuan-android"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/siyuan-ios">ios</a></td>
<td>iOS App</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/daf7fe21ecf8a4daeb29a4cc4ed4f8ad3c171f1b66c9171abdbfe0d1c178148d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d696f73"><img src="https://camo.githubusercontent.com/daf7fe21ecf8a4daeb29a4cc4ed4f8ad3c171f1b66c9171abdbfe0d1c178148d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d696f73" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/siyuan-ios"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/54a15d0bdcf8d8d63a7f291f618187c3fc78fb27a8583c4caa6b13cbfe7df42d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d696f73"><img src="https://camo.githubusercontent.com/54a15d0bdcf8d8d63a7f291f618187c3fc78fb27a8583c4caa6b13cbfe7df42d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d696f73" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/siyuan-ios"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/siyuan-harmony">harmony</a></td>
<td>HarmonyOS App</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/725e8548d907b38fcea7b2ec1fd9f1a551a57d47b4340e7b5b158964018648d6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d6861726d6f6e79"><img src="https://camo.githubusercontent.com/725e8548d907b38fcea7b2ec1fd9f1a551a57d47b4340e7b5b158964018648d6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f73697975616e2d6861726d6f6e79" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/siyuan-harmony"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/8cc5ce0713e89b1d60078cf2647fa5556a22dab0bb4682eacc9cf9d2ba94c418/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d6861726d6f6e79"><img src="https://camo.githubusercontent.com/8cc5ce0713e89b1d60078cf2647fa5556a22dab0bb4682eacc9cf9d2ba94c418/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f73697975616e2d6861726d6f6e79" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/siyuan-harmony"></a></td>
</tr>
<tr>
<td><a href="https://github.com/siyuan-note/riff">riff</a></td>
<td>Spaced repetition</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ca034cf1bd77aebe364dd74d1270ebc999489f05b5339c73d710ecd2bae954c3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f72696666"><img src="https://camo.githubusercontent.com/ca034cf1bd77aebe364dd74d1270ebc999489f05b5339c73d710ecd2bae954c3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f73697975616e2d6e6f74652f72696666" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/siyuan-note/riff"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/fbc6c499dd662edd655a9a737b3e69782e36203f2a563ddc2eea8a2435fcc456/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f72696666"><img src="https://camo.githubusercontent.com/fbc6c499dd662edd655a9a737b3e69782e36203f2a563ddc2eea8a2435fcc456/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f73697975616e2d6e6f74652f72696666" alt="GitHub Repo stars" data-canonical-src="https://img.shields.io/github/stars/siyuan-note/riff"></a></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">🌟 Star History</h2><a id="user-content--star-history" aria-label="Permalink: 🌟 Star History" href="#-star-history"></a></p>
<a href="https://star-history.com/#siyuan-note/siyuan&amp;Date" rel="nofollow">
 <themed-picture data-catalyst-inline="true"><picture>
   <source media="(prefers-color-scheme: dark)" srcset="https://camo.githubusercontent.com/faee1df33c69dfdb3652b10aef42a3c54a5ec71b35a03c2df3783906e24fa6d2/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d73697975616e2d6e6f74652f73697975616e26747970653d44617465267468656d653d6461726b" data-canonical-src="https://api.star-history.com/svg?repos=siyuan-note/siyuan&amp;type=Date&amp;theme=dark">
   <source media="(prefers-color-scheme: light)" srcset="https://camo.githubusercontent.com/5841ff204a75071a15494eddf62aab809db6c32000ddd21d3ab09c2af6ba0adb/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d73697975616e2d6e6f74652f73697975616e26747970653d44617465" data-canonical-src="https://api.star-history.com/svg?repos=siyuan-note/siyuan&amp;type=Date">
   <img alt="Star History Chart" src="https://camo.githubusercontent.com/5841ff204a75071a15494eddf62aab809db6c32000ddd21d3ab09c2af6ba0adb/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d73697975616e2d6e6f74652f73697975616e26747970653d44617465" data-canonical-src="https://api.star-history.com/svg?repos=siyuan-note/siyuan&amp;type=Date">
 </picture></themed-picture>
</a>
<p dir="auto"><h2 tabindex="-1" dir="auto">🗺️ Roadmap</h2><a id="user-content-️-roadmap" aria-label="Permalink: 🗺️ Roadmap" href="#️-roadmap"></a></p>
<ul dir="auto">
<li><a href="https://github.com/orgs/siyuan-note/projects/1">SiYuan development plan and progress</a></li>
<li><a href="https://github.com/siyuan-note/siyuan/blob/master/CHANGELOG.md">SiYuan changelog</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 Download Setup</h2><a id="user-content--download-setup" aria-label="Permalink: 🚀 Download Setup" href="#-download-setup"></a></p>
<p dir="auto">It is recommended to give priority to installing through the application market on the desktop and mobile, so that you can upgrade the version with one click in the future.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">App Market</h3><a id="user-content-app-market" aria-label="Permalink: App Market" href="#app-market"></a></p>
<p dir="auto">Mobile:</p>
<ul dir="auto">
<li><a href="https://apps.apple.com/us/app/siyuan/id1583226508" rel="nofollow">App Store</a></li>
<li><a href="https://play.google.com/store/apps/details?id=org.b3log.siyuan" rel="nofollow">Google Play</a></li>
<li><a href="https://f-droid.org/packages/org.b3log.siyuan" rel="nofollow">F-Droid</a></li>
</ul>
<p dir="auto">Desktop:</p>
<ul dir="auto">
<li><a href="https://apps.microsoft.com/detail/9p7hpmxp73k4" rel="nofollow">Microsoft Store</a></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Installation Package</h3><a id="user-content-installation-package" aria-label="Permalink: Installation Package" href="#installation-package"></a></p>
<ul dir="auto">
<li><a href="https://b3log.org/siyuan/en/download.html" rel="nofollow">B3log</a></li>
<li><a href="https://github.com/siyuan-note/siyuan/releases">GitHub</a></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Docker Hosting</h3><a id="user-content-docker-hosting" aria-label="Permalink: Docker Hosting" href="#docker-hosting"></a></p>
<details>
<summary>Docker Deployment</summary>
<p dir="auto"><h4 tabindex="-1" dir="auto">Overview</h4><a id="user-content-overview" aria-label="Permalink: Overview" href="#overview"></a></p>
<p dir="auto">The easiest way to serve SiYuan on a server is to deploy it through Docker.</p>
<ul dir="auto">
<li>Image name <code>b3log/siyuan</code></li>
<li><a href="https://hub.docker.com/r/b3log/siyuan" rel="nofollow">Image URL</a></li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">File structure</h4><a id="user-content-file-structure" aria-label="Permalink: File structure" href="#file-structure"></a></p>
<p dir="auto">The overall program is located under <code>/opt/siyuan/</code>, which is basically the structure under the resources folder of the Electron installation package:</p>
<ul dir="auto">
<li>appearance: icon, theme, languages</li>
<li>guide: user guide document</li>
<li>stage: interface and static resources</li>
<li>kernel: kernel program</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Entrypoint</h4><a id="user-content-entrypoint" aria-label="Permalink: Entrypoint" href="#entrypoint"></a></p>
<p dir="auto">The entry point is set when building the Docker image: <code>ENTRYPOINT ["/opt/siyuan/entrypoint.sh"]</code>. This script allows changing the <code>PUID</code> and <code>PGID</code> of the user that will run inside the container. This is especially relevant to solve permission issues when mounting directories from the host. The <code>PUID</code> (User ID) and <code>PGID</code> (Group ID) can be passed as environment variables, making it easier to ensure correct permissions when accessing host-mounted directories.</p>
<p dir="auto">Use the following parameters when running the container with <code>docker run b3log/siyuan</code>:</p>
<ul dir="auto">
<li><code>--workspace</code>: Specifies the workspace folder path, mounted to the container via <code>-v</code> on the host</li>
<li><code>--accessAuthCode</code>: Specifies the access authorization code</li>
</ul>
<p dir="auto">More parameters can be found using <code>--help</code>. Here’s an example of a startup command with the new environment variables:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -d \
  -v workspace_dir_host:workspace_dir_container \
  -p 6806:6806 \
  -e PUID=1001 -e PGID=1002 \
  b3log/siyuan \
  --workspace=workspace_dir_container \
  --accessAuthCode=xxx"><pre>docker run -d \
  -v workspace_dir_host:workspace_dir_container \
  -p 6806:6806 \
  -e PUID=1001 -e PGID=1002 \
  b3log/siyuan \
  --workspace=workspace_dir_container \
  --accessAuthCode=xxx</pre></div>
<ul dir="auto">
<li><code>PUID</code>: Custom user ID (optional, defaults to <code>1000</code> if not provided)</li>
<li><code>PGID</code>: Custom group ID (optional, defaults to <code>1000</code> if not provided)</li>
<li><code>workspace_dir_host</code>: The workspace folder path on the host</li>
<li><code>workspace_dir_container</code>: The path of the workspace folder in the container, as specified in <code>--workspace</code></li>
<li><code>accessAuthCode</code>: Access authorization code (please <strong>be sure to modify</strong>, otherwise anyone can access your data)</li>
</ul>
<p dir="auto">To simplify things, it is recommended to configure the workspace folder path to be consistent on the host and container, such as having both <code>workspace_dir_host</code> and <code>workspace_dir_container</code> configured as <code>/siyuan/workspace</code>. The corresponding startup command would be:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run -d \
  -v /siyuan/workspace:/siyuan/workspace \
  -p 6806:6806 \
  -e PUID=1001 -e PGID=1002 \
  b3log/siyuan \
  --workspace=/siyuan/workspace/ \
  --accessAuthCode=xxx"><pre>docker run -d \
  -v /siyuan/workspace:/siyuan/workspace \
  -p 6806:6806 \
  -e PUID=1001 -e PGID=1002 \
  b3log/siyuan \
  --workspace=/siyuan/workspace/ \
  --accessAuthCode=xxx</pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Docker Compose</h4><a id="user-content-docker-compose" aria-label="Permalink: Docker Compose" href="#docker-compose"></a></p>
<p dir="auto">For users running Siyuan with Docker Compose, the environment variables <code>PUID</code> and <code>PGID</code> can be passed to customize the user and group IDs. Here's an example of a Docker Compose configuration:</p>
<div dir="auto" data-snippet-clipboard-copy-content="version: &quot;3.9&quot;
services:
  main:
    image: b3log/siyuan
    command: ['--workspace=/siyuan/workspace/', '--accessAuthCode=${AuthCode}']
    ports:
      - 6806:6806
    volumes:
      - /siyuan/workspace:/siyuan/workspace
    restart: unless-stopped
    environment:
      # A list of time zone identifiers can be found at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      - TZ=${YOUR_TIME_ZONE}
      - PUID=${YOUR_USER_PUID}  # Customize user ID
      - PGID=${YOUR_USER_PGID}  # Customize group ID"><pre><span>version</span>: <span><span>"</span>3.9<span>"</span></span>
<span>services</span>:
  <span>main</span>:
    <span>image</span>: <span>b3log/siyuan</span>
    <span>command</span>: <span>['--workspace=/siyuan/workspace/', '--accessAuthCode=${AuthCode}']</span>
    <span>ports</span>:
      - <span>6806:6806</span>
    <span>volumes</span>:
      - <span>/siyuan/workspace:/siyuan/workspace</span>
    <span>restart</span>: <span>unless-stopped</span>
    <span>environment</span>:
      <span><span>#</span> A list of time zone identifiers can be found at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</span>
      - <span>TZ=${YOUR_TIME_ZONE}</span>
      - <span>PUID=${YOUR_USER_PUID}  </span><span><span>#</span> Customize user ID</span>
      - <span>PGID=${YOUR_USER_PGID}  </span><span><span>#</span> Customize group ID</span></pre></div>
<p dir="auto">In this setup:</p>
<ul dir="auto">
<li><code>PUID</code> and <code>PGID</code> are set dynamically and passed to the container</li>
<li>If these variables are not provided, the default <code>1000</code> will be used</li>
</ul>
<p dir="auto">By specifying <code>PUID</code> and <code>PGID</code> in the environment, you avoid the need to explicitly set the <code>user</code> directive (<code>user: '1000:1000'</code>) in the compose file. The container will dynamically adjust the user and group based on these environment variables at startup.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">User Permissions</h4><a id="user-content-user-permissions" aria-label="Permalink: User Permissions" href="#user-permissions"></a></p>
<p dir="auto">In the image, the <code>entrypoint.sh</code> script ensures the creation of the <code>siyuan</code> user and group with the specified <code>PUID</code> and <code>PGID</code>. Therefore, when the host creates a workspace folder, pay attention to setting the user and group ownership of the folder to match the <code>PUID</code> and <code>PGID</code> you plan to use. For example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="chown -R 1001:1002 /siyuan/workspace"><pre>chown -R 1001:1002 /siyuan/workspace</pre></div>
<p dir="auto">If you use custom <code>PUID</code> and <code>PGID</code> values, the entrypoint script will ensure that the correct user and group are created inside the container, and ownership of mounted volumes will be adjusted accordingly. There’s no need to manually pass <code>-u</code> in <code>docker run</code> or <code>docker-compose</code> as the environment variables will handle the customization.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Hidden port</h4><a id="user-content-hidden-port" aria-label="Permalink: Hidden port" href="#hidden-port"></a></p>
<p dir="auto">Use NGINX reverse proxy to hide port 6806, please note:</p>
<ul dir="auto">
<li>Configure WebSocket reverse proxy <code>/ws</code></li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Note</h4><a id="user-content-note" aria-label="Permalink: Note" href="#note"></a></p>
<ul dir="auto">
<li>Be sure to confirm the correctness of the mounted volume, otherwise the data will be lost after the container is deleted</li>
<li>Do not use URL rewriting for redirection, otherwise there may be problems with authentication, it is recommended to configure a reverse proxy</li>
<li>If you encounter permission issues, verify that the <code>PUID</code> and <code>PGID</code> environment variables match the ownership of the mounted directories on your host system</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Limitations</h4><a id="user-content-limitations" aria-label="Permalink: Limitations" href="#limitations"></a></p>
<ul dir="auto">
<li>Does not support desktop and mobile application connections, only supports use on browsers</li>
<li>Export to PDF, HTML and Word formats is not supported</li>
<li>Import Markdown file is not supported</li>
</ul>
</details>
<p dir="auto"><h3 tabindex="-1" dir="auto">Unraid Hosting</h3><a id="user-content-unraid-hosting" aria-label="Permalink: Unraid Hosting" href="#unraid-hosting"></a></p>
<details>
<summary>Unraid Deployment</summary>
<p dir="auto">Note: First run <code>chown -R 1000:1000 /mnt/user/appdata/siyuan</code> in the terminal</p>
<p dir="auto">Template reference:</p>
<div data-snippet-clipboard-copy-content="Web UI: 6806
Container Port: 6806
Container Path: /home/siyuan
Host path: /mnt/user/appdata/siyuan
PUID: 1000
PGID: 1000
Publish parameters: --accessAuthCode=******(Access authorization code)"><pre><code>Web UI: 6806
Container Port: 6806
Container Path: /home/siyuan
Host path: /mnt/user/appdata/siyuan
PUID: 1000
PGID: 1000
Publish parameters: --accessAuthCode=******(Access authorization code)
</code></pre></div>
</details>
<p dir="auto"><h3 tabindex="-1" dir="auto">Insider Preview</h3><a id="user-content-insider-preview" aria-label="Permalink: Insider Preview" href="#insider-preview"></a></p>
<p dir="auto">We release insider preview before major updates, please visit <a href="https://github.com/siyuan-note/insider">https://github.com/siyuan-note/insider</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🏘️ Community</h2><a id="user-content-️-community" aria-label="Permalink: 🏘️ Community" href="#️-community"></a></p>
<ul dir="auto">
<li><a href="https://liuyun.io/" rel="nofollow">English Discussion Forum</a></li>
<li><a href="https://liuyun.io/article/1687779743723" rel="nofollow">User community summary</a></li>
<li><a href="https://github.com/siyuan-note/awesome">Awesome SiYuan</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🛠️ Development Guide</h2><a id="user-content-️-development-guide" aria-label="Permalink: 🛠️ Development Guide" href="#️-development-guide"></a></p>
<p dir="auto">See <a href="https://github.com/siyuan-note/siyuan/blob/master/.github/CONTRIBUTING.md">Development Guide</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">❓ FAQ</h2><a id="user-content--faq" aria-label="Permalink: ❓ FAQ" href="#-faq"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">How does SiYuan store data?</h3><a id="user-content-how-does-siyuan-store-data" aria-label="Permalink: How does SiYuan store data?" href="#how-does-siyuan-store-data"></a></p>
<p dir="auto">The data is saved in the workspace folder, in the workspace data folder:</p>
<ul dir="auto">
<li><code>assets</code> is used to save all inserted assets</li>
<li><code>emojis</code> is used to save emoji images</li>
<li><code>snippets</code> is used to save code snippets</li>
<li><code>storage</code> is used to save query conditions, layouts and flashcards, etc.</li>
<li><code>templates</code> is used to save template snippets</li>
<li><code>widgets</code> is used to save widgets</li>
<li><code>plugins</code> is used to save plugins</li>
<li><code>public</code> is used to save public data</li>
<li>The rest of the folders are the notebook folders created by the user, files with the suffix of <code>.sy</code> in the notebook folder are used to save the document data, and the data format is JSON</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Does it support data synchronization through a third-party sync disk?</h3><a id="user-content-does-it-support-data-synchronization-through-a-third-party-sync-disk" aria-label="Permalink: Does it support data synchronization through a third-party sync disk?" href="#does-it-support-data-synchronization-through-a-third-party-sync-disk"></a></p>
<p dir="auto">Data synchronization through third-party synchronization disks is not supported, otherwise data may be corrupted.</p>
<p dir="auto">Although it does not support third-party sync disks, it supports connect with third-party cloud storage (Member's privileges).</p>
<p dir="auto">In addition, you can also consider manually exporting and importing data to achieve data synchronization:</p>
<ul dir="auto">
<li>Desktop: <kbd>Settings</kbd> - <kbd>Export</kbd> - <kbd>Export Data</kbd> / <kbd>Import Data</kbd></li>
<li>Mobile: <kbd>Right column</kbd> - <kbd>About</kbd> - <kbd>Export Data</kbd> / <kbd>Import Data</kbd></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Is SiYuan open source?</h3><a id="user-content-is-siyuan-open-source" aria-label="Permalink: Is SiYuan open source?" href="#is-siyuan-open-source"></a></p>
<p dir="auto">SiYuan is completely open source, and contributions are welcome:</p>
<ul dir="auto">
<li><a href="https://github.com/siyuan-note/siyuan">User Interface and Kernel</a></li>
<li><a href="https://github.com/siyuan-note/siyuan-android">Android</a></li>
<li><a href="https://github.com/siyuan-note/siyuan-ios">iOS</a></li>
<li><a href="https://github.com/siyuan-note/siyuan-harmony">HarmonyOS</a></li>
<li><a href="https://github.com/siyuan-note/siyuan-chrome">Chrome Clipping Extension</a></li>
</ul>
<p dir="auto">For more details, please refer to <a href="https://github.com/siyuan-note/siyuan/blob/master/.github/CONTRIBUTING.md">Development Guide</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">How to upgrade to a new version?</h3><a id="user-content-how-to-upgrade-to-a-new-version" aria-label="Permalink: How to upgrade to a new version?" href="#how-to-upgrade-to-a-new-version"></a></p>
<ul dir="auto">
<li>If installed via app store, please update via app store</li>
<li>If it is installed through the installation package on the desktop, you can open the option of <kbd>Settings</kbd> - <kbd>About</kbd> - <kbd>Automatically download update installation package</kbd>, so that SiYuan will automatically download The latest version of the installation package and prompts to install</li>
<li>If it is installed by manual installation package, please download the installation package again to install</li>
</ul>
<p dir="auto">You can <kbd>Check update</kbd> in <kbd>Settings</kbd> - <kbd>About</kbd> - <kbd>Current Version</kbd>, or pay attention to <a href="https://b3log.org/siyuan/en/download.html" rel="nofollow">Official Download</a> or <a href="https://github.com/siyuan-note/siyuan/releases">GitHub Releases</a> to get the new version.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">What if some blocks (such as paragraph blocks in list items) cannot find the block icon?</h3><a id="user-content-what-if-some-blocks-such-as-paragraph-blocks-in-list-items-cannot-find-the-block-icon" aria-label="Permalink: What if some blocks (such as paragraph blocks in list items) cannot find the block icon?" href="#what-if-some-blocks-such-as-paragraph-blocks-in-list-items-cannot-find-the-block-icon"></a></p>
<p dir="auto">The first sub-block under the list item is the block icon omitted. You can move the cursor into this block and trigger its block menu with <kbd>Ctrl+/</kbd> .</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">What should I do if the data repo key is lost?</h3><a id="user-content-what-should-i-do-if-the-data-repo-key-is-lost" aria-label="Permalink: What should I do if the data repo key is lost?" href="#what-should-i-do-if-the-data-repo-key-is-lost"></a></p>
<ul dir="auto">
<li>
<p dir="auto">If the data repo key is correctly initialized on multiple devices before, the key is the same on all devices and can be set in <kbd>Settings</kbd> - <kbd>About</kbd> - <kbd>Data repo key</kbd> - <kbd>Copy key string</kbd> retrieve</p>
</li>
<li>
<p dir="auto">If it has not been configured correctly before (for example, the keys on multiple devices are inconsistent) or all devices are unavailable and the key string cannot be obtained, you can reset the key by following the steps below:</p>
<ol dir="auto">
<li>Manually back up the data, you can use <kbd>Export Data</kbd> or directly copy the <kbd>workspace/data/</kbd> folder on the file system</li>
<li><kbd>Settings</kbd> - <kbd>About</kbd> - <kbd>Data rep key</kbd> - <kbd>Reset data repo</kbd></li>
<li>Reinitialize the data repo key. After initializing the key on one device, other devices import the key</li>
<li>The cloud uses the new synchronization directory, the old synchronization directory is no longer available and can be deleted</li>
<li>The existing cloud snapshots are no longer available and can be deleted</li>
</ol>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Do I need to pay for it?</h3><a id="user-content-do-i-need-to-pay-for-it" aria-label="Permalink: Do I need to pay for it?" href="#do-i-need-to-pay-for-it"></a></p>
<p dir="auto">Most features are free, even for commercial use.</p>
<p dir="auto">Member's privileges can only be used after payment, please refer to <a href="https://b3log.org/siyuan/en/pricing.html" rel="nofollow">Pricing</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🙏 Acknowledgement</h2><a id="user-content--acknowledgement" aria-label="Permalink: 🙏 Acknowledgement" href="#-acknowledgement"></a></p>
<p dir="auto">The birth of SiYuan is inseparable from many open source projects and contributors, please refer to the project source code kernel/go.mod, app/package.json and project homepage.</p>
<p dir="auto">The growth of SiYuan is inseparable from user feedback and promotion, thank you for everyone's help to SiYuan ❤️</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Contributors</h3><a id="user-content-contributors" aria-label="Permalink: Contributors" href="#contributors"></a></p>
<p dir="auto">Welcome to join us and contribute code to SiYuan together.</p>
<a href="https://github.com/siyuan-note/siyuan/graphs/contributors">
   <img src="https://camo.githubusercontent.com/57f5e75e1a049a4e2d9bdd2415a8b8eab69cdd8042d79d8af4d6236333a075de/68747470733a2f2f636f6e747269622e726f636b732f696d6167653f7265706f3d73697975616e2d6e6f74652f73697975616e" data-canonical-src="https://contrib.rocks/image?repo=siyuan-note/siyuan">
</a>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Egui – An immediate mode GUI written in Rust (272 pts)]]></title>
            <link>https://www.egui.rs/</link>
            <guid>42512636</guid>
            <pubDate>Thu, 26 Dec 2024 02:06:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.egui.rs/">https://www.egui.rs/</a>, See on <a href="https://news.ycombinator.com/item?id=42512636">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <canvas id="the_canvas_id"></canvas>

    <div id="center_text">
        <p>
            Loading…
        </p>
        
    </div>

    

    <!-- this is the JS generated by the `wasm-bindgen` CLI tool -->
    

    





</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Seconds Since the Epoch (235 pts)]]></title>
            <link>https://aphyr.com/posts/378-seconds-since-the-epoch</link>
            <guid>42512371</guid>
            <pubDate>Thu, 26 Dec 2024 00:59:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://aphyr.com/posts/378-seconds-since-the-epoch">https://aphyr.com/posts/378-seconds-since-the-epoch</a>, See on <a href="https://news.ycombinator.com/item?id=42512371">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <p>This is not at all news, but it comes up often enough that I think there should be a concise explanation of the problem. People, myself included, like to say that POSIX time, also known as Unix time, is the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date">number</a> <a href="https://www.gnu.org/software/coreutils/manual/html_node/Seconds-since-the-Epoch.html">of</a> <a href="https://man7.org/linux/man-pages/man2/time.2.html">seconds</a> <a href="https://pkg.go.dev/time#Unix">since</a> <a href="https://dev.mysql.com/doc/refman/8.4/en/datetime.html">the</a> <a href="https://ruby-doc.org/core-3.0.0/Time.html">Unix</a> <a href="https://docs.datastax.com/en/cql-oss/3.x/cql/cql_reference/timestamp_type_r.html">epoch</a>, which was 1970-01-01 at 00:00:00.</p>
<p>This is not true. Or rather, it isn’t true in the sense most people think. For example, it is presently 2024-12-25 at 18:54:53 UTC. The POSIX time is 1735152686. It has been 1735152715 seconds since the POSIX epoch. The POSIX time number is twenty-nine seconds lower.</p>
<p>This is because POSIX time is derived <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/FIPS/fipspub151-1.pdf">in IEEE 1003.1</a> from <a href="https://en.wikipedia.org/wiki/Coordinated_Universal_Time">Coordinated Universal Time</a>. The standard assumes that every day is exactly 86,400 seconds long. Specifically:</p>
<blockquote>
<p>The <em>time()</em> function returns the value of time in <b>seconds since the Epoch</b>.</p>
</blockquote>
<p>Which is defined as:</p>
<blockquote>
<p><b>seconds since the Epoch.</b> A value to be interpreted as the number of seconds between a specified time and the Epoch. A Coordinated Universal Time name (specified in terms of seconds (<em>tm_sec</em>), minutes (<em>tm_min</em>), hours (<em>tm_hour</em>), days since January 1 of the year (<em>tm_yday</em>), and calendar year minus 1900
(<em>tm_year</em>)) is related to a time represented as <em>seconds since the Epoch</em> according to the expression below.</p>
<p>If year &lt; 1970 or the value is negative, the relationship is undefined. If year ≥ 1970 and the value is non-negative, the value is related to a Coordinated Universal Time name according to the expression:</p>
<p><em>tm_sec</em> + <em>tm_min</em> * 60 + <em>tm_hour</em> * 3600 + <em>tm_yday</em> * 86400 +
(<em>tm_year</em>-70) * 31536000 + ((<em>tm_year</em> - 69) / 4) * 86400</p>
</blockquote>
<p>The length of the day is not 86,400 seconds, and in fact changes over time. To keep UTC days from drifting too far from solar days, astronomers periodically declare a <a href="https://en.wikipedia.org/wiki/Leap_second">leap second</a> in UTC. Consequently, every few years POSIX time jumps backwards, <a href="https://marc.info/?l=linux-kernel&amp;m=134113577921904">wreaking</a> <a href="https://www.zdnet.com/article/qantas-suffers-delays-due-to-linux-leap-second-bug/">utter</a> <a href="https://blog.cloudflare.com/how-and-why-the-leap-second-affected-cloudflare-dns/">havoc</a>. Someday it might jump forward.</p>
<h2><a href="#archaeology" id="archaeology">Archaeology</a></h2>
<p>Appendix B of IEEE 1003 has a fascinating discussion of leap seconds:</p>
<blockquote>
<p>The concept of leap seconds is added for precision; at the time this standard was published, 14 leap seconds had been added since January 1, 1970. These 14 seconds are ignored to provide an easy and compatible method of computing time differences.</p>
</blockquote>
<p>I, too, love to ignore things to make my life easy. The standard authors knew “seconds since the epoch” were not, in fact, seconds since the epoch. And they admit as much:</p>
<blockquote>
<p>Most systems’ notion of “time” is that of a continuously-increasing value, so this value should increase even during leap seconds. However, not only do most systems not keep track of leap seconds, but most systems are probably not synchronized to any standard time reference. Therefore, it is inappropriate to require that a time represented as seconds since the Epoch precisely represent the number of seconds between the referenced time and the Epoch.</p>
<p>It is sufficient to require that applications be allowed to treat this time as if it represented the number of seconds between the referenced time and the Epoch. It is the responsibility of the vendor of the system, and the administrator of the system, to ensure that this value represents the number of seconds between the referenced time and the Epoch as closely as necessary for the application being run on that system….</p>
</blockquote>
<p>I imagine there was some debate over this point. The appendix punts, saying that vendors and administrators must make time align “as closely as necessary”, and that “this value should increase even during leap seconds”. The latter is achievable, but the former is arguably impossible: the standard requires POSIX clocks be twenty-nine seconds off.</p>
<blockquote>
<p>Consistent interpretation of seconds since the Epoch can be critical to certain types of distributed applications that rely on such timestamps to synchronize events. The accrual of leap seconds in a time standard is not predictable. The number of leap seconds since the Epoch will likely increase. The standard is
more concerned about the synchronization of time between applications of astronomically short duration and the Working Group expects these concerns to become more critical in the future.</p>
</blockquote>
<p>In a sense, the opposite happened. Time synchronization is <em>always</em> off, so systems generally function (however incorrectly) when times drift a bit. But leap seconds are rare, and the linearity evoked by the phrase “seconds since the epoch” is so deeply baked in to our intuition, that software can accrue serious, unnoticed bugs. Until a few years later, one of those tiny little leap seconds takes down a big chunk of the internet.</p>
<h2><a href="#what-to-do-instead" id="what-to-do-instead">What To Do Instead</a></h2>
<p>If you just need to compute the duration between two events on one computer, use <a href="https://docs.redhat.com/en/documentation/red_hat_enterprise_linux_for_real_time/7/html/reference_guide/sect-posix_clocks#sect-POSIX_clocks">CLOCK_MONOTONIC</a>. If you don’t need to exchange timestamps with other systems that assume POSIX time, use <a href="https://www.ipses.com/eng/in-depth-analysis/standard-of-time-definition/">TAI, GPS, or maybe LORAN</a>. If you do need rough alignment with other POSIX-timestamp systems, <a href="https://developers.google.com/time/smear">smear leap seconds</a> over a longer window of time. Libraries like <a href="https://github.com/qntm/t-a-i">qntm’s t-a-i</a> can convert back and forth between POSIX and TAI.</p>
<p>There’s an ongoing effort to <a href="https://www.timeanddate.com/news/astronomy/end-of-leap-seconds-2022">end leap seconds</a>, hopefully <a href="https://www.bipm.org/documents/20126/64811223/Resolutions-2022.pdf/281f3160-fc56-3e63-dbf7-77b76500990f">by 2035</a>. It’ll require additional work to build conversion tables into everything that relies on the “86,400 seconds per day” assumption, but it should also make it much simpler to ask questions like “how many seconds between these two times”. At least for times after 2035!</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Installing OpenWRT on an Unsupported Router (105 pts)]]></title>
            <link>https://radiosocial.de/@hennichodernich/113714518196988714</link>
            <guid>42512050</guid>
            <pubDate>Wed, 25 Dec 2024 23:52:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://radiosocial.de/@hennichodernich/113714518196988714">https://radiosocial.de/@hennichodernich/113714518196988714</a>, See on <a href="https://news.ycombinator.com/item?id=42512050">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
    </channel>
</rss>