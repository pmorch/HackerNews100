<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 14 Jun 2025 05:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[The Tech Job Meltdown (144 pts)]]></title>
            <link>https://www.professoraxelrod.com/p/the-tech-job-meltdown</link>
            <guid>44273790</guid>
            <pubDate>Sat, 14 Jun 2025 02:22:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.professoraxelrod.com/p/the-tech-job-meltdown">https://www.professoraxelrod.com/p/the-tech-job-meltdown</a>, See on <a href="https://news.ycombinator.com/item?id=44273790">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><blockquote><p><em><span>He wrote me a prescription; he said “You are depressed</span><br><span>I'm glad you came to see me to get this off your chest</span><br><span>Come back and see me later, next patient please</span><br><span>Send in another victim of industrial disease”</span></em><br><em><strong>Industrial Disease</strong></em><span>, Dire Straits</span></p></blockquote><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp" width="1167" height="486" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:486,&quot;width&quot;:1167,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:243242,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/webp&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://www.professoraxelrod.com/i/165486167?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c9872ad-e90e-49c8-be04-2f03ac64653b_1167x486.webp 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption><span>The Google campus doesn’t look as friendly as it used to. (this ia actually from Bartertown in </span><em><strong>Mad Max 3</strong></em><span> - you can see Thunderdome in the middle)</span></figcaption></figure></div><p><span>Since the start of 2023, more than half-a-million tech workers have been laid off. This isn’t the impact of COVID, this isn’t a sudden realization that tech workers are under-performing, this isn’t (much) a wave of AI making tech workers more efficient, and the other usual shibboleths like “it was overhiring during the pandemic” or “it’s a wave of H1B workers” or “all knowledge worker jobs are being replaced by LLMs” are only vaguely correct. You could make a pretty reasonable case that it was </span><em><strong>the end of Zero Interest Rate Policy</strong></em><span> (ZIRP) and the corresponding impact of cost of capital - that the cost of borrowing went up, thus venture capital became a less attractive investment class than other areas, so less money went to building new companies and it was harder for existing firms to borrow, as investors went elsewhere for better returns. </span><em><strong>That is correct - and it would have had its impact</strong></em><span> - though that impact would have basically been the slowdown of new venture backed firms, not layoffs at the Big Tech Giants - and that did in fact happen. </span><em><span>(There </span><strong>is definitely</strong><span> a knock-on effect at the Big Tech Giants where a lack of tech startups does bad things to the large parts of the ecosystem - but that effect is not as immediate as it was back in in the 2000 dot com crash.)</span></em><span> But there’s a much more immediate bottom line reason.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif" width="498" height="298" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:298,&quot;width&quot;:498,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:70629,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/gif&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.professoraxelrod.com/i/165486167?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F06e72374-3470-4078-a9cf-64a042cf6b25_498x298.gif 1456w" sizes="100vw"></picture></div></a></figure></div><p><span>Section 174 of the Internal Revenue Code governs the tax treatment of research and development (R&amp;D) expenditures. For roughly 70 years, American companies could deduct 100% of “qualified research and development spending” in the year they incurred the costs, and this was generally interpreted pretty liberally. Salaries, software, contractor payments… if it contributed to creating or improving a product, it could be deducted “off the top” of a firm’s taxable income. The </span><a href="https://www.thetaxadviser.com/issues/2024/jun/rights-for-the-research-development-credit-and-sec-174/#:~:text=Originally%20enacted%20in%201954%2C%20Sec,product%20development%20expenses%20under%20Sec." rel="">deduction was </a><span>originally codified by Section 174 of the IRS Code of 1954, and under the provision, R&amp;D flourished in the U.S. It gave us the dominance of Bell Labs, Microsoft, Apple, Google, Facebook - pretty much all the US technology booms you’ve lived through unless you’re quire venerable.</span></p><p><span>So the way these regs are written: These expenditures must be for activities intended to discover information that eliminates uncertainty about the development or improvement of a product. </span><em>(Kind of open-ended.)</em><span> Prior to 2022, taxpayers could immediately deduct R&amp;D expenditures in the year they were incurred, providing a significant tax benefit for businesses investing in innovation. Alternatively, taxpayers could capitalize these costs and amortize them over a period (e.g., at least 60 months) if they chose to defer the deduction. But it was pretty rare to do this, because you could directly manage your R&amp;D payroll costs versus income to mitigate the tax hit. And societally, we accepted that - we were investing in growing the American economy. </span></p><p><span>But, the Tax Cuts and Jobs Act (TCJA) of 2017 amended Section 174, effective for tax years beginning after December 31, 2021. Starting in 2022, R&amp;D expenditures must be capitalized and amortized over 5 years for domestic research </span><em>(and 15 years for foreign research… which is pretty untenable.)</em><span> This change eliminated the option to immediately deduct R&amp;D costs, increasing tax liability for companies with significant research budgets in the short term. Even more annoying, amortization begins at the midpoint of the taxable year in which the expenses are incurred, using a straight-line method.</span></p><p><span>The short version is: this rule change has </span><em><strong>increased taxable income for businesses in the short term, as they can no longer deduct R&amp;D costs immediately</strong></em><span>. Now, there is actually a category of tax law which you can still use (IRS Section 41 Research and Development Tax Credits) which are different - if you think I’m about to advocate tax reform, yes, but I’m </span><em><strong>always</strong></em><span> doing that and I feel like I’m talking to a brick wall. But it’s not as broadly useful, and it’s not a simple recategorization, or we’d all have done it.</span></p><p><span>Anyway, let me see if I can summarize how it works today. A U.S. company incurs $1 million in domestic R&amp;D (Section 174) expenses in 2025 and let’s assume they can’t reasonably reclassify any of it under Section 41. Under Section 174, it must capitalize these costs and amortize them over 5 years. Amortization begins mid-year, so in 2025, the company can deduct $100,000 (1/10th of $1 million,  since you only get to count half the first year. The remaining $900,000 is deducted evenly over the next 4.5 years ($200,000 per year). These are basically “tax credits”.  So in some respects, they may be long term beneficial - </span><em><strong>but they are a short term drag, which is why you see layoffs at the moment</strong></em><span>. Also they create a lot more compliance paperwork </span><em>(and potentially you’ll see companies change hands just for their accumulated tax credits, which is a little… unhelpful.)</em></p><p>And of course, this hit the “real world” of companies focused on building tomorrow’s products in some pretty obvious ways.</p><p>The inability to immediately deduct R&amp;D costs reduced cash flow, particularly for cash-strapped startups and small tech firms reliant on R&amp;D. Companies had to either take out high-interest loans - since of course, interest rates have recently gone up, cut costs, or face bankruptcy. Many chose layoffs to free up cash to cover these tax liabilities. For instance, a small company might lay off a software engineer earning $200,000 to cover a $189,000 tax bill.</p><p><span>Now, you might think the 15-year amortization period for foreign R&amp;E expenditures would make hiring non-U.S. engineers less tax-advantageous and help bring jobs back to the US, but this </span><em><strong>mostly</strong></em><span> did not actually work out this way. You see, larger companies responded by offshoring R&amp;D to countries with more favorable tax regimes, leading to U.S. job losses. For example, Google reportedly shifted some work to Germany, and Microsoft moved a bunch of research work to China - both because pay rates were better and because the local subsidiary company in that jurisdiction operated under the national laws for that nation, which … were not the US tax laws. They were much more like the previous US tax laws, because the rest of the world had realized “hey, we also want to encourage people to invest in R&amp;D and grow the next trillion dollar company here!” And this new tax ruling doesn’t precisely say “we don’t want to do that” but it does say “we don’t want you to be quick about it” - which everyone who believes in the Amazing Growth Story thinks is anathema to their strategy.</span></p><p><span>Anyway, the impact of this tax strategy turned out to be: </span><em><strong>layoffs of U.S.-based engineers </strong></em><span>while companies restructured operations abroad.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg" width="628" height="356" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:356,&quot;width&quot;:628,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:147865,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.professoraxelrod.com/i/165486167?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd833dee0-007f-44b0-86d3-41de3cef17d6_628x356.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><span>This is </span><em><strong>NOT</strong></em><span> working out how it was planned.</span></figcaption></figure></div><p><span>Now back in 2017, when Congress passed the </span><a href="https://www.investopedia.com/taxes/trumps-tax-reform-plan-explained/" rel="">Tax Cuts and Jobs Act</a><span> (TCJA), the signature legislative achievement of President Donald Trump’s first term, it slashed the corporate tax rate from 35% to 21%, which looked like a massive revenue loss “on paper” for the federal government. So in order to make the 2017 bill comply with Senate budget rules, lawmakers had to offset the cost… therefore, they put in a future tax hike </span><em>(well, several)</em><span> that wouldn’t kick in right away, wouldn’t provoke immediate backlash from businesses, and could, in theory, be quietly repealed later.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg" width="600" height="449" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:449,&quot;width&quot;:600,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:178290,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://www.professoraxelrod.com/i/165486167?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7bd3ab5b-825a-4438-a6ce-7ab87497fabf_600x449.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>But they didn’t repeal it, so when this went into effect, companies panicked as the tax steamroller ran over them.</figcaption></figure></div><p>The delayed change to Section 174, from immediate expensing of R&amp;D to “mandatory amortization”, meaning that companies must spread the deduction out in smaller chunks over five or even 15-year periods… that’s one of them, as I’m sure you’ve figured out. The delayyed start meant that it would not begin affecting the budget until 2022, but it helped the TCJA appear “deficit neutral” over the 10-year window used for legislative “scoring”.</p><p><span>The delay wasn’t legally </span><em><strong>required</strong></em><span>, mind you, it was a way to game the system. These kind of political tactics are</span><a href="https://www.pbs.org/newshour/politics/as-house-gop-grinds-ahead-new-cbo-report-says-trumps-big-tax-cuts-bill-will-add-to-deficit?utm_source=chatgpt.com" rel=""> commononplace in tax legislation</a><span>. Phase-ins and or delayed-start provisions let lawmakers game how the Congressional Budget Office (CBO) -  Congress’ nonpartisan analyst of how bills impact budgets and deficits - “grades” legislation, because it kicks the costs down the road, outside the “official” forecasting windows. Those of you who play table-top games or RPGs would call this a way to “cheese the system” or the traditional euphemism used to be something along the lines of “robbing Peter to pay Paul”.</span></p><p><a href="https://technical.ly/civic-news/section-174-small-software-companies-taxes-explainer/" rel="">Many businesses expected Congress to repeal </a><span>or delay the Section 174 changes before they took effect in 2022, as there </span><em><strong>definitely</strong></em><span> was bipartisan support for immediate expensing. However, inaction led to a “shock” when 2022 tax bills arrived in 2023, forcing rapid cost-cutting, including layoffs. Small software firms, in particular, faced “extinction-level” tax bills, with some reporting taxable income tripling overnight, prompting layoffs or salary cuts. And bigger firms - Amazon, Meta/Facebook, Alphabet/Google, etc, Microsoft, Salesforce, etc - have had widespread layoffs in the US and have moved jobs overseas. Twilio cut 22% of its domestic workforce in 2023. Shopify cut 30% </span><em>(they’re based in Canada, but much of their R&amp;D was in the US - guess what, it isn’t anymore)</em><span>. Coinbase cut 36% of their team and there are still a heck of a lot of crypto bros, so I think they are probably not in a doomsday situation. </span></p><p><span>Now, I don’t want to say this was the </span><em><strong>only </strong></em><span>thing in 2023 that did this. There was </span><em><strong>a lot of economic turmoil </strong></em><span>on the horizon then: rising interest rates, reduced venture capital funding, supply chain problems, and post-pandemic over-hiring corrections, all amplifying financial pressures at the time. Companies like Meta announced layoffs during their “Year of Efficiency” in 2023, partly due to these tax changes and corresponding changes in ad spending.  While not the sole cause, the Section 174 change drove </span><em>(or accelerated)</em><span> layoffs that otherwise would probably have been unnecessary.</span></p><p><span>Congress has made </span><a href="https://technical.ly/startups/r-d-tax-change-reversal-startups/" rel="">noise previously about a bipartisan reversal</a><span> of this tax code change, and I rather hope they do - it would be a welcome boost to many sectors of the American economy, from manufacturing to pharmaceutical to technology to education to electrnics to scientific research and consulting.</span></p><p><span>Don’t think of this as just a problem for the tech space. I mean, the tech sector is ridiculously dominant for the S&amp;P 500, the “Magnificent Seven” are a third of the value of the S&amp;P 500. (That’s Alphabet, Amazon, Apple, Nvidia, Microsoft, Meta, and Tesla.) But if this does get repealed - it will be very good for those seven stocks - </span><em><strong>this is not an official stock tip, shush, you SEC guys.</strong></em></p><p>Throughout the 2010s, a broad swath of startups, direct-to-consumer brands, and internet-first firms… heck, basically every company that you would recognize from Instagram or Facebook ads… built their growth models around a kind of synthetic carefully engineered break-even. Lot of online firms, a lot of handheld or wearable tech firms, personal entertainment devices, ride-hailing firms, anything self-driving, all the recent buzzy things. </p><p><span>The tax code allowed them to spend aggressively on product and engineering, then write it all off as R&amp;D, keeping their taxable income close to zero by design. It worked because taxable income and actual cash flow were often not</span><em> </em><span>quite</span><em> </em><span>the same thing under what’s known as </span><a href="https://www.investopedia.com/terms/g/gaap.asp" rel="">GAAP</a><span> accounting practices. Basically, as long as spending counted as R&amp;D, companies could report losses to investors while owing almost nothing to the IRS. In short, </span><em><strong>it costs a lot to invent - and market - the future. Building a better tomorrow can be expensive!</strong></em><span> Investors generally bought into this, gave them </span><em><strong>another round of venture capital, and let them defer a public offering</strong></em><span>. </span><em>(This is actually another problem with this model - companies have stayed private far too long - but I’ll address that at some other point.)</em></p><p><span>But the Section 174 tax change absolutely cratered that model. Once those same expenses had to be spread out, or amortized, over multiple years, suddenly you couldn’t write these off - basically, the tax shield vanished or the accounting rules changed, depending on how politely you want to phrase it. But the mechanics of it are the same: companies that were still burning cash suddenly looked </span><em><strong>profitable on paper</strong></em><span>, triggering </span><em><strong>real tax bills on imaginary gains</strong></em><span>. </span><em>(If this reminds you of some of the past economic crises - it should - this is one of the things that burned people back in the dotcom crash of 2000 amongst other mark-to-market problems in 2008, though the 2008 crisis mostly wasn’t this.)</em></p><p><span>The logic that once fueled a generation of digital-first research-focused growth ran straight into a IRS-shaped brick wall and put a mighty dent in the work force. If you were already public and profitable - well, your management team wasn’t going let you suddenly become unprofitable just because of a tax law change, so the answer was “cut expenses” and that mostly became “slow CapEx on data centers </span><em>- servers are expensive -</em><span>  and lay off employees” so as to preserve profit margins and keep the stock price high. After all, reasoned management, if we had to put up with these crazy new rules, we basically just had to bank up R&amp;D credits for a few years and then we were back to par. It was a couple of years of drag on the economy - </span><em><strong>and a particularly bad time</strong></em><span> to fall behind on technology leadership or a chance to reshore manufacturing or stabilize the American economy. One suspects that the current administration, if they had noticed that, might have kicked out a repeal or other clever plan as part of their new budget package </span><em>(what’s currently being bundled together under the slightly goofy name of the Big Beautiful Bill)</em><span> to juice economic recovery.</span></p><p><span>So it wasn’t just tech experiencing effects. From 1954 until 2022, the U.S. tax code had encouraged businesses of all stripes to behave at </span><em><strong>least a little bit </strong></em><span>like we think of tech companies behaving, by which I mean “investing in R&amp;D” and more generally “investing in software” for the latter half of that. From retail to logistics, healthcare to media, if firms built internal tools, customized a software stack, or invested in business intelligence and data-driven product development, they could expense those costs - and the IRS generally agreed, which is slightly miraculous. The write-off incentivized in-house builds and fast growth well outside what people generally call the “tech sector”. For comparison, check the </span><a href="https://www.oecd.org/content/dam/oecd/en/publications/reports/2020/09/the-effects-of-r-d-tax-incentives-and-their-role-in-the-innovation-policy-mix_b7f9884d/65234003-en.pdf" rel="">OECD research</a><span> showing that immediate deductions foster innovation more than spread-out ones.</span></p><p><span>And American companies loved that logic and invested according to it. According to government data, U.S. businesses reported about $500 billion in </span><a href="https://ncses.nsf.gov/pubs/nsf22314" rel="">R&amp;D expenditures</a><span> in 2019 alone, and almost half of that came from industries outside traditional tech. The Bureau of Economic Analysis estimates that this sector, the broader digital economy, </span><a href="https://itif.org/publications/2023/05/30/six-tech-industries-accounted-for-more-than-one-third-of-gdp-growth-in-the-last-decade/" rel="">accounts</a><span> for another 10% of GDP. Probably 20% if you count Big Tech. And there’s a secondary market - all the people who support and are downstream from those workers and those industries </span><em>(see below)</em><span>; we’re actually introducing relatively-avoidable friction into about a quarter of the American economy here with this particular tax change.</span></p><p><span>The result? A tax policy aimed at raising short-term revenue basically defined the growth engine for a huge chunk of American companies. But when that rug got pulled out, it also yanked out the incentive for hiring American engineers or investing in American-made tech and digital products. It made building tech companies in America suddenly not economically viable, and the last time we did this with a stupid policy change (Fed policy tightening “to defeat the Wealth Effect” and cool down speculative fervor … </span><em><strong>yup, it sure did! Lots of wealth went away, was that a good idea?</strong></em><span>) caused the big Dot Com Crash in 2000. It would probably be a good idea to put this tax credit back in place </span><em>(or some facsimile thereof)</em><span> before it continues to strip jobs out of the American economy - let alone all the folks (realtors, contractors, restaurants, nannies, tutors, personal trainers, et al) that are one step downstream from the tech sector jobs.</span></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Implementing Logic Programming (104 pts)]]></title>
            <link>https://btmc.substack.com/p/implementing-logic-programming</link>
            <guid>44272467</guid>
            <pubDate>Fri, 13 Jun 2025 21:32:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://btmc.substack.com/p/implementing-logic-programming">https://btmc.substack.com/p/implementing-logic-programming</a>, See on <a href="https://news.ycombinator.com/item?id=44272467">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p><span>Most of my readers are probably familiar with procedural programming, object-oriented programming (OOP), and functional programming (FP). The majority of top programming languages on all of the language popularity charts (like </span><a href="https://www.tiobe.com/tiobe-index/" rel="">TIOBE</a><span>) support all three to some extent.</span></p><p>Even if a programmer avoided one or more of those three paradigms like the plague, they’re likely at least aware of them and what they’re about. Or they’re applying one of the paradigms while denying that they’re doing so, like Haskell programmers using the IO or State Monads (procedural programming), or C programmers writing structs of function pointers (object-oriented programming), or Java programmers using streams (functional programming).</p><p><span>The same is sadly not true of </span><a href="https://en.wikipedia.org/wiki/Logic_programming" rel="">logic programming</a><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-165727931" href="https://btmc.substack.com/p/implementing-logic-programming#footnote-1-165727931" target="_self" rel="">1</a></span><span>. While some programmers are aware of its existence, and might have experienced a little bit of it in university, it’s not even close to the popularity of the other paradigms. I’d go so far as to say that the majority of programmers have no idea what it’s about, and that’s a shame because logic programming is really good at tackling certain kinds of problems.</span></p><p>OOP and FP are easy to explain in terms of procedural programming concepts, and it’s also pretty easy to explain how to implement them. That’s not really the case for logic programming, but when has that ever stopped me?</p><p>What better way to learn something than to implement it?</p><p><span>If you’ve ever lost your marbles trying to model complex relationships between various concepts as objects with bi-directional pointers to each other and derived properties that need to be cached and all that jazz, then that’s a great example of a problem where you should have used logic programming instead (looking at you </span><a href="https://en.wikipedia.org/wiki/Object_Management_Group" rel="">OMG</a><span> and your fancy </span><a href="https://www.omg.org/spec/SysML" rel="">SysML v2</a><span> standard</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-165727931" href="https://btmc.substack.com/p/implementing-logic-programming#footnote-2-165727931" target="_self" rel="">2</a></span><span>).</span></p><p>In logic programming we don’t program with functions as we do in the other paradigms (procedures and methods are also functions). Functions have a set of inputs and a set of outputs, and mutable inputs can be viewed as just another kind of output.</p><p><span>Rather, in logic programming we program with </span><em>relations</em><span>. In logic programming they’re also called predicates, but they’re the same thing really (much like procedures and methods are kinds of functions).</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg" width="658" height="500" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:500,&quot;width&quot;:658,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" title="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F69e6e412-0213-43ca-9fee-082f3f9ec376_658x500.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>The difference between a relation and a function is that a relation doesn’t have a clear distinction between what is an input and what is an output. </p><p><span>I’ll use what is probably the most well known logic programming language, </span><a href="https://en.wikipedia.org/wiki/Prolog" rel="">Prolog</a><span>, to illustrate. Let’s start with a simple example:</span></p><pre><code>male(dicky).
male(randy).
male(mike).
male(don).
male(elmer).

female(anne).
female(rosie).
female(esther).
female(mildred).
female(blair).</code></pre><p><span>In the example above, </span><code>male</code><span> and </span><code>female</code><span> are what are known as </span><em>predicates</em><span> in Prolog. Predicates are defined in terms of </span><em>clauses</em><span>, and a clause can be either a </span><em>rule</em><span> or a </span><em>fact</em><span>. A fact is just a rule that is always true. Every “statement” in the example above is a fact.</span></p><p><span>By writing </span><code>male(randy)</code><span> on its own as above, we’re saying that “</span><em>it is a fact that randy is a male</em><span>”. This being an </span><em>is-a</em><span> relationship is just our own interpretation of what </span><code>male(_)</code><span> means. All Prolog cares about is that there’s a fact for predicate </span><code>male</code><span> that states </span><code>male(randy)</code><span>. A predicate/relation means whatever we want it to mean.</span></p><p><span>The various names of people above are </span><em>atoms</em><span> in Prolog. They’re basically interned strings (same as </span><a href="https://en.wikipedia.org/wiki/Symbol_(programming)" rel="">symbols</a><span> in Lisp, Ruby, Julia, Smalltalk, etc.), but atoms can also be integers and even complex structures. Prolog is dynamically typed so we don’t need to declare any types, but that’s not the case for logic programming in general</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-3-165727931" href="https://btmc.substack.com/p/implementing-logic-programming#footnote-3-165727931" target="_self" rel="">3</a></span><span>.</span></p><p>All we’ve done so far is state that a bunch of people are either male or female. Not very interesting, but we’ll make use of this information soon. Let’s move on to a more interesting set of facts:</p><pre><code><code>parent(don, randy).
parent(don, mike).
parent(don, anne).

parent(rosie, randy).
parent(rosie, mike).
parent(rosie, anne).

parent(elmer, don).
parent(mildred, don).

parent(esther, rosie).
parent(esther, dicky).</code></code></pre><p><span>In the example above we’ve added a new predicate (parent) and some associated facts, this time relating two people. When we write </span><code>parent(don, randy)</code><span>, we’re saying that Don is one of Randy’s parents. Relations don’t really have an ordering, this is just how we’ve chosen to interpret each of the two arguments.</span></p><p>So far, nothing special, but now we can write our first rule:</p><pre><code>father(X, Y) :- male(X), parent(X, Y).</code></pre><p><span>The rule above says that for any given X and Y (uppercase letters are variables), if X is a male, and X is a parent of Y, then X is the father of Y</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-4-165727931" href="https://btmc.substack.com/p/implementing-logic-programming#footnote-4-165727931" target="_self" rel="">4</a></span><span>. The weird </span><code>:-</code><span> symbol is a reverse implication, while the comma means “and”. In Prolog “or” would be a semicolon, or just another rule for the same predicate. You can read the example as:</span></p><pre><code>father(X, Y) if male(X) and parent(X, Y)</code></pre><p><span>Anyway, we can now start doing some queries (?- is the query operator)</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-5-165727931" href="https://btmc.substack.com/p/implementing-logic-programming#footnote-5-165727931" target="_self" rel="">5</a></span><span>, for example:</span></p><pre><code>?- father(X, randy).</code></pre><p>This will return X=don. If instead we query:</p><pre><code>?- father(don, X).</code></pre><p>We get X=randy, X=mike, and X=anne.</p><p>As I mentioned previously, rules don’t have any clear distinction between inputs and outputs. What constitutes an output depends on the query. I can write the query:</p><pre><code><code>?- father(X, Y).</code></code></pre><p><span>And get every possible pair of father and child in the Prolog interpreter’s “database of facts” (so to speak). The word </span><strong>database</strong><span> is quite relevant actually, since as the name </span><em>relation</em><span> implies, logic programming is closer to relational programming (e.g., SQL) than it is to the other paradigms.</span></p><p>But logic programming can be a lot more powerful (and succinct) than crappy SQL. For example, we can keep adding more interesting rules:</p><pre><code>son(X, Y) :- male(X), parent(Y, X).
daughter(X, Y) :- female(X), parent(Y, X).

sister(X, Y) :- daughter(X, P), parent(P, Y), X \= Y.
brother(X, Y) :- son(X, P), parent(P, Y), X \= Y.

aunt(X, Y) :- sister(X, P), parent(P, Y).
uncle(X, Y) :- brother(X, P), parent(P, Y).</code></pre><p><span>These should hopefully be pretty obvious. Notice how we can introduce new variables in the body of the rules, like P above. Prolog uses </span><a href="https://en.wikipedia.org/wiki/Unification_(computer_science)" rel="">unification</a><span> to link variables together, the same process used by type inference.</span></p><p><span>The real power comes from </span><em>recursion</em><span>:</span></p><pre><code>ancestor(X,Y) :- parent(X,Y).
ancestor(X,Y) :- parent(X,Z), ancestor(Z,Y).</code></pre><p>The above is similar to how you do pattern matching in Haskell, in case you’re familiar with that. We can also, for example, add some special cases inspired by the creation myth of Abrahamic religions:</p><pre><code>ancestor(adam, X) :- male(X); female(X).
ancestor(eve, X) :- male(X); female(X).</code></pre><p>If we declare adam as male, then we end up with adam as being an ancestor of adam, which is pretty funny (but also pretty easy to fix).</p><p>Well, I could go over how to implement a Prolog interpreter, but honestly I don’t think you should. Prolog is honestly kind of jank, and I’m not talking about good vintage jank like C.</p><p><span>The main issue is that Prolog is not truly declarative; how you write the rules has a major impact on how the interpreter behaves. You might end up with repeated answers for a query or it might enter an infinite loop. Prolog also allows IO, so the order in which things get executed is critical. It’s </span><a href="https://en.wikipedia.org/wiki/Turing_completeness" rel="">Turing-complete</a><span>, for better or worse.</span></p><p><span>If you really want to implement Prolog specifically, you have to follow its execution semantics, which are based on </span><a href="https://en.wikipedia.org/wiki/SLD_resolution" rel="">SLD resolution</a><span> using depth-first search and backtracking. Prolog programs depend on the specific order in which rules get executed, so you have to perform the search the same way as all the other Prolog implementations do.</span></p><p>But we don’t need Turing-complete Prolog. We already have whatever Turing-complete, multi-paradigm programming language we’re using on a daily basis, we just need to power it up with logic programming.</p><p><span>Most people would do this by implementing </span><a href="https://en.wikipedia.org/wiki/MiniKanren" rel="">miniKanren</a><span>, another logic programming language that is specifically designed to be embedded into a host language, originally Scheme. A later developed simplified core, </span><a href="http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf" rel="">microKanren</a><span>, is so small it can be implemented in 39 lines of Scheme code without any macros.</span></p><p>But I am not a big fan of the miniKanren family. Its design is very functional, which has its advantages, but to me the “database” aspect is important. Unlike Prolog, where facts can be added and removed while the program is running, in miniKanren you set up the universe of facts you care about each time you make a query.</p><p><span>This results in a very clean implementation</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-6-165727931" href="https://btmc.substack.com/p/implementing-logic-programming#footnote-6-165727931" target="_self" rel="">6</a></span><span>, but it leaves a lot of performance on the table. To me, maintaining a stateful database of facts is a core part of the job. That’s what we’re really doing: implementing a fancy database. You can of course bolt on a stateful fact database to a miniKanren implementation, but it’s not how miniKanren is meant to work.</span></p><p><span>Instead, we’ll turn our attention to </span><a href="https://en.wikipedia.org/wiki/Datalog" rel="">Datalog</a><span>, a subset of prolog that is </span><em>not</em><span> Turing-complete. You can’t use Datalog to develop complete applications, but it sure is great at modeling relationships. In fact, I wish it would replace SQL as the language of choice for databases</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-7-165727931" href="https://btmc.substack.com/p/implementing-logic-programming#footnote-7-165727931" target="_self" rel="">7</a></span><span>. SQL isn’t even a good </span><a href="https://en.wikipedia.org/wiki/Relational_model" rel="">relational language</a><span>, and logic programming is just on another level entirely</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-8-165727931" href="https://btmc.substack.com/p/implementing-logic-programming#footnote-8-165727931" target="_self" rel="">8</a></span><span>.</span></p><p>Since Datalog is a subset of Prolog, we could just implement the same algorithm we’d use for a Prolog interpreter and it would work, but the lack of Turing-completeness gives us a lot of room for maneuver. </p><p><span>For one, techniques from </span><a href="https://en.wikipedia.org/wiki/Database_engine" rel="">databases</a><span> are applicable: B-trees, query optimization, index selection, etc. Datalog is also very amenable to </span><a href="https://en.wikipedia.org/wiki/Partial_evaluation" rel="">partial evaluation</a><span>, as employed by the highly optimized </span><a href="https://souffle-lang.github.io/translate" rel="">Soufflé</a><span> dialect.</span></p><p><span>Here we’ll keep it simple and implement what I think is the most basic algorithm for interpreting Datalog: </span><a href="https://en.wikipedia.org/wiki/Datalog#Na%C3%AFve_evaluation" rel="">Naïve Evaluation</a><span>. It’s a simple bottom-up fixpoint algorithm that repeatedly applies each rule until no new facts can be derived. We’ll also abuse operator overloading to make the code </span><em>look</em><span> sort of like Datalog.</span></p><p>We’ll use Python to keep things as simple as possible. The first thing we need is some way to represent variables, values and usages of a predicate (that we’ll call atoms):</p><pre><code>class Variable:
    def __init__(self, name: str):
        self.name = name
    
    def __repr__(self) -&gt; str:
        return self.name

Value = bool | int | float | str
Term = Variable | Value

class Atom:
    def __init__(self, predicate: str, terms: Tuple[Term, ...]) -&gt; None:
        self.predicate = predicate
        self.terms = terms</code></pre><p><span>This Atom class is just used to model a predicate usage like </span><code>father(X, bill</code><span>) and such, either with a variable or a value in each argument. Not sure what else to call it. Note that this is different from the meaning of an atom in Prolog.</span></p><p>Also notice that we cannot pass predicates as arguments to other predicates. This is allowed in Prolog but not in Datalog. Datalog has some restrictions to ensure it always terminates (they can be loosened, but we’ll stick to the basics):</p><ul><li><p>negation is not allowed.</p></li><li><p><span>complex terms as arguments of predicates, e.g., </span><code>p(f(x), y)</code><span>, are not allowed.</span></p></li><li><p>every variable that appears in the head of a clause must also appear in an atom within the body of the clause.</p></li></ul><p>For values we only allow a few builtin Python types to keep things simple. With variables, values and atoms in place, we move on to predicates:</p><pre><code>Fact = Tuple[Value, ...]

class Rule:
    def __init__(self, head: Atom, body: Tuple[Atom, ...]):
        assert len(body) &gt;= 1
        self.head = head
        self.body = body

class Predicate:
    def __init__(self, name: str, arity: int):
        self.name = name
        self.arity = arity
        self.facts: Set[Fact] = set()
        self.rules: List[Rule] = []</code></pre><p>We split clauses directly into separate facts and rules. A fact is just a row of values belonging to a predicate. A rule has a head (left side of the :- operator), which is just a single atom, and a body with one or more atoms (right side of the :- operator). Arity is the expected number of arguments.</p><p>To manage our “database” we’ll create a class simply called Datalog:</p><pre><code>class Datalog:
    def __init__(self) -&gt; None:
        self.variables: Dict[str, Variable] = {}
        self.predicates: Dict[str, Predicate] = {}

    def variable(self, name: str) -&gt; Variable:
        assert name not in self.variables
        v = Variable(name)
        self.variables[name] = v
        return v

    def predicate(self, name: str, arity: int) -&gt; Predicate:
        assert name not in self.predicates
        c = Predicate(name, arity)
        self.predicates[name] = c
        return c</code></pre><p><span>We also store the variables here to make the API a bit nicer and to allow us to safely use </span><a href="https://en.wikipedia.org/wiki/Identity_(object-oriented_programming)" rel="">reference equality</a><span> later on for better performance. We could do the same with string values (turning them into symbols) but I leave that as an exercise for the reader.</span></p><p>Next, we need a way to create atoms and to add facts and rules to a predicate. We’ll add a bit of nasty operator overloading to the Predicate class to achieve this:</p><pre><code>def __getitem__(self, terms: Term | Tuple[Term, ...]) -&gt; Atom:
    # make sure we always work with a tuple
    terms = terms if isinstance(terms, tuple) else (terms,)
    if len(terms) != self.arity:
        raise ValueError()
    return Atom(self.name, terms)

def __setitem__(self, 
    terms: Term | Tuple[Term, ...], 
    rhs: Atom | Tuple[Atom, ...]) -&gt; None:
    # make sure we always work with a tuple
    terms = terms if isinstance(terms, tuple) else (terms,)
    # if the rhs is the empty tuple, we're adding a fact
    if rhs == ():
        # NOTE: facts cannot contain variables, add a check!
        self.facts.add(cast(Tuple[Value, ...], terms))
    elif isinstance(rhs, tuple):
        self.rules.append(Rule(Atom(self.name, terms), rhs))
    else:
        self.rules.append(Rule(Atom(self.name, terms), (rhs,)))</code></pre><p>What we’ve done above allows us to write the following:</p><pre><code>dl = Datalog()

parent = dl.predicate('parent', 2)
ancestor = dl.predicate('ancestor', 2)

X, Y, Z = dl.variable('X'), dl.variable('Y'), dl.variable('Z')

parent['alice', 'bob'] = ()
parent['bob', 'carol'] = ()
ancestor[X, Y] = parent[X, Y]
ancestor[X, Y] = parent[X, Z], ancestor[Z, Y]</code></pre><p><span>We have square brackets instead of round, = instead of :-, and need to write = () to declare a fact, but it sure looks a lot like Datalog. Even the = () is actually correct because </span><code>pred(foo, bar).</code><span> in Prolog and Datalog is just syntax sugar for:</span></p><pre><code>pred(foo, bar) :- .</code></pre><p>So all we’re missing is that little bit of syntax sugar.</p><p>We can model Datalog programs now, but we cannot perform any queries nor infer any new information. First thing we’ll need is an extra datastructure:</p><pre><code>Substitution = dict[Variable, Value]</code></pre><p><span>Pretty simple, just a mapping of variables to values. We’ll make heavy use of this datastructure soon, but first, the most important method — </span><strong>infer</strong><span>:</span></p><pre><code>def infer(self) -&gt; None:
    while True:
        newly_added_facts: List[Tuple[Predicate, Fact]] = []
        for predicate in self.clauses.values():
            for rule in predicate.rules:
                for sub in self.evaluate(rule.body):
                    fact = tuple(
                        sub[t] if isinstance(t, Variable) 
                        else t for t in rule.head.terms)
                    if fact not in predicate.facts:
                        newly_added_facts.append((predicate, fact))
        if not newly_added_facts:
            break
        for p, f in newly_added_facts:
            p.facts.add(f)</code></pre><p><span>Method </span><strong>infer</strong><span> is the core of our Datalog engine. It implements the fixpoint algorithm that expands rules into new facts. You should call this method each time you manually add a new set of facts and/or rules.</span></p><p><span>Every loop iteration, for each rule, we call another method called </span><strong>evaluate</strong><span>, which lazily outputs all possible substitutions given the body of the rule. Each substitution is then used to create a new fact by replacing every variable with the associated value in the head of the rule (keeping any values already in the head).</span></p><p>If that fact was not already in the list of known facts, then we’ve derived a new fact. Once we’ve gone over every rule, if we found any new facts, we update our fact database and iterate again. If no new facts were derived, we’re done.</p><p><span>Method </span><strong>evaluate</strong><span> is just a wrapper around another method called </span><strong>search</strong><span>:</span></p><pre><code>def evaluate(self, atoms: Sequence[Atom]) -&gt; Iterable[Substitution]:
    return self._search(0, atoms, {})

def search(self, i: int, atoms: Sequence[Atom], 
            sub: Substitution) -&gt; Iterable[Substitution]:
    if i == len(atoms):
        yield sub
        return
    atom = atoms[i]
    for fact in self.clauses[atom.predicate].facts:
        new_sub = sub.copy()
        if unify(atom, fact, new_sub):
           yield from self._search(i + 1, atoms, new_sub)</code></pre><p><span>Method </span><strong>search</strong><span> implements a lazy depth-first search. Its goal is to successfully unify every atom in the body of a rule. To do this, it picks the atom at index ‘i’, and for every fact associated with the corresponding predicate, it tries to unify the atom with the fact. If unification succeeds (meaning we’ve obtained a substitution for every variable in the atom), we recursively call </span><strong>search</strong><span> again, only this time starting at the next index and enforcing the current substitution.</span></p><p>As an example of how it works, consider this rule:</p><pre><code>ancestor[X, Y] = parent[X, Z], ancestor[Z, Y]</code></pre><p>The first atom is parent[X, Z]. These are the known facts of parent:</p><pre><code>parent['bob', 'carol']
parent['alice', 'bob']</code></pre><p>We start with the first fact. We unify X=’bob’ and Z=’carol’. We then call search recursively, moving to the next atom, ancestor[Z, Y], with that substitution in hand.</p><p>From the other rule of ancestor:</p><pre><code><code>ancestor[X, Y] = parent[X, Y]</code></code></pre><p>We probably already derived that every parent is an ancestor, so the current facts of ancestor are also:</p><pre><code><code>ancestor['bob', 'carol']
ancestor['alice', 'bob']</code></code></pre><p>We try to unify with the first fact and fail, because the substitution enforces Z=’carol’ which cannot unify with ‘bob’. The second fact also fails to unify, so this is a dead end.</p><p>That branch of the recursion dies and we’re back trying to unify the first atom. Now we unify with the second fact, obtaining the substitution X=’alice’ and Z=’bob’. We recurse again with that substitution.</p><p>We try to unify ancestor[Z, Y] with its first fact, and we succeed, because we can set Z=’bob’ and Y=’carol’. We managed to do a complete substitution, so we yield it.</p><p><span>The function </span><strong>unify</strong><span>, used within </span><strong>search</strong><span>, is pretty simple:</span></p><pre><code>def unify(atom: Atom, fact: Fact, substitution: Substitution) -&gt; bool:
    for t, v in zip(atom.terms, fact):
        if isinstance(t, Variable):
            if t in substitution and substitution[t] != v:
                return False
            substitution[t] = v
        elif t != v:
            return False
    return True</code></pre><p>It takes in an atom, a fact, and a substitution, and pairs up each term in the atom with the corresponding value in the fact at the same position. If the term is a variable, we do the following:</p><ul><li><p>If the variable is in the substitution, then we check if the value associated with it and the value in the fact match. If they don’t, unification fails.</p></li><li><p>If the variable isn’t in the substitution, then we update the substitution by mapping the variable to the value in the fact.</p></li></ul><p>If instead of a variable we see a value, then we just compare that value with the value in the fact directly.</p><p>To finish up our little interpreter, we only need one more method, and it’s a trivial one:</p><pre><code>def query(self, *atoms: Atom) -&gt; Iterable[Substitution]:
    return self.evaluate(atoms)</code></pre><p>Yup, query is just evaluate, but variadic to make the API a bit nicer. With that, we can finally write our tiny Datalog program:</p><pre><code>dl = Datalog()

parent = dl.predicate('parent', 2)
ancestor = dl.predicate('ancestor', 2)

X, Y, Z = dl.variable('X'), dl.variable('Y'), dl.variable('Z')

parent['alice', 'bob'] = ()
parent['bob', 'carol'] = ()
ancestor[X, Y] = parent[X, Y]
ancestor[X, Y] = parent[X, Z], ancestor[Z, Y]

dl.infer()

for result in dl.query(ancestor[X, 'carol']):
    print(result)</code></pre><p>Which outputs (in any order):</p><pre><code>{X: 'alice'}
{X: 'bob'}</code></pre><p>Well that ended up a lot longer than I expected, but the actual implementation is pretty small all things considered. It’s not efficient, but some small optimizations go a long way, for example switching to semi-naïve evaluation. </p><p>The main difference is that instead of always going over every fact in each iteration of the loop, we only apply each rule to facts we derived in the previous iteration.</p><p>Another optimization is dynamically sorting the atoms in the body of a rule based on the number of values each atom contains and the number of associated facts, to try and cause search branches to fail as soon as possible.</p><p>We could also add support for arithmetic and composite atoms (like lists), which introduce some challenges if we wish to stay “Turing-incomplete”.</p><p>Either way, you now have a new tool in your arsenal. No more horrible object graphs desperately trying and failing to model relations, you can now simply use the best paradigm for the job.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple's Liquid Glass is prep work for AR interfaces, not just a design refresh (206 pts)]]></title>
            <link>https://omc345.substack.com/p/from-skeuomorphic-to-liquid-glass</link>
            <guid>44271630</guid>
            <pubDate>Fri, 13 Jun 2025 19:44:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://omc345.substack.com/p/from-skeuomorphic-to-liquid-glass">https://omc345.substack.com/p/from-skeuomorphic-to-liquid-glass</a>, See on <a href="https://news.ycombinator.com/item?id=44271630">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>Apple's introduction of Liquid Glass at WWDC 2025 represents far more than a visual refresh. It's a calculated strategic repositioning that reveals how the company thinks about the next decade of human-computer interaction. While the design community debates readability and the tech press focuses on the absence of major AI announcements, Apple is quietly executing a playbook that should feel familiar to anyone who remembers the iPhone's introduction: prepare users for a paradigm shift by making the transition feel inevitable.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg" width="1456" height="646" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:646,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:70738,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://omc345.substack.com/i/165857187?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e2f7588-0138-4dd4-9762-4b2987cc095b_2048x908.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>This isn't Apple's first rodeo with controversial design changes. The move from skeuomorphic design in iOS 6 to the stark minimalism of iOS 7 sparked similar debates about usability and aesthetic merit. Critics lambasted the "too thin" fonts and complained about reduced affordances (the visual cues that tell users what they can interact with). Yet within two years, the entire industry had adopted flat design principles, from Google's Material Design to Microsoft's Metro language.</p><p>The pattern is instructive: Apple doesn't just change design for aesthetic reasons. Each major visual overhaul has preceded a fundamental shift in how we interact with technology. Skeuomorphic design made sense when touchscreens were new and users needed familiar metaphors (buttons that looked like physical buttons, bookshelves that looked like real shelves). Flat design emerged when users had internalized touch interactions and no longer needed heavy visual scaffolding.</p><p>Now, with Liquid Glass, Apple is preparing users for a world where the screen itself becomes less relevant.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg" width="1456" height="819" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:819,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:822860,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://omc345.substack.com/i/165857187?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6d35776c-72b1-4cbb-be69-09eb0efd7fbf_4096x2305.jpeg 1456w" sizes="100vw"></picture></div></a></figure></div><p>The timing isn't coincidental. Apple explicitly credits visionOS as the inspiration for Liquid Glass, and for good reason. In augmented reality, interface elements must coexist with the physical world. They can't be opaque rectangles that block your view. They need to be translucent, layered, and contextually aware. As Alan Dye noted during the visionOS introduction, "every element was crafted to have a sense of physicality: they have dimension, respond dynamically to light, and cast shadows."</p><p>This isn't just about making interfaces prettier. In AR, visual affordances work differently. A button that casts realistic shadows and responds to virtual lighting feels more "real" when floating in your living room than a flat, colored rectangle. The glass metaphor makes intuitive sense when you're literally looking through a device at the world around you.</p><p>By introducing these concepts on traditional screens first, Apple is doing what it does best: making the unfamiliar feel familiar. When users eventually put on AR glasses, the interface paradigms won't feel foreign. The translucent panels, the layered depth, the environmental responsiveness will all feel like a natural extension of what they already know from their iPhone.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg" width="1179" height="879" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:879,&quot;width&quot;:1179,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:160126,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://omc345.substack.com/i/165857187?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F25b2b8d2-5e6e-40e1-b7a2-fa64e291d548_1179x879.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>This design shift also plays to Apple's core strategic advantage: vertical integration. Liquid Glass isn't just a visual flourish. It's a technical showcase that demonstrates the tight coupling between Apple's hardware and software. The real-time blurs, dynamic transparency effects, and contextual lighting require serious GPU horsepower and optimized rendering pipelines. It's the kind of feature that runs silky smooth on an iPhone with Apple Silicon but might stutter on competing hardware.</p><p>This creates what economists call a "complementary good" effect. The new design language makes Apple's hardware more valuable by showcasing capabilities that competitors can't easily match. It's similar to how Retina displays created a virtuous cycle: high-resolution screens made iOS look better, which drove demand for Apple devices, which justified the cost of those expensive displays.</p><p>The unified design language across all Apple platforms (from Apple TV to Vision Pro) reinforces this advantage. Developers can design once and trust that the visual language will work consistently across the ecosystem. Users experience cognitive continuity when switching between devices. These network effects are incredibly difficult for competitors to replicate without controlling both hardware and software.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png" width="980" height="551" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:551,&quot;width&quot;:980,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:442181,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://omc345.substack.com/i/165857187?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" title="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3aa6b9b8-610f-40d2-807e-f10e2ea8d4dd_980x551.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>While the tech press fixated on Apple's relatively quiet AI story at WWDC 2025, the company was executing a more subtle strategy. Rather than engaging in the current LLM arms race (where it's demonstrably behind), Apple doubled down on what it does best: creating compelling user experiences through design and integration.</p><p>This mirrors Apple's historical approach to new technologies. They're rarely first to market, but they're often first to market with a polished, integrated experience. They didn't invent the smartphone, the tablet, or the smartwatch, but they defined what those categories could be.</p><p>The same pattern appears to be playing out with AI. While competitors race to stuff large language models into everything, Apple is taking a more measured approach. The Liquid Glass design language actually creates opportunities for more contextual AI interactions. Imagine smart suggestions that appear as translucent overlays, or AI-generated content that floats naturally over your existing workflow. The glass metaphor provides a visual framework for AI that feels ambient rather than intrusive.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png" width="1320" height="608" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:608,&quot;width&quot;:1320,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:345813,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://omc345.substack.com/i/165857187?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d313e7d-5fb3-407e-9ac4-49158b70ce8e_1500x750.webp&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fddcb558b-acc2-48d6-b9f3-bf7086a00b8e_1320x608.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Of course, every design decision involves tradeoffs. Early feedback on Liquid Glass has raised legitimate concerns about readability and cognitive load. Translucent interfaces can reduce contrast and make text harder to read. The "glass" metaphor can be confusing on a touchscreen, where users directly manipulate elements rather than looking through them.</p><p>But Apple has navigated these challenges before. iOS 7's initial release had similar problems: ultra-thin fonts that were hard to read, blue text links that didn't look clickable, animations that made some users motion sick. Apple responded with gradual refinements: thicker fonts, higher contrast, optional accessibility settings, and more obvious interactive elements.</p><p>The same evolution will likely happen with Liquid Glass. Apple has historically been responsive to accessibility concerns, and they've already provided settings like "Reduce Transparency" and "Increase Contrast" in previous iOS versions. The company can afford to start with a bold vision and refine based on feedback, especially when that vision serves larger strategic goals.</p><p>Perhaps most importantly, Liquid Glass creates what Paul Graham would recognize as a network effect in design language. When Apple changes direction, it doesn't just affect Apple. It influences the entire industry. Developers building for iOS will adopt the new design patterns. Designers at other companies will create similar aesthetics to stay current. Web designers will implement glassmorphism effects to match user expectations set by their phones.</p><p>This industry influence multiplies Apple's strategic advantage. Even users of non-Apple devices will encounter Apple-influenced design patterns, making the eventual transition to Apple products feel more natural. It's a form of cultural lock-in that extends far beyond Apple's direct ecosystem.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg" width="720" height="536" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:536,&quot;width&quot;:720,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:55343,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://omc345.substack.com/i/165857187?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7f6f724b-13d3-4944-91ca-f451ea4df9ea_720x960.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" title="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e325ea9-76e4-4fd1-bc2f-6cbbce5cb7d9_720x536.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>The introduction of Liquid Glass reveals Apple's theory about the future of computing: we're moving toward ambient, spatial interfaces that blend digital and physical reality. Touch will remain important, but it won't be the primary interaction model forever. Voice, gesture, and contextual awareness will play larger roles.</p><p>By establishing the visual and conceptual framework now, Apple is preparing both users and developers for this transition. When lightweight AR glasses eventually become mainstream (whether in two years or ten), the interface paradigms will already feel familiar.</p><p>This is strategic design thinking at its finest: using aesthetic choices to enable future product categories while strengthening current competitive advantages. It's the kind of long-term planning that has made Apple one of the world's most valuable companies, and it suggests they're not content to rest on the iPhone's success.</p><p>The real question isn't whether Liquid Glass will succeed aesthetically. Apple's design changes always face initial resistance. The question is whether Apple can execute the broader vision it represents: a seamless transition from touch-first to spatial-first computing, with Apple's integrated ecosystem at the center.</p><p>If history is any guide, we'll all be using glass-like interfaces within five years, wondering how we ever lived without them.</p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Self-Adapting Language Models (121 pts)]]></title>
            <link>https://arxiv.org/abs/2506.10943</link>
            <guid>44271284</guid>
            <pubDate>Fri, 13 Jun 2025 19:03:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2506.10943">https://arxiv.org/abs/2506.10943</a>, See on <a href="https://news.ycombinator.com/item?id=44271284">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2506.10943">View PDF</a>
    <a href="https://arxiv.org/html/2506.10943v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>Large language models (LLMs) are powerful but static; they lack mechanisms to adapt their weights in response to new tasks, knowledge, or examples. We introduce Self-Adapting LLMs (SEAL), a framework that enables LLMs to self-adapt by generating their own finetuning data and update directives. Given a new input, the model produces a self-edit-a generation that may restructure the information in different ways, specify optimization hyperparameters, or invoke tools for data augmentation and gradient-based updates. Through supervised finetuning (SFT), these self-edits result in persistent weight updates, enabling lasting adaptation. To train the model to produce effective self-edits, we use a reinforcement learning loop with the downstream performance of the updated model as the reward signal. Unlike prior approaches that rely on separate adaptation modules or auxiliary networks, SEAL directly uses the model's own generation to control its adaptation process. Experiments on knowledge incorporation and few-shot generalization show that SEAL is a promising step toward language models capable of self-directed adaptation. Our website and code is available at <a href="https://jyopari.github.io/posts/seal" rel="external noopener nofollow">this https URL</a>.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Jyothish Pari [<a href="https://arxiv.org/show-email/3f560f7f/2506.10943" rel="nofollow">view email</a>]      <br>    <strong>[v1]</strong>
        Thu, 12 Jun 2025 17:48:13 UTC (1,999 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I convinced HP's board to buy Palm and watched them kill it (495 pts)]]></title>
            <link>https://philmckinney.substack.com/p/i-convinced-hps-board-to-buy-palm</link>
            <guid>44270709</guid>
            <pubDate>Fri, 13 Jun 2025 18:03:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://philmckinney.substack.com/p/i-convinced-hps-board-to-buy-palm">https://philmckinney.substack.com/p/i-convinced-hps-board-to-buy-palm</a>, See on <a href="https://news.ycombinator.com/item?id=44270709">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg" width="1456" height="1048" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/bd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1048,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:456746,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://philmckinney.substack.com/i/165406292?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd57a95d-b779-4344-b65d-ec9cf506f3d3_1456x1048.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>I've never shared this story publicly before—how I convinced HP's board to acquire Palm for $1.2 billion, then watched as they destroyed it while I was confined to bed recovering from surgery.</p><p>This isn't just another tech failure analysis. I was the HP Chief Technology Officer who led the technical due diligence on Palm. I presented to Mark Hurd and the HP board, making the case for moving forward with the acquisition. I believed we were buying the future of mobile computing.</p><p>Then I watched it all fall apart from the worst possible vantage point—lying in bed during a eight-week recovery, helpless to intervene as everything I'd worked to build got dismantled in real time.</p><p>This is the story of how smart people destroyed $1.2 billion in innovation value in just 49 days. It's about the brutal personal cost of being blamed for a disaster that happened while you're recovering from surgery. And it's about why I still believe in HP despite everything that went wrong.</p><p>In early 2010, HP was desperately seeking mobile platform capabilities. We knew the computing world was shifting toward mobile, and our traditional PC business faced real threats from tablets and smartphones. We needed to be there.</p><p>Palm was struggling financially, but they possessed something genuinely special in WebOS—true multitasking when iOS and Android couldn't handle it, elegant user interface design, and breakthrough technology architecture buried inside a failing business.</p><p>As CTO, I led the technical due diligence process. I spent weeks embedded with the Palm engineering team in Sunnyvale, crawling through their code base, understanding their platform architecture, and assessing the quality of their technical talent. The deeper I dug, the more convinced I became that this wasn't just another mobile operating system.</p><p>My conclusion was unambiguous: WebOS represented a breakthrough platform technology that could differentiate HP in the emerging mobile computing market. The technology was solid. The team was exceptional. The platform vision was compelling.</p><p>I presented this assessment to Mark Hurd and the board with complete conviction. This wasn't about buying a struggling phone company—it was our strategic entry into the future of computing platforms. I believed every word of my presentation because I had seen the technology's potential firsthand.</p><p>The board agreed with my recommendation. In April 2010, we announced the $1.2 billion acquisition. I felt proud of the technical work we'd done and excited about what we could build together.</p><p>After the acquisition closed in July 2010, my role shifted to helping the Palm team leverage HP's massive capabilities. We had global manufacturing scale, established supply chain relationships, and a consumer and enterprise customer base that Palm had never been able to access as an independent company.</p><p>I spent countless hours working with the Palm leadership team, mapping out integration plans and identifying strategic synergies. We discussed how WebOS could expand beyond smartphones into tablets, potentially integrate with HP's PC platforms, and even find applications in our printer ecosystem.</p><p>Everything seemed aligned for success. </p><p>Then life intervened in the worst possible way.</p><p>Everything seemed aligned for success until the first disaster struck. In August 2010—just one month after we closed the Palm acquisition—Mark Hurd was forced to resign as CEO. The board replaced him with Leo Apotheker, former CEO of SAP, who brought a completely different strategic vision to HP.</p><p>Apotheker's plan was radical: transform HP from a hardware company into a software and services company, similar to IBM's transformation years earlier. He wanted to exit or minimize HP's hardware businesses—PCs, printers, and by extension, mobile devices like the TouchPad. In his mind, WebOS represented exactly the kind of hardware distraction he wanted to eliminate.</p><p>I assumed the strategic rationale for the acquisition remained sound despite the leadership change. The technology hadn't changed. The market opportunity was still there. But I was wrong about the continuity of strategic vision.</p><p>Then, in late June 2011, life intervened in the worst possible way. I faced a medical emergency requiring immediate surgery and a eight-week recovery period confined to bed. You don't schedule medical emergencies—and I had to step away from my integration work with Palm just as the most critical decisions were being made about the platform's future.</p><p>While I was recovering at home, unable to participate in meetings or provide strategic input, the entire mobile computing landscape at HP began to unravel.</p><p>On July 1, 2011, HP launched the TouchPad tablet running WebOS 3.0. I watched the launch from my bed, hoping to see the culmination of all our technical work and strategic planning. Instead, I witnessed the beginning of one of the fastest product failures in tech history.</p><p>The launch was botched from the start. HP priced the TouchPad at $499 to compete directly with the iPad, but without the app ecosystem or marketing muscle to justify that premium. The device felt rushed to market, lacking the polish that could have helped it compete. Consumer reviews were mixed at best.</p><p>Initial sales numbers were devastating: HP sold only 25,000 TouchPads out of 270,000 units shipped to retailers. While Apple was selling 9 million iPads that same quarter, TouchPads were gathering dust on store shelves.</p><p>Then came the announcement that changed everything.</p><p>On August 18, 2011—just 49 days after the TouchPad launch—HP announced it would discontinue all WebOS devices immediately. I was still confined to bed, watching my technical due diligence work and strategic recommendations get dismantled in real time through news reports and industry analysis.</p><p>Forty-nine days. That's not enough time to fix launch problems, build developer momentum, or establish retail partnerships. Platform businesses typically need 18-24 months to demonstrate real market traction. But Leo Apotheker wasn't thinking about platform timelines—he was thinking about his software transformation strategy.</p><p>The most painful part wasn't just the speed of the decision, but learning that Apotheker had made the discontinuation choice without even informing the Palm team beforehand. According to multiple reports, he seemed eager to kill off a product that didn't fit his vision of HP as a software company.</p><p>I felt helpless. Betrayed. And somehow, I was responsible for not being there to fight for what I knew was breakthrough technology.</p><p>My first day back at HP will be burned into my memory forever. I was simply trying to grab lunch in the cafeteria at HP Labs when I found myself surrounded by what felt like the entire technical staff. They weren't there to welcome me back—they were there to hold me accountable.</p><p>The scene was intense and unambiguous. Engineers and researchers who had watched the WebOS disaster unfold were pointing fingers and raising voices. Their message was crystal clear and brutal: "You can never take leave again—EVER!"</p><p>Their exact words still echo in my mind: "The CEO and board need adult supervision."</p><p>Think about the implications of that statement. HP's own technical staff, the people closest to our innovation work, believed that senior leadership couldn't be trusted to make sound technology decisions without someone there to provide oversight and guidance.</p><p>They weren't wrong. The numbers proved it in the most painful way possible.</p><p>But hearing it directed at me personally—being blamed for not providing "adult supervision" while I was recovering from surgery—was devastating. I had recommended the acquisition based on solid technical analysis. I had worked to integrate the teams and technology. But because I wasn't there during the critical 49 days when the decision was made to kill WebOS, somehow the failure became my responsibility.</p><p>Standing in that cafeteria, listening to my colleagues blame me for not being there to prevent the disaster, I realized the fundamental problem wasn't my absence. It was a systematic mismatch between Leo Apotheker's experience and the role he was asked to fill.</p><p>SAP's annual revenue while Leo served as its CEO was approximately $15 billion. The HP board hired a CEO whose largest organizational experience was running a company smaller than HP's smallest division. Based purely on revenue management experience, Apotheker wouldn't have qualified to be a Executive Vice President at HP, yet the board put him in charge of a $125 billion technology company.</p><p>This wasn't just a cultural mismatch—it was a fundamental scale and complexity mismatch that should have been immediately obvious to any functioning board. But nobody asked the right questions about whether Leo's enterprise software background prepared him to evaluate consumer platform technologies such as WebOS, and I wasn't there to provide what my colleagues called "adult supervision."</p><p>When I decided to “retire” from HP, they offered me a separation bonus—a significant financial package that would have made my transition easier. But there was a catch: accepting it would have restricted what I could say publicly about my experiences at the company.</p><p>I refused.</p><p>I've spent my career believing that the truth about innovation decisions—both successes and failures—should be shared so others can learn from them. Taking money to stay quiet about systematic thinking errors that destroyed breakthrough technology felt like betraying everything I believed about how innovation should work.</p><p>The decision cost me financially, but it preserved my ability to tell stories like this one. Stories that might help other leaders avoid similar disasters.</p><p><em>Disclaimer: The following reflects my personal investment decisions and relationship with HP leadership. This is not financial advice, and you should consult with a qualified financial advisor before making any investment decisions.</em></p><p>Here's what might surprise you: I haven't sold a single HP share since leaving the company. Despite watching the WebOS disaster unfold, despite being blamed for not preventing it, despite everything that went wrong during that period, I still believe in HP as an organization.</p><p>I take every opportunity to remind Enrique Lores, HP's current CEO, and Antonio Neri, CEO of HPE, about this fact. Both men were peers of mine when I was at HP. We worked closely together as part of the leadership team that made HP #1 in market share for consumer and commercial PCs &amp; laptops, printers, and servers—helping drive HP to Fortune #11 during that period. They are natural leaders who understand HP's culture and values from the inside, having come up through the organization rather than being parachuted in from outside.</p><p>Enrique and Antonio represent what HP is at its best: technical excellence combined with strategic thinking, innovation grounded in operational discipline, and leadership that understands both the technology and the business. They're the kind of leaders who would have asked different questions about WebOS, who would have applied better decision frameworks to evaluate platform technology under uncertainty.</p><p>My continued shareholding isn't just a matter of financial confidence—it's a statement of faith in what HP can become when the right leadership applies systematic thinking to innovation decisions.</p><p>The WebOS failure taught me something fundamental about innovation decisions that I hadn't fully understood before: intelligence and good intentions don't predict decision quality. Systematic thinking frameworks do.</p><p>Leo Apotheker wasn't stupid. The HP board wasn't incompetent. The financial analysts weren't malicious. But they all used flawed thinking frameworks to evaluate breakthrough technology under pressure, and those systematic errors destroyed $1.2 billion in innovation value.</p><p>The thinking errors were predictable and preventable:</p><p><strong>Solving the wrong problem.</strong><span> Apotheker was asking "How do I transform HP into a software company?" when the right question was "How do we build sustainable competitive advantage in mobile computing platforms?" His entire strategic framework was about exiting hardware businesses, not building platform advantages.</span></p><p><strong>Identity-driven decision making.</strong><span> His background at SAP shaped his entire approach to HP's portfolio. He saw WebOS as a hardware distraction from his software transformation vision.</span></p><p><strong>Tunnel vision under pressure.</strong><span> During this same period, he became laser-focused on acquiring Autonomy for $10.3 billion—a software company that fit his transformation vision perfectly. Everything else, including breakthrough mobile technology, felt like a distraction from this software-focused strategy. That Autonomy acquisition later required more than an $8 billion write-down, but at the time it consumed all of leadership's attention.</span></p><p><strong>Timeline compression under stress.</strong><span> Forty-nine days isn't enough time to fairly evaluate platform technology, but pressure to show decisive leadership compressed the decision timeline artificially.</span></p><p>These errors weren't unique to HP or to Apotheker. I've seen identical patterns across multiple companies and industries. Brilliant engineers kill breakthrough prototypes because they don't fit current product roadmaps. Marketing teams reject game-changing concepts because they can't explain them using existing frameworks. CEOs avoid platform investments because the path to profitability isn't immediately clear.</p><p>Lying in bed during those eight weeks, watching the WebOS disaster unfold while being powerless to intervene, I first performed an autopsy of how we got to such a bad decision. Was there a framework that could have led to better decisions? That analysis eventually became a systematic approach to innovation decisions that could prevent these predictable errors.</p><p>The framework that emerged from this painful experience is something I call DECIDE—a systematic thinking process specifically designed for innovation decisions under uncertainty:</p><p><strong>D</strong><span>efine the real decision (not just the obvious question)</span><br><strong>E</strong><span>xamine your thinking process for cognitive biases</span><br><strong>C</strong><span>hallenge your assumptions systematically</span><br><strong>I</strong><span>dentify decision traps specific to innovation contexts</span><br><strong>D</strong><span>esign multiple genuinely different options</span><br><strong>E</strong><span>valuate with evidence frameworks appropriate for breakthrough technology</span></p><p data-attrs="{&quot;url&quot;:&quot;https://open.substack.com/pub/philmckinney/p/download-your-decide-framework-how?r=3rtha&amp;utm_campaign=post&amp;utm_medium=web&amp;showWelcomeOnShare=true&quot;,&quot;text&quot;:&quot;Download the DECIDE Framework &amp; Toolkit&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://open.substack.com/pub/philmckinney/p/download-your-decide-framework-how?r=3rtha&amp;utm_campaign=post&amp;utm_medium=web&amp;showWelcomeOnShare=true" rel=""><span>Download the DECIDE Framework &amp; Toolkit</span></a></p><p>This isn't theoretical academic stuff. It's a practical framework born from watching smart people make systematic thinking errors that destroyed breakthrough technology value. It's designed to prevent the specific cognitive errors that killed WebOS and continue to kill innovation investments across industries.</p><p><span>Next Wednesday (6/11/2025) , I'll walk you through exactly </span><a href="https://youtube.com/playlist?list=PLvB-SRr-lUbNSRQvUJBiHebPhEmQcNagU&amp;si=ZZHoccy8x6Ic5dDg" rel="">how to apply the DECIDE framework</a><span> to your current innovation decisions. I'll show you the specific tools and questions that can help you avoid the thinking traps that consistently destroy breakthrough technology value.</span></p><p data-attrs="{&quot;url&quot;:&quot;https://youtube.com/playlist?list=PLvB-SRr-lUbNSRQvUJBiHebPhEmQcNagU&amp;si=ZZHoccy8x6Ic5dDg&quot;,&quot;text&quot;:&quot;Watch The Video on DECIDE Framework&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://youtube.com/playlist?list=PLvB-SRr-lUbNSRQvUJBiHebPhEmQcNagU&amp;si=ZZHoccy8x6Ic5dDg" rel=""><span>Watch The Video on DECIDE Framework</span></a></p><p>Sometimes I wonder what would have happened if I hadn't needed surgery during those critical weeks. Would I have been able to convince the leadership team to give WebOS more time? Could I have provided the "adult supervision" my colleagues said was missing? Would better thinking frameworks have changed the outcome?</p><p>I'll never know for certain. But I do know this: the technology was sound, the market opportunity was real, and the decision to kill WebOS after 49 days was based on systematic thinking errors that could have been prevented with better decision frameworks.</p><p>But here's the final piece of the story: Leo Apotheker was fired on September 22, 2011—just 35 days after shutting down WebOS and eleven months after taking over as CEO. The board finally recognized the systematic thinking errors that had destroyed billions in value, but it was too late for WebOS.</p><p>The human cost of these decisions goes beyond stock prices and quarterly reports. There are real people who believed in breakthrough technology, fought for innovation, and had to watch it get destroyed by preventable thinking errors.</p><p><span>In my case, I announced my retirement from HP on October 31, 2011 via </span><a href="https://www.philmckinney.com/goodbye-hp-2/" rel="">my blog</a><span> (</span><a href="https://www.wired.com/2011/11/hp-phil-mckinny/" rel="">Wired Magazine</a><span>). My last day at HP was December 31, 2011.</span></p><p>WebOS technology eventually found success when LG licensed it for smart TV platforms. The core architecture and UI influenced every subsequent mobile operating system. HP could have owned that platform innovation and the ecosystem value it created.</p><p>What breakthrough technology or innovation opportunity is your team evaluating right now? Before you make any irreversible choices, ask yourself: are you applying systematic thinking frameworks to this decision, or are you relying on intuition and conventional business metrics that might mislead in innovation contexts?</p><p>Because here's what I learned from watching the WebOS disaster unfold while confined to bed, helpless to intervene: when you have breakthrough technology in your hands, the quality of your decision-making process matters more than the quality of your technology.</p><p>Intelligence and good intentions aren't enough. You need systematic frameworks for thinking clearly about innovation decisions under uncertainty.</p><p><span>Wednesday, I'll show you exactly </span><a href="https://youtube.com/playlist?list=PLvB-SRr-lUbNSRQvUJBiHebPhEmQcNagU&amp;si=ZZHoccy8x6Ic5dDg" rel="">how to build and apply those frameworks</a><span>. The tools exist to prevent these disasters. The question is whether you'll use them before it's too late.</span></p><p data-attrs="{&quot;url&quot;:&quot;https://youtube.com/playlist?list=PLvB-SRr-lUbNSRQvUJBiHebPhEmQcNagU&amp;si=ZZHoccy8x6Ic5dDg&quot;,&quot;text&quot;:&quot;How To Apply Decision Framework&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://youtube.com/playlist?list=PLvB-SRr-lUbNSRQvUJBiHebPhEmQcNagU&amp;si=ZZHoccy8x6Ic5dDg" rel=""><span>How To Apply Decision Framework</span></a></p><p><em>What innovation decision is keeping you up at night? Reply and let me know—I read every response and often use reader questions to shape future Studio Notes.</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Luxe Game Engine (152 pts)]]></title>
            <link>https://luxeengine.com/</link>
            <guid>44269270</guid>
            <pubDate>Fri, 13 Jun 2025 15:12:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://luxeengine.com/">https://luxeengine.com/</a>, See on <a href="https://news.ycombinator.com/item?id=44269270">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <article>


        <section>
            
<!--kg-card-begin: html-->
    
<!--kg-card-end: html-->

<!--kg-card-begin: html-->

<!--kg-card-end: html-->
<figure><img src="https://luxeengine.com/content/images/2025/01/tutorial-play.png" alt="" loading="lazy" width="1280" height="720" srcset="https://luxeengine.com/content/images/size/w600/2025/01/tutorial-play.png 600w, https://luxeengine.com/content/images/size/w1000/2025/01/tutorial-play.png 1000w, https://luxeengine.com/content/images/2025/01/tutorial-play.png 1280w" sizes="(min-width: 720px) 720px"></figure><h2 id="about">About</h2><blockquote><strong>luxe is a cross platform, rapid development game engine</strong> to make games for <strong>Mac, Linux, Windows, and Web</strong>, with console support in development.</blockquote><div><p><strong>luxe is an easy to learn game engine for making 2D or 3D games.</strong> As an engine it prioritizes design and workflow for rapidly expressing ideas.</p><p><strong>Designed as a 2D first engine</strong>, luxe aims to provide a strong 2D toolset <a href="https://luxeengine.com/dev-log-11/#ready-to-use" rel="noreferrer">ready</a> to make games. This applies whether it's a one hour or one+ year project.</p></div><figure><img src="https://luxeengine.com/content/images/2025/01/MO.2.jpg" alt="" loading="lazy" width="1280" height="720" srcset="https://luxeengine.com/content/images/size/w600/2025/01/MO.2.jpg 600w, https://luxeengine.com/content/images/size/w1000/2025/01/MO.2.jpg 1000w, https://luxeengine.com/content/images/2025/01/MO.2.jpg 1280w" sizes="(min-width: 720px) 720px"></figure><p>Beyond the 2D layer lives a powerful but accessible hardware driven renderer, with great support for shaders, asset pipelines, render paths and more.<br><strong>This allows 3D rendered games to use luxe all the same.</strong></p><p><strong>luxe itself is written in c++</strong>, although luxe games will usually be made in a custom version of the <a href="http://wren.io/?ref=luxeengine.com" rel="noreferrer"><strong>Wren</strong></a> programming language. Later, any language that can interact with C can be used.</p><p>Read on further for more details about luxe!</p><hr><h2 id="made-by-a-game-studio"><strong>Made by a game studio</strong></h2><figure><img src="https://luxeengine.com/content/images/2025/01/studioanypercent_logo_smallerer-1.png" alt="" loading="lazy" width="307" height="128"></figure><blockquote>luxe is <strong>used to make games</strong> by the engine developers directly.</blockquote><p>We've always believed an engine is driven by real world use, so we made a game studio around it because that's what makes sense to us. We're making <a href="https://anypercent.studio/mossfield-origins?ref=luxeengine.com" rel="noreferrer">Mossfield Origins</a> and <a href="https://anypercent.studio/mossfield-archives?ref=luxeengine.com" rel="noreferrer">Mossfield Archives</a>.</p><p>We're a <a href="https://anypercent.studio/?ref=luxeengine.com" rel="noreferrer">diverse game studio with a strong vision</a> for good community, sustainable business, empowered workers and empowering more voices to create games.</p><figure><img src="https://luxeengine.com/content/images/2025/01/philo.png" alt="" loading="lazy" width="1920" height="1080" srcset="https://luxeengine.com/content/images/size/w600/2025/01/philo.png 600w, https://luxeengine.com/content/images/size/w1000/2025/01/philo.png 1000w, https://luxeengine.com/content/images/size/w1600/2025/01/philo.png 1600w, https://luxeengine.com/content/images/2025/01/philo.png 1920w" sizes="(min-width: 720px) 720px"></figure><hr><h2 id="development-status">Development status</h2><blockquote>luxe is <strong>now available</strong> in preview! </blockquote><hr><h2 id="development-updates">Development updates</h2><h3 id="sign-up-for-the-luxe-mailing-list"><a href="#/portal/signup" rel="noreferrer"><strong>Sign up for the luxe mailing list</strong></a></h3><p><strong>Don't miss when luxe becomes available!</strong><br>We'll only email for important development news or access.</p><p>Visit the <a href="https://community.luxeengine.com/?ref=luxeengine.com" rel="noreferrer"><strong>'create with luxe' community</strong></a>. <br>You can also <strong>join the </strong><a href="https://discord.gg/5Q8rGZ7?ref=luxeengine.com" rel="noreferrer"><strong>discord</strong></a><strong>.</strong></p><h3 id="read-the-latest-dev-logs"><a href="https://luxeengine.com/blog" rel="noreferrer"><strong>Read the latest dev logs</strong></a></h3><p>Most recent - a series on using luxe:<br><a href="https://luxeengine.com/dev-log-11/" rel="noreferrer">dev log #11 -<strong> modifiers</strong></a><br><a href="https://luxeengine.com/dev-log-12/" rel="noreferrer">dev log #12 -<strong> custom modifiers</strong></a><br><a href="https://luxeengine.com/dev-log-13/" rel="noreferrer">dev log #13 -<strong> scenes</strong></a><br><a href="https://luxeengine.com/dev-log-14/" rel="noreferrer">dev log #14 -<strong> projects</strong></a><br><a href="https://luxeengine.com/dev-log-15" rel="noreferrer">dev log #15 -<strong> try luxe now!</strong></a></p><figure><img src="https://luxeengine.com/content/images/2025/01/icecream.jpg" alt="" loading="lazy" width="1600" height="900" srcset="https://luxeengine.com/content/images/size/w600/2025/01/icecream.jpg 600w, https://luxeengine.com/content/images/size/w1000/2025/01/icecream.jpg 1000w, https://luxeengine.com/content/images/2025/01/icecream.jpg 1600w" sizes="(min-width: 720px) 720px"></figure><hr><h2 id="design-philosophy">Design philosophy</h2><p><i></i><strong>Modular</strong></p>
<p>A tightly designed core engine with a module system ensures a lightweight yet expressive set of tools.</p><p><i></i><strong>Fluid</strong></p>
<p>The heart of luxe is rapid iteration and expression of intent. These are design pillars, because workflow matters.</p><p><i></i><strong>For humans</strong></p>
<p>Built by people that make games with it, luxe cares about the people that are using it day to day.</p><hr><h2 id="workflow">Workflow</h2><figure><img src="https://luxeengine.com/content/images/2025/01/director.png" alt="" loading="lazy" width="1600" height="900" srcset="https://luxeengine.com/content/images/size/w600/2025/01/director.png 600w, https://luxeengine.com/content/images/size/w1000/2025/01/director.png 1000w, https://luxeengine.com/content/images/2025/01/director.png 1600w" sizes="(min-width: 720px) 720px"></figure><blockquote><em>The <strong>luxe editor </strong>is optional?</em></blockquote><div><p>luxe is for solo developers as well as teams, so while it provides <strong>a great code based workflow</strong>, it is not limited to code only.</p><p><strong>editors and tools</strong> enhance the luxe workflow, which empowers artists, designers and programmers in the expression of ideas, and rapid game development.</p><p>The editor is <strong>designed for game specifics</strong>, just like the rest of the engine, so custom/project editors are easy, and shareable via modules.</p></div><figure><img src="https://luxeengine.com/content/images/2025/01/wires.png" alt="" loading="lazy" width="1276" height="598" srcset="https://luxeengine.com/content/images/size/w600/2025/01/wires.png 600w, https://luxeengine.com/content/images/size/w1000/2025/01/wires.png 1000w, https://luxeengine.com/content/images/2025/01/wires.png 1276w" sizes="(min-width: 720px) 720px"></figure><blockquote><em>editors help to build worlds, animation, ui and more</em></blockquote><hr><blockquote>worlds, modifiers, entities and systems</blockquote><figure><img src="https://luxeengine.com/content/images/2025/01/tools.svg" alt="" loading="lazy"></figure><div><p>Games are a diverse medium with unique challenges. luxe makes the distinction between tools and features explicit, and <strong>builds around tools as a core principle</strong>.</p><p>This frees the engine from being bloated by things a fraction of games want, and instead <strong>aims to empower games to be specific, adaptive and exact</strong>. At runtime, you only pay for what you use.</p></div><p>By combining systems both high and low level, <strong>luxe is like a toolbox, and a game is the connection of these into a whole.</strong></p><p>When configuring a <em>type</em> of project to reuse (like a 2D platformer or 3D first person project), luxe provides <strong>outlines</strong>, which jump start projects into predefined workflows. <strong>Outlines are where custom workflows are defined</strong> above the engine level.</p><p><strong>luxe provides pieces that snap together, </strong></p><blockquote><a href="https://luxeengine.com/dev-log-11/#ready-to-use" rel="noreferrer"><strong>ready</strong></a><strong> to make games</strong></blockquote><hr><h2 id="rendering-for-everyone"><strong>Rendering for everyone</strong></h2><blockquote>luxe is powered by an easy to learn but highly flexible renderer</blockquote><figure><img src="https://luxeengine.com/content/images/2025/01/rendering.jpg" alt="" loading="lazy" width="1040" height="388" srcset="https://luxeengine.com/content/images/size/w600/2025/01/rendering.jpg 600w, https://luxeengine.com/content/images/size/w1000/2025/01/rendering.jpg 1000w, https://luxeengine.com/content/images/2025/01/rendering.jpg 1040w" sizes="(min-width: 720px) 720px"></figure><p>Games can have unique needs, and game specific choices. <strong>luxe allows games to choose the best suited rendering style for their world</strong>, and offers high level interaction from the game.</p><figure><img src="https://luxeengine.com/content/images/2025/01/aug.png" alt="" loading="lazy" width="1600" height="900" srcset="https://luxeengine.com/content/images/size/w600/2025/01/aug.png 600w, https://luxeengine.com/content/images/size/w1000/2025/01/aug.png 1000w, https://luxeengine.com/content/images/2025/01/aug.png 1600w" sizes="(min-width: 720px) 720px"></figure><div><p>With a full abstraction over portable backends, a new shading language designed with the luxe philosophy, and a scripted pipeline driven workflow, <strong>rendering is right at home in luxe.</strong></p><p>Rendering is a complex field where <strong>fast iteration is important, and experiments can be done quickly and easily</strong>. luxe aims for that, and to be approachable, so that beginners can learn foundations without starting from scratch.</p></div><figure><img src="https://luxeengine.com/content/images/2025/01/origins-beam.png" alt="" loading="lazy" width="1280" height="720" srcset="https://luxeengine.com/content/images/size/w600/2025/01/origins-beam.png 600w, https://luxeengine.com/content/images/size/w1000/2025/01/origins-beam.png 1000w, https://luxeengine.com/content/images/2025/01/origins-beam.png 1280w" sizes="(min-width: 720px) 720px"></figure><hr><h2 id="modular-by-design">Modular by design</h2><blockquote>luxe is built around a modular package system</blockquote><figure><img src="https://luxeengine.com/content/images/2025/01/modules-1.svg" alt="" loading="lazy"></figure><div><p>luxe has a rich set of systems <a href="https://luxeengine.com/dev-log-11/#ready-to-use" rel="noreferrer"><strong>ready</strong></a><strong> </strong>to make games, <strong>but it couldn't possibly provide <em>all</em> systems that <em>all</em> different types of games need</strong>, without becoming bloated or unfocused.</p><p>When the engine doesn't provide something, it's often by design. <strong>Modules</strong> serve this need by providing a way for you to expand the tools and systems that are available to you when making games. Modules also provide ways to use other programming languages.</p><p><strong>This modularity is a fundamental part of luxe,</strong><br>even the luxe API itself is a module.</p></div><hr><blockquote><a href="https://luxeengine.com/blog" rel="noreferrer"><strong>Read the luxe blog</strong></a><p><a href="#/portal/signup" rel="noreferrer"><strong>Sign up for the luxe mailing list</strong></a></p></blockquote><blockquote>Don't miss the latest updates!</blockquote><figure><img src="https://luxeengine.com/content/images/2025/01/luxe_49HvY3G1yu.jpg" alt="" loading="lazy" width="2000" height="1125" srcset="https://luxeengine.com/content/images/size/w600/2025/01/luxe_49HvY3G1yu.jpg 600w, https://luxeengine.com/content/images/size/w1000/2025/01/luxe_49HvY3G1yu.jpg 1000w, https://luxeengine.com/content/images/size/w1600/2025/01/luxe_49HvY3G1yu.jpg 1600w, https://luxeengine.com/content/images/2025/01/luxe_49HvY3G1yu.jpg 2000w" sizes="(min-width: 720px) 720px"></figure>
        </section>

    </article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Is ageism in tech still a problem? (118 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=44269225</link>
            <guid>44269225</guid>
            <pubDate>Fri, 13 Jun 2025 15:08:30 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=44269225">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="44269225">
      <td><span></span></td>      <td><center><a id="up_44269225" href="https://news.ycombinator.com/vote?id=44269225&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=44269225">Ask HN: Is ageism in tech still a problem?</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_44269225">105 points</span> by <a href="https://news.ycombinator.com/user?id=leonagano">leonagano</a> <span title="2025-06-13T15:08:30 1749827310"><a href="https://news.ycombinator.com/item?id=44269225">7 hours ago</a></span> <span id="unv_44269225"></span> | <a href="https://news.ycombinator.com/hide?id=44269225&amp;goto=item%3Fid%3D44269225">hide</a> | <a href="https://hn.algolia.com/?query=Ask%20HN%3A%20Is%20ageism%20in%20tech%20still%20a%20problem%3F&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=44269225&amp;auth=803e0c523145958811a450a6eecc4bc9eddc2540">favorite</a> | <a href="https://news.ycombinator.com/item?id=44269225">144&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><div><p>Well, it's been a while since I touched this theme. 6 years ago, I launched a job board trying to fight ageism in tech (https://news.ycombinator.com/item?id=20252097)</p><p>It did super well in terms of upvotes and comments but not $ speaking (made $0)</p><p>This seems to be a current problem but what's the solution?</p></div></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table><table>
            <tbody><tr id="44269839"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269839" href="https://news.ycombinator.com/vote?id=44269839&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I experience it differently. As an IC that’s relatively respected it my field, I think my seniority seems like a threat to some leaders. Because my word carries weight and I tend to be less obsequious with little to lose in these interactions. I have less of a problem to saying “the emperor has no clothes”. Younger ICs don’t have this luxury. They go along despite their reservations and often feel they don’t know better. Older ICs suffer fools much less (life is short, and older ICs have a well calibrated BS detector. Some bad leader don’t like that!).</p><p>I have no problem interacting with younger ICs and even embrace my Dad-ness and Dad humor. I like mentoring and growing others, and I think it’s important to advocate for less experienced to get the lionsshare of the glory and attention.</p><p>For hiring, I just am not open about my age and mostly interact with people virtually. I don’t have my early irrelevant jobs and don’t show my graduation dates. So I haven’t seen it as a problem.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44271683"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44271683" href="https://news.ycombinator.com/vote?id=44271683&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p><i>&gt; I think my seniority seems like a threat to some leaders.</i></p><p>Boy do I feel this one. I'm 20 years in now and holy shit are there are a lot of bad leaders out there. What they all have in common is that they don't want to be gainsaid. Most leaders are completely allergic to meaningful feedback, hardly any of them ever ask for it. A lot of people seem to feel that once they are "in charge" they have somehow become infallible.</p><p>It's too bad because like `softwaredoug I love developing young people, most of them are very hungry for mentorship. I find that most younger ICs are very willing to listen and learn, but the leadership sees it as a problem for some reason that they're not struggling on their own on basic shit. What a waste of time of money.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269886"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269886" href="https://news.ycombinator.com/vote?id=44269886&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>To add to this I think it’s important for seniors to have a lot of humility, be open to new ideas, and not be one of these leaders!</p><p>Have a lot of skepticism towards our ego and question whether we’re acting on status or actually what’s best.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270559"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270559" href="https://news.ycombinator.com/vote?id=44270559&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>&gt; Because my word carries weight and I tend to be less obsequious with little to lose in these interactions</p><p>This may well be the value of a senior IC. You will be neutral in most of the situations, so VPs will be more willing to trust you as they know you don't have a hidden organizational agenda.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269865"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269865" href="https://news.ycombinator.com/vote?id=44269865&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>yeah young business people dont want older engineers that can call them out around. they want other young clueless engineers to just build</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269869"><td></td></tr>
                <tr id="44270050"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270050" href="https://news.ycombinator.com/vote?id=44270050&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>But age and/or proven experience (and not merely the "senior" title that <i>everyone</i> nowadays has) is a good proxy to be able to do this.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                              <tr id="44269781"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269781" href="https://news.ycombinator.com/vote?id=44269781&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>I used to work with a guy that was known for dressing nice, very formal. Back in the 2000s, he would wear button-down shirts, slacks, nice shoes; he stood out for a software nerd. Anyway, when I saw him recently, he was dressed in jeans and flip-flops, wearing a t-shirt. I asked him what's with the casual attire. He just said, "Trying to keep my job." Being an older dude in this field as well, I know what he's talking about.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269983"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269983" href="https://news.ycombinator.com/vote?id=44269983&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I call this "Wearing your uniform."</p><p>You need to look like you are a person who would be doing the job.  You wouldn't hire a gardner with smooth hands, clean shoes, and no dirt under their nails would you?</p><p>Car mechanics, you can see it in their hands, and the way they act around cars.</p><p>Every profession has its tells, from what we wear, to our physical traits etc.</p><p>After a while, you know if someone adds up or not.  But part of that is changing with the times. :)</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270685"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270685" href="https://news.ycombinator.com/vote?id=44270685&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Not an older person but I genuinely don't like wearing jeans and t shirts and I never have. t shirts make me feel like I'm trapped and jeans are stiff and unpleasant (and always feel shaped wrong.) Also wearing what are essentially corporate ads on my body just feels brain dead.</p><p>Shorts and a Hawaiian shirt are comfortable but I guess that's still not ok in the office even though everyone wants to pretend they don't care.</p><p>Whatever it's not like I'd accept a non-remote job these days anyway.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270036"><td></td></tr>
                <tr id="44270125"><td></td></tr>
            <tr id="44270403"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270403" href="https://news.ycombinator.com/vote?id=44270403&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>It has to do with the culture of the company you're working for.</p><p>Professional companies are stereotyped to suits and ties, and company attire is often part of company dress code.</p><p>Tech companies are stereotyped to kids and what they wear, and company dress code (if it exists) is often super-lax except for executives -- because the executives need to interact with Professional companies and look the part.</p><p>There's a lot of in-between, and it really depends on what company you work for and somewhat to what company you <i>want</i> to work for.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270423"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270423" href="https://news.ycombinator.com/vote?id=44270423&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>That’s the exact thing that GP is trying to spell out.</p><p>They’re not saying that how you look impacts your real ability; or vice versa.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44271027"><td></td></tr>
            <tr id="44270071"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270071" href="https://news.ycombinator.com/vote?id=44270071&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>If you work on a team with a size &gt;1 you are dealing with other apes and will have to deal with social signaling</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="44269949"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269949" href="https://news.ycombinator.com/vote?id=44269949&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Wasn’t the same true of his original attire selection, though? If he wore jeans in the 2000s, he would have faced consequences. So he wore slacks. What’s really changed?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269975"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44269975" href="https://news.ycombinator.com/vote?id=44269975&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>As the parent comment said, he stood out for dressing nicely those years ago.  Wearing jeans in the 2000s was not just tolerated or accepted, it was expected.  I remember feeling wary of engineers who dressed up for interviews then, like they were trying too hard.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270421"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270421" href="https://news.ycombinator.com/vote?id=44270421&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>My impression is dress-culture was (and still is somewhat) different on the US East vs West coast. The tech company I worked for in the mid 2000s on the East coast explicitly forbid jeans in the dress code.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44271525"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_44271525" href="https://news.ycombinator.com/vote?id=44271525&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Very much my impression too. I work for an org with sites scattered across the country. My colleagues in Virginia still regularly wear suits, while I in California haven't even owned a suit in many years. For no particular reason I can discern, the gradient seems to be pretty linear. Our Texas people are right in the middle formality wise.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44270165"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270165" href="https://news.ycombinator.com/vote?id=44270165&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>My general belief for interviews is to dress one step up from what you'd be wearing on a day-to-day basis at that job.</p><p>I wear shorts and a t-shirt (often a DEFCON or BSidesPDX shirt) usually, so I'd wear jeans and a solid color t-shirt or possibly a polo to an interview, though I haven't done an in-person interview for a job since 2016.  For remote interviews, I'm in sweatpants and a polo.</p><p>In the early 2000s, I wasn't a tech worker yet, but I always assumed engineers were wearing khakis and a polo, so I would have shown up to an interview with black slacks and a button-up shirt, maybe even a tie.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269991"><td></td></tr>
                              <tr id="44269582"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269582" href="https://news.ycombinator.com/vote?id=44269582&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Multiple issues. One of them is reluctance of younger hiring managers to hire older people. At 35 you don't necessarily see advantages that hiring 50 year old will bring you, as you don't have experience to be able to see that.</p><p>Not sure if there is a "solution" for that as a 35 yo hiring manager will probably have an easier time managing under-35 individual contributor comparing to a 50 yo one. Different perspectives, experiences, etc. So by hiring younger IC the manager makes a correct decision. Sucks for us older folks but that's life.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269811"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269811" href="https://news.ycombinator.com/vote?id=44269811&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>When the CEO is 28, it is the head where the fishrot starts.</p><p>In The Days of Old, the folks running the corporation were almost always in their 50s. They might have been prejudiced towards folks my age (60s), but they didn't have issues with hiring what are now considered "older" folks (40s and 50s), with the only issue being cost (they might be ageist, simply for cost reasons).</p><p>The prejudice from younger folks is cultural, not cost. They don't want people around that make them feel uncomfortable. Many younger folks at tech companies, these days, make boatloads of money. It's not about cost.</p><p>From where I stand, it looks like a lot of modern tech companies are establishing a "college, but being paid" culture. It seems that many modern tech companies resemble  idealized college campuses, more than traditional professional production environments.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270126"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270126" href="https://news.ycombinator.com/vote?id=44270126&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I agree that mismatch is cultural, and my point was that there might not be a solution because it might not necessarily be a problem. 50yo is MUCH LESS likely to work well with bunch of under-30 yo, esp, if the leadership is all in that age.</p><p>Is the company that much more likely to blow up and go out of business due to inexperience of the younger guys at the helm? Perhaps, but it's their company and that's how you gain experience in the first place. And IF it blows up in their face they'll learn (hopefully) and their 2nd, 3rd, 4th shots will be so much better.</p><p>50yo+ just need to stay away from these places to avoid becoming collateral damage. We don't have our entire lives ahead of us to make up for the lost time and wages. So not getting hired there is not really a problem.</p><p>Of course it leaves 50yo+ with fewer places to work and earn salary. Sucks, believe me, I know.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270287"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270287" href="https://news.ycombinator.com/vote?id=44270287&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Good points. One of the reasons I stopped looking for work, is because the places that did stuff I wanted to do, didn't want me around. The places that would have hired me, didn't have stuff I wanted to do.</p><p>They didn't want me, because I'm who I am. In a couple of cases, they didn't even try to hide it.</p><p>I took it personal, because it <i>was</i> personal. That's the thing about cultural bigotry. It's an emotional, reptile-brain thing. Right back to the lungfish. Not even primate-level thinking.</p><p>But what's done, is done. In the aggregate, it ended up being all good for me. Nasty-tasting medicine, but it cured the ill. I don't really want to go back to the rodent rally. I'm having <i>way</i> too much fun, doing my own thing.</p><p>A couple of the places I looked at, are no longer viable concerns, and I seemed to have dodged a couple of bullets. Could I have saved them? Maybe, but I seriously doubt they would have listened to me.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44270419"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270419" href="https://news.ycombinator.com/vote?id=44270419&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Thats why, me at 40`s, now am I working in a german auto industry where they still got more traditional views and p promote people with time inside the company.</p><p>Hip companies dont hire me, maybe some tech consultants, that would not be considered cool, like accenture or IBM.</p><p>A few years ago I was one of the first people in my country tomigrate my company android app to Kotlin, this helped me land in the app development team of a big bank in my country and I was by far the oldest dude. Everybody called me "uncle" there, very common to young people in my country to call older people that,  because most where college kids.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270775"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270775" href="https://news.ycombinator.com/vote?id=44270775&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I worked for a Japanese corporation, for the majority of my career.</p><p>They have "reverse ageism." There's some levels that you can't reach, until you are a certain age.</p><p>I worked with older people that would have a lot of folks around here, drooling. That company hired some of the best in the world.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44270301"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270301" href="https://news.ycombinator.com/vote?id=44270301&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>&gt;When the CEO is 28, it is the head where the fishrot starts.</p><p>I had the misfortune of working for two "30 under 30 CEO" led companies. I was in my 40s at the time. Never again. I can relate to the "college, but being paid" description, but for me it was more like "high school, but being paid".</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269683"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269683" href="https://news.ycombinator.com/vote?id=44269683&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>The irony is working with inexperienced senior engineers has absolutely made me see the benefits of hiring someone who's 50, the person who can't see the issue is the less-technical management doing the hiring who thinks having a PhD is the highest form of experience anyone can have.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270168"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270168" href="https://news.ycombinator.com/vote?id=44270168&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I'm an EM right in the age range you're talking about and I've got some very senior open roles on my team that I'm hiring for and you're spot on. I'm sure not every EM is like this, but for me, it's so true. I don't want to feel this way, but I can just feel myself start making excuses for why I shouldn't consider a candidate if their resume goes back to the 90s.</p><p>I've now got a checklist I create for myself to go through when reviewing resumes for the role. It includes a number of legitimate reasons it's okay to reject a candidate and I try to make myself pick one of them. I also have a thing under the rejection section that just says "Are you sure you're not rejecting this person because they're older than you?"</p><p>I realize how stupid it is to feel this way, but it's hard to un-train an emotional response.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269796"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269796" href="https://news.ycombinator.com/vote?id=44269796&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I would rather work with "old" engineers rather than 25/30 year old "senior" engineers.</p><p>Places with older engineers means:</p><p>1. things are done properly</p><p>2. less to break</p><p>3. no need to be on call</p><p>4. excellent WLB (no grind n burnout culture)</p><p>5. excellent mentoring and learning opportunities</p><p>6. sniper / laser focus on business fundamentals / making money rather than making noise on the internet streets</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44272505"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44272505" href="https://news.ycombinator.com/vote?id=44272505&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>None of these things are related to age or amount of experience. Someone with 20 years of mediocre experience will be mediocre, and they may also have a false sense of their own ability because they've managed to scrape by for so long.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269663"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269663" href="https://news.ycombinator.com/vote?id=44269663&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>I observed engineers at all ages at many levels and roles (manager vs. IC) at Microsoft. To the point of us having retirement parties. I am sure ageism is real but part of the meme of "no software engineers over 40" is just the population curve of developers making them less common. And probably there's something broken with the recruiting pipelines.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269951"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269951" href="https://news.ycombinator.com/vote?id=44269951&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Yes. People don't take into account the growth in the number of developers over time. When the ageism discussion started, there was a huge growth in the developer market, which meant that a disproportionate number of devs were on the younger side of the spectrum. Now that we're a few decades into the conversation, that initial glut of devs are the greybeards. Thus it appears that there's more old people rolling around.</p><p>Is there ageism? I'm sure. As an old, I'm going to avoid companies that give off a younger, coder bro type vibe. Partially because I assume they're more likely to be ageist. But mostly because even if they *didn't* have an ageist viewpoint and hired me, I know it's just not where I personally want to be.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269705"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269705" href="https://news.ycombinator.com/vote?id=44269705&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I would wager that it will get better soon. Once the LLM/Agent hype has died down and a few years of junior developers went down the drain untrained and unmentored, the demand for experienced seasoned developers will rise again.</p><p>This is not to dismiss LLMs entirely, but they always get touted as “they can do ABC, as long as an experienced dev reviews the output”. And with LLMs hindering the growth of juniors in one way or another, I can definitely see a market for “senior” developers down the road.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269803"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269803" href="https://news.ycombinator.com/vote?id=44269803&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I'm looking forward to a nice part time side-hustle during retirement, cleaning up vibe-coded messes. In a few decades, we might have an industry full of 20-40 year old software engineers who don't know how computers work and don't know how to write or fix code beyond begging an LLM to do it and hoping it produces something that works.</p><p>Maybe I'll be wrong, and in 2050, there won't even be human software engineers anymore, but I'm not so sure that will be the case.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269976"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44269976" href="https://news.ycombinator.com/vote?id=44269976&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>you see this in other engineering fields as well. Government, for example, is chock-full of people designing renewable energy policy who have never even seen a solar panel and barely know how one works. There are engineering companies where wind turbine designers have never climbed a wind turbine or seen one in operation.</p><p>This is how you get disasters like Ocean Gate where management would rather hire fresh college grads than listen to experienced hires point out mistakes.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44270410"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270410" href="https://news.ycombinator.com/vote?id=44270410&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I've seen this take on LLMs many times, and I don't share the certainty that LLMs hinder the growth of engineers using them.</p><p>Sure, if you want to use an LLM to produce code that works you need to have enough knowledge and experience to be able to review and, if necessary, request changes.</p><p>However, another (IMO, even more powerful) aspect of LLMs, is their utility as a learning tool.
They excel at imparting knowledge about new concepts, because they act as a personalized teacher.</p><p>I find it doubtful that use of LLMs will result in less experienced and knowledgeable engineers in the future.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44272542"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44272542" href="https://news.ycombinator.com/vote?id=44272542&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>You sound like someone who has developed a good work ethic and is comfortable with struggle. Likely because you didn't grow up with a magic thinking box to ask for help at the first bit of mental friction.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44271675"><td></td></tr>
                  <tr id="44269511"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269511" href="https://news.ycombinator.com/vote?id=44269511&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>There's a huge ageism problem, always has been.  I tried to avoid getting into software development because I knew it would be an issue one day.</p><p>There's isn't a quick fix or easy solution.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269710"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269710" href="https://news.ycombinator.com/vote?id=44269710&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>I think most of the ostensible age discrimination is explained by the tech industry's massive growth over the past 50 years (means more young people are hired than old people because they have the skills).</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270749"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270749" href="https://news.ycombinator.com/vote?id=44270749&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>As well as overproduction of CS grads in the last 10/15 years. Much like law grads a generation earlier. Wonder who's next, MDs perhaps?..</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269698"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269698" href="https://news.ycombinator.com/vote?id=44269698&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Just wondering, was the issue not enough job hunters using the site or was the issue that not enough companies wanted to post listings.  If the latter, I would guess that lots of people in tech recognize the problem, but not many companies (sincerely) want to do anything about it for all the reasons people here will give: worries about salary expectations, worries about availability to work long hours, less experienced people feeling uncomfortable managing more experienced people.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269885"><td></td></tr>
                  <tr id="44270030"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270030" href="https://news.ycombinator.com/vote?id=44270030&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I don't think it's age. I think it's energy level and attitude.</p><p>I'm in my 50s and had no problems getting hired 3+ years ago at a FAANG as well as a handful of other companies. Granted it was a good hiring environment, but I also took 3 years off and I had to work hard to Leetcode back into shape.</p><p>I still have a lot of energy and it comes across in my interviews. I don't have an ego, I know that just because I have &gt;30 years experience doesn't mean that I know more than my coworkers that are 30 years younger than me. I work hard and try to earn my paycheck every day and I'm not quibbling over lunch menus and complaining about the ingredients used at the cafeteria.</p><p>I think as long as you not only have the technical skills but can also sell yourself as a good teammate with matching energy, it shouldn't be a problem. I think younger folks respect people that can match their energy and motivation and don't want to be dragged down by know-it-alls or slow workers.</p></div></td></tr>
        </tbody></table></td></tr>
                      <tr id="44269711"><td></td></tr>
                <tr id="44269909"><td></td></tr>
            <tr id="44270473"><td></td></tr>
                  <tr id="44269761"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269761" href="https://news.ycombinator.com/vote?id=44269761&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Ageism is looking a one tree in a forest of extremely similar problems. We have a othering at scale issue in the species. It's fundamental. It needs to be recognized as an issue of, a problem with self determinism itself, the othering of those we are not intimate is a serious species-wise issue. There is another science here, waiting for formalization.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270482"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270482" href="https://news.ycombinator.com/vote?id=44270482&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Yes, I think othering at scale is the root of most of our societal ills. It was likely a useful heuristic when we were sparsely spread out tribal creatures, similar to always assuming the rustling in the bush was a tiger and not just the wind.</p><p>In a tightly woven, interdependent system like modern civilization, it is placing a huge strain on us structurally as well as psychologically. Add to this it is an easy exploit for power ala “my leadership is great, &lt;out group&gt; over there is your problem”, combined with mass media platforms and the whole thing is cracking at the edges.</p><p>How do we mitigate this though? It seems to take a massive concerted effort for a person to overcome those implicit biases. I was speaking with a family member the other day who is clearly primed by media in their country to assume that all current structural ills are caused by immigrants, and when probed about people of that same group that were actually in her life, she said “Well, Mr. so and so that works at the school is just a lovely decent hardworking man.” But she couldn’t take the leap that there are statistically more Mr. so and so’s in the group than the “bad ones” she was hearing about in the news. I’ve seen this pattern across all of business and politics.</p><p>Don’t even get me started on the whole “culture fit” hiring standards.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44271352"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44271352" href="https://news.ycombinator.com/vote?id=44271352&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>There is a multi-level dynamic at play, that I suspect has at it's roots the widespread lack of understanding of effective communications.</p><p>We are all alone, if not for communications.</p><p>It is bias in communications, knowledge of the various forms of bias, their methods, and countermeasures that enable individuals and groups to move past argument and towards shared understandings. With shared understanding naturally causes shared compromise and solutions. Without shared understanding, situations degenerate to stalemate, war, welfare states, and economic slave states.</p><p>Individual self conversation, recognition of it, it's biases and countermeasures lay a foundation for a rational individual. The lack of formal and public recognition of self conversation itself is hurdle one. Once that is recognized, a foundation for a rational public can be considered.</p><p>Then communicating with others inter-personally, with peers, spouses, coworkers, managers, authorities and strangers. Pairs, small groups, larger groups, and audience dynamics: these all have biases, which are often magnifications of the same bias at a self conversation level. New bias forms are here too, and they must also be recognized, understood, and countermeasures established. This is all nothing but communicating, but doing so effectively, causing understanding in others, and gaining understanding from those less communication-ally skilled.</p><p>Now let's take these biases and add in mass media, social media, and all the network effects they bring to the communication situation. Strangely enough, yet again the countermeasures that operate at lower levels continue to function here - except now we're dealing with the public. countermeasures now require public education.</p><p>I think by spreading knowledge of interpersonal and self conversation biases, their countermeasures immediate and positive effect lay the foundation for widespread respect of effective communications. After all, the lack of it often only needs to be pointed out for people to consider the ease of adopting knowledge about and the countermeasures that enable more success communicating, which directly correlates to actual success. And that is with everything a person does, because this perspective begins with one's self conversation, reducing the bias there, first. That generates a more rational person, more aware, more active. Push this to network effects, and now we're talking societal change. It's a plan to impress secondary considerations on the general public, because that's the primary countermeasure in communication issues: consider further.</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="44270150"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270150" href="https://news.ycombinator.com/vote?id=44270150&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>I am a software engineer in his 50s, with stints in big tech, big bank and fintech with domain expertise in payments, risk, performance engineering, and data. In addition I have led global  teams of hundreds of engineers with outcomes that have transformed multiple Fortune 500. I have been unemployed for a year and a half with no light at the end of the tunnel. Most of my network of similarly older professionals and C level executives has either retired or suffering similarly. Thankfully I am rich and still getting deferred executive compensation checks from multiple Fortune 500 companies but I am bored and think I have more to offer. I am working on a couple things to allay my boredom, we shall see if something comes of it.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270788"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270788" href="https://news.ycombinator.com/vote?id=44270788&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>One of the _many_ reasons job statistics of all kinds is completely useless. According to these numbers you (and I as I was looking for a job for 1.5 years myself recently) are happily retired (according to analysis of employment figures that I read from time to time). Hence, "nobody wants to work" and all that.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270296"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270296" href="https://news.ycombinator.com/vote?id=44270296&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>As an engineer also in his 50s, I can relate, based on one concept: "wanting to work" versus "needing to work". I'm definitely not rich, but I could probably retire if I wanted to. I just don't want to. I <i>want</i> to work; I enjoy it. Many of my friends have retired, and they all seem bored to me. However, many/most people <i>need</i> to work to pay the rent, put kids through college, etc. I never really grasped this concept when I was younger, because, back then, it was all <i>need</i> to work.</p><p>I feel like I'm a better employee now, because I feel like I can be more honest. If a manager says something stupid, I feel totally comfortable checking them on it. When I was younger that wasn't the case. I was always nervous about retribution. However, there's a flip-side to this: a lot of managers don't like to be checked. Also, there's exploitability. When I was younger, I never said no to any proposed work, regardless of how it impacted my "personal time". Now, my attitude is, "Work this weekend? Nope. Get a junior to do that. I'm going surfing this weekend." LOL</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270830"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270830" href="https://news.ycombinator.com/vote?id=44270830&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Have a good friend, a 68yo guy, with grown-up kids (as in having their own families, houses, careers, etc), just happily hacking away in SQL, Python, building dashboards in PowerBI, learning AWS and bunch of other stuff, as a consultant. He says he'd be bored out of his mind just sitting at home.</p><p>Who says you can't have role models in your 50s? :)</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="44269586"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269586" href="https://news.ycombinator.com/vote?id=44269586&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>get work done, look younger and slice off the first 5 years of your experience because it is "not relevant". 
I look about 10-12 years younger so I am able to slip under the radar but it makes me wonder how my peers who look visibly their age fare?
The job market is london, sector: Hedge funds, asset mangement tech etc.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269919"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269919" href="https://news.ycombinator.com/vote?id=44269919&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Your application and resume will go through multiple systems and viewed and assessed by 3 to 5 people before anybody can even see your (presumably younger) face.</p><p>In the resume, you can remove your experience prior to certain date (which is recommended anyways as it makes your resume shorter and very few employers care what you did 15 years ago), but you do have to list your education and most ATS systems require graduation dates.</p><p>Even if you do manage to omit the dates, if you were senior developer or architect in the very the first position from 12 years ago that you have on your resume, the recruiter/hiring manager will be able to put 2 and 2 together.</p><p>All the advice I've heard from the career/job search/whatever coaches/advisors was to not try to hide your age but use it your advantage. Trying to hide your age doesn't just make you looking silly, it might create an impression that you're hiding something more serious.</p><p>But yeah, looking younger and healthier definitely doesn't hurt, not just in job search but in life in general.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269732"><td></td></tr>
                <tr id="44270496"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270496" href="https://news.ycombinator.com/vote?id=44270496&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>I do, but if they're being ageist, it means less because I didn't finish my degree until I was 32 because I wasted the first 9 years of my adult life before starting college.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="44270072"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270072" href="https://news.ycombinator.com/vote?id=44270072&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>If I were to start another company,  I'd try to hire only 40+ people.</p><p>- I've found junior engineers super resistant to new tech. Very rigid thinking, there is only way way to do something bc that's all they've ever learned, very religious about tech stacks, crazy strong opinions based on crazy limited experience
- lack of work ethic, no call, no show, procrastinating right up until the deadline and then expecting code reviews, merges/releases to work on their schedule
-tendency to fuck around and play games etc all day (see above)
-limited experience with people from different backgrounds, culture etc.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270130"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270130" href="https://news.ycombinator.com/vote?id=44270130&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Older people have families, hobbies outside of work etc.</p><p>So they want to get in, get it done, go home. This usually leads to stuff getting done at a steady cadence.</p><p>This is a bit sarcastic of course, seeing other ridiculous comments about older engineers.</p><p>There's something to be said about people who just want to get their work done in reasonable time with reasonable quality and not chase every new fad like like a dog with ADHD in a squirrel habitat.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269679"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269679" href="https://news.ycombinator.com/vote?id=44269679&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>According to statistics and people I met at conferences, young people are also not getting hired in tech. So maybe nobody is?</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270136"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270136" href="https://news.ycombinator.com/vote?id=44270136&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Even more. The two primary reasons I believe it harder to find tech jobs when you're older are</p><p>1) Your salary demands exceed the budgeted amount for the position</p><p>2) You probably aren't willing to work insane hours any more</p><p>Even if your skill set vastly exceeds that of a wet-behind-the-ears engineer and can work at a far higher level, be more productive, and produce higher quality work, it's almost impossible to make that apparent when interviewing, especially when those doing the interviews are much younger.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270286"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270286" href="https://news.ycombinator.com/vote?id=44270286&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>&gt; 1) Your salary demands exceed the budgeted amount for the position</p><p>I've thought about this a lot lately. This is true for the obvious reasons, but it's more true than it seems.</p><p>As an older, experienced dev I sometimes flirt with the idea of aiming for a mid-level developer job where I can just cruise. I'd expect the paycheck to be proportionately smaller than where I'm at now, but that's fine.</p><p>But there's no way this would actually work out. Red flags would be raised all over the place at most companies like this. For one, it'd be viewed as a red flag that I'm cool taking that huge paycut. And then of course no one appreciates being told that you want to come in, get a week's worth of work done in a day, and then clock out.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44270115"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270115" href="https://news.ycombinator.com/vote?id=44270115&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Ageism is a cultural issue. Some cultures venerate older people, some shun them. So it will vary. There isn't one "tech" culture. If you're talking about tech companies in the United States dominated by white males, ageism has been (and afaik, continues to be) a cultural norm.</p><p>Changing a culture's norms is incredibly difficult. The only way I've heard about it happening is through massive pressure, from either a large social group vocally pushing against an issue (with consequences), or a large industry spending millions of dollars to advertise something (diamonds, washing machines) and exploiting some other cultural bias to do so. Cultural norms can also change temporarily (we all worked remote during a pandemic and productivity went up, but after that it would seem our productivity went down? and women became industrial workers during WW2, but after that apparently they weren't good enough?).</p><p>So even if the norm did change temporarily, you need continued pressure to make it stick. I have not heard of any massive cultural pressure to end ageism, so I would not expect it to end.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270760"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270760" href="https://news.ycombinator.com/vote?id=44270760&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>The real threat to a senior IC, in my own experience, is losing their edge, especially in a large company. As they grow more senior, they will spend more time in meetings, writing more docs, aligning more teams, drawing more boxes, tossing around more terms, defining more product features, and talking to more customers. As time goes by, they gain more institutional knowledge and getting better at company dynamics. They know which VPs to trust. They know which squeaky wheels to oil, and which buttons to push. They do everything better, except designing or implementing a challenging system.</p><p>That is, the senior ICs start to resemble a strong product manager, or an effective director without a team. These are all good - until the company suddenly no longer needs them. Maybe their team has become a cost center. Maybe the project gets into maintenance mode. Or maybe the product has been so stable that the company does not even need more alignment. At that time, the ICs will find that all the institutional knowledge and so-called "leadership" is not that transferrable. And when they go out and interview for a new job, they find that they can't even sketch a solid design.</p><p>Sadly, I don't have a solution. There are exceptions. I guess it's natural that a senior engineer will gain breadth but also get distracted as they age. What they need is a different kind of depth. They can still be of value to a younger team if they are like a hard-science professor who depends on their PhD students to write papers, yet they can still advise the students as no one else. In industry, my role models are people like Michael Stonebreaker, who can still shape the architectures of modern databases in his 80s. Wernher von Braun of Saturn V rockets, who could come up with new rockets like no one else. Or Kelly Johnson of U-2, who could direct and unblock his engineers with ease. Or Marc Brooker of Amazon, who seems able to go deep into both database and distributed systems to keep coming up with amazing systems. But then, I'm not sure how many people can be talented as those engineers.</p><p>Or maybe another way is to get domain expertise, like how payment works, how insurance works, how accounting works, and etc?</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269845"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269845" href="https://news.ycombinator.com/vote?id=44269845&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>There's a <i>much</i> bigger cohort of aging programmers than there was even 10 years ago, so a lot more of them are the best programmers available.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269884"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269884" href="https://news.ycombinator.com/vote?id=44269884&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I started working in IT in the 90s and I would say "yes" but I realize my observations do not carry scientific rigor. It would require knowing the thoughts and practices of millions of people. Such is the curse of social science.</p><p>I do not think most people think of themselves as being "ageist", but it manifests in their actions. Usually a department will be filled with a group of young people, and in the interview process, someone will say, "I do not think this person would be a good culture fit". But they do not realize that they just do not want an old person because they seem different then what is already in the team.</p><p>I also have a hunch, that "leet code tests", in the hiring process has a hidden agenda of weeding out "older people". Those kind of tests are usually on knowledge one might have learned in a college course and subsequently forgot about. Or, if you are juggling a family, you may not have time to go do all day knowledge crunch study to get the algorithms into your head.</p><p>Companies do not want to come right out and say "we do not want to hire old people", but they selfishly want the most value for their buck. They want to drive down wages and extract value. What is more valuable to a company? A middle aged programmer who has to go home at 5pm to help take care of the kids? Or do they get more value out of a young person just out of college who has something to prove?</p><p>I have seen perfectly reasonable people pass over hiring older people because they do not want to hire someone who might know more than they do, or someone who might push back on decisions. They want someone young who will just do what they say.</p><p>As a society, I do not think we address such issues well.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270564"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270564" href="https://news.ycombinator.com/vote?id=44270564&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>When the 20 something 'senior' engineers and 'consultants' don't know how to test network connectivity by using openssl, telnet and ping, you don't won't to work there. It's more like a day care than college or high school ;)</p><p>How can a 20 something with very little experience actually consult? Based on what experience?</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44272350"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44272350" href="https://news.ycombinator.com/vote?id=44272350&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Had a misfortune of working with 28-30 yo "management consultants" who "taught" best practices to 40-50yo experts in their fields (I'm talking specialists with 15-20-30 years of experience). That was... bizarre.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269911"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269911" href="https://news.ycombinator.com/vote?id=44269911&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>IMO, it depends. I’ve worked with hundreds of startups over the last 20 years. The most significant trend I’ve seen is cultural cohesion. Some startups have a young, energetic culture. Some have an experienced, veteran culture. Some have a quirky, trendy culture.</p><p>But overall many companies seem to value and attract more of the same culture they already have in place. So to a degree, I’d say yes ageism exists in certain companies that don’t value experience as highly as other qualities.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269941"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269941" href="https://news.ycombinator.com/vote?id=44269941&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>&gt; <i>I’ve worked with hundreds of startups over the last 20 years.</i></p><p>That's averaging 5 startups every year. How can you get good experience, or even truly understand a business, if you're averaging just around two months at a company or multiple companies in the same period?</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270957"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270957" href="https://news.ycombinator.com/vote?id=44270957&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>He said "worked with" not "worked at." Likely as a contractor. And if so it's not uncommon for some projects to be very short while others might take 10-20% of your time for 2-3 years. Plenty of time to gather domain knowledge especially if clients are clustered in the same industry.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="44270669"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270669" href="https://news.ycombinator.com/vote?id=44270669&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>some say "wisdom comes with age".</p><p>Though I don't completely agree but won't completely ignore.</p><p>I see this applies to tech as well.</p><p>When you start as junior you tinker with boilerplate code. everything seems magical. As you grow learn and becomes wiser, things what seemed magical before become logical</p><p>After 10 years, surface level saturates. You will start to dig deeper.
Things will again start to become magical and then slowly fades into logical.</p><p>Then you go deeper and again process repeats.</p><p>More deeper you go, you will find the luxury to shake the surface level toys. Some innovation happens at surface level, but you are deep down still going.</p><p>There is not end line. You retire when you want to stop. Your choice!</p><p>But much more still to be explored! Humanity continues!</p><p>In short, As you grow, go deeper, become wiser, shake the status quo, innovate, repeat. Surface level people will Go gaga. But you don't react because you are still going deeper...</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269843"><td></td></tr>
            <tr id="44270016"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270016" href="https://news.ycombinator.com/vote?id=44270016&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>There is still a problem that engineering is often seen as a "young persons field", and once you get some experience you will then move to management.  Nothing wrong with management - we do need it, and a lot of what we have is really bad (if engineers make good engineers is debatable...), but that means there are less older engineers around which will skew data.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269797"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269797" href="https://news.ycombinator.com/vote?id=44269797&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>It isn't really a solvable problem as long as there is no standardized/regulated tech industry. Companies want coders who will fit into the "culture" – work whatever hours they need to, be on call 24x7, chase the newest fads, accept fantasy money, "move fast and break things" etc. There is an unlimited stream of new grads who will happily accept all this. Older people meanwhile don't have the patience or have other responsibilities in life.</p><p>Go into companies and industries where this culture isn't the norm, however, and you'll find teams full of 40-50+ year old software engineers. Defense, aerospace, government, construction, medical tech, research labs, education.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270013"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270013" href="https://news.ycombinator.com/vote?id=44270013&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>I'm in the UK and I don't feel ageism. Never did. I'm usually the oldest person in the team (49), and I've worked with people older than me. I'm a freelance contractor so I move around a fair bit. I do feel like my experience is appreciated.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270044"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44270044" href="https://news.ycombinator.com/vote?id=44270044&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>One of the things that I think gets overlooked is sample bias. People in their 50s who are engineers often started coding in the 90s. And back then it was a much less common career path.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269361"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269361" href="https://news.ycombinator.com/vote?id=44269361&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Job boards aren't the problem.  The problems begin and end within the boundaries of companies.  ATS, recruiter, hiring manager, 6 30-60 minute interviews.  Those things are the problem.</p><p>If I had the money I could go hire a half dozen solid software engineers and at least 2 solid DevOps/SRE types today.  I'm betting people in other fields could do the same.</p><p>And yet, good people remain unemployed and scared.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270469"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270469" href="https://news.ycombinator.com/vote?id=44270469&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Everybody want their company to be a google where you are willing to waste that mauch time to get hired.</p><p>In the end, HR hiring team fails to recruit because in makes the process to expensive for candidates, and the CEOS hire more HR recruitment becasue they think the problem is the lack of people to hire. HR needs to justify the salary, and makes hiring more a pain in the ass, feeding the vicious cycle.</p><p>I miss the times where HR only responsabily was to process salary payment.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269678"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269678" href="https://news.ycombinator.com/vote?id=44269678&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>I'm 53 (physician) and would like to pursue a second career in programming but realising it's really hard.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270234"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270234" href="https://news.ycombinator.com/vote?id=44270234&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Your experience would be incredibly valuable.</p><p>However are you sure you want to take the cut in prestige/pay?</p><p>In the medtech space there's a huge need for project mangers, etc wish medical experience. So knowing how to code and how to query databases along with all that medical knowledge would be a super power.</p><p>However, I can't imagine you'd be happy as a junior engineer churning out react code but maybe?</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269977"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269977" href="https://news.ycombinator.com/vote?id=44269977&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Honestly, pursue it as a hobby but don't try to make a career out of it. This is the worst hiring environment I've seen since the dotcom bust, and there are tens of thousands of fresh CS grads that are unemployed.</p><p>If you want to go to school because you're interested, then that's cool. But to think you can make a living out of it when you're 30 years older than the tens of thousands of kids that you're competing against... I really don't think it's worth it unless you want to form your own startup that is medical-related.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270330"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44270330" href="https://news.ycombinator.com/vote?id=44270330&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Are you just starting to learn? If so I think your chances of getting paid work will be slim.</p><p>I started programming on a zx80 and trs-80 clone at 11 years old, and have devoured new languages, methodologies, tricks and tips, computer science breakthroughs, and so-on throughout my career, but still do not have work currently.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269724"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269724" href="https://news.ycombinator.com/vote?id=44269724&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>It likely still exists but the economy for software dev is so bad as to not be a major factor.</p><p>In other words, it’s not ageism when one can’t even get an interview in the first place.  Assuming you’ve kept your resume concise and removed education dates, etc.  Which I have for the last twenty years or so, since the turn of the century!  <i>cough</i></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269556"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269556" href="https://news.ycombinator.com/vote?id=44269556&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>The resistance I most often see is that companies are often hesitant to interview older candidates based on their assumptions around expected salary. This completely agnostic as to their actual fit for the role.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269685"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269685" href="https://news.ycombinator.com/vote?id=44269685&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I've always been willing to start with zero compensation or benefits until &lt;milestone&gt; to demonstrate my value and build trust.</p><p>It is rare that a company will take you up on that offer though. It really highlights what the money is actually about and how tribal "professional" "business" can be.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269852"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44269852" href="https://news.ycombinator.com/vote?id=44269852&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>That would honestly be an extreme red flag for me if I was considering hiring you. As an older engineer myself, I would never roll the dice like that — my contributions in this industry are public and I have the network to show for it. My time is worth something to me, even if it’s not worth anything to anyone else, and the older I get the more that’s true.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270294"><td></td></tr>
                              <tr id="44269750"><td></td></tr>
                <tr id="44269793"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269793" href="https://news.ycombinator.com/vote?id=44269793&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Good point, like asking if racism or sexism still exists.  Gets more publicity every year but fundamentally we are still  a tribal species.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269622"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269622" href="https://news.ycombinator.com/vote?id=44269622&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>In my sub-field (embedded systems), I don't see it.  There are companies that see the value of 40 years of experience.  (And there are plenty that don't...)</p><p>But the vibe I'm hearing lately is that <i>junior</i> engineers can't get jobs, because AI.  I don't know if that reflects the reality (I haven't been trying to find a job as a junior in quite a while), but people are complaining about that these days.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269848"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269848" href="https://news.ycombinator.com/vote?id=44269848&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>There's less ageism in embedded systems because older folks are more likely to be experienced with a lean &amp; mean tech stack (for example vanilla C programming).</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269432"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269432" href="https://news.ycombinator.com/vote?id=44269432&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Yes, when 50 years old applies as a senior engineer, 25 years old senior engineers get uncomfortable. You might not notice it in any public conversation, but there is still a resistance:</p><pre><code>   * will they be on-call?
   * can they work long hours?
   * how do I delegate to them?
   * are they going to resist new tech?</code></pre></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269660"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269660" href="https://news.ycombinator.com/vote?id=44269660&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Recently, I've had a co-worker be "okay" with alerts in the middle of the night. I refused because I have to drive my child to school at 7.30am.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269719"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44269719" href="https://news.ycombinator.com/vote?id=44269719&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>This is really the crux of it. Companies want to hire young engineers without responsibilities so they can burn them out. And there's a long line of new grads who will happily fit into that culture.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269794"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44269794" href="https://news.ycombinator.com/vote?id=44269794&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>If your kids school is more important than your job is, that only means your job is extremely unimportant. Like my job.</p><p>Your kid is better off not going to school for a day, or arriving late. They're not doing anything important in school.</p><p>Depending on company, maybe they need to hire people to do important things and have responsibility for important things. Somebody who would prioritize things like driving their kids to school over that is a no-hire. They should work a job which is less important, like I myself do.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270260"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270260" href="https://news.ycombinator.com/vote?id=44270260&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I'm sorry you think this way. The entire human foundation is based upon passed knowledge by means of reading and writing. I feel it's essential. Schooling is one way to do this, and also a means of learning and practicing social skills.</p><p>As far as being on-call goes, there are many different ways to be a part of support without a brute-force approach. For example, create a more robust QA process. Another is to create actionable alerts. There are many ways workers can work peacefully and meet director goals.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270580"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_44270580" href="https://news.ycombinator.com/vote?id=44270580&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Missing one day of school in your life because your mother or father had something very important to take care of will not have any impact on your education. And the people who pretend that this is the case are just the kind of dishonest people that you don't want to hire. Hackers can down vote me as much as they please, that's not going to change how businesses think about hiring.</p><p>And now we're reaching the core of the "ageism" discussion. Every person will have some things that they consider more important than work; their health for example. But as people get older, the more things get added to that list, because they are more established in life. But do you want to hire a person which considers <i>everything</i> more important than their job? Something which businesses value highly is when people are reliable. If the boss can rely on that a certain employee can be counted on to take care of things, that means that the boss can also work to 100% of his potential where they are needed.</p><p>A good run company will make sure to hire enough people, or in other ways make sure that emergency situations don't become something frequent. But we can never get away from the fact that the earth spins around the sun, meaning everything in the economy experiences the ebb and flow of seasonal demand. Even Hank Hill has to take care of propane emergencies at times.</p><p>&gt;As far as being on-call goes, there are many different ways to be a part of support without a brute-force approach. For example, create a more robust QA process. Another is to create actionable alerts. There are many ways workers can work peacefully and meet director goals.</p><p>I completely agree with this.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44271071"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44271071" href="https://news.ycombinator.com/vote?id=44271071&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Isn't it usually the other way around? The less important you are to the company, the more rigid your hours are. If you actually matter to the company, you probably get flexible hours and the ability to take leave on a short notice, as they stand to lose more if you quit.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269898"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44269898" href="https://news.ycombinator.com/vote?id=44269898&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I think one seriously broken thing is that every company seems convinced their work is important, and scales their sense of how important work items are relative to the company as a whole. Orgs and teams do the same.</p><p>You can be on a team that runs a service that's a small part of the overall company product offering, which may be a convenience rather than mission-critical to its clients, who themselves may be doing something BS, and that team may still want you to wake up at 3AM when something alerts. Making a blanket statement that just because a job <i>wants</i> you to wake up at 3AM means it <i>must</i> be important (nevermind more important than family responsibility) places way too much trust in the judgement of employers.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270011"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_44270011" href="https://news.ycombinator.com/vote?id=44270011&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>All of us here have been to school and know how utterly unimportant it is. If not, that is a serious case of amnesia. It's a storage unit for kids, guarded by the most dim-witted people from the community. So when somebody says they can't work because of their kid's school, then either that person does not care about their job, or the company is asking for something out of line. It's either of those two options, depending on what actually is the job.</p><p>My job is unimportant, so I can leave the phone off at night. If I had an important job, then the case would be different.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270599"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_44270599" href="https://news.ycombinator.com/vote?id=44270599&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>&gt; All of us here have been to school and know how utterly unimportant it is.</p><p>I think the same can be said for companies. All of us here worked at companies and know how utterly unimportant most of them, or at least most of their projects, are.</p><p>&gt; If I had an important job</p><p>They don't exist for the most part, at least 90% of them in our line of work aren't.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44270300"><td></td></tr>
                        <tr id="44270031"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270031" href="https://news.ycombinator.com/vote?id=44270031&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>&gt; Your kid is better off not going to school for a day, or arriving late. They're not doing anything important in school.</p><p>Not sure, if you are serious.</p><p>Maybe we should become slaves of corporations? Should we divorce maybe with our partners because sometimes we go dining and on-call is more important than me having a dinner with my partner?</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270094"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_44270094" href="https://news.ycombinator.com/vote?id=44270094&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Don't you remember school?</p><p>&gt; Maybe we should become slaves of corporations?</p><p>That's why school exists in the first place, because parents are stuck at their jobs and new corporate/government slaves and cannon fodder have to be indoctrinated.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270657"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_44270657" href="https://news.ycombinator.com/vote?id=44270657&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>A corporation that wakes you up at 3 am is dysfunctional by definition. It exists only to waste investor funds and burn people out while producing nothing of lasting value. There is no reason why it should be actively allowed to harm one's health too.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270696"><td><table>  <tbody><tr>    <td indent="6"><img src="https://news.ycombinator.com/s.gif" height="1" width="240"></td><td>
      <center><a id="up_44270696" href="https://news.ycombinator.com/vote?id=44270696&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Expand your perspective. Things happen at 3AM in the real world. A tree falls over a power line in a storm, etc.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270716"><td><table>  <tbody><tr>    <td indent="7"><img src="https://news.ycombinator.com/s.gif" height="1" width="280"></td><td>
      <center><a id="up_44270716" href="https://news.ycombinator.com/vote?id=44270716&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Indeed. Things happen, but in a well-functioning firm, they're supposed to be auto-handled by automated contingency processes that have already planned for it, with actions that are already in place. Alternatively, they have dedicated staff, possibly offshore, and onshore if needed. It is only at dysfunctional firms that one has to wake up for it.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44271347"><td><table>  <tbody><tr>    <td indent="8"><img src="https://news.ycombinator.com/s.gif" height="1" width="320"></td><td>
      <center><a id="up_44271347" href="https://news.ycombinator.com/vote?id=44271347&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>What kind of "automated contingency process" is going to drive down a rural road in a blizzard with a chainsaw to get a tree of the power line?</p><p>Even the best organizations have emergencies, that's just life. A business which has everything perfectly automated and organized to handle anything that happens is also a business that has no employees, because they won't need anybody working for them.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44272356"><td><table>  <tbody><tr>    <td indent="9"><img src="https://news.ycombinator.com/s.gif" height="1" width="360"></td><td>
      <center><a id="up_44272356" href="https://news.ycombinator.com/vote?id=44272356&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Huh. There are supposed to be dedicated pre-scheduled staff for it. If a storm is forecasted, the power companies have staff already waiting in trucks, ready to go anywhere in their designated zones. They are getting double or triple pay for it too if it's outside regular hours. Do not make the mistake of confusing it with waking someone up.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44272547"><td><table>  <tbody><tr>    <td indent="10"><img src="https://news.ycombinator.com/s.gif" height="1" width="400"></td><td>
      <center><a id="up_44272547" href="https://news.ycombinator.com/vote?id=44272547&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>I know people who work with this stuff and are home on-call (and paid for that). A forecast is never 100% accurate? Very few people prefer to sit waiting in a truck for nothing to happen, rather than being on-call in their cozy home with their family.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                                                                  <tr id="44269720"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269720" href="https://news.ycombinator.com/vote?id=44269720&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>This is basically ageism. It's not accurate and should be coached out. Flip the question for a 25 year old:</p><p>* Will they be on on-call or out partying with their friends? 
* Are they committed to the work or will they hop to another company once trained? 
* Are they able to work within our codebase or just jump to the next hot thing?</p><p>These types of questions are ridiculous for both sides.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270065"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270065" href="https://news.ycombinator.com/vote?id=44270065&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>&gt; should be coached out</p><p>No, it won't work. Biologically, 25 years old without a family responsibilities will not get it anyway.</p><p>If you are 25 years old, single and your friends are similar to you, what would you do? Most I know are working 12-14 hour/day, because they eat breakfast, lunch and dinner at work.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269785"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269785" href="https://news.ycombinator.com/vote?id=44269785&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>How much experience does it take to be "senior" in that case? Has the 25 y-o engineer been working for 10 years or are they just diluting the "senior" term?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269995"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44269995" href="https://news.ycombinator.com/vote?id=44269995&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>From my experience the "senior" term has been significantly diluted in the zero-interest-rate period.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269913"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269913" href="https://news.ycombinator.com/vote?id=44269913&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>As the fifties version of myself, I won’t need to be on-call or work long hours because I did it right the first time.</p><p>Reply to below:</p><p>Of course.  But if you plan ahead properly, it will be extremely rare.  To the point where it isn’t economical to have people on call.  Because the downtime was caused by a meteor or maybe AWS.</p><p>If it is truly mission critical, have a night shift.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270081"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270081" href="https://news.ycombinator.com/vote?id=44270081&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>&gt; I did it right the first time.</p><p>Maybe you are writing libraries/frameworks?</p><p>Any service running on production can fail anytime, whether you did everything right or not, things break sometimes.</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="44269968"><td></td></tr>
            <tr id="44269747"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269747" href="https://news.ycombinator.com/vote?id=44269747&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Yeah ageism is a huge issue, even in early 30s, working as a regular programmer is met with suspicion and looked down upon.</p><p>Not only that, young engineers will be build whatever without questioning the value, business people prefer this. They dont want an engineer raising product questions</p><p>also, it is true that technology moves quickly, startups dont need experts in tech thats no longer bleeding edge. large old school companies still do, so the number of companies that are viable employers decreases</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269784"><td></td></tr>
            <tr id="44269866"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269866" href="https://news.ycombinator.com/vote?id=44269866&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>Feels a bit cynical.  Raising questions is incredibly valuable for a company as long as it is done in a positive manner.  It’s what they tell us is the main benefit to DEI, and you can tell whether they are serious if they include older folks in their program or not.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269906"><td></td></tr>
                <tr id="44269950"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44269950" href="https://news.ycombinator.com/vote?id=44269950&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>A successful business accrues to everyone, as long as you’re not obsessed with taking absolute credit.  I’ve only worked with one or two such dysfunctional folks in my entire career.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                              <tr id="44270052"><td></td></tr>
            <tr id="44269770"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269770" href="https://news.ycombinator.com/vote?id=44269770&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>There is all kinds of ‘isms in tech. Pretty much the only people who don’t have to worry are young straight white males.</p><p>I suspect before ageism disappears it will first swing the other way where older tech workers snub young people entering the industry writing them off as vibecoders who don’t know anything and are easily replaced with an AI.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269912"><td></td></tr>
                <tr id="44269939"><td></td></tr>
            <tr id="44270527"><td></td></tr>
                        <tr id="44269500"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269500" href="https://news.ycombinator.com/vote?id=44269500&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>A lot of it involves masking and blending in by the candidate</p><p>You can easily find an older person ranting against the idea of using full stack javascript, unaware of the V8 changes while still having some valid criticisms</p><p>But then wonder if their rejection is ageism, instead of the rant</p><p>just one example</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269733"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269733" href="https://news.ycombinator.com/vote?id=44269733&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>I think the general resistance from older devs comes from the velocity of software in the past decade. I just connected with a former manager I worked with at IT services from my university and we talked about how crazy tech has moved since my time working there. I had the privilege of working on the data center before the university moved to AWS. The entire backend was written in pure C, running on BSD. We had monitoring scripts written in Perl before getting a contract with Splunk. My manager worked on the design of the distributed file system for the university, and is still an active contributor to the distro. It wasn't the greatest system, but it sure was cool. I'd be a little salty too if some MBA came in and said, "we're moving to AWS, Okta, Workday, and Splunk. And oh by the way, we have to rewrite the system in node.js, and these interns are going to do it. Have fun!"</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270024"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270024" href="https://news.ycombinator.com/vote?id=44270024&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>&gt; he velocity of software in the past decade</p><p>Enterprise software is going nowhere but sideways for 2 decades already.</p><p>But yes, the velocity of new bullshit with dubious value that is consistently getting add on top of each other is just amazing.</p><p>By the way, I still haven't seen any single project get value out of SaaS auth (both auths) systems. Why the hell people use them?</p><p>Also, I had to check: "The key to driving your business forward? One powerful AI platform that keeps your most important assets on track, every decision on point, and your fleet of AI agents at peak performance. That’s Workday."</p><p>Well, people here still didn't manage to make LLMs do anything useful. That's despite a strong push from the top to use them, and many very smart people. They did manage to design a very promising tool that uses LLM in a way that uses its strengths and add a lot of value (that seems to be completely unparalleled - and we just invited the entire economic sector for a talk), but didn't manage to make it work well yet. So, our fleet of AI agents at peak performance...</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269578"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269578" href="https://news.ycombinator.com/vote?id=44269578&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>I can provide more than just one example to back up any prejudice you can think of.</p><p>Treating a person as part of a group is the problem.</p><p>And when you are trying to isolate one person out of many, like for a job hire, it's not easy to avoid mass-filtering to speed it up.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269682"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44269682" href="https://news.ycombinator.com/vote?id=44269682&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>&gt; Treating a person as part of a group is the problem.</p><p>Yes, but it's efficient and effective in a large number of cases.</p><p>Those with no programming experience is a group. Those who just graduated a CS program is a group. Fresh bootcamp grads are a group. People with 5+ years of experience with your tech stack are a group.</p><p>Is there someone with no programming experience who would turn out to be great? Of course; none of us were born with programming experience, but most people are practical enough to not bat an eye when we use past experience as a proxy to quickly pre-filter the possible candidate pool.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270740"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_44270740" href="https://news.ycombinator.com/vote?id=44270740&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Exactly true. But being hairless apes, we tend to overrely on our ability to group. "Smells like ___, must be bad at finding bananas in modern C++ product development process."</p><p>Where ___ is: "no formal education", the accuracy is possibly over 50%.</p><p>Where ___ is: "Dutch", the accuracy is below 50%</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269610"><td></td></tr>
                  <tr id="44269575"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269575" href="https://news.ycombinator.com/vote?id=44269575&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>I think staying curious and keep learning regardless of your age is key. You don't really want to be stuck in whatever tech was popular during your 20's or 30's and ignore or reject whatever is new.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270746"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270746" href="https://news.ycombinator.com/vote?id=44270746&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div>
                  <p>That's true for the hiree - but it's not an answer for the hiring group. How do they effectively discriminate <i>for</i> candidates who are apt in current tech, AND will stay current in upcoming years?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="44269701"><td></td></tr>
                <tr id="44269914"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269914" href="https://news.ycombinator.com/vote?id=44269914&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>At the time I was an employee. They didn't like people launching side-projects, so, I involved my wife in the process. She's PR, so, she sent it to the media.</p><p>I did the rest, being developing, contacting companies and talking to over 40s.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44270844"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44270844" href="https://news.ycombinator.com/vote?id=44270844&amp;how=up&amp;goto=item%3Fid%3D44269225"></a></center>    </td><td><br><div><p>Thanks for the explanation.</p><p>I know it doesn't matter to the topic at had, but I actually went on and read all about your project, and that caught my attention. :)</p></div></td></tr>
        </tbody></table></td></tr>
                        </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[100 years of Zermelo's axiom of choice: What was the problem with it? (2006) (102 pts)]]></title>
            <link>https://research.mietek.io/mi.MartinLof2006.html</link>
            <guid>44269002</guid>
            <pubDate>Fri, 13 Jun 2025 14:46:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://research.mietek.io/mi.MartinLof2006.html">https://research.mietek.io/mi.MartinLof2006.html</a>, See on <a href="https://news.ycombinator.com/item?id=44269002">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<pre><a id="612">-- Partially mechanised by Miëtek Bak</a>
<a id="650">-- TODO: Theorem 2</a>

<a id="670">module</a> <a id="677" href="https://research.mietek.io/mi.MartinLof2006.html">mi.MartinLof2006</a> <a id="694">where</a>

<a id="701">open</a> <a id="706">import</a> <a id="713" href="https://research.mietek.io/Agda.Primitive.html">Agda.Primitive</a> <a id="728">using</a> <a id="734">(</a><a id="735" href="https://research.mietek.io/Agda.Primitive.html#742">Level</a> <a id="741">;</a> <a id="743" href="https://research.mietek.io/Agda.Primitive.html#961">_⊔_</a> <a id="747">;</a> <a id="749" href="https://research.mietek.io/Agda.Primitive.html#931">lsuc</a><a id="753">)</a>

<a id="id"></a><a id="756" href="https://research.mietek.io/mi.MartinLof2006.html#756">id</a> <a id="759">:</a> <a id="761">∀</a> <a id="763">{</a><a id="764" href="https://research.mietek.io/mi.MartinLof2006.html#764">𝓈</a><a id="765">}</a> <a id="767">{</a><a id="768" href="https://research.mietek.io/mi.MartinLof2006.html#768">S</a> <a id="770">:</a> <a id="772" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="776" href="https://research.mietek.io/mi.MartinLof2006.html#764">𝓈</a><a id="777">}</a> <a id="779">→</a> <a id="781" href="https://research.mietek.io/mi.MartinLof2006.html#768">S</a> <a id="783">→</a> <a id="785" href="https://research.mietek.io/mi.MartinLof2006.html#768">S</a>
<a id="787" href="https://research.mietek.io/mi.MartinLof2006.html#756">id</a> <a id="790" href="https://research.mietek.io/mi.MartinLof2006.html#790">x</a> <a id="792">=</a> <a id="794" href="https://research.mietek.io/mi.MartinLof2006.html#790">x</a>

<a id="797">infixr</a> <a id="804">9</a> <a id="806" href="https://research.mietek.io/mi.MartinLof2006.html#810">_∘_</a>
<a id="_∘_"></a><a id="810" href="https://research.mietek.io/mi.MartinLof2006.html#810">_∘_</a> <a id="814">:</a> <a id="816">∀</a> <a id="818">{</a><a id="819" href="https://research.mietek.io/mi.MartinLof2006.html#819">𝓈</a> <a id="821" href="https://research.mietek.io/mi.MartinLof2006.html#821">𝓉</a> <a id="823" href="https://research.mietek.io/mi.MartinLof2006.html#823">𝓊</a><a id="824">}</a> <a id="826">{</a><a id="827" href="https://research.mietek.io/mi.MartinLof2006.html#827">S</a> <a id="829">:</a> <a id="831" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="835" href="https://research.mietek.io/mi.MartinLof2006.html#819">𝓈</a><a id="836">}</a> <a id="838">{</a><a id="839" href="https://research.mietek.io/mi.MartinLof2006.html#839">T</a> <a id="841">:</a> <a id="843" href="https://research.mietek.io/mi.MartinLof2006.html#827">S</a> <a id="845">→</a> <a id="847" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="851" href="https://research.mietek.io/mi.MartinLof2006.html#821">𝓉</a><a id="852">}</a> <a id="854">{</a><a id="855" href="https://research.mietek.io/mi.MartinLof2006.html#855">U</a> <a id="857">:</a> <a id="859">∀</a> <a id="861">{</a><a id="862" href="https://research.mietek.io/mi.MartinLof2006.html#862">x</a><a id="863">}</a> <a id="865">→</a> <a id="867" href="https://research.mietek.io/mi.MartinLof2006.html#839">T</a> <a id="869" href="https://research.mietek.io/mi.MartinLof2006.html#862">x</a> <a id="871">→</a> <a id="873" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="877" href="https://research.mietek.io/mi.MartinLof2006.html#823">𝓊</a><a id="878">}</a>
        <a id="888">(</a><a id="889" href="https://research.mietek.io/mi.MartinLof2006.html#889">f</a> <a id="891">:</a> <a id="893">∀</a> <a id="895">{</a><a id="896" href="https://research.mietek.io/mi.MartinLof2006.html#896">x</a><a id="897">}</a> <a id="899">(</a><a id="900" href="https://research.mietek.io/mi.MartinLof2006.html#900">y</a> <a id="902">:</a> <a id="904" href="https://research.mietek.io/mi.MartinLof2006.html#839">T</a> <a id="906" href="https://research.mietek.io/mi.MartinLof2006.html#896">x</a><a id="907">)</a> <a id="909">→</a> <a id="911" href="https://research.mietek.io/mi.MartinLof2006.html#855">U</a> <a id="913" href="https://research.mietek.io/mi.MartinLof2006.html#900">y</a><a id="914">)</a> <a id="916">(</a><a id="917" href="https://research.mietek.io/mi.MartinLof2006.html#917">g</a> <a id="919">:</a> <a id="921">∀</a> <a id="923" href="https://research.mietek.io/mi.MartinLof2006.html#923">x</a> <a id="925">→</a> <a id="927" href="https://research.mietek.io/mi.MartinLof2006.html#839">T</a> <a id="929" href="https://research.mietek.io/mi.MartinLof2006.html#923">x</a><a id="930">)</a> <a id="932">(</a><a id="933" href="https://research.mietek.io/mi.MartinLof2006.html#933">x</a> <a id="935">:</a> <a id="937" href="https://research.mietek.io/mi.MartinLof2006.html#827">S</a><a id="938">)</a> <a id="940">→</a> <a id="942" href="https://research.mietek.io/mi.MartinLof2006.html#855">U</a> <a id="944">(</a><a id="945" href="https://research.mietek.io/mi.MartinLof2006.html#917">g</a> <a id="947" href="https://research.mietek.io/mi.MartinLof2006.html#933">x</a><a id="948">)</a>
<a id="950">(</a><a id="951" href="https://research.mietek.io/mi.MartinLof2006.html#951">f</a> <a id="953" href="https://research.mietek.io/mi.MartinLof2006.html#810">∘</a> <a id="955" href="https://research.mietek.io/mi.MartinLof2006.html#955">g</a><a id="956">)</a> <a id="958" href="https://research.mietek.io/mi.MartinLof2006.html#958">x</a> <a id="960">=</a> <a id="962" href="https://research.mietek.io/mi.MartinLof2006.html#951">f</a> <a id="964">(</a><a id="965" href="https://research.mietek.io/mi.MartinLof2006.html#955">g</a> <a id="967" href="https://research.mietek.io/mi.MartinLof2006.html#958">x</a><a id="968">)</a>

<a id="Relation"></a><a id="971" href="https://research.mietek.io/mi.MartinLof2006.html#971">Relation</a> <a id="980">:</a> <a id="982">∀</a> <a id="984">{</a><a id="985" href="https://research.mietek.io/mi.MartinLof2006.html#985">𝓈</a><a id="986">}</a> <a id="988">(</a><a id="989" href="https://research.mietek.io/mi.MartinLof2006.html#989">S</a> <a id="991">:</a> <a id="993" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="997" href="https://research.mietek.io/mi.MartinLof2006.html#985">𝓈</a><a id="998">)</a> <a id="1000" href="https://research.mietek.io/mi.MartinLof2006.html#1000">ℓ</a> <a id="1002">→</a> <a id="1004" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1008">_</a>
<a id="1010" href="https://research.mietek.io/mi.MartinLof2006.html#971">Relation</a> <a id="1019" href="https://research.mietek.io/mi.MartinLof2006.html#1019">S</a> <a id="1021" href="https://research.mietek.io/mi.MartinLof2006.html#1021">ℓ</a> <a id="1023">=</a> <a id="1025" href="https://research.mietek.io/mi.MartinLof2006.html#1019">S</a> <a id="1027">→</a> <a id="1029" href="https://research.mietek.io/mi.MartinLof2006.html#1019">S</a> <a id="1031">→</a> <a id="1033" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1037" href="https://research.mietek.io/mi.MartinLof2006.html#1021">ℓ</a>

<a id="Reflexive"></a><a id="1040" href="https://research.mietek.io/mi.MartinLof2006.html#1040">Reflexive</a> <a id="1050">:</a> <a id="1052">∀</a> <a id="1054">{</a><a id="1055" href="https://research.mietek.io/mi.MartinLof2006.html#1055">𝓈</a> <a id="1057" href="https://research.mietek.io/mi.MartinLof2006.html#1057">ℓ</a><a id="1058">}</a> <a id="1060">{</a><a id="1061" href="https://research.mietek.io/mi.MartinLof2006.html#1061">S</a> <a id="1063">:</a> <a id="1065" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1069" href="https://research.mietek.io/mi.MartinLof2006.html#1055">𝓈</a><a id="1070">}</a> <a id="1072">(</a><a id="1073" href="https://research.mietek.io/mi.MartinLof2006.html#1073">_∼_</a> <a id="1077">:</a> <a id="1079" href="https://research.mietek.io/mi.MartinLof2006.html#971">Relation</a> <a id="1088" href="https://research.mietek.io/mi.MartinLof2006.html#1061">S</a> <a id="1090" href="https://research.mietek.io/mi.MartinLof2006.html#1057">ℓ</a><a id="1091">)</a> <a id="1093">→</a> <a id="1095" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1099">_</a>
<a id="1101" href="https://research.mietek.io/mi.MartinLof2006.html#1040">Reflexive</a> <a id="1111" href="https://research.mietek.io/mi.MartinLof2006.html#1111">_∼_</a> <a id="1115">=</a> <a id="1117">∀</a> <a id="1119">{</a><a id="1120" href="https://research.mietek.io/mi.MartinLof2006.html#1120">x</a><a id="1121">}</a> <a id="1123">→</a> <a id="1125" href="https://research.mietek.io/mi.MartinLof2006.html#1120">x</a> <a id="1127" href="https://research.mietek.io/mi.MartinLof2006.html#1111">∼</a> <a id="1129" href="https://research.mietek.io/mi.MartinLof2006.html#1120">x</a>

<a id="Symmetric"></a><a id="1132" href="https://research.mietek.io/mi.MartinLof2006.html#1132">Symmetric</a> <a id="1142">:</a> <a id="1144">∀</a> <a id="1146">{</a><a id="1147" href="https://research.mietek.io/mi.MartinLof2006.html#1147">𝓈</a> <a id="1149" href="https://research.mietek.io/mi.MartinLof2006.html#1149">ℓ</a><a id="1150">}</a> <a id="1152">{</a><a id="1153" href="https://research.mietek.io/mi.MartinLof2006.html#1153">S</a> <a id="1155">:</a> <a id="1157" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1161" href="https://research.mietek.io/mi.MartinLof2006.html#1147">𝓈</a><a id="1162">}</a> <a id="1164">(</a><a id="1165" href="https://research.mietek.io/mi.MartinLof2006.html#1165">_∼_</a> <a id="1169">:</a> <a id="1171" href="https://research.mietek.io/mi.MartinLof2006.html#971">Relation</a> <a id="1180" href="https://research.mietek.io/mi.MartinLof2006.html#1153">S</a> <a id="1182" href="https://research.mietek.io/mi.MartinLof2006.html#1149">ℓ</a><a id="1183">)</a> <a id="1185">→</a> <a id="1187" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1191">_</a>
<a id="1193" href="https://research.mietek.io/mi.MartinLof2006.html#1132">Symmetric</a> <a id="1203" href="https://research.mietek.io/mi.MartinLof2006.html#1203">_∼_</a> <a id="1207">=</a> <a id="1209">∀</a> <a id="1211">{</a><a id="1212" href="https://research.mietek.io/mi.MartinLof2006.html#1212">x</a> <a id="1214" href="https://research.mietek.io/mi.MartinLof2006.html#1214">y</a><a id="1215">}</a> <a id="1217">→</a> <a id="1219" href="https://research.mietek.io/mi.MartinLof2006.html#1212">x</a> <a id="1221" href="https://research.mietek.io/mi.MartinLof2006.html#1203">∼</a> <a id="1223" href="https://research.mietek.io/mi.MartinLof2006.html#1214">y</a> <a id="1225">→</a> <a id="1227" href="https://research.mietek.io/mi.MartinLof2006.html#1214">y</a> <a id="1229" href="https://research.mietek.io/mi.MartinLof2006.html#1203">∼</a> <a id="1231" href="https://research.mietek.io/mi.MartinLof2006.html#1212">x</a>

<a id="Transitive"></a><a id="1234" href="https://research.mietek.io/mi.MartinLof2006.html#1234">Transitive</a> <a id="1245">:</a> <a id="1247">∀</a> <a id="1249">{</a><a id="1250" href="https://research.mietek.io/mi.MartinLof2006.html#1250">𝓈</a> <a id="1252" href="https://research.mietek.io/mi.MartinLof2006.html#1252">ℓ</a><a id="1253">}</a> <a id="1255">{</a><a id="1256" href="https://research.mietek.io/mi.MartinLof2006.html#1256">S</a> <a id="1258">:</a> <a id="1260" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1264" href="https://research.mietek.io/mi.MartinLof2006.html#1250">𝓈</a><a id="1265">}</a> <a id="1267">(</a><a id="1268" href="https://research.mietek.io/mi.MartinLof2006.html#1268">_∼_</a> <a id="1272">:</a> <a id="1274" href="https://research.mietek.io/mi.MartinLof2006.html#971">Relation</a> <a id="1283" href="https://research.mietek.io/mi.MartinLof2006.html#1256">S</a> <a id="1285" href="https://research.mietek.io/mi.MartinLof2006.html#1252">ℓ</a><a id="1286">)</a> <a id="1288">→</a> <a id="1290" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1294">_</a>
<a id="1296" href="https://research.mietek.io/mi.MartinLof2006.html#1234">Transitive</a> <a id="1307" href="https://research.mietek.io/mi.MartinLof2006.html#1307">_∼_</a> <a id="1311">=</a> <a id="1313">∀</a> <a id="1315">{</a><a id="1316" href="https://research.mietek.io/mi.MartinLof2006.html#1316">x</a> <a id="1318" href="https://research.mietek.io/mi.MartinLof2006.html#1318">y</a> <a id="1320" href="https://research.mietek.io/mi.MartinLof2006.html#1320">z</a><a id="1321">}</a> <a id="1323">→</a> <a id="1325" href="https://research.mietek.io/mi.MartinLof2006.html#1316">x</a> <a id="1327" href="https://research.mietek.io/mi.MartinLof2006.html#1307">∼</a> <a id="1329" href="https://research.mietek.io/mi.MartinLof2006.html#1318">y</a> <a id="1331">→</a> <a id="1333" href="https://research.mietek.io/mi.MartinLof2006.html#1318">y</a> <a id="1335" href="https://research.mietek.io/mi.MartinLof2006.html#1307">∼</a> <a id="1337" href="https://research.mietek.io/mi.MartinLof2006.html#1320">z</a> <a id="1339">→</a> <a id="1341" href="https://research.mietek.io/mi.MartinLof2006.html#1316">x</a> <a id="1343" href="https://research.mietek.io/mi.MartinLof2006.html#1307">∼</a> <a id="1345" href="https://research.mietek.io/mi.MartinLof2006.html#1320">z</a>

<a id="1348">record</a> <a id="Equivalence"></a><a id="1355" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="1367">{</a><a id="1368" href="https://research.mietek.io/mi.MartinLof2006.html#1368">𝓈</a><a id="1369">}</a> <a id="1371">(</a><a id="1372" href="https://research.mietek.io/mi.MartinLof2006.html#1372">S</a> <a id="1374">:</a> <a id="1376" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1380" href="https://research.mietek.io/mi.MartinLof2006.html#1368">𝓈</a><a id="1381">)</a> <a id="1383" href="https://research.mietek.io/mi.MartinLof2006.html#1383">ℯ</a> <a id="1385">:</a> <a id="1387" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1391">(</a><a id="1392" href="https://research.mietek.io/mi.MartinLof2006.html#1368">𝓈</a> <a id="1394" href="https://research.mietek.io/Agda.Primitive.html#961">⊔</a> <a id="1396" href="https://research.mietek.io/Agda.Primitive.html#931">lsuc</a> <a id="1401" href="https://research.mietek.io/mi.MartinLof2006.html#1383">ℯ</a><a id="1402">)</a> <a id="1404">where</a>
  <a id="1412">field</a> <a id="Equivalence._≍_"></a><a id="1418" href="https://research.mietek.io/mi.MartinLof2006.html#1418">_≍_</a>     <a id="1426">:</a> <a id="1428" href="https://research.mietek.io/mi.MartinLof2006.html#971">Relation</a> <a id="1437" href="https://research.mietek.io/mi.MartinLof2006.html#1372">S</a> <a id="1439" href="https://research.mietek.io/mi.MartinLof2006.html#1383">ℯ</a>
        <a id="Equivalence.≍-refl"></a><a id="1449" href="https://research.mietek.io/mi.MartinLof2006.html#1449">≍-refl</a>  <a id="1457">:</a> <a id="1459" href="https://research.mietek.io/mi.MartinLof2006.html#1040">Reflexive</a> <a id="1469" href="https://research.mietek.io/mi.MartinLof2006.html#1418">_≍_</a>
        <a id="Equivalence.≍-sym"></a><a id="1481" href="https://research.mietek.io/mi.MartinLof2006.html#1481">≍-sym</a>   <a id="1489">:</a> <a id="1491" href="https://research.mietek.io/mi.MartinLof2006.html#1132">Symmetric</a> <a id="1501" href="https://research.mietek.io/mi.MartinLof2006.html#1418">_≍_</a>
        <a id="Equivalence.≍-trans"></a><a id="1513" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="1521">:</a> <a id="1523" href="https://research.mietek.io/mi.MartinLof2006.html#1234">Transitive</a> <a id="1534" href="https://research.mietek.io/mi.MartinLof2006.html#1418">_≍_</a>

<a id="1539">open</a> <a id="1544" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="1556">{{...}}</a>

<a id="1565">open</a> <a id="1570">import</a> <a id="1577" href="https://research.mietek.io/Agda.Builtin.Equality.html">Agda.Builtin.Equality</a> <a id="1599">using</a> <a id="1605">(</a><a id="1606" href="https://research.mietek.io/Agda.Builtin.Equality.html#207">refl</a><a id="1610">)</a> <a id="1612">renaming</a> <a id="1621">(</a><a id="1622" href="https://research.mietek.io/Agda.Builtin.Equality.html#150">_≡_</a> <a id="1626">to</a> <a id="1629">Id</a><a id="1631">)</a>

<a id="sym"></a><a id="1634" href="https://research.mietek.io/mi.MartinLof2006.html#1634">sym</a> <a id="1638">:</a> <a id="1640">∀</a> <a id="1642">{</a><a id="1643" href="https://research.mietek.io/mi.MartinLof2006.html#1643">𝓈</a><a id="1644">}</a> <a id="1646">{</a><a id="1647" href="https://research.mietek.io/mi.MartinLof2006.html#1647">S</a> <a id="1649">:</a> <a id="1651" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1655" href="https://research.mietek.io/mi.MartinLof2006.html#1643">𝓈</a><a id="1656">}</a> <a id="1658">→</a> <a id="1660" href="https://research.mietek.io/mi.MartinLof2006.html#1132">Symmetric</a> <a id="1670">{</a><a id="1671">S</a> <a id="1673">=</a> <a id="1675" href="https://research.mietek.io/mi.MartinLof2006.html#1647">S</a><a id="1676">}</a> <a id="1678" href="https://research.mietek.io/mi.MartinLof2006.html#1629">Id</a>
<a id="1681" href="https://research.mietek.io/mi.MartinLof2006.html#1634">sym</a> <a id="1685" href="https://research.mietek.io/Agda.Builtin.Equality.html#207">refl</a> <a id="1690">=</a> <a id="1692" href="https://research.mietek.io/Agda.Builtin.Equality.html#207">refl</a>

<a id="trans"></a><a id="1698" href="https://research.mietek.io/mi.MartinLof2006.html#1698">trans</a> <a id="1704">:</a> <a id="1706">∀</a> <a id="1708">{</a><a id="1709" href="https://research.mietek.io/mi.MartinLof2006.html#1709">𝓈</a><a id="1710">}</a> <a id="1712">{</a><a id="1713" href="https://research.mietek.io/mi.MartinLof2006.html#1713">S</a> <a id="1715">:</a> <a id="1717" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1721" href="https://research.mietek.io/mi.MartinLof2006.html#1709">𝓈</a><a id="1722">}</a> <a id="1724">→</a> <a id="1726" href="https://research.mietek.io/mi.MartinLof2006.html#1234">Transitive</a> <a id="1737">{</a><a id="1738">S</a> <a id="1740">=</a> <a id="1742" href="https://research.mietek.io/mi.MartinLof2006.html#1713">S</a><a id="1743">}</a> <a id="1745" href="https://research.mietek.io/mi.MartinLof2006.html#1629">Id</a>
<a id="1748" href="https://research.mietek.io/mi.MartinLof2006.html#1698">trans</a> <a id="1754" href="https://research.mietek.io/Agda.Builtin.Equality.html#207">refl</a> <a id="1759" href="https://research.mietek.io/mi.MartinLof2006.html#1759">h</a> <a id="1761">=</a> <a id="1763" href="https://research.mietek.io/mi.MartinLof2006.html#1759">h</a>

<a id="Id-≍"></a><a id="1766" href="https://research.mietek.io/mi.MartinLof2006.html#1766">Id-≍</a> <a id="1771">:</a> <a id="1773">∀</a> <a id="1775">{</a><a id="1776" href="https://research.mietek.io/mi.MartinLof2006.html#1776">𝓈</a><a id="1777">}</a> <a id="1779">{</a><a id="1780" href="https://research.mietek.io/mi.MartinLof2006.html#1780">S</a> <a id="1782">:</a> <a id="1784" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1788" href="https://research.mietek.io/mi.MartinLof2006.html#1776">𝓈</a><a id="1789">}</a> <a id="1791">→</a> <a id="1793" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="1805" href="https://research.mietek.io/mi.MartinLof2006.html#1780">S</a> <a id="1807">_</a>
<a id="1809" href="https://research.mietek.io/mi.MartinLof2006.html#1766">Id-≍</a> <a id="1814">=</a> <a id="1816">record</a> <a id="1823">{</a> <a id="1825" href="https://research.mietek.io/mi.MartinLof2006.html#1418">_≍_</a>     <a id="1833">=</a> <a id="1835" href="https://research.mietek.io/mi.MartinLof2006.html#1629">Id</a>
              <a id="1852">;</a> <a id="1854" href="https://research.mietek.io/mi.MartinLof2006.html#1449">≍-refl</a>  <a id="1862">=</a> <a id="1864" href="https://research.mietek.io/Agda.Builtin.Equality.html#207">refl</a>
              <a id="1883">;</a> <a id="1885" href="https://research.mietek.io/mi.MartinLof2006.html#1481">≍-sym</a>   <a id="1893">=</a> <a id="1895" href="https://research.mietek.io/mi.MartinLof2006.html#1634">sym</a>
              <a id="1913">;</a> <a id="1915" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="1923">=</a> <a id="1925" href="https://research.mietek.io/mi.MartinLof2006.html#1698">trans</a>
              <a id="1945">}</a>

<a id="cong"></a><a id="1948" href="https://research.mietek.io/mi.MartinLof2006.html#1948">cong</a> <a id="1953">:</a> <a id="1955">∀</a> <a id="1957">{</a><a id="1958" href="https://research.mietek.io/mi.MartinLof2006.html#1958">𝓈</a> <a id="1960" href="https://research.mietek.io/mi.MartinLof2006.html#1960">𝓉</a><a id="1961">}</a> <a id="1963">{</a><a id="1964" href="https://research.mietek.io/mi.MartinLof2006.html#1964">S</a> <a id="1966">:</a> <a id="1968" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1972" href="https://research.mietek.io/mi.MartinLof2006.html#1958">𝓈</a><a id="1973">}</a> <a id="1975">{</a><a id="1976" href="https://research.mietek.io/mi.MartinLof2006.html#1976">T</a> <a id="1978">:</a> <a id="1980" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="1984" href="https://research.mietek.io/mi.MartinLof2006.html#1960">𝓉</a><a id="1985">}</a> <a id="1987">(</a><a id="1988" href="https://research.mietek.io/mi.MartinLof2006.html#1988">f</a> <a id="1990">:</a> <a id="1992" href="https://research.mietek.io/mi.MartinLof2006.html#1964">S</a> <a id="1994">→</a> <a id="1996" href="https://research.mietek.io/mi.MartinLof2006.html#1976">T</a><a id="1997">)</a> <a id="1999">{</a><a id="2000" href="https://research.mietek.io/mi.MartinLof2006.html#2000">x</a> <a id="2002" href="https://research.mietek.io/mi.MartinLof2006.html#2002">y</a> <a id="2004">:</a> <a id="2006" href="https://research.mietek.io/mi.MartinLof2006.html#1964">S</a><a id="2007">}</a> <a id="2009">→</a>
       <a id="2018" href="https://research.mietek.io/mi.MartinLof2006.html#1629">Id</a> <a id="2021" href="https://research.mietek.io/mi.MartinLof2006.html#2000">x</a> <a id="2023" href="https://research.mietek.io/mi.MartinLof2006.html#2002">y</a> <a id="2025">→</a> <a id="2027" href="https://research.mietek.io/mi.MartinLof2006.html#1629">Id</a> <a id="2030">(</a><a id="2031" href="https://research.mietek.io/mi.MartinLof2006.html#1988">f</a> <a id="2033" href="https://research.mietek.io/mi.MartinLof2006.html#2000">x</a><a id="2034">)</a> <a id="2036">(</a><a id="2037" href="https://research.mietek.io/mi.MartinLof2006.html#1988">f</a> <a id="2039" href="https://research.mietek.io/mi.MartinLof2006.html#2002">y</a><a id="2040">)</a>
<a id="2042" href="https://research.mietek.io/mi.MartinLof2006.html#1948">cong</a> <a id="2047" href="https://research.mietek.io/mi.MartinLof2006.html#2047">f</a> <a id="2049" href="https://research.mietek.io/Agda.Builtin.Equality.html#207">refl</a> <a id="2054">=</a> <a id="2056" href="https://research.mietek.io/Agda.Builtin.Equality.html#207">refl</a>

<a id="Id→≍"></a><a id="2062" href="https://research.mietek.io/mi.MartinLof2006.html#2062">Id→≍</a> <a id="2067">:</a> <a id="2069">∀</a> <a id="2071">{</a><a id="2072" href="https://research.mietek.io/mi.MartinLof2006.html#2072">𝓈</a> <a id="2074" href="https://research.mietek.io/mi.MartinLof2006.html#2074">ℯ</a><a id="2075">}</a> <a id="2077">{</a><a id="2078" href="https://research.mietek.io/mi.MartinLof2006.html#2078">S</a> <a id="2080">:</a> <a id="2082" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2086" href="https://research.mietek.io/mi.MartinLof2006.html#2072">𝓈</a><a id="2087">}</a> <a id="2089">{</a><a id="2090" href="https://research.mietek.io/mi.MartinLof2006.html#2090">x</a> <a id="2092" href="https://research.mietek.io/mi.MartinLof2006.html#2092">y</a> <a id="2094">:</a> <a id="2096" href="https://research.mietek.io/mi.MartinLof2006.html#2078">S</a><a id="2097">}</a> <a id="2099">{{</a><a id="2101" href="https://research.mietek.io/mi.MartinLof2006.html#2101">≍S</a> <a id="2104">:</a> <a id="2106" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="2118" href="https://research.mietek.io/mi.MartinLof2006.html#2078">S</a> <a id="2120" href="https://research.mietek.io/mi.MartinLof2006.html#2074">ℯ</a><a id="2121">}}</a> <a id="2124">→</a>
        <a id="2134" href="https://research.mietek.io/mi.MartinLof2006.html#1629">Id</a> <a id="2137" href="https://research.mietek.io/mi.MartinLof2006.html#2090">x</a> <a id="2139" href="https://research.mietek.io/mi.MartinLof2006.html#2092">y</a> <a id="2141">→</a> <a id="2143" href="https://research.mietek.io/mi.MartinLof2006.html#2090">x</a> <a id="2145" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="2147" href="https://research.mietek.io/mi.MartinLof2006.html#2092">y</a>
<a id="2149" href="https://research.mietek.io/mi.MartinLof2006.html#2062">Id→≍</a> <a id="2154" href="https://research.mietek.io/Agda.Builtin.Equality.html#207">refl</a> <a id="2159">=</a> <a id="2161" href="https://research.mietek.io/mi.MartinLof2006.html#1449">≍-refl</a>

<a id="2169">open</a> <a id="2174">import</a> <a id="2181" href="https://research.mietek.io/Agda.Builtin.Sigma.html">Agda.Builtin.Sigma</a> <a id="2200">using</a> <a id="2206">(</a><a id="2207" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">_,_</a> <a id="2211">;</a> <a id="2213" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="2217">;</a> <a id="2219" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a><a id="2222">)</a> <a id="2224">renaming</a> <a id="2233">(</a><a id="2234" href="https://research.mietek.io/Agda.Builtin.Sigma.html#165">Σ</a> <a id="2236">to</a> <a id="2239">∃</a><a id="2240">)</a>

<a id="2243">infix</a> <a id="2249">2</a> <a id="2251" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃-syntax</a>
<a id="2260">syntax</a> <a id="2267" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃-syntax</a> <a id="2276">S</a> <a id="2278">(λ</a> <a id="2281">x</a> <a id="2283">→</a> <a id="2285">T</a><a id="2286">)</a> <a id="2288">=</a> <a id="2290">∃[</a> <a id="2293">x</a> <a id="2295">⦂</a> <a id="2297">S</a> <a id="2299">]</a> <a id="2301">T</a>
<a id="∃-syntax"></a><a id="2303" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃-syntax</a> <a id="2312">:</a> <a id="2314">∀</a> <a id="2316">{</a><a id="2317" href="https://research.mietek.io/mi.MartinLof2006.html#2317">𝓈</a> <a id="2319" href="https://research.mietek.io/mi.MartinLof2006.html#2319">𝓉</a><a id="2320">}</a> <a id="2322">(</a><a id="2323" href="https://research.mietek.io/mi.MartinLof2006.html#2323">S</a> <a id="2325">:</a> <a id="2327" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2331" href="https://research.mietek.io/mi.MartinLof2006.html#2317">𝓈</a><a id="2332">)</a> <a id="2334">(</a><a id="2335" href="https://research.mietek.io/mi.MartinLof2006.html#2335">T</a> <a id="2337">:</a> <a id="2339" href="https://research.mietek.io/mi.MartinLof2006.html#2323">S</a> <a id="2341">→</a> <a id="2343" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2347" href="https://research.mietek.io/mi.MartinLof2006.html#2319">𝓉</a><a id="2348">)</a> <a id="2350">→</a> <a id="2352" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2356">_</a>
<a id="2358" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃-syntax</a> <a id="2367">=</a> <a id="2369" href="https://research.mietek.io/mi.MartinLof2006.html#2239">∃</a>

<a id="2372">infixr</a> <a id="2379">2</a> <a id="2381" href="https://research.mietek.io/mi.MartinLof2006.html#2385">_∧_</a>
<a id="_∧_"></a><a id="2385" href="https://research.mietek.io/mi.MartinLof2006.html#2385">_∧_</a> <a id="2389">:</a> <a id="2391">∀</a> <a id="2393">{</a><a id="2394" href="https://research.mietek.io/mi.MartinLof2006.html#2394">𝓈</a> <a id="2396" href="https://research.mietek.io/mi.MartinLof2006.html#2396">𝓉</a><a id="2397">}</a> <a id="2399">(</a><a id="2400" href="https://research.mietek.io/mi.MartinLof2006.html#2400">S</a> <a id="2402">:</a> <a id="2404" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2408" href="https://research.mietek.io/mi.MartinLof2006.html#2394">𝓈</a><a id="2409">)</a> <a id="2411">(</a><a id="2412" href="https://research.mietek.io/mi.MartinLof2006.html#2412">T</a> <a id="2414">:</a> <a id="2416" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2420" href="https://research.mietek.io/mi.MartinLof2006.html#2396">𝓉</a><a id="2421">)</a> <a id="2423">→</a> <a id="2425" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2429">_</a>
<a id="2431" href="https://research.mietek.io/mi.MartinLof2006.html#2431">S</a> <a id="2433" href="https://research.mietek.io/mi.MartinLof2006.html#2385">∧</a> <a id="2435" href="https://research.mietek.io/mi.MartinLof2006.html#2435">T</a> <a id="2437">=</a> <a id="2439" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="2442" href="https://research.mietek.io/mi.MartinLof2006.html#2442">_</a> <a id="2444" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="2446" href="https://research.mietek.io/mi.MartinLof2006.html#2431">S</a> <a id="2448" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="2450" href="https://research.mietek.io/mi.MartinLof2006.html#2435">T</a>

<a id="2453">infix</a> <a id="2459">2</a> <a id="2461" href="https://research.mietek.io/mi.MartinLof2006.html#2516">∃!-syntax</a>
<a id="2471">syntax</a> <a id="2478" href="https://research.mietek.io/mi.MartinLof2006.html#2516">∃!-syntax</a> <a id="2488">S</a> <a id="2490">(λ</a> <a id="2493">x</a> <a id="2495">→</a> <a id="2497">T</a><a id="2498">)</a> <a id="2500">=</a> <a id="2502">∃![</a> <a id="2506">x</a> <a id="2508">⦂</a> <a id="2510">S</a> <a id="2512">]</a> <a id="2514">T</a>
<a id="∃!-syntax"></a><a id="2516" href="https://research.mietek.io/mi.MartinLof2006.html#2516">∃!-syntax</a> <a id="2526">:</a> <a id="2528">∀</a> <a id="2530">{</a><a id="2531" href="https://research.mietek.io/mi.MartinLof2006.html#2531">𝓈</a> <a id="2533" href="https://research.mietek.io/mi.MartinLof2006.html#2533">𝓉</a> <a id="2535" href="https://research.mietek.io/mi.MartinLof2006.html#2535">ℯ</a><a id="2536">}</a> <a id="2538">(</a><a id="2539" href="https://research.mietek.io/mi.MartinLof2006.html#2539">S</a> <a id="2541">:</a> <a id="2543" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2547" href="https://research.mietek.io/mi.MartinLof2006.html#2531">𝓈</a><a id="2548">)</a> <a id="2550">(</a><a id="2551" href="https://research.mietek.io/mi.MartinLof2006.html#2551">T</a> <a id="2553">:</a> <a id="2555" href="https://research.mietek.io/mi.MartinLof2006.html#2539">S</a> <a id="2557">→</a> <a id="2559" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2563" href="https://research.mietek.io/mi.MartinLof2006.html#2533">𝓉</a><a id="2564">)</a> <a id="2566">{{</a><a id="2568" href="https://research.mietek.io/mi.MartinLof2006.html#2568">≍S</a> <a id="2571">:</a> <a id="2573" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="2585" href="https://research.mietek.io/mi.MartinLof2006.html#2539">S</a> <a id="2587" href="https://research.mietek.io/mi.MartinLof2006.html#2535">ℯ</a><a id="2588">}}</a> <a id="2591">→</a> <a id="2593" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2597">_</a>
<a id="2599" href="https://research.mietek.io/mi.MartinLof2006.html#2516">∃!-syntax</a> <a id="2609" href="https://research.mietek.io/mi.MartinLof2006.html#2609">S</a> <a id="2611" href="https://research.mietek.io/mi.MartinLof2006.html#2611">T</a> <a id="2613">=</a> <a id="2615" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="2618" href="https://research.mietek.io/mi.MartinLof2006.html#2618">x</a> <a id="2620" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="2622" href="https://research.mietek.io/mi.MartinLof2006.html#2609">S</a> <a id="2624" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="2626" href="https://research.mietek.io/mi.MartinLof2006.html#2611">T</a> <a id="2628" href="https://research.mietek.io/mi.MartinLof2006.html#2618">x</a> <a id="2630" href="https://research.mietek.io/mi.MartinLof2006.html#2385">∧</a> <a id="2632">∀</a> <a id="2634">{</a><a id="2635" href="https://research.mietek.io/mi.MartinLof2006.html#2635">y</a><a id="2636">}</a> <a id="2638">→</a> <a id="2640" href="https://research.mietek.io/mi.MartinLof2006.html#2611">T</a> <a id="2642" href="https://research.mietek.io/mi.MartinLof2006.html#2635">y</a> <a id="2644">→</a> <a id="2646" href="https://research.mietek.io/mi.MartinLof2006.html#2618">x</a> <a id="2648" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="2650" href="https://research.mietek.io/mi.MartinLof2006.html#2635">y</a>

<a id="2653">infix</a> <a id="2659">1</a> <a id="2661" href="https://research.mietek.io/mi.MartinLof2006.html#2665">_↔_</a>
<a id="_↔_"></a><a id="2665" href="https://research.mietek.io/mi.MartinLof2006.html#2665">_↔_</a> <a id="2669">:</a> <a id="2671">∀</a> <a id="2673">{</a><a id="2674" href="https://research.mietek.io/mi.MartinLof2006.html#2674">𝓈</a> <a id="2676" href="https://research.mietek.io/mi.MartinLof2006.html#2676">𝓉</a><a id="2677">}</a> <a id="2679">(</a><a id="2680" href="https://research.mietek.io/mi.MartinLof2006.html#2680">S</a> <a id="2682">:</a> <a id="2684" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2688" href="https://research.mietek.io/mi.MartinLof2006.html#2674">𝓈</a><a id="2689">)</a> <a id="2691">(</a><a id="2692" href="https://research.mietek.io/mi.MartinLof2006.html#2692">T</a> <a id="2694">:</a> <a id="2696" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2700" href="https://research.mietek.io/mi.MartinLof2006.html#2676">𝓉</a><a id="2701">)</a> <a id="2703">→</a> <a id="2705" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2709">_</a>
<a id="2711" href="https://research.mietek.io/mi.MartinLof2006.html#2711">S</a> <a id="2713" href="https://research.mietek.io/mi.MartinLof2006.html#2665">↔</a> <a id="2715" href="https://research.mietek.io/mi.MartinLof2006.html#2715">T</a> <a id="2717">=</a> <a id="2719">(</a><a id="2720" href="https://research.mietek.io/mi.MartinLof2006.html#2711">S</a> <a id="2722">→</a> <a id="2724" href="https://research.mietek.io/mi.MartinLof2006.html#2715">T</a><a id="2725">)</a> <a id="2727" href="https://research.mietek.io/mi.MartinLof2006.html#2385">∧</a> <a id="2729">(</a><a id="2730" href="https://research.mietek.io/mi.MartinLof2006.html#2715">T</a> <a id="2732">→</a> <a id="2734" href="https://research.mietek.io/mi.MartinLof2006.html#2711">S</a><a id="2735">)</a>

<a id="↔-refl"></a><a id="2738" href="https://research.mietek.io/mi.MartinLof2006.html#2738">↔-refl</a> <a id="2745">:</a> <a id="2747">∀</a> <a id="2749">{</a><a id="2750" href="https://research.mietek.io/mi.MartinLof2006.html#2750">𝓈</a><a id="2751">}</a> <a id="2753">→</a> <a id="2755" href="https://research.mietek.io/mi.MartinLof2006.html#1040">Reflexive</a> <a id="2765">{</a><a id="2766">S</a> <a id="2768">=</a> <a id="2770" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2774" href="https://research.mietek.io/mi.MartinLof2006.html#2750">𝓈</a><a id="2775">}</a> <a id="2777" href="https://research.mietek.io/mi.MartinLof2006.html#2665">_↔_</a>
<a id="2781" href="https://research.mietek.io/mi.MartinLof2006.html#2738">↔-refl</a> <a id="2788">=</a> <a id="2790" href="https://research.mietek.io/mi.MartinLof2006.html#756">id</a> <a id="2793" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="2795" href="https://research.mietek.io/mi.MartinLof2006.html#756">id</a>

<a id="↔-sym"></a><a id="2799" href="https://research.mietek.io/mi.MartinLof2006.html#2799">↔-sym</a> <a id="2805">:</a> <a id="2807">∀</a> <a id="2809">{</a><a id="2810" href="https://research.mietek.io/mi.MartinLof2006.html#2810">𝓈</a><a id="2811">}</a> <a id="2813">→</a> <a id="2815" href="https://research.mietek.io/mi.MartinLof2006.html#1132">Symmetric</a> <a id="2825">{</a><a id="2826">S</a> <a id="2828">=</a> <a id="2830" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2834" href="https://research.mietek.io/mi.MartinLof2006.html#2810">𝓈</a><a id="2835">}</a> <a id="2837" href="https://research.mietek.io/mi.MartinLof2006.html#2665">_↔_</a>
<a id="2841" href="https://research.mietek.io/mi.MartinLof2006.html#2799">↔-sym</a> <a id="2847">(</a><a id="2848" href="https://research.mietek.io/mi.MartinLof2006.html#2848">f</a> <a id="2850" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="2852" href="https://research.mietek.io/mi.MartinLof2006.html#2852">f⁻¹</a><a id="2855">)</a> <a id="2857">=</a> <a id="2859" href="https://research.mietek.io/mi.MartinLof2006.html#2852">f⁻¹</a> <a id="2863" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="2865" href="https://research.mietek.io/mi.MartinLof2006.html#2848">f</a>

<a id="↔-trans"></a><a id="2868" href="https://research.mietek.io/mi.MartinLof2006.html#2868">↔-trans</a> <a id="2876">:</a> <a id="2878">∀</a> <a id="2880">{</a><a id="2881" href="https://research.mietek.io/mi.MartinLof2006.html#2881">𝓈</a><a id="2882">}</a> <a id="2884">→</a> <a id="2886" href="https://research.mietek.io/mi.MartinLof2006.html#1234">Transitive</a> <a id="2897">{</a><a id="2898">S</a> <a id="2900">=</a> <a id="2902" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2906" href="https://research.mietek.io/mi.MartinLof2006.html#2881">𝓈</a><a id="2907">}</a> <a id="2909" href="https://research.mietek.io/mi.MartinLof2006.html#2665">_↔_</a>
<a id="2913" href="https://research.mietek.io/mi.MartinLof2006.html#2868">↔-trans</a> <a id="2921">(</a><a id="2922" href="https://research.mietek.io/mi.MartinLof2006.html#2922">f</a> <a id="2924" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="2926" href="https://research.mietek.io/mi.MartinLof2006.html#2926">f⁻¹</a><a id="2929">)</a> <a id="2931">(</a><a id="2932" href="https://research.mietek.io/mi.MartinLof2006.html#2932">g</a> <a id="2934" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="2936" href="https://research.mietek.io/mi.MartinLof2006.html#2936">g⁻¹</a><a id="2939">)</a> <a id="2941">=</a> <a id="2943" href="https://research.mietek.io/mi.MartinLof2006.html#2932">g</a> <a id="2945" href="https://research.mietek.io/mi.MartinLof2006.html#810">∘</a> <a id="2947" href="https://research.mietek.io/mi.MartinLof2006.html#2922">f</a> <a id="2949" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="2951" href="https://research.mietek.io/mi.MartinLof2006.html#2926">f⁻¹</a> <a id="2955" href="https://research.mietek.io/mi.MartinLof2006.html#810">∘</a> <a id="2957" href="https://research.mietek.io/mi.MartinLof2006.html#2936">g⁻¹</a>

<a id="↔-≍"></a><a id="2962" href="https://research.mietek.io/mi.MartinLof2006.html#2962">↔-≍</a> <a id="2966">:</a> <a id="2968">∀</a> <a id="2970">{</a><a id="2971" href="https://research.mietek.io/mi.MartinLof2006.html#2971">𝓈</a><a id="2972">}</a> <a id="2974">→</a> <a id="2976" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="2988">(</a><a id="2989" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="2993" href="https://research.mietek.io/mi.MartinLof2006.html#2971">𝓈</a><a id="2994">)</a> <a id="2996">_</a>
<a id="2998" href="https://research.mietek.io/mi.MartinLof2006.html#2962">↔-≍</a> <a id="3002">=</a> <a id="3004">record</a> <a id="3011">{</a> <a id="3013" href="https://research.mietek.io/mi.MartinLof2006.html#1418">_≍_</a>     <a id="3021">=</a> <a id="3023" href="https://research.mietek.io/mi.MartinLof2006.html#2665">_↔_</a>
              <a id="3041">;</a> <a id="3043" href="https://research.mietek.io/mi.MartinLof2006.html#1449">≍-refl</a>  <a id="3051">=</a> <a id="3053" href="https://research.mietek.io/mi.MartinLof2006.html#2738">↔-refl</a>
              <a id="3074">;</a> <a id="3076" href="https://research.mietek.io/mi.MartinLof2006.html#1481">≍-sym</a>   <a id="3084">=</a> <a id="3086" href="https://research.mietek.io/mi.MartinLof2006.html#2799">↔-sym</a>
              <a id="3106">;</a> <a id="3108" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="3116">=</a> <a id="3118" href="https://research.mietek.io/mi.MartinLof2006.html#2868">↔-trans</a>
              <a id="3140">}</a>

<a id="Subset"></a><a id="3143" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="3150">:</a> <a id="3152">∀</a> <a id="3154">{</a><a id="3155" href="https://research.mietek.io/mi.MartinLof2006.html#3155">𝓈</a><a id="3156">}</a> <a id="3158">(</a><a id="3159" href="https://research.mietek.io/mi.MartinLof2006.html#3159">S</a> <a id="3161">:</a> <a id="3163" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="3167" href="https://research.mietek.io/mi.MartinLof2006.html#3155">𝓈</a><a id="3168">)</a> <a id="3170" href="https://research.mietek.io/mi.MartinLof2006.html#3170">𝒶</a> <a id="3172">→</a> <a id="3174" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="3178">_</a>
<a id="3180" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="3187" href="https://research.mietek.io/mi.MartinLof2006.html#3187">S</a> <a id="3189" href="https://research.mietek.io/mi.MartinLof2006.html#3189">𝒶</a> <a id="3191">=</a> <a id="3193" href="https://research.mietek.io/mi.MartinLof2006.html#3187">S</a> <a id="3195">→</a> <a id="3197" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="3201" href="https://research.mietek.io/mi.MartinLof2006.html#3189">𝒶</a>

<a id="_∩_"></a><a id="3204" href="https://research.mietek.io/mi.MartinLof2006.html#3204">_∩_</a> <a id="3208">:</a> <a id="3210">∀</a> <a id="3212">{</a><a id="3213" href="https://research.mietek.io/mi.MartinLof2006.html#3213">𝓈</a> <a id="3215" href="https://research.mietek.io/mi.MartinLof2006.html#3215">𝒶</a> <a id="3217" href="https://research.mietek.io/mi.MartinLof2006.html#3217">𝒷</a><a id="3218">}</a> <a id="3220">{</a><a id="3221" href="https://research.mietek.io/mi.MartinLof2006.html#3221">S</a> <a id="3223">:</a> <a id="3225" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="3229" href="https://research.mietek.io/mi.MartinLof2006.html#3213">𝓈</a><a id="3230">}</a> <a id="3232">(</a><a id="3233" href="https://research.mietek.io/mi.MartinLof2006.html#3233">A</a> <a id="3235">:</a> <a id="3237" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="3244" href="https://research.mietek.io/mi.MartinLof2006.html#3221">S</a> <a id="3246" href="https://research.mietek.io/mi.MartinLof2006.html#3215">𝒶</a><a id="3247">)</a> <a id="3249">(</a><a id="3250" href="https://research.mietek.io/mi.MartinLof2006.html#3250">B</a> <a id="3252">:</a> <a id="3254" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="3261" href="https://research.mietek.io/mi.MartinLof2006.html#3221">S</a> <a id="3263" href="https://research.mietek.io/mi.MartinLof2006.html#3217">𝒷</a><a id="3264">)</a> <a id="3266">→</a> <a id="3268" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="3275" href="https://research.mietek.io/mi.MartinLof2006.html#3221">S</a> <a id="3277">_</a>
<a id="3279">(</a><a id="3280" href="https://research.mietek.io/mi.MartinLof2006.html#3280">A</a> <a id="3282" href="https://research.mietek.io/mi.MartinLof2006.html#3204">∩</a> <a id="3284" href="https://research.mietek.io/mi.MartinLof2006.html#3284">B</a><a id="3285">)</a> <a id="3287" href="https://research.mietek.io/mi.MartinLof2006.html#3287">x</a> <a id="3289">=</a> <a id="3291" href="https://research.mietek.io/mi.MartinLof2006.html#3280">A</a> <a id="3293" href="https://research.mietek.io/mi.MartinLof2006.html#3287">x</a> <a id="3295" href="https://research.mietek.io/mi.MartinLof2006.html#2385">∧</a> <a id="3297" href="https://research.mietek.io/mi.MartinLof2006.html#3284">B</a> <a id="3299" href="https://research.mietek.io/mi.MartinLof2006.html#3287">x</a>
</pre>
<p>Cantor conceived set theory in a sequence of six papers published in the <em><span lang="de">Mathematische Annalen</span></em> during the five year period 1879–1884. In the fifth of these papers, published in 1883,<a href="#fn1" id="fnref1" role="doc-noteref"><sup>1</sup></a> he stated as a law of thought (<em><span lang="de">Denkgesetz</span></em>) that every set can be well-ordered or, more precisely, that it is always possible to bring any well-defined set into the form of a well-ordered set. Now to call it a law of thought was implicitly to claim self-evidence for it, but he must have given up that claim at some point, because in the 1890s he made an unsuccessful attempt at demonstrating the well-ordering principle.<a href="#fn2" id="fnref2" role="doc-noteref"><sup>2</sup></a></p>
<p>The first to succeed in doing so was Zermelo,<a href="#fn3" id="fnref3" role="doc-noteref"><sup>3</sup></a> although, as a prerequisite of the demonstration, he had to introduce a new principle, which came to be called the principle of choice (<em><span lang="de">Prinzip der Auswahl</span></em>) respectively the axiom of choice (<em><span lang="de">Axiom der Auswahl</span></em>) in his two<a href="#fn4" id="fnref4" role="doc-noteref"><sup>4</sup></a> papers<a href="#fn5" id="fnref5" role="doc-noteref"><sup>5</sup></a> from 1908. His first paper on the subject, published in 1904, consists of merely three pages, excerpted by Hilbert from a letter which he had received from Zermelo. The letter is dated 24 September 1904, and the excerpt begins by saying that the demonstration came out of discussions with Erhard Schmidt during the preceding week, which means that we can safely date the appearance of the axiom of choice and the demonstration of the well-ordering theorem to September 1904.</p>
<p>Brief as it was, Zermelo’s paper gave rise to what is presumably the most lively discussion among mathematicians on the validity, or acceptability, of a mathematical axiom that has ever taken place. Within a couple of years, written contributions to this discussion were published by Felix Bernstein, Schoenflies, Hamel, Hessenberg, and Hausdorff in Germany; Baire, Borel, Hadamard, Lebesgue, Richard, and Poincaré in France; Hobson, Hardy, Jourdain, and Russell in England; Julius König in Hungary; Peano in Italy, and Brouwer in the Netherlands.<a href="#fn6" id="fnref6" role="doc-noteref"><sup>6</sup></a> Zermelo responded to those of these contributions that were critical, which was a majority, in a second paper from 1908. This second paper also contains a new proof of the well-ordering theorem, less intuitive or less perspicuous, it has to be admitted, than the original proof, as well as a new formulation of the axiom of choice, a formulation which will play a crucial role in the following considerations.</p>
<p>Despite the strength of the initial opposition against it, Zermelo’s axiom of choice gradually came to be accepted, mainly because it was needed at an early stage in the development of several branches of mathematics, not only set theory, but also topology, algebra and functional analysis, for example. Towards the end of the thirties, it had become firmly established and was made part of the standard mathematical curriculum in the form of Zorn’s lemma.<a href="#fn7" id="fnref7" role="doc-noteref"><sup>7</sup></a></p>
<p>The intuitionists, on the other hand, rejected the axiom of choice from the very beginning. Baire, Borel, and Lebesgue were all critical of it in their contributions to the correspondence, which was published under the title <em><span lang="fr">Cinq lettres sur la théorie des ensembles</span></em> in 1905.<a href="#fn8" id="fnref8" role="doc-noteref"><sup>8</sup></a> Brouwer’s thesis from 1907 contains a section on the well-ordering principle in which it is treated in a dismissive fashion (‘of course there is no motivation for this at all’) and in which, following Borel,<a href="#fn9" id="fnref9" role="doc-noteref"><sup>9</sup></a> he belittles Zermelo’s proof of it from the axiom of choice.<a href="#fn10" id="fnref10" role="doc-noteref"><sup>10</sup></a> No further discussion of the axiom of choice seems to be found in either Brouwer’s or Heyting’s writings. Presumably, it was regarded by them as a prime example of a nonconstructive principle.</p>
<div>
<p>It therefore came as a surprise when, as late as in 1967, Bishop stated,</p>
<blockquote>
<p>A choice function exists in constructive mathematics, because a choice is <em>implied by the very meaning of existence</em>,<a href="#fn11" id="fnref11" role="doc-noteref"><sup>11</sup></a></p>
</blockquote>
<p>although, in the terminology that he himself introduced in the subsequent chapter, he ought to have said ‘choice operation’ rather than ‘choice function’. What he had in mind was clearly that the truth of</p>
<p><span>(∀i : I)(∃x : S)A(i, x) → (∃f : I → S)(∀i : I)A(i, f(i))</span></p>
<p>and even, more generally,</p>
<p><span>(∀i : I)(∃x : S_i)A(i, x) → (∃f : Π_{i : I} S_i)(∀i : I)A(i, f(i))</span></p>
<p>becomes evident almost immediately upon remembering the Brouwer-Heyting-Kolmogorov interpretation of the logical constants, which means that it might as well have been observed already in the early thirties. And it is this intuitive justification that was turned into a formal proof in constructive type theory, a proof that effectively uses the strong rule of <span>∃</span>-elimination that became possible to formulate as a result of having made the proof objects appear in the system itself and not only in its interpretation.</p>
<pre><a id="8043">-- (intensional, constructive, type-theoretic) axiom of choice</a>
<a id="AC"></a><a id="8106" href="https://research.mietek.io/mi.MartinLof2006.html#8106">AC</a> <a id="8109">:</a> <a id="8111">∀</a> <a id="8113" href="https://research.mietek.io/mi.MartinLof2006.html#8113">ℓ</a> <a id="8115">→</a> <a id="8117" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="8121">_</a>
<a id="8123" href="https://research.mietek.io/mi.MartinLof2006.html#8106">AC</a> <a id="8126" href="https://research.mietek.io/mi.MartinLof2006.html#8126">ℓ</a> <a id="8128">=</a> <a id="8130">∀</a> <a id="8132">{</a><a id="8133" href="https://research.mietek.io/mi.MartinLof2006.html#8133">I</a> <a id="8135" href="https://research.mietek.io/mi.MartinLof2006.html#8135">S</a> <a id="8137">:</a> <a id="8139" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="8143" href="https://research.mietek.io/mi.MartinLof2006.html#8126">ℓ</a><a id="8144">}</a> <a id="8146">{</a><a id="8147" href="https://research.mietek.io/mi.MartinLof2006.html#8147">A</a> <a id="8149">:</a> <a id="8151" href="https://research.mietek.io/mi.MartinLof2006.html#8133">I</a> <a id="8153">→</a> <a id="8155" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="8162" href="https://research.mietek.io/mi.MartinLof2006.html#8135">S</a> <a id="8164" href="https://research.mietek.io/mi.MartinLof2006.html#8126">ℓ</a><a id="8165">}</a> <a id="8167">→</a>
         <a id="8178">(∀</a> <a id="8181" href="https://research.mietek.io/mi.MartinLof2006.html#8181">i</a> <a id="8183">→</a> <a id="8185" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="8188" href="https://research.mietek.io/mi.MartinLof2006.html#8188">x</a> <a id="8190" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="8192" href="https://research.mietek.io/mi.MartinLof2006.html#8135">S</a> <a id="8194" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="8196" href="https://research.mietek.io/mi.MartinLof2006.html#8147">A</a> <a id="8198" href="https://research.mietek.io/mi.MartinLof2006.html#8181">i</a> <a id="8200" href="https://research.mietek.io/mi.MartinLof2006.html#8188">x</a><a id="8201">)</a> <a id="8203">→</a> <a id="8205" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="8208" href="https://research.mietek.io/mi.MartinLof2006.html#8208">f</a> <a id="8210" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="8212">(</a><a id="8213" href="https://research.mietek.io/mi.MartinLof2006.html#8133">I</a> <a id="8215">→</a> <a id="8217" href="https://research.mietek.io/mi.MartinLof2006.html#8135">S</a><a id="8218">)</a> <a id="8220" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="8222">∀</a> <a id="8224" href="https://research.mietek.io/mi.MartinLof2006.html#8224">i</a> <a id="8226">→</a> <a id="8228" href="https://research.mietek.io/mi.MartinLof2006.html#8147">A</a> <a id="8230" href="https://research.mietek.io/mi.MartinLof2006.html#8224">i</a> <a id="8232">(</a><a id="8233" href="https://research.mietek.io/mi.MartinLof2006.html#8208">f</a> <a id="8235" href="https://research.mietek.io/mi.MartinLof2006.html#8224">i</a><a id="8236">)</a>

<a id="8239">-- generalised axiom of choice</a>
<a id="GAC"></a><a id="8270" href="https://research.mietek.io/mi.MartinLof2006.html#8270">GAC</a> <a id="8274">:</a> <a id="8276">∀</a> <a id="8278" href="https://research.mietek.io/mi.MartinLof2006.html#8278">ℓ</a> <a id="8280">→</a> <a id="8282" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="8286">_</a>
<a id="8288" href="https://research.mietek.io/mi.MartinLof2006.html#8270">GAC</a> <a id="8292" href="https://research.mietek.io/mi.MartinLof2006.html#8292">ℓ</a> <a id="8294">=</a> <a id="8296">∀</a> <a id="8298">{</a><a id="8299" href="https://research.mietek.io/mi.MartinLof2006.html#8299">I</a> <a id="8301">:</a> <a id="8303" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="8307" href="https://research.mietek.io/mi.MartinLof2006.html#8292">ℓ</a><a id="8308">}</a> <a id="8310">{</a><a id="8311" href="https://research.mietek.io/mi.MartinLof2006.html#8311">S</a> <a id="8313">:</a> <a id="8315" href="https://research.mietek.io/mi.MartinLof2006.html#8299">I</a> <a id="8317">→</a> <a id="8319" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="8323" href="https://research.mietek.io/mi.MartinLof2006.html#8292">ℓ</a><a id="8324">}</a> <a id="8326">{</a><a id="8327" href="https://research.mietek.io/mi.MartinLof2006.html#8327">A</a> <a id="8329">:</a> <a id="8331">∀</a> <a id="8333" href="https://research.mietek.io/mi.MartinLof2006.html#8333">i</a> <a id="8335">→</a> <a id="8337" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="8344">(</a><a id="8345" href="https://research.mietek.io/mi.MartinLof2006.html#8311">S</a> <a id="8347" href="https://research.mietek.io/mi.MartinLof2006.html#8333">i</a><a id="8348">)</a> <a id="8350" href="https://research.mietek.io/mi.MartinLof2006.html#8292">ℓ</a><a id="8351">}</a> <a id="8353">→</a>
          <a id="8365">(∀</a> <a id="8368" href="https://research.mietek.io/mi.MartinLof2006.html#8368">i</a> <a id="8370">→</a> <a id="8372" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="8375" href="https://research.mietek.io/mi.MartinLof2006.html#8375">x</a> <a id="8377" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="8379" href="https://research.mietek.io/mi.MartinLof2006.html#8311">S</a> <a id="8381" href="https://research.mietek.io/mi.MartinLof2006.html#8368">i</a> <a id="8383" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="8385" href="https://research.mietek.io/mi.MartinLof2006.html#8327">A</a> <a id="8387" href="https://research.mietek.io/mi.MartinLof2006.html#8368">i</a> <a id="8389" href="https://research.mietek.io/mi.MartinLof2006.html#8375">x</a><a id="8390">)</a> <a id="8392">→</a> <a id="8394" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="8397" href="https://research.mietek.io/mi.MartinLof2006.html#8397">f</a> <a id="8399" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="8401">(∀</a> <a id="8404" href="https://research.mietek.io/mi.MartinLof2006.html#8404">i</a> <a id="8406">→</a> <a id="8408" href="https://research.mietek.io/mi.MartinLof2006.html#8311">S</a> <a id="8410" href="https://research.mietek.io/mi.MartinLof2006.html#8404">i</a><a id="8411">)</a> <a id="8413" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="8415">∀</a> <a id="8417" href="https://research.mietek.io/mi.MartinLof2006.html#8417">i</a> <a id="8419">→</a> <a id="8421" href="https://research.mietek.io/mi.MartinLof2006.html#8327">A</a> <a id="8423" href="https://research.mietek.io/mi.MartinLof2006.html#8417">i</a> <a id="8425">(</a><a id="8426" href="https://research.mietek.io/mi.MartinLof2006.html#8397">f</a> <a id="8428" href="https://research.mietek.io/mi.MartinLof2006.html#8417">i</a><a id="8429">)</a>

<a id="gac"></a><a id="8432" href="https://research.mietek.io/mi.MartinLof2006.html#8432">gac</a> <a id="8436">:</a> <a id="8438">∀</a> <a id="8440">{</a><a id="8441" href="https://research.mietek.io/mi.MartinLof2006.html#8441">ℓ</a><a id="8442">}</a> <a id="8444">→</a> <a id="8446" href="https://research.mietek.io/mi.MartinLof2006.html#8270">GAC</a> <a id="8450" href="https://research.mietek.io/mi.MartinLof2006.html#8441">ℓ</a>
<a id="8452" href="https://research.mietek.io/mi.MartinLof2006.html#8432">gac</a> <a id="8456" href="https://research.mietek.io/mi.MartinLof2006.html#8456">h</a> <a id="8458">=</a> <a id="8460" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="8464" href="https://research.mietek.io/mi.MartinLof2006.html#810">∘</a> <a id="8466" href="https://research.mietek.io/mi.MartinLof2006.html#8456">h</a> <a id="8468" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="8470" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="8474" href="https://research.mietek.io/mi.MartinLof2006.html#810">∘</a> <a id="8476" href="https://research.mietek.io/mi.MartinLof2006.html#8456">h</a>

<a id="ac"></a><a id="8479" href="https://research.mietek.io/mi.MartinLof2006.html#8479">ac</a> <a id="8482">:</a> <a id="8484">∀</a> <a id="8486">{</a><a id="8487" href="https://research.mietek.io/mi.MartinLof2006.html#8487">ℓ</a><a id="8488">}</a> <a id="8490">→</a> <a id="8492" href="https://research.mietek.io/mi.MartinLof2006.html#8106">AC</a> <a id="8495" href="https://research.mietek.io/mi.MartinLof2006.html#8487">ℓ</a>
<a id="8497" href="https://research.mietek.io/mi.MartinLof2006.html#8479">ac</a> <a id="8500">=</a> <a id="8502" href="https://research.mietek.io/mi.MartinLof2006.html#8432">gac</a>
</pre>
</div>
<p>In 1975, soon after Bishop’s vindication of the constructive axiom of choice, Diaconescu proved that, in topos theory, the law of excluded middle follows from the axiom of choice.<a href="#fn12" id="fnref12" role="doc-noteref"><sup>12</sup></a> Now, topos theory being an intuitionistic theory, albeit impredicative, this is on the surface of it incompatible with Bishop’s observation because of the constructive unacceptability of the law of excluded middle. There is therefore a need to investigate how the constructive axiom of choice, validated by the Brouwer-Heyting-Kolmogorov interpretation, is related to Zermelo’s axiom of choice on the one hand and to the topos-theoretic axiom of choice on the other.</p>
<p>To this end, using constructive type theory as our instrument of analysis, let us simply try to prove Zermelo’s axiom of choice. This attempt should of course fail, but in the process of making it we might at least be able to discover what it is that is really objectionable about it. So what was Zermelo’s axiom of choice? In the original paper from 1904, he gave to it the following formulation,</p>
<blockquote>
<p><span lang="de"><em>Jeder Teilmenge <span>M'</span> denke man sich ein beliebiges Element <span>m'_1</span> zugeordnet, das in <span>M'</span> selbst vorkommt und das „ausgezeichnete” Element von <span>M'</span> genannt werden möge.</em></span><a href="#fn13" id="fnref13" role="doc-noteref"><sup>13</sup></a></p>
</blockquote>
<p>Here <span>M'</span> is an arbitrary subset, which contains at least one element, of a given set <span>M.</span> What is surprising about this formulation is that there is nothing objectionable about it from a constructive point of view. Indeed, the distinguished element <span>m'_1</span> can be taken to be the first projection of the proof of the existential proposition <span>(∃x : M)</span><span>M'(x),</span> which says that the subset <span>M'</span> of <span>M</span> contains at least one element. This means that one would have to go into the demonstration of the well-ordering theorem in order to determine exactly what are its nonconstructive ingredients.</p>
<p>Instead of doing that, I shall turn to the formulation of the axiom of choice that Zermelo favoured in his second paper on the well-ordering theorem from 1908,</p>
<blockquote>
<p><span lang="de">Axiom. <em>Eine Menge <span>S,</span> welche in eine Menge getrennter Teile <span>A,</span> <span>B,</span> <span>C,</span> <span>…</span> zerfällt, deren jeder mindestens ein Element enthält, besitzt mindestens eine Untermenge <span>S_1,</span> welche mit jedem der betrachteten Teile <span>A,</span> <span>B,</span> <span>C,</span> <span>…</span> genau ein Element gemein hat.</em></span><a href="#fn14" id="fnref14" role="doc-noteref"><sup>14</sup></a></p>
</blockquote>


<div>
<p>The obvious way of trying to prove (6) and (7) from (1)–(5) is to apply the type-theoretic (constructive, inten­sional) axiom of choice to (5), so as to get a function <span>f : I → S</span> such that</p>
<p><span>(∀i : I)A_i(f(i)),</span></p>
<p>and then define <span>S_1</span> by the equation</p>
<p><span>S_1 = \{f(j)\ |\ j : I\} = \{x\ |\ (∃j : I)(f(j)) ≍_S x)\}.</span></p>
<p>Defined in this way, <span>S_1</span> is clearly exten­sional, which is to say that it satisfies (6). What about (7)? Since the proposition</p>
<p><span>(A_i ∩ S_1)(f(i)) = A_i(f(i)) ∧ S_1(f(i))</span></p>
<p>is clearly true, so is</p>
<p><span>(∀i : I)(∃x : S)(A_i ∩ S_1)(x),</span></p>
<p>which means that only the uniqueness condition remains to be proved. To this end, assume that the proposition</p>
<p><span>(A_i ∩ S_1)(y) = A_i(y) ∧ S_1(y)</span></p>
<p>is true, that is, that the two propositions</p>
<p><span>
\begin{cases}
  A_i(y),\\
  S_1(y) = (∃j : I)(f(j) ≍_S y),
\end{cases}
</span></p>
<p>are both true. Let <span>j : I</span> satisfy <span>f(j) ≍_S y.</span> Then, since <span>(∀i : I)</span><span>A_i(f(i))</span> is true, so is <span>A_j(f(j)).</span> Hence, by the exten­sionality of <span>A_j</span> with respect to <span>≍_S,</span> <span>A_j(y)</span> is true, which, together with the assumed truth of <span>A_i(y),</span> yields <span>i ≍_I j</span> by the mutual exclusiveness of the family of subsets <span>(A_i)_{i : I}.</span> At this stage, in order to conclude that <span>f(i) ≍_S y,</span> we need to know that the choice function <span>f</span> is exten­sional, that is, that</p>
<p><span>i ≍_I j → f(i) ≍_S f(j).</span></p>
<p>This, however, is not guaranteed by the constructive, or inten­sional, axiom of choice which follows from the strong rule of <span>∃</span>-elimination in type theory. Thus our attempt to prove Zermelo’s axiom of choice has failed, as was to be expected.</p>
<p>On the other hand, we have succeeded in proving that Zermelo’s axiom of choice follows from the exten­sional axiom of choice</p>
<p><span>(∀i : I)(∃x : S)A_i(x) → (∃f : I → S)(\text{Ext}(f) ∧ (∀i : I)A_i(f(i))),</span></p>
<p>which I shall call ExtAC, where</p>
<p><span>\text{Ext}(f) ≍ (∀i, j: I)(i ≍_I j → f(i) ≍_S f(j)).</span></p>
<p>The only trouble with it is that it lacks the evidence of the inten­sional axiom of choice, which does not prevent one from investigating its consequences, of course.</p>
<pre><a id="16270">-- extensional axiom of choice</a>
<a id="EAC"></a><a id="16301" href="https://research.mietek.io/mi.MartinLof2006.html#16301">EAC</a> <a id="16305">:</a> <a id="16307">∀</a> <a id="16309" href="https://research.mietek.io/mi.MartinLof2006.html#16309">ℓ</a> <a id="16311">→</a> <a id="16313" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="16317">_</a>
<a id="16319" href="https://research.mietek.io/mi.MartinLof2006.html#16301">EAC</a> <a id="16323" href="https://research.mietek.io/mi.MartinLof2006.html#16323">ℓ</a> <a id="16325">=</a> <a id="16327">∀</a> <a id="16329">{</a><a id="16330" href="https://research.mietek.io/mi.MartinLof2006.html#16330">I</a> <a id="16332" href="https://research.mietek.io/mi.MartinLof2006.html#16332">S</a> <a id="16334">:</a> <a id="16336" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="16340" href="https://research.mietek.io/mi.MartinLof2006.html#16323">ℓ</a><a id="16341">}</a> <a id="16343">{</a><a id="16344" href="https://research.mietek.io/mi.MartinLof2006.html#16344">A</a> <a id="16346">:</a> <a id="16348" href="https://research.mietek.io/mi.MartinLof2006.html#16330">I</a> <a id="16350">→</a> <a id="16352" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="16359" href="https://research.mietek.io/mi.MartinLof2006.html#16332">S</a> <a id="16361" href="https://research.mietek.io/mi.MartinLof2006.html#16323">ℓ</a><a id="16362">}</a>
          <a id="16374">{{</a><a id="16376" href="https://research.mietek.io/mi.MartinLof2006.html#16376">≍I</a> <a id="16379">:</a> <a id="16381" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="16393" href="https://research.mietek.io/mi.MartinLof2006.html#16330">I</a> <a id="16395" href="https://research.mietek.io/mi.MartinLof2006.html#16323">ℓ</a><a id="16396">}}</a> <a id="16399">{{</a><a id="16401" href="https://research.mietek.io/mi.MartinLof2006.html#16401">≍S</a> <a id="16404">:</a> <a id="16406" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="16418" href="https://research.mietek.io/mi.MartinLof2006.html#16332">S</a> <a id="16420" href="https://research.mietek.io/mi.MartinLof2006.html#16323">ℓ</a><a id="16421">}}</a>
          <a id="16434">(</a><a id="16435" href="https://research.mietek.io/mi.MartinLof2006.html#16435">p₁</a> <a id="16438">:</a> <a id="16440" href="https://research.mietek.io/mi.MartinLof2006.html#12985">Extensional-≍S-↔</a> <a id="16457" href="https://research.mietek.io/mi.MartinLof2006.html#16344">A</a><a id="16458">)</a> <a id="16460">(</a><a id="16461" href="https://research.mietek.io/mi.MartinLof2006.html#16461">p₂</a> <a id="16464">:</a> <a id="16466" href="https://research.mietek.io/mi.MartinLof2006.html#13170">Extensional-≍I-↔</a> <a id="16483" href="https://research.mietek.io/mi.MartinLof2006.html#16344">A</a><a id="16484">)</a>
          <a id="16496">(</a><a id="16497" href="https://research.mietek.io/mi.MartinLof2006.html#16497">p₅</a> <a id="16500">:</a> <a id="16502" href="https://research.mietek.io/mi.MartinLof2006.html#13677">Nonempty</a> <a id="16511" href="https://research.mietek.io/mi.MartinLof2006.html#16344">A</a><a id="16512">)</a> <a id="16514">→</a>
        <a id="16524" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="16527" href="https://research.mietek.io/mi.MartinLof2006.html#16527">f</a> <a id="16529" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="16531">(</a><a id="16532" href="https://research.mietek.io/mi.MartinLof2006.html#16330">I</a> <a id="16534">→</a> <a id="16536" href="https://research.mietek.io/mi.MartinLof2006.html#16332">S</a><a id="16537">)</a> <a id="16539" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="16541" href="https://research.mietek.io/mi.MartinLof2006.html#11486">Extensional</a> <a id="16553" href="https://research.mietek.io/mi.MartinLof2006.html#16527">f</a> <a id="16555" href="https://research.mietek.io/mi.MartinLof2006.html#2385">∧</a> <a id="16557">∀</a> <a id="16559" href="https://research.mietek.io/mi.MartinLof2006.html#16559">i</a> <a id="16561">→</a> <a id="16563" href="https://research.mietek.io/mi.MartinLof2006.html#16344">A</a> <a id="16565" href="https://research.mietek.io/mi.MartinLof2006.html#16559">i</a> <a id="16567">(</a><a id="16568" href="https://research.mietek.io/mi.MartinLof2006.html#16527">f</a> <a id="16570" href="https://research.mietek.io/mi.MartinLof2006.html#16559">i</a><a id="16571">)</a>

<a id="eac→zac"></a><a id="16574" href="https://research.mietek.io/mi.MartinLof2006.html#16574">eac→zac</a> <a id="16582">:</a> <a id="16584">∀</a> <a id="16586">{</a><a id="16587" href="https://research.mietek.io/mi.MartinLof2006.html#16587">ℓ</a><a id="16588">}</a> <a id="16590">→</a> <a id="16592" href="https://research.mietek.io/mi.MartinLof2006.html#16301">EAC</a> <a id="16596" href="https://research.mietek.io/mi.MartinLof2006.html#16587">ℓ</a> <a id="16598">→</a> <a id="16600" href="https://research.mietek.io/mi.MartinLof2006.html#13825">ZAC</a> <a id="16604" href="https://research.mietek.io/mi.MartinLof2006.html#16587">ℓ</a>
<a id="16606" href="https://research.mietek.io/mi.MartinLof2006.html#16574">eac→zac</a> <a id="16614" href="https://research.mietek.io/mi.MartinLof2006.html#16614">eac</a> <a id="16618">{</a><a id="16619" href="https://research.mietek.io/mi.MartinLof2006.html#16619">I</a><a id="16620">}</a> <a id="16622">{</a><a id="16623" href="https://research.mietek.io/mi.MartinLof2006.html#16623">S</a><a id="16624">}</a> <a id="16626">{</a><a id="16627" href="https://research.mietek.io/mi.MartinLof2006.html#16627">A</a><a id="16628">}</a> <a id="16630" href="https://research.mietek.io/mi.MartinLof2006.html#16630">p₁</a> <a id="16633" href="https://research.mietek.io/mi.MartinLof2006.html#16633">p₂</a> <a id="16636" href="https://research.mietek.io/mi.MartinLof2006.html#16636">p₃</a> <a id="16639" href="https://research.mietek.io/mi.MartinLof2006.html#16639">p₄</a> <a id="16642" href="https://research.mietek.io/mi.MartinLof2006.html#16642">p₅</a> <a id="16645">=</a> <a id="16647" href="https://research.mietek.io/mi.MartinLof2006.html#16778">S₁</a> <a id="16650" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="16652" href="https://research.mietek.io/mi.MartinLof2006.html#16829">p₆</a> <a id="16655" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="16657" href="https://research.mietek.io/mi.MartinLof2006.html#17467">p₇</a>
  <a id="16662">where</a>
    <a id="16672" href="https://research.mietek.io/mi.MartinLof2006.html#16672">f</a> <a id="16674">:</a> <a id="16676" href="https://research.mietek.io/mi.MartinLof2006.html#16619">I</a> <a id="16678">→</a> <a id="16680" href="https://research.mietek.io/mi.MartinLof2006.html#16623">S</a>
    <a id="16686" href="https://research.mietek.io/mi.MartinLof2006.html#16672">f</a> <a id="16688">=</a> <a id="16690" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="16694">(</a><a id="16695" href="https://research.mietek.io/mi.MartinLof2006.html#16614">eac</a> <a id="16699" href="https://research.mietek.io/mi.MartinLof2006.html#16630">p₁</a> <a id="16702" href="https://research.mietek.io/mi.MartinLof2006.html#16633">p₂</a> <a id="16705" href="https://research.mietek.io/mi.MartinLof2006.html#16642">p₅</a><a id="16707">)</a>

    <a id="16714" href="https://research.mietek.io/mi.MartinLof2006.html#16714">f-ext</a> <a id="16720">:</a> <a id="16722" href="https://research.mietek.io/mi.MartinLof2006.html#11486">Extensional</a> <a id="16734" href="https://research.mietek.io/mi.MartinLof2006.html#16672">f</a>
    <a id="16740" href="https://research.mietek.io/mi.MartinLof2006.html#16714">f-ext</a> <a id="16746">=</a> <a id="16748" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="16752">(</a><a id="16753" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="16757">(</a><a id="16758" href="https://research.mietek.io/mi.MartinLof2006.html#16614">eac</a> <a id="16762" href="https://research.mietek.io/mi.MartinLof2006.html#16630">p₁</a> <a id="16765" href="https://research.mietek.io/mi.MartinLof2006.html#16633">p₂</a> <a id="16768" href="https://research.mietek.io/mi.MartinLof2006.html#16642">p₅</a><a id="16770">))</a>

    <a id="16778" href="https://research.mietek.io/mi.MartinLof2006.html#16778">S₁</a> <a id="16781">:</a> <a id="16783" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="16790" href="https://research.mietek.io/mi.MartinLof2006.html#16623">S</a> <a id="16792">_</a>
    <a id="16798" href="https://research.mietek.io/mi.MartinLof2006.html#16778">S₁</a> <a id="16801" href="https://research.mietek.io/mi.MartinLof2006.html#16801">x</a> <a id="16803">=</a> <a id="16805" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="16808" href="https://research.mietek.io/mi.MartinLof2006.html#16808">j</a> <a id="16810" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="16812" href="https://research.mietek.io/mi.MartinLof2006.html#16619">I</a> <a id="16814" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="16816" href="https://research.mietek.io/mi.MartinLof2006.html#16672">f</a> <a id="16818" href="https://research.mietek.io/mi.MartinLof2006.html#16808">j</a> <a id="16820" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="16822" href="https://research.mietek.io/mi.MartinLof2006.html#16801">x</a>

    <a id="16829" href="https://research.mietek.io/mi.MartinLof2006.html#16829">p₆</a> <a id="16832">:</a> <a id="16834" href="https://research.mietek.io/mi.MartinLof2006.html#12012">Extensional-≍-↔</a> <a id="16850" href="https://research.mietek.io/mi.MartinLof2006.html#16778">S₁</a>
    <a id="16857" href="https://research.mietek.io/mi.MartinLof2006.html#16829">p₆</a> <a id="16860" href="https://research.mietek.io/mi.MartinLof2006.html#16860">x≍y</a> <a id="16864">=</a> <a id="16866">(λ</a> <a id="16869">{</a> <a id="16871">(</a><a id="16872" href="https://research.mietek.io/mi.MartinLof2006.html#16872">j</a> <a id="16874" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="16876" href="https://research.mietek.io/mi.MartinLof2006.html#16876">fj≍x</a><a id="16880">)</a> <a id="16882">→</a> <a id="16884" href="https://research.mietek.io/mi.MartinLof2006.html#16872">j</a> <a id="16886" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="16888" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="16896">{</a><a id="16897">S</a> <a id="16899">=</a> <a id="16901" href="https://research.mietek.io/mi.MartinLof2006.html#16623">S</a><a id="16902">}</a> <a id="16904" href="https://research.mietek.io/mi.MartinLof2006.html#16876">fj≍x</a> <a id="16909" href="https://research.mietek.io/mi.MartinLof2006.html#16860">x≍y</a> <a id="16913">})</a>
           <a id="16927" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="16929">(λ</a> <a id="16932">{</a> <a id="16934">(</a><a id="16935" href="https://research.mietek.io/mi.MartinLof2006.html#16935">j</a> <a id="16937" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="16939" href="https://research.mietek.io/mi.MartinLof2006.html#16939">fj≍y</a><a id="16943">)</a> <a id="16945">→</a> <a id="16947" href="https://research.mietek.io/mi.MartinLof2006.html#16935">j</a> <a id="16949" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="16951" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="16959">{</a><a id="16960">S</a> <a id="16962">=</a> <a id="16964" href="https://research.mietek.io/mi.MartinLof2006.html#16623">S</a><a id="16965">}</a> <a id="16967" href="https://research.mietek.io/mi.MartinLof2006.html#16939">fj≍y</a> <a id="16972">(</a><a id="16973" href="https://research.mietek.io/mi.MartinLof2006.html#1481">≍-sym</a> <a id="16979">{</a><a id="16980">S</a> <a id="16982">=</a> <a id="16984" href="https://research.mietek.io/mi.MartinLof2006.html#16623">S</a><a id="16985">}</a> <a id="16987" href="https://research.mietek.io/mi.MartinLof2006.html#16860">x≍y</a><a id="16990">)</a> <a id="16992">})</a>

    <a id="17000" href="https://research.mietek.io/mi.MartinLof2006.html#17000">f-common</a> <a id="17009">:</a> <a id="17011">∀</a> <a id="17013" href="https://research.mietek.io/mi.MartinLof2006.html#17013">i</a> <a id="17015">→</a> <a id="17017">(</a><a id="17018" href="https://research.mietek.io/mi.MartinLof2006.html#16627">A</a> <a id="17020" href="https://research.mietek.io/mi.MartinLof2006.html#17013">i</a> <a id="17022" href="https://research.mietek.io/mi.MartinLof2006.html#3204">∩</a> <a id="17024" href="https://research.mietek.io/mi.MartinLof2006.html#16778">S₁</a><a id="17026">)</a> <a id="17028">(</a><a id="17029" href="https://research.mietek.io/mi.MartinLof2006.html#16672">f</a> <a id="17031" href="https://research.mietek.io/mi.MartinLof2006.html#17013">i</a><a id="17032">)</a>
    <a id="17038" href="https://research.mietek.io/mi.MartinLof2006.html#17000">f-common</a> <a id="17047" href="https://research.mietek.io/mi.MartinLof2006.html#17047">i</a> <a id="17049">=</a> <a id="17051" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="17055">(</a><a id="17056" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="17060">(</a><a id="17061" href="https://research.mietek.io/mi.MartinLof2006.html#16614">eac</a> <a id="17065" href="https://research.mietek.io/mi.MartinLof2006.html#16630">p₁</a> <a id="17068" href="https://research.mietek.io/mi.MartinLof2006.html#16633">p₂</a> <a id="17071" href="https://research.mietek.io/mi.MartinLof2006.html#16642">p₅</a><a id="17073">))</a> <a id="17076" href="https://research.mietek.io/mi.MartinLof2006.html#17047">i</a> <a id="17078" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="17080" href="https://research.mietek.io/mi.MartinLof2006.html#17047">i</a> <a id="17082" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="17084" href="https://research.mietek.io/mi.MartinLof2006.html#1449">≍-refl</a> <a id="17091">{</a><a id="17092">S</a> <a id="17094">=</a> <a id="17096" href="https://research.mietek.io/mi.MartinLof2006.html#16623">S</a><a id="17097">}</a>

    <a id="17104" href="https://research.mietek.io/mi.MartinLof2006.html#17104">f-unique</a> <a id="17113">:</a> <a id="17115">∀</a> <a id="17117" href="https://research.mietek.io/mi.MartinLof2006.html#17117">i</a> <a id="17119">{</a><a id="17120" href="https://research.mietek.io/mi.MartinLof2006.html#17120">y</a><a id="17121">}</a> <a id="17123">→</a> <a id="17125">(</a><a id="17126" href="https://research.mietek.io/mi.MartinLof2006.html#16627">A</a> <a id="17128" href="https://research.mietek.io/mi.MartinLof2006.html#17117">i</a> <a id="17130" href="https://research.mietek.io/mi.MartinLof2006.html#3204">∩</a> <a id="17132" href="https://research.mietek.io/mi.MartinLof2006.html#16778">S₁</a><a id="17134">)</a> <a id="17136" href="https://research.mietek.io/mi.MartinLof2006.html#17120">y</a> <a id="17138">→</a> <a id="17140" href="https://research.mietek.io/mi.MartinLof2006.html#16672">f</a> <a id="17142" href="https://research.mietek.io/mi.MartinLof2006.html#17117">i</a> <a id="17144" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="17146" href="https://research.mietek.io/mi.MartinLof2006.html#17120">y</a>
    <a id="17152" href="https://research.mietek.io/mi.MartinLof2006.html#17104">f-unique</a> <a id="17161" href="https://research.mietek.io/mi.MartinLof2006.html#17161">i</a> <a id="17163">{</a><a id="17164" href="https://research.mietek.io/mi.MartinLof2006.html#17164">y</a><a id="17165">}</a> <a id="17167">(</a><a id="17168" href="https://research.mietek.io/mi.MartinLof2006.html#17168">y-here</a> <a id="17175" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="17177" href="https://research.mietek.io/mi.MartinLof2006.html#17177">j</a> <a id="17179" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="17181" href="https://research.mietek.io/mi.MartinLof2006.html#17181">fj≍y</a><a id="17185">)</a> <a id="17187">=</a> <a id="17189" href="https://research.mietek.io/mi.MartinLof2006.html#17399">fi≍y</a>
      <a id="17200">where</a>
        <a id="17214" href="https://research.mietek.io/mi.MartinLof2006.html#17214">fj-there</a> <a id="17223">:</a> <a id="17225" href="https://research.mietek.io/mi.MartinLof2006.html#16627">A</a> <a id="17227" href="https://research.mietek.io/mi.MartinLof2006.html#17177">j</a> <a id="17229">(</a><a id="17230" href="https://research.mietek.io/mi.MartinLof2006.html#16672">f</a> <a id="17232" href="https://research.mietek.io/mi.MartinLof2006.html#17177">j</a><a id="17233">)</a>
        <a id="17243" href="https://research.mietek.io/mi.MartinLof2006.html#17214">fj-there</a> <a id="17252">=</a> <a id="17254" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="17258">(</a><a id="17259" href="https://research.mietek.io/mi.MartinLof2006.html#17000">f-common</a> <a id="17268" href="https://research.mietek.io/mi.MartinLof2006.html#17177">j</a><a id="17269">)</a>

        <a id="17280" href="https://research.mietek.io/mi.MartinLof2006.html#17280">y-there</a> <a id="17288">:</a> <a id="17290" href="https://research.mietek.io/mi.MartinLof2006.html#16627">A</a> <a id="17292" href="https://research.mietek.io/mi.MartinLof2006.html#17177">j</a> <a id="17294" href="https://research.mietek.io/mi.MartinLof2006.html#17164">y</a>
        <a id="17304" href="https://research.mietek.io/mi.MartinLof2006.html#17280">y-there</a> <a id="17312">=</a> <a id="17314" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="17318">(</a><a id="17319" href="https://research.mietek.io/mi.MartinLof2006.html#16630">p₁</a> <a id="17322" href="https://research.mietek.io/mi.MartinLof2006.html#17181">fj≍y</a><a id="17326">)</a> <a id="17328" href="https://research.mietek.io/mi.MartinLof2006.html#17214">fj-there</a>

        <a id="17346" href="https://research.mietek.io/mi.MartinLof2006.html#17346">i≍j</a> <a id="17350">:</a> <a id="17352" href="https://research.mietek.io/mi.MartinLof2006.html#17161">i</a> <a id="17354" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="17356" href="https://research.mietek.io/mi.MartinLof2006.html#17177">j</a>
        <a id="17366" href="https://research.mietek.io/mi.MartinLof2006.html#17346">i≍j</a> <a id="17370">=</a> <a id="17372" href="https://research.mietek.io/mi.MartinLof2006.html#16636">p₃</a> <a id="17375" href="https://research.mietek.io/mi.MartinLof2006.html#17168">y-here</a> <a id="17382" href="https://research.mietek.io/mi.MartinLof2006.html#17280">y-there</a>

        <a id="17399" href="https://research.mietek.io/mi.MartinLof2006.html#17399">fi≍y</a> <a id="17404">:</a> <a id="17406" href="https://research.mietek.io/mi.MartinLof2006.html#16672">f</a> <a id="17408" href="https://research.mietek.io/mi.MartinLof2006.html#17161">i</a> <a id="17410" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="17412" href="https://research.mietek.io/mi.MartinLof2006.html#17164">y</a>
        <a id="17422" href="https://research.mietek.io/mi.MartinLof2006.html#17399">fi≍y</a> <a id="17427">=</a> <a id="17429" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="17437">{</a><a id="17438">S</a> <a id="17440">=</a> <a id="17442" href="https://research.mietek.io/mi.MartinLof2006.html#16623">S</a><a id="17443">}</a> <a id="17445">(</a><a id="17446" href="https://research.mietek.io/mi.MartinLof2006.html#16714">f-ext</a> <a id="17452" href="https://research.mietek.io/mi.MartinLof2006.html#17346">i≍j</a><a id="17455">)</a> <a id="17457" href="https://research.mietek.io/mi.MartinLof2006.html#17181">fj≍y</a>

    <a id="17467" href="https://research.mietek.io/mi.MartinLof2006.html#17467">p₇</a> <a id="17470">:</a> <a id="17472">∀</a> <a id="17474" href="https://research.mietek.io/mi.MartinLof2006.html#17474">i</a> <a id="17476">→</a> <a id="17478" href="https://research.mietek.io/mi.MartinLof2006.html#2516">∃![</a> <a id="17482" href="https://research.mietek.io/mi.MartinLof2006.html#17482">x</a> <a id="17484" href="https://research.mietek.io/mi.MartinLof2006.html#2516">⦂</a> <a id="17486" href="https://research.mietek.io/mi.MartinLof2006.html#16623">S</a> <a id="17488" href="https://research.mietek.io/mi.MartinLof2006.html#2516">]</a> <a id="17490">(</a><a id="17491" href="https://research.mietek.io/mi.MartinLof2006.html#16627">A</a> <a id="17493" href="https://research.mietek.io/mi.MartinLof2006.html#17474">i</a> <a id="17495" href="https://research.mietek.io/mi.MartinLof2006.html#3204">∩</a> <a id="17497" href="https://research.mietek.io/mi.MartinLof2006.html#16778">S₁</a><a id="17499">)</a> <a id="17501" href="https://research.mietek.io/mi.MartinLof2006.html#17482">x</a>
    <a id="17507" href="https://research.mietek.io/mi.MartinLof2006.html#17467">p₇</a> <a id="17510" href="https://research.mietek.io/mi.MartinLof2006.html#17510">i</a> <a id="17512">=</a> <a id="17514" href="https://research.mietek.io/mi.MartinLof2006.html#16672">f</a> <a id="17516" href="https://research.mietek.io/mi.MartinLof2006.html#17510">i</a> <a id="17518" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="17520" href="https://research.mietek.io/mi.MartinLof2006.html#17000">f-common</a> <a id="17529" href="https://research.mietek.io/mi.MartinLof2006.html#17510">i</a> <a id="17531" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="17533" href="https://research.mietek.io/mi.MartinLof2006.html#17104">f-unique</a> <a id="17542" href="https://research.mietek.io/mi.MartinLof2006.html#17510">i</a>
</pre>
</div>
<h4 id="theorem-i">Theorem I.</h4>
<p><em>The following are equivalent in constructive type theory:</em></p>
<ol type="i">
<li><em>The exten­sional axiom of choice.</em></li>
<li><em>Zermelo’s axiom of choice.</em></li>
<li><em>Epimorphisms split, that is, every surjective exten­sional function has an exten­sional right inverse.</em></li>
<li><em>Unique representatives can be picked from the equivalence classes of any given equivalence relation.</em></li>
</ol>
<p>Of these four equivalent statements, (iii) is the topos-theoretic axiom of choice, which is thus equivalent, not to the constructively valid type-theoretic axiom of choice, but to Zermelo’s axiom of choice.</p>
<h5 id="proof">Proof.</h5>
<p>We shall prove the implications (i)<span>→</span>(ii)<span>→</span>(iii)<span>→</span>(iv)<span>→</span>(i) in this order.</p>
<h6 id="iii">(i)<span>→</span>(ii).</h6>

<h6 id="iiiii">(ii)<span>→</span>(iii).</h6>
<div>
<p>Let <span>(S, ≍_S)</span> and <span>(I, ≍_I)</span> be two exten­sional sets, and let <span>f : S → I</span> be an exten­sional and surjective mapping between them. By definition, put</p>
<p><span>A_i = f^{-1}(i) = \{x\ |\ f(x) ≍_I i\}.</span></p>
<p>Then</p>
<ol type="1">
<li><span>x ≍_S y → (A_i(x) ↔ A_i(y))</span></li>
</ol>
<p>by the assumed exten­sionality of <span>f,</span></p>
<ol start="2" type="1">
<li><span>i ≍_I j → (∀x : S)(A_i(x) ↔ A_j(x))</span></li>
</ol>
<p>since <span>f(x) ≍_I i</span> is equivalent to <span>f(x) ≍_I j</span> provided that <span>i ≍_I j,</span></p>
<ol start="3" type="1">
<li><span>(∃x : S)(A_i(x) ∧ A_j(x)) → i ≍_I j</span></li>
</ol>
<p>since <span>f(x) ≍_I i</span> and <span>f(x) ≍_I j</span> together imply <span>i ≍_I j,</span></p>
<ol start="4" type="1">
<li><span>(∀x : S)(∃i : I)A_i(x)</span></li>
</ol>
<p>since <span>A_{f(x)}(x)</span> for any <span>x : S,</span> and</p>
<ol start="5" type="1">
<li><span>(∀i : I)(∃x : S)A_i(x)</span></li>
</ol>
<p>by the assumed surjectivity of the function <span>f.</span> Therefore we can apply Zermelo’s axiom of choice to get a subset <span>S_1</span> of <span>S</span> such that</p>
<p><span>(∀i : I)(∃!x : S)(A_i ∩ S_1)(x).</span></p>
<p>The constructive, or inten­sional, axiom of choice, to which we have access in type theory, then yields <span>g : I → S</span> such that <span>(A_i ∩ S_1)(g(i)),</span> that is,</p>
<p><span>(f(g(i)) ≍_I i) ∧ S_1(g(i)),</span></p>
<p>so that <span>g</span> is a right inverse of <span>f,</span> and</p>
<p><span>(A_i ∩ S_1)(y) → g(i) ≍_S y.</span></p>
<p>It remains only to show that <span>g</span> is exten­sional. So assume <span>i, j : I.</span> Then we have</p>
<p><span>(A_i ∩ S_1)(g(i))</span></p>
<p>as well as</p>
<p><span>(A_j ∩ S_1)(g(j))</span></p>
<p>so that, if also <span>i ≍_I j,</span></p>
<p><span>(A_i ∩ S_1)(g(j))</span></p>
<p>by the exten­sional dependence of <span>A_i</span> on the index <span>i.</span> The uniqueness property of <span>A_i ∩ S_1</span> permits us to now conclude <span>g(i) ≍_S g(j)</span> as desired.</p>
<pre><a id="Surjective"></a><a id="19905" href="https://research.mietek.io/mi.MartinLof2006.html#19905">Surjective</a> <a id="19916">:</a> <a id="19918">∀</a> <a id="19920">{</a><a id="19921" href="https://research.mietek.io/mi.MartinLof2006.html#19921">𝓈</a> <a id="19923" href="https://research.mietek.io/mi.MartinLof2006.html#19923">𝓉</a> <a id="19925" href="https://research.mietek.io/mi.MartinLof2006.html#19925">ℯT</a><a id="19927">}</a> <a id="19929">{</a><a id="19930" href="https://research.mietek.io/mi.MartinLof2006.html#19930">S</a> <a id="19932">:</a> <a id="19934" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="19938" href="https://research.mietek.io/mi.MartinLof2006.html#19921">𝓈</a><a id="19939">}</a> <a id="19941">{</a><a id="19942" href="https://research.mietek.io/mi.MartinLof2006.html#19942">T</a> <a id="19944">:</a> <a id="19946" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="19950" href="https://research.mietek.io/mi.MartinLof2006.html#19923">𝓉</a><a id="19951">}</a> <a id="19953">(</a><a id="19954" href="https://research.mietek.io/mi.MartinLof2006.html#19954">f</a> <a id="19956">:</a> <a id="19958" href="https://research.mietek.io/mi.MartinLof2006.html#19930">S</a> <a id="19960">→</a> <a id="19962" href="https://research.mietek.io/mi.MartinLof2006.html#19942">T</a><a id="19963">)</a>
               <a id="19980">{{</a><a id="19982" href="https://research.mietek.io/mi.MartinLof2006.html#19982">≍T</a> <a id="19985">:</a> <a id="19987" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="19999" href="https://research.mietek.io/mi.MartinLof2006.html#19942">T</a> <a id="20001" href="https://research.mietek.io/mi.MartinLof2006.html#19925">ℯT</a><a id="20003">}}</a> <a id="20006">→</a> <a id="20008" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="20012">_</a>
<a id="20014" href="https://research.mietek.io/mi.MartinLof2006.html#19905">Surjective</a> <a id="20025">{</a><a id="20026">S</a> <a id="20028">=</a> <a id="20030" href="https://research.mietek.io/mi.MartinLof2006.html#20030">S</a><a id="20031">}</a> <a id="20033" href="https://research.mietek.io/mi.MartinLof2006.html#20033">f</a> <a id="20035">=</a> <a id="20037">∀</a> <a id="20039" href="https://research.mietek.io/mi.MartinLof2006.html#20039">y</a> <a id="20041">→</a> <a id="20043" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="20046" href="https://research.mietek.io/mi.MartinLof2006.html#20046">x</a> <a id="20048" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="20050" href="https://research.mietek.io/mi.MartinLof2006.html#20030">S</a> <a id="20052" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="20054" href="https://research.mietek.io/mi.MartinLof2006.html#20033">f</a> <a id="20056" href="https://research.mietek.io/mi.MartinLof2006.html#20046">x</a> <a id="20058" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="20060" href="https://research.mietek.io/mi.MartinLof2006.html#20039">y</a>

<a id="RightInverse"></a><a id="20063" href="https://research.mietek.io/mi.MartinLof2006.html#20063">RightInverse</a> <a id="20076">:</a> <a id="20078">∀</a> <a id="20080">{</a><a id="20081" href="https://research.mietek.io/mi.MartinLof2006.html#20081">𝓈</a> <a id="20083" href="https://research.mietek.io/mi.MartinLof2006.html#20083">𝓉</a> <a id="20085" href="https://research.mietek.io/mi.MartinLof2006.html#20085">ℯT</a><a id="20087">}</a> <a id="20089">{</a><a id="20090" href="https://research.mietek.io/mi.MartinLof2006.html#20090">S</a> <a id="20092">:</a> <a id="20094" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="20098" href="https://research.mietek.io/mi.MartinLof2006.html#20081">𝓈</a><a id="20099">}</a> <a id="20101">{</a><a id="20102" href="https://research.mietek.io/mi.MartinLof2006.html#20102">T</a> <a id="20104">:</a> <a id="20106" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="20110" href="https://research.mietek.io/mi.MartinLof2006.html#20083">𝓉</a><a id="20111">}</a> <a id="20113">(</a><a id="20114" href="https://research.mietek.io/mi.MartinLof2006.html#20114">g</a> <a id="20116">:</a> <a id="20118" href="https://research.mietek.io/mi.MartinLof2006.html#20102">T</a> <a id="20120">→</a> <a id="20122" href="https://research.mietek.io/mi.MartinLof2006.html#20090">S</a><a id="20123">)</a> <a id="20125">(</a><a id="20126" href="https://research.mietek.io/mi.MartinLof2006.html#20126">f</a> <a id="20128">:</a> <a id="20130" href="https://research.mietek.io/mi.MartinLof2006.html#20090">S</a> <a id="20132">→</a> <a id="20134" href="https://research.mietek.io/mi.MartinLof2006.html#20102">T</a><a id="20135">)</a>
                 <a id="20154">{{</a><a id="20156" href="https://research.mietek.io/mi.MartinLof2006.html#20156">≍T</a> <a id="20159">:</a> <a id="20161" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="20173" href="https://research.mietek.io/mi.MartinLof2006.html#20102">T</a> <a id="20175" href="https://research.mietek.io/mi.MartinLof2006.html#20085">ℯT</a><a id="20177">}}</a> <a id="20180">→</a> <a id="20182" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="20186">_</a>
<a id="20188" href="https://research.mietek.io/mi.MartinLof2006.html#20063">RightInverse</a> <a id="20201" href="https://research.mietek.io/mi.MartinLof2006.html#20201">g</a> <a id="20203" href="https://research.mietek.io/mi.MartinLof2006.html#20203">f</a> <a id="20205">=</a> <a id="20207">∀</a> <a id="20209" href="https://research.mietek.io/mi.MartinLof2006.html#20209">y</a> <a id="20211">→</a> <a id="20213">(</a><a id="20214" href="https://research.mietek.io/mi.MartinLof2006.html#20203">f</a> <a id="20216" href="https://research.mietek.io/mi.MartinLof2006.html#810">∘</a> <a id="20218" href="https://research.mietek.io/mi.MartinLof2006.html#20201">g</a><a id="20219">)</a> <a id="20221" href="https://research.mietek.io/mi.MartinLof2006.html#20209">y</a> <a id="20223" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="20225" href="https://research.mietek.io/mi.MartinLof2006.html#20209">y</a>

<a id="20228">-- every surjective extensional function has an extensional right inverse</a>
<a id="AC₃"></a><a id="20302" href="https://research.mietek.io/mi.MartinLof2006.html#20302">AC₃</a> <a id="20306">:</a> <a id="20308">∀</a> <a id="20310" href="https://research.mietek.io/mi.MartinLof2006.html#20310">ℓ</a> <a id="20312">→</a> <a id="20314" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="20318">_</a>
<a id="20320" href="https://research.mietek.io/mi.MartinLof2006.html#20302">AC₃</a> <a id="20324" href="https://research.mietek.io/mi.MartinLof2006.html#20324">ℓ</a> <a id="20326">=</a> <a id="20328">∀</a> <a id="20330">{</a><a id="20331" href="https://research.mietek.io/mi.MartinLof2006.html#20331">I</a> <a id="20333" href="https://research.mietek.io/mi.MartinLof2006.html#20333">S</a> <a id="20335">:</a> <a id="20337" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="20341" href="https://research.mietek.io/mi.MartinLof2006.html#20324">ℓ</a><a id="20342">}</a> <a id="20344">(</a><a id="20345" href="https://research.mietek.io/mi.MartinLof2006.html#20345">f</a> <a id="20347">:</a> <a id="20349" href="https://research.mietek.io/mi.MartinLof2006.html#20333">S</a> <a id="20351">→</a> <a id="20353" href="https://research.mietek.io/mi.MartinLof2006.html#20331">I</a><a id="20354">)</a>
          <a id="20366">{{</a><a id="20368" href="https://research.mietek.io/mi.MartinLof2006.html#20368">≍I</a> <a id="20371">:</a> <a id="20373" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="20385" href="https://research.mietek.io/mi.MartinLof2006.html#20331">I</a> <a id="20387" href="https://research.mietek.io/mi.MartinLof2006.html#20324">ℓ</a><a id="20388">}}</a> <a id="20391">{{</a><a id="20393" href="https://research.mietek.io/mi.MartinLof2006.html#20393">≍S</a> <a id="20396">:</a> <a id="20398" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="20410" href="https://research.mietek.io/mi.MartinLof2006.html#20333">S</a> <a id="20412" href="https://research.mietek.io/mi.MartinLof2006.html#20324">ℓ</a><a id="20413">}}</a>
          <a id="20426">(</a><a id="20427" href="https://research.mietek.io/mi.MartinLof2006.html#20427">f-ext</a> <a id="20433">:</a> <a id="20435" href="https://research.mietek.io/mi.MartinLof2006.html#11486">Extensional</a> <a id="20447" href="https://research.mietek.io/mi.MartinLof2006.html#20345">f</a><a id="20448">)</a> <a id="20450">(</a><a id="20451" href="https://research.mietek.io/mi.MartinLof2006.html#20451">f-surj</a> <a id="20458">:</a> <a id="20460" href="https://research.mietek.io/mi.MartinLof2006.html#19905">Surjective</a> <a id="20471" href="https://research.mietek.io/mi.MartinLof2006.html#20345">f</a><a id="20472">)</a> <a id="20474">→</a>
        <a id="20484" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="20487" href="https://research.mietek.io/mi.MartinLof2006.html#20487">g</a> <a id="20489" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="20491">(</a><a id="20492" href="https://research.mietek.io/mi.MartinLof2006.html#20331">I</a> <a id="20494">→</a> <a id="20496" href="https://research.mietek.io/mi.MartinLof2006.html#20333">S</a><a id="20497">)</a> <a id="20499" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="20501" href="https://research.mietek.io/mi.MartinLof2006.html#20063">RightInverse</a> <a id="20514" href="https://research.mietek.io/mi.MartinLof2006.html#20487">g</a> <a id="20516" href="https://research.mietek.io/mi.MartinLof2006.html#20345">f</a> <a id="20518" href="https://research.mietek.io/mi.MartinLof2006.html#2385">∧</a> <a id="20520" href="https://research.mietek.io/mi.MartinLof2006.html#11486">Extensional</a> <a id="20532" href="https://research.mietek.io/mi.MartinLof2006.html#20487">g</a>

<a id="ii→iii"></a><a id="20535" href="https://research.mietek.io/mi.MartinLof2006.html#20535">ii→iii</a> <a id="20542">:</a> <a id="20544">∀</a> <a id="20546">{</a><a id="20547" href="https://research.mietek.io/mi.MartinLof2006.html#20547">ℓ</a><a id="20548">}</a> <a id="20550">→</a> <a id="20552" href="https://research.mietek.io/mi.MartinLof2006.html#13825">ZAC</a> <a id="20556" href="https://research.mietek.io/mi.MartinLof2006.html#20547">ℓ</a> <a id="20558">→</a> <a id="20560" href="https://research.mietek.io/mi.MartinLof2006.html#20302">AC₃</a> <a id="20564" href="https://research.mietek.io/mi.MartinLof2006.html#20547">ℓ</a>
<a id="20566" href="https://research.mietek.io/mi.MartinLof2006.html#20535">ii→iii</a> <a id="20573" href="https://research.mietek.io/mi.MartinLof2006.html#20573">zac</a> <a id="20577">{</a><a id="20578" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a><a id="20579">}</a> <a id="20581">{</a><a id="20582" href="https://research.mietek.io/mi.MartinLof2006.html#20582">S</a><a id="20583">}</a> <a id="20585" href="https://research.mietek.io/mi.MartinLof2006.html#20585">f</a> <a id="20587" href="https://research.mietek.io/mi.MartinLof2006.html#20587">f-ext</a> <a id="20593" href="https://research.mietek.io/mi.MartinLof2006.html#20593">f-surj</a> <a id="20600">=</a> <a id="20602" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a> <a id="20604" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="20606" href="https://research.mietek.io/mi.MartinLof2006.html#21506">g-f-rinv</a> <a id="20615" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="20617" href="https://research.mietek.io/mi.MartinLof2006.html#21573">g-ext</a>
  <a id="20625">where</a>
    <a id="20635" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a> <a id="20637">:</a> <a id="20639" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a> <a id="20641">→</a> <a id="20643" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="20650" href="https://research.mietek.io/mi.MartinLof2006.html#20582">S</a> <a id="20652">_</a>
    <a id="20658" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a> <a id="20660" href="https://research.mietek.io/mi.MartinLof2006.html#20660">i</a> <a id="20662" href="https://research.mietek.io/mi.MartinLof2006.html#20662">x</a> <a id="20664">=</a> <a id="20666" href="https://research.mietek.io/mi.MartinLof2006.html#20585">f</a> <a id="20668" href="https://research.mietek.io/mi.MartinLof2006.html#20662">x</a> <a id="20670" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="20672" href="https://research.mietek.io/mi.MartinLof2006.html#20660">i</a>

    <a id="20679" href="https://research.mietek.io/mi.MartinLof2006.html#20679">p₁</a> <a id="20682">:</a> <a id="20684" href="https://research.mietek.io/mi.MartinLof2006.html#12985">Extensional-≍S-↔</a> <a id="20701" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a>
    <a id="20707" href="https://research.mietek.io/mi.MartinLof2006.html#20679">p₁</a> <a id="20710" href="https://research.mietek.io/mi.MartinLof2006.html#20710">x≍y</a> <a id="20714">=</a> <a id="20716">(λ</a> <a id="20719" href="https://research.mietek.io/mi.MartinLof2006.html#20719">fx≍i</a> <a id="20724">→</a> <a id="20726" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="20734">{</a><a id="20735">S</a> <a id="20737">=</a> <a id="20739" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a><a id="20740">}</a> <a id="20742">(</a><a id="20743" href="https://research.mietek.io/mi.MartinLof2006.html#1481">≍-sym</a> <a id="20749">{</a><a id="20750">S</a> <a id="20752">=</a> <a id="20754" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a><a id="20755">}</a> <a id="20757">(</a><a id="20758" href="https://research.mietek.io/mi.MartinLof2006.html#20587">f-ext</a> <a id="20764" href="https://research.mietek.io/mi.MartinLof2006.html#20710">x≍y</a><a id="20767">))</a> <a id="20770" href="https://research.mietek.io/mi.MartinLof2006.html#20719">fx≍i</a><a id="20774">)</a>
           <a id="20787" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="20789">(λ</a> <a id="20792" href="https://research.mietek.io/mi.MartinLof2006.html#20792">fy≍i</a> <a id="20797">→</a> <a id="20799" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="20807">{</a><a id="20808">S</a> <a id="20810">=</a> <a id="20812" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a><a id="20813">}</a> <a id="20815">(</a><a id="20816" href="https://research.mietek.io/mi.MartinLof2006.html#20587">f-ext</a> <a id="20822" href="https://research.mietek.io/mi.MartinLof2006.html#20710">x≍y</a><a id="20825">)</a> <a id="20827" href="https://research.mietek.io/mi.MartinLof2006.html#20792">fy≍i</a><a id="20831">)</a>

    <a id="20838" href="https://research.mietek.io/mi.MartinLof2006.html#20838">p₂</a> <a id="20841">:</a> <a id="20843" href="https://research.mietek.io/mi.MartinLof2006.html#13170">Extensional-≍I-↔</a> <a id="20860" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a>
    <a id="20866" href="https://research.mietek.io/mi.MartinLof2006.html#20838">p₂</a> <a id="20869" href="https://research.mietek.io/mi.MartinLof2006.html#20869">i≍j</a> <a id="20873">=</a> <a id="20875">(λ</a> <a id="20878" href="https://research.mietek.io/mi.MartinLof2006.html#20878">fx≍i</a> <a id="20883">→</a> <a id="20885" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="20893">{</a><a id="20894">S</a> <a id="20896">=</a> <a id="20898" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a><a id="20899">}</a> <a id="20901" href="https://research.mietek.io/mi.MartinLof2006.html#20878">fx≍i</a> <a id="20906" href="https://research.mietek.io/mi.MartinLof2006.html#20869">i≍j</a><a id="20909">)</a>
           <a id="20922" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="20924">(λ</a> <a id="20927" href="https://research.mietek.io/mi.MartinLof2006.html#20927">fx≍j</a> <a id="20932">→</a> <a id="20934" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="20942">{</a><a id="20943">S</a> <a id="20945">=</a> <a id="20947" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a><a id="20948">}</a> <a id="20950" href="https://research.mietek.io/mi.MartinLof2006.html#20927">fx≍j</a> <a id="20955">(</a><a id="20956" href="https://research.mietek.io/mi.MartinLof2006.html#1481">≍-sym</a> <a id="20962">{</a><a id="20963">S</a> <a id="20965">=</a> <a id="20967" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a><a id="20968">}</a> <a id="20970" href="https://research.mietek.io/mi.MartinLof2006.html#20869">i≍j</a><a id="20973">))</a>

    <a id="20981" href="https://research.mietek.io/mi.MartinLof2006.html#20981">p₃</a> <a id="20984">:</a> <a id="20986" href="https://research.mietek.io/mi.MartinLof2006.html#13363">MutuallyExclusive</a> <a id="21004" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a>
    <a id="21010" href="https://research.mietek.io/mi.MartinLof2006.html#20981">p₃</a> <a id="21013" href="https://research.mietek.io/mi.MartinLof2006.html#21013">fx≍i</a> <a id="21018" href="https://research.mietek.io/mi.MartinLof2006.html#21018">fx≍j</a> <a id="21023">=</a> <a id="21025" href="https://research.mietek.io/mi.MartinLof2006.html#1513">≍-trans</a> <a id="21033">{</a><a id="21034">S</a> <a id="21036">=</a> <a id="21038" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a><a id="21039">}</a> <a id="21041">(</a><a id="21042" href="https://research.mietek.io/mi.MartinLof2006.html#1481">≍-sym</a> <a id="21048">{</a><a id="21049">S</a> <a id="21051">=</a> <a id="21053" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a><a id="21054">}</a> <a id="21056" href="https://research.mietek.io/mi.MartinLof2006.html#21013">fx≍i</a><a id="21060">)</a> <a id="21062" href="https://research.mietek.io/mi.MartinLof2006.html#21018">fx≍j</a>

    <a id="21072" href="https://research.mietek.io/mi.MartinLof2006.html#21072">p₄</a> <a id="21075">:</a> <a id="21077" href="https://research.mietek.io/mi.MartinLof2006.html#13554">Exhaustive</a> <a id="21088" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a>
    <a id="21094" href="https://research.mietek.io/mi.MartinLof2006.html#21072">p₄</a> <a id="21097" href="https://research.mietek.io/mi.MartinLof2006.html#21097">x</a> <a id="21099">=</a> <a id="21101" href="https://research.mietek.io/mi.MartinLof2006.html#20585">f</a> <a id="21103" href="https://research.mietek.io/mi.MartinLof2006.html#21097">x</a> <a id="21105" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="21107" href="https://research.mietek.io/mi.MartinLof2006.html#1449">≍-refl</a> <a id="21114">{</a><a id="21115">S</a> <a id="21117">=</a> <a id="21119" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a><a id="21120">}</a>

    <a id="21127" href="https://research.mietek.io/mi.MartinLof2006.html#21127">p₅</a> <a id="21130">:</a> <a id="21132" href="https://research.mietek.io/mi.MartinLof2006.html#13677">Nonempty</a> <a id="21141" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a>
    <a id="21147" href="https://research.mietek.io/mi.MartinLof2006.html#21127">p₅</a> <a id="21150">=</a> <a id="21152" href="https://research.mietek.io/mi.MartinLof2006.html#20593">f-surj</a>

    <a id="21164" href="https://research.mietek.io/mi.MartinLof2006.html#21164">S₁</a> <a id="21167">:</a> <a id="21169" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="21176" href="https://research.mietek.io/mi.MartinLof2006.html#20582">S</a> <a id="21178">_</a>
    <a id="21184" href="https://research.mietek.io/mi.MartinLof2006.html#21164">S₁</a> <a id="21187">=</a> <a id="21189" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="21193">(</a><a id="21194" href="https://research.mietek.io/mi.MartinLof2006.html#20573">zac</a> <a id="21198" href="https://research.mietek.io/mi.MartinLof2006.html#20679">p₁</a> <a id="21201" href="https://research.mietek.io/mi.MartinLof2006.html#20838">p₂</a> <a id="21204" href="https://research.mietek.io/mi.MartinLof2006.html#20981">p₃</a> <a id="21207" href="https://research.mietek.io/mi.MartinLof2006.html#21072">p₄</a> <a id="21210" href="https://research.mietek.io/mi.MartinLof2006.html#21127">p₅</a><a id="21212">)</a>

    <a id="21219" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a> <a id="21221">:</a> <a id="21223" href="https://research.mietek.io/mi.MartinLof2006.html#20578">I</a> <a id="21225">→</a> <a id="21227" href="https://research.mietek.io/mi.MartinLof2006.html#20582">S</a>
    <a id="21233" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a> <a id="21235">=</a> <a id="21237" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="21241">(</a><a id="21242" href="https://research.mietek.io/mi.MartinLof2006.html#8479">ac</a> <a id="21245">(</a><a id="21246" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21250">(</a><a id="21251" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21255">(</a><a id="21256" href="https://research.mietek.io/mi.MartinLof2006.html#20573">zac</a> <a id="21260" href="https://research.mietek.io/mi.MartinLof2006.html#20679">p₁</a> <a id="21263" href="https://research.mietek.io/mi.MartinLof2006.html#20838">p₂</a> <a id="21266" href="https://research.mietek.io/mi.MartinLof2006.html#20981">p₃</a> <a id="21269" href="https://research.mietek.io/mi.MartinLof2006.html#21072">p₄</a> <a id="21272" href="https://research.mietek.io/mi.MartinLof2006.html#21127">p₅</a><a id="21274">))))</a>

    <a id="21284" href="https://research.mietek.io/mi.MartinLof2006.html#21284">g-common</a> <a id="21293">:</a> <a id="21295">∀</a> <a id="21297" href="https://research.mietek.io/mi.MartinLof2006.html#21297">i</a> <a id="21299">→</a> <a id="21301">(</a><a id="21302" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a> <a id="21304" href="https://research.mietek.io/mi.MartinLof2006.html#21297">i</a> <a id="21306" href="https://research.mietek.io/mi.MartinLof2006.html#3204">∩</a> <a id="21308" href="https://research.mietek.io/mi.MartinLof2006.html#21164">S₁</a><a id="21310">)</a> <a id="21312">(</a><a id="21313" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a> <a id="21315" href="https://research.mietek.io/mi.MartinLof2006.html#21297">i</a><a id="21316">)</a>
    <a id="21322" href="https://research.mietek.io/mi.MartinLof2006.html#21284">g-common</a> <a id="21331" href="https://research.mietek.io/mi.MartinLof2006.html#21331">i</a> <a id="21333">=</a> <a id="21335" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="21339">(</a><a id="21340" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21344">(</a><a id="21345" href="https://research.mietek.io/mi.MartinLof2006.html#8479">ac</a> <a id="21348">(</a><a id="21349" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21353">(</a><a id="21354" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21358">(</a><a id="21359" href="https://research.mietek.io/mi.MartinLof2006.html#20573">zac</a> <a id="21363" href="https://research.mietek.io/mi.MartinLof2006.html#20679">p₁</a> <a id="21366" href="https://research.mietek.io/mi.MartinLof2006.html#20838">p₂</a> <a id="21369" href="https://research.mietek.io/mi.MartinLof2006.html#20981">p₃</a> <a id="21372" href="https://research.mietek.io/mi.MartinLof2006.html#21072">p₄</a> <a id="21375" href="https://research.mietek.io/mi.MartinLof2006.html#21127">p₅</a><a id="21377">))))</a> <a id="21382" href="https://research.mietek.io/mi.MartinLof2006.html#21331">i</a><a id="21383">)</a>

    <a id="21390" href="https://research.mietek.io/mi.MartinLof2006.html#21390">g-unique</a> <a id="21399">:</a> <a id="21401">∀</a> <a id="21403" href="https://research.mietek.io/mi.MartinLof2006.html#21403">i</a> <a id="21405">{</a><a id="21406" href="https://research.mietek.io/mi.MartinLof2006.html#21406">y</a><a id="21407">}</a> <a id="21409">→</a> <a id="21411">(</a><a id="21412" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a> <a id="21414" href="https://research.mietek.io/mi.MartinLof2006.html#21403">i</a> <a id="21416" href="https://research.mietek.io/mi.MartinLof2006.html#3204">∩</a> <a id="21418" href="https://research.mietek.io/mi.MartinLof2006.html#21164">S₁</a><a id="21420">)</a> <a id="21422" href="https://research.mietek.io/mi.MartinLof2006.html#21406">y</a> <a id="21424">→</a> <a id="21426" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a> <a id="21428" href="https://research.mietek.io/mi.MartinLof2006.html#21403">i</a> <a id="21430" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="21432" href="https://research.mietek.io/mi.MartinLof2006.html#21406">y</a>
    <a id="21438" href="https://research.mietek.io/mi.MartinLof2006.html#21390">g-unique</a> <a id="21447" href="https://research.mietek.io/mi.MartinLof2006.html#21447">i</a> <a id="21449">=</a> <a id="21451" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21455">(</a><a id="21456" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21460">(</a><a id="21461" href="https://research.mietek.io/mi.MartinLof2006.html#8479">ac</a> <a id="21464">(</a><a id="21465" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21469">(</a><a id="21470" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21474">(</a><a id="21475" href="https://research.mietek.io/mi.MartinLof2006.html#20573">zac</a> <a id="21479" href="https://research.mietek.io/mi.MartinLof2006.html#20679">p₁</a> <a id="21482" href="https://research.mietek.io/mi.MartinLof2006.html#20838">p₂</a> <a id="21485" href="https://research.mietek.io/mi.MartinLof2006.html#20981">p₃</a> <a id="21488" href="https://research.mietek.io/mi.MartinLof2006.html#21072">p₄</a> <a id="21491" href="https://research.mietek.io/mi.MartinLof2006.html#21127">p₅</a><a id="21493">))))</a> <a id="21498" href="https://research.mietek.io/mi.MartinLof2006.html#21447">i</a><a id="21499">)</a>

    <a id="21506" href="https://research.mietek.io/mi.MartinLof2006.html#21506">g-f-rinv</a> <a id="21515">:</a> <a id="21517" href="https://research.mietek.io/mi.MartinLof2006.html#20063">RightInverse</a> <a id="21530" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a> <a id="21532" href="https://research.mietek.io/mi.MartinLof2006.html#20585">f</a>
    <a id="21538" href="https://research.mietek.io/mi.MartinLof2006.html#21506">g-f-rinv</a> <a id="21547" href="https://research.mietek.io/mi.MartinLof2006.html#21547">i</a> <a id="21549">=</a> <a id="21551" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="21555">(</a><a id="21556" href="https://research.mietek.io/mi.MartinLof2006.html#21284">g-common</a> <a id="21565" href="https://research.mietek.io/mi.MartinLof2006.html#21547">i</a><a id="21566">)</a>

    <a id="21573" href="https://research.mietek.io/mi.MartinLof2006.html#21573">g-ext</a> <a id="21579">:</a> <a id="21581" href="https://research.mietek.io/mi.MartinLof2006.html#11486">Extensional</a> <a id="21593" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a>
    <a id="21599" href="https://research.mietek.io/mi.MartinLof2006.html#21573">g-ext</a> <a id="21605">{</a><a id="21606" href="https://research.mietek.io/mi.MartinLof2006.html#21606">i</a><a id="21607">}</a> <a id="21609">{</a><a id="21610" href="https://research.mietek.io/mi.MartinLof2006.html#21610">j</a><a id="21611">}</a> <a id="21613" href="https://research.mietek.io/mi.MartinLof2006.html#21613">i≍j</a> <a id="21617">=</a> <a id="21619" href="https://research.mietek.io/mi.MartinLof2006.html#21809">gi≍gj</a>
      <a id="21631">where</a>
        <a id="21645" href="https://research.mietek.io/mi.MartinLof2006.html#21645">gj-there</a> <a id="21654">:</a> <a id="21656">(</a><a id="21657" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a> <a id="21659" href="https://research.mietek.io/mi.MartinLof2006.html#21610">j</a> <a id="21661" href="https://research.mietek.io/mi.MartinLof2006.html#3204">∩</a> <a id="21663" href="https://research.mietek.io/mi.MartinLof2006.html#21164">S₁</a><a id="21665">)</a> <a id="21667">(</a><a id="21668" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a> <a id="21670" href="https://research.mietek.io/mi.MartinLof2006.html#21610">j</a><a id="21671">)</a>
        <a id="21681" href="https://research.mietek.io/mi.MartinLof2006.html#21645">gj-there</a> <a id="21690">=</a> <a id="21692" href="https://research.mietek.io/mi.MartinLof2006.html#21284">g-common</a> <a id="21701" href="https://research.mietek.io/mi.MartinLof2006.html#21610">j</a>

        <a id="21712" href="https://research.mietek.io/mi.MartinLof2006.html#21712">gj-here</a> <a id="21720">:</a> <a id="21722">(</a><a id="21723" href="https://research.mietek.io/mi.MartinLof2006.html#20635">A</a> <a id="21725" href="https://research.mietek.io/mi.MartinLof2006.html#21606">i</a> <a id="21727" href="https://research.mietek.io/mi.MartinLof2006.html#3204">∩</a> <a id="21729" href="https://research.mietek.io/mi.MartinLof2006.html#21164">S₁</a><a id="21731">)</a> <a id="21733">(</a><a id="21734" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a> <a id="21736" href="https://research.mietek.io/mi.MartinLof2006.html#21610">j</a><a id="21737">)</a>
        <a id="21747" href="https://research.mietek.io/mi.MartinLof2006.html#21712">gj-here</a> <a id="21755">=</a> <a id="21757" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21761">(</a><a id="21762" href="https://research.mietek.io/mi.MartinLof2006.html#20838">p₂</a> <a id="21765" href="https://research.mietek.io/mi.MartinLof2006.html#21613">i≍j</a><a id="21768">)</a> <a id="21770">(</a><a id="21771" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="21775" href="https://research.mietek.io/mi.MartinLof2006.html#21645">gj-there</a><a id="21783">)</a> <a id="21785" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="21787" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="21791" href="https://research.mietek.io/mi.MartinLof2006.html#21645">gj-there</a>

        <a id="21809" href="https://research.mietek.io/mi.MartinLof2006.html#21809">gi≍gj</a> <a id="21815">:</a> <a id="21817" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a> <a id="21819" href="https://research.mietek.io/mi.MartinLof2006.html#21606">i</a> <a id="21821" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="21823" href="https://research.mietek.io/mi.MartinLof2006.html#21219">g</a> <a id="21825" href="https://research.mietek.io/mi.MartinLof2006.html#21610">j</a>
        <a id="21835" href="https://research.mietek.io/mi.MartinLof2006.html#21809">gi≍gj</a> <a id="21841">=</a> <a id="21843" href="https://research.mietek.io/mi.MartinLof2006.html#21390">g-unique</a> <a id="21852" href="https://research.mietek.io/mi.MartinLof2006.html#21606">i</a> <a id="21854" href="https://research.mietek.io/mi.MartinLof2006.html#21712">gj-here</a>
</pre>
</div>
<h6 id="iiiiv">(iii)<span>→</span>(iv).</h6>

<h6 id="ivi">(iv)<span>→</span>(i).</h6>
<div>
<p>Let <span>(I, ≍_I)</span> and <span>(S, ≍_S)</span> be two sets, each equipped with an equivalence relation, and let <span>(A_i)_{i : I}</span> be a family of exten­sional subsets of <span>S,</span></p>
<p><span>x ≍_S y → (A_i(x) ↔ A_i(y)),</span></p>
<p>which depends exten­sionally on the index <span>i,</span></p>
<p><span>i ≍_I j → (∀x : S)(A_i(x) ↔ A_j(x)).</span></p>
<p>Furthermore, assume that</p>
<p><span>(∀i : I)(∃x : S)A_i(x)</span></p>
<p>holds. By the inten­sional axiom of choice, valid in constructive type theory, we can conclude that there exists a choice function <span>f : I → S</span> such that</p>
<p><span>(∀i : I)A_i(f(i)).</span></p>
<p>This choice function need not be exten­sional, of course, unless <span>≍_I</span> is the identity relation on the index set <span>I.</span> But, applying the miraculous principle of picking a unique representative of each equivalence class to the equivalence relation <span>≍_I,</span> we get a function <span>g : I → I</span> such that</p>
<p><span>g(i) ≍_I i</span></p>
<p>and</p>
<p><span>i ≍_I j → \text{Id}_I(g(i), g(j)).</span></p>
<p>Then <span>f \circ g : I → S</span> becomes exten­sional,</p>
<p><span>
  i ≍_I j → \text{Id}_I(g(i), g(j)) → \underbrace{f(g(i))}_{(f \circ g)(i)}
    ≍_S \underbrace{f(g(j))}_{(f \circ g)(j)}.
</span></p>
<p>Moreover, from <span>(∀i : I)</span><span>A_i(f(i)),</span> it follows that</p>
<p><span>(∀i : I)A_{g(i)}(f(g(i))).</span></p>
<p>But</p>
<p><span>g(i) ≍_I i → (∀x : S)(A_{g(i)}(x) ↔ A_i(x)),</span></p>
<p>so that</p>
<p><span>(∀i : I)A_i(\underbrace{f(g(i))}_{(f \circ g)(i)}).</span></p>
<p>Hence <span>f \circ g</span> has become an exten­sional choice function, which means that the exten­sional axiom of choice is satisfied.</p>
<pre><a id="iv→i"></a><a id="24517" href="https://research.mietek.io/mi.MartinLof2006.html#24517">iv→i</a> <a id="24522">:</a> <a id="24524">∀</a> <a id="24526">{</a><a id="24527" href="https://research.mietek.io/mi.MartinLof2006.html#24527">ℓ</a><a id="24528">}</a> <a id="24530">→</a> <a id="24532" href="https://research.mietek.io/mi.MartinLof2006.html#22817">AC₄</a> <a id="24536" href="https://research.mietek.io/mi.MartinLof2006.html#24527">ℓ</a> <a id="24538">→</a> <a id="24540" href="https://research.mietek.io/mi.MartinLof2006.html#16301">EAC</a> <a id="24544" href="https://research.mietek.io/mi.MartinLof2006.html#24527">ℓ</a>
<a id="24546" href="https://research.mietek.io/mi.MartinLof2006.html#24517">iv→i</a> <a id="24551" href="https://research.mietek.io/mi.MartinLof2006.html#24551">ac₄</a> <a id="24555">{</a><a id="24556" href="https://research.mietek.io/mi.MartinLof2006.html#24556">I</a><a id="24557">}</a> <a id="24559">{</a><a id="24560" href="https://research.mietek.io/mi.MartinLof2006.html#24560">S</a><a id="24561">}</a> <a id="24563">{</a><a id="24564" href="https://research.mietek.io/mi.MartinLof2006.html#24564">A</a><a id="24565">}</a> <a id="24567" href="https://research.mietek.io/mi.MartinLof2006.html#24567">p₁</a> <a id="24570" href="https://research.mietek.io/mi.MartinLof2006.html#24570">p₂</a> <a id="24573" href="https://research.mietek.io/mi.MartinLof2006.html#24573">p₅</a> <a id="24576">=</a> <a id="24578" href="https://research.mietek.io/mi.MartinLof2006.html#24619">f</a> <a id="24580" href="https://research.mietek.io/mi.MartinLof2006.html#810">∘</a> <a id="24582" href="https://research.mietek.io/mi.MartinLof2006.html#24713">g</a> <a id="24584" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="24586" href="https://research.mietek.io/mi.MartinLof2006.html#24867">f∘g-ext</a> <a id="24594" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="24596" href="https://research.mietek.io/mi.MartinLof2006.html#24946">f∘g-common</a>
  <a id="24609">where</a>
    <a id="24619" href="https://research.mietek.io/mi.MartinLof2006.html#24619">f</a> <a id="24621">:</a> <a id="24623" href="https://research.mietek.io/mi.MartinLof2006.html#24556">I</a> <a id="24625">→</a> <a id="24627" href="https://research.mietek.io/mi.MartinLof2006.html#24560">S</a>
    <a id="24633" href="https://research.mietek.io/mi.MartinLof2006.html#24619">f</a> <a id="24635">=</a> <a id="24637" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="24641">(</a><a id="24642" href="https://research.mietek.io/mi.MartinLof2006.html#8479">ac</a> <a id="24645" href="https://research.mietek.io/mi.MartinLof2006.html#24573">p₅</a><a id="24647">)</a>

    <a id="24654" href="https://research.mietek.io/mi.MartinLof2006.html#24654">f-common</a> <a id="24663">:</a> <a id="24665">∀</a> <a id="24667" href="https://research.mietek.io/mi.MartinLof2006.html#24667">i</a> <a id="24669">→</a> <a id="24671" href="https://research.mietek.io/mi.MartinLof2006.html#24564">A</a> <a id="24673" href="https://research.mietek.io/mi.MartinLof2006.html#24667">i</a> <a id="24675">(</a><a id="24676" href="https://research.mietek.io/mi.MartinLof2006.html#24619">f</a> <a id="24678" href="https://research.mietek.io/mi.MartinLof2006.html#24667">i</a><a id="24679">)</a>
    <a id="24685" href="https://research.mietek.io/mi.MartinLof2006.html#24654">f-common</a> <a id="24694">=</a> <a id="24696" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="24700">(</a><a id="24701" href="https://research.mietek.io/mi.MartinLof2006.html#8479">ac</a> <a id="24704" href="https://research.mietek.io/mi.MartinLof2006.html#24573">p₅</a><a id="24706">)</a>

    <a id="24713" href="https://research.mietek.io/mi.MartinLof2006.html#24713">g</a> <a id="24715">:</a> <a id="24717" href="https://research.mietek.io/mi.MartinLof2006.html#24556">I</a> <a id="24719">→</a> <a id="24721" href="https://research.mietek.io/mi.MartinLof2006.html#24556">I</a>
    <a id="24727" href="https://research.mietek.io/mi.MartinLof2006.html#24713">g</a> <a id="24729">=</a> <a id="24731" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="24735" href="https://research.mietek.io/mi.MartinLof2006.html#24551">ac₄</a>

    <a id="24744" href="https://research.mietek.io/mi.MartinLof2006.html#24744">g-id-rinv</a> <a id="24754">:</a> <a id="24756" href="https://research.mietek.io/mi.MartinLof2006.html#20063">RightInverse</a> <a id="24769" href="https://research.mietek.io/mi.MartinLof2006.html#24713">g</a> <a id="24771" href="https://research.mietek.io/mi.MartinLof2006.html#756">id</a>
    <a id="24778" href="https://research.mietek.io/mi.MartinLof2006.html#24744">g-id-rinv</a> <a id="24788">=</a> <a id="24790" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="24794">(</a><a id="24795" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="24799" href="https://research.mietek.io/mi.MartinLof2006.html#24551">ac₄</a><a id="24802">)</a>

    <a id="24809" href="https://research.mietek.io/mi.MartinLof2006.html#24809">g-ext</a> <a id="24815">:</a> <a id="24817" href="https://research.mietek.io/mi.MartinLof2006.html#11841">Extensional-≍-Id</a> <a id="24834" href="https://research.mietek.io/mi.MartinLof2006.html#24713">g</a>
    <a id="24840" href="https://research.mietek.io/mi.MartinLof2006.html#24809">g-ext</a> <a id="24846">=</a> <a id="24848" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="24852">(</a><a id="24853" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="24857" href="https://research.mietek.io/mi.MartinLof2006.html#24551">ac₄</a><a id="24860">)</a>

    <a id="24867" href="https://research.mietek.io/mi.MartinLof2006.html#24867">f∘g-ext</a> <a id="24875">:</a> <a id="24877" href="https://research.mietek.io/mi.MartinLof2006.html#11486">Extensional</a> <a id="24889">(</a><a id="24890" href="https://research.mietek.io/mi.MartinLof2006.html#24619">f</a> <a id="24892" href="https://research.mietek.io/mi.MartinLof2006.html#810">∘</a> <a id="24894" href="https://research.mietek.io/mi.MartinLof2006.html#24713">g</a><a id="24895">)</a>
    <a id="24901" href="https://research.mietek.io/mi.MartinLof2006.html#24867">f∘g-ext</a> <a id="24909" href="https://research.mietek.io/mi.MartinLof2006.html#24909">i≍j</a> <a id="24913">=</a> <a id="24915" href="https://research.mietek.io/mi.MartinLof2006.html#2062">Id→≍</a> <a id="24920">(</a><a id="24921" href="https://research.mietek.io/mi.MartinLof2006.html#1948">cong</a> <a id="24926" href="https://research.mietek.io/mi.MartinLof2006.html#24619">f</a> <a id="24928">(</a><a id="24929" href="https://research.mietek.io/mi.MartinLof2006.html#24809">g-ext</a> <a id="24935" href="https://research.mietek.io/mi.MartinLof2006.html#24909">i≍j</a><a id="24938">))</a>

    <a id="24946" href="https://research.mietek.io/mi.MartinLof2006.html#24946">f∘g-common</a> <a id="24957">:</a> <a id="24959">∀</a> <a id="24961" href="https://research.mietek.io/mi.MartinLof2006.html#24961">i</a> <a id="24963">→</a> <a id="24965" href="https://research.mietek.io/mi.MartinLof2006.html#24564">A</a> <a id="24967" href="https://research.mietek.io/mi.MartinLof2006.html#24961">i</a> <a id="24969">((</a><a id="24971" href="https://research.mietek.io/mi.MartinLof2006.html#24619">f</a> <a id="24973" href="https://research.mietek.io/mi.MartinLof2006.html#810">∘</a> <a id="24975" href="https://research.mietek.io/mi.MartinLof2006.html#24713">g</a><a id="24976">)</a> <a id="24978" href="https://research.mietek.io/mi.MartinLof2006.html#24961">i</a><a id="24979">)</a>
    <a id="24985" href="https://research.mietek.io/mi.MartinLof2006.html#24946">f∘g-common</a> <a id="24996" href="https://research.mietek.io/mi.MartinLof2006.html#24996">i</a> <a id="24998">=</a> <a id="25000" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="25004">(</a><a id="25005" href="https://research.mietek.io/mi.MartinLof2006.html#24570">p₂</a> <a id="25008">(</a><a id="25009" href="https://research.mietek.io/mi.MartinLof2006.html#24744">g-id-rinv</a> <a id="25019" href="https://research.mietek.io/mi.MartinLof2006.html#24996">i</a><a id="25020">))</a> <a id="25023">(</a><a id="25024" href="https://research.mietek.io/mi.MartinLof2006.html#24654">f-common</a> <a id="25033">(</a><a id="25034" href="https://research.mietek.io/mi.MartinLof2006.html#24713">g</a> <a id="25036" href="https://research.mietek.io/mi.MartinLof2006.html#24996">i</a><a id="25037">))</a>

<a id="theorem-i"></a><a id="25041" href="https://research.mietek.io/mi.MartinLof2006.html#25041">theorem-i</a> <a id="25051">:</a> <a id="25053">∀</a> <a id="25055">{</a><a id="25056" href="https://research.mietek.io/mi.MartinLof2006.html#25056">𝓁</a><a id="25057">}</a> <a id="25059">→</a> <a id="25061">(</a><a id="25062" href="https://research.mietek.io/mi.MartinLof2006.html#16301">EAC</a> <a id="25066" href="https://research.mietek.io/mi.MartinLof2006.html#25056">𝓁</a> <a id="25068">→</a> <a id="25070" href="https://research.mietek.io/mi.MartinLof2006.html#13825">ZAC</a> <a id="25074" href="https://research.mietek.io/mi.MartinLof2006.html#25056">𝓁</a><a id="25075">)</a> <a id="25077" href="https://research.mietek.io/mi.MartinLof2006.html#2385">∧</a> <a id="25079">(</a><a id="25080" href="https://research.mietek.io/mi.MartinLof2006.html#13825">ZAC</a> <a id="25084" href="https://research.mietek.io/mi.MartinLof2006.html#25056">𝓁</a> <a id="25086">→</a> <a id="25088" href="https://research.mietek.io/mi.MartinLof2006.html#20302">AC₃</a> <a id="25092" href="https://research.mietek.io/mi.MartinLof2006.html#25056">𝓁</a><a id="25093">)</a> <a id="25095" href="https://research.mietek.io/mi.MartinLof2006.html#2385">∧</a> <a id="25097">(</a><a id="25098" href="https://research.mietek.io/mi.MartinLof2006.html#20302">AC₃</a> <a id="25102" href="https://research.mietek.io/mi.MartinLof2006.html#25056">𝓁</a> <a id="25104">→</a> <a id="25106" href="https://research.mietek.io/mi.MartinLof2006.html#22817">AC₄</a> <a id="25110" href="https://research.mietek.io/mi.MartinLof2006.html#25056">𝓁</a><a id="25111">)</a> <a id="25113" href="https://research.mietek.io/mi.MartinLof2006.html#2385">∧</a> <a id="25115">(</a><a id="25116" href="https://research.mietek.io/mi.MartinLof2006.html#22817">AC₄</a> <a id="25120" href="https://research.mietek.io/mi.MartinLof2006.html#25056">𝓁</a> <a id="25122">→</a> <a id="25124" href="https://research.mietek.io/mi.MartinLof2006.html#16301">EAC</a> <a id="25128" href="https://research.mietek.io/mi.MartinLof2006.html#25056">𝓁</a><a id="25129">)</a>
<a id="25131" href="https://research.mietek.io/mi.MartinLof2006.html#25041">theorem-i</a> <a id="25141">=</a> <a id="25143" href="https://research.mietek.io/mi.MartinLof2006.html#18386">i→ii</a> <a id="25148" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="25150" href="https://research.mietek.io/mi.MartinLof2006.html#20535">ii→iii</a> <a id="25157" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="25159" href="https://research.mietek.io/mi.MartinLof2006.html#22959">iii→iv</a> <a id="25166" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="25168" href="https://research.mietek.io/mi.MartinLof2006.html#24517">iv→i</a>
</pre>
</div>
<p>Another indication that the exten­sional axiom of choice is the correct type-theoretic rendering of Zermelo’s axiom of choice comes from constructive set theory. Peter Aczel has shown how to interpret the language of Zermelo-Fraenkel set theory in constructive type theory, this interpretation being the natural constructive version of the cumulative hierarchy, and investigated what set-theoretic principles that become validated under that interpretation.<a href="#fn17" id="fnref17" role="doc-noteref"><sup>17</sup></a> But one may also ask, conversely, what principle, or principles, that have to be adjoined to constructive type theory in order to validate a specific set-theoretic axiom. In particular, this may be asked about the formalised version of the axiom of choice that Zermelo made part of his own axiomatisation of set theory. The answer is as follows.</p>
<h4 id="theorem-ii">Theorem II.</h4>
<p><em>When constructive type theory is strengthened by the exten­sional axiom of choice, the set-theoretic axiom of choice becomes validated under the Aczel interpretation.</em></p>
<h5 id="proof-1">Proof.</h5>
<div>
<p>The set-theoretic axiom of choice says that, for any two iterative sets <span>α</span> and <span>β</span> and any relation <span>R</span> between iterative sets,</p>
<p><span>(∀x ∈ α)(∃y ∈ β)R(x, y) → (∃φ : α → β)(∀x ∈ α)R(x, φ(x)).</span></p>
<p>The Aczel interpretation of the left-hand member of this implication is</p>
<p><span>(∀x : ᾱ)(∃y : β̄)R(α̃(x), β̃(x)),</span></p>
<p>which yields</p>
<p><span>(∃f : ᾱ → β̄)(∀x : ᾱ)R(α̃(x), β̃(f (x)))</span></p>
<p>by the type-theoretic axiom of choice. Now, put</p>
<p><span>φ = \{⟨α̃(x), β̃(f(x))⟩\ |\ x : ᾱ\}</span></p>
<p>by definition. We need to prove that <span>φ</span> is a function from <span>α</span> to <span>β</span> in the sense of constructive set theory, that is,</p>
<p><span>α̃(x) = α̃(x') → β̃(f(x)) = β̃(f(x')).</span></p>
<p>Define the equivalence relations</p>
<p><span>(x ≍_{ᾱ} x') = (α̃(x) = α̃(x'))</span></p>
<p>and</p>
<p><span>(y ≍_{β̄} y') = (β̃(y) = β̃(y'))</span></p>
<p>on <span>ᾱ</span> and <span>β̄,</span> respectively. By the exten­sional axiom of choice in type theory, the choice function <span>f : ᾱ → β̄</span> can be taken to be exten­sional with respect to these two equivalence relations,</p>
<p><span>x ≍_{ᾱ} x' → f(x) ≍_{β̄} f(x'),</span></p>
<p>which ensures that <span>φ,</span> defined as above, is a function from <span>α</span> to <span>β</span> in the sense of constructive set theory.</p>
<pre><a id="27342">-- TODO</a>
</pre>
</div>
<h4 id="corollary">Corollary.</h4>
<p><em>When constructive type theory (including one universe and the <span>W</span>-operation) is strengthened by the exten­sional axiom of choice, it interprets all of ZFC.</em></p>
<h5 id="proof-2">Proof.</h5>
<p>We already know from Aczel that ZF is equivalent to CZF <span>+</span> EM.<a href="#fn18" id="fnref18" role="doc-noteref"><sup>18</sup></a> Hence ZFC is equivalent to CZF <span>+</span> EM <span>+</span> AC. But, by Diaconescu’s theorem as transferred to constructive set theory by Goodman and Myhill, the law of excluded middle follows from the axiom of choice in the context of constructive set theory.<a href="#fn19" id="fnref19" role="doc-noteref"><sup>19</sup></a> It thus suffices to interpret CZF <span>+</span> AC in CTT <span>+</span> ExtAC, and this is precisely what the Aczel interpretation does, by the previous theorem.</p>
<p>Another way of reaching the same conclusion is to interchange the order of the last two steps in the proof just given, arguing instead that ZFC <span>=</span> CZF <span>+</span> EM <span>+</span> AC is interpretable in CTT <span>+</span> EM <span>+</span> ExtAC by the previous theorem, and then appealing to the type-theoretic version of Diaconescu’s theorem, according to which the law of excluded middle follows from the exten­sional axiom of choice in the context of constructive type theory.<a href="#fn20" id="fnref20" role="doc-noteref"><sup>20</sup></a> The final conclusion is anyhow that ZFC is interpretable in CTT <span>+</span> ExtAC.</p>
<div>
<p>When Zermelo’s axiom of choice is formulated in the context of constructive type theory instead of Zermelo-Fraenkel set theory, it appears as ExtAC, the exten­sional axiom of choice</p>
<p><span>(∀i : I)(∃x : S)A(i, x) → (∃f : I → S)(\text{Ext}(f) ∧ (∀i : I)A(i, f(i))),</span></p>
<p>where</p>
<p><span>\text{Ext}(f) = (∀i, j : I)(i ≍_I j → f(i) ≍_S f(j)),</span></p>
<p>and it then becomes manifest what is the problem with it: it breaks the principle that you cannot get something from nothing. Even if the relation <span>A(i, x)</span> is exten­sional with respect to its two arguments, the truth of the antecedent <span>(∀i : I)</span><span>(∃x : S)</span><span>A(i, x),</span> which does guarantee the existence of a choice function <span>f : I → S</span> satisfying <span>(∀i : I)</span><span>A(i, f(i)),</span> is not enough to guarantee the exten­sionality of the choice function, that is, the truth of Ext<span>(f).</span> Thus the problem with Zermelo’s axiom of choice is not the existence of the choice function but its exten­sionality, and this is not visible within an exten­sional framework, like Zermelo-Fraenkel set theory, where all functions are by definition exten­sional.</p>
<p>If we want to ensure the exten­sionality of the choice function, the antecedent clause of the exten­sional axiom of choice has to be strengthened. The natural way of doing this is to replace ExtAC by AC!, the axiom of unique choice, or no choice,</p>
<p><span>(∀i : I)(∃!x : S)A(i, x) → (∃f : I → S)(\text{Ext}(f) ∧ (∀i : I)A(i, f(i))),</span></p>
<p>which is as valid as the inten­sional axiom of choice. Indeed, assume <span>(∀i : I)</span><span>(∃!x : S)</span><span>A(i, x)</span> to be true. Then, by the inten­sional axiom of choice, there exists a choice function <span>f : I → S</span> satisfying <span>(∀i : I)</span><span>A(i, f(i)).</span> Because of the uniqueness condition, such a function <span>f : I → S</span> is necessarily exten­sional. For suppose that <span>i, j : I</span> are such that <span>i ≍_I j</span> is true. Then <span>A(i, f(i))</span> and <span>A(j, f(j))</span> are both true. Hence, by the exten­sionality of <span>A(i, x)</span> in its first argument, so is <span>A(i, f(j)).</span> The uniqueness condition now guarantees that <span>f(i) ≍_S f(j),</span> that is, that <span>f : I → S</span> is exten­sional. The axiom of unique choice AC! may be considered as the valid form of exten­sional choice, as opposed to ExtAC, which lacks justification.</p>
<pre><a id="30807">-- axiom of unique choice</a>
<a id="AC!"></a><a id="30833" href="https://research.mietek.io/mi.MartinLof2006.html#30833">AC!</a> <a id="30837">:</a> <a id="30839">∀</a> <a id="30841" href="https://research.mietek.io/mi.MartinLof2006.html#30841">ℓ</a> <a id="30843">→</a> <a id="30845" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="30849">_</a>
<a id="30851" href="https://research.mietek.io/mi.MartinLof2006.html#30833">AC!</a> <a id="30855" href="https://research.mietek.io/mi.MartinLof2006.html#30855">ℓ</a> <a id="30857">=</a> <a id="30859">∀</a> <a id="30861">{</a><a id="30862" href="https://research.mietek.io/mi.MartinLof2006.html#30862">I</a> <a id="30864" href="https://research.mietek.io/mi.MartinLof2006.html#30864">S</a> <a id="30866">:</a> <a id="30868" href="https://research.mietek.io/Agda.Primitive.html#388">Set</a> <a id="30872" href="https://research.mietek.io/mi.MartinLof2006.html#30855">ℓ</a><a id="30873">}</a> <a id="30875">{</a><a id="30876" href="https://research.mietek.io/mi.MartinLof2006.html#30876">A</a> <a id="30878">:</a> <a id="30880" href="https://research.mietek.io/mi.MartinLof2006.html#30862">I</a> <a id="30882">→</a> <a id="30884" href="https://research.mietek.io/mi.MartinLof2006.html#3143">Subset</a> <a id="30891" href="https://research.mietek.io/mi.MartinLof2006.html#30864">S</a> <a id="30893" href="https://research.mietek.io/mi.MartinLof2006.html#30855">ℓ</a><a id="30894">}</a>
          <a id="30906">{{</a><a id="30908" href="https://research.mietek.io/mi.MartinLof2006.html#30908">≍I</a> <a id="30911">:</a> <a id="30913" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="30925" href="https://research.mietek.io/mi.MartinLof2006.html#30862">I</a> <a id="30927" href="https://research.mietek.io/mi.MartinLof2006.html#30855">ℓ</a><a id="30928">}}</a> <a id="30931">{{</a><a id="30933" href="https://research.mietek.io/mi.MartinLof2006.html#30933">≍S</a> <a id="30936">:</a> <a id="30938" href="https://research.mietek.io/mi.MartinLof2006.html#1355">Equivalence</a> <a id="30950" href="https://research.mietek.io/mi.MartinLof2006.html#30864">S</a> <a id="30952" href="https://research.mietek.io/mi.MartinLof2006.html#30855">ℓ</a><a id="30953">}}</a>
          <a id="30966">(</a><a id="30967" href="https://research.mietek.io/mi.MartinLof2006.html#30967">p₁</a> <a id="30970">:</a> <a id="30972" href="https://research.mietek.io/mi.MartinLof2006.html#12985">Extensional-≍S-↔</a> <a id="30989" href="https://research.mietek.io/mi.MartinLof2006.html#30876">A</a><a id="30990">)</a> <a id="30992">(</a><a id="30993" href="https://research.mietek.io/mi.MartinLof2006.html#30993">p₂</a> <a id="30996">:</a> <a id="30998" href="https://research.mietek.io/mi.MartinLof2006.html#13170">Extensional-≍I-↔</a> <a id="31015" href="https://research.mietek.io/mi.MartinLof2006.html#30876">A</a><a id="31016">)</a> <a id="31018">→</a>
        <a id="31028">(∀</a> <a id="31031" href="https://research.mietek.io/mi.MartinLof2006.html#31031">i</a> <a id="31033">→</a> <a id="31035" href="https://research.mietek.io/mi.MartinLof2006.html#2516">∃![</a> <a id="31039" href="https://research.mietek.io/mi.MartinLof2006.html#31039">x</a> <a id="31041" href="https://research.mietek.io/mi.MartinLof2006.html#2516">⦂</a> <a id="31043" href="https://research.mietek.io/mi.MartinLof2006.html#30864">S</a> <a id="31045" href="https://research.mietek.io/mi.MartinLof2006.html#2516">]</a> <a id="31047" href="https://research.mietek.io/mi.MartinLof2006.html#30876">A</a> <a id="31049" href="https://research.mietek.io/mi.MartinLof2006.html#31031">i</a> <a id="31051" href="https://research.mietek.io/mi.MartinLof2006.html#31039">x</a><a id="31052">)</a> <a id="31054">→</a> <a id="31056" href="https://research.mietek.io/mi.MartinLof2006.html#2303">∃[</a> <a id="31059" href="https://research.mietek.io/mi.MartinLof2006.html#31059">f</a> <a id="31061" href="https://research.mietek.io/mi.MartinLof2006.html#2303">⦂</a> <a id="31063">(</a><a id="31064" href="https://research.mietek.io/mi.MartinLof2006.html#30862">I</a> <a id="31066">→</a> <a id="31068" href="https://research.mietek.io/mi.MartinLof2006.html#30864">S</a><a id="31069">)</a> <a id="31071" href="https://research.mietek.io/mi.MartinLof2006.html#2303">]</a> <a id="31073" href="https://research.mietek.io/mi.MartinLof2006.html#11486">Extensional</a> <a id="31085" href="https://research.mietek.io/mi.MartinLof2006.html#31059">f</a> <a id="31087" href="https://research.mietek.io/mi.MartinLof2006.html#2385">∧</a> <a id="31089">∀</a> <a id="31091" href="https://research.mietek.io/mi.MartinLof2006.html#31091">i</a> <a id="31093">→</a> <a id="31095" href="https://research.mietek.io/mi.MartinLof2006.html#30876">A</a> <a id="31097" href="https://research.mietek.io/mi.MartinLof2006.html#31091">i</a> <a id="31099">(</a><a id="31100" href="https://research.mietek.io/mi.MartinLof2006.html#31059">f</a> <a id="31102" href="https://research.mietek.io/mi.MartinLof2006.html#31091">i</a><a id="31103">)</a>

<a id="ac!"></a><a id="31106" href="https://research.mietek.io/mi.MartinLof2006.html#31106">ac!</a> <a id="31110">:</a> <a id="31112">∀</a> <a id="31114">{</a><a id="31115" href="https://research.mietek.io/mi.MartinLof2006.html#31115">ℓ</a><a id="31116">}</a> <a id="31118">→</a> <a id="31120" href="https://research.mietek.io/mi.MartinLof2006.html#30833">AC!</a> <a id="31124" href="https://research.mietek.io/mi.MartinLof2006.html#31115">ℓ</a>
<a id="31126" href="https://research.mietek.io/mi.MartinLof2006.html#31106">ac!</a> <a id="31130">{</a><a id="31131">I</a> <a id="31133">=</a> <a id="31135" href="https://research.mietek.io/mi.MartinLof2006.html#31135">I</a><a id="31136">}</a> <a id="31138">{</a><a id="31139" href="https://research.mietek.io/mi.MartinLof2006.html#31139">S</a><a id="31140">}</a> <a id="31142">{</a><a id="31143" href="https://research.mietek.io/mi.MartinLof2006.html#31143">A</a><a id="31144">}</a> <a id="31146" href="https://research.mietek.io/mi.MartinLof2006.html#31146">p₁</a> <a id="31149" href="https://research.mietek.io/mi.MartinLof2006.html#31149">p₂</a> <a id="31152" href="https://research.mietek.io/mi.MartinLof2006.html#31152">h</a> <a id="31154">=</a> <a id="31156" href="https://research.mietek.io/mi.MartinLof2006.html#31189">f</a> <a id="31158" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="31160" href="https://research.mietek.io/mi.MartinLof2006.html#31369">f-ext</a> <a id="31166" href="https://research.mietek.io/Agda.Builtin.Sigma.html#235">,</a> <a id="31168" href="https://research.mietek.io/mi.MartinLof2006.html#31223">f-common</a>
  <a id="31179">where</a>
    <a id="31189" href="https://research.mietek.io/mi.MartinLof2006.html#31189">f</a> <a id="31191">:</a> <a id="31193" href="https://research.mietek.io/mi.MartinLof2006.html#31135">I</a> <a id="31195">→</a> <a id="31197" href="https://research.mietek.io/mi.MartinLof2006.html#31139">S</a>
    <a id="31203" href="https://research.mietek.io/mi.MartinLof2006.html#31189">f</a> <a id="31205">=</a> <a id="31207" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="31211">(</a><a id="31212" href="https://research.mietek.io/mi.MartinLof2006.html#8479">ac</a> <a id="31215" href="https://research.mietek.io/mi.MartinLof2006.html#31152">h</a><a id="31216">)</a>

    <a id="31223" href="https://research.mietek.io/mi.MartinLof2006.html#31223">f-common</a> <a id="31232">:</a> <a id="31234">∀</a> <a id="31236" href="https://research.mietek.io/mi.MartinLof2006.html#31236">i</a> <a id="31238">→</a> <a id="31240" href="https://research.mietek.io/mi.MartinLof2006.html#31143">A</a> <a id="31242" href="https://research.mietek.io/mi.MartinLof2006.html#31236">i</a> <a id="31244">(</a><a id="31245" href="https://research.mietek.io/mi.MartinLof2006.html#31189">f</a> <a id="31247" href="https://research.mietek.io/mi.MartinLof2006.html#31236">i</a><a id="31248">)</a>
    <a id="31254" href="https://research.mietek.io/mi.MartinLof2006.html#31223">f-common</a> <a id="31263" href="https://research.mietek.io/mi.MartinLof2006.html#31263">i</a> <a id="31265">=</a> <a id="31267" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="31271">(</a><a id="31272" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="31276">(</a><a id="31277" href="https://research.mietek.io/mi.MartinLof2006.html#8479">ac</a> <a id="31280" href="https://research.mietek.io/mi.MartinLof2006.html#31152">h</a><a id="31281">)</a> <a id="31283" href="https://research.mietek.io/mi.MartinLof2006.html#31263">i</a><a id="31284">)</a>

    <a id="31291" href="https://research.mietek.io/mi.MartinLof2006.html#31291">f-unique</a> <a id="31300">:</a> <a id="31302">∀</a> <a id="31304" href="https://research.mietek.io/mi.MartinLof2006.html#31304">i</a> <a id="31306">{</a><a id="31307" href="https://research.mietek.io/mi.MartinLof2006.html#31307">y</a><a id="31308">}</a> <a id="31310">→</a> <a id="31312" href="https://research.mietek.io/mi.MartinLof2006.html#31143">A</a> <a id="31314" href="https://research.mietek.io/mi.MartinLof2006.html#31304">i</a> <a id="31316" href="https://research.mietek.io/mi.MartinLof2006.html#31307">y</a> <a id="31318">→</a> <a id="31320" href="https://research.mietek.io/mi.MartinLof2006.html#31189">f</a> <a id="31322" href="https://research.mietek.io/mi.MartinLof2006.html#31304">i</a> <a id="31324" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="31326" href="https://research.mietek.io/mi.MartinLof2006.html#31307">y</a>
    <a id="31332" href="https://research.mietek.io/mi.MartinLof2006.html#31291">f-unique</a> <a id="31341" href="https://research.mietek.io/mi.MartinLof2006.html#31341">i</a> <a id="31343">=</a> <a id="31345" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="31349">(</a><a id="31350" href="https://research.mietek.io/Agda.Builtin.Sigma.html#263">snd</a> <a id="31354">(</a><a id="31355" href="https://research.mietek.io/mi.MartinLof2006.html#8479">ac</a> <a id="31358" href="https://research.mietek.io/mi.MartinLof2006.html#31152">h</a><a id="31359">)</a> <a id="31361" href="https://research.mietek.io/mi.MartinLof2006.html#31341">i</a><a id="31362">)</a>

    <a id="31369" href="https://research.mietek.io/mi.MartinLof2006.html#31369">f-ext</a> <a id="31375">:</a> <a id="31377" href="https://research.mietek.io/mi.MartinLof2006.html#11486">Extensional</a> <a id="31389" href="https://research.mietek.io/mi.MartinLof2006.html#31189">f</a>
    <a id="31395" href="https://research.mietek.io/mi.MartinLof2006.html#31369">f-ext</a> <a id="31401">{</a><a id="31402" href="https://research.mietek.io/mi.MartinLof2006.html#31402">i</a><a id="31403">}</a> <a id="31405">{</a><a id="31406" href="https://research.mietek.io/mi.MartinLof2006.html#31406">j</a><a id="31407">}</a> <a id="31409" href="https://research.mietek.io/mi.MartinLof2006.html#31409">i≍j</a> <a id="31413">=</a> <a id="31415" href="https://research.mietek.io/mi.MartinLof2006.html#31586">fi≍fj</a>
      <a id="31427">where</a>
        <a id="31441" href="https://research.mietek.io/mi.MartinLof2006.html#31441">fj-there</a> <a id="31450">:</a> <a id="31452" href="https://research.mietek.io/mi.MartinLof2006.html#31143">A</a> <a id="31454" href="https://research.mietek.io/mi.MartinLof2006.html#31406">j</a> <a id="31456">(</a><a id="31457" href="https://research.mietek.io/mi.MartinLof2006.html#31189">f</a> <a id="31459" href="https://research.mietek.io/mi.MartinLof2006.html#31406">j</a><a id="31460">)</a>
        <a id="31470" href="https://research.mietek.io/mi.MartinLof2006.html#31441">fj-there</a> <a id="31479">=</a> <a id="31481" href="https://research.mietek.io/mi.MartinLof2006.html#31223">f-common</a> <a id="31490" href="https://research.mietek.io/mi.MartinLof2006.html#31406">j</a>

        <a id="31501" href="https://research.mietek.io/mi.MartinLof2006.html#31501">fj-here</a> <a id="31509">:</a> <a id="31511" href="https://research.mietek.io/mi.MartinLof2006.html#31143">A</a> <a id="31513" href="https://research.mietek.io/mi.MartinLof2006.html#31402">i</a> <a id="31515">(</a><a id="31516" href="https://research.mietek.io/mi.MartinLof2006.html#31189">f</a> <a id="31518" href="https://research.mietek.io/mi.MartinLof2006.html#31406">j</a><a id="31519">)</a>
        <a id="31529" href="https://research.mietek.io/mi.MartinLof2006.html#31501">fj-here</a> <a id="31537">=</a> <a id="31539" href="https://research.mietek.io/Agda.Builtin.Sigma.html#251">fst</a> <a id="31543">(</a><a id="31544" href="https://research.mietek.io/mi.MartinLof2006.html#31149">p₂</a> <a id="31547">(</a><a id="31548" href="https://research.mietek.io/mi.MartinLof2006.html#1481">≍-sym</a> <a id="31554">{</a><a id="31555">S</a> <a id="31557">=</a> <a id="31559" href="https://research.mietek.io/mi.MartinLof2006.html#31135">I</a><a id="31560">}</a> <a id="31562" href="https://research.mietek.io/mi.MartinLof2006.html#31409">i≍j</a><a id="31565">))</a> <a id="31568" href="https://research.mietek.io/mi.MartinLof2006.html#31441">fj-there</a>

        <a id="31586" href="https://research.mietek.io/mi.MartinLof2006.html#31586">fi≍fj</a> <a id="31592">:</a> <a id="31594" href="https://research.mietek.io/mi.MartinLof2006.html#31189">f</a> <a id="31596" href="https://research.mietek.io/mi.MartinLof2006.html#31402">i</a> <a id="31598" href="https://research.mietek.io/mi.MartinLof2006.html#1418">≍</a> <a id="31600" href="https://research.mietek.io/mi.MartinLof2006.html#31189">f</a> <a id="31602" href="https://research.mietek.io/mi.MartinLof2006.html#31406">j</a>
        <a id="31612" href="https://research.mietek.io/mi.MartinLof2006.html#31586">fi≍fj</a> <a id="31618">=</a> <a id="31620" href="https://research.mietek.io/mi.MartinLof2006.html#31291">f-unique</a> <a id="31629" href="https://research.mietek.io/mi.MartinLof2006.html#31402">i</a> <a id="31631" href="https://research.mietek.io/mi.MartinLof2006.html#31501">fj-here</a>
</pre>
</div>
<p>The inability to distinguish between the inten­sional and the exten­sional axiom of choice has led to one’s taking the need for the axiom of choice in proving that the union of a countable sequence of countable sets is again countable, that the real numbers, defined as Cauchy sequences of rational numbers, are Cauchy complete, etc., as a justification of Zermelo’s axiom of choice. As Zermelo himself wrote towards the end of the short paper in which he originally introduced the axiom of choice,</p>
<blockquote>
<p><span lang="de">Dieses logische Prinzip läßt sich zwar nicht auf ein noch einfacheres zurückführen, wird aber in der mathematischen Deduktion überall unbedenklich angewendet.</span><a href="#fn21" id="fnref21" role="doc-noteref"><sup>21</sup></a></p>
</blockquote>
<p>What Zermelo wrote here about the omnipresent, and often subconscious, use of the axiom of choice in mathematical proofs is incontrovertible, but it concerns the constructive, or inten­sional, version of it, which follows almost immediately from the strong rule of existential elimination. It cannot be taken as a justification of his own version of the axiom of choice, including as it does the exten­sionality of the choice function.</p>
<p>Within an exten­sional foundational framework, like topos theory or constructive set theory, it is not wholly impossible to formulate a counterpart of the constructive axiom of choice, despite of its inten­sional character, but it becomes complicated. In topos theory, there is the axiom that there are enough projectives, which is to say that every object is the surjective image of a projective object, and, in constructive set theory, Aczel has introduced the analogous axiom that every set has a base.<a href="#fn22" id="fnref22" role="doc-noteref"><sup>22</sup></a> Roughly speaking, this is to say that every set is the surjective image of a set for which the axiom of choice holds. The technical complication of these axioms speaks to my mind for an inten­sional foundational framework, like constructive type theory, in which the intuitive argument why the axiom of choice holds on the Brouwer-Heyting-Kolmogorov interpretation is readily formalized, and in which whatever exten­sional notions that are needed can be built up, in agreement with the title of Martin Hofmann’s thesis, <em>Exten­sional Constructs in Inten­sional Type Theory</em>.<a href="#fn23" id="fnref23" role="doc-noteref"><sup>23</sup></a> Exten­sionality does not come for free.</p>
<p>Finally, since this is only a couple of weeks from the centenary of Zermelo’s first formulation of the axiom of choice, it may not be out of place to remember the crucial role it has played for the formalisation of both Zermelo-Fraenkel set theory and constructive type theory. In the case of set theory, there was the need for Zermelo of putting his proof of the well-ordering theorem on a formally rigorous basis, whereas, in the case of type theory, there was the intuitively convincing argument which made axiom of choice evident on the constructive interpretation of the logical operations, an argument which nevertheless could not be faithfully formalised in any then existing formal system.</p>
<section role="doc-endnotes">
<hr>
<ol>
<li id="fn1" role="doc-endnote"><p>G.&nbsp;Cantor (1883) <a href="https://sci-hub.st/10.1007/BF01446819"><span lang="de">Über unendliche lineare Punktmannigfaltigkeiten. Nr. 5</span></a>, <em><span lang="de">Math. Annalen</span></em>, Vol. 21(4), pp.&nbsp;545–591. Reprinted in <em><a href="https://sci-hub.st/10.1007/978-3-662-00274-2"><span lang="de">Gesammelte Abhandlungen</span></a></em>, Edited by E.&nbsp;Zermelo (1932), Springer, Berlin, pp.&nbsp;165–208.<a href="#fnref1" role="doc-backlink">↩︎</a></p></li>
<li id="fn2" role="doc-endnote"><p>G.&nbsp;H.&nbsp;Moore (1982) <em><a href="https://sci-hub.st/10.1007/978-1-4613-9478-5">Zermelo’s Axiom of Choice: Its Origins, Development, and Influence</a></em>, Springer, New York, p.&nbsp;51.<a href="#fnref2" role="doc-backlink">↩︎</a></p></li>
<li id="fn3" role="doc-endnote"><p>E.&nbsp;Zermelo (1904) <a href="https://sci-hub.st/10.1007/BF01445300"><span lang="de">Beweis, daß jede Menge wohlgeordnet werden kann. (Aus einem an Herrn Hilbert gerichteten Briefe.)</span></a>, <em><span lang="de">Math. Annalen</span></em>, Vol. 59(4), pp.&nbsp;514–516.<a href="#fnref3" role="doc-backlink">↩︎</a></p></li>
<li id="fn4" role="doc-endnote"><p>E.&nbsp;Zermelo (1908) <a href="https://sci-hub.st/10.1007/BF01450054"><span lang="de">Neuer Beweis für die Möglichkeit einer Wohlordnung</span></a>, <em><span lang="de">Math. Annalen</span></em>, Vol. 65(1), pp.&nbsp;107–128.<a href="#fnref4" role="doc-backlink">↩︎</a></p></li>
<li id="fn5" role="doc-endnote"><p>E.&nbsp;Zermelo (1908) <a href="https://sci-hub.st/10.1007/BF01449999"><span lang="de">Untersuchungen über die Grundlagen der Mengenlehre. I</span></a>, <em><span lang="de">Math. Annalen</span></em>, Vol. 65(2), pp.&nbsp;261–281.<a href="#fnref5" role="doc-backlink">↩︎</a></p></li>
<li id="fn6" role="doc-endnote"><p>G.&nbsp;H.&nbsp;Moore (1982), <a href="#fn2">op. cit.</a>, pp.&nbsp;92–137.<a href="#fnref6" role="doc-backlink">↩︎</a></p></li>
<li id="fn7" role="doc-endnote"><p>M.&nbsp;Zorn (1935) <a href="https://sci-hub.st/10.1090/S0002-9904-1935-06166-X">A remark on method in transfinite algebra</a>, <em>Bull. Amer. Math. Soc.</em>, Vol. 41(10), pp.&nbsp;667–670.<a href="#fnref7" role="doc-backlink">↩︎</a></p></li>
<li id="fn8" role="doc-endnote"><p>R.&nbsp;Baire, É.&nbsp;Borel, J.&nbsp;Hadamard, and H.&nbsp;Lebesgue (1905) <a href="http://www.numdam.org/item/10.24033/bsmf.761.pdf"><span lang="fr">Cinq lettres sur la théorie des ensembles</span></a>, <em><span lang="fr">Bull. Soc. Math. France</span></em>, Vol. 33(17), pp.&nbsp;261–273.<a href="#fnref8" role="doc-backlink">↩︎</a></p></li>
<li id="fn9" role="doc-endnote"><p>É.&nbsp;Borel (1905) <a href="https://sci-hub.st/10.1007/BF01677266"><span lang="fr">Quelques remarques sur les principes de la théorie des ensembles</span></a>, <em><span lang="de">Math. Annalen</span></em>, Vol. 60(2), pp.&nbsp;194–195.<a href="#fnref9" role="doc-backlink">↩︎</a></p></li>
<li id="fn10" role="doc-endnote"><p>L.&nbsp;E.&nbsp;J.&nbsp;Brouwer (1907) <em><a href="https://eprints.illc.uva.nl/id/eprint/1852/2/HDS-20-LEJBrouwer.text.pdf"><span lang="nl">Over de Grondslagen der Wiskunde</span></a></em>, Maas &amp; van Suchtelen, Amsterdam. English translation in <em><a href="https://library.lol/main/0CFBA75A5C78E49F96114337B2B8790D">Collected Works, Vol. 1</a></em>, Edited by A.&nbsp;Heyting (1975), North-Holland, Amsterdam, pp.&nbsp;11–101.<a href="#fnref10" role="doc-backlink">↩︎</a></p></li>
<li id="fn11" role="doc-endnote"><p>E.&nbsp;Bishop (1967) <em><a href="https://library.lol/main/D69762DE514CE40FAA389C6F178F66D4">Foundations of Constructive Analysis</a></em>, McGraw-Hill, New York, p.&nbsp;9.<a href="#fnref11" role="doc-backlink">↩︎</a></p></li>
<li id="fn12" role="doc-endnote"><p>R.&nbsp;Diaconescu (1975) <a href="https://sci-hub.st/10.1090/S0002-9939-1975-0373893-X">Axiom of choice and complementation</a>, <em>Proc. Amer. Math. Soc.</em>, Vol. 51(1), pp.&nbsp;176–178.<a href="#fnref12" role="doc-backlink">↩︎</a></p></li>
<li id="fn13" role="doc-endnote"><p>E.&nbsp;Zermelo (1904), <a href="#fn3">op. cit.</a>, footnote 3, p.&nbsp;514.<a href="#fnref13" role="doc-backlink">↩︎</a></p></li>
<li id="fn14" role="doc-endnote"><p>E.&nbsp;Zermelo (1908), <a href="#fn4">op. cit.</a>, footnote 4, p.&nbsp;110.<a href="#fnref14" role="doc-backlink">↩︎</a></p></li>
<li id="fn15" role="doc-endnote"><p>A.&nbsp;N.&nbsp;Whitehead (1902) <a href="https://sci-hub.st/10.2307/2370026">On cardinal numbers</a>, <em>Amer. J. Math.</em>, Vol. 24(4), pp.&nbsp;367–394.<a href="#fnref15" role="doc-backlink">↩︎</a></p></li>
<li id="fn16" role="doc-endnote"><p>B.&nbsp;Russell (1906) <a href="https://sci-hub.st/10.1112/plms/s2-4.1.29">On some difficulties in the theory of transfinite numbers and order types</a>, <em>Proc. London Math. Soc.</em>, Ser. 2, Vol. 4(1), pp.&nbsp;29–53.<a href="#fnref16" role="doc-backlink">↩︎</a></p></li>
<li id="fn17" role="doc-endnote"><p>P.&nbsp;Aczel (1978) <a href="https://research.mietek.io/mi.Aczel1978.html">The type-theoretic interpretation of constructive set theory</a>, <em>Logic Colloquium ’77</em>, Edited by A.&nbsp;Macintyre, L.&nbsp;Pacholski, and J.&nbsp;Paris, North-Holland, Amsterdam, pp.&nbsp;55–66.<a href="#fnref17" role="doc-backlink">↩︎</a></p></li>
<li id="fn18" role="doc-endnote"><p>P.&nbsp;Aczel (1978), <a href="#fn17">op. cit.</a>, p.&nbsp;59.<a href="#fnref18" role="doc-backlink">↩︎</a></p></li>
<li id="fn19" role="doc-endnote"><p>N.&nbsp;D.&nbsp;Goodman and J.&nbsp;Myhill (1978) <a href="https://sci-hub.st/10.1002/malq.19780242514">Choice implies excluded middle</a>, <em><span lang="de">Zeitschrift für math. Logik und Grundlagen der Math.</span></em>, Vol. 24(25–30), p.&nbsp;461.<a href="#fnref19" role="doc-backlink">↩︎</a></p></li>
<li id="fn20" role="doc-endnote"><p>S.&nbsp;Lacas and B.&nbsp;Werner (1999) <del>Which choices imply the excluded middle? About Diaconescu’s trick in type theory</del>, Unpublished, pp.&nbsp;9–10. I am indebted to Jesper Carlström for providing me with this reference.<a href="#fnref20" role="doc-backlink">↩︎</a></p></li>
<li id="fn21" role="doc-endnote"><p>E.&nbsp;Zermelo (1904), <a href="#fn3">op. cit.</a>, footnote 3, p.&nbsp;516.<a href="#fnref21" role="doc-backlink">↩︎</a></p></li>
<li id="fn22" role="doc-endnote"><p>P.&nbsp;Aczel (1982) <a href="https://sci-hub.st/10.1016/S0049-237X(09)70120-X">The type-theoretic interpretation of constructive set theory: Choice principles</a>, <em>L.&nbsp;E.&nbsp;J.&nbsp;Brouwer Centenary Symposium</em>, Edited by A.&nbsp;S.&nbsp;Troelstra and D.&nbsp;van Dalen, North-Holland, Amsterdam, 1982, pp.&nbsp;1–40.<a href="#fnref22" role="doc-backlink">↩︎</a></p></li>
<li id="fn23" role="doc-endnote"><p>M.&nbsp;Hofmann (1997) <em><a href="https://sci-hub.st/10.1007/978-1-4471-0963-1">Exten­sional Constructs in Inten­sional Type Theory</a></em>, Springer, London.<a href="#fnref23" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OxCaml - a set of extensions to the OCaml programming language. (276 pts)]]></title>
            <link>https://oxcaml.org/</link>
            <guid>44268782</guid>
            <pubDate>Fri, 13 Jun 2025 14:20:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://oxcaml.org/">https://oxcaml.org/</a>, See on <a href="https://news.ycombinator.com/item?id=44268782">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
        <h2>OxCaml is a fast-moving set of extensions to the OCaml programming language.</h2>
        <p>It is both Jane Street’s production compiler, as well as a laboratory for experiments focused towards making
            OCaml better for performance-oriented programming. Our hope is that these extensions can over time be
            contributed to upstream OCaml.</p>
    </div><div>

    <section>
        <h2>OxCaml’s primary design goals are:</h2>
        <ul>
            <li>to provide <span>safe, convenient, predictable</span> control over performance-critical
                aspects
                of
                program behavior </li>
            <li>but <span>only where you need it,</span></li>
            <li>and…<span>in OCaml!</span></li>
        </ul>
    </section>


    <section>
        <h2>Let’s talk about what this means!</h2>

        <p>OxCaml’s extensions are meant to make OCaml a great language for performance engineering. Performance
            engineering
            requires control, and we want that control to be:</p>

        <ul>
            <li>Safe. Safety is a critical feature for making programmers more productive, and for shipping correct
                code.
                Languages that are pervasively unsafe are too hard to use correctly.</li>
            <li>Convenient. We want to provide control without bewildering programmers, or drowning them in endless
                annotations.
                To achieve this, we aim to maintain OCaml’s excellent type-inference, even as we add considerable
                expressiveness
                to the type-system.</li>
            <li>Predictable. One of the great features of OCaml today is that it’s pretty easy to look at OCaml code and
                understand how it’s going to perform. We want our extensions to maintain and improve on that property,
                by
                making
                key performance details explicit at the type-level.</li>
        </ul>

        <p>By "only where you need it", we mean that OxCaml’s extensions should be pay-as-you-go. While OxCaml aims to
            provide
            more power to optimize, you shouldn’t need to swallow extra complexity when you’re not using that power.</p>
        <p>By "in OCaml", we mean that all valid OCaml programs are also valid OxCaml programs. But our more profound
            goal
            is
            for OxCaml to feel like OCaml evolving into a better version of itself, rather than a new language. For
            that,
            OxCaml
            needs to honor OCaml’s basic design sensibility, and to preserve the safety, ease, and productivity that are
            hallmarks of the language.</p>
    </section>


    <section>
        <h2>OxCaml’s extensions </h2>
        <p>Our extensions can be roughly organized into a few areas:</p>

        <div>
            <div>
                <h2>Fearless concurrency</h2>
                <p>Writing correct concurrent programs is notoriously difficult. OxCaml includes additions to the
                    type
                    system to
                    statically rule out data races.</p>
            </div>

            <div>
                <h2>Layouts</h2>
                <p>OxCaml lets programmers specify the way their data is laid out in memory. It also provides native
                    access
                    to
                    SIMD processor extensions.</p>
            </div>


            <div>
                <h2>Control over allocation</h2>
                <p>OxCaml gives programmers tools to control allocations, reducing GC pressure and making programs
                    more
                    cache efficient and deterministic.</p>
            </div>

            <div>
                <h2>Quality of life </h2>
                <p>OxCaml also contains some extensions that aren’t specifically about systems programming, but
                    which
                    we’ve
                    found helpful in our day-to-day work:</p>
                <ul>
                    <li>Polymorphic parameters</li>
                    <li>Include functor</li>
                    <li>Labeled tuples</li>
                    <li>Immutable arrays</li>
                </ul>
            </div>



        </div>
    </section>


    <section>
        <h2>Using OxCaml</h2>
        <p>OxCaml is open-source, and we’re excited to welcome experimental users, especially researchers and tinkerers
            who
            can
            kick the tires and provide feedback on the system. We put the emphasis on experimental because OxCaml makes
            no
            promises of stability or backwards compatibility for its extensions (though it does remain backwards
            compatible
            with
            OCaml).</p>
        <p>OxCaml is intended to be easy to use, and to that end comes with modified versions of the standard OCaml
            tool-set,
            including:</p>

        <ul>
            <li>Package management, compatible with dune and opam</li>
            <li>Editor integration via the LSP-server</li>
            <li>Source code formatting</li>
            <li>Documentation generation</li>

        </ul>

        <p>Jane Street has long open sourced a bunch of useful libraries and tools. These are now released in two forms:
            one
            for
            upstream OCaml, in which our extensions have been stripped, and one for OxCaml, where the extensions are
            fully
            leveraged.</p>

        <p>Not all extensions are erasable, so some libraries will be available only for OxCaml. We’ll export
            OCaml-compatible
            versions of these libraries when the necessary extensions are integrated upstream.</p>

    </section>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Tattoy – a text-based terminal compositor (164 pts)]]></title>
            <link>https://tattoy.sh</link>
            <guid>44268644</guid>
            <pubDate>Fri, 13 Jun 2025 14:04:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tattoy.sh">https://tattoy.sh</a>, See on <a href="https://news.ycombinator.com/item?id=44268644">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="home-content"><div><div><p><img loading="lazy" src="https://tattoy.sh/assets/screenshots/hero.webp"></p></div><p>Tattoy with a GPU-rendered shader and live-updating minimap of the TTY scrollback.</p></div><div><h2>About</h2><p>Tattoy can generally be thought of as a framework for adding eye-candy to your terminal. It is purely text-based so works in any terminal emulator that supports true colour. "Graphics" is rendered with UTF8 half-blocks (▀,▄). Whilst most of its effects are for getting you street credibility it also has more powerful features based around its awareness of terminal contents. For example it can detect and auto adjust text contrast whilst remaining faithful to the terminal's palette.</p><p>Tattoy works with your existing shell, theme and prompt, etc. It can always and immediately toggle between its effects and your normal terminal state, allowing for easy copy-pasting for example.</p></div><div><h2>Shaders</h2><p>Perhaps the fanciest feature of Tattoy is its ability to render GPU shaders. It is designed to be able to run most shaders from <a href="https://www.shadertoy.com/">Shader Toy</a> without any editing at all. It also supports <a href="https://github.com/hackr-sh/ghostty-shaders">Ghostty shaders</a> out-of-the-box, though certain shaders that alter the position of text (such as CRT emulators) don't have a pronounced impact as text rendering is always left to the host terminal emulator.</p></div><div><h2>Second Terminal In Background</h2><p><span> You can run an arbitrary command that is rendered in the background of your normal terminal. Use-cases for this might be: <ul><li>an audio visualiser</li><li>video background</li><li>system monitor graphs</li></ul> The background terminal's opacity can be adjusted so it doesn't visual conflict too much with your actual terminal. </span><span>  </span></p></div><div><h2>Scrollback Minimap</h2><p><span>  </span><span> The minimap is a pixelised version of the contents of the scrollback, including the current contents of the screen. It live updates, even when using the so-called "alternate screen" for apps like `nvim`, `top`, `gitui`, etc. <p>Tattoy manages its own scrollback buffer (like say `tmux` does), and so can therefore also provide its own scrollbar.</p> </span></p></div><div><h2>Auto Text Contrast</h2><p><span> Have you ever run `ls` in a directory only for certain file types to be completely illegible? This has long been an intractable problem caused by the limited colours of terminal palettes. CLI applications are only ever aware of palette index values, not the underlying RGB value, therefore it is impossible for them to know if any given background colour is sufficient enough to allow its containing text to be readable. <p>Not anymore!</p> <p>Tattoy is aware of the true 24 bit RGBA value of all colours in your terminal. This allows it to use clever algorithms to detect low contrast text and auto adjust the foreground colour within the constraints of your chosen terminal theme to find the nearest colour that meets a minimum contrast threshold.</p> </span><span>  </span></p></div><div><h2>Plugins</h2><p><span>  </span><span> Plugins can be written in any language. You get full access to your terminal's contents and can render both UTF8 "pixels" and text to a dedicated plugin layer of your choosing. Currently the protocol is JSON over `STDIN` and `STDOUT`. See the <a href="https://tattoy.sh/docs/plugins">plugin documentation</a> for more info. <p>Here we see the cursor giving off smoke particles that interact with the terminal's text. The source code can be found <a href="https://github.com/tattoy-org/tattoy/tree/main/crates/tattoy-plugins/smokey_cursor">here</a>.</p> </span></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: How do I give back to people helped me when I was young and had nothing? (333 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=44268448</link>
            <guid>44268448</guid>
            <pubDate>Fri, 13 Jun 2025 13:42:45 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=44268448">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="44269057"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269057" href="https://news.ycombinator.com/vote?id=44269057&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>Focus less on those who helped you, and more on helping others.</p><p>The first time I went to Defcon, I felt lonely and lost -- it was the first year they had those cool electronic badges, and at the time they were only given out as entrance tokens for an exclusive party that was the talk of the con.</p><p>I didn't really "know" anyone there -- like a lot of young hackers, I was part of one of those vBulletin board hacker crews that have been lost to time and I'd exhausted the meager savings I had built up that summer on my plane ticket and hotel room at the Riviera.</p><p>A lot of people who had expense accounts were going out to nice places for dinner -- the guy with per diem would get drinks, the guy who had to itemize, and me, the guy trying to get a group together to visit that cool looking dive bar next to Bally's kept getting laughed at and called a newbie...</p><p>Then none other than Dan Kaminsky[1] strolls up, tells me he knows who I am (!) and heard I'd been asking about the ninja party, tells me he can't get me in but he knows a room party. Shows me a room next to the pool with a keg in the bathtub, I threw them a five and we sat around talking until late in the night. They had some good tips on cheap places to eat, how to get free drinks at the penny slots, that sort of thing.</p><p>And then, every year since that I visited, I did what he did... wander the convention looking for the budget travel crew, the folks who don't do it for a salary and whom this is their reality, and I'd take them on a quest for two dollar hot dogs, show them the little store next to the dive bar where they could stock up on beer and liquor and ice and then disappear into the night like some kind of helpful spirit of the hacker night.</p><p>Anyways... long, profuse thank yous are not needed. What you should do is make sure you keep the gates open that were not gatekept for you. Be the person who connects others, in ways that you can't always list on your CV.</p><p>[1] Rest in power</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269324"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269324" href="https://news.ycombinator.com/vote?id=44269324&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>"and then disappear into the night like some kind of helpful spirit of the hacker night."</p><p>This is awesome. One interaction like this can change the entire vibe of a group's weekend. Good on you.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269600"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269600" href="https://news.ycombinator.com/vote?id=44269600&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>I can't speak for those that helped the OP, but I take joy in helping strangers of all sorts.</p><p>The only payback would be in passing it on. The act is an attempt to build a culture of openness and collaboration.  It is only partially about helping the person that needs it and more about creating a gift to future us.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269571"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269571" href="https://news.ycombinator.com/vote?id=44269571&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>I didn't know Dan personally, but everyone I know who knew him said Dan was good people. I wish I'd gotten to know him.</p><p>Piling-on your story: I'd love to know who the guy was I hung out with at Defcon 3. My friends' flights were earlier than mine and I ended up alone in Las Vegas, newly-turned 18 y/o and w/ very little travel experience outside of Ohio.</p><p>I ended up hanging out talking with a Unix hacker in his mid-late 20s who struck up a conversation w/ me on the con floor. We hung out the rest of Sunday until my flight left. It made what otherwise would have been a lonely and stressful day a lot of fun.</p><p>He gave me an email address to hit him up after the con. It turned out to be fake. I've never been able to find any references to his "name", the domain name on the email, etc. I don't know he gave me the fake address because of the stigma of a "hacker con" / being worried about real identities, etc. I'd hope it wasn't because he just didn't want to hear from me again (albeit I do recognize that I was pretty insufferable at that age).</p><p>If you remember hanging out w/ a long-haired kid on the last Saturday of Defcon 3 I'd love to touch base. (My God... that will be 30 years ago in a couple months.)</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269596"><td></td></tr>
            <tr id="44269668"><td></td></tr>
            <tr id="44269341"><td></td></tr>
                  <tr id="44269317"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269317" href="https://news.ycombinator.com/vote?id=44269317&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>As others have indicated: I think many people who show others "incredible kindness and inspiration" would value you doing the same for others more than anything you could probably <i>do</i> for them. However, simply <i>telling</i> them "you were incredibly kind to me and you are a big reason for me trying to be kind to others" might just make their day.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269496"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269496" href="https://news.ycombinator.com/vote?id=44269496&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>This.  And stay in contact over the years.  Everyone needs more friends, and some people really need them.  That is worth far more than almost anything you could give/buy.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269654"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269654" href="https://news.ycombinator.com/vote?id=44269654&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>I unfortunately did this to two people that were instrumental in my life, except during a manic episode, and while I sprinkled some good stuff in there, I also said some cringe things that I'm really embarrassed about. Rather than try and apologise many years later, I've just let it hung, and hope they appreciated the good things I said and not the odd out of place manic-inspired things.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269731"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44269731" href="https://news.ycombinator.com/vote?id=44269731&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>Hard to speculate, but again, I would assume that many people who show others "incredible kindness and inspiration" accept neurodiversity instead of expecting some sort of apology for it (and might even be willing to talk about such things).</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269576"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269576" href="https://news.ycombinator.com/vote?id=44269576&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>My partner did that, sending thank-you emails to teachers and mentors that helped shape her path. The responses have been very positive.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269431"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269431" href="https://news.ycombinator.com/vote?id=44269431&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>My best friend is spending 100 days writing hand written letters of love to those who contributed to her life’s journey. There’s humanity and connectedness with writing that no other medium offers both the writer and the reader. Her writing has been received with such love, tears of joy, and mutual appreciation. This includes book authors that she’s found herself meaningfully influenced and inspired by. She’s half way through the project, and I’m sure she’d be happy to connect if you’d like any tips.</p><p>One big tip is make sure your hands are ready with the proper pen and hand exercises.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269601"><td></td></tr>
                <tr id="44269894"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44269894" href="https://news.ycombinator.com/vote?id=44269894&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>The hand written letters have mistakes and flow that are perfectly imperfect. Also it looks like despite all their effort, they still went able to get the robot to anywhere near replicating human level writing in even a short note.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="44268708"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44268708" href="https://news.ycombinator.com/vote?id=44268708&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>People might not remember things that made such a difference to you and a Thank You will mean a lot. Also maybe if you lost touch with some, maybe now that you are older and without a work or other hierarchy to get in the way, you could be friends. I have seen this a few times.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269112"><td></td></tr>
            <tr id="44268520"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44268520" href="https://news.ycombinator.com/vote?id=44268520&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>I have a goal of writing a thank you note a month to people who have helped me. (Reminds me, I need to do that this month.)</p><p>The folks I've done this for were pleasantly surprised, both by the note and the contents of it. They'd forgotten how they helped me, which makes sense, because it was a big deal for me but not for them.</p><p>A physical note, reminding them of the help they gave you, is a great way to say thanks.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44268847"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44268847" href="https://news.ycombinator.com/vote?id=44268847&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>This is the right approach. Not just to be grateful in the moment but in the future to be grateful introspectively.</p><p>Also, paying it forward is the best way to give back and can create long lasting positive ripples.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44268871"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44268871" href="https://news.ycombinator.com/vote?id=44268871&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>Yes! Pay it forward.</p><p>Think about what someone did for you in the past (an intro, a kind word, a helpful convo an investment, whatever it was) and try to do it for someone in your life today.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44268577"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44268577" href="https://news.ycombinator.com/vote?id=44268577&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>Wow, thank you! this is really impressive! It feels like receiving a surprise ('dividend') from a past good deed. I will start doing this!</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44268678"><td></td></tr>
                        <tr id="44268808"><td></td></tr>
                <tr id="44268945"><td></td></tr>
                  <tr id="44269479"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269479" href="https://news.ycombinator.com/vote?id=44269479&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>If it was a long time ago that they helped you, some of them may be old. The very old are often isolated and in need of company and other forms of help. If that sounds like the folks who helped you, I’m sure just checking in with them would mean a lot.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44268888"><td></td></tr>
                <tr id="44269368"><td></td></tr>
                  <tr id="44269766"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269766" href="https://news.ycombinator.com/vote?id=44269766&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>Talk to the people that helped you! Don't assume they don't need help from you now, because a lot of people put up a brave front</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269087"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269087" href="https://news.ycombinator.com/vote?id=44269087&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>I came from a pretty terrible situation, and by the time I was 17, was living on my own, in the local housing authority apartments. In high school, a local businessman, who later became mayor, helped me out. I was on the debate team, and needed a suit, so he took me shopping, and not only bought the suit, but an entire wardrobe and other assistance. We communicated off and on as I went into college etc (he passed a few years later)</p><p>He told me that when I was successful, to do the same.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269054"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269054" href="https://news.ycombinator.com/vote?id=44269054&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>I've actually thought of having a big dinner for all of the managers I've had over the years that were helpful in getting me to where I am today.</p><p>That being said, even a handwritten note or phone call to say "I just wanted to say that at X time in my life, you did Y and it was amazing at the time and helped me get to where I am now" goes a LONG way.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269588"><td></td></tr>
            <tr id="44269265"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269265" href="https://news.ycombinator.com/vote?id=44269265&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>A handwritten note can be pinned to a cubicle or tucked into a book or whatever. It's tangible, and there's a role for that, and this is it.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269104"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269104" href="https://news.ycombinator.com/vote?id=44269104&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>&gt; I've actually thought of having a big dinner for all of the managers I've had over the years that were helpful in getting me to where I am today.</p><p>I can't say I haven't had the same thought from time to time. Only my thoughts involve much more poison.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44268699"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44268699" href="https://news.ycombinator.com/vote?id=44268699&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>I tithe. I don't mean that in a religious sense at all, but it's the way I pay my community back for that support. It's also not just in terms of money -- I count time volunteering and mentoring as part of tithing. It's also not repaying the people who helped me directly, but I don't think that's the important part. The way you pay them back is to "pay it forward" and do for others as those people have done for you.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44268886"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44268886" href="https://news.ycombinator.com/vote?id=44268886&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>If it's not religious I don't know why you'd call it tithing, that's not what that word means. For example, I do communion, but not in the religious sense, I take shots and order a frozen pizza at the bar.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44268906"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_44268906" href="https://news.ycombinator.com/vote?id=44268906&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>"Tithe" is not inherently a religious term (it just means "a levy of 1/10th"), despite it mostly being used in a religious context. I use it because there is no good alternative term.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="44268998"><td></td></tr>
                <tr id="44269197"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_44269197" href="https://news.ycombinator.com/vote?id=44269197&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>10% is the standard I follow. It's built into my budgeting at that level. There's nothing magical about the 10%, though, it's just what works for me and is easy to compute. But I also follow the "pay yourself first" rule -- I take 10% off the top of every dollar that I receive, and put that aside for future me. Then I set aside 10% of the remainder to pay back my community. So, it's really 9%.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44268951"><td></td></tr>
                              <tr id="44268929"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44268929" href="https://news.ycombinator.com/vote?id=44268929&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>Since they invested their time in you, I would suggest that you give back in kind. Call them, send them a note, email/text, etc.  It is easier than ever to keep in touch with people now-a-days. Meet them in person if they are open to that and you are able to.</p><p>If some of these mentors are retired, I'm sure they would love to hear from a former protege/student/mentee.  Watching my dad after his retirement, he always enjoys these interactions with his former colleagues -- talk about their profession or department.  Made his day/week in most cases.  Retirement can be professionally lonely sometimes.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="44269049"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_44269049" href="https://news.ycombinator.com/vote?id=44269049&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>I've worked directly with several HNW individuals, and the biggest "snub" (real or not) I ever witnessed was a multi-millionaire who sabotaged a mentee's already-disastrous wedding... because he wasn't thanked in the wedding handout.</p><p>Dollars meant nothing to him, but control — and meant nothing to this Groom.</p><p>&gt;If some of these mentors are retired</p><p>Retired people typically rock, so-long as they didn't spend their entire careers being bullies. For several years I lived in a retirement community (as "the help") and the endless dinners/conversations rarely "got old." I mostly enjoyed working with/for elderly retirees, except that <i>most seem to have almost no concept of how much dollars have deflated</i> since their pre-70s/80s/90s gold-backed hayday.</p><p>&gt;[things you could do]</p><p>Help raise "the next generation" by living well and mentoring your own deserving minds — perhaps have an informal lunch with both your advisor and advisee?</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="44269887"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269887" href="https://news.ycombinator.com/vote?id=44269887&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>I asked something like this about a childhood teacher that really made a difference in my life when I felt particularly bad and alone. I tried to find the guy to thank him years later and learned that he had passed away.</p><p>The answer that really moved me is that those people in your life do what they do because it brings them joy, and they do not expect anything in return. That’s what makes people great - their reward is the work. The way to pay them back is to share those values.</p><p>Maybe that means giving someone a break, or supporting organizations that support people in similar situations. Think small - help people not non-profits.</p><p>For the specific people, perhaps just get in touch with them and start a conversation. Figure out what they are working on and help them in some way. Or not. At the end of the day, their friendship and mentorship was the important thing. Build that relationship where you can.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269312"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269312" href="https://news.ycombinator.com/vote?id=44269312&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>Saying "thank you" and paying it forward is all the recognition anyone needs.</p><p>The many people that helped you were in their own small way trying to make the world a better place through you. They were not expecting anything in return.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44268932"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44268932" href="https://news.ycombinator.com/vote?id=44268932&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>I agree with a lot of the comments that (1) giving heartfelt thanks (which you can do more than once over the years) and (2) being there to help them if they ever need it and (3) paying it forward is the best you can do.</p><p>You could throw money at it or try to make big gestures but to the people that helped you just knowing how much it meant to you is the best reward.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269551"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269551" href="https://news.ycombinator.com/vote?id=44269551&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>1. Do favors for them where you can, based on your strengths (and perhaps their weaknesses.)</p><p>2. Pay it forward by doing the same for someone younger. That's probably the main thing your helper wants: to continue their help "blood line".</p><p>I had a few crucial people boost me in my youth. And I did the same for some younger people. My messaging to them was not to pay me back with favors, but to continue the thing.</p><p>But yeah, they've helped me in a pinch a few times and I've really appreciated it.</p><p>It's handy to be in a situation where you have a lot more skills and experience and wisdom, but they are much more intelligent.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44268585"><td></td></tr>
            <tr id="44269614"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269614" href="https://news.ycombinator.com/vote?id=44269614&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>Help out others like they helped you and spend time with them. Every teacher and mentor I've ever had always enjoyed seeing the fruits of their labor. Just grab a lunch or a coffee with them and catch up.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269745"><td></td></tr>
            <tr id="44269506"><td></td></tr>
            <tr id="44269350"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269350" href="https://news.ycombinator.com/vote?id=44269350&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>I remember when I was first learning development this random guy from a PHP forum would skype me and help me with my code. Now that I've been in the industry for a while I give back by helping other people. Although thankfully there are a lot of people already that do that eg. some subreddit dedicated to a programming language.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269066"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269066" href="https://news.ycombinator.com/vote?id=44269066&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>Tell people you love them. It's very hard for some people to do but those three words are pound-for-pound the most asymmetrically positive words you can tell another.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269184"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269184" href="https://news.ycombinator.com/vote?id=44269184&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>For your mentors? Write them a letter expressing your gratitude.</p><p>For yourself? Determine how you can be that person for others.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44268479"><td></td></tr>
                <tr id="44268551"><td></td></tr>
                  <tr id="44269080"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269080" href="https://news.ycombinator.com/vote?id=44269080&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>Let them know that their example made you kind, inspirational and invested in the success of those who are like you were all this time ago.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269159"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269159" href="https://news.ycombinator.com/vote?id=44269159&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>Just call them, invite them to a drink/dinner and tell them what you fell. You'll make their day.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269075"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269075" href="https://news.ycombinator.com/vote?id=44269075&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>Just pay it forward. Give back to those around you in immediate need instead. Like politics, charity should be local.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269805"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269805" href="https://news.ycombinator.com/vote?id=44269805&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>Since you are already paying it forward, I would write a thank you message to those people. Tell them how their help improved your life.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44268865"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44268865" href="https://news.ycombinator.com/vote?id=44268865&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>Send a note. The director of my old lab was essentially a proxy father for me for nearly 10 years, and inspired me to take my life and career more seriously, which I did. Work was not the only thing, but life. I took up running because I looked up to him in my 20s, I remember seeing him and thinking "wow, this guy is in his mid 40s and looks great!" Tell them. His wife told me in secret that it made him so happy he cried.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269717"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269717" href="https://news.ycombinator.com/vote?id=44269717&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>&gt; I often feel there's still an imbalance. I feel like I owe something more</p><p>Debt is related to value, which is inherently subjective. In nature, nothing reproducable is one yard long, so we create something and call it a yard, and that first thing becomes the standard. The same is true economically; there's no way to measure what one loaf of bread is inherently worth. Even the time and resources needed to produce it vary depending on countless circumstances. A man with a bread factory will have a much easier time producing one loaf than a homeless man.</p><p>The same is true for pain. What's as trivial as a small papercut to one person may be overwhelmingly traumatic to another person, and another can handle losing a limb as easily as losing a pen. Countless variable psychological circumstances prevent us from making any true measurement of debt.</p><p>But justice requires that we try our best and move on. So we create economies out of barter and then gold and then bills and then credit. Or we create justice systems that are constantly flowing and changing in their understanding of right and wrong, and also value and loss.</p><p>It may be that some people who helped you had no difficulty. I do remember a teacher telling us once to be careful of what we say, because we never know which things we say will stick with someone forever with deep profoundness. Which goes to show that a small off the cuff comment has the very real potential to contribute toward making someone's life significantly better or significantly worse, yet the comment took almost no thought or effort. It <i>cost</i> little.</p><p>There's a moment in a play written by Karol Wojtyla in the 1940s, where Adam Chmielowski asks Madame Helena what it costs her to play Ophelia or Lady MacBeth. She replies, "in a way, it costs me all my life. It is a strange ransom; every time I pay it all over again."</p><p>I have met <i>many</i> people who are convinced that they have been wronged so grievously that the offender must pay every last penny they have or ever will make, and suffer every second of this life as much as possible, and they hope Hell exists purely so that the offender's suffering may not be relieved by the most torturous death imaginable. Such a person will never be satisfied or happy.</p><p>For the little it's worth, my recommendation is to repay people with what good value you justly and reasonably estimate that you owe them for the good they have done to you, and be done with it. If they consider it too much or too little, accomodate them a little, but only within reason. Inversely, if anyone has wronged you, consider their debt paid to you already, since this costs you nothing, whereas exacting justice is tiresome and restless. Besides, forgiving someone's debt to you gives them encouragement to improve, whereas exacting it discourages them and puts them on the defense. That's not to say you shouldn't insist that <i>society as a whole</i> have justice also, for example by calling the police when a legitimate crime has occurred to you or someone else. I'm only talking about the debt in context of two humans.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269344"><td></td></tr>
            <tr id="44268978"><td></td></tr>
            <tr id="44269522"><td></td></tr>
            <tr id="44268913"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44268913" href="https://news.ycombinator.com/vote?id=44268913&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div>
                  <p>You set up the environment to create more people like you the same way those experienced people did. I've found that mentorship like this has been one of the most rewarding things I've ever done in my career.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="44268793"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44268793" href="https://news.ycombinator.com/vote?id=44268793&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>Think about something they like and get a nice version of it for them. Like if they like pens, get them a nice one with a note engraved</p><p>Pay it forward</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269388"><td></td></tr>
            <tr id="44269297"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269297" href="https://news.ycombinator.com/vote?id=44269297&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>&gt; Ask HN: How do I give back to people helped me when I was young and had nothing?</p><p>Give also to young people who are young and have "nothing".</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269180"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269180" href="https://news.ycombinator.com/vote?id=44269180&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>Give back to others who are in your position as you were when young.</p><p>I always go through every cold contact email or message from any university student who messages me out of the blue, simply because a McKinsey Senior Managing Partner took the same chance for me. He even recommended me to the McKinsey recruiting, even though I was ridiculously off-cycle, even though my profile was kinda shit lol, just after one meeting. But because of him, I got my first exposure to whiteshoe recruiting (eventually joined a place where McK people dream of going to). So now I give back the opportunity to anyone who asks me politely for a meeting or for advice.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269094"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269094" href="https://news.ycombinator.com/vote?id=44269094&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>what seems to have worked for me:</p><p>- speak to them frequently and deliberately remind them of how immense their help has been to me. i try to share important updates with them as well.</p><p>- gifts</p><p>- paying it forward. easiest, kind of natural responsibility though (even if no one helped you). hence least emphasized as a way to show gratitude.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="44269422"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_44269422" href="https://news.ycombinator.com/vote?id=44269422&amp;how=up&amp;goto=item%3Fid%3D44268448"></a></center>    </td><td><br><div><p>I was told to never give unsolicited advice, and saying thank you out of the blue is a type of unsolicited feedback.</p><p>Helping others is also a form of elitism as it assumes you know what is best for others and most of us don't.</p><p>It is best to live alone, die alone, thank no one, and stick to yourself.  Leave improving the world to the 1%, most of us aren't worth the air we breathe and the smaller the footprint we leave when we die the better humanity will be for it.</p></div></td></tr>
        </tbody></table></td></tr>
            </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Meta Invests $14.3B in Scale AI to Kick-Start Superintelligence Lab (425 pts)]]></title>
            <link>https://www.nytimes.com/2025/06/12/technology/meta-scale-ai.html</link>
            <guid>44268197</guid>
            <pubDate>Fri, 13 Jun 2025 13:09:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2025/06/12/technology/meta-scale-ai.html">https://www.nytimes.com/2025/06/12/technology/meta-scale-ai.html</a>, See on <a href="https://news.ycombinator.com/item?id=44268197">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2025/06/12/technology/meta-scale-ai.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Anker is recalling over 1.1M power banks due to fire and burn risks (122 pts)]]></title>
            <link>https://www.theverge.com/news/686084/anker-recall-uscpsc-power-bank-battery-powercore-a1263</link>
            <guid>44267989</guid>
            <pubDate>Fri, 13 Jun 2025 12:41:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/news/686084/anker-recall-uscpsc-power-bank-battery-powercore-a1263">https://www.theverge.com/news/686084/anker-recall-uscpsc-power-bank-battery-powercore-a1263</a>, See on <a href="https://news.ycombinator.com/item?id=44267989">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p><img alt="Andrew Liszewski" data-chromatic="ignore" loading="lazy" width="36" height="36" decoding="async" data-nimg="1" srcset="https://platform.theverge.com/wp-content/uploads/sites/2/chorus/author_profile_images/197412/headshot_andrewL_blackwhite.0.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=48 1x, https://platform.theverge.com/wp-content/uploads/sites/2/chorus/author_profile_images/197412/headshot_andrewL_blackwhite.0.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=96 2x" src="https://platform.theverge.com/wp-content/uploads/sites/2/chorus/author_profile_images/197412/headshot_andrewL_blackwhite.0.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=96"></p><p><a href="https://www.theverge.com/authors/andrew-liszewski">Andrew Liszewski</a> <span>is a senior reporter who’s been covering and reviewing the latest gadgets and tech since 2006, but has loved all things electronic since he was a kid.</span></p></div><div id="zephr-anchor"><div><p>Anker has <a href="https://go.skimresources.com/?id=1025X1701640&amp;xs=1&amp;url=https%3A%2F%2Fwww.anker.com%2Fa1263-recall" rel="sponsored">issued a recall for its PowerCore 10000 power bank</a> (model A1263) due to a “potential issue with the lithium-ion battery” that could pose a fire safety risk. The company has received 19 reports of fires and explosions that have caused minor burn injuries and resulted in property damage totaling over $60,700, <a href="https://www.cpsc.gov/Recalls/2025/More-than-One-Million-Anker-Power-Banks-Recalled-Due-to-Fire-and-Burn-Hazards-Manufactured-by-Anker-Innovations">according to the US Consumer Product Safety Commission (USCPSC)</a>.</p></div><p>The recall covers about 1,158,000 units that were sold online through Amazon, Newegg, and eBay between June 2016 and December 2022. The affected batteries can be identified by the Anker logo engraved on the side with the model number A1263 printed on the bottom edge. However, Anker is only recalling units sold in the US with qualifying serial numbers. To check if yours is included, you’ll need to <a href="https://go.skimresources.com/?id=1025X1701640&amp;xs=1&amp;url=https%3A%2F%2Fwww.anker.com%2Fa1263-recall-form" rel="sponsored">visit Anker’s website</a>.</p><div><p><a href="https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0,0,100,100" data-pswp-height="293" data-pswp-width="900" target="_blank" rel="noreferrer"><img alt="Two images showing how to identify the Anker power bank." data-chromatic="ignore" loading="lazy" decoding="async" data-nimg="fill" sizes="(max-width: 639px) 100vw, (max-width: 1023px) 50vw, 700px" srcset="https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=256 256w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=376 376w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=384 384w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=415 415w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=480 480w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=540 540w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=640 640w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=750 750w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=828 828w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1080 1080w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1200 1200w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1440 1440w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1920 1920w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2048 2048w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2400 2400w" src="https://platform.theverge.com/wp-content/uploads/sites/2/2025/06/anker_powercore2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2400"></a></p></div><p>Anker is offering affected consumers their choice of either a $30 gift card (the recalled battery cost around $27) that can be used on <a href="https://go.skimresources.com/?id=1025X1701640&amp;xs=1&amp;url=http%3A%2F%2Fanker.com" rel="sponsored">Anker.com</a>, or a free 10,000mAh Anker power bank as a replacement (model A1388) featuring upgrades including a charge level display and a USB-C charging cable lanyard.</p><p>To receive the gift card or the replacement, Anker requires a “photo of the power bank with the submission date and the word ‘recall’ or ‘recalled’ written clearly in permanent marker,” to be submitted, and a “photo showing the model number and serial number (SN) printed on the bottom of the device.” The company is also requesting a purchase receipt, but it’s not mandatory to participate in the recall.</p><p>After confirming that your power bank is one of the recalled units, Anker says it should be taken to a facility that can safely dispose of lithium-ion batteries due to the risk of fire. Those facilities can be found through the <a href="https://www.epa.gov/recycle/used-lithium-ion-batteries">Environmental Protection Agency’s website</a> or <a href="https://www.call2recycle.org/">other organizations</a> in the US that specialize in processing e-waste. Do not throw them in the trash, recycling bins, or used battery boxes provided at various retail locations.</p><p>The recall is also a reminder that power banks and backup batteries can potentially develop severe issues over time, as these particular units are almost a decade old. If you’ve been regularly using devices featuring lithium-ion batteries for a while, you’ll want to be mindful of issues like overheating or visible swelling and dispose of them properly if you think there’s a potential problem. And while the technology is currently more expensive than lithium-ion batteries, you can also <a href="https://www.theverge.com/reviews/656183/kuxius-semi-solid-state-power-bank-costs-a-little-more-but-lasts-much-longer">consider upgrading to solid-state batteries</a> which are more powerful, safer, and <a href="https://www.theverge.com/news/631357/elecom-power-bank-battery-sodium-ion">longer lasting than what we commonly use now</a> to power our devices.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The European public DNS that makes your Internet safer (121 pts)]]></title>
            <link>https://www.dns0.eu</link>
            <guid>44267091</guid>
            <pubDate>Fri, 13 Jun 2025 09:44:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.dns0.eu">https://www.dns0.eu</a>, See on <a href="https://news.ycombinator.com/item?id=44267091">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__next"><div><p>The <span>European</span> public DNS that makes your Internet safer.</p><p>A free, sovereign and GDPR-compliant recursive DNS resolver with a strong focus on security to protect the citizens and organizations of the European Union.</p></div><div><p>Set up on your device</p><div id="headlessui-tabs-panel-:R3a6m:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><ol><li>Download the <a href="https://www.dns0.eu/dns0.eu.mobileconfig">configuration profile</a>.</li><li>Open the <span>Settings</span> app.</li><li>Tap <span>Profile Downloaded</span>.</li><li>Tap <span>Install</span> in the upper-right corner, then follow the onscreen instructions.</li></ol></div></div><div><p>Infrastructure &amp; Network</p><div><div><p>We distribute our infrastructure across multiple hosting providers in every member state of the European Union. Our custom-built software stack has been battle-tested for more than 3 years answering trillions of queries and serving hundreds of thousands of users at NextDNS.</p></div><div><p>¹ </p><!-- --><p>median latency across our infrastructure</p></div></div></div><div><p><span>Encryption</span></p><div><p>We support modern DNS protocols that are not vulnerable to eavesdropping and tampering by malicious — or compromised — network intermediaries that route packets between your device and our service.</p></div></div><div><p>Threats</p><div><div><p>We engineered our system to shorten the detection-to-protection window to just a few seconds. By working closely with threat intelligence providers, CERTs and other European cybersecurity actors, we aim to provide the highest level of protection against Internet threats to European citizens and organizations.</p></div><div><p>account-netflix.com 0orange.fr activation-ameli.fr aidepaypal.com bougyuestelecom.fr compte-support-netflix.fr cpam-carte.fr dhl-security-account.fr espace-connexion.fr identifiant-icloud.fr labanquepoostale.fr hsbç.fr 0orange.fr activation-ameli.fr aidepaypal.com bougyuestelecom.fr compte-support-netflix.fr cpam-carte.fr dhl-security-account.fr espace-connexion.fr identifiant-icloud.fr labanquepoostale.fr account-netflix.com 0orange.fr activation-ameli.fr</p></div></div></div><div><p>Zero</p><div><div><p>Massively increase the catch rate for malicious domains — especially in their brutal early hours — by combining human-vetted threat intelligence with advanced heuristics that automatically identify high-risk patterns.</p></div><div><p><span>Newly Registered Domains (NRD)</span></p><p><span>Newly Active Domains (NAD)</span></p><p><span>Domain Generation Algorithms (DGA)</span></p><p><span>IDN Homographs</span></p><p><span>Typosquatting</span></p><p><span>DNS Rebinding</span></p><p><span>Dynamic DNS (DDNS)</span></p><p><span>Cryptojacking</span></p><p><span>Parked Domains</span></p><p><span>High-risk Top-level Domains (TLD)</span></p></div></div></div><div><p>Kids</p><div><div><p>Make any device or network safe to use for children in just a few seconds. By filtering out content from the Internet that is not suitable for children, you can provide a safe online environment for kids at home, at school and on the go.</p></div><div><div><p>No porn or other adult websites</p></div><div><p>No explicit search results</p></div><div><p>No mature videos on YouTube</p></div><div><p>No dating websites or apps</p></div><div><p>No mixed-content websites</p></div></div></div></div><div><p>Partners</p><div><p>We are looking to partner with national and pan‑European hosting providers, threat intelligence providers, CERTs and financial sponsors — talk to us at </p><a href="mailto:partners@dns0.eu">partners@dns0.eu<!-- -->.</a></div></div><div><p><span>dns0.eu</span> is available in all 24 official languages of the European Union.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[If the moon were only 1 pixel: A tediously accurate solar system model (2014) (724 pts)]]></title>
            <link>https://joshworth.com/dev/pixelspace/pixelspace_solarsystem.html</link>
            <guid>44266828</guid>
            <pubDate>Fri, 13 Jun 2025 08:40:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://joshworth.com/dev/pixelspace/pixelspace_solarsystem.html">https://joshworth.com/dev/pixelspace/pixelspace_solarsystem.html</a>, See on <a href="https://news.ycombinator.com/item?id=44266828">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="bigspace">
<!-- Sun-->


<!-- Mercury-->

<svg version="1.1" id="mercury" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10px" height="10px" viewBox="0 0 10 10">
<circle cx="5" cy="5" r="5"></circle>
</svg>
<p><img src="https://joshworth.com/dev/pixelspace/img/arrow.svg"><br>
<span id="merclabel">Mercury</span><br>
</p>


<!-- Venus-->
<svg version="1.1" id="venus" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10px" height="10px" viewBox="0 0 10 10">
<circle cx="5" cy="5" r="5"></circle>
</svg>
<p><img src="https://joshworth.com/dev/pixelspace/img/arrow.svg"><br>
<span id="venuslabel">Venus</span>
</p>

<!-- Earth-->
<svg version="1.1" id="earth" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10px" height="10px" viewBox="0 0 10 10">
<circle cx="5" cy="5" r="5"></circle>
</svg>
<div id="earthtxt">
<p><img src="https://joshworth.com/dev/pixelspace/img/arrow.svg"><br>
<span id="earthlabel">Earth</span></p><p>You Are Here</p>
</div>

<!-- Moon-->
<p><span id="moonlabel">Moon</span><br>
<img src="https://joshworth.com/dev/pixelspace/img/arrow2.svg">
</p>
<svg version="1.1" id="moon" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10px" height="10px" viewBox="0 0 10 10">
<circle cx="5" cy="5" r="5"></circle>
</svg>

<!-- Mars-->
<svg version="1.1" id="mars" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10px" height="10px" viewBox="0 0 10 10">
<circle cx="5" cy="5" r="5"></circle>
</svg>
<p><img src="https://joshworth.com/dev/pixelspace/img/arrow.svg"><br>
<span id="marslabel">Mars</span>
</p>

<!-- Jupiter-->
<svg version="1.1" id="jupiter" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10px" height="10px" viewBox="0 0 10 10">
<circle cx="5" cy="5" r="5"></circle>
</svg>
<p><img src="https://joshworth.com/dev/pixelspace/img/arrow.svg"><br>
<span id="jupiterlabel">Jupiter</span>
</p>
<!--Jupiter Moons -->
<p><span id="io"><img src="https://joshworth.com/dev/pixelspace/img/moondot.png" height="1px" width="1px"><span id="iolabel">Io</span></span>
<span id="europa"><img src="https://joshworth.com/dev/pixelspace/img/moondot.png" height="1px" width="1px"><span id="europalabel">Europa</span></span>
<span id="ganymede"><img src="https://joshworth.com/dev/pixelspace/img/moondot.png" height="2px" width="2px"><span id="ganymedelabel">Ganymede</span></span>
<span id="callisto"><img src="https://joshworth.com/dev/pixelspace/img/moondot.png" height="1px" width="1px"><span id="callistolabel">Callisto</span></span>
</p>

<!-- Saturn-->
<p><img src="https://joshworth.com/dev/pixelspace/img/saturn.svg" id="saturn"></p><p><img src="https://joshworth.com/dev/pixelspace/img/arrow.svg"><br>
<span id="saturnlabel">Saturn</span>
</p>

<!--Titan  -->
<p><span id="titan"><img src="https://joshworth.com/dev/pixelspace/img/moondot.png" height="1px" width="1px"><span id="titanlabel">Titan</span></span>
</p>

<!-- Uranus -->
<svg version="1.1" id="uranus" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10px" height="10px" viewBox="0 0 10 10">
<circle cx="5" cy="5" r="5"></circle>
</svg>
<p><img src="https://joshworth.com/dev/pixelspace/img/arrow.svg"><br>
<span id="uranuslabel">Uranus</span>
</p>

<!-- Neptune -->
<svg version="1.1" id="neptune" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10px" height="10px" viewBox="0 0 10 10">
<circle cx="5" cy="5" r="5"></circle>
</svg>
<p><img src="https://joshworth.com/dev/pixelspace/img/arrow.svg"><br>
<span id="neptunelabel">Neptune</span>
</p>

<!-- Pluto -->
<svg version="1.1" id="pluto" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10px" height="10px" viewBox="0 0 10 10">
<circle cx="5" cy="5" r="5"></circle>
</svg>
<p><img src="https://joshworth.com/dev/pixelspace/img/arrow.svg"><br>
<span id="plutolabel">Pluto</span><span><br></span>
<span id="we-still-love">(we still love you)</span>
</p>

<p>That was about 10 million km (6,213,710 mi) just now.</p>
<p>Pretty empty out here.</p>
<p>Here comes our first planet...</p>
<p>As it turns out, things are pretty far apart.</p>
<p>We’ll be coming up on a new planet soon. Sit tight.</p>
<p>Most of space is just space.</p>
<p>Halfway home.</p>
<p>Destination: Mars!</p>
<p><span id="it-would-take">It would take about seven months to travel this distance in a spaceship. </span><span>&nbsp;</span><span id="better-be-some">Better be some good in-flight entertainment.</span>
<span>&nbsp;</span><span id="in-case-youre">In case you're wondering, you'd need about 2000 feature-length movies to occupy that many waking hours.</span></p>
<p>Sit back and relax. Jupiter is more than 3 times as far as we just traveled.</p>
<p>When are we gonna be there?</p>
<p>Seriously. When are we gonna be there?</p>
<p><span id="this-is-where">This is where we might at least see some asteroids to wake us up. </span><span>&nbsp;</span><span id="too-bad-theyre">Too bad they're all too small to appear on this map.</span></p>
<p>I spy, with my little eye... something black.</p>
<p>If you were on a road trip, driving at 75mi/hr, it would have taken you over 500 years to get here from earth.</p>
<p><span id="all-these-distances">All these distances are just averages, mind you.</span>  <span>&nbsp;</span><span id="the-distance-between">The distance between planets really depends on where the two planets are in their orbits around the sun.</span><span>&nbsp;</span><span id="so-if-youre">So if you're planning on taking a trip to Jupiter, you might want to use a different map.</span></p>
<p><span id="if-you-plan">If you plan it right, you can actually move relatively quickly between planets.</span><span>&nbsp;</span><span id="the-new-horizons">The New Horizons space craft that launched in 2006 only took 13 months to get to Jupiter.</span><span>&nbsp;</span><span id="dont-worry-itll">Don't worry. It'll take a lot less than 13 months to scroll there.</span></p>
 <p>Pretty close to Jupiter now.</p>
 <p>Sorry. That was a lie before. Now we really are pretty close.</p>
<!-- Jupiter 224041px -->
 <p>Lots of time to think out here...</p>
 <p>Pop the champagne! We just passed 1 billion km.</p>
  <p><span id="i-guess-this">I guess this is why most maps of the solar system aren't drawn to scale.</span><span>&nbsp;</span><span id="its-not-hard"> It's not hard to draw the planets. </span><span>&nbsp;</span><span id="its-the-empty">It's the empty space that's a problem.</span></p>
 <p>Most space charts leave out the most significant part – all the space.</p>
  <p>We're used to dealing with things at a much smaller scale than this.</p>
 <p><span id="when-it-comes">When it comes to things like the age of the earth, the number of snowflakes in Siberia, the national debt...</span><span>&nbsp;</span><span id="those-things-are">Those things are too much for our brains to handle.</span></p>
 <!--Saturn 412397px-->
 <p>We need to reduce things down to something we can see or experience directly in order to understand them.</p>
 <p>We're always trying to come up with metaphors for big numbers. Even so, they never seem to work.</p>
  <p>Let's try a few metaphors anyway...</p>
  <p><span id="you-would-need">You would need</span> <span id="monitors"></span> <span id="of-these-screens">of these screens lined up side-by-side to show this whole map at once.</span><span id="depth"></span></p>
   <p><span id="if-this-map">If this map was printed from a quality printer (300 pixels per inch) the earth would be invisible, and the width of the paper would need to be 475 feet.</span><span>&nbsp;</span><span id="475-feet-is">475 feet is about 1 and 1/2 football fields.</span></p>
   <p><span id="even-though-we">Even though we don’t really understand them, a lot can happen within these massive lengths of time and space.</span><span>&nbsp;</span> <span id="a-drop-of">A drop of water can carve out a canyon.</span><span>&nbsp;</span><span id="an-amoeba-can">An amoeba can become a dolphin.</span><span>&nbsp;</span><span id="a-star-can">A star can collapse on itself.</span></p>
  <p>It’s easy to disregard nothingness because there’s no thought available to encapsulate it. There’s no metaphor that fits because, by definition, once the nothingness becomes tangible, it ceases to exist.</p>
     <p><span id="its-a-good">It’s a good thing we have these tiny stars and planets, otherwise we’d have no point of reference at all.</span><span>&nbsp;</span><span id="wed-be-surrounded">We’d be surrounded by this stuff that our minds weren’t built to understand.</span></p>
    <p>All this emptiness really could drive you nuts. For instance, if you’re in a sensory deprivation tank for too long, your brain starts to make things up. You see and hear things that aren’t there.</p>
     <p>The brain isn't built to handle "empty."</p>
   <p>"Sorry, Humanity," says Evolution. "What with all the jaguars trying to eat you, the parasites in your fur, and the never-ending need for a decent steak, I was a little busy. I didn’t exactly have time to come up with a way to conceive of vast stretches of nothingness."</p>
   <p>Neurologically speaking, we really only deal with matter of a certain size, and energy of a few select wavelengths. For everything else, we have to make up mental models and see if they match up to the tiny shreds of hard evidence that actually feel real.</p>
      <p><span id="the-mental-models">The mental models provided by mathematics are extremely helpful when trying to make sense of these vast distances, but still...</span><span>&nbsp;</span><span id="abstraction-is-pretty">Abstraction is pretty unsatisfying.</span></p>
      <p>When you hear people talk about how, "there’s more to this universe than our minds can conceive of" it's usually a way to get you to go along with a half-baked plot point about UFOs or super-powers in a sci-fi series that you're watching late at night when you can’t get to sleep.</p>
      <p>Even when Shakespeare wrote: "There are more things in heaven and earth, Horatio, Than are dreamt of in your philosophy” – he's basically trying to give us a loophole to make the ghost in the story more believable.</p>
      <!-- Uranus 827961px-->
      <p>But all this empty space, these things of a massive scale, really are more than our minds can conceive of. The maps and metaphors fail to do them justice.</p>       
      <p>You look at one tiny dot, then you look for the next tiny dot. Everything in between is inconsequential and fairly boring.</p>
      <p>Emptiness is actually everywhere. It’s something like 99.9999999999999999999958% of the known universe.</p>
      <p>Even an atom is mostly empty space.</p>
      <p>If the proton of a hydrogen atom was the size of the sun on this map, we would need 11 more of these maps to show the average distance to the electron.</p>
      <p><span id="some-theories-say">Some theories say all this emptiness is actually full of energy or dark matter and that nothing can truly be empty...</span><span>&nbsp;</span><span id="but-come-on">but come on, only ordinary matter has any meaning for us.</span></p>
      <p>You could safely say the universe is a "whole lotta nothing."</p>
		<p>If so much of the universe is made up of emptiness, what does that mean to people like us, living on a tiny speck in the middle of all of it?</p>
        <p><span id="is-the-known">Is the known universe 99.9999999999999999999958% empty?</span><span>&nbsp;</span><span id="or-is-it">Or is it 0.0000000000000000000042% full?</span></p>
        <p>With so much emptiness, aren't stars, planets, and people just glitches in an otherwise elegant and uniform nothingness, like pieces of lint on a black sweater?</p>
        <p>But without the tiny dots for it to stretch between, there would be no emptiness to measure, and for that matter, no one around to measure it.</p>
        <p><span id="you-might-say">You might say that so much emptiness makes the tiny bits of matter that much more meaningful - simply by the fact that, against all odds,  they <em>aren't</em> empty.</span><span>&nbsp;</span><span id="if-youre-drowning">If you're drowning in the middle of the ocean, a floating piece of driftwood is a pretty big deal.</span></p>
        <p> What if trillions of stars and planets were crammed right next to each other? They wouldn't be special at all.</p>
        <p>It seems like we are both pathetically insignificant, and miraculously important at the same time.</p>
        <p><span id="whether-you-more">Whether you more strongly feel the monumental significance of tiny things or the massive void between them depends on who you are, and how your brain chemistry is balanced at a particular moment. </span><span id="we-walk-around">We walk around with miniature, emotional versions of the universe inside of us.</span></p>
        <p>It's reassuring to know that no matter how depressingly bleak or ridiculously momentous we feel, the universe, judging by its current structure, seems well aware of both extremes.</p>
  <!-- Neptune 1295901px-->
<p>The fact that you're here, in the midst of all this nothing, is pretty amazing when you stop and think about it.</p>
<p>Congratulations on making it this far.</p>
<!-- Pluto 1699574px-->

	

<div id="distance-counter"><p><span id="selectarrow"><img src="https://joshworth.com/dev/pixelspace/img/select-arrow.svg"></span></p><div id="unitselect">
<ul>
<li><a href="" id="km">km</a></li>
<li><a href="" id="mi">mi</a></li>
<li><a href="" id="au">AU</a></li>
<li><a href="" id="lightminutes">Light Minutes</a></li>
<li><a href="" id="earths">Earths</a></li>
<li><a href="" id="pixels">Pixels</a></li>
<li><a href="" id="buses">Buses</a></li>
<li><a href="" id="bluewhales">Blue Whales</a></li>
<li><a href="" id="greatwalls">Great Walls of China</a></li>
</ul>
</div>
</div>
<!--start over
<div id="reloader"><a href=""><img src="img/reload.svg"><span class="warpfactor"> </span></a>
</div> -->
<!--lightspeed! -->
<p><a href=""><img src="https://joshworth.com/dev/pixelspace/img/lightspeed3.svg"><span> </span></a>
</p>
<!-- this message fades in and out -->
<div id="lightspeedmsg"><p>This is how fast light travels...</p><p>It's the fastest speed allowed by the universe...</p><p>Seriously.</p><p>If you're in a hurry to get somewhere in space...</p><p>you'll need to take it up with Mr. Einstein.</p></div>
<!--credit-->

<!--ad-->
<p><a href="https://www.igg.me/at/comingle" target="_blank"><img alt="Visit Comingle" src="https://joshworth.com/dev/pixelspace/img/comingle-link.svg"></a>
</p>

<!--donate
<div id="donate">
<form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_blank">
<input type="hidden" name="cmd" value="_s-xclick">
<input type="hidden" name="hosted_button_id" value="8VUQV2NCQ7WZ6">
<input type="image" src="img/donate-btn.svg" border="0" name="submit" alt="Donate via PayPal">
<img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1">
</form>
</div>-->
<!--language select. -->
<div id="langselect">
<p><img src="https://joshworth.com/dev/pixelspace/img/language-icon.svg"></p><div id="langs">
<ul>
<li><a href="#en">English</a></li>
<li><a href="#es">Español</a></li>
<li><a href="#fr">Français</a></li>
<li><a href="#de">Deutsch</a></li>
<li><a href="#it">Italiano</a></li>
<li><a href="#jp">日本語</a></li>
<li><a href="#zh">简体中文</a></li>
<li><a href="#zt">正體中文</a></li>
<li><a href="#vi">TiếngViệt</a></li>
<li><a href="#kr">한국어</a></li>
<li><a href="#nl">Nederlands</a></li>
<li><a href="#sv">Svenska</a></li>
<li><a href="#hu">Magyar</a></li>
<li><a href="#bg">Български</a></li>
<li><a href="#pt">Português</a></li>
<li><a href="#tr">Türkçe</a></li>
<li><a href="#ro">Română</a></li>
<li><a href="#pl">Polski</a></li>
<li><a href="#ru">Русский</a></li>
<li><a href="#ua">Українська</a></li>
<li><a href="#iw">עברית</a></li>
<li><a href="#el">ελληνικά</a></li>
<li><a href="#hy">Հայերէն</a></li>
<li><a href="#uz">Uzbek</a></li>
</ul>
</div>

</div>

</div></div>]]></description>
        </item>
    </channel>
</rss>