<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 09 Jul 2024 04:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Rye: A Hassle-Free Python Experience (147 pts)]]></title>
            <link>https://rye.astral.sh/</link>
            <guid>40911637</guid>
            <pubDate>Tue, 09 Jul 2024 01:18:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rye.astral.sh/">https://rye.astral.sh/</a>, See on <a href="https://news.ycombinator.com/item?id=40911637">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<div>
<p>To install you can run a curl command which will install the right binary for your
operating system and CPU architecture and install it:</p>
<div><pre><span></span><code>curl<span> </span>-sSf<span> </span>https://rye.astral.sh/get<span> </span><span>|</span><span> </span>bash
</code></pre></div>
<p>Alternatively if you don't trust this approach, you can download the latest release
binary.  On first run it will install itself.</p>
<ul>
<li><a href="https://github.com/astral-sh/rye/releases/latest/download/rye-x86_64-linux.gz">rye-x86_64-linux.gz</a> for 64bit Intel computers</li>
<li><a href="https://github.com/astral-sh/rye/releases/latest/download/rye-aarch64-linux.gz">rye-aarch64-linux.gz</a> for 64bit ARM computers</li>
</ul>
<div><pre><span></span><code>gunzip<span> </span>rye-x86_64-linux.gz
chmod<span> </span>+x<span> </span>./rye-x86_64-linux
./rye-x86_64-linux
</code></pre></div>
</div>
<div>
<p>To install you can run a curl command which will install the right binary for your
operating system and CPU architecture and install it:</p>
<div><pre><span></span><code>curl<span> </span>-sSf<span> </span>https://rye.astral.sh/get<span> </span><span>|</span><span> </span>bash
</code></pre></div>
<p>Alternatively if you don't trust this approach, you can download the latest release
binary.  On first run it will install itself.</p>
<ul>
<li><a href="https://github.com/astral-sh/rye/releases/latest/download/rye-aarch64-macos.gz">rye-aarch64-macos.gz</a> for M1/M2 Macs</li>
<li><a href="https://github.com/astral-sh/rye/releases/latest/download/rye-x86_64-macos.gz">rye-x86_64-macos.gz</a> for Intel Macs</li>
</ul>
<div><pre><span></span><code>gunzip<span> </span>rye-aarch64-macos.gz
chmod<span> </span>+x<span> </span>./rye-aarch64-macos
./rye-aarch64-macos
</code></pre></div>
</div>
<div>
<p>To install Rye on windows download the latest release and run the binary.  Upon
first run it will install itself.  Please note that it's strongly recommended
to have "Developer Mode" activated when using Rye and before starting the
installation.  <a href="https://rye.astral.sh/guide/faq/">Learn more</a>.</p>
<ul>
<li><a href="https://github.com/astral-sh/rye/releases/latest/download/rye-x86_64-windows.exe">rye-x86_64-windows.exe</a> for 64bit Intel Windows</li>
<li><a href="https://github.com/astral-sh/rye/releases/latest/download/rye-x86-windows.exe">rye-x86-windows.exe</a> for 32bit Intel Windows</li>
</ul>
<div>
<p>Note</p>
<p>Rye does not yet use signed binaries which means that you will need to allow
the execution of the downloaded executable.  If there is no obvious way to do so, click
on "More info" on the error message that shows up and then on "Run anyway".</p>
<p>Additionally sometimes a Trojan warning about "Bearfoos" is shown.  This is a false
positive.  For more information see the discussion <a href="https://github.com/astral-sh/rye/issues/468">Windows Bearfoos
virus associated with rye</a>.</p>
</div>
</div>
<div>
<p>You need to have Rust and Cargo installed.  If you don't have, you can use
<a href="https://rustup.rs/">rustup</a> to get them onto your machine.</p>
<p>Afterwards you can install <code>Rye</code> via <code>cargo</code>:</p>
<div><pre><span></span><code>cargo<span> </span>install<span> </span>--git<span> </span>https://github.com/astral-sh/rye<span> </span>rye
</code></pre></div>
</div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[DB Browser for SQLite (Windows, macOS, and Most Versions of Linux) (151 pts)]]></title>
            <link>https://sqlitebrowser.org/</link>
            <guid>40909076</guid>
            <pubDate>Mon, 08 Jul 2024 20:08:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sqlitebrowser.org/">https://sqlitebrowser.org/</a>, See on <a href="https://news.ycombinator.com/item?id=40909076">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
    <div>
      <p><a href="https://github.com/sqlitebrowser/sqlitebrowser/wiki"><img src="https://img.shields.io/badge/docs-Wiki-blue.svg" alt="Wiki"></a>
<a href="https://gitter.im/sqlitebrowser/sqlitebrowser"><img src="https://badges.gitter.im/sqlitebrowser/sqlitebrowser.svg" alt="Join the chat at https://gitter.im/sqlitebrowser/sqlitebrowser"></a>
<a href="https://github.com/sqlitebrowser/sqlitebrowser/releases"><img src="https://img.shields.io/github/downloads/sqlitebrowser/sqlitebrowser/total.svg" alt="Download"></a>
<a href="https://www.qt.io/"><img src="https://img.shields.io/badge/Qt-qmake-green.svg" alt="Qt"></a>
<a href="https://scan.coverity.com/projects/sqlitebrowser-sqlitebrowser"><img src="https://img.shields.io/coverity/scan/11712.svg" alt="Coverity"></a>
<a href="https://www.patreon.com/bePatron?u=11578749"><img src="https://img.shields.io/badge/donate-Patreon-coral.svg" alt="Patreon"></a></p>

<p><em>DB Browser for SQLite</em> (DB4S) is a high quality, visual,
<a href="https://github.com/sqlitebrowser/sqlitebrowser">open source</a> tool
designed for people who want to create, search, and edit
<a href="https://www.sqlite.org/">SQLite</a> database files.
DB4S gives a familiar spreadsheet-like interface on the database
in addition to providing a full SQL query facility.
It works with <a href="https://sqlitebrowser.org/dl#windows">Windows</a>,
<a href="https://sqlitebrowser.org/dl#macos">macOS</a>,
and most versions of <a href="https://sqlitebrowser.org/dl#linux">Linux</a>
and <a href="https://sqlitebrowser.org/dl#freebsd">Unix</a>.
Documentation for the program is on the <a href="https://github.com/sqlitebrowser/sqlitebrowser/wiki">wiki.</a></p>
<p><img src="https://sqlitebrowser.org/images/screenshot.png" alt="DB Browser for SQLite Screenshot" title="DB Browser for SQLite Screenshot"></p>
<p>DB4S gives access to the full capability of the underlying SQLite database.
Controls and wizards are available to:</p>
<ul>
<li>Create and compact database files</li>
<li>Create, define, modify and delete tables</li>
<li>Create, define, and delete indexes</li>
<li>Browse, edit, add, and delete records</li>
<li>Sort and search records</li>
<li>Import and export records as text</li>
<li>Import and export tables from/to CSV files</li>
<li>Import and export databases from/to SQL dump files</li>
<li>Issue SQL queries and inspect the results</li>
<li>Examine a log of all SQL commands issued by the application</li>
<li>Plot simple graphs based on table or query data</li>
</ul>
<h2 id="current-status">Current Status</h2>
<p>The current official, released version of DB4S is 3.12.2. Download from:
<a href="https://sqlitebrowser.org/dl/">https://sqlitebrowser.org/dl/</a></p>
<p>There is a 3.13.x-rc1 release candidate available that will
soon become the official release.
It is believed to be quite reliable and can be downloaded from:
<a href="https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.13.x-rc1">https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.13.x-rc1</a></p>
<p>There are also nightly builds that are not warranted to be reliable
(or even to work properly). They are available from:
<a href="https://nightlies.sqlitebrowser.org/latest/">https://nightlies.sqlitebrowser.org/latest/</a></p>
<h2 id="windows-code-signing-policy">Windows Code-Signing Policy</h2>
<p><em>Free code signing on Windows binaries provided by <a href="https://signpath.io/">SignPath.io</a>, certificate by <a href="https://signpath.org/">SignPath Foundation</a>.</em></p>
<hr>

    </div>
  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Anna's Archive Faces Millions in Damages and a Permanent Injunction (208 pts)]]></title>
            <link>https://torrentfreak.com/annas-archive-faces-millions-in-damages-and-a-permanent-injunction-240708/</link>
            <guid>40908878</guid>
            <pubDate>Mon, 08 Jul 2024 19:52:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://torrentfreak.com/annas-archive-faces-millions-in-damages-and-a-permanent-injunction-240708/">https://torrentfreak.com/annas-archive-faces-millions-in-damages-and-a-permanent-injunction-240708/</a>, See on <a href="https://news.ycombinator.com/item?id=40908878">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img loading="lazy" decoding="async" src="https://torrentfreak.com/images/annasar.jpg" alt="anna's archive" width="198" height="198" srcset="https://torrentfreak.com/images/annasar.jpg 198w, https://torrentfreak.com/images/annasar-150x150.jpg 150w" sizes="(max-width: 198px) 100vw, 198px"><a href="https://en.wikipedia.org/wiki/Anna%27s_Archive">Anna’s Archive</a> is a meta-search engine for shadow libraries that allows users to find pirated books and other related sources.</p>
<p>The site launched in <a href="https://torrentfreak.com/annas-archive-opens-the-door-to-z-library-and-other-pirate-libraries-221118/">the fall of 2022</a>, just days after Z-Library was targeted in a U.S. criminal crackdown, to ensure continued availability of ‘free’ books and articles to the broader public. </p>
<p>Late last year, Anna’s Archive <a href="https://torrentfreak.com/annas-archive-scraped-worldcat-to-help-preserve-all-books-in-the-world-231003/">expanded its offering</a> by making information from OCLC’s proprietary <a href="https://en.wikipedia.org/wiki/WorldCat">WorldCat database</a> available online. The site’s operators took more than a year to scrape several terabytes of data and published roughly 700 million unique records online, for free.</p>
<center><img loading="lazy" decoding="async" src="https://torrentfreak.com/images/worldcattorrent.jpg" alt="worldcat" width="600" height="338" srcset="https://torrentfreak.com/images/worldcattorrent.jpg 871w, https://torrentfreak.com/images/worldcattorrent-300x169.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></center>
<p>This ‘metadata’ heist was a massive breakthrough in the site’s quest to archive as much published content as possible. However, OCLC wasn’t pleased and <a href="https://torrentfreak.com/lawsuit-accuses-annas-archive-of-hacking-worldcat-stealing-2-2-tb-data-240207/">responded with a lawsuit</a> at an Ohio federal court, accusing the site and its operators of hacking and demanding damages. </p>
<p>The non-profit says that it spent more than a million dollars responding to Anna’s Archive’s alleged hacking efforts. Even then, it couldn’t prevent the data from being released through a torrent. </p>
<p>“Defendants, through the Anna’s Archive domains, have made, and continue to make, all 2.2 TB of WorldCat® data available for public download through its torrents,” OCLC wrote in the complaint it filed in an Ohio federal court.</p>
<h2>No Response from Anna’s Archive</h2>
<p>In the months that passed since then, the operators of Anna’s Archive didn’t respond in court. The only named defendant <a href="https://torrentfreak.com/key-defendant-in-annas-archive-lawsuit-denies-any-involvement-with-the-site-240416/">flat-out denied</a> all connections to the site, and OCLC didn’t receive any response from any of the official Anna’s Archive email addresses that were served. </p>
<p>Meanwhile, the pirate library continues to offer the WorldCat® data, which is a major problem for the organization. Without the prospect of a two-sided legal battle, OCLC has now moved for a default judgment. </p>
<p>“OCLC respectfully prays that a default judgment be entered in its favor against defendant Anna’s Archive and that OCLC be granted declaratory judgment, injunctive relief, and monetary damages,” the non-profit writes. </p>
<p>The plaintiff notes that it continues to fight an unknown defendant who is unwilling to show up in court. Therefore, a default judgment is the only option it has left.</p>
<h2>Millions in Damages</h2>
<p>While the exact scale of the damages has yet to be established, OCLC states that it has suffered considerable harm. In response to the massive scraping operation, which caused substantial downtime, its technical infrastructure had to be upgraded and improved. </p>
<p>For example, the organization spent $1,548,693 on upgrades for its hardware infrastructure, and an additional $608,069 for a two-year Cloudflare contract that helps to protect the service against malicious outside attacks. </p>
<center><img loading="lazy" decoding="async" src="https://torrentfreak.com/images/cloudfoclc.jpg" alt="cloudflare oclc" width="600" height="234" srcset="https://torrentfreak.com/images/cloudfoclc.jpg 1111w, https://torrentfreak.com/images/cloudfoclc-300x117.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></center>
<p>Other costs include the salaries of 34 full-time employees, who were tasked with mitigating the harm caused by the attacks, as well as various other investigation, security, and hardware-related costs. </p>
<p>Adding up all the extra charges brings total damages to over $5 million; OCLC says the harm is ongoing, so that number continues to rise.</p>
<p>“OCLC has incurred damages of $5,333,064 as a direct result of Anna’s Archive’s cyberattacks, but that amount does not fully compensate OCLC for the harm from Anna’s Archive’s wrongful actions. OCLC continues to suffer from harms that cannot be remedied by monetary damages.” </p>
<h2>Site Blocking?</h2>
<p>In addition to monetary damages, the non-profit also seeks injunctive relief. The motion doesn’t specify the requested measures, but the original complaint sought an order that prevents Anna’s Archive from scraping WorldCat data going forward. </p>
<p>In addition, all previously scraped data should no longer be distributed. Instead, it should be destroyed in full, including all the torrents that are currently being offered. </p>
<p>OCLC says the requested injunctive relief is warranted, noting that this isn’t the first time that rightsholders have requested courts to take action against the site. Multiple countries and publishers have already recognized the illegality of Anna’s Archive’s pirate activities by issuing site blocking injunctions against its domains. </p>
<p>“Anna’s Archive has been banned in several other countries for its deliberate violations of copyright laws, and publishers are making shutting down Anna’s Archive a top priority,” the motion reads, referencing bans in <a href="https://torrentfreak.com/silenzio-annas-archive-shadow-library-blocked-following-publishers-complaint-240104/">Italy</a> and <a href="https://torrentfreak.com/dutch-court-orders-isp-to-block-annas-archiveand-libgen-240322/">The Netherlands</a>. </p>
<p>“Therefore, the public interest will be served by an injunction that curtails the continuing harm from Anna’s Archive’s flagrant disregard for the law,” OCLC adds. </p>
<h2>Domain Suspension?</h2>
<p>The current motion doesn’t include a request for site blocking in the United States. However, it is possible that OCLC may ask more concrete measures in the future. That could also include a potential domain suspension. </p>
<p>In this light, it is interesting to note that Anna’s Archive moved away from its .org domain about a week ago. The .org domain is managed by the <a href="https://en.wikipedia.org/wiki/Public_Interest_Registry">Public Interest Registry</a> with Tucows as the registrar, both of which fall under the jurisdiction of U.S. courts. </p>
<center><img loading="lazy" decoding="async" src="https://torrentfreak.com/images/annanews.jpg" alt="anna new doman name" width="500" height="185" srcset="https://torrentfreak.com/images/annanews.jpg 711w, https://torrentfreak.com/images/annanews-300x111.jpg 300w" sizes="(max-width: 500px) 100vw, 500px"></center>
<p>Anna’s Archive switched to a .GS domain instead, which falls under the UK-based <a href="https://nic.gs/">Atlantis North</a> registry. That domain was registered by domain privacy provider Njalla, which adds another layer of complexity from an enforcement perspective.</p>
<p>As things stand, it appears that Anna’s Archive is not going anywhere. While OCLC may very well have the law on its side, enforcing it may turn out to be quite the challenge. </p>
<p><em>—</em></p><p><em>A copy of OCLC’s request for a default judgment against the unnamed “Anna’s Archive” defendant, submitted at an Ohio federal court, is available <a href="https://torrentfreak.com/images/anna-default.pdf">here (pdf)</a></em></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to use the Bitwarden forwarded email alias generator (115 pts)]]></title>
            <link>https://bitwarden.com/blog/how-to-use-the-bitwarden-forwarded-email-alias-generator/</link>
            <guid>40908855</guid>
            <pubDate>Mon, 08 Jul 2024 19:50:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bitwarden.com/blog/how-to-use-the-bitwarden-forwarded-email-alias-generator/">https://bitwarden.com/blog/how-to-use-the-bitwarden-forwarded-email-alias-generator/</a>, See on <a href="https://news.ycombinator.com/item?id=40908855">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><ol><li><a href="https://bitwarden.com/blog/" title="Blog"><b>Blog</b></a></li><li><span></span>How to use the Bitwarden forwarded email alias generator</li></ol><section><p>Bitwarden includes a very handy integration that you may not be aware of called forwarded <a href="https://bitwarden.com/blog/add-privacy-and-security-using-email-aliases-with-bitwarden/">email aliases</a>. Essentially, they make it possible to forward any message received to your personal email. The aliases are private and never include anything in the address that would reveal any information about you.&nbsp;</p><p>But why would you need this?</p><p>Take, for instance, any time you sign up for an online service or subscription. When you do, you typically use your personal email address, which means that address could be sold by the original company and land you on numerous mailing lists or worse. In the name of all things privacy, you don't want that.</p><p>There are <a href="https://bitwarden.com/help/generator/#username-types">plenty of services</a> that offer email aliases, such as SimpleLogin, Addy.io, Firefox Relay, Fastmail, DuckDuckGo, and Forward Email. In fact, Bitwarden supports each of those. Of course, you do have to already have an account with one of those services, and some of those services are free. You'll want to check into which service you prefer and sign up.</p></section><div><p data-testid="videoplayer"><iframe src="https://www.youtube.com/embed/mQMAu7bDYmU?rel=0&amp;modestbranding=1" title="Bitwarden video" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0"></iframe></p></div><section><p>So, how do you make them work with Bitwarden? Let’s take a look.</p><p id="what-youll-need"><a href="#what-youll-need" title="#what-youll-need"><svg version="1.1" viewBox="0 0 32 32"><path d="M30.939 9.669l-7.372-0.014 1.332-8.422c0.022-0.138 0.016-0.279-0.016-0.415s-0.092-0.264-0.174-0.377c-0.082-0.113-0.186-0.209-0.305-0.282s-0.251-0.122-0.389-0.144-0.279-0.016-0.415 0.016c-0.136 0.033-0.264 0.092-0.377 0.174-0.229 0.166-0.382 0.415-0.426 0.694l-1.388 8.75-8.728-0.018 1.316-8.31c0.028-0.141 0.027-0.286-0.002-0.426s-0.087-0.274-0.169-0.391c-0.082-0.118-0.187-0.218-0.309-0.294s-0.257-0.127-0.399-0.15c-0.142-0.022-0.287-0.016-0.426 0.019s-0.27 0.097-0.384 0.184c-0.114 0.087-0.21 0.195-0.282 0.32s-0.117 0.262-0.134 0.405l-1.366 8.64-7.776-0.016c-0.283 0-0.554 0.112-0.754 0.312s-0.312 0.471-0.312 0.754c0 0.283 0.112 0.554 0.312 0.754s0.471 0.312 0.754 0.312l7.442 0.014-1.4 8.876-7.718-0.016c-0.283 0-0.554 0.112-0.754 0.312s-0.312 0.471-0.312 0.754c0 0.283 0.112 0.554 0.312 0.754s0.471 0.312 0.754 0.312l7.384 0.016-1.266 8c-0.044 0.279 0.024 0.564 0.19 0.793s0.416 0.382 0.694 0.427c0.052 0.009 0.104 0.013 0.156 0.014 0.254 0 0.499-0.091 0.692-0.256s0.32-0.394 0.358-0.644l1.32-8.33 8.73 0.018-1.248 7.89c-0.044 0.279 0.024 0.564 0.19 0.793s0.415 0.382 0.694 0.427c0.056 0.009 0.112 0.013 0.168 0.014 0.253-0.001 0.498-0.092 0.691-0.257s0.32-0.393 0.359-0.643l1.3-8.218 7.762 0.016c0.283 0 0.554-0.112 0.754-0.312s0.312-0.471 0.312-0.754c0-0.283-0.112-0.554-0.312-0.754s-0.471-0.312-0.754-0.312l-7.428-0.016 1.4-8.876 7.704 0.016c0.283 0 0.554-0.112 0.754-0.312s0.312-0.471 0.312-0.754-0.112-0.554-0.312-0.754c-0.2-0.2-0.471-0.312-0.754-0.312h0.014zM19.671 20.657l-8.732-0.018 1.4-8.876 8.73 0.018-1.398 8.876z"></path></svg></a><h2>What you'll need</h2></p><p>To start, you'll need a Bitwarden account. This feature is available on the desktop app, web app, browser extension, and mobile app, but this blog will walk through using it with the desktop app. You'll also need the access API token for your email relay service. Which service you use will determine where the API token is located. It can be a bit tricky to locate this information. For example, with DuckDuckGo, here are the steps:</p><ol><li><p>Go to the Autofill tab on the DuckDuckGo email protection page.</p></li><li><p>Open your web browser's developer tools.</p></li><li><p>Click the Generate Private Duck Address button and then go to the Network tab in the developer tools window.&nbsp;</p></li><li><p>Select the Addresses call for the API POST request.</p></li><li><p>Locate the API authorization item, which will look like <i>authorization: Bearer &lt;TOKEN&gt; </i>Where TOKEN is your authorization token.</p></li><li><p>Copy the authorization token, as you will need that later.</p></li></ol><p>In Firefox Relay, you'll find the authorization token in Settings, which you access via your profile icon. In the Settings window, you'll see the API Key listed.</p><p>With those things in place, it's time to work with Bitwarden.</p><p id="setting-up-the-forwarded-email-alias"><a href="#setting-up-the-forwarded-email-alias" title="#setting-up-the-forwarded-email-alias"><svg version="1.1" viewBox="0 0 32 32"><path d="M30.939 9.669l-7.372-0.014 1.332-8.422c0.022-0.138 0.016-0.279-0.016-0.415s-0.092-0.264-0.174-0.377c-0.082-0.113-0.186-0.209-0.305-0.282s-0.251-0.122-0.389-0.144-0.279-0.016-0.415 0.016c-0.136 0.033-0.264 0.092-0.377 0.174-0.229 0.166-0.382 0.415-0.426 0.694l-1.388 8.75-8.728-0.018 1.316-8.31c0.028-0.141 0.027-0.286-0.002-0.426s-0.087-0.274-0.169-0.391c-0.082-0.118-0.187-0.218-0.309-0.294s-0.257-0.127-0.399-0.15c-0.142-0.022-0.287-0.016-0.426 0.019s-0.27 0.097-0.384 0.184c-0.114 0.087-0.21 0.195-0.282 0.32s-0.117 0.262-0.134 0.405l-1.366 8.64-7.776-0.016c-0.283 0-0.554 0.112-0.754 0.312s-0.312 0.471-0.312 0.754c0 0.283 0.112 0.554 0.312 0.754s0.471 0.312 0.754 0.312l7.442 0.014-1.4 8.876-7.718-0.016c-0.283 0-0.554 0.112-0.754 0.312s-0.312 0.471-0.312 0.754c0 0.283 0.112 0.554 0.312 0.754s0.471 0.312 0.754 0.312l7.384 0.016-1.266 8c-0.044 0.279 0.024 0.564 0.19 0.793s0.416 0.382 0.694 0.427c0.052 0.009 0.104 0.013 0.156 0.014 0.254 0 0.499-0.091 0.692-0.256s0.32-0.394 0.358-0.644l1.32-8.33 8.73 0.018-1.248 7.89c-0.044 0.279 0.024 0.564 0.19 0.793s0.415 0.382 0.694 0.427c0.056 0.009 0.112 0.013 0.168 0.014 0.253-0.001 0.498-0.092 0.691-0.257s0.32-0.393 0.359-0.643l1.3-8.218 7.762 0.016c0.283 0 0.554-0.112 0.754-0.312s0.312-0.471 0.312-0.754c0-0.283-0.112-0.554-0.312-0.754s-0.471-0.312-0.754-0.312l-7.428-0.016 1.4-8.876 7.704 0.016c0.283 0 0.554-0.112 0.754-0.312s0.312-0.471 0.312-0.754-0.112-0.554-0.312-0.754c-0.2-0.2-0.471-0.312-0.754-0.312h0.014zM19.671 20.657l-8.732-0.018 1.4-8.876 8.73 0.018-1.398 8.876z"></path></svg></a><h2>Setting up the forwarded email alias</h2></p><p>Open Bitwarden and create a new vault entry. In the new entry setup window, click the Username Generator icon and, in the resulting window, click to expand the OPTIONS section.</p><p>Under the Options section, you'll see the Forwarded Email Alias entry listed. Check that option and then select the service you wish to use from the Service drop-down (<strong>Figure 1</strong>).</p></section><figure><img alt="Figure 1: Using the DuckDuckGo service." __typename="ContentfulComponentImage" id="abb54745-c5e0-578f-a2a4-9fe7130defa6" height="550" width="497" src="https://res.cloudinary.com/bw-com/image/upload/f_auto/v1/ctf/7rncvj1f8mw7/4qJYJicud86Xp3dy8mx6Jg/60c44fa2b52e61ce43e2817b8ced18df/bwemailalias1.jpg?_a=BAJFJtWI0"><figcaption><cite>Figure 1: Using the DuckDuckGo service.</cite></figcaption></figure><section><p>Under API Access Token, paste the token you copied. Once Bitwarden verifies the access token, click the two circles with arrows at the top section of the window and a random relay email address will be chosen. Click the check mark to save the username. The username will now be populated with the forwarded email alias. Fill in the rest of the details for the vault entry and then save your work.&nbsp;</p><p>And there you have it! You've generated an email alias in Bitwarden that can then be used to sign up for services and accounts, without sacrificing the privacy of your personal email address.</p><p id="get-started-with-bitwarden"><a href="#get-started-with-bitwarden" title="#get-started-with-bitwarden"><svg version="1.1" viewBox="0 0 32 32"><path d="M30.939 9.669l-7.372-0.014 1.332-8.422c0.022-0.138 0.016-0.279-0.016-0.415s-0.092-0.264-0.174-0.377c-0.082-0.113-0.186-0.209-0.305-0.282s-0.251-0.122-0.389-0.144-0.279-0.016-0.415 0.016c-0.136 0.033-0.264 0.092-0.377 0.174-0.229 0.166-0.382 0.415-0.426 0.694l-1.388 8.75-8.728-0.018 1.316-8.31c0.028-0.141 0.027-0.286-0.002-0.426s-0.087-0.274-0.169-0.391c-0.082-0.118-0.187-0.218-0.309-0.294s-0.257-0.127-0.399-0.15c-0.142-0.022-0.287-0.016-0.426 0.019s-0.27 0.097-0.384 0.184c-0.114 0.087-0.21 0.195-0.282 0.32s-0.117 0.262-0.134 0.405l-1.366 8.64-7.776-0.016c-0.283 0-0.554 0.112-0.754 0.312s-0.312 0.471-0.312 0.754c0 0.283 0.112 0.554 0.312 0.754s0.471 0.312 0.754 0.312l7.442 0.014-1.4 8.876-7.718-0.016c-0.283 0-0.554 0.112-0.754 0.312s-0.312 0.471-0.312 0.754c0 0.283 0.112 0.554 0.312 0.754s0.471 0.312 0.754 0.312l7.384 0.016-1.266 8c-0.044 0.279 0.024 0.564 0.19 0.793s0.416 0.382 0.694 0.427c0.052 0.009 0.104 0.013 0.156 0.014 0.254 0 0.499-0.091 0.692-0.256s0.32-0.394 0.358-0.644l1.32-8.33 8.73 0.018-1.248 7.89c-0.044 0.279 0.024 0.564 0.19 0.793s0.415 0.382 0.694 0.427c0.056 0.009 0.112 0.013 0.168 0.014 0.253-0.001 0.498-0.092 0.691-0.257s0.32-0.393 0.359-0.643l1.3-8.218 7.762 0.016c0.283 0 0.554-0.112 0.754-0.312s0.312-0.471 0.312-0.754c0-0.283-0.112-0.554-0.312-0.754s-0.471-0.312-0.754-0.312l-7.428-0.016 1.4-8.876 7.704 0.016c0.283 0 0.554-0.112 0.754-0.312s0.312-0.471 0.312-0.754-0.112-0.554-0.312-0.754c-0.2-0.2-0.471-0.312-0.754-0.312h0.014zM19.671 20.657l-8.732-0.018 1.4-8.876 8.73 0.018-1.398 8.876z"></path></svg></a><h2>Get started with Bitwarden</h2></p><p>Interested in trying out the Bitwarden fowarded email alias generator? Quickly get started with a <a href="https://bitwarden.com/pricing/">free Bitwarden account</a>, or initiate a <a href="https://bitwarden.com/pricing/business/">7-day free trial of our business plans</a> to keep your team and company colleagues safe online.</p></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Z-Library admins "escape house arrest" after judge approves U.S. extradition (215 pts)]]></title>
            <link>https://torrentfreak.com/z-library-admins-escape-house-arrest-after-judge-approves-u-s-extradition-240708/</link>
            <guid>40908521</guid>
            <pubDate>Mon, 08 Jul 2024 19:19:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://torrentfreak.com/z-library-admins-escape-house-arrest-after-judge-approves-u-s-extradition-240708/">https://torrentfreak.com/z-library-admins-escape-house-arrest-after-judge-approves-u-s-extradition-240708/</a>, See on <a href="https://news.ycombinator.com/item?id=40908521">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><a href="https://torrentfreak.com/images/zlibr.jpg"><img loading="lazy" decoding="async" src="https://torrentfreak.com/images/zlibr.jpg" alt="zlibrary" width="280" height="138" srcset="https://torrentfreak.com/images/zlibr.jpg 700w, https://torrentfreak.com/images/zlibr-18x9.jpg 18w" sizes="(max-width: 280px) 100vw, 280px"></a>On November 4, 2022, the United States Department of Justice and the FBI began <a href="https://torrentfreak.com/u-s-authorities-seize-z-library-domain-names-221104/">seizing Z-Library’s domains</a> as part of a major operation to shut down the infamous ‘shadow library’ platform.</p>
<p>A criminal investigation had identified two Russian nationals, Anton Napolsky and Valeriia Ermakova, as the alleged operators of the site. On October 21, 2022, at the U.S. District Court for the Eastern District of New York, Judge Sanket J. Bulsara ordered their arrest. They were detained in Argentina on November 3, 2022. </p>
<p>After arriving at the Ambrosio Taravella International Airport, the unsuspecting couple cleared customs and hired a car from a popular rental company. The United States Embassy informed local authorities that the pair were subject to an Interpol Red Notice. </p>
<p>At what point the Russians’ phones were tapped is unclear but, under the authority of a Federal Court arrest warrant, Argentinian law enforcement began tracking the couple’s movements as they traveled south in their rented Toyota Corolla.</p>
<p><a href="https://torrentfreak.com/images/z-lib-route.png"><img loading="lazy" decoding="async" src="https://torrentfreak.com/images/z-lib-route.png" alt="z-lib-route" width="200" height="303"></a>Using data submitted in support of a Chamber of Deputies (lower house of the Argentine Congress) inquiry and data made available elsewhere, we were able to recreate the route allegedly taken by Napolsky and Ermakova before their arrest.</p>
<p>Points of reference in the reports are widely spaced, so the exact route will likely differ from that shown <em>(right)</em>. What is clear, however, is that following a visit to El Calafate, the pair were arrested by airport security police as they arrived in Río Gallegos, Santa Cruz. They were later transferred to Córdoba.</p>
<p>Napolsky and Ermakova informed authorities they were on vacation in Argentina, enjoying the sights in a rented car. They’d done much the same in almost 100 countries previously, although without any serious issue. </p>
<p>In January 2023, Judge Miguel Hugo Vaca Narvaja authorized the Russians to be detained under house arrest. Approval from Córdoba prosecutor Maximiliano Hairabedian, who was responsible for the request to extradite Napolsky and Ermakova to the United States, was not obtained. </p>
<h2>Pair Fight Extradition to the United States</h2>
<p>With a <a href="https://torrentfreak.com/u-s-indicts-two-russians-for-running-the-z-library-piracy-ring221117/">federal indictment</a>, alleging criminal copyright infringement, wire fraud, and money laundering offenses, waiting for them in the United States, the priority for Napolsky and Ermakova would soon be their fight against extradition.</p>
<p>According to a November 2022 statement made by the Russian embassy in Argentina, no official extradition request was received in the immediate wake of the pair’s arrest. The embassy noted that “Argentina does not allow automatic execution of extraterritorial decisions and requests from third states.” Yet even after the request arrived, the process was far from straightforward.</p>
<p>After <a href="https://torrentfreak.com/z-library-defendants-have-u-s-lawyers-now-but-questions-remain-230503/">retaining counsel</a>, the pair denied all wrongdoing. With diplomats from the Russian embassy in attendance, counsel for Napolsky argued that the extradition request failed on the basics by <a href="https://torrentfreak.com/alleged-z-library-operators-ask-court-to-dismiss-criminal-piracy-indictment-230713/">not specifying which copyrighted works</a> had allegedly been infringed, among other things.</p>
<p>That triggered a somewhat remarkable series of events.</p>
<h2>Judge Requested Additional Detail From U.S. Authorities</h2>
<p>Under pressure from the defense, Judge Sergio Pinto agreed to seek more information from U.S. authorities so that the defendants’ concerns about evidence could be addressed. However, the defense had other concerns too, including the impartiality of Judge Pinto, who had reportedly granted the United States a 30-day extension to correct defects in their extradition request.</p>
<p>According to local news publication <a href="https://www.lavoz.com.ar/sucesos/z-library-por-que-apartaron-al-juez-que-podia-extraditar-a-los-rusos-buscados-por-el-fbi-detenidos-en-cordoba/">La Voz</a>, the extension led to the defense accusing Judge Pinto of bias towards the United States. The defense said that a judge’s job is to judge and here, by granting an extension to the requesting state after closing the trial, the defense had no opportunity to participate in the process and suffered a disadvantage.</p>
<p>Defendants’ counsel called for Judge Pinto’s recusal and the Judge defended his position. Having reviewed the case, Judge Abel Sánchez Torres sided with the Russians and Judge Pinto was removed.</p>
<h2>New Judge Orders Extradition</h2>
<p>After replacing Judge Pinto, Judge Sánchez Freytes presided over the second extradition hearing. Based on the charges – criminal copyright infringement, conspiracy to commit wire fraud, wire fraud, and money laundering – the Judge said that extradition to the United States was appropriate. </p>
<p>With Napolsky and Ermakova still under house arrest in Córdoba, an appeal to the Supreme Court of Justice sought political refugee status for the Russians. Success would mean the Russians could not be extradited to the United States. Meanwhile, another Russian was also seeking refugee status, this time to avoid extradition to Russia.</p>
<p>Oleg Andreevich Kulakov is considered an opponent of the Kremlin. According to a La Voz report, at the hearing previously attended by diplomats from the Russian embassy, Napolsky and Ermakova mentioned that Kulakov, wanted for fraud in Russia, is a neighbor of theirs. A decision on Kulakov’s extradition awaits a decision from the National Refugee Commission; Napolsky and Ermakova, on the other hand, appear to have decided that the time for waiting was over.</p>
<h2>Z-Library Defendants Vanish Into Thin Air</h2>
<p><a href="https://torrentfreak.com/images/la-voz-z-lib.png"><img loading="lazy" decoding="async" src="https://torrentfreak.com/images/la-voz-z-lib.png" alt="la-voz-z-lib" width="300" height="309" srcset="https://torrentfreak.com/images/la-voz-z-lib.png 836w, https://torrentfreak.com/images/la-voz-z-lib-300x309.png 300w" sizes="(max-width: 300px) 100vw, 300px"></a>Patronato del Liberado (Patronage of the Liberated) is responsible for assisting people who have previously been detained by the authorities with family and social reintegration. It’s also tasked with monitoring compliance of those on probation or subject to house arrest.</p>
<p>According to unnamed ‘judicial sources’ cited by La Voz, which receives <a href="https://www.lavoz.com.ar/sucesos/los-rusos-buscados-por-el-fbi-se-escaparon-de-la-prision-domiciliaria-en-cordoba/">full credit for a remarkable scoop</a>, when the group conducted a regular visit in May, to verify that Napolsky and Ermakova were in compliance with the rules set by the state, there was no trace of them.</p>
<p>Patronato del Liberado raised the alarm and Judge Sánchez Freytes was immediately notified. Counsel for the defense during the extradition hearings said that he hadn’t been able to contact the Russians either.</p>
<p>The Judge ordered an international arrest warrant although there appeared to be at least some hope the pair hadn’t left the country. However, that was many weeks ago and with no obvious news suggesting their recapture, the pair could be anywhere by now.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dear Roku, you ruined my TV (158 pts)]]></title>
            <link>https://www.theverge.com/24188282/roku-tv-update-motion-smoothing-turn-off</link>
            <guid>40908444</guid>
            <pubDate>Mon, 08 Jul 2024 19:12:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/24188282/roku-tv-update-motion-smoothing-turn-off">https://www.theverge.com/24188282/roku-tv-update-motion-smoothing-turn-off</a>, See on <a href="https://news.ycombinator.com/item?id=40908444">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Roku has made my TV unusable.</p><p>On June 6th, my TCL TV’s Roku OS was updated to version 13.0.0. Ever since, on everything I watch, there is motion smoothing — a TV and film purists’ deepest nightmare. There is no way to turn it off.</p><p>In the updated OS, Roku added a feature called <em>Roku Smart Picture,</em> which, according to its <a href="https://support.roku.com/article/228844467">release notes</a>, “automatically improves picture quality dynamically as users stream.” While Roku doesn’t explicitly mention motion smoothing, or what Roku calls “<a href="https://support.roku.com/article/115007128487">action smoothing</a>,” the update has made it so that I and many <a href="https://community.roku.com/t5/Discussions/Motion-Smoothing-out-of-nowhere/td-p/974654">others</a> with Roku TVs <em>see</em> motion smoothing, regardless of whether the picture setting is <em>Roku Smart Picture</em> or not. My TV didn’t even support motion smoothing before this. Now, I can’t make it go away.</p><p>If you’re someone who doesn’t notice motion smoothing or doesn’t particularly care about it, imagine if, suddenly, your ebook updated so all the fonts were three times as large. Or if your phone decided all video and audio would be played at 2x. Some folks might prefer that, but it should be a choice. Forcing a device to change how a user experiences content that is different than what is expected, with no means to revert or disable the change, is bad. That should be obvious.</p><p>Not long after the update rolled out, other Roku TV owners (mainly TCL, but Hisense, too) began posting about the issue in Roku’s community forum and on <a href="https://www.reddit.com/r/Roku/comments/1ddywvp/tcl_has_action_smoothing_out_of_the_blue/">Reddit</a>. Since I work at <em>The Verge</em>, I told our team about my issue. We reached out to Roku for comment and got no response. We <a href="https://www.theverge.com/2024/6/12/24177117/tcl-roku-tv-motion-smoothing-streaming">wrote about the problem</a>. Commenters on that post agreed: it sucks. Still, there was radio silence from Roku.</p><p>Shipping software can be challenging, especially if you’re shipping updates to a multitude of different devices. QA should catch issues, but sometimes they don’t, and a bug is shipped. It happens! So, in moments like these, it’s important to have strong customer support and to be responsive and communicative. What you probably should avoid is weeks of customers flagging the same issue with no meaningful feedback or updates. Possibly even more important, your support infrastructure shouldn’t be difficult to navigate or have their own bugs that hinder their use. In this case, there’s both.</p><p>Unlike my TV’s new picture setting, Roku’s customer support experience has been anything but smooth. I ran into technical issues sending a community moderator my information. The DM button was missing and then magically appeared the next day. Then, I couldn’t send a message, getting an error that my message contained invalid HTML (it did not). I was even told I had “reached the limit for number of private messages that you can send” even though I was never able to send a message to begin with. When I did finally get through, the response I got offered no solution —&nbsp;and barely made any sense.</p><p>This whole experience strikes me as something truly wild. If you’re in the business of making a product that plays movies and shows, you should be aware of how divisive a feature like motion smoothing is, as well as <a href="https://www.theverge.com/2018/12/4/18126306/tom-cruise-psa-motion-smoothing-christopher-mcquarrie">how filmmakers feel about it</a>. If your slogan is “<a href="https://www.anrdoezrs.net/links/8836598/type/dlg/https://www.roku.com/about/content-policy">happy streaming</a>,” making streaming hell is a bad look.&nbsp;</p><p>With so many competing companies and products in the streaming world, brand loyalty is something every company should covet. Again, bugs happen! We all experience irritating technical issues with apps, sites, and devices. But usually, a brand wants to address those quickly to keep their customers feeling like they are a priority in fear of losing them to any of the <a href="https://www.apple.com/tv-home/">many</a> <a href="https://www.anrdoezrs.net/links/8836598/type/dlg/https://store.google.com/us/product/chromecast_google_tv?hl=en-US&amp;pli=1">other</a> <a href="https://www.amazon.com/b?ie=UTF8&amp;node=8521791011&amp;tag=googhydr-20&amp;hvadid=637498591906&amp;hvpos=&amp;hvnetw=g&amp;hvrand=10697276045594193518&amp;hvpone=&amp;hvptwo=&amp;hvqmt=e&amp;hvdev=c&amp;hvdvcmdl=&amp;hvlocint=&amp;hvlocphy=9190859&amp;hvtargid=kwd-77578224763&amp;ref=pd_sl_9ap9qk1y0l_e&amp;gclid=CjwKCAjw-O6zBhASEiwAOHeGxf_I4SA7SgyoCMuFPNZLa5mpfYbUZpsFbfg5XwAKaJZtJsNA5V246BoC9i4QAvD_BwE&amp;tag=theverge02-20">similar</a> services out there.&nbsp;</p><p>It’s possible that, right now, a team is working on a fix. But I’m not holding out hope: it turns out that this isn’t the first time there’s been an issue with motion smoothing. In 2020, on the same Roku community forum, almost <a href="https://community.roku.com/t5/Discussions/Motion-Smoothing-Issues-on-new-TCL/td-p/554514">the exact same issue</a> happened to a different group of TCL TVs. The very last comment, posted by a user named DigitalFirefly in 2022, is short and bleak: “I’m still having this issue, I wish they would fix this already.” Me, too, DigitalFirefly. Me, too.</p><p>Roku didn’t respond to requests for comment at the time of publish, but we will update this article with any responses we receive.</p><p>So, I’m not holding out hope that this will be resolved soon. Because it wasn’t in 2020, and it hasn’t in the last three weeks. Instead, I’m in the market for a new TV, maybe a dumb one that I will never have to connect to the internet. So if you have any recommendations, please share them in the comments.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[C++ patterns for low-latency applications including high-frequency trading (181 pts)]]></title>
            <link>https://arxiv.org/abs/2309.04259</link>
            <guid>40908273</guid>
            <pubDate>Mon, 08 Jul 2024 18:58:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2309.04259">https://arxiv.org/abs/2309.04259</a>, See on <a href="https://news.ycombinator.com/item?id=40908273">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2309.04259">View PDF</a></p><blockquote>
            <span>Abstract:</span>This work aims to bridge the existing knowledge gap in the optimisation of latency-critical code, specifically focusing on high-frequency trading (HFT) systems. The research culminates in three main contributions: the creation of a Low-Latency Programming Repository, the optimisation of a market-neutral statistical arbitrage pairs trading strategy, and the implementation of the Disruptor pattern in C++. The repository serves as a practical guide and is enriched with rigorous statistical benchmarking, while the trading strategy optimisation led to substantial improvements in speed and profitability. The Disruptor pattern showcased significant performance enhancement over traditional queuing methods. Evaluation metrics include speed, cache utilisation, and statistical significance, among others. Techniques like Cache Warming and Constexpr showed the most significant gains in latency reduction. Future directions involve expanding the repository, testing the optimised trading algorithm in a live trading environment, and integrating the Disruptor pattern with the trading algorithm for comprehensive system benchmarking. The work is oriented towards academics and industry practitioners seeking to improve performance in latency-sensitive applications.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Paul Bilokon [<a href="https://arxiv.org/show-email/e86a6e2b/2309.04259">view email</a>]      <br>    <strong>[v1]</strong>
        Fri, 8 Sep 2023 11:01:05 UTC (1,779 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Affinity's Adobe-rivaling creative suite is now free for six months (184 pts)]]></title>
            <link>https://www.theverge.com/2024/7/8/24194281/affinity-creative-suite-six-month-free-trial-deal-announcement</link>
            <guid>40908187</guid>
            <pubDate>Mon, 08 Jul 2024 18:51:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/2024/7/8/24194281/affinity-creative-suite-six-month-free-trial-deal-announcement">https://www.theverge.com/2024/7/8/24194281/affinity-creative-suite-six-month-free-trial-deal-announcement</a>, See on <a href="https://news.ycombinator.com/item?id=40908187">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Design software developer Serif has launched a new six-month free trial for its Affinity creative suite, which is well regarded as being one of the few viable alternatives to Adobe’s professional design apps. <a href="https://affinity.serif.com/en-us/press/newsroom/try-affinity-designer-photo-and-publisher-free-for-six-months/">The offer</a> is available for <a href="https://www.theverge.com/2022/11/9/23448945/affinity-version-2-adobe-creative-app-features-price">Affinity Photo, Affinity Designer, and Affinity Publisher</a> starting today on Mac, Windows PC, and iPad.</p><p>Affinity uses a one-time purchase pricing model that has earned it a loyal fanbase among creatives who are sick of paying for recurring subscriptions. <a href="https://affinity.serif.com/en-us/affinity-pricing/">Prices start at $69.99</a> for Affinity’s individual desktop apps or $164.99 for the entire suite, with a separate deal currently offering customers 50 percent off all perpetual licenses. </p><p>This discount, alongside the six-month free trial, is potentially geared at <a href="https://www.theverge.com/2024/3/27/24113423/affinity-canva-acquisition-pledge-license-price-subscription">soothing concerns</a> that Affinity would change its pricing model after <a href="https://www.theverge.com/2024/3/26/24112277/canva-affinity-acquisition-design-software-suite-adobe-rival">being acquired by Canva earlier this year</a>. “We’re saying ‘try everything and pay nothing’ because we understand making a change can be a big step, particularly for busy professionals,” said Affinity CEO Ashley Hewson. “Anyone who takes the trial is under absolutely no obligation to buy.”</p><p>In a&nbsp;<a href="https://www.theverge.com/24191080/canva-ceo-melanie-perkins-design-ai-adobe-competition-decoder-podcast-interview"><em>Decoder </em>interview published today, Canva CEO Melanie Perkins</a>&nbsp;declined to describe its offering as a full alternative to Adobe’s Creative Cloud. However, she said the design market “has been a little bit of a one-horse race, and I don’t think that works out well for anyone...I think that being able to have another alternative in the market for professional designers benefits everyone.”</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[No more boot loader: Please use the kernel instead (448 pts)]]></title>
            <link>https://pretalx.com/devconf-cz-2024/talk/W3AVCT/</link>
            <guid>40907933</guid>
            <pubDate>Mon, 08 Jul 2024 18:27:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pretalx.com/devconf-cz-2024/talk/W3AVCT/">https://pretalx.com/devconf-cz-2024/talk/W3AVCT/</a>, See on <a href="https://news.ycombinator.com/item?id=40907933">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                
                    <p><iframe src="https://www.youtube-nocookie.com/embed/ywrSDLp926M" frameborder="0" allowfullscreen=""></iframe></p>
                
                
                
                <section>
                    <p>We are working on a new scheme to replace the GRUB bootloader with a fast, secure, Linux-based, user-space solution: nmbl (for no more boot loader).<br>
Most people are familiar with GRUB, a powerful, flexible, fully-featured bootloader that is used on multiple architectures (x86_64, aarch64, ppc64le OpenFirmware). Although GRUB is quite versatile and capable, its features create complexity that is difficult to maintain, and that both duplicate and lag behind the Linux kernel while also creating numerous security holes. On the other hand, the Linux kernel, which has a large developer base, benefits from fast feature development, quick responses to vulnerabilities and greater overall scrutiny.<br>
We (Red Hat boot loader engineering) will present our solution to this problem, which is to use the Linux kernel as its own bootloader. Loaded by the EFI stub on UEFI, and packed into a unified kernel image (UKI), the kernel, initramfs, and kernel command line, contain everything they need to reach the final boot target. All necessary drivers, filesystem support, and networking are already built in and code duplication is avoided. <br>
We will showcase the work done so far, and ask you for your feedback and use cases.</p>
                </section>
                
                
                
            
            
                <section>
                    See also:
                    
                        <ul>
                            
                                <li>
<a href="https://matrix.to/#/#e112:devconf.cz">
    <i></i>
    Matrix Chat and YouTube Stream
    
</a>
</li>
                            
                                <li>
<a href="https://youtube.com/live/So4E8V7L-AY?feature=share">
    <i></i>
    YouTube Stream Only
    
</a>
</li>
                            
                                <li>
<a href="https://pretalx.com/media/devconf-cz-2024/submissions/W3AVCT/resources/nmbl_devconf_official_2024_YWjkEyN.odp">
    <i></i>
    slides
    (3.5&nbsp;MB)
</a>
</li>
                            
                        </ul>
                    
                </section>
            
            
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Entering text in the terminal is complicated (224 pts)]]></title>
            <link>https://jvns.ca/blog/2024/07/08/readline/</link>
            <guid>40907581</guid>
            <pubDate>Mon, 08 Jul 2024 17:52:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jvns.ca/blog/2024/07/08/readline/">https://jvns.ca/blog/2024/07/08/readline/</a>, See on <a href="https://news.ycombinator.com/item?id=40907581">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
     

<p>The other day I asked what folks on Mastodon find confusing about working in
the terminal, and one thing that stood out to me was “editing a command you
already typed in”.</p>

<p>This really resonated with me: even though entering some text and editing it is
a very “basic” task, it took me maybe 15 years of using the terminal every
single day to get used to using <code>Ctrl+A</code> to go to the beginning of the line (or
<code>Ctrl+E</code> for the end).</p>

<p>So let’s talk about why entering text might be hard! I’ll also share a few tips
that I wish I’d learned earlier.</p>

<h3 id="it-s-very-inconsistent-between-programs">it’s very inconsistent between programs</h3>

<p>A big part of what makes entering text in the terminal hard is the
inconsistency between how different programs handle entering text. For example:</p>

<ol>
<li>some programs (the <code>dash</code> shell, <code>cat</code>, <code>nc</code>, <code>git commit --interactive</code>, etc) don’t support using arrow keys at all: if you press arrow keys, you’ll just see <code>^[[D^[[D^[[C^[[C^</code></li>
<li>many programs (like <code>irb</code>, <code>python3</code> on a Linux machine and many many more) use the <code>readline</code> library, which gives you a lot of basic functionality (history, arrow keys, etc)</li>
<li>some programs (like <code>/usr/bin/python3</code> on my Mac) do support very basic features like arrow keys, but not other features like <code>Ctrl+left</code> or reverse searching with <code>Ctrl+R</code></li>
<li>some programs (like the <code>fish</code> shell or <code>ipython3</code> or <code>micro</code> or <code>vim</code>) have their own fancy system for accepting input which is totally custom</li>
</ol>

<p>So there’s a lot of variation! Let’s talk about each of those a little more.</p>

<h3 id="mode-1-the-baseline">mode 1: the baseline</h3>

<p>First, there’s “the baseline” – what happens if a program just accepts text by
calling <code>fgets()</code> or whatever and doing absolutely nothing else to provide a
nicer experience. Here’s what using these tools typically looks for me – If I
start <a href="https://wiki.archlinux.org/title/Dash">dash</a> (a pretty minimal shell) press the left arrow keys, it just prints
<code>^[[D</code> to the terminal.</p>

<pre><code>$ ls l-^[[D^[[D^[[D
</code></pre>

<p>At first it doesn’t seem like all of these “baseline” tools have much in
common, but there are actually a few features that you get for free just from
your terminal, without the program needing to do anything special at all.</p>

<p>The things you get for free are:</p>

<ol>
<li>typing in text, obviously</li>
<li>backspace</li>
<li><code>Ctrl+W</code>, to delete the previous word</li>
<li><code>Ctrl+U</code>, to delete the whole line</li>
<li>a few other things unrelated to text editing (like <code>Ctrl+C</code> to interrupt the process, <code>Ctrl+Z</code> to suspend, etc)</li>
</ol>

<p>This is not <em>great</em>, but it means that if you want to delete a word you
generally can do it with <code>Ctrl+W</code> instead of pressing backspace 15 times, even
if you’re in an environment which is offering you absolutely zero features.</p>

<p>You can get a list of all the ctrl codes that your terminal supports with <code>stty -a</code>.</p>

<h3 id="mode-2-tools-that-use-readline">mode 2: tools that use <code>readline</code></h3>

<p>The next group is tools that use readline! Readline is a GNU library to make
entering text more pleasant, and it’s very widely used.</p>

<p>My favourite readline keyboard shortcuts are:</p>

<ol>
<li><code>Ctrl+E</code> to go to the end of the line</li>
<li><code>Ctrl+A</code> to go to the beginning of the line</li>
<li><code>Ctrl+left/right arrow</code> to go back/forward 1 word</li>
<li>up arrow to go back to the previous command</li>
<li><code>Ctrl+R</code> to search your history</li>
</ol>

<p>And you can use <code>Ctrl+W</code> / <code>Ctrl+U</code> from the “baseline” list, though <code>Ctrl+U</code>
deletes from the cursor to the beginning of the line instead of deleting the
whole line. I think <code>Ctrl+W</code> might also have a slightly different definition of
what a “word” is.</p>

<p>There are a lot more (<a href="https://www.man7.org/linux/man-pages/man3/readline.3.html#EDITING_COMMANDS">here’s a full list</a>), but those are the only ones that I personally use.</p>

<p>The <code>bash</code> shell is probably the most famous readline user (when you use
<code>Ctrl+R</code> to search your history in bash, that feature actually comes from
readline), but there are TONS of programs that use it – for example <code>psql</code>,
<code>irb</code>, <code>python3</code>, etc.</p>

<h3 id="tip-you-can-make-anything-use-readline-with-rlwrap">tip: you can make ANYTHING use readline with <code>rlwrap</code></h3>

<p>One of my absolute favourite things is that if you have a program like <code>nc</code>
without readline support, you can just run <code>rlwrap nc</code> to turn it into a
program with readline support!</p>

<p>This is incredible and makes a lot of tools that are borderline unusable MUCH
more pleasant to use. You can even apparently set up <a href="https://github.com/hanslub42/rlwrap">rlwrap</a> to include your own
custom autocompletions, though I’ve never tried that.</p>

<h3 id="some-reasons-tools-might-not-use-readline">some reasons tools might not use readline</h3>

<p>I think reasons tools might not use readline might include:</p>

<ul>
<li>the program is very simple (like <code>cat</code> or <code>nc</code>) and maybe the maintainers don’t want to bring in a relatively large dependency</li>
<li>license reasons, if the program’s license is not GPL-compatible – readline is GPL-licensed, not LGPL</li>
<li>only a very small part of the program is interactive, and maybe readline
support isn’t seen as important. For example <code>git</code> has a few interactive
features (like <code>git add -p</code>), but not very many, and usually you’re just
typing a single character like <code>y</code> or <code>n</code> – most of the time you need to really
type something significant in git, it’ll drop you into a text editor instead.</li>
</ul>

<p>For example idris2 says <a href="https://idris2.readthedocs.io/en/latest/tutorial/interactive.html#editing-at-the-repl">they don’t use readline</a>
to keep dependencies minimal and suggest using <code>rlwrap</code> to get better
interactive features.</p>

<h3 id="how-to-know-if-you-re-using-readline">how to know if you’re using readline</h3>

<p>The simplest test I can think of is to press <code>Ctrl+R</code>, and if you see:</p>

<pre><code>(reverse-i-search)`':
</code></pre>

<p>then you’re probably using readline. This obviously isn’t a guarantee (some
other library could use the term <code>reverse-i-search</code> too!), but I don’t know of
another system that uses that specific term to refer to searching history.</p>

<h3 id="the-readline-keybindings-come-from-emacs">the readline keybindings come from Emacs</h3>

<p>Because I’m a vim user, It took me a very long time to understand where these
keybindings come from (why <code>Ctrl+A</code> to go to the beginning of a line??? so
weird!)</p>

<p>My understanding is these keybindings actually come from Emacs – <code>Ctrl+A</code> and
<code>Ctrl+E</code> do the same thing in Emacs as they do in Readline and I assume the
other keyboard shortcuts mostly do as well, though I tried out <code>Ctrl+W</code> and
<code>Ctrl+U</code> in Emacs and they don’t do the same thing as they do in the terminal
so I guess there are some differences.</p>

<p>There’s some more <a href="https://twobithistory.org/2019/08/22/readline.html">history of the Readline project here</a>.</p>

<h3 id="mode-3-another-input-library-like-libedit">mode 3: another input library (like <code>libedit</code>)</h3>

<p>On my Mac laptop, <code>/usr/bin/python3</code> is in a weird middle ground where it
supports <em>some</em> readline features (for example the arrow keys), but not the
other ones. For example when I press <code>Ctrl+left arrow</code>, it prints out <code>;5D</code>,
like this:</p>

<pre><code>$ python3
&gt;&gt;&gt; importt subprocess;5D
</code></pre>

<p>Folks on Mastodon helped me figure out that this is because in the default
Python install on Mac OS, the Python <code>readline</code> module is actually backed by
<code>libedit</code>, which is a similar library which has fewer features, presumably
because Readline is <a href="https://en.wikipedia.org/wiki/GNU_Readline#Choice_of_the_GPL_as_GNU_Readline's_license">GPL licensed</a>.</p>

<p>Here’s how I was eventually able to figure out that Python was using libedit on
my system:</p>

<pre><code>$ python3 -c "import readline; print(readline.__doc__)"
Importing this module enables command line editing using libedit readline.
</code></pre>

<p>Generally Python uses readline though if you install it on Linux or through
Homebrew. It’s just that the specific version that Apple includes on their
systems doesn’t have readline. Also <a href="https://docs.python.org/3.13/whatsnew/3.13.html#a-better-interactive-interpreter">Python 3.13 is going to remove the readline dependency</a>
in favour of a custom library, so “Python uses readline” won’t be true in the
future.</p>

<p>I assume that there are more programs on my Mac that use libedit but I haven’t
looked into it.</p>

<h3 id="mode-4-something-custom">mode 4: something custom</h3>

<p>The last group of programs is programs that have their own custom (and sometimes
much fancier!) system for editing text. This includes:</p>

<ul>
<li>most terminal text editors (nano, micro, vim, emacs, etc)</li>
<li>some shells (like fish), for example it seems like fish supports <code>Ctrl+Z</code> for undo when typing in a command. Zsh’s line editor is called <a href="https://zsh.sourceforge.io/Guide/zshguide04.html">zle</a>.</li>
<li>some REPLs (like <code>ipython</code>), for example IPython uses the <a href="https://python-prompt-toolkit.readthedocs.io/">prompt_toolkit</a> library instead of readline</li>
<li>lots of other programs (like <code>atuin</code>)</li>
</ul>

<p>Some features you might see are:</p>

<ul>
<li>better autocomplete which is more customized to the tool</li>
<li>nicer history management (for example with syntax highlighting) than the default you get from readline</li>
<li>more keyboard shortcuts</li>
</ul>

<h3 id="custom-input-systems-are-often-readline-inspired">custom input systems are often readline-inspired</h3>

<p>I went looking at how <a href="https://atuin.sh/">Atuin</a> (a wonderful tool for
searching your shell history that I started using recently) handles text input.
Looking at <a href="https://github.com/atuinsh/atuin/blob/a67cfc82fe0dc907a01f07a0fd625701e062a33b/crates/atuin/src/command/client/search/interactive.rs#L382-L430">the code</a>
and some of the discussion around it, their implementation is custom but it’s
inspired by readline, which makes sense to me – a lot of users are used to
those keybindings, and it’s convenient for them to work even though atuin
doesn’t use readline.</p>

<p><a href="https://python-prompt-toolkit.readthedocs.io/">prompt_toolkit</a> (the library
IPython uses) is similar – it actually supports a lot of options (including
vi-like keybindings), but the default is to support the readline-style
keybindings.</p>

<p>This is like how you see a lot of programs which support very basic vim
keybindings (like <code>j</code> for down and <code>k</code> for up). For example Fastmail supports
<code>j</code> and <code>k</code> even though most of its other keybindings don’t have much
relationship to vim.</p>

<p>I assume that most “readline-inspired” custom input systems have various subtle
incompatibilities with readline, but this doesn’t really bother me at all
personally because I’m extremely ignorant of most of readline’s features. I only use
maybe 5 keyboard shortcuts, so as long as they support the 5 basic commands I
know (which they always do!) I feel pretty comfortable. And usually these
custom systems have much better autocomplete than you’d get from just using
readline, so generally I prefer them over readline.</p>

<h3 id="lots-of-shells-support-vi-keybindings">lots of shells support vi keybindings</h3>

<p>Bash, zsh, and fish all have a “vi mode” for entering text. In a
<a href="https://social.jvns.ca/@b0rk/112723846172173621">very unscientific poll</a> I ran on
Mastodon, 12% of people said they use it, so it seems pretty popular.</p>

<p>Readline also has a “vi mode” (which is how Bash’s support for it works), so by
extension lots of other programs have it too.</p>

<p>I’ve always thought that vi mode seems really cool, but for some reason even
though I’m a vim user it’s never stuck for me.</p>

<h3 id="understanding-what-situation-you-re-in-really-helps">understanding what situation you’re in really helps</h3>

<p>I’ve spent a lot of my life being confused about why a command line application
I was using wasn’t behaving the way I wanted, and it feels good to be able to
more or less understand what’s going on.</p>

<p>I think this is roughly my mental flowchart when I’m entering text at a command
line prompt:</p>

<ol>
<li>Do the arrow keys not work? Probably there’s no input system at all, but at
least I can use <code>Ctrl+W</code> and <code>Ctrl+U</code>, and I can <code>rlwrap</code> the tool if I
want more features.</li>
<li>Does <code>Ctrl+R</code> print <code>reverse-i-search</code>? Probably it’s readline, so I can use
all of the readline shortcuts I’m used to, and I know I can get some basic
history and press up arrow to get the previous command.</li>
<li>Does <code>Ctrl+R</code> do something else? This is probably some custom input library:
it’ll probably act more or less like readline, and I can check the
documentation if I really want to know how it works.</li>
</ol>

<p>Being able to diagnose what’s going on like this makes the command line feel a
more predictable and less chaotic.</p>

<h3 id="some-things-this-post-left-out">some things this post left out</h3>

<p>There are lots more complications related to entering text that we didn’t talk
about at all here, like:</p>

<ul>
<li>issues related to ssh / tmux / etc</li>
<li>the <code>TERM</code> environment variable</li>
<li>how different terminals (gnome terminal, iTerm, xterm, etc) have different kinds of support for copying/pasting text</li>
<li>unicode</li>
<li>probably a lot more</li>
</ul>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Right Kind of Stubborn (346 pts)]]></title>
            <link>https://paulgraham.com/persistence.html</link>
            <guid>40907155</guid>
            <pubDate>Mon, 08 Jul 2024 17:05:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://paulgraham.com/persistence.html">https://paulgraham.com/persistence.html</a>, See on <a href="https://news.ycombinator.com/item?id=40907155">Hacker News</a></p>
<div id="readability-page-1" class="page"><div width="435"><tbody><tr><td><img src="https://s.turbifycdn.com/aah/paulgraham/the-right-kind-of-stubborn-1.gif" width="221" height="18" alt="The Right Kind of Stubborn"><span size="2" face="verdana">July 2024<p>Successful people tend to be persistent. New ideas often don't work
at first, but they're not deterred. They keep trying and eventually
find something that does.</p><p>Mere obstinacy, on the other hand, is a recipe for failure. Obstinate
people are so annoying. They won't listen. They beat their heads
against a wall and get nowhere.</p><p>But is there any real difference between these two cases? Are
persistent and obstinate people actually behaving differently? Or
are they doing the same thing, and we just label them later as
persistent or obstinate depending on whether they turned out to be
right or not?</p><p>If that's the only difference then there's nothing to be learned
from the distinction. Telling someone to be persistent rather than
obstinate would just be telling them to be right rather than wrong,
and they already know that. Whereas if persistence and obstinacy
are actually different kinds of behavior, it would be worthwhile
to tease them apart.
</p><span color="#dddddd">[<a href="#f1n"><span color="#dddddd">1</span></a>]</span><p>I've talked to a lot of determined people, and it seems to me that
they're different kinds of behavior. I've often walked away from a
conversation thinking either "Wow, that guy is determined" or "Damn,
that guy is stubborn," and I don't think I'm just talking about
whether they seemed right or not. That's part of it, but not all
of it.</p><p>There's something annoying about the obstinate that's not simply
due to being mistaken. They won't listen. And that's not true of
all determined people. I can't think of anyone more determined than
the Collison brothers, and when you point out a problem to them,
they not only listen, but listen with an almost predatory intensity.
Is there a hole in the bottom of their boat? Probably not, but if
there is, they want to know about it.</p><p>It's the same with most successful people. They're never <i>more</i>
engaged than when you disagree with them. Whereas the obstinate
don't want to hear you. When you point out problems, their eyes
glaze over, and their replies sound like ideologues talking about
matters of doctrine.
</p><span color="#dddddd">[<a href="#f2n"><span color="#dddddd">2</span></a>]</span><p>The reason the persistent and the obstinate seem similar is that
they're both hard to stop. But they're hard to stop in different
senses. The persistent are like boats whose engines can't be throttled
back. The obstinate are like boats whose rudders can't be turned.
</p><span color="#dddddd">[<a href="#f3n"><span color="#dddddd">3</span></a>]</span><p>In the degenerate case they're indistinguishable: when there's only
one way to solve a problem, your only choice is whether to give up
or not, and persistence and obstinacy both say no. This is presumably
why the two are so often conflated in popular culture. It assumes
simple problems. But as problems get more complicated, we can see
the difference between them. The persistent are much more attached
to points high in the decision tree than to minor ones lower down,
while the obstinate spray "don't give up" indiscriminately over the
whole tree.</p><p>The persistent are attached to the goal. The obstinate are attached
to their ideas about how to reach it.</p><p>Worse still, that means they'll tend to be attached to their <i>first</i>
ideas about how to solve a problem, even though these are the least
informed by the experience of working on it. So the obstinate aren't
merely attached to details, but disproportionately likely to be
attached to wrong ones.</p><p>Why are they like this? Why are the obstinate obstinate? One
possibility is that they're overwhelmed. They're not very capable.
They take on a hard problem. They're immediately in over their head.
So they grab onto ideas the way someone on the deck of a rolling
ship might grab onto the nearest handhold.</p><p>That was my initial theory, but on examination it doesn't hold up.
If being obstinate were simply a consequence of being in over one's
head, you could make persistent people become obstinate by making
them solve harder problems. But that's not what happens. If you
handed the Collisons an extremely hard problem to solve, they
wouldn't become obstinate. If anything they'd become less obstinate.
They'd know they had to be open to anything.</p><p>Similarly, if obstinacy were caused by the situation, the obstinate
would stop being obstinate when solving easier problems. But they
don't. And if obstinacy isn't caused by the situation, it must come
from within. It must be a feature of one's personality.</p><p>Obstinacy is a reflexive resistance to changing one's ideas. This
is not identical with stupidity, but they're closely related. A
reflexive resistance to changing one's ideas becomes a sort of
induced stupidity as contrary evidence mounts. And obstinacy is a
form of not giving up that's easily practiced by the stupid. You
don't have to consider complicated tradeoffs; you just dig in your
heels. It even works, up to a point.</p><p>The fact that obstinacy works for simple problems is an important
clue. Persistence and obstinacy aren't opposites. The relationship
between them is more like the relationship between the two kinds
of respiration we can do: aerobic respiration, and the anaerobic
respiration we inherited from our most distant ancestors. Anaerobic
respiration is a more primitive process, but it has its uses. When
you leap suddenly away from a threat, that's what you're using.</p><p>The optimal amount of obstinacy is not zero. It can be good if your
initial reaction to a setback is an unthinking "I won't give up,"
because this helps prevent panic. But unthinking only gets you so
far. The further someone is toward the obstinate end of the continuum,
the less likely they are to succeed in solving hard problems.
</p><span color="#dddddd">[<a href="#f4n"><span color="#dddddd">4</span></a>]</span><p>Obstinacy is a simple thing. Animals have it. But persistence turns
out to have a fairly complicated internal structure.</p><p>One thing that distinguishes the persistent is their energy. At the
risk of putting too much weight on words, they persist rather than
merely resisting. They keep trying things. Which means the persistent
must also be imaginative. To keep trying things, you have to keep
thinking of things to try.</p><p>Energy and imagination make a wonderful combination. Each gets the
best out of the other. Energy creates demand for the ideas produced
by imagination, which thus produces more, and imagination gives
energy somewhere to go.
</p><span color="#dddddd">[<a href="#f5n"><span color="#dddddd">5</span></a>]</span><p>Merely having energy and imagination is quite rare. But to solve
hard problems you need three more qualities: resilience, good
judgement, and a focus on some kind of goal.</p><p>Resilience means not having one's morale destroyed by setbacks.
Setbacks are inevitable once problems reach a certain size, so if
you can't bounce back from them, you can only do good work on a
small scale. But resilience is not the same as obstinacy. Resilience
means setbacks can't change your morale, not that they can't change
your mind.</p><p>Indeed, persistence often requires that one change one's mind.
That's where good judgement comes in. The persistent are quite
rational. They focus on expected value. It's this, not recklessness,
that lets them work on things that are unlikely to succeed.</p><p>There is one point at which the persistent are often irrational
though: at the very top of the decision tree. When they choose
between two problems of roughly equal expected value, the choice
usually comes down to personal preference. Indeed, they'll often
classify projects into deliberately wide bands of expected value
in order to ensure that the one they want to work on still qualifies.</p><p>Empirically this doesn't seem to be a problem. It's ok to be
irrational near the top of the decision tree. One reason is that
we humans will work harder on a problem we love. But there's another
more subtle factor involved as well: our preferences among problems
aren't random. When we love a problem that other people don't, it's
often because we've unconsciously noticed that it's more important
than they realize.</p><p>Which leads to our fifth quality: there needs to be some overall
goal. If you're like me you began, as a kid, merely with the desire
to do something great. In theory that should be the most powerful
motivator of all, since it includes everything that could possibly
be done. But in practice it's not much use, precisely because it
includes too much. It doesn't tell you what to do at this moment.</p><p>So in practice your energy and imagination and resilience and good
judgement have to be directed toward some fairly specific goal. Not
too specific, or you might miss a great discovery adjacent to what
you're searching for, but not too general, or it won't work to
motivate you.
</p><span color="#dddddd">[<a href="#f6n"><span color="#dddddd">6</span></a>]</span><p>When you look at the internal structure of persistence, it doesn't
resemble obstinacy at all. It's so much more complex. Five distinct
qualities — energy, imagination, resilience, good judgement, and
focus on a goal — combine to produce a phenomenon that seems a bit
like obstinacy in the sense that it causes you not to give up. But
the way you don't give up is completely different. Instead of merely
resisting change, you're driven toward a goal by energy and resilience,
through paths discovered by imagination and optimized by judgement.
You'll give way on any point low down in the decision tree, if its
expected value drops sufficiently, but energy and resilience keep
pushing you toward whatever you chose higher up.</p><p>Considering what it's made of, it's not surprising that the right
kind of stubbornness is so much rarer than the wrong kind, or that
it gets so much better results. Anyone can do obstinacy. Indeed,
kids and drunks and fools are best at it. Whereas very few people
have enough of all five of the qualities that produce right kind
of stubbornness, but when they do the results are magical.</p><p>
<b>Notes</b></p><p>[</p><a name="f1n"><span color="#000000">1</span></a>]
I'm going to use "persistent" for the good kind of stubborn
and "obstinate" for the bad kind, but I can't claim I'm simply
following current usage. Conventional opinion barely distinguishes
between good and bad kinds of stubbornness, and usage is correspondingly
promiscuous. I could have invented a new word for the good kind,
but it seemed better just to stretch "persistent."<p>[</p><a name="f2n"><span color="#000000">2</span></a>]
There are some domains where one can succeed by being obstinate.
Some political leaders have been notorious for it. But it won't
work in situations where you have to pass external tests. And indeed
the political leaders who are famous for being obstinate are famous
for getting power, not for using it well.<p>[</p><a name="f3n"><span color="#000000">3</span></a>]
There will be some resistance to turning the rudder of a
persistent person, because there's some cost to changing direction.<p>[</p><a name="f4n"><span color="#000000">4</span></a>]
The obstinate do sometimes succeed in solving hard problems.
One way is through luck: like the stopped clock that's right twice
a day, they seize onto some arbitrary idea, and it turns out to be
right. Another is when their obstinacy cancels out some other form
of error. For example, if a leader has overcautious subordinates,
their estimates of the probability of success will always be off
in the same direction. So if he mindlessly says "push ahead regardless"
in every borderline case, he'll usually turn out to be right.<p>[</p><a name="f5n"><span color="#000000">5</span></a>]
If you stop there, at just energy and imagination, you get
the conventional caricature of an artist or poet.<p>[</p><a name="f6n"><span color="#000000">6</span></a>]
Start by erring on the small side. If you're inexperienced
you'll inevitably err on one side or the other, and if you err on
the side of making the goal too broad, you won't get anywhere.
Whereas if you err on the small side you'll at least be moving
forward. Then, once you're moving, you expand the goal.<span color="888888"><b>Thanks</b> to Trevor Blackwell, 
Jessica Livingston, Jackie McDonough,
Courtenay Pipkin, Harj Taggar, and Garry Tan for reading drafts of
this.</span></span></td></tr></tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Reverse Engineering Ticketmaster's Rotating Barcodes (1270 pts)]]></title>
            <link>https://conduition.io/coding/ticketmaster/</link>
            <guid>40906148</guid>
            <pubDate>Mon, 08 Jul 2024 15:14:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://conduition.io/coding/ticketmaster/">https://conduition.io/coding/ticketmaster/</a>, See on <a href="https://news.ycombinator.com/item?id=40906148">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
    <p><em>“Screenshots won’t get you in”, but Chrome DevTools will.</em></p>
<p><a href="#Reverse-Engineering">Click here to skip the rant and go straight to the nerdy stuff.</a></p>
<p>I recently purchased tickets to a concert from TicketMaster. If they had issued me normal, printable PDF tickets I could save offline to my phone, this article would’ve never been penned. But of course this is 2024: Nothing we do online can be simple anymore.</p>
<p>After finalizing the purchase, TicketMaster discloses that I can’t print off tickets for this event. Instead, they issue tickets via a system called Mobile Entry, AKA <em>SafeTix.</em> This takes the form of a rotating barcode displayed inside TicketMaster’s web-app or android/ios app.</p>
<p><img src="https://conduition.io/images/ticketmaster/safetix-barcode.gif"></p><p>Perhaps I’m getting old, but I remember a time when printable tickets were ubiquitous. One could print off tickets after buying them online or even (gasp) <em>in-person,</em> and bring these paper tickets to get entry into the event when you arrive. They can be saved as PDFs and viewed on pretty much any device on the planet. PDF tickets work even if your phone loses internet connection. Paper tickets work even if you don’t have a phone. If you bought the ticket off the event’s official ticketing agency (not a sketchy reseller), you know for sure that they’re real. There’s no risk that your ticket won’t get you in. You can easily send them to a friend over WhatsApp, iMessage, Signal, email, or even by-hand with printed tickets.</p>
<p>These rotating barcodes on the other hand are far from perfect. I experienced this first-hand last year when I attended another <em>very popular</em> concert where they used a similar rotating-QR-code-ticket system. Numerous people including myself and my friends were floundering at the entry gate citing a bevy of broken barcode problems. The #1 was:</p>
<blockquote>
<p>My phone has no internet connection, so my QR code won’t load.</p>
</blockquote>
<p>The venue was so crowded that cell-towers and WiFi were overloaded. Internet access was spottier than a Dalmatian with chickenpox.</p>
<p>The company responsible for this ticketing nightmare (I can’t remember their name) obviously had no phone support line, and even if they did it probably wouldn’t have worked. The venue employees were completely helpless. Our only hope was to keep refreshing the ticket app, wildly waving our phones in the air in the hopes we might catch a brief moment of cell-network coverage with which to fetch and then display the ticket QR codes to the venue staff.</p>
<p>In the end, I luckily caught some cell-service and loaded our ticket QR codes. We left behind a slew of other ticketholders waving their phones around at the gate. I have no idea whether they ever got through.</p>
<p>I paid three hundred US dollars for this high-tech experience.</p>
<h2 id="The-Marketing"><a href="#The-Marketing" title="The Marketing"></a>The Marketing</h2><p>TicketMaster markets their SafeTix technology as a cure-all for scammers and scalpers.</p>
<blockquote>
<p>SafeTix™ are powered by a new and unique barcode that automatically refreshes every few seconds so it cannot be stolen or copied, keeping your tickets safe and secure.</p>
</blockquote>
<blockquote>
<p>Ticketmaster SafeTix are powered by a new and unique barcode that automatically refreshes every 15 seconds. This greatly reduces the risk of ticket fraud from stolen or illegal counterfeit tickets.</p>
</blockquote>
<p><sub><a target="_blank" rel="noopener" href="https://www.ticketmaster.com/safetix">Source</a></sub></p>
<blockquote>
<p>Our secure ticket technology reduces the risk of ticket fraud, eliminating the possibilities of theft or counterfeiting. Once you’ve purchased your mobile tickets on Ticketmaster, you can always rest assured you’re getting the seats you paid for.</p>
</blockquote>
<p><sub><a target="_blank" rel="noopener" href="https://blog.ticketmaster.com/mobile-ticketing-an-essential-for-safe-entry/">Source</a></sub></p>
<p>There’s also this gem:</p>
<blockquote>
<p>If you take a closer look at your ticket, you may notice that it has a gliding movement, making it in a sense, alive. That movement is our ticket technology actively working to safeguard you every second.</p>
</blockquote>
<p>Bullshit, TicketMaster. It’s a CSS animation. Get over yourself.</p>
<p>The part that got me worried:</p>
<blockquote>
<p>The barcode on your mobile ticket includes technology to protect it, which means screenshots or printouts of your ticket will not be scannable.</p>
</blockquote>
<p>This triggered flashbacks to the concert last year, and I pictured myself once more haphazardly waving my phone around, praying for service like Saul Goodman in the desert.</p>
<p><img src="https://conduition.io/images/ticketmaster/saul-goodman-1.webp">
  <img src="https://conduition.io/images/ticketmaster/saul-goodman-2.webp">
</p>

<p>But TicketMaster was prepared for this anxiety:</p>
<blockquote>
<p>Concerned about cell phone service at venues? This ticket has you covered. Once you view it in our App, your ticket is automatically saved so it’s always ready.</p>
</blockquote>
<p>Great, so as long as I trust their app not to have a seizure on the day of the concert, I should be fine. Too bad I really don’t trust that, besides the fact that I don’t want to install their spyware on my phone.</p>
<h2 id="Motivations"><a href="#Motivations" title="Motivations"></a>Motivations</h2><p>It’s pretty clear why TicketMaster is pushing this technology:</p>
<ul>
<li>SafeTix makes it harder for people to resell tickets outside of TicketMaster’s closed, high-margin ticket-resale marketplace, where they make a boatload of money by buying low and selling high to customers with no alternative.</li>
<li>It pushes users to install TicketMaster’s proprietary closed-source app, which gives TicketMaster more insight into their users’ devices and behavior.</li>
<li>People can’t save and transfer tickets outside of Ticketmaster. This forces ticketholders to surrender their friends’ contact information to TicketMaster, who can use this data to build social graphs, or conduct other privacy-invasive practices.</li>
</ul>
<p>TicketMaster will never admit to these motivations, but it cannot be doubted that these effects have manifested regardless of TicketMaster’s intent, and they’re all good news for TicketMaster’s shareholders, if not for their customers.</p>
<h2 id="The-Contradiction"><a href="#The-Contradiction" title="The Contradiction"></a>The Contradiction</h2><p>If you have any experience with computers and software, then having read all of TicketMaster’s marketing, you might come to the same question I did.</p>
<p><strong>How can tickets be saved offline if they can’t also be transferred outside of TicketMaster?</strong></p>
<p>This ticket is digital. Saving data offline is the same as copying it to your hard drive. If data can be copied, it can be transmitted. If it can be transmitted, it can be shared. If it can be shared, <em>it can be sold.</em></p>
<p>This is a contradiction in TicketMaster’s marketing. They can’t have robust DRM on their tickets if those tickets can still be viewed offline.</p>
<p>So what is TicketMaster really doing to create these rotating barcodes?</p>
<h2 id="Reverse-Engineering"><a href="#Reverse-Engineering" title="Reverse Engineering"></a>Reverse Engineering</h2><p>My first order of business was inspecting the barcodes themselves to see what I could learn. Their format is quite simple. They are <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/PDF417">PDF417</a> barcodes which encode <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/UTF-8">UTF-8 text</a>. As I mentioned earlier, that blue bar which sweeps across the barcode is just a gimmicky <a target="_blank" rel="noopener" href="https://www.w3schools.com/css/css3_animations.asp">CSS animation</a>: It doesn’t actually prevent screenshots of the barcode from scanning, because PDF417 has error correction properties built-in.</p>
<p>It seems like some older barcodes encode different formats of text, but the barcodes my TicketMaster web-app was generating embed data which looks like this:</p>
<figure><table><tbody><tr><td><pre><span>1</span><br></pre></td><td><pre><span>B4cq2BdFCpFl90TDuYD3pWfRDSO6eQ3bR0YQqsDnyfciuVFkKp+m0zI+a2lgfonY::140013::481994::1707070843</span><br></pre></td></tr></tbody></table></figure>

<p><sub>Disclaimer: This isn’t from a real SafeTix barcode. I don’t want TicketMaster to be able to identify and harass me.</sub></p>
<p>This looks like four distinct pieces of data, delimited by colons. First, there is some <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/Base64">Base64</a>-encoded data, followed by two six-digit numbers, with a <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/Unix_time">unix timestamp</a> trailing at the end.</p>
<p>When the barcode rotates every 15 seconds, its content changes slightly. The base64 data remains static, but both 6-digit numbers and the timestamp change.</p>
<figure><table><tbody><tr><td><pre><span>1</span><br></pre></td><td><pre><span>B4cq2BdFCpFl90TDuYD3pWfRDSO6eQ3bR0YQqsDnyfciuVFkKp+m0zI+a2lgfonY::358190::038184::1707070859</span><br></pre></td></tr></tbody></table></figure>

<p>These six-digit numbers behave a lot like <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/Time-based_One-Time_Password">Time-based One-Time Passwords (TOTPs)</a> - This is what powers 2FA apps like <a target="_blank" rel="noopener" href="https://authy.com/">Authy</a> or <a target="_blank" rel="noopener" href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2">Google Authenticator</a>. These are rotating 6-digit codes which can be generated from a shared secret and a timestamp.</p>
<p>My instinct was that the first two numbers are indeed TOTPs, generated from different secrets, using the unix timestamp appended at the end of the barcode data. This makes sense: TicketMaster wouldn’t want to reinvent the wheel with this system, so they used a tried and tested cryptographic tool as a building block.</p>
<p>The base64 data was still a mystery. Decoding it into its constituent 48 bytes, it doesn’t seem to contain any meaningful data structures that I could discern. It seems more or less like random data, and since it doesn’t change when the barcode rotates, it’s probably some kind of random bearer token which identifies the ticketholder and their ticket.</p>
<p>When the ticket is scanned at the venue, TicketMaster (or perhaps the venue) looks up the ticket metadata using that bearer token, and then validates the two OTPs against two secrets stored in its database. If both steps pass, then your ticket is valid and the staff can let you in.</p>
<h2 id="Here’s-the-Secret"><a href="#Here’s-the-Secret" title="Here’s the Secret"></a>Here’s the Secret</h2><p>TOTPs are very customizable, but generally the software industry has settled on a set of common defaults for TOTP standardization. You really only need to have two things to generate a TOTP:</p>
<ul>
<li>The shared secret, which is just a byte array.</li>
<li>A working clock.</li>
</ul>
<p>If you have both of those, you can generate as many TOTPs as you’d like, <em>entirely offline.</em></p>
<p>There are two TOTPs in the barcode data, so there are probably two shared secrets I need to find. If I have both of those, plus the bearer token, I can create as many valid barcodes as I want.</p>
<p>So now my goal is much clearer: I need to find out where these tokens &amp; secrets come from.</p>
<h2 id="Debugging-the-Web-App"><a href="#Debugging-the-Web-App" title="Debugging the Web App"></a>Debugging the Web App</h2><p>I booted up an Android phone and connected its Chrome browser to the Chrome DevTools on my desktop computer. This gives me a view into TicketMaster’s API and source code.</p>
<p>By <a target="_blank" rel="noopener" href="https://developer.chrome.com/docs/devtools/network/reference/">recording network requests</a> as I loaded the TicketMaster barcode viewer, I found one particularly interesting request:</p>
<figure><table><tbody><tr><td><pre><span>1</span><br></pre></td><td><pre><span>POST /api/render-ticket/secure-barcode?time=1707071877481&amp;amid=XXXXXXXXXXXXXXX&amp;_format=json</span><br></pre></td></tr></tbody></table></figure>

<p>Its response data:</p>
<figure><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br></pre></td><td><pre><span><span>{</span></span><br><span>  <span>"deviceId"</span><span>:</span> <span>"8f651107-acad-42a4-b3a6-019aaac41960"</span><span>,</span></span><br><span>  <span>"deviceType"</span><span>:</span> <span>"WEB"</span><span>,</span></span><br><span>  <span>"deviceOs"</span><span>:</span> <span>"ANDROID"</span><span>,</span></span><br><span>  <span>"userAgent"</span><span>:</span> <span>"Mozilla/5.0 (Linux; Android 10; K) XXXXXXXXXXXXXXX"</span><span>,</span></span><br><span>  <span>"nfcCapableDevice"</span><span>:</span> <span><span>true</span></span><span>,</span></span><br><span>  <span>"tickets"</span><span>:</span> <span>[</span></span><br><span>    <span>{</span></span><br><span>      <span>"eventId"</span><span>:</span> <span>"myevent.50.38991943985838B9"</span><span>,</span></span><br><span>      <span>"section"</span><span>:</span> <span>"3"</span><span>,</span></span><br><span>      <span>"row"</span><span>:</span> <span>"A"</span><span>,</span></span><br><span>      <span>"seat"</span><span>:</span> <span>"1"</span><span>,</span></span><br><span>      <span>"barcode"</span><span>:</span> <span>"481848590102K"</span><span>,</span></span><br><span>      <span>"addedValue"</span><span>:</span> <span><span>false</span></span><span>,</span></span><br><span>      <span>"generalAdmission"</span><span>:</span> <span><span>false</span></span><span>,</span></span><br><span>      <span>"fan"</span><span>:</span> <span><span>null</span></span><span>,</span></span><br><span>      <span>"token"</span><span>:</span> <span>"eyJiIjoiNDgxODQ4NTkwMTAySyIsInQiOiJUR1JMWUNxQWYyQ1MvQmxILzh5dThZdkhoV055TW8xUW9CYTI5UTVqVkN4V2xBcE5NbnczSlJkeU9UcFVVWUFDIiwiY2siOiJiOTg0MzJlZDIzYjhmMmJkYTgyMzQ4MjE2MjI5ZjRkMjdjZTlkMDYzIiwiZWsiOiJiMzUxOTM2NGUwYzc5MTRjMWY5ZDU5ZDM1NjUyYTA0MDY3ZDJmNjQ3IiwicnQiOiJyb3RhdGluZ19zeW1ib2xvZ3kifQ=="</span><span>,</span></span><br><span>      <span>"renderType"</span><span>:</span> <span>"rotating_symbology"</span><span>,</span></span><br><span>      <span>"passData"</span><span>:</span> <span>{</span></span><br><span>        <span>"android"</span><span>:</span> <span>{</span></span><br><span>          <span>"jwt"</span><span>:</span> <span>"eyJhbGciOiJSUzI1NiJ9.XXXXXXXXXXXXXXXXXX.YYYYYYYYYYYYYYYYYYYYYYYYYY"</span></span><br><span>        <span>}</span></span><br><span>      <span>}</span><span>,</span></span><br><span>      <span>"bindingRequired"</span><span>:</span> <span><span>true</span></span><span>,</span></span><br><span>      <span>"deviceKeyBindingRequired"</span><span>:</span> <span><span>false</span></span><span>,</span></span><br><span>      <span>"deviceSignatureRequired"</span><span>:</span> <span><span>false</span></span><span>,</span></span><br><span>      <span>"segmentType"</span><span>:</span> <span>"NFC_ROTATING_SYMBOLOGY"</span><span>,</span></span><br><span>      <span>"ticketId"</span><span>:</span> <span>"50.3.A.1"</span></span><br><span>    <span>}</span></span><br><span>  <span>]</span><span>,</span></span><br><span>  <span>"globalUserId"</span><span>:</span> <span>"k39Fj4lNfOS4Zq481bxIWg"</span></span><br><span><span>}</span></span><br></pre></td></tr></tbody></table></figure>

<p><sub>Disclaimer: Identifying data has been scrambled to protect the guilty.</sub></p>
<p>Note the <code>token</code> property in the object in the <code>tickets</code> array. I base64-decoded it, and I found it was actually just a another JSON object:</p>
<figure><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></pre></td><td><pre><span><span>{</span></span><br><span>  <span>"b"</span><span>:</span> <span>"481848590102K"</span><span>,</span></span><br><span>  <span>"t"</span><span>:</span> <span>"TGRLYCqAf2CS/BlH/8yu8YvHhWNyMo1QoBa29Q5jVCxWlApNMnw3JRdyOTpUUYAC"</span><span>,</span></span><br><span>  <span>"ck"</span><span>:</span> <span>"b98432ed23b8f2bda82348216229f4d27ce9d063"</span><span>,</span></span><br><span>  <span>"ek"</span><span>:</span> <span>"b3519364e0c7914c1f9d59d35652a04067d2f647"</span><span>,</span></span><br><span>  <span>"rt"</span><span>:</span> <span>"rotating_symbology"</span></span><br><span><span>}</span></span><br></pre></td></tr></tbody></table></figure>

<ul>
<li>The <code>b</code> property seems to be the same as the <code>barcode</code> property on the ticket object.</li>
<li>The <code>rt</code> property seems to be the same as the <code>renderType</code> property on the main ticket object.</li>
<li>The <code>t</code> property is a base64-encoded byte array, 48 bytes long.</li>
<li>The <code>ck</code> and <code>ek</code> properties are both hex-encoded byte arrays, each 20 bytes long.</li>
</ul>
<p>I re-scanned the latest barcode shown on the TicketMaster web-app:</p>
<figure><table><tbody><tr><td><pre><span>1</span><br></pre></td><td><pre><span>TGRLYCqAf2CS/BlH/8yu8YvHhWNyMo1QoBa29Q5jVCxWlApNMnw3JRdyOTpUUYAC::492436::240860::1707074879</span><br></pre></td></tr></tbody></table></figure>

<p>Nice. So <code>t</code> is the static bearer token. I wonder if <code>ck</code> and <code>ek</code> are the TOTP secrets I’m after.</p>
<p>Upon some further investigation into TicketMaster’s minified website source code, in a file called <code>presence-secure-entry.js</code>, I found the actual function the web-app uses to generate barcode data, which is labeled <code>generateSignedToken</code>.</p>
<figure><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br></pre></td><td><pre><span><span>key</span>: <span>"generateSignedToken"</span>,</span><br><span><span>value</span>: <span>function</span>(<span>t</span>) {</span><br><span>    <span>var</span> e = <span>arguments</span>.<span>length</span> &gt; <span>1</span> &amp;&amp; <span>void</span> <span>0</span> !== <span>arguments</span>[<span>1</span>] &amp;&amp; <span>arguments</span>[<span>1</span>];</span><br><span>    <span>if</span> (<span>this</span>.<span>displayType</span> === l.<span>ROTATING</span>) {</span><br><span>        <span>var</span> n = [<span>this</span>.<span>eventKey</span>, <span>this</span>.<span>customerKey</span>]</span><br><span>          , a = t;</span><br><span>        <span>if</span> (<span>this</span>.<span>eventKey</span>) {</span><br><span>            <span>var</span> u = <span>new</span> <span>Date</span>(a);</span><br><span>            a = u <span>instanceof</span> <span>Date</span> &amp;&amp; <span>"Invalid Date"</span> !== <span>""</span>.<span>concat</span>(u) ? u : <span>new</span> <span>Date</span></span><br><span>        }</span><br><span>        <span>var</span> A = n.<span>reduce</span>((<span>function</span>(<span>t, n</span>) {</span><br><span>            <span>if</span> (n) {</span><br><span>                <span>var</span> u;</span><br><span>                <span>try</span> {</span><br><span>                    u = i.<span>b32encode</span>(o.<span>a</span>.<span>hexToByteString</span>(n))</span><br><span>                } <span>catch</span> (t) {</span><br><span>                    u = <span>""</span></span><br><span>                }</span><br><span>                <span>var</span> A = r.<span>a</span>(u, <span>15</span>).<span>now</span>(a, e);</span><br><span>                t.<span>push</span>(A)</span><br><span>            }</span><br><span>            <span>return</span> t</span><br><span>        }</span><br><span>        ), [<span>this</span>.<span>rawToken</span>]);</span><br><span>        <span>if</span> (<span>this</span>.<span>eventKey</span>) {</span><br><span>            <span>var</span> s = <span>Math</span>.<span>floor</span>(a.<span>getTime</span>() / <span>1e3</span>);</span><br><span>            A.<span>push</span>(s)</span><br><span>        }</span><br><span>        <span>return</span> A.<span>join</span>(<span>"::"</span>)</span><br><span>    }</span><br><span>    <span>return</span> <span>this</span>.<span>barcode</span></span><br><span>}</span><br></pre></td></tr></tbody></table></figure>

<p>The minification makes it a bit harder to read, but it seems like <code>ek</code> and <code>ck</code> probably refer to the <code>eventKey</code> and <code>customerKey</code> respectively, while the bearer token <code>t</code> is referenced as <code>rawToken</code> in the above code.</p>
<p>It appears the two TOTPs are generated with a 15-second time step interval, but are otherwise constructed in the same way as the ubiquitous industry-standard SHA-1 TOTPs we see in any mobile 2FA app. The first one is generated with the <code>eventKey</code>, and the second with the <code>customerKey</code>. Finally, the unix timestamp used for both TOTPs is appended to help with verification on the server-side.</p>
<p>To verify my interpretation, I installed <code>oathtool</code>, a TOTP command-line tool. I plugged <code>ck</code>, <code>ek</code> and the unix timestamp into a SHA-1 TOTP generator with a 15-second step interval:</p>
<figure><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></pre></td><td><pre><span><span>$ </span><span>sudo apt install oathtool -y</span></span><br><span>...</span><br><span><span>$ </span><span><span>date</span>=$(python3 -c <span>'import datetime; print(datetime.datetime.fromtimestamp(1707074879).isoformat())'</span>)</span></span><br><span><span>$ </span><span>oathtool --totp --time-step-size 15s -N <span>"<span>$date</span>"</span> b3519364e0c7914c1f9d59d35652a04067d2f647</span></span><br><span>492436</span><br><span><span>$ </span><span>oathtool --totp --time-step-size 15s -N <span>"<span>$date</span>"</span> b98432ed23b8f2bda82348216229f4d27ce9d063</span></span><br><span>240860</span><br></pre></td></tr></tbody></table></figure>

<p>Bingo! 🎉 This matches the TOTPs in the barcode:</p>
<figure><table><tbody><tr><td><pre><span>1</span><br></pre></td><td><pre><span>TGRLYCqAf2CS/BlH/8yu8YvHhWNyMo1QoBa29Q5jVCxWlApNMnw3JRdyOTpUUYAC::492436::240860::1707074879</span><br></pre></td></tr></tbody></table></figure>

<p>The <code>eventKey</code> is probably unique to the particular event that is being ticketed, and <code>customerKey</code> is probably unique to the ticketholder. They don’t appear to change at all, unlike the <code>rawToken</code> which seems to rotate every time I refresh the TicketMaster web-app. However, if I leave the page alone for several hours, the <code>rawToken</code> doesn’t change, suggesting it should remain valid even after closing the web-app.</p>
<p><sub>What about the <code>passData.android.jwt</code> field? Does that come into play anywhere? I’ll save you some work on that front. Turns out it’s not actually needed for ticket verification at all, but rather just an authentication token used for saving the ticket to a user’s <a target="_blank" rel="noopener" href="https://wallet.google/">Google Wallet</a>. I don’t use Google Wallet. Being a rather privacy-conscious individual, I stay well clear of Google services as much as possible.</sub></p>
<h2 id="Pirating-Tickets"><a href="#Pirating-Tickets" title="Pirating Tickets"></a>Pirating Tickets</h2><p>I now know everything I would need to duplicate TicketMaster’s barcodes in a custom app, or even resell a ticket outside of TicketMaster’s closed marketplace. All I would need to do is extract the base64 <code>token</code> property from the <code>/api/render-ticket/secure-barcode</code> API endpoint, or engineer a way to fetch that token dynamically using TicketMaster session credentials.</p>
<p>That base64 <code>token</code> string <em><strong>IS</strong></em> the ticket, as far as the venue staff at the gates are concerned. If you have a valid <code>rawToken</code>, <code>eventKey</code>, and <code>customerKey</code>, you can generate valid <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/PDF417">PDF417 barcodes</a>, indistinguishable from the official TicketMaster app. Short of checking photo IDs at the entry gate, the venue staff can’t tell whether the person at the gate is the same person who the ticket is registered to on TicketMaster.</p>
<p>Quite hilariously, TicketMaster actually makes token-extraction easy on us: The <code>token</code> is logged to the browser console automatically when the barcode renderer component is mounted on the web page.</p>
<figure><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></pre></td><td><pre><span>r.<span>a</span>.<span>log</span>(</span><br><span>  <span>"'render' called on '"</span>.<span>concat</span>(</span><br><span>    <span>"pseview-"</span>.<span>concat</span>(J.<span>get</span>(<span>this</span>)),</span><br><span>    <span>"' with token '"</span>, <span>this</span>.<span>token</span>, <span>"'"</span></span><br><span>  )</span><br><span>)</span><br></pre></td></tr></tbody></table></figure>

<p>This means we don’t even need to mess around injecting custom user-scripts into the page to get the <code>token</code> out. You can just open your SafeTix barcode on the TicketMaster web-app, <a target="_blank" rel="noopener" href="https://developer.chrome.com/blog/devtools-mobile/">connect your phone’s Chrome instance to your laptop’s Chrome DevTools</a>, and open the console. You’ll see the <code>token</code> printed right there. You can copy and use it wherever you’d like.</p>
<h2 id="Lifetimes"><a href="#Lifetimes" title="Lifetimes"></a>Lifetimes</h2><p>The only unknown factor here is the <code>rawToken</code> lifetime. It’s difficult to know for sure how TicketMaster’s backend server uses <code>rawToken</code> to look up the ticket. It’s likely that a new <code>rawToken</code> is generated every time the client contacts the <code>/api/render-ticket/secure-barcode</code> endpoint.</p>
<p>I have no idea how long each <code>rawToken</code> remains valid. It’s possible that only a single <code>rawToken</code> could be valid for a given TicketMaster account at a time. Indeed TicketMaster devs probably designed the system that way to prevent extracting multiple tickets which are concurrently valid.</p>
<p>If multiple <code>token</code>s are valid concurrently, one person could buy dozens of tickets, extract however many ticket <code>token</code>s they’d like, and resell them under-the-table. I would really love if TicketMaster didn’t think of that, because then I could extract the ticket <code>token</code>s for my friends and distribute them without having to go through TicketMaster’s data-harvesting pipeline.</p>
<p>The only authoritative source I could find on this is <a target="_blank" rel="noopener" href="https://developer.ticketmaster.com/products-and-docs/apis/partner/safetix/">an obscure document on TicketMaster’s developer API docs website</a>.</p>
<blockquote>
<p>Partners will need to refresh the token 20 hours prior to the start of the event and whenever the ticket is displayed in your app.</p>
</blockquote>
<blockquote>
<p>FAQ</p>
<ol>
<li>How often must the token be refreshed? You should refresh the token anytime a fan opens and views a ticket within your app and 20 hours prior to the event. If you are unable to refresh the token when the fan views the ticket at the gate, then the SDK would attempt to use the token refreshed 20 hours prior. The token should still be valid. You do not need to refresh the token every 20 hours.</li>
</ol>
</blockquote>
<p>Based on this, it might be reasonable to assume the <code>rawToken</code> is only valid for a 20 hour period, which would mean you’d need to fetch the <code>rawToken</code> at most 20 hours before the event to be able to resell or transfer it without TicketMaster’s permission. However, if all you want to do is save a ticket offline, this is more than adequate. I even built a little <a target="_blank" rel="noopener" href="https://expo.dev/">Expo</a> app I call <a target="_blank" rel="noopener" href="https://github.com/conduition/ticketgimp"><em>TicketGimp</em></a> which renders SafeTix barcodes if you give it a <code>token</code>.</p>
<p><img src="https://conduition.io/images/ticketmaster/ticketgimp.png"></p><p>I look forward to testing it out when my concert comes around.</p>
<h2 id="Conclusion"><a href="#Conclusion" title="Conclusion"></a>Conclusion</h2><p>I think we can all agree: <a target="_blank" rel="noopener" href="https://duckduckgo.com/?q=fuck+ticketmaster&amp;ia=web">Fuck TicketMaster</a>. I hope their sleazy product managers and business majors read this and throw a tantrum. I hope their devs read this and feel embarrassed. It’s rare that I feel genuine malice towards other developers, but to those who designed this system, I say: <em>Shame.</em></p>
<p>Shame on you for abusing your talent to <a target="_blank" rel="noopener" href="https://www.ticketnews.com/2021/07/mobile-only-ticketing-push-leaving-many-without-smartphones-behind/">exclude the technologically-disadvantaged</a>.</p>
<p>Shame on you for letting the marketing team <a target="_blank" rel="noopener" href="https://business.ticketmaster.com/business-solutions/safetix-the-game-changer-in-digital-ticketing/">dress this dark-pattern as a safety measure</a>.</p>
<p>Shame on you for supporting a company with <a target="_blank" rel="noopener" href="https://www.hollywoodreporter.com/business/business-news/live-nation-ticketmaster-class-action-1235070131/">such cruel business practices</a>.</p>
<p>Software developers are the wizards and shamans of the modern age. We ought to use our powers with the austerity and integrity such power implies. You’re using them to exclude people from entertainment events.</p>
<p>Have fun refactoring your ticket verification system.</p>
<p><a target="_blank" rel="noopener" href="https://www.breakupticketmaster.com/">Break up TicketMaster</a>.</p>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Python Has Too Many Package Managers (102 pts)]]></title>
            <link>https://dublog.net/blog/so-many-python-package-managers/</link>
            <guid>40905891</guid>
            <pubDate>Mon, 08 Jul 2024 14:44:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dublog.net/blog/so-many-python-package-managers/">https://dublog.net/blog/so-many-python-package-managers/</a>, See on <a href="https://news.ycombinator.com/item?id=40905891">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Python is a wonderful programming language. I’ve used it to build webapps, deep learning models, games, and numerical computation. However there is one aspect of Python that has been an inexcusable pain-in-the ass over many years. That would be the fragmented Python package and environment management ecosystem, succinctly represented by the following XKCD comic:</p><p><img src="https://dublog.net/images/python_environment_xkcd.png" alt="Python tooling is complicated"></p><p>You see, a lot of other programming languages developed standardized ways to setup versioning, dependency resolution, and dev environment setup. C# has <code>NuGet</code>, Javascript has <code>npm</code>, Dart has <code>pub</code>, and most notably Rust has <code>Cargo</code> – quite possibly the most widely loved package manager tool in existence.</p><h2 id="the-sane-way-to-do-things">The sane way to do things</h2><p>In a sane world, package management would work like it does with <code>Cargo</code> - the <code>rust</code> package manager. You have a single master configuration TOML file where you simply list your dependencies and config settings. The TOML file goes into a folder encapsulating your entire development environment. For extra reproducibility, whenever you build your environment and resolve all your package dependencies, a <code>*.lock</code> file records all the packages you used along with their versions and hashes.</p><p>Finally, because dependency resolution is a directed acylic graph (DAG) resolution problem, the dependency retrieval and resolution should both be engineered to be relatively fast. Dependency information should be freely available from a public API metadata server in a way that is simple to parse, and cached locally once downloaded to avoid redundantly hitting this server. Finally, the dependency resolution algorithm itself should be written in a relative fast programming language like C++ or Rust.</p><p>The problem with Python has been that there hasn’t been a single tool that does <em>all of this</em> well although some have come enticingly close. To that end, here is my rundown of more than a dozen Python package managment/virtual environment tools:</p><h2 id="classic-python-package-management">Classic Python Package Management</h2><h3 id="pip-and-venv"><code>pip</code> and <code>venv</code></h3><p>The OG of Python package managers. Dependency resolution? <code>pip</code> up until recently hardly did any dependency resolution at all. Historically it would install packages one by one, conflicts be damned. In version 20.3, introduced in 2020, <code>pip</code>finally added dependency resolution backtracking, which means if an inconsistent state was detected, it would go back and try to fix the problem. Unlike many of the other tools in this list, and unlike tools like Cargo or NuGet in Rust and C# respectively, <code>pip</code> does not manage environments along with dependencies. A separate tool like <code>venv</code> or <code>virtualenv</code> needs to be used to create “virtual environments” which are in turn be completely decoupled from a specific project or project directory.</p><p>One of the key faults of <code>pip</code> is what happens when you decide to remove a dependency. Removing a dependency does not actually remove the sub-dependencies that were brought in by the original dependency, leaving a lot of potential cruft. This actually needs to be done either manually or by using yet another tool like <code>pip-autoremove</code> to remove sub-dependencies that are no longer useful.</p><h3 id="pyenvhttpsgithubcompyenvpyenv"><a href="https://github.com/pyenv/pyenv"><code>pyenv</code></a></h3><p>One thing to note about python’s <code>venv</code> tool is that it isn’t really setup to create virtual environments for <em>different versions</em> of Python. To actually do this, yet another tool called <code>pyenv</code> exists which allows you to switch between different versions of system Python at will, with options to set Python locally for specific projects. Very often, I’ve seen this tool abused to set Python versions globally, which can lead to some severe reproducibility issues, with folks forgetting which version of Python they were using for different projects.</p><h3 id="pipenvhttpspipenvpypaioenlatest"><a href="https://pipenv.pypa.io/en/latest/"><code>pipenv</code></a></h3><p>So <code>pip</code> and <code>venv</code> combined can let you build “virtual environments” and <code>pyenv</code> can let you switch Python versions. The natural thing to do is to have a tool that allows you to specify the python version and dependencies in a single file. <code>pipenv</code> basically sets this up, optionally interoperating with <code>pyenv</code> by letting users specify python version and dependencies in a <code>Pipfile</code> and locked dependencies in a <code>Pipfile.lock</code>.</p><p>The downside to <code>pipenv</code> is that it’s dependency resolution is no better than that of <code>pip</code> which it uses under the hood. Furthermore, in 2020, a new “Python Enhancement Proposal” <a href="https://peps.python.org/pep-0621/"><code>PEP 621</code></a> was accepted defining how package metadata should be consolidated in the future for Python projects making <code>Pipfile</code> and <code>Pipfile.lock</code> no longer quite “idiomatic” in the long run…</p><h2 id="consolidating-python-config-with-pyprojecttoml-and-pep-621">Consolidating Python config with pyproject.toml and PEP-621</h2><p>Before <code>PEP-621</code>, there were a large number of config files that could wind up in a given Python project:</p><ul><li><code>requirements.txt</code>: The project’s dependencies, which may or may not include package hashes (for security reasons) depending on how its setup.</li><li><code>setup.py</code> and <code>setup.cfg</code>: A script and a config file which collectively define dependencies and options.</li><li>`Pip</li><li><code>MANIFEST.in</code>: Tells packaging software (like setuptools) what sort of non-code files to include in the package.</li><li><code>tox.ini</code>: Used by the tool <code>tox</code> to configure environment setup, dependencies, and test commands (do you see the redundancy now?)</li><li><code>Pipfile</code> and <code>Pipfile.lock</code>: For folks using <code>pipenv</code>.</li><li><code>.pylintrc</code>: Used to setup config for linting tools like <code>black</code> and <code>isort</code></li><li><code>environment.yml</code>: Used specifically by conda to define dependencies, some of which are not python packages at all. Interestingly you can specify both pip dependencies and conda dependencies separately, even if a pip package has a corresponding (and possibly better curated) version on a conda channel!</li><li><code>.condarc</code>: The config file for Conda.</li></ul><p>Naturally the proliferation of all these tools and standards leads to a massive amount of redundancy. There is effectively no standard way to enumerate the dependencies of a given package nor how to setup tools like linters and tests.</p><p><img src="https://dublog.net/images/xkcd_standards.png" alt="The problem with new standards"></p><p>In 2020 <a href="https://peps.python.org/pep-0621/"><code>PEP 621</code></a> was accepted. This proposal effectively gives a guidance to consolidate <em>everything</em> into a <code>pyproject.toml</code> file, almost identical to <code>Cargo.toml</code> in Rust and similar to the <code>package.json</code> used in <code>npm</code>. Naturally this led to a proliferation of new Python package managers which leverage the new standard. Enter <code>poetry</code>, <code>PDM</code>, <code>Flit</code>, and <code>Hatch</code>.</p><h3 id="poetryhttpsgithubcompython-poetrypoetry"><a href="https://github.com/python-poetry/poetry">Poetry</a></h3><p><code>Poetry</code> right now is the closest tool in the Python ecosystem with widespread traction that actually comes close to approximating the experience of using tools like <code>Cargo</code> and <code>npm</code>. Unlike <code>pip</code> and similar to <code>conda</code> and <code>mamba</code> (<em>See below</em>), <code>Poetry</code> will attempt to resolve the full dependency graph DAG beforehand, and install dependencies in topological order. It <em>mostly</em> respects <code>pyproject.toml</code> and treats it as a first-class citizen. Like <code>conda</code> and <code>venv</code>, <code>poetry</code> can also manage your virtual environments, which can exist within or outside of your project folder. <code>poetry</code> also generates <code>poetry.lock</code> files which can be an immense boon for reproducibility. Notably, these lockfiles are multi-platform lock files meaning they can be extremely large. Finally, <code>poetry</code> is also a build tool, allowing users to build and publish Python packages rather seamlessly.</p><p><code>Poetry</code> is <em>almost</em> the perfect tool for the job, however it has a number of downsides that can be utter deal breakers for production or even basic research and development. First of all dependency resolution can be incredibly slow. A big part of this is no fault of <code>poetry</code> in of itself, but rather in the disparate ways in which Python packages enumerate their dependencies. Unlike other programming ecosystems, not all Python packages declare their metadata in a way that is necessarily served cleanly by public metadata APIs like PyPI. In these cases, exploring every dependency for every possible package in the DAG can involve a staggering amount operations to directly figure out package dependencies by downloading and parsing python wheels. For some folks doing basic R&amp;D, the cost of simply having a few packages excluded from dependency resolution can be a fairer tradeoff than waiting minutes to hours to find a “failure to resolve dependencies”.</p><p>Furthermore, as of 2024, the dependency resolver in <code>poetry</code> is actually still written in Python as a depth-first search algorithm. By comparison, tools like <code>mamba</code> have resolvers written in C++ as boolean SAT solvers which are orders of magnitude faster! Dependency resolves for large projects in <code>poetry</code>, combined with the generation of multiplatform lockfiles can take an obscene amount of time… especially when there is an actual conflict in the DAG.</p><p>I have actually used <code>poetry</code> at my last job, and one of the number one issues with the tool is in how most folks (even incredibly experienced folks!) used it incorrectly to specify dependency bounds on library code intended to be widely shared. In <code>poetry</code> there is the option to use a caret <code>^</code> operator implicitly specify upper and lower bounds. For example, specifying <code>^0.2.3</code> is equivalent to specifying <code>&gt;=0.2.3,&lt;0.3.0</code>. This ceiling pinning seems like a good idea on the surface, but can wreck havok when applied across a large RnD organization, with numerous “false positive” unresolvable dependency DAGs when well-intentioned software engineers apply it too liberally. This sort of well intentioned ceiling pinning can have <a href="https://iscinumpy.dev/post/bound-version-constraints/">devastating consequences for libraries intended to be used widely</a>.</p><h3 id="pdmhttpsgithubcompdm-projectpdm"><a href="https://github.com/pdm-project/pdm"><code>pdm</code></a></h3><p><code>pdm</code> is incredibly similar to <code>poetry</code>, but has a core difference difference in that it also supports <a href="https://peps.python.org/pep-0582/"><code>PEP-582</code></a>. This PEP basically brings <code>pdm</code> in line with other programming language environment setups by jettisoning the idea of virtual environments that are independent of a given project/folder. When you are in your project directory, you are effectively in your virtual environment (which is not necessarily totally isolated from the system environment and any other active virtual environments). This can greatly reduce the futzing around of having to activate and deactivate various virtual environment tools in Python. Furthermore, <code>pdm</code> is much more compliant with PEP standards than <code>poetry</code>, which can be a killer advantage for certain users.</p><h3 id="hatchhttpsgithubcompypahatch"><a href="https://github.com/pypa/hatch"><code>hatch</code></a></h3><p>Unlike the other tools on this list, <code>hatch</code> is a full build system for python which support <code>pyproject.toml</code>. I have not actually tried this tool, but it mostly overlaps with <code>poetry</code> in many ways, and has one particular feature that I have yet to see in any other Python tool. You can actually use <code>hatch</code> to run tests in parallel on <a href="https://hatch.pypa.io/latest/tutorials/testing/overview/"><em>multiple versions of python</em></a>.</p><h2 id="the-conda-ecosystem">The Conda ecosystem</h2><p>It would be impossible to dive into an article on Python tooling without talking about Conda. <code>conda</code> was created by some of the most prominent members of the Python open source community - Travis Oliphant (one of the creators of Numpy, Numba, and SciPy) and Peter Wang who was a developer of Bokeh.</p><h3 id="condahttpscondaioprojectscondaenlatestuser-guidegetting-startedhtml"><a href="https://conda.io/projects/conda/en/latest/user-guide/getting-started.html"><code>conda</code></a></h3><p>In many ways <code>conda</code> and <code>anaconda</code> solves most of the core problems with Python environment setups for data science work. <code>conda</code> actually can manage non-Python dependencies along with Python packages within its own <code>conda</code> virtual environments. This provided a fairly ergonomic way for scientists to swap around non-python dependencies without resorting to using Docker (which is significantly higher friction to use). This is the tool I use outside of work, and it’s great for experimenting.</p><p>Like <code>poetry</code>, <code>conda</code> performs a full dependency resolve when building an environment, but unlike <code>poetry</code>, in recent years the <code>conda</code> dependency resolver has been <a href="https://www.anaconda.com/blog/a-faster-conda-for-a-growing-community">swapped out for a faster one written in C++</a> called <code>libmamba</code>. Additionally, unlike <code>poetry</code>, there is no need to go and attempt to parse python packages directly when insufficient metadata was provided by upstream package maintainers. This is because <code>conda</code> has entirely separate metadata api servers which force package uploaders to maintain stricter standards of dependency declarations.</p><p>The core tradeoff with <code>conda</code> is that it attempts to do package metadata the “right” way by enforcing the existence of a separate <code>environment.yml</code> which properly declares dependencies and other metadata. It is actually this information which is served by <code>conda</code>’s separate metadata API servers. This can be onerous to adapt in a company that already has many internal python packages. If there is some obscure python package out there that does not have this file, then you won’t be able to install it using <code>conda</code> cleanly. However, <code>pip</code> installs within conda environments are possible leading to a potentially awkward mishmash of relying on two package managers. Another thing to keep in mind with <code>conda</code> is that it neither generates lock files out-of-the-box nor supports <code>pyproject.toml</code> config files.</p><p>In 2024, <code>conda</code> is not ideally ergonomic. Users still have to fiddle around with <code>conda</code> virtual environments which are decoupled from specific project folders. Dependencies and config for a project can be difficult to keep track of across conda <code>environment.yml</code> files, pip installs, and other configuration files. Publishing a package is neither particularly simple nor easy.</p><p>I have also seen some organizations avoid using <code>conda</code> for production deployments due to the fact <code>conda</code> tends to install a lot of cruft since it manages non-python dependencies as well. Such orgs will lean towards using <code>Docker</code> and <code>*.lock</code> style files to enumerate dependencies.</p><p>That being said, <code>conda</code> is probably the best tool for data scientists and experimentalists right now. It is treated as a first-class citizen by a number of third party tools widely used in the Python ecosystem such as <a href="https://www.ray.io/">Ray</a> and <a href="https://metaflow.org/">Metaflow</a>.</p><h4 id="mambahttpsgithubcommamba-orgmamba"><a href="https://github.com/mamba-org/mamba"><code>mamba</code></a></h4><p>There are actually multiple implementations of <code>conda</code>. <code>mamba</code> is basically a full rewrite of <code>conda</code> in C++, making it substantially faster. The slowest bits of <code>conda</code> however were actually the solver, and as of 2024, the <code>libmamba</code> solver has been ported over to <code>conda</code> from the <code>mamba</code> project.</p><p>In 2024, members of the <code>mamba</code> team switched over to working on <code>pixi</code> – a full <code>mamba</code> and <code>conda</code> replacement written completely in Rust (see below).</p><h2 id="python-package-management-meets-rust">Python Package management meets Rust</h2><p>Some of the most promising developments in the Python package management world have been from the Rust community. No doubt Rustaceans have a clear example of how a package manager setup <em>should</em> work in the from of <code>Cargo</code>, and so several promising solutions have cropped up in the past 2 years, most notable of which has been <code>uv</code>.</p><h3 id="huakhttpsgithubcomcnpryerhuak"><a href="https://github.com/cnpryer/huak"><code>huak</code></a></h3><p>Just to illustrate that multiple groups have tried to make a “Cargo for Python”, I wanted to briefly mention <code>huak</code>. The tool is completely experimental as of the writing of this article and not widely used, but attempts to graft the ergonomics of Cargo into a python package manager.</p><h3 id="pixihttpsgithubcomprefix-devpixi"><a href="https://github.com/prefix-dev/pixi"><code>pixi</code></a></h3><p>One of the most ambitious Rust projects is <code>pixi</code> which seeks to be a drop-in replacement for <code>conda</code>. Like <code>conda</code>, <code>pixi</code> can manage non-python dependencies. In mid 2024, <code>pixi</code> started to switch from its own backend <code>rip</code> to <code>uv</code> (see below) for better performance. This is an actively evolving tool, and I eagerly await to see where it goes. Unlike <code>conda</code> and <code>mamba</code>, <code>pixi</code> incorporates its own type of <a href="https://pixi.sh/v0.20.0/features/lockfile/"><code>*.lock</code> file</a> which immediately puts it ahead of vanilla <code>conda</code> for reproducibility.</p><h3 id="ryehttpsgithubcomastral-shrye"><a href="https://github.com/astral-sh/rye"><code>rye</code></a></h3><p>One of the first attempts to redo Python package management in Rust by <a href="https://github.com/mitsuhiko">Armin Ronacher</a>. When I first saw this over a year ago, the actual slow part (dependency resolution) was simply calling <code>piptools</code> under the hood, leading to no discernable gain in speed or performance.</p><p>However, over time, the project has matured to the point where it now does most if not all of what <code>poetry</code> does only faster. This project was recently taken over by <code>Astral.sh</code> (developers of <code>uv</code> and the <code>ruff</code> linter) and now uses the same dependency resolver as <code>uv</code> on the backend. The tool has also gained a decent amount of traction on some major projects. For example, the <a href="https://github.com/openai/openai-python">OpenAI</a> Python API library uses it. There is a strong possibility that the functionality of <code>rye</code> will eventually be fully replicated by <code>uv</code> alone, leading to a merging of the two projects.</p><h3 id="uvhttpsastralshbloguv"><a href="https://astral.sh/blog/uv"><code>uv</code></a></h3><p><code>uv</code> is by far the most promising package management tool in the Python ecosystem as of the writing of this post. This project actually aims to be a drop-in replacement for <code>pip</code> on top of being a <code>Cargo</code> for Python. The API is currently in no ways stable (as of 2024), but the benchmarks are incredibly promsing. Most notably, the development is backed by Astral.sh, a company formed by <a href="https://twitter.com/charliermarsh">Charlie Marsh</a> and the creators of the <a href="https://notes.crmarsh.com/python-tooling-could-be-much-much-faster"><code>ruff</code> linter</a>, a widely beloved tool that virtually supplanted all incumbants overnight when it was released in 2022.</p><p>Like <code>poetry</code>, this project supports <code>pyproject.toml</code>, and like <code>pip</code> it uses a backtracking approach for dependency resolution. Unlike <code>pip</code> this algorithm is written in Rust and is very fast! Benchmarks show that <code>uv</code> is at least order of magnitude faster than <code>poetry</code> <a href="https://github.com/astral-sh/uv/blob/main/BENCHMARKS.md">when it comes to dependency resolution</a>. I fully expect <code>uv</code> to supersede tools like <code>poetry</code> in the future as the project matures and API stabilizes, however as of this writing, it is more of a drop-in replacement for various <code>pip</code> tools than an opinionated build/packaging/versioning tool like <code>poetry</code> or <code>rye</code>,</p><p>One promising sign of <code>uv</code>’s performance and adoption is the usage of its libraries in other package managers like <code>pixi</code> and <code>rye</code>.</p><h3 id="verdict">Verdict</h3><p>Hopefully one day there will be a cohesive solution to bring Python package management to the simplicity and ergonomics seen in the Javascript and Rust development ecosystems. Until then, I would simply recommend that most data science/experimentalists stick to using <code>conda</code>, and production oriented folks use <code>pip</code> or <code>poetry</code> (with some mindfulness towards slow dependency resolve for complex projects with <code>poetry</code>).</p><p>Fingers crossed, though, I hope <code>uv</code> takes off and the Python community can one day coalesce around a single standardized tool! And there are some promising signs that tools like <code>pixi</code> can improve on <code>conda</code> and its wider scoped dependency management.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Geomys, a blueprint for a sustainable open-source maintenance firm (152 pts)]]></title>
            <link>https://words.filippo.io/dispatches/geomys/</link>
            <guid>40905849</guid>
            <pubDate>Mon, 08 Jul 2024 14:39:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://words.filippo.io/dispatches/geomys/">https://words.filippo.io/dispatches/geomys/</a>, See on <a href="https://news.ycombinator.com/item?id=40905849">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
        <span>
            <time datetime="2024-07-08">08 Jul 2024</time>
        </span>
        
        <section>
            <p>In 2022, I left Google in search of a sustainable approach to open source maintenance. A year later, I was a <a href="https://words.filippo.io/full-time-maintainer/">full-time independent professional open source maintainer</a>. Today I’m announcing the natural progression of that experiment: Geomys,<sup><a href="#fn1" id="fnref1">[1]</a></sup> a small firm of professional maintainers with a portfolio of critical Go projects.</p>
<p>I’m joined by <strong><a href="https://github.com/drakkan?ref=words.filippo.io">Nicola Murino</a></strong>, who's been maintaining <a href="https://pkg.go.dev/golang.org/x/crypto/ssh?ref=words.filippo.io">golang.org/x/crypto/ssh</a> for us since last summer<sup><a href="#fn2" id="fnref2">[2]</a></sup>, and by <strong><a href="https://honnef.co/?ref=words.filippo.io">Dominik Honnef</a></strong>, the maintainer of <a href="https://staticcheck.dev/?ref=words.filippo.io">Staticcheck</a> and <a href="https://gotraceui.dev/?ref=words.filippo.io">Gotraceui</a>. They are now Geomys’ first ✨ <em>Associate Maintainers</em>. ✨ The team is completed by <strong>Matilde Dal Zilio</strong>, our Administrative Director who's been helping make this journey possible from the beginning.</p>
<p><picture>
<source srcset="https://words.filippo.io/content/images/2024/07/geomys_base_negativo_TRASP-1.png" media="(prefers-color-scheme: dark)">
<img src="https://words.filippo.io/content/images/2024/07/geomys_base_positivo-copy-2.png" alt="The Geomys logo, an ink outline of a quaint Italian town on the side of a mountain, and below it a narrow paragraph styled like a dictionary entry for Geomys, with two definitions: 1 (Sci.) a genus of mammals often collectively referred to as the eastern pocket gophers; and 2 an organization of open source maintainers.">
</picture>
</p><p>Geomys launches with a robust portfolio of popular, foundational open-source Go projects:</p>
<ul>
<li>the <code>crypto/...</code> and <code>golang<span>.</span>org/x/crypto/...</code> packages in the Go standard library, co-maintained by me and the Google Go team</li>
<li>the <code>filippo<span>.</span>io/...</code> crypto packages, including <a href="https://filippo.io/edwards25519?ref=words.filippo.io">filippo.io/edwards25519</a></li>
<li><a href="https://pkg.go.dev/golang.org/x/crypto/ssh?ref=words.filippo.io">x/crypto/ssh</a>, the Go SSH implementation that runs many CI and deployment systems, maintained by Nicola</li>
<li><a href="https://staticcheck.dev/?ref=words.filippo.io">Staticcheck</a>, the high-signal low-noise static analyzer enabled by default in <a href="https://github.com/golang/vscode-go/wiki/tools?ref=words.filippo.io#staticcheck">vscode-go</a>, maintained by Dominik</li>
<li><a href="https://gotraceui.dev/?ref=words.filippo.io">Gotraceui</a>, a tool for visualizing and analyzing Go execution traces, maintained by Dominik</li>
<li><a href="https://github.com/microcosm-cc/bluemonday?ref=words.filippo.io">bluemonday</a>, the popular HTML sanitizer<sup><a href="#fn3" id="fnref3">[3]</a></sup></li>
<li><a href="https://age-encryption.org/?ref=words.filippo.io">age</a>, the file encryption tool, library, and format</li>
<li><a href="https://mkcert.dev/?ref=words.filippo.io">mkcert</a>, a tool to generate local development certificates</li>
</ul>
<p>Every company that was previously a client of mine is now a Geomys client, paying the same monthly retainer for the professional maintenance of their critical dependencies, and for direct access to the expertise of maintainers. What’s changed is that they are now supporting more projects, and have access to more maintainers.</p>
<p><img src="https://words.filippo.io/content/images/2024/07/logos-2024-1-.png" alt="The logos of Geomys’ first clients: Latacora, Interchain, Smallstep, Ava Labs, Teleport, SandboxAQ, Tailscale, and Charm" loading="lazy"></p>
<h2 id="how-we-got-here">How we got here</h2>
<p>I started with a rather non-consensus hypothesis: companies <em>want</em> to pay for their critical open source dependencies, but most projects are not selling them a legible way to do so. The last year has shown I was definitely onto something: I have signed four more major clients, and lost only one.<sup><a href="#fn4" id="fnref4">[4]</a></sup></p>
<p>The model and pitch also came into clearer focus. Truly, it’s simple: if you’re betting your business on a critical open source technology, you</p>
<ol>
<li>want it to be sustainably and predictably maintained; and</li>
<li>need occasional access to expertise that would be blisteringly expensive to acquire and retain.<sup><a href="#fn5" id="fnref5">[5]</a></sup></li>
</ol>
<p>Getting maintainers on retainer solves both problems for a fraction of the cost of a fully-loaded full-time engineer. From the maintainers’ point of view, it’s steady income to keep doing what they do best, and to join one more Slack Connect channel to answer high-leverage questions. It’s a great deal for both sides.</p>
<p>There were more lessons learned, which can be summarized as “yup, these are enterprise sales, checks out”, and “advisor is a better word than consultant but still not perfect”, and “we sorely need to build standard contract language”. I will write these up soon, but if you’re impatient you can watch <a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2000-maintaining-go-as-a-day-job-a-year-later/?ref=words.filippo.io">my recent FOSDEM talk</a>.</p>
<p>Still, even if the path may look straightforward in hindsight, it’s a new model and materializing it has been a challenge. I am incredibly grateful to my clients for believing in it and for making it work with me.</p>
<h2 id="what-next">What next</h2>
<p>Now, where do we go from here? How do I help this grow?</p>
<p>One way is by making it easier to do what I did, so that others can replicate it. Part of the point of doing it myself was clearing a path and making the life of future professional maintainers easier. That’s still part of the plan, but for “open source maintainer” to graduate to a mature profession, it needs to also be accessible to folks who can’t or don’t want to take on that risk, uncertainty, and extra workload.</p>
<p>From the onset, I envisioned small firms of professional maintainers with thematic portfolios, accommodating diverse maintainers and project sizes, just like the specialized firms of other professionals. I am now ready to try and build one.</p>
<p>I can tell you when I made up my mind, actually. It was with this message from a client:</p>
<blockquote>
<p>I noticed that there are two critical Go projects that we (and many others) rely on are not very actively maintained. […] Do you have any interest to become owners/co-maintainers of these projects? We'd be interested in sponsoring the maintenance, security audit, and hardening of those projects.</p>
</blockquote>
<p>They trust us to maintain open source projects as a reliable team of professionals, and they understand the importance of keeping their critical dependencies healthy, so they want us to get involved in more. That's what we'll do.<sup><a href="#fn6" id="fnref6">[6]</a></sup></p>
<h2 id="geomys">Geomys</h2>
<p>Alright, so how does Geomys work?</p>
<p>Clients still pay a fixed monthly retainer to ensure the professional maintenance of the whole portfolio, and to get access to the expertise of all of Geomys’ maintainers. It’s a package deal because in my experience it’s nearly impossible to rigorously apportion value to specific projects, and it would slow down the sales process. Also, it risks penalizing smaller projects, and I want every project in the Geomys portfolio to be sustainably funded. Instead, clients just have to decide if the portfolio as a whole is worth the sticker price.</p>
<p>Associate Maintainers get a stable, guaranteed income—significantly higher than what GitHub Sponsors generates—and a cut of future retainer revenue growth. There’s no formula, we negotiate and figure out numbers that make the Associate happy and that are sustainable for Geomys, based on the project and on how much time the maintainer wants to dedicate to them. I expect the percentage value of the revenue share to go down over the years, rewarding those who take the most risk by joining early.</p>
<p>The expectations of Associates are primarily to keep doing what they’re doing: they are already experienced maintainers who know how to keep their projects healthy, now with the freedom and peace of mind of sustainably dedicating proper part-time or full-time attention to them. We want them to work on their schedule, and in their own way. I don’t wish to micromanage anyone, nor would I be particularly good at it. I like to think of Geomys as enabling maintainers to do what they already do well.</p>
<p>We only ask that they join the Geomys Slack Connect channels of interested clients, and ideally that they work with our technical writer to publish the occasional article about what they’re up to. Geomys is not meant to overshadow the Associates’ profiles. Quite the opposite: its brand is as strong as the combination of those of all its maintainers.</p>
<p>Speaking of technical writers, Geomys covers and consolidates the cost of support staff, providing maintainers access to resources that would be hard to justify if working solo. Administration, legal, comms, and importantly, the sales process are all handled as a unit.</p>
<p>No copyright assignment. No locked in term. No GitHub ownership transfer. If we decide it’s not working, we go our own ways. Who knows, maybe one day our associates will spawn their own firms, like it happened with early information security consultancies.</p>
<p>We’ll grow slowly and organically, by recruiting Associate Maintainers when it makes sense (and we can sustainably afford it) and by adopting projects that are a good fit for the portfolio theme. We are taking no investments: this is all financed by my existing cash flow. Don’t get me wrong, I think this is going to make me money in the long term: as we grow we’ll appeal to more and more clients, and the marginal effort required by each client is sub-linear. However, Geomys will probably never be a unicorn, and after cutting in Associates I doubt I’ll get startup-founder rich. That’s ok, that was never the goal.</p>
<p>Speaking of which, Geomys will always focus on Go. It’s not aiming to become <em>Open Source Maintainers, Inc.</em>, a one-stop shop for maintenance services, just like you largely don’t go to <em>Lawyers, Inc.</em> for all your tax, immigration, criminal, and human rights law needs. That ensures our portfolio is highly relevant to our clients, and avoids diluting access too much: having an account manager join your Slack is not the same thing as having the actual maintainers. It also lets us concentrate on what we are all actually experts in. I hope others will set up similar firms in other ecosystems, and I will be here to help them however I can.</p>
<p>We’re just getting started and we’re still learning, so I expect things will change as we get more experience. Whatever final form it will take, I believe this is another step down the road of making “open source maintainer” a mature profession, and I’m really excited to find out where it leads.</p>
<p>You can follow along by <a href="https://filippo.io/newsletter?ref=words.filippo.io">subscribing to Maintainer Dispatches</a>, which will soon become Geomys Dispatches. You can also follow us <a href="https://bsky.app/profile/geomys.org?ref=words.filippo.io">on Bluesky at @geomys.org</a> or <a href="https://abyssdomain.expert/@geomys?ref=words.filippo.io">on Mastodon at @geomys@abyssdomain.expert</a>. If you want to reach out, you can email the hi@ alias of geomys<span>.</span>org.</p>
<h2 id="the-picture">The picture</h2>
<p>The plan for Geomys came together while I was driving the <a href="https://www.centopassi.net/?ref=words.filippo.io">Centopassi</a>, the 1600km-in-three-days motorcycle competition <a href="https://words.filippo.io/dispatches/xaes-256-gcm/#the-picture">I told you about in the last Cryptography Dispatches issue</a>. The intercom battery had ran out, so I was alone with my thoughts for a couple hours.<sup><a href="#fn7" id="fnref7">[7]</a></sup> This is the view that opened up right after that stretch of mountain roads. (Also, the Geomys logo is inspired by a different town we passed at the beginning of that segment!)</p>
<p><img src="https://words.filippo.io/content/images/2024/06/PXL_20240531_162125334.jpeg" alt="View of an Italian hillside town overlooking a lake. Clouds and sunlight play across the sky, casting dynamic shadows on green mountains. White and brown buildings cascade down the slope, contrasting with the lush vegetation and blue water below." loading="lazy"></p>
<hr>
<section>
<ol>
<li id="fn1"><p>It’s the scientific name of <a href="https://en.wikipedia.org/wiki/Geomys?ref=words.filippo.io">a genus of gophers</a>! <a href="#fnref1">↩︎</a></p>
</li>
<li id="fn2"><p>Nicola’s work on x/crypto/ssh has been a success, both for the project and for the business, even before Geomys was on the radar. We’ll talk about what he’s been up to soon. <a href="#fnref2">↩︎</a></p>
</li>
<li id="fn3"><p>This is news, too! We inherited it from the original author, who was ready to move on after serving the community for ten years. I volunteered to take over before I ever even thought of Geomys, because of how critical the package is in the Go ecosystem, but it’s a perfect fit for the portfolio. For now I am responsible for it, but we’re working to engage the perfect longer-term maintainer. More on this soon! <a href="#fnref3">↩︎</a></p>
</li>
<li id="fn4"><p>It didn’t even have anything to do with the services, we worked together very well for as long as practical, and parted on great terms. I would <em>not</em> have bet on such a low churn rate. Since this is a footnote I feel safe enough to say that despite knowing things were working out and clients looked happy, there were days I kinda braced for everyone to cancel at the one-year mark or something. <a href="#fnref4">↩︎</a></p>
</li>
<li id="fn5"><p>Imagine you want to build specialized expertise in the functioning of an open source project internally. Even assuming you have enough interesting work to recruit and retain the right people, you will need to hire at least two Senior Software Engineers, or you lose all institutional knowledge as soon as one leaves. Really, to avoid refocusing on hiring upon a departure, you need three. You’re looking at north of a million dollars per year, fully loaded. It’s a classic build vs. buy. When you frame it like that, my contracts are <em>cheap</em>. <a href="#fnref5">↩︎</a></p>
</li>
<li id="fn6"><p>We’re not ready to announce our plans for those projects, but we are talking with industry experts to rewrite part of them, to improve security and reduce the maintenance burden, and will reach out to the current owners to figure out next steps. It will make for an excellent case study and hopefully we’ll get to write about it! (That makes it four promised upcoming topics. I know. Don’t worry, the technical writer starts on the 15th.) <a href="#fnref6">↩︎</a></p>
</li>
<li id="fn7"><p>Or, rather, my teammate Harry decided I needed some time to think, and told me the intercom was still charging. He was spot on. <a href="#fnref7">↩︎</a></p>
</li>
</ol>
</section>

        </section>
    </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[For the first time in more than 150 years, Alberta's electricity is coal free (171 pts)]]></title>
            <link>https://www.theglobeandmail.com/canada/alberta/article-for-the-first-time-in-more-than-150-years-albertas-electricity-is-coal/</link>
            <guid>40905706</guid>
            <pubDate>Mon, 08 Jul 2024 14:23:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theglobeandmail.com/canada/alberta/article-for-the-first-time-in-more-than-150-years-albertas-electricity-is-coal/">https://www.theglobeandmail.com/canada/alberta/article-for-the-first-time-in-more-than-150-years-albertas-electricity-is-coal/</a>, See on <a href="https://news.ycombinator.com/item?id=40905706">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="content-gate" data-sophi-feature="article body"><figure><a href="https://www.theglobeandmail.com/resizer/v2/QKC5TQXHIZGSXF6QKOI6THRCKI.jpg?auth=eb580dbce4c76beaf22c1ef51fea442435e53654bfdebf72c561830fa9775ed3&amp;width=600&amp;quality=80" aria-haspopup="true" data-photo-viewer-index="0"><span>Open this photo in gallery:</span><p><img alt="" height="431" sizes="(min-width: 80rem) 940px,(min-width: 48rem) 690px,100vw" src="https://www.theglobeandmail.com/resizer/v2/QKC5TQXHIZGSXF6QKOI6THRCKI.jpg?auth=eb580dbce4c76beaf22c1ef51fea442435e53654bfdebf72c561830fa9775ed3&amp;width=600&amp;quality=80" srcset="https://www.theglobeandmail.com/resizer/v2/QKC5TQXHIZGSXF6QKOI6THRCKI.jpg?auth=eb580dbce4c76beaf22c1ef51fea442435e53654bfdebf72c561830fa9775ed3&amp;width=1200&amp;quality=80 1200w,https://www.theglobeandmail.com/resizer/v2/QKC5TQXHIZGSXF6QKOI6THRCKI.jpg?auth=eb580dbce4c76beaf22c1ef51fea442435e53654bfdebf72c561830fa9775ed3&amp;width=900&amp;quality=80 900w,https://www.theglobeandmail.com/resizer/v2/QKC5TQXHIZGSXF6QKOI6THRCKI.jpg?auth=eb580dbce4c76beaf22c1ef51fea442435e53654bfdebf72c561830fa9775ed3&amp;width=600&amp;quality=80 600w" width="600" fetchpriority="high"></p></a><figcaption><div><p><span>Unit 2 at the Genesee Generating Station west of Edmonton went offline on June 16. It was the last remaining electricity-generation facility in Alberta to rely exclusively on coal.</span><span>Capital Power</span></p></div></figcaption></figure><p>At 10:57 p.m. on Sunday, June 16, Alberta’s last coal plant went offline. An official announcement shortly followed, quietly signalling the end of coal-fired electricity in Alberta.</p><p>Many organizations contributed to this successful campaign through advocacy and research. The Canadian Association of Physicians for the Environment, the Lung Association and the Asthma Society of Canada were instrumental in highlighting the health impacts associated with air pollution from coal-fired electricity. The Pembina Institute, an Alberta-based clean-energy think tank, first intervened in a coal plant regulatory process in the late 1990s and, in 2009, published the first major proposal that showed the province could move to an unabated coal-free grid by 2030. Our research was ahead of its time and criticized as idealistic.</p><p><a href="https://www.theglobeandmail.com/topics/coal/" target="_blank">Coal </a>accounted for 80 per cent of Alberta’s electricity grid in the early 2000s and it still amounted to 60 per cent just 10 years ago. When phasing out coal was just an idea being batted around, many said it couldn’t be done. This is not dissimilar to the rhetoric today around decarbonizing the grid. But Alberta’s experience phasing out coal shows environmental progress of this magnitude is possible.</p><p>In 2012, then-prime minister Stephen Harper mandated a nationwide phase-out of coal by 2061. A far-off target date that, nonetheless, provided certainty to the provinces and got the ball rolling. In <a href="https://www.theglobeandmail.com/topics/alberta/" target="_blank">Alberta</a>, the Wildrose Party, then led by now United Conservative Party Premier <a href="https://www.theglobeandmail.com/topics/danielle-smith/" target="_blank">Danielle Smith</a>, included a coal phase-out commitment in its 2012 election platform.</p><p>When the New Democratic Party came to power after the 2015 provincial election, they got to work delivering on a plan to accelerate the elimination of coal. This included strengthening Alberta’s industrial carbon pricing system, a commitment to 30-per-cent renewables by 2030 and a target date for phasing out coal by 2030 – a target built through consultation with experts and industry. The current federal government made a similar national commitment in 2016.</p><p>At the time, there were concerns about the impact this would have on jobs. We learned that workers benefit from new investments in cleaner electricity – if included in strategic planning from the start. Federal and provincial programs to support workers during this transition were made available, while community economic diversification and growth in jobs in other sectors have helped to offset some of this change. Research also shows there are opportunities in clean energy, such as from increased land revenues and municipal taxes.</p><p>Phasing out coal in Alberta was supported by good policy design driven by carbon pricing and regulations with clear targets that offered necessary certainty to the industry and stakeholders. Rapidly growing, low-cost renewable energy further supported the phase-out, along with companies investing in gas-fired electricity. All these actions accelerated the transition away from coal at a faster rate than anticipated.</p><p>So, for the first time in 150 years, coal is no longer part of Alberta’s electricity mix. It is important to celebrate and reflect on these milestones, while recognizing there is no time to rest before redoubling our efforts and looking to what’s next.</p><p>As Pembina Institute’s latest research shows, many countries are striving to be the first to decarbonize their electricity system and a decarbonized electricity system by 2035 is within reach in Canada. It would save households hundreds of dollars on their electricity bills, enhance the competitiveness of our industries, and attract more investments into Canada as industries all look to secure clean power. But, as with coal, powerful incumbents want to maintain the status quo. Neither Albertans nor our climate can afford to be locked in to burning greenhouse gas-emitting natural gas when we have better, lower-cost alternatives.</p><p>Renewable energy is already the most cost-effective form of new electricity generation, and costs continue to drop. However, we still need to bring more wind and solar energy online, along with storage. Historically a leader in renewable energy, Alberta’s seven-month renewables moratorium, new restrictions unique to renewables, and a market restructuring have chilled project development. Restoring certainty should be a priority for the government. Alberta also already has enough existing and planned gas on its grid to meet its electricity needs.</p><p>The future is abundant, affordable, zero-emissions electricity. But we also need to invest in updating our infrastructure to meet our modern-day needs. Alberta is behind on demand-side management measures – a tactic that has reduced energy demand by 15 per cent in Ontario. Canada is also behind on building interties between jurisdictions – an approach that supports resilient systems and allows us to benefit from our complementary strengths across the country in hydro and other renewables.</p><p>We urgently need to continue to reduce emissions and we have the tools to achieve this. As the coal example shows, success takes time – sometimes over the course of decades – and relentless fact-based advocacy.</p><p><i>Chris Severson-Baker is the executive director of the Pembina Institute.</i></p></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I am building an open-source incident management platform (123 pts)]]></title>
            <link>https://github.com/incidentalhq/incidental</link>
            <guid>40905295</guid>
            <pubDate>Mon, 08 Jul 2024 13:34:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/incidentalhq/incidental">https://github.com/incidentalhq/incidental</a>, See on <a href="https://news.ycombinator.com/item?id=40905295">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/fbc82eba0cfbc93db47c166690dca1206eece844358e1f886261279b9a40ac5c/68747470733a2f2f696d6775722e636f6d2f63466d4d3432382e706e67"><img src="https://camo.githubusercontent.com/fbc82eba0cfbc93db47c166690dca1206eece844358e1f886261279b9a40ac5c/68747470733a2f2f696d6775722e636f6d2f63466d4d3432382e706e67" data-canonical-src="https://imgur.com/cFmM428.png"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0562f16a4ae7e35dae6087bf8b7805fb7e664a9e7e20ae6d163d94e56b94f32d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d3336373041303f7374796c653d666f722d7468652d6261646765266c6f676f3d707974686f6e266c6f676f436f6c6f723d666664643534"><img src="https://camo.githubusercontent.com/0562f16a4ae7e35dae6087bf8b7805fb7e664a9e7e20ae6d163d94e56b94f32d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d3336373041303f7374796c653d666f722d7468652d6261646765266c6f676f3d707974686f6e266c6f676f436f6c6f723d666664643534" alt="Python" data-canonical-src="https://img.shields.io/badge/python-3670A0?style=for-the-badge&amp;logo=python&amp;logoColor=ffdd54"></a>
<a href="https://pydantic.dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/0904b612e6c2c49262c3c14106e363aa71620123da2f2ac7054b30593ab7e6ee/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f707964616e7469632f707964616e7469632f6d61696e2f646f63732f62616467652f76322e6a736f6e" alt="Pydantic v2" data-canonical-src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/pydantic/pydantic/main/docs/badge/v2.json"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/6d56faef03529ac56db4d6f0945f8deff412674e8ce7a77791fd7e41b771ac4b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f466173744150492d3030353537313f7374796c653d666f722d7468652d6261646765266c6f676f3d66617374617069"><img src="https://camo.githubusercontent.com/6d56faef03529ac56db4d6f0945f8deff412674e8ce7a77791fd7e41b771ac4b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f466173744150492d3030353537313f7374796c653d666f722d7468652d6261646765266c6f676f3d66617374617069" alt="FastAPI" data-canonical-src="https://img.shields.io/badge/FastAPI-005571?style=for-the-badge&amp;logo=fastapi"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/3babc94d778f96441b3a66615fb5ee88c6ed04f174ed49b04df92b071a7d0e80/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656163742d2532333230323332612e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d7265616374266c6f676f436f6c6f723d253233363144414642"><img src="https://camo.githubusercontent.com/3babc94d778f96441b3a66615fb5ee88c6ed04f174ed49b04df92b071a7d0e80/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656163742d2532333230323332612e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d7265616374266c6f676f436f6c6f723d253233363144414642" alt="React" data-canonical-src="https://img.shields.io/badge/react-%2320232a.svg?style=for-the-badge&amp;logo=react&amp;logoColor=%2361DAFB"></a></p>
<blockquote>
<p dir="auto">Incidental is still in it's early stage of development, so there may be some teething problems along the way. Please let us know of any suggestions, bugs, ideas, etc using Github issues. We'll use your feedback to improve</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">Incidental is an open-source incident management platform</h2><a id="user-content-incidental-is-an-open-source-incident-management-platform" aria-label="Permalink: Incidental is an open-source incident management platform" href="#incidental-is-an-open-source-incident-management-platform"></a></p>
<p dir="auto">We're building Incidental to be a best in class platform for running your incidents.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul>
<li> ChatOps: Declare and manage your incidents all within your Slack workspace</li>
<li> Web UI: Easy to use web interface to manage your incidents</li>
<li> Custom fields</li>
<li> Custom workflows</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Quick start</h2><a id="user-content-quick-start" aria-label="Permalink: Quick start" href="#quick-start"></a></p>
<p dir="auto">Requirements:</p>
<ul dir="auto">
<li>docker</li>
<li>docker-compose</li>
<li>pnpm</li>
<li>node v18</li>
</ul>
<p dir="auto">To run locally for development:</p>
<ol dir="auto">
<li>Create a new slack application here: <a href="https://api.slack.com/apps" rel="nofollow">https://api.slack.com/apps</a>, use the slack-manifest.yml as a template and replace BASE_URL with the url where you are hosting your app.</li>
<li>Copy <code>backend/.env.example</code> to <code>backend/.env</code> and update the slack specific environment variables</li>
<li>Copy <code>frontend/.env.example</code> to <code>frontend/.env</code></li>
<li>In <code>backend</code> run <code>make run-dev</code></li>
<li>In <code>frontend</code> run <code>make run-dev</code></li>
<li>Goto <code>http://localhost:3000</code> and create an account</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Resources</h2><a id="user-content-resources" aria-label="Permalink: Resources" href="#resources"></a></p>
<ul dir="auto">
<li><a href="https://incidental.dev/" rel="nofollow">Website</a></li>
<li>If you have any questions, you can email <a href="mailto:hello@incidental.dev">hello@incidental.dev</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Open-sourced Webflow for your own app (292 pts)]]></title>
            <link>https://github.com/onlook-dev/studio</link>
            <guid>40904862</guid>
            <pubDate>Mon, 08 Jul 2024 12:36:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/onlook-dev/studio">https://github.com/onlook-dev/studio</a>, See on <a href="https://news.ycombinator.com/item?id=40904862">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text">




<p dir="auto"><a href="https://discord.gg/hERDfFZCsH" rel="nofollow"><img src="https://camo.githubusercontent.com/b34dddc0d45b289f47c2c99aa412b80a10ab31ada4098f32d84d1effb4a9f4a6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d446973636f72642d626c61636b3f6c6f676f3d646973636f726426636f6c6f72423d353535" alt="Discord" data-canonical-src="https://img.shields.io/badge/-Discord-black?logo=discord&amp;colorB=555"></a>
<a href="https://www.linkedin.com/company/onlook-dev" rel="nofollow"><img src="https://camo.githubusercontent.com/ae07a475769d11377cad3f842a91f70e631d8a59e05145c861ac1f747366daa4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c696e6b6564496e2d626c61636b2e7376673f6c6f676f3d6c696e6b6564696e26636f6c6f72423d353535" alt="LinkedIn" data-canonical-src="https://img.shields.io/badge/-LinkedIn-black.svg?logo=linkedin&amp;colorB=555"></a>
<a href="https://x.com/onlookdev" rel="nofollow"><img src="https://camo.githubusercontent.com/29c5ce1a545500c27435ab309753fd4f0681965c6784bfab139a5ed00f3a1416/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d547769747465722d626c61636b3f6c6f676f3d7826636f6c6f72423d353535" alt="Twitter" data-canonical-src="https://img.shields.io/badge/-Twitter-black?logo=x&amp;colorB=555"></a></p>
<p dir="auto"><a href="https://youtu.be/RSX_3EaO5eU" rel="nofollow"><img src="https://github.com/onlook-dev/studio/raw/main/readme/assets/brand.png" alt="Onlook Screen Shot"></a></p>
<div dir="auto">
<p dir="auto"><h3 tabindex="-1" dir="auto">Onlook</h3><a id="user-content-onlook" aria-label="Permalink: Onlook" href="#onlook"></a></p>
  
</div>

<details>
  <summary>Table of Contents</summary>
  <ol dir="auto">
    <li> <a href="#about">About</a> </li>
    <li><a href="#installation">Installation</a></li>
    <li><a href="#usage">Usage</a></li>
    <li><a href="#roadmap">Roadmap</a></li>
    <li><a href="#contributing">Contributing</a></li>
    <li><a href="#contact">Contact</a></li>
    <li><a href="#acknowledgments">Acknowledgments</a></li>
    <li><a href="#license">License</a></li>
  </ol>
</details>
<p dir="auto"><h2 tabindex="-1" dir="auto">About</h2><a id="user-content-about" aria-label="Permalink: About" href="#about"></a></p>
<p dir="auto">Build your UI visually. Supports any React + TailwindCSS app.</p>
<details open="">
  <summary>
    
    <span aria-label="Video description Onlook.Studio.Preview.mp4">Onlook.Studio.Preview.mp4</span>
    <span></span>
  </summary>

  <video src="https://private-user-images.githubusercontent.com/31864905/346226317-ea429342-03bc-40b2-8a94-d3955f638015.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjA0NTI5MDIsIm5iZiI6MTcyMDQ1MjYwMiwicGF0aCI6Ii8zMTg2NDkwNS8zNDYyMjYzMTctZWE0MjkzNDItMDNiYy00MGIyLThhOTQtZDM5NTVmNjM4MDE1Lm1wND9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA3MDglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNzA4VDE1MzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTMyZTU0YzhlOGU3Yzk4YWY4NTI2OTdkMWM5NTczZDQ5NjkwNmQxZWE4YmU2MWZkYWYwODhmZmY4M2EyNmYwZTgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.J5VCfUjrVrfM3KtGgU3LAixz7NL4JKvTVm9btF8Pa-g" data-canonical-src="https://private-user-images.githubusercontent.com/31864905/346226317-ea429342-03bc-40b2-8a94-d3955f638015.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjA0NTI5MDIsIm5iZiI6MTcyMDQ1MjYwMiwicGF0aCI6Ii8zMTg2NDkwNS8zNDYyMjYzMTctZWE0MjkzNDItMDNiYy00MGIyLThhOTQtZDM5NTVmNjM4MDE1Lm1wND9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA3MDglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNzA4VDE1MzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTMyZTU0YzhlOGU3Yzk4YWY4NTI2OTdkMWM5NTczZDQ5NjkwNmQxZWE4YmU2MWZkYWYwODhmZmY4M2EyNmYwZTgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.J5VCfUjrVrfM3KtGgU3LAixz7NL4JKvTVm9btF8Pa-g" controls="controls" muted="muted">

  </video>
</details>

<p dir="auto"><h3 tabindex="-1" dir="auto">Built With</h3><a id="user-content-built-with" aria-label="Permalink: Built With" href="#built-with"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Installation</h3><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<ol dir="auto">
<li>Clone the repo
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/onlook-dev/studio.git"><pre>git clone https://github.com/onlook-dev/studio.git</pre></div>
</li>
<li>Navigate to app folder

</li>
<li>Install NPM packages

</li>
<li>Run the project

</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Trying with demo project</h3><a id="user-content-trying-with-demo-project" aria-label="Permalink: Trying with demo project" href="#trying-with-demo-project"></a></p>
<p dir="auto">We have a few demo projects included in the <code>demos</code> folder. These inside are a standard React app and a Next.js React app.</p>
<p dir="auto">These are already set up with the Onlook plugins and have code written to them directly.</p>
<p dir="auto">To run, follow the following steps:</p>
<ol dir="auto">
<li>Run the demo project
<div dir="auto" data-snippet-clipboard-copy-content="cd demos/next &amp;&amp; npm install &amp;&amp; npm run dev"><pre><span>cd</span> demos/next <span>&amp;&amp;</span> npm install <span>&amp;&amp;</span> npm run dev</pre></div>
</li>
<li>Open Onlook studio</li>
<li>Point to <code>http://localhost:3000</code></li>
</ol>
<p dir="auto">For more examples, please refer to the <a href="https://docs.onlook.dev/" rel="nofollow">Documentation</a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using your own React project</h3><a id="user-content-using-your-own-react-project" aria-label="Permalink: Using your own React project" href="#using-your-own-react-project"></a></p>
<p dir="auto">To try with your own React + TailwindCSS project, follow the following steps:</p>
<ol dir="auto">
<li>Install the corresponding Onlook plugins for your React framework:
<ol dir="auto">
<li><a href="https://www.npmjs.com/package/@onlook/nextjs" rel="nofollow">Nextjs</a></li>
<li><a href="https://www.npmjs.com/package/@onlook/babel-plugin-react" rel="nofollow">Babel (webpack, esbuild, vite, etc.)</a></li>
</ol>
</li>
<li>Run your project in dev mode</li>
<li>Open Onlook studio to where your project is running locally. For example <code>http://localhost:3000</code></li>
</ol>
<p dir="auto">The code for the plugins are under <code>plugins</code>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Roadmap</h2><a id="user-content-roadmap" aria-label="Permalink: Roadmap" href="#roadmap"></a></p>
<ul>
<li> Browser</li>
<li> Editor</li>
<li> Write-to-code</li>
<li> Components</li>
<li> Variables</li>
<li> Code Editor</li>
</ul>
<p dir="auto">See the <a href="https://github.com/onlook-dev/studio/blob/main/readme/ROADMAP.md">roadmap</a> for a detailed list of project goals and improvements.</p>
<p dir="auto">See the <a href="https://github.com/onlook-dev/studio/issues">open issues</a> for a full list of proposed features (and known issues).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">If you have a suggestion that would make this better, please fork the repo and create a pull request. You can also <a href="https://github.com/onlook-dev/studio/issues">open issues</a>.</p>
<p dir="auto">See the <a href="https://github.com/onlook-dev/studio/blob/main/readme/CONTRIBUTING.md">CONTRIBUTING.md</a> for instructions and code of conduct.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contact</h2><a id="user-content-contact" aria-label="Permalink: Contact" href="#contact"></a></p>
<ul dir="auto">
<li>Onlook Team - <a href="https://twitter.com/onlookdev" rel="nofollow">@onlookdev</a> - <a href="mailto:contact@onlook.com">contact@onlook.com</a></li>
<li>Project Link: <a href="https://github.com/onlook-dev/studio">https://github.com/onlook-dev/studio</a></li>
<li>Website: <a href="https://onlook.dev/" rel="nofollow">https://onlook.dev</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Acknowledgments</h2><a id="user-content-acknowledgments" aria-label="Permalink: Acknowledgments" href="#acknowledgments"></a></p>
<ul dir="auto">
<li><a href="https://github.com/GoogleChromeLabs/ProjectVisBug">Project Visbug</a></li>
<li><a href="https://github.com/responsively-org/responsively-app">Responsively App</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Distributed under the Apache 2.0 License. See <a href="https://github.com/onlook-dev/studio/blob/main/LICENSE.md">LICENSE.md</a> for more information.</p>

</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Xpra: Persistent Remote Applications for X11 (185 pts)]]></title>
            <link>https://github.com/Xpra-org/xpra</link>
            <guid>40903870</guid>
            <pubDate>Mon, 08 Jul 2024 09:15:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Xpra-org/xpra">https://github.com/Xpra-org/xpra</a>, See on <a href="https://news.ycombinator.com/item?id=40903870">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><ol dir="auto">
<li><a href="#about">About</a></li>
<li><a href="#installation">Installation</a></li>
<li><a href="#usage">Usage</a></li>
<li><a href="#documentation">Documentation</a></li>
<li><a href="#help">Help</a></li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">About</h2><a id="user-content-about" aria-label="Permalink: About" href="#about"></a></p>
<p dir="auto">Xpra is known as <em>"screen for X"</em> : its <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Usage/Seamless.md">seamless mode</a> allows you to run X11 programs,
usually on a remote host, direct their display to your local machine,
and then to disconnect from these programs and reconnect from the same or another machine(s),
without losing any state.
Effectively giving you remote access to individual graphical applications.
It can also be used to
<a href="https://github.com/Xpra-org/xpra/blob/master/docs/Usage/Shadow.md">access existing desktop sessions</a> and <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Usage/Desktop.md">start remote desktop sessions</a>.</p>
<p dir="auto">Xpra is <em>open-source</em> (<a href="https://github.com/Xpra-org/xpra/blob/master/COPYING">GPLv2+</a>) with clients available for <a href="https://github.com/Xpra-org/xpra/wiki/Platforms">many supported platforms</a>
and the server includes a built-in <a href="https://github.com/Xpra-org/xpra-html5">HTML5 client</a>.
Xpra is usable over a wide variety of <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Network/README.md">network protocols</a> and does its best to adapt to any network conditions.</p>
<p dir="auto">Xpra forwards and synchronizes many extra desktop features which allows remote applications
to integrate transparently into the client's desktop environment:
<a href="https://github.com/Xpra-org/xpra/blob/master/docs/Features/Audio.md">audio input and output</a>, <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Features/Printing.md">printers</a>, <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Features/Clipboard.md">clipboard</a>,
<a href="https://github.com/Xpra-org/xpra/blob/master/docs/Features/System-Tray.md">system trays</a>, <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Features/Notifications.md">notifications</a>, <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Features/Webcam.md">webcams</a>, etc</p>
<p dir="auto">It can also <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Features/File-Transfers.md">open documents and URLs remotely</a>,
display <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Features/Image-Depth.md">high bit depth content</a>,
and it will try honour the <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Features/DPI.md">display's DPI</a>.</p>
<p dir="auto">Here's what a seamless session with two windows (an <code>xterm</code> and <code>glxspheres</code>)
looks like when attached from an MS Windows 11 desktop client:
<a target="_blank" rel="noopener noreferrer" href="https://github.com/Xpra-org/xpra/blob/master/docs/images/screenshots/win11-glxspheres.png"><img src="https://github.com/Xpra-org/xpra/raw/master/docs/images/screenshots/win11-glxspheres.png" alt="Windows11-client"></a>
(the windows may look like native windows, but they are running on a remote Linux server)</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Official stable downloads</h2><a id="user-content-official-stable-downloads" aria-label="Permalink: Official stable downloads" href="#official-stable-downloads"></a></p>
<ul dir="auto">
<li>Microsoft Windows: <a href="https://xpra.org/dists/windows/Xpra-x86_64_Setup.exe" rel="nofollow">EXE</a>, <a href="https://xpra.org/dists/windows/Xpra.zip" rel="nofollow">ZIP</a>, <a href="https://xpra.org/dists/windows/Xpra-x86_64.msi" rel="nofollow">MSI</a></li>
<li>MacOS <code>x86_64</code> <a href="https://xpra.org/dists/MacOS/x86_64/Xpra.dmg" rel="nofollow">DMG</a> / <a href="https://xpra.org/dists/MacOS%3E/x86_64/Xpra.pkg" rel="nofollow">PKG</a>, <code>arm64</code> <a href="https://xpra.org/dists/MacOS/arm64/Xpra.dmg" rel="nofollow">DMG</a> / <a href="https://xpra.org/dists/MacOS/arm64/Xpra.pkg" rel="nofollow">PKG</a></li>
<li>Linux: <a href="https://github.com/Xpra-org/xpra/wiki/Download#-for-rpm-distributions">RPM</a>, <a href="https://github.com/Xpra-org/xpra/wiki/Download#-for-debian-based-distributions">DEB</a></li>
</ul>
<p dir="auto">All the packages are signed. There are also <a href="https://xpra.org/beta" rel="nofollow">beta builds</a> available.
For more information, see <a href="https://github.com/Xpra-org/xpra/wiki/Download">xpra downloads</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Build from source</h2><a id="user-content-build-from-source" aria-label="Permalink: Build from source" href="#build-from-source"></a></p>
<div data-snippet-clipboard-copy-content="git clone https://github.com/Xpra-org/xpra; cd xpra
python3 ./setup.py install"><pre><code>git clone https://github.com/Xpra-org/xpra; cd xpra
python3 ./setup.py install
</code></pre></div>
<p dir="auto">For more details, see <a href="https://github.com/Xpra-org/xpra/tree/master/docs/Build">building from source</a>.
To contribute to the project, please try to use pull-requests and follow our <a href="https://github.com/Xpra-org/xpra/blob/master/CODE_OF_CONDUCT.md">code of conduct</a>.
Unit test status:
<a href="https://github.com/Xpra-org/xpra/actions/workflows/test.yml"><img src="https://github.com/Xpra-org/xpra/actions/workflows/test.yml/badge.svg" alt="xpra"></a></p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Initial requirements</h2><a id="user-content-initial-requirements" aria-label="Permalink: Initial requirements" href="#initial-requirements"></a></p>
<p dir="auto"><code>xpra</code> must be installed on the client and the host.</p>
<p dir="auto">You can use the <a href="https://github.com/Xpra-org/xpra-html5">html5 client</a> in which case xpra is only required on the host.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Seamless Mode</h2><a id="user-content-seamless-mode" aria-label="Permalink: Seamless Mode" href="#seamless-mode"></a></p>
<p dir="auto">Run <code>xterm</code> on a remote host, display and iteract with it locally (from the client machine):</p>
<div data-snippet-clipboard-copy-content="xpra start ssh://USER@HOST/ --start=xterm
# hint: xterm must be installed on the HOST."><pre><code>xpra start ssh://USER@HOST/ --start=xterm
# hint: xterm must be installed on the HOST.
</code></pre></div>
<p dir="auto">For more examples, see <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Usage/README.md">usage</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Shadow</h2><a id="user-content-shadow" aria-label="Permalink: Shadow" href="#shadow"></a></p>
<p dir="auto">View an existing desktop session running on a remote host:</p>
<div data-snippet-clipboard-copy-content="xpra shadow ssh://USER@HOST/"><pre><code>xpra shadow ssh://USER@HOST/
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Network Access</h2><a id="user-content-network-access" aria-label="Permalink: Network Access" href="#network-access"></a></p>
<p dir="auto">Xpra servers can support <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Network/README.md">many different types of connections</a> using a single TCP port:
<a href="https://github.com/Xpra-org/xpra/blob/master/docs/Network/SSL.md">SSL</a>, <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Network/SSH.md">SSH</a>, (secure) http / websockets, RFB, etc..<br>
Connections can be secured using <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Network/Encryption.md">encryption</a> and <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Usage/Authentication.md">many authentication modules</a>.<br>
Sessions can be automatically announced on LANs using <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Network/Multicast-DNS.md">multicast DNS</a>
so that clients can connect more easily using a GUI (ie: <code>xpra mdns-gui</code>).<br>
Its flexible <a href="https://github.com/Xpra-org/xpra/blob/master/docs/Usage/Proxy-Server.md">proxy server</a> can be used as a relay or front end for multiple server sessions.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Documentation</h2><a id="user-content-documentation" aria-label="Permalink: Documentation" href="#documentation"></a></p>
<p dir="auto">There is extensive documentation <a href="https://github.com/Xpra-org/xpra/blob/master/docs">right here</a> for the current development version.
This documentation is also included with each release.</p>
<p dir="auto">For more generic version-agnostic information, checkout <a href="https://github.com/Xpra-org/xpra/wiki">the wiki</a>.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Help</h2><a id="user-content-help" aria-label="Permalink: Help" href="#help"></a></p>
<p dir="auto">Make sure to check the <a href="https://github.com/Xpra-org/xpra/blob/master/docs/FAQ.md">FAQ</a>, your question may already be answered there.
You can ask your questions on the <a href="https://github.com/orgs/Xpra-org/discussions">github discussions</a>, or on the IRC channel <code>#xpra</code> on <a href="https://libera.chat/" rel="nofollow"><code>libera.chat</code></a>
or <a href="https://discord.gg/2mtC6cDv6Q" rel="nofollow">using discord</a>.
If you have hit a bug (sorry about that!), please see <a href="https://github.com/Xpra-org/xpra/wiki/Reporting-Bugs">reporting bugs</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NanoKVM: Affordable, Multifunctional, Nano RISC-V IP-KVM (103 pts)]]></title>
            <link>https://github.com/sipeed/NanoKVM</link>
            <guid>40903461</guid>
            <pubDate>Mon, 08 Jul 2024 07:59:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/sipeed/NanoKVM">https://github.com/sipeed/NanoKVM</a>, See on <a href="https://news.ycombinator.com/item?id=40903461">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">NanoKVM</h2><a id="user-content-nanokvm" aria-label="Permalink: NanoKVM" href="#nanokvm"></a></p>

<blockquote>
<p dir="auto">Your NanoKVM Power by RISC-V !
If you have any issues or suggestions, creating issue here, or tell us with <a href="https://maixhub.com/discussion/nanokvm" rel="nofollow">MaixHub Discussion</a>.</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">Introduction</h2><a id="user-content-introduction" aria-label="Permalink: Introduction" href="#introduction"></a></p>
<p dir="auto">Lichee NanoKVM is an IP-KVM product based on LicheeRV Nano, inheriting the extreme size and powerful features of LicheeRV Nano.
The Lichee NanoKVM is available in two versions:
NanoKVM Lite is a basic configuration that is suitable for individual users with certain DIY capabilities and enterprise users with bulk requirements.
The NanoKVM Full is a full version with a sophisticated case and complete accessories, as well as a built-in system mirror card that is ready to use at boot, and is recommended for individual users.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a6d7fd09b89c4d980660e9ee4fe20cff69c1b23ce27e1962ac27bcc29b79a00b/68747470733a2f2f77696b692e7369706565642e636f6d2f68617264776172652f7a682f6b766d2f6173736574732f4e616e6f4b564d2f315f696e74726f2f4e616e6f4b564d5f312e6a7067"><img src="https://camo.githubusercontent.com/a6d7fd09b89c4d980660e9ee4fe20cff69c1b23ce27e1962ac27bcc29b79a00b/68747470733a2f2f77696b692e7369706565642e636f6d2f68617264776172652f7a682f6b766d2f6173736574732f4e616e6f4b564d2f315f696e74726f2f4e616e6f4b564d5f312e6a7067" alt="" data-canonical-src="https://wiki.sipeed.com/hardware/zh/kvm/assets/NanoKVM/1_intro/NanoKVM_1.jpg"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tech Specs</h2><a id="user-content-tech-specs" aria-label="Permalink: Tech Specs" href="#tech-specs"></a></p>
<table>
<thead>
<tr>
<th>Products</th>
<th>NanoKVM (Lite)</th>
<th>NanoKVM (Full)</th>
<th>PiKVM V4</th>
</tr>
</thead>
<tbody>
<tr>
<td>Compute Units</td>
<td>LicheeRV Nano(RISCV)</td>
<td>LicheeRV Nano(RISCV)</td>
<td>CM4 (ARM)</td>
</tr>
<tr>
<td>Resolution</td>
<td>1080P @ 60fps</td>
<td>1080P @ 60fps</td>
<td>1080P @ 60fps</td>
</tr>
<tr>
<td>Video encoding</td>
<td>MJPEG, H264(developing)</td>
<td>MJPEG, H264(developing)</td>
<td>MJPEG, H264</td>
</tr>
<tr>
<td>Video delay</td>
<td>90～230ms</td>
<td>90～230ms</td>
<td>100～230ms</td>
</tr>
<tr>
<td>UEFI/BIOS</td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
</tr>
<tr>
<td>Virtual HID</td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
</tr>
<tr>
<td>Virtual CD-ROM</td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
</tr>
<tr>
<td>IPMI</td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
</tr>
<tr>
<td>Wake-on-LAN</td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
</tr>
<tr>
<td>ATX power control</td>
<td>None，Users can connect by their own</td>
<td>USB interface IO control board</td>
<td>RJ-45 interface IO control board</td>
</tr>
<tr>
<td>OLED</td>
<td>None，Users can connect by their own</td>
<td>128x64 0.96" white</td>
<td>128x32 0.91" white</td>
</tr>
<tr>
<td>UART</td>
<td>2</td>
<td>2</td>
<td>1</td>
</tr>
<tr>
<td>TF Card</td>
<td>None</td>
<td>✓</td>
<td>✓</td>
</tr>
<tr>
<td>Expansion</td>
<td>None</td>
<td>WiFi or PoE</td>
<td>WiFi/LTE</td>
</tr>
<tr>
<td>Power consumption</td>
<td>0.2A@5V</td>
<td>0.2A@5V</td>
<td>Peak 2.6A@5V</td>
</tr>
<tr>
<td>Power input</td>
<td>PC USB can be powered</td>
<td>PC USB or auxiliary power supply</td>
<td>DC 5V 3A power supply is required</td>
</tr>
<tr>
<td>Cooling</td>
<td>Silent fanless</td>
<td>Silent fanless</td>
<td>Fan cooling</td>
</tr>
<tr>
<td>Size</td>
<td>23x37x15mm <br> ～1/30 PiKVM V4 size</td>
<td>40x36x36mm <br> ～1/7 PiKVM V4 size</td>
<td>120x68x44mm</td>
</tr>
</tbody>
</table>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/35f7c01897d5c8bdf49707b87a258ae2fccbd631d1910d10d380863f34c5dabe/68747470733a2f2f77696b692e7369706565642e636f6d2f68617264776172652f7a682f6b766d2f6173736574732f4e616e6f4b564d2f315f696e74726f2f4e616e6f4b564d5f322e6a7067"><img src="https://camo.githubusercontent.com/35f7c01897d5c8bdf49707b87a258ae2fccbd631d1910d10d380863f34c5dabe/68747470733a2f2f77696b692e7369706565642e636f6d2f68617264776172652f7a682f6b766d2f6173736574732f4e616e6f4b564d2f315f696e74726f2f4e616e6f4b564d5f322e6a7067" alt="" data-canonical-src="https://wiki.sipeed.com/hardware/zh/kvm/assets/NanoKVM/1_intro/NanoKVM_2.jpg"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Hardware platform NanoKVM</h2><a id="user-content-hardware-platform-nanokvm" aria-label="Permalink: Hardware platform NanoKVM" href="#hardware-platform-nanokvm"></a></p>
<p dir="auto">NanoKVM is based on Sipeed <a href="https://wiki.sipeed.com/hardware/zh/lichee/RV_Nano/1_intro.html" rel="nofollow">LicheeRV Nano</a>，you can find specifications, schematics, and dimensional drawings <a href="http://cn.dl.sipeed.com/shareURL/LICHEE/LicheeRV_Nano" rel="nofollow">here</a>.</p>
<p dir="auto">The NanoKVM Lite is constructed by the LicheeRV Nano and HDMItoCSI board, and the NanoKVM FULL adds the NanoKVM-A/B board and shell to the NanoKVM Lite. The HDMItoCSI board is used to convert the HDMI signal; NanoKVM-A, including OLED, ATX control output (USB Type-C interface), auxiliary power supply and ATX power on/off and reset buttons; The NanoKVM-B is connected to the plate at one end and the computer at the other end is connected to the computer ATX-Pin, which is used to remotely control the power of the computer.</p>
<p dir="auto">The NanoKVM image is built on LicheeRV Nano SDK and MaixCDK, and is compatible with materials that use the LicheeRV Nano, opposite the KVM software cannot be used with the LicheeRV Nano or other SG2002 products. If you would like to build an HDMI input application on LicheeRV Nano or MaixCam, please contact us for technical support.</p>
<ul dir="auto">
<li><a href="https://cn.dl.sipeed.com/fileList/KVM/nanoKVM/HDK/02_Schematic/SCH_RV_Nano_KVM_A_30111.pdf" rel="nofollow">NanoKVM-A Schematic</a></li>
<li><a href="https://cn.dl.sipeed.com/fileList/KVM/nanoKVM/HDK/02_Schematic/SCH_HDMI_MIPI_31011.pdf" rel="nofollow">NanoKVM-B Schematic</a></li>
<li><a href="https://github.com/sipeed/NanoKVM/releases/tag/NanoKVM">NanoKVM img</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Community</h2><a id="user-content-community" aria-label="Permalink: Community" href="#community"></a></p>
<ul dir="auto">
<li><a href="https://maixhub.com/discussion/nanokvm" rel="nofollow">MaixHub Discussion</a></li>
<li>QQ group: 703230713</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zed Editor automatically downloads binaries and NPM packages without consent (222 pts)]]></title>
            <link>https://old.reddit.com/r/programming/comments/1dxmroj/zed_editor_automatically_downloads_binaries_and/</link>
            <guid>40902826</guid>
            <pubDate>Mon, 08 Jul 2024 05:26:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://old.reddit.com/r/programming/comments/1dxmroj/zed_editor_automatically_downloads_binaries_and/">https://old.reddit.com/r/programming/comments/1dxmroj/zed_editor_automatically_downloads_binaries_and/</a>, See on <a href="https://news.ycombinator.com/item?id=40902826">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>In order to provide support for language servers and various tools, Zed automatically downloads binaries from the internet without user approval.</p>

<blockquote>
<p>I noticed that Zed automatically downloads the NodeJS binary from <a href="https://nodejs.org/">https://nodejs.org</a> without asking or even informing the user about it. Right after starting it and opening a file, without doing anything else. And there’s no option to disable it.</p>
</blockquote>

<p>...</p>

<blockquote>
<p>EDIT: Now I found that it downloads (here) even some proprietary binary from <a href="https://supermaven.com/">https://supermaven.com</a>, i.e. unaudited and unauditable code, without any verification (except TLS)! At least this is not downloaded by default… I hope…</p>

<p>EDIT2: Zed also automatically downloads and executes prebuilt language servers for C#, Clojure, Deno, Elixir, Gleam, GLSL, Lua, Terraform, Toml and Zig. It automatically resolves the latest version available on GitHub and downloads it, again, without any verification.</p>
</blockquote>

<p>-- jirutka</p>

<p>The Zed Team does not currently plan to change their approach:</p>

<blockquote>
<p>We do not have plans to abandon this approach since there's so much code written to support various frontend tools already, that rewriting those in Rust will take an eternity, so not sure what is actionable here, hence closing.</p>
</blockquote>

<p>-- <a href="https://github.com/zed-industries/zed/issues/7054#issuecomment-1916315391">https://github.com/zed-industries/zed/issues/7054#issuecomment-1916315391</a></p>

<p>Edit:</p>

<p>I created an issue that hopes to improve the situation to an extent: <a href="https://github.com/zed-industries/zed/issues/13918">https://github.com/zed-industries/zed/issues/13918</a></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Boeing to plead guilty to criminal fraud charge stemming from 737 MAX crashes (506 pts)]]></title>
            <link>https://www.cnbc.com/2024/07/08/boeing-to-plead-guilty-to-criminal-fraud-charge-stemming-from-737-max-crashes.html</link>
            <guid>40902749</guid>
            <pubDate>Mon, 08 Jul 2024 05:06:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnbc.com/2024/07/08/boeing-to-plead-guilty-to-criminal-fraud-charge-stemming-from-737-max-crashes.html">https://www.cnbc.com/2024/07/08/boeing-to-plead-guilty-to-criminal-fraud-charge-stemming-from-737-max-crashes.html</a>, See on <a href="https://news.ycombinator.com/item?id=40902749">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="RegularArticle-ArticleBody-5" data-module="ArticleBody" data-test="articleBody-2" data-analytics="RegularArticle-articleBody-5-2"><div id="ArticleBody-InlineImage-105786668" data-test="InlineImage"><p>Rescuers work at the scene of an Ethiopian Airlines flight crash near Bishoftu, or Debre Zeit, south of Addis Ababa, Ethiopia, Monday, March 11, 2019.</p><p>Mulugeta Ayene | Reuters</p></div><div><p><span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-1"><a href="https://www.cnbc.com/quotes/BA/">Boeing</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> agreed to plead guilty to a criminal fraud charge tied to the fatal 737 Max crashes, the Justice Department said Sunday, months after U.S. prosecutors said the aerospace giant violated a <a href="https://www.cnbc.com/2021/01/07/doj-fines-boeing-over-2point5-billion-charges-it-with-fraud-conspiracy-over-737-max-crashes.html">2021 settlement</a> that shielded it from prosecution.</p><p>Under the deal, Boeing agreed to pay a $243.6 million fine. An independent compliance monitor would also be installed to oversee compliance at Boeing for three years during a probationary period. Boeing would also have to invest at least $455 million in compliance and safety programs, according to a U.S. prosecutors' court filing late Sunday. The plea deal requires the approval of a federal judge to take effect.</p><p>Boeing also agreed for the board of directors to meet with crash victims' family members, under the agreement.</p><p>The plea deal offer forced Boeing to decide between a guilty plea and the attached terms, or going to trial, just as the company was seeking to <a href="https://www.cnbc.com/2024/05/23/boeing-cfo-deliveries-cash-flow-max-crisis.html">turn a corner</a> in its <a href="https://www.cnbc.com/2024/05/30/boeing-faa-safety-plan.html">manufacturing and safety crises</a>, <a href="https://www.cnbc.com/2024/03/25/boeing-ceo-board-chair-commercial-head-out-737-max-crisis.html">pick a new CEO</a> and <a href="https://www.cnbc.com/2024/07/01/boeing-to-buy-spirit-aerosystems.html">acquire</a> its fuselage maker, <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-7"><a href="https://www.cnbc.com/quotes/SPR/">Spirit AeroSystems</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span>.</p><p>The guilty plea would brand the planemaker a felon and could complicate its ability to sell products to the U.S. government. About 32% of Boeing's nearly $78 billion in revenue last year came from its defense, space and security unit.</p><p>"We can confirm that we have reached an agreement in principle on terms of a resolution with the Justice Department, subject to the memorialization and approval of specific terms," Boeing said in a statement.</p><p>In May, the Justice Department said Boeing had <a href="https://www.cnbc.com/2024/05/14/justice-department-says-boeing-breached-2021-agreement-that-shielded-it-from-criminal-charges-over-737-max-crashes.html">violated the 2021 agreement</a>. Under that deferred prosecution agreement, Boeing agreed to pay $2.5 billion, including an original $243.6 million criminal fine, compensation to airlines and a $500 million fund for victims' family members.</p><p>That 2021 settlement was set to expire two days after a door panel blew out of a nearly new 737 Max 9 operated by <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-9"><a href="https://www.cnbc.com/quotes/ALK/">Alaska Airlines</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> on Jan. 5. While there were no serious injuries, the accident created a fresh safety crisis for Boeing.</p><p>The U.S. accused Boeing of conspiracy to defraud the government by <a href="https://www.cnbc.com/2020/01/09/boeing-releases-communications-on-737-max-simulators-it-calls-completely-unacceptable.html">misleading regulators</a> about its inclusion of a flight-control system on the Max that was later implicated in the two Max crashes — a Lion Air flight in October 2018 and an Ethiopian Airlines flight in March 2019. All 346 people on board the flights were killed.</p><p>U.S. prosecutors had told victims' family members on June 30 that they <a href="https://www.cnbc.com/2024/06/30/us-seeks-guilty-plea-from-boeing-over-737-max-crashes.html">planned to seek a guilty plea from Boeing</a>, a plan family attorneys called "a sweetheart deal."</p><p>Paul Cassell, a lawyer for victims' family members, said he plans to ask the federal judge on the case to reject the deal and "simply set the matter for a public trial, so that all the facts surrounding the case will be aired in a fair and open forum before a jury."</p></div><div id="Placeholder-ArticleBody-Video-107396835" data-test="VideoPlaceHolder" role="region" tabindex="0" data-vilynx-id="7000336413" aria-labelledby="Placeholder-ArticleBody-Video-107396835"><p><img src="https://image.cnbcfm.com/api/v1/image/107397085-1712261316858-GettyImages-1241993909.jpeg?v=1715779349&amp;w=750&amp;h=422&amp;vtcrop=y" alt="Why the Boeing 737 Max has been such a mess"><span></span><span></span></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Do Skis Get Blunt? (240 pts)]]></title>
            <link>https://brooker.co.za/misc-blog/2024/01/23/skis.html</link>
            <guid>40902740</guid>
            <pubDate>Mon, 08 Jul 2024 05:04:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://brooker.co.za/misc-blog/2024/01/23/skis.html">https://brooker.co.za/misc-blog/2024/01/23/skis.html</a>, See on <a href="https://news.ycombinator.com/item?id=40902740">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <h2>About Me</h2><p>
    My name is Marc Brooker. I've been writing code, reading code, and living vicariously through computers for as long as I can remember. I like to build things that work. I also dabble in machining, welding, cooking and skiing.</p><p>

    I'm currently an engineer at Amazon Web Services (AWS) in Seattle, where I work on databases, serverless, and serverless databases. Before that, I worked on EC2 and EBS.<br>

    All opinions are my own.

    This is my less-technical blog on non-work topics. For my main blog, visit <a href="https://brooker.co.za/blog/">https://brooker.co.za/blog/</a>.
    </p><h2>Links</h2>
    <p><a href="https://brooker.co.za/blog/publications.html">My Publications and Videos</a><br>
    <a rel="me" href="https://fediscience.org/@marcbrooker">@marcbrooker on Mastodon</a>
    <a href="https://twitter.com/MarcJBrooker">@MarcJBrooker on Twitter</a>
  </p></div><div id="post">


<p>Of course they do.</p>

<p>Last winter, I rode a ski lift alongside a guy who claimed to be a retired Olympic ski tuner. Ski tuning, he said, was all a scam. If you keep your skis dry between days out they’ll stay sharp for their entire lifetime. Don’t get him started on waxing. His specific claim was that skis get blunt from corrosion, and all you have to do is keep them dry.</p>

<p>That didn’t seem right. In fact, it sounded like complete bullshit. Snow and ice are quite abrasive stuff, and even hard steel gets abraded after a while. It’s not unusual for a ski day to include 30km or more of sliding the edges on ice crystals, and so it’s hard to believe that abrasion doesn’t happen.</p>

<p>Turns out it does. Because, luckily, I do keep my skis dry. And I own a very impressive inspection microscope (OK, it’s a $30 one off Amazon, but whatever).</p>

<p>Here’s what one of my ski edges looks like after ~4 days since the last tuning:</p>

<p><img src="https://brooker.co.za/misc-blog/images/edge_blunt.jpg" alt="Picture of a blunt ski edge"></p>

<p>If that doesn’t make any sense to you, I don’t blame you. Here’s what you’re looking at:</p>

<p><img src="https://brooker.co.za/misc-blog/images/edge_diagram.jpg" alt="Picture of a blunt ski edge"></p>

<p>The ideal ski edge is a metal strip with a ~88° angle between the base and the sidewall of the ski. Here, you can see the base edge, and a “corner” on the edge. I’m not a metallurgist, but this sure looks like abrasion damage to me. Corrosion damage is more pitted, more rounded, and a lot more uneven.</p>

<p>Further down the ski, thing get even worse.</p>

<p><img src="https://brooker.co.za/misc-blog/images/edge_damage.jpg" alt="Picture of a blunt ski edge"></p>

<p>Here, the edge isn’t only rounded over, but small chunks of metal have ripped out to create tiny serrations in the edge. I suspect this effect is why blunt skis can feel “grabby” in some snow conditions.</p>

<p>Luckily, fixing this kind of damage isn’t hard. I use a 3D printed jig with a 500 grit diamond stone. A couple of glides down the edge is enough to completely clear this up. This is what the edge looks like after basic tuning:</p>

<p><img src="https://brooker.co.za/misc-blog/images/edge_sharp.jpg" alt="Picture of a blunt ski edge"></p>

<p>Here, the “corner” has completely disappeared, and been replaced with a nice clean sharp angle. The serrations are gone, and the edge is clean. For me, a sharp ski is the difference between fun and terror on an icy day. But maybe I’m in the pocket of Big Ski Tuning.</p>

<p>Knife sharpening nerds will notice that I’ve raised a significant burr here. I believe that race tuners will strop that burr off, but I’ve never noticed a difference (and, let’s be honest, the level of my skiing isn’t exactly “Olympic downhill”).</p>

</div></div>]]></description>
        </item>
    </channel>
</rss>