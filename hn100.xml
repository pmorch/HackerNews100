<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 25 Aug 2025 03:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Ghrc.io Appears to Be Malicious (251 pts)]]></title>
            <link>https://bmitch.net/blog/2025-08-22-ghrc-appears-malicious/</link>
            <guid>45008740</guid>
            <pubDate>Sun, 24 Aug 2025 23:27:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bmitch.net/blog/2025-08-22-ghrc-appears-malicious/">https://bmitch.net/blog/2025-08-22-ghrc-appears-malicious/</a>, See on <a href="https://news.ycombinator.com/item?id=45008740">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div><p>A simple typo of ghcr.io to ghrc.io would normally be a small goof.
You’d typically get a 404 or similar error, finally work out the issue, fix it, and move along.
But in this case, that typo appears to be doing something very malicious, stealing GitHub credentials.</p><h2 id="whats-ghcrio">What’s ghcr.io?</h2><p>First, a quick bit of background.
<code>ghcr.io</code> is an OCI conformant registry for container images and OCI artifacts used by a lot of projects.
It’s part of GitHub and is a very popular image and artifact repository used by open source projects.</p><h2 id="ghrcio-is-just-a-default-nginx">ghrc.io Is Just a Default Nginx</h2><p>At first glance, <code>ghrc.io</code> is just a default nginx install:</p><div><pre tabindex="0"><code data-lang="shell"><span><span>$ curl -i https://ghrc.io/
</span></span><span><span>HTTP/2 <span>200</span>
</span></span><span><span>server: nginx
</span></span><span><span>date: Fri, <span>22</span> Aug <span>2025</span> 17:58:01 GMT
</span></span><span><span>content-type: text/html
</span></span><span><span>content-length: <span>615</span>
</span></span><span><span>last-modified: Tue, <span>23</span> Apr <span>2024</span> 14:04:32 GMT
</span></span><span><span>etag: <span>"6627bff0-267"</span>
</span></span><span><span>strict-transport-security: max-age<span>=</span>31536000<span>;</span> includeSubDomains
</span></span><span><span>accept-ranges: bytes
</span></span><span><span>
</span></span><span><span>&lt;!DOCTYPE html&gt;
</span></span><span><span>&lt;html&gt;
</span></span><span><span>&lt;head&gt;
</span></span><span><span>&lt;title&gt;Welcome to nginx!&lt;/title&gt;
</span></span><span><span>&lt;style&gt;
</span></span><span><span>html <span>{</span> color-scheme: light dark<span>;</span> <span>}</span>
</span></span><span><span>body <span>{</span> width: 35em<span>;</span> margin: <span>0</span> auto<span>;</span>
</span></span><span><span>font-family: Tahoma, Verdana, Arial, sans-serif<span>;</span> <span>}</span>
</span></span><span><span>&lt;/style&gt;
</span></span><span><span>&lt;/head&gt;
</span></span><span><span>&lt;body&gt;
</span></span><span><span>&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;
</span></span><span><span>&lt;p&gt;If you see this page, the nginx web server is successfully installed and
</span></span><span><span>working. Further configuration is required.&lt;/p&gt;
</span></span><span><span>
</span></span><span><span>&lt;p&gt;For online documentation and support please refer to
</span></span><span><span>&lt;a <span>href</span><span>=</span><span>"http://nginx.org/"</span>&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;
</span></span><span><span>Commercial support is available at
</span></span><span><span>&lt;a <span>href</span><span>=</span><span>"http://nginx.com/"</span>&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;
</span></span><span><span>
</span></span><span><span>&lt;p&gt;&lt;em&gt;Thank you <span>for</span> using nginx.&lt;/em&gt;&lt;/p&gt;
</span></span><span><span>&lt;/body&gt;
</span></span><span><span>&lt;/html&gt;
</span></span></code></pre></div><p>Even checking other links gives a typical 404 error:</p><div><pre tabindex="0"><code data-lang="shell"><span><span>$ curl -i https://ghrc.io/404/
</span></span><span><span>HTTP/2 <span>404</span>
</span></span><span><span>server: nginx
</span></span><span><span>date: Fri, <span>22</span> Aug <span>2025</span> 17:58:04 GMT
</span></span><span><span>content-type: text/html
</span></span><span><span>content-length: <span>146</span>
</span></span><span><span>strict-transport-security: max-age<span>=</span>31536000<span>;</span> includeSubDomains
</span></span><span><span>
</span></span><span><span>&lt;html&gt;
</span></span><span><span>&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;
</span></span><span><span>&lt;body&gt;
</span></span><span><span>&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;
</span></span><span><span>&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;
</span></span><span><span>&lt;/body&gt;
</span></span><span><span>&lt;/html&gt;
</span></span></code></pre></div><h2 id="why-is-it-malicious">Why Is It Malicious?</h2><p>The concerning part comes in when looking at the OCI API’s.
Those are all under the <code>/v2/</code> prefix for legacy reasons.
Looking at <code>ghrc.io</code>, suddenly it’s not acting like a default nginx install anymore:</p><div><pre tabindex="0"><code data-lang="shell"><span><span>$ curl -i https://ghrc.io/v2/
</span></span><span><span>HTTP/2 <span>401</span>
</span></span><span><span>server: nginx
</span></span><span><span>date: Fri, <span>22</span> Aug <span>2025</span> 17:56:36 GMT
</span></span><span><span>content-type: application/json
</span></span><span><span>content-length: <span>72</span>
</span></span><span><span>www-authenticate: Bearer <span>realm</span><span>=</span><span>"https://ghrc.io/token"</span>
</span></span><span><span>
</span></span><span><span><span>{</span><span>"errors"</span>:<span>[{</span><span>"code"</span>:<span>"UNAUTHORIZED"</span>,<span>"message"</span>:<span>"authentication required"</span><span>}]}</span>
</span></span></code></pre></div><p>Compare that to some other registries and you’ll see the 401 status, <code>www-authenticate</code> header, and error message look very similar:</p><div><pre tabindex="0"><code data-lang="shell"><span><span>$ curl -i https://ghcr.io/v2/
</span></span><span><span>HTTP/2 <span>401</span>
</span></span><span><span>content-type: application/json
</span></span><span><span>docker-distribution-api-version: registry/2.0
</span></span><span><span>strict-transport-security: max-age<span>=</span>63072000<span>;</span> includeSubDomains<span>;</span> preload
</span></span><span><span>www-authenticate: Bearer <span>realm</span><span>=</span><span>"https://ghcr.io/token"</span>,service<span>=</span><span>"ghcr.io"</span>,scope<span>=</span><span>"repository:user/image:pull"</span>
</span></span><span><span>date: Fri, <span>22</span> Aug <span>2025</span> 17:51:36 GMT
</span></span><span><span>content-length: <span>73</span>
</span></span><span><span>x-github-request-id: DA46:5B047:5EDB5D:66E5C2:68A8AE28
</span></span><span><span>
</span></span><span><span><span>{</span><span>"errors"</span>:<span>[{</span><span>"code"</span>:<span>"UNAUTHORIZED"</span>,<span>"message"</span>:<span>"authentication required"</span><span>}]}</span>
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="shell"><span><span>$ curl -i https://registry-1.docker.io/v2/
</span></span><span><span>HTTP/2 <span>401</span>
</span></span><span><span>date: Sun, <span>24</span> Aug <span>2025</span> 17:31:43 GMT
</span></span><span><span>content-type: application/json
</span></span><span><span>content-length: <span>87</span>
</span></span><span><span>docker-distribution-api-version: registry/2.0
</span></span><span><span>www-authenticate: Bearer <span>realm</span><span>=</span><span>"https://auth.docker.io/token"</span>,service<span>=</span><span>"registry.docker.io"</span>
</span></span><span><span>strict-transport-security: max-age<span>=</span><span>31536000</span>
</span></span><span><span>
</span></span><span><span><span>{</span><span>"errors"</span>:<span>[{</span><span>"code"</span>:<span>"UNAUTHORIZED"</span>,<span>"message"</span>:<span>"authentication required"</span>,<span>"detail"</span>:null<span>}]}</span>
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="shell"><span><span>$ curl -i https://quay.io/v2/
</span></span><span><span>HTTP/2 <span>401</span>
</span></span><span><span>date: Sun, <span>24</span> Aug <span>2025</span> 17:32:18 GMT
</span></span><span><span>content-type: text/html<span>;</span> <span>charset</span><span>=</span>utf-8
</span></span><span><span>content-length: <span>4</span>
</span></span><span><span>server: nginx/1.22.1
</span></span><span><span>www-authenticate: Bearer <span>realm</span><span>=</span><span>"https://quay.io/v2/auth"</span>,service<span>=</span><span>"quay.io"</span>
</span></span><span><span>docker-distribution-api-version: registry/2.0
</span></span><span><span>
</span></span><span><span><span>true</span>
</span></span></code></pre></div><p>The (optional) error message is defined by the <a href="https://github.com/opencontainers/distribution-spec/">OCI Distribution Spec</a> along with the various OCI APIs under the <code>/v2/</code> prefix.
Authentication hasn’t been standardized by OCI, yet, but projects all use the <a href="https://distribution.github.io/distribution/spec/auth/token/">token auth workflow</a> currently defined by the distribution project.</p><p><strong>The important detail is this <code>www-authenticate</code> header is telling OCI clients, like Docker, containerd, podman, and the various CRI’s used by Kubernetes, to send their user credentials to that <code>https://ghrc.io/token</code> API.</strong>
There is no legitimate reason to configure this header on a default nginx install, and other parts of the server indicate that this is not a container registry.</p><h2 id="whats-the-risk">What’s the Risk?</h2><p>All signs point to this being a credential stealing typo-squatting attack.
Credentials would be stolen only if you stored credentials for the <code>ghrc.io</code> registry, because clients won’t send credentials for a different host to <code>ghcr.io</code>.</p><p>Some scenarios that would result in credentials being leaked include:</p><ul><li>Running <code>docker login ghrc.io</code>.</li><li>A GitHub action with <code>uses: docker/login-action</code> and with <code>registry: ghrc.io</code>.</li><li>Creating a Kubernetes secret with registry credentials for <code>ghrc.io</code> and then trying to pull an image from that typoed host.</li></ul><p>Simply trying to push or pull an image to this registry without logging in will not leak credentials and will not leak any data other than your repository name.
These commands default to trying to acquire an anonymous token, which will quickly fail.</p><h2 id="what-should-you-do">What Should You Do?</h2><p>If you’ve ever accidentally performed the login to the wrong server, you should change your password, revoke any PATs you used, and look for any potentially malicious activity in your GitHub account.
An attacker could use it to push malicious images to your <code>ghcr.io</code> repositories, or they may gain access to your GitHub account directly depending on what login credentials were used.</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Starship's Tenth Flight Test (114 pts)]]></title>
            <link>https://www.spacex.com/launches/starship-flight-10</link>
            <guid>45007907</guid>
            <pubDate>Sun, 24 Aug 2025 21:22:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.spacex.com/launches/starship-flight-10">https://www.spacex.com/launches/starship-flight-10</a>, See on <a href="https://news.ycombinator.com/item?id=45007907">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Halt and Catch Fire Syllabus (2021) (105 pts)]]></title>
            <link>https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/</link>
            <guid>45007414</guid>
            <pubDate>Sun, 24 Aug 2025 20:19:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/">https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/</a>, See on <a href="https://news.ycombinator.com/item?id=45007414">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="about">
      <h2 id="readme">README</h2>

<p>This site features a curriculum developed around the television series, <a href="https://www.google.com/search?channel=fs&amp;client=ubuntu&amp;q=halt+and+catch+fire">Halt and Catch Fire</a> (2014-2017), a fictional narrative about people working in tech during the 1980s-1990s.</p>

<p>The intent is for this website to be used by self-forming small groups that want to create a “watching club” (like a book club) and discuss aspects of technology history that are featured in this series.</p>

<p>There are 15 classes, for a “semester-long” course:<br>
~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/01.html">#01</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/02.html">#02</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/03.html">#03</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/04.html">#04</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/05.html">#05</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/06.html">#06</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/07.html">#07</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/08.html">#08</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/09.html">#09</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/10.html">#10</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/11.html">#11</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/12.html">#12</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/13.html">#13</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/14.html">#14</a> ~ <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/classes/15.html">#15</a> ~</p>

<p><strong>Prefer a <a href="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/HaltAndCatchFireSyllabus.pdf">PDF</a>?</strong></p>

<p>Brief guide to class layout:</p>
<ul>
  <li><strong>Apéritifs</strong> Casual viewing presented before gathering. This is entertainment; not required viewing.</li>
  <li><strong>RFC as koan</strong> A Request for Comments from the Internet Engineering Task Force, for reflecting on.</li>
  <li><strong>Emulation as koan</strong> An emulated computer in the browser, also for reflection.</li>
  <li><strong>Themes</strong> Recommendations for topics to be discussed.</li>
  <li><strong>Prompts</strong> Questions to inspire conversation when gathering.</li>
  <li><strong>Readings</strong> Related material for deeper thinking on the class topic.</li>
  <li><strong>Description</strong> Brief summary of what’s going on in the episodes and how it relates to tech history at large / the weekly topic.</li>
  <li><strong>Episode summaries</strong> A link to summaries of the episodes that should be watched prior to meeting as a group. Watching each episode is not required; if time doesn’t allow, refer to the summaries. Content warnings are provided for relevant episodes. If there are specific concerns, this can determine which episodes should be skipped or anticipated before viewing.</li>
</ul>

<p><br>
Curriculum and website designed by <a href="https://ashleyblewer.com/">Ashley Blewer</a>.<br>
see also ↠ <a href="https://github.com/ablwr/halt-and-catch-fire-syllabus">source code &amp; site metadata</a></p>

<p><img src="https://bits.ashleyblewer.com/halt-and-catch-fire-syllabus/assets/img/construction.gif" alt="under construction"></p>

    	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Everything I know about good API design (202 pts)]]></title>
            <link>https://www.seangoedecke.com/good-api-design/</link>
            <guid>45006801</guid>
            <pubDate>Sun, 24 Aug 2025 19:10:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.seangoedecke.com/good-api-design/">https://www.seangoedecke.com/good-api-design/</a>, See on <a href="https://news.ycombinator.com/item?id=45006801">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><p>Most of what modern software engineers do<sup id="fnref-1"><a href="#fn-1">1</a></sup> involves APIs: public interfaces for communicating with a program, like <a href="https://www.twilio.com/docs/iam/api/account#fetch-an-account-resource">this one</a> from Twilio. I’ve spent a <em>lot</em> of time working with APIs, both building and using them. I’ve written public APIs for third-party developers, private APIs for internal use (or consumption by a single frontend page), REST and GraphQL APIs, and even non-network interfaces like the ones for command-line tools.</p>
<p>Like <a href="https://www.seangoedecke.com/good-system-design">designing good software systems</a>, I think much of the advice floating around about API design is too fancy. People get wrapped up in what “real” REST is, or whether HATEOAS is a good idea, and so on. This post is my attempt at writing down everything I know about designing good APIs.</p>
<h3>Designing APIs is a balance between familiarity and flexibility</h3>
<p>If this is true about systems - and it is - it’s even more true about APIs: <strong>good APIs are boring</strong>. An API that’s interesting is a bad API (or at least it would be a better one if it were less interesting). For the developers who build them, APIs are complex products that they spend time designing and polishing. But for the developers who use them, APIs are tools that they use in order to accomplish some other goal. Any time they spend thinking about the API instead of about that goal is time wasted. From their perspective, an ideal API should be so familiar that they will more or less know how to use it before they read any documentation<sup id="fnref-2"><a href="#fn-2">2</a></sup>.</p>
<p>However, one big difference from most software systems is that <strong>APIs are hard to change</strong>. Once you publish an API and people start using it, any change to the interface will break your users’ software. Of course, it is <em>possible</em> to make changes. But (as I’ll say below) each change imposes a serious cost: every time you force your users to update their software, they will give serious thought to using a different API that’s more stable. That gives API-builders a strong incentive to design carefully and get it right the first time. </p>
<p>This tension leads to an interesting dynamic for engineers who build APIs. On the one hand, they want to build the simplest API possible. On the other hand, they want to do clever things to maintain flexibility long-term. In broad strokes, API design is about finding a balance between those two incompatible goals.</p>
<h3>WE DO NOT BREAK USERSPACE</h3>
<p>What happens when you need to make changes to your API? Additive changes - for instance, putting a new field in the response - are typically fine. There are some consumers which will blow up if they’re getting more fields than they expect, but in my view this is irresponsible. You should expect API consumers to ignore unexpected fields (sensible JSON-parsing typed languages do this by default).</p>
<p>However, you can’t <em>remove</em> or change the types of fields. You can’t change the structure of existing fields (for instance, moving <code>user.address</code> to <code>user.details.address</code> in the JSON response). If you do, every single piece of code that relies on those fields will immediately break. Consumers of that code will report it as a bug, and the maintainers of the code will (when they figure it out) be rightfully furious that you deliberately broke their software.</p>
<p>The principle here is something like Linus Torvalds’ famous slogan <a href="https://lore.kernel.org/all/CA+55aFy98A+LJK4+GWMcbzaa1zsPBRo76q+ioEjbx-uaMKH6Uw@mail.gmail.com/">WE DO NOT BREAK USERSPACE</a>. As a maintainer of an API, you have something like a sacred duty to avoid harming your downstream consumers. The norm is so strong because so much software depends on so many APIs (which in turn depend on upstream APIs, and so on). One careless API maintainer far enough upstream can break hundreds or thousands of pieces of software downstream.</p>
<p>You should never make a change to an API just because it’d be neater, or because it’s a little awkward. The “referer” header in the HTTP specification is famously a misspelling of the word “referrer”, but they haven’t changed it, <em>because we do not break userspace</em>.</p>
<h3>Changing APIs without breaking userspace</h3>
<p>It’s honestly hard to think of examples where an API really <em>needs</em> a breaking change. But sometimes the technical value of a change is high enough that you decide to bite the bullet and do it anyway. In those cases, how can you change your API responsibly? The answer is <em>versioning</em>.</p>
<p>API versioning means “serve both the old and new version of your API at the same time”. Existing consumers can continue to use the old version, while new consumers can opt-in to the new one. The easiest way to do this is to include something like <code>/v1/</code> in your API url. OpenAI’s chat API is at <a href="https://platform.openai.com/docs/api-reference/chat/create">v1/chat/completions</a>, so if they ever want to totally rework the structure, they can do that in <code>v2/chat/completions</code> and keep the existing consumers working.</p>
<p>Once you have the new and old version working simultaneously, you can start telling users to upgrade to the new version. This takes a <em>long</em> time: months or even years. Even with banners on the website, docs, custom emails, and headers on the API response, when you finally remove the old version, you will still get a lot of angry users upset that you’ve broken their software. But at least you’ll have done what you can about it.</p>
<p>There are lots of other ways to do API versioning. The Stripe API does versioning in a <a href="https://docs.stripe.com/api/versioning">header</a>, and lets accounts set their default version in the UI. But the principle is the same - any consumers of the Stripe API can be confident that Stripe won’t decide to break their applications, and they can upgrade versions at their own pace.</p>
<p><strong>I don’t like API versioning.</strong> I think at best it’s a necessary evil, but it’s still evil. It’s confusing to users, who can’t easily search for your API docs without making sure that the version selector matches the version they’re using. And it’s a <em>nightmare</em> for maintainers. If you have thirty API endpoints, every new version you add introduces thirty new endpoints to maintain. You will rapidly end up with hundreds of APIs that all need testing, debugging, and customer support.</p>
<p>Of course, adding a new version doesn’t double the size of your codebase. Any sensible API versioning backend will have something like a translation layer that can turn a response into any of your public API versions. Stripe has <a href="https://stripe.com/blog/api-versioning">something like this</a>: the actual business logic is the same for all versions, so only the parameter serializing and deserializing needs to be aware of versioning. However, abstractions like that will always leak. See this 2017 <a href="https://news.ycombinator.com/item?id=13711171">HN comment</a> from a Stripe employee, pointing out that some versioning changes need conditional logic throughout the “core code”. </p>
<p>In short, <strong>you should only use API versioning as a last resort</strong>.</p>
<h3>The success of your API depends entirely on the product</h3>
<p>An API by itself doesn’t do anything. It’s a layer between the user and the thing they actually want. For the <a href="https://platform.openai.com/docs/api-reference/chat/create">OpenAI API</a>, that’s the ability to do inference with a language model. For the <a href="https://www.twilio.com/docs/iam/api/account#fetch-an-account-resource">Twilio API</a>, that’s sending SMS messages. Nobody uses an API because the API itself is so elegantly designed. They use it to <em>interact with your product</em>. <strong>If your product is valuable enough, users will flock to even a terrible API.</strong></p>
<p>This is why some of the most popular APIs are a nightmare to use. Facebook and Jira are famous for having appalling APIs, but it doesn’t matter - if you want to integrate with Facebook or Jira, which you do, you need to spend the time to figure them out. Sure, it would be nice if those companies had a better API. But why invest the time and money into improving it when people are going to integrate with it anyway? Writing good APIs is <em>really hard</em>.</p>
<p>I’m going to give a lot of concrete advice in the rest of this post about how to write good APIs. But it’s worth remembering that most of the time it doesn’t matter. If your product is desirable, any barely-functional API will do; if it isn’t, it doesn’t matter how good your API is. API quality is a marginal feature: it only matters when a consumer is choosing between two basically-equivalent products.</p>
<p>Incidentally, the <em>presence</em> of an API is an entirely different story. If one product doesn’t have an API at all, that’s a big problem. Technical users will demand some way to integrate with the software they’re buying via code.</p>
<h3>Poorly-designed products will usually have bad APIs</h3>
<p>A technically-great API can’t save a product that nobody wants to use. However, <strong>a technically-poor product can make it nearly impossible to build an elegant API</strong>. That’s because API design usually tracks the “basic resources” of a product (for instance, Jira’s resources would be <a href="https://developer.atlassian.com/cloud/jira/platform/rest/v2/api-group-issues/#api-rest-api-2-issue-issueidorkey-get">issues</a>, <a href="https://developer.atlassian.com/cloud/jira/platform/rest/v2/api-group-projects/#api-rest-api-2-project-projectidorkey-get">projects</a>, <a href="https://developer.atlassian.com/cloud/jira/platform/rest/v2/api-group-users/#api-rest-api-2-user-get">users</a> and so on). When those resources are set up awkwardly, that makes the API awkward as well.</p>
<p>As an example, consider a blogging system that stored comments in-memory as a linked list (each comment has a <code>next</code> field that points to the next comment in the thread). This is a terrible way to store comments. The naive way to bolt a REST API onto this system would be to have an interface that looks like this:</p>
<p><code>GET /comments/1 -&gt; { id: 1, body: "...", next_comment_id: 2 }</code></p>
<p>Or even worse, like this:</p>
<p><code>GET /comments -&gt; {body: "...", next_comment: { body: "...", next_comment: {...}}}</code></p>
<p>This might seem like a silly example, because in practice you’d just iterate over the linked list and return an array of comments in the API response. But even if you’re willing to do that extra work, how far down do you iterate? In a thread with thousands of comments, is it just impossible to fetch any comment after the first few hundred? Will your comment-fetching API have to use a background job, forcing the interface to turn into something like:</p>
<p><code>POST /comments/fetch_job/1 -&gt; { job_id: 589 }</code>
<code>GET /comments_job/589 -&gt; { status: 'complete', comments: [...] }</code></p>
<p>This is how some of the worst APIs happen. Technical constraints that can be cleverly hidden in the UI are laid bare in the API, forcing API consumers to understand far more of the system design than they should reasonably have to.</p>
<h3>Authentication</h3>
<p><strong>You should let people use your APIs with a long-lived API key.</strong> Yes, API keys are not as secure as various forms of short-lived credentials, like OAuth (which you should probably also support). It doesn’t matter. Every integration with your API begins life as a simple script, and using an API key is the easiest way to get a simple script working. You want to make it as easy as possible for engineers to get started.</p>
<p>Although consumers of an API will (almost by definition) be writing code, <strong>many of your users will not be professional engineers</strong>. They may be salespeople, product managers, students, hobbyists, and so on. When you’re an engineer at a tech company building an API, it’s easy to imagine that you’re building it for other people like yourself: full-time, competent, professional software engineers. But you’re not. You’re building it for a very wide cross-section of people, many of whom are not comfortable writing or reading code. If your API requires users to do anything difficult - like performing an OAuth handshake - many of those users will struggle.</p>
<h3>Idempotency and retries</h3>
<p>When an API request succeeds, you know it did what it tried to do. What about when it fails? Some types of failure tell you what happened: a 422 typically means it failed during the request-validation stage, before any action was taken<sup id="fnref-3"><a href="#fn-3">3</a></sup>. But what about a 500? What about a timeout?</p>
<p>This is important for API operations that <em>take action</em>. If you’re hitting some Jira API to create an issue comment, and the request 500s or times out, should you retry? You don’t know for sure whether the comment has been created or not, since the error might be happening after that operation. If you retry, you might end up posting two comments. This is even more important when there’s more at stake than a Jira comment. What if you’re transferring some amount of money? What if you’re dispensing medication?</p>
<p>The solution is <em>idempotency</em>, which is a fancy word for “the request should be safely retriable without creating duplicates”. The standard way to do this is to support an “idempotency key” in the request (say, some user-defined string in a parameter or header). When the API server gets a “create comment” request with an idempotency key, it first looks to see if it’s seen this idempotency key before. If so, it does nothing; otherwise it goes and creates the comment, then saves the idempotency key. That way you can send as many retries as you like, as long as they’ve all got the same idempotency key - the operation will only be performed once.</p>
<p>How should you store the key? I’ve seen people store it in some durable, resource-specific way (e.g. as a column on the <code>comments</code> table), but I don’t think that’s strictly necessary. The easiest way is to put them in Redis or some similar key/value store (with the idempotency key as the key). UUIDs are unique enough that you don’t need to scope them by user, but you may as well. If you’re not dealing with payments, you can even expire them after a few hours, since most retries happen immediately.</p>
<p>Do you need idempotency keys for every request? Well, you don’t need them for read requests, since double-reads are harmless. You also typically<sup id="fnref-4"><a href="#fn-4">4</a></sup> don’t need them for delete requests, since if you’re deleting by resource ID, that ID serves as the idempotency key. Think about it - if you send three <code>DELETE comments/32</code> requests in a row, it won’t delete three comments. The first successful request will delete the comment with ID 32, and the remaining requests will 404 when they can’t find the already-deleted comment.</p>
<p>For most cases, idempotency should be optional. Like I said above, you want to make sure that your API is accessible to non-engineers (who often find idempotency a tricky concept). In the grand scheme of things, getting more people on your API is more important than the occasional duplicated comment from users who didn’t read the documentation. </p>
<h3>Safety and rate limiting</h3>
<p>Users who are interacting with your UI are limited by the speed of their hands. If there’s some flow that’s expensive for your backend to serve, a malicious or careless user can only trigger that flow as fast as they can click through it. APIs are different. <strong>Any operation you expose via an API can be called at the speed of code.</strong></p>
<p>Be careful about APIs that do a lot of work in a single request. When I worked at Zendesk, we had an API that let you fan out notifications to all the users of a particular app. Some enterprising third-party developer<sup id="fnref-5"><a href="#fn-5">5</a></sup> used this to build an in-app chat system, where every message sent a notification to every other user on the account. For accounts with more than a handful of active users, this reliably killed the Apps backend server.</p>
<p>We didn’t anticipate people building a chat app on top of this API. But once it was out there, people did what they wanted with it. I’ve been in many, many incident calls where the root cause was some hand-rolled customer integration that was doing something silly, like:</p>
<ul>
<li>Creating and deleting the same records hundreds of times per-minute, for no real reason</li>
<li>Polling a big <code>/index</code> endpoint with no delay in between, forever</li>
<li>Importing or exporting a ton of data without backing off in case of errors</li>
</ul>
<p><strong>You should put a rate limit on your API, with tighter limits for expensive operations.</strong> It’s also sensible to reserve the ability to temporarily disable the API for specific customers, so you can take the pressure off your backend system if it’s really getting hammered.</p>
<p>Include rate limiting metadata in your API responses. <code>X-Limit-Remaining</code> and <code>Retry-After</code> headers give clients the information they need to be respectful consumers of your API, and allow you to set stricter rate limits than you would otherwise be able to.</p>
<h3>Pagination</h3>
<p>Almost every API has to serve a long list of records. Sometimes a very long list (for instance, the Zendesk <code>/tickets</code> API can contain millions of tickets). How can you serve those records?</p>
<p>A naive <code>SELECT * FROM tickets WHERE...</code> approach will blow out your available memory (if not in the database, then in the application layer where you’re trying to serialize this million-item list). You just can’t serve every ticket in a single request. Instead, you have to <em>paginate</em>.</p>
<p>The simplest way to paginate is to use pages (or “offsets”, more generically). When you hit <code>/tickets</code>, you get the first ten tickets on the account. To get more, you have to hit either <code>/tickets?page=2</code> or <code>/tickets?offset=20</code>. This is easy to implement, since the server can just add <code>OFFSET 20 LIMIT 10</code> to the end of the database query. But it doesn’t scale to really high numbers of records. Relational databases have to count through your offset every time, so each page you serve gets a little slower than the last page. By the time your offset is in the hundreds of thousands, it’s a real problem.</p>
<p>The solution is “cursor-based pagination”. Instead of passing <code>offset=20</code> to get the second page, you take the final ticket on the first page (say, with ID 32) and pass <code>cursor=32</code>. The API will then return the next ten tickets, <em>starting with ticket number 32</em>. Instead of using <code>OFFSET</code>, the query becomes <code>WHERE id &gt; cursor ORDER BY id LIMIT 10</code>. That query is equally quick whether you’re at the start of the collection or hundreds of thousands of tickets in, because the database can instantly find the (indexed) position of your cursor ticket instead of having to count through the entire offset.</p>
<p><strong>You should always use cursor-based pagination for datasets that might end up being large.</strong> Even though it’s harder for consumers to grasp, when you run into scaling problems you might <em>have</em> to change to cursor-based pagination anyway, and the cost of making that change is often very high. However, I think it’s fine to use page or offset-based pagination otherwise.</p>
<p>It’s usually wise to include a <code>next_page</code> field in your API list responses. That saves consumers having to figure out the next page number or cursor on their own.</p>
<h3>Optional fields and GraphQL</h3>
<p><strong>If parts of your API response are expensive to serve, make them optional.</strong> For instance, if fetching the user’s subscription status requires your backend to make an API call, consider making your <code>/users/:id</code> endpoint not return subscription unless the request passes an <code>include_subscription</code> parameter. As a more general approach, you could have an <code>includes</code> array parameter with all your optional fields. This is often used for records that are associated (for instance, you could pass <code>includes: [posts]</code> to your user request to get the user’s posts in the response).</p>
<p>This is part of the idea behind <a href="https://graphql.org/">GraphQL</a>, a style of API where instead of hitting different endpoints per-operation, you craft a single query with all the data you need and the backend figures it out<sup id="fnref-6"><a href="#fn-6">6</a></sup>.</p>
<p><strong>I don’t like GraphQL very much</strong>, for three reasons. First, it’s completely impenetrable to non-engineers (and to many engineers). Once you learn it, it’s a tool like any other, but the barrier to entry is just so much higher than <code>GET /users/1</code>. Second, I don’t like giving users the freedom to craft arbitrary queries. It makes caching more complicated and increases the number of edge cases you have to think about. Third, in my experience the backend implementation is so much more fiddly than your standard REST API.</p>
<p>I don’t feel <em>that</em> strongly about my dislike of GraphQL. I’ve spent maybe six months working with it in various contexts and am far from an expert. I’m sure there are use cases where it buys you enough flexibility to be worth the costs. But right now I’d only use it where I absolutely had to.</p>
<h3>Internal APIs</h3>
<p>Everything I’ve said so far is about <em>public</em> APIs. What about internal APIs: APIs that are only used by your colleagues at a particular company? Some of the assumptions I’ve made above don’t hold for internal APIs. For instance, your consumers are usually professional software engineers. It’s also possible to safely make breaking changes, because (a) you often have an order of magnitude fewer users, and (b) you have the ability to go in and ship new code for all of those users. You can require as complex a form of authentication as you want.</p>
<p>However, internal APIs can still be a source of incidents, and still need to be idempotent for key operations.</p>
<h3>Summary</h3>
<ul>
<li>APIs are hard to build because they’re inflexible but must be easy to adopt</li>
<li>API maintainers’ primary duty is to NOT BREAK USERSPACE. Never make breaking changes to public APIs</li>
<li>Versioning your API lets you make changes, but imposes significant implementation and adoption barriers</li>
<li>If your product is valuable enough, it doesn’t really matter how good your API is, people will use it anyway</li>
<li>If your product is badly-designed enough, it doesn’t matter how carefully you design your API, it will likely suck</li>
<li>Your API should support simple API keys for authentication, because many of your users will not be professional engineers</li>
<li>Requests that take action (particularly high-stakes action like payments) should include some kind of idempotency key to make retries safe</li>
<li>Your API will always be a source of incidents. Make sure you have rate limits and killswitches in place</li>
<li>Use cursor-based pagination for datasets that might end up being very large</li>
<li>Make expensive fields optional and off-by-default, but (in my opinion) GraphQL is overkill</li>
<li>Internal APIs are different in some ways (because your consumers are very different)</li>
</ul>
<p>What haven’t I written about? I haven’t written much about REST vs SOAP, or JSON vs XML, because I don’t think that stuff is particularly important. I like REST and JSON, but I don’t feel strongly about it. I also haven’t mentioned OpenAPI schema - it’s a useful tool, but I think it’s also fine to just write your API docs in Markdown if you want.</p>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Paracetamol disrupts early embryogenesis by cell cycle inhibition (161 pts)]]></title>
            <link>https://academic.oup.com/humrep/advance-article/doi/10.1093/humrep/deaf116/8234396</link>
            <guid>45006296</guid>
            <pubDate>Sun, 24 Aug 2025 18:02:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://academic.oup.com/humrep/advance-article/doi/10.1093/humrep/deaf116/8234396">https://academic.oup.com/humrep/advance-article/doi/10.1093/humrep/deaf116/8234396</a>, See on <a href="https://news.ycombinator.com/item?id=45006296">Hacker News</a></p>
Couldn't get https://academic.oup.com/humrep/advance-article/doi/10.1093/humrep/deaf116/8234396: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Is 4chan the perfect Pirate Bay poster child to justify wider UK site-blocking? (176 pts)]]></title>
            <link>https://torrentfreak.com/uk-govt-finds-ideal-pirate-bay-poster-boy-to-sell-blocking-of-non-pirate-sites-250824/</link>
            <guid>45005545</guid>
            <pubDate>Sun, 24 Aug 2025 16:30:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://torrentfreak.com/uk-govt-finds-ideal-pirate-bay-poster-boy-to-sell-blocking-of-non-pirate-sites-250824/">https://torrentfreak.com/uk-govt-finds-ideal-pirate-bay-poster-boy-to-sell-blocking-of-non-pirate-sites-250824/</a>, See on <a href="https://news.ycombinator.com/item?id=45005545">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p><picture loading="lazy" decoding="async">
<source type="image/webp" srcset="https://torrentfreak.com/images/trollfac-uk.png.webp 724w, https://torrentfreak.com/images/trollfac-uk-300x188.png.webp 300w" sizes="auto, (max-width: 300px) 100vw, 300px">
<img loading="lazy" decoding="async" src="https://torrentfreak.com/images/trollfac-uk.png" alt="" width="300" height="188" srcset="https://torrentfreak.com/images/trollfac-uk.png 724w, https://torrentfreak.com/images/trollfac-uk-300x188.png 300w, https://torrentfreak.com/images/trollfac-uk-600x376.png 600w, https://torrentfreak.com/images/trollfac-uk-150x94.png 150w" sizes="auto, (max-width: 300px) 100vw, 300px">
</picture>
The UK’s Online Safety Act (OSA) claims to protect children but has faced fierce criticism for censoring everything from legitimate news reporting from war zones, to critical discussion of the Act itself.</p>
<p>There are many problems, not least a requirement for adults in the UK to prove their identity when accessing sites meeting criteria dictated by Ofcom. Large sites, many in the United States, face huge fines for allowing children to access age-inappropriate content. </p>
<p>This means that unverified adults are treated as children with the same content restrictions. Ofcom’s global threats have led some sites to conclude that the safest option is to ban UK visitors altogether.</p>
<h2>Degraded Internet Experience? Hand Over Your Papers</h2>
<p>Successive UK governments understood there were risks, or rather, they were informed of the risks and went ahead regardless. Whether the internet is any safer is almost impossible to measure; the same can’t be said for the hours wasted or lost, and the corresponding increases in blood pressure, all thanks to artificial restrictions that punish those who value their privacy. </p>
<p>Guided by the mantra, “a problem shared is a problem halved” those who air their OSA grievances in public find themselves presented with a 50/50 ultimatum. According to Peter Kyle, Secretary of State for Science, Innovation and Technology, those with an opinion on the legislation fall into two categories: </p>
<p>1) People who want to protect kids and 2) People who side with online predators.</p>
<center><picture loading="lazy" decoding="async">
<source type="image/webp" srcset="https://torrentfreak.com/images/osa-predator.png.webp 498w, https://torrentfreak.com/images/osa-predator-300x109.png.webp 300w" sizes="auto, (max-width: 498px) 100vw, 498px">
<img loading="lazy" decoding="async" src="https://torrentfreak.com/images/osa-predator.png" alt="osa-predator" width="498" height="181" srcset="https://torrentfreak.com/images/osa-predator.png 498w, https://torrentfreak.com/images/osa-predator-300x109.png 300w, https://torrentfreak.com/images/osa-predator-150x55.png 150w" sizes="auto, (max-width: 498px) 100vw, 498px">
</picture>
</center>
<h2>You’re Either With Us, or Against Us</h2>
<p>The imposition of a binary choice is a well-worn political tactic. It aims to shut down dissent and/or discredit the speaker; in this case ordinary members of the public branded ‘predator enablers’ by a government minister.</p>
<p>VPN users warranted direct advice; no allegations this time but a suggestion that, just like the unverified, VPN users aren’t helping to keep children safe.</p>
<center><em>Just verify your age (impossible without verifying your identity)</em><picture loading="lazy" decoding="async">
<source type="image/webp" srcset="https://torrentfreak.com/images/vpn-uk.png.webp 676w, https://torrentfreak.com/images/vpn-uk-300x85.png.webp 300w" sizes="auto, (max-width: 676px) 100vw, 676px">
<img loading="lazy" decoding="async" src="https://torrentfreak.com/images/vpn-uk.png" alt="vpn-uk" width="676" height="192" srcset="https://torrentfreak.com/images/vpn-uk.png 676w, https://torrentfreak.com/images/vpn-uk-300x85.png 300w, https://torrentfreak.com/images/vpn-uk-600x170.png 600w, https://torrentfreak.com/images/vpn-uk-150x43.png 150w" sizes="auto, (max-width: 676px) 100vw, 676px">
</picture>
</center>
<p>In the event that the above fails to silence the troublemakers, the UK government has recently been discovered filing requests with overseas companies to delete posts made by UK citizens’ criticizing certain aspects of government policy. A United States Department of State <a href="https://www.state.gov/reports/2024-country-reports-on-human-rights-practices/united-kingdom">report</a>, criticizing the UK government for degrading the right to freedom of expression, remains stubbornly accessible. </p>
<h2>No Border Too Distant</h2>
<p>Of course, attempting to silence the State Department would be a truly historic mistake, especially in the wake of comments made by Metropolitan Police Commissioner Sir Mark Rowley. </p>
<p>Last summer Rowley threatened to “throw the full force of the law at people” for unacceptable social media comments, warning that “whether you’re in this country committing crimes on the streets or committing crimes from further afield online, we will come after you.”</p>
<p>Widely interpreted as a warning to citizens of the United States, and by extension a direct threat to their constitutional rights, U.S. officials intervened. Congressman Keith Self warned that “harassing Americans will do absolutely nothing to resolve Great Britain’s internal issues” and risks damaging the US/UK alliance.</p>
<p>As the United States attempts to introduce home turf pirate site blocking from <a href="https://torrentfreak.com/new-bill-aims-to-block-foreign-pirate-sites-in-the-u-s-250129/">three</a> <a href="https://torrentfreak.com/second-u-s-piracyiblocking-bill-incoming-mpa-google-verizon-meet-to-discuss-250227/">different</a> <a href="https://torrentfreak.com/unveiled-new-u-s-anti-piracy-bill-acpa-proposes-alternative-site-blocking-path/">directions</a>, the UK government is already preparing to take site blocking to the next level. </p>
<p>Thanks to provisions in the Online Safety Act, the UK will soon begin drawing on 15 years of pirate site blocking experiences, to block regular sites that fail to meet their ‘obligations’ as laid out <a href="https://www.gov.uk/government/publications/online-safety-act-explainer/online-safety-act-explainer">in the legislation</a>.</p>
<h2>Site Blocking For The People?</h2>
<p>Ofcom’s stated purpose is to serve the public, within duties defined by parliament, independently, using funds provided by the companies in the sectors it regulates. As regulator, Ofcom doesn’t need permission from the public to start blocking sites, although general approval would likely make the process less controversial. </p>
<p>With the whole world watching and various platforms waiting to see if Ofcom’s threats of global enforcement can be ignored, there’s little room for error.</p>
<p>In the current climate any blocking could be perceived as a further restriction of free speech, or even straightforward censorship. The conundrum is how to make site blocking appear less like censorship while satisfying the people that it’s absolutely necessary. It’s a big ask, but not impossible.</p>
<h2>The Pirate Bay: Default Poster Child of Piracy Blocking</h2>
<p>In 2012 when the major recording labels obtained their first UK site blocking injunction on copyright grounds, they could’ve picked a no-name MP3 download site and walked away with an easy win. They picked The Pirate Bay instead, and not just because of the site’s profile and unparalleled infamy. </p>
<p><strong>#1 Perfect Candidate:</strong> After years in the headlines, The Pirate Bay’s belligerent stance was well understood and at this point, helpfully predictable. First, there was never any chance of TPB spontaneously complying with copyright law. Since blocking injunctions came to exist for the purpose of tackling uncooperative entities, no candidate was more perfectly matched than the most uncooperative pirate site in the world.</p>
<p><strong>#2 No Appearance? No Win:</strong> The odds of TPB’s operators making an appearance at the High Court in London were always vanishingly slim, but not just for the reasons one might expect. The site’s alleged operators were never served in the blocking case, and they never appeared at the hearing. In fact, the site wasn’t represented in any way, at any stage. </p>
<p><strong>#3 If Done Right, No Defense:</strong> After it was determined that the law didn’t require TPB’s operators to be named as defendants, they were effectively excluded from the process. The ISPs were the defendants in this “no fault” case, and when they were ordered to block TPB, the terms of the injunction were those previously agreed in discussion with the labels.</p>
<p>Describing this as an ‘easy win’ would be a disservice to the work put in by the labels. Nothing was left to chance and the end result spoke for itself. The Pirate Bay and its function needed no introduction, and among supporters and opponents alike, acceptance that it exists for the purpose of infringement on a massive scale, was never in doubt. </p>
<p>That the process was entirely one-sided was neither here nor there. Nobody was surprised by the choice of target or the eventual outcome; in the bigger picture, controversy was kept to a minimum.</p>
<p>Now it’s Ofcom’s turn to convince, or simply inform the public, that blocking non-pirate sites benefits everyone. On paper, the notorious  4chan forum ticks all the right boxes and presumably no match for the well-resourced Ofcom.</p>
<h2>4chan: Poster Child of Regular Site Blocking?</h2>
<p>One can only imagine the reaction at 4chan when Ofcom advised that it had new obligations under a foreign law. Section 9(2) of the Act requires certain platforms to undertake an illegal content risk assessment, to assess the risks of users encountering ‘illegal’ content on their platforms. </p>
<p>The requirements were <a href="https://www.ofcom.org.uk/siteassets/resources/documents/consultations/category-1-10-weeks/185926-consultation-online-safety-information-guidance/associated-documents/draft-illegal-content-codes-of-practice-for-user-to-user-services.pdf?v=392429">published</a> February 24, 2025, and the ‘Illegal Content Duties’ came into effect on 17 March 2025. On April 14, Ofcom issued a ‘formal information notice’ to 4chan demanding a copy of its Illegal Content Risk Assessment and not surprisingly, received no reply.</p>
<p>In common with The Pirate Bay, 4chan’s non-compliance was <em>almost</em> inevitable. When accompanied by threats to disrupt its business, including by obtaining a court order to compel payment processors, advertisers, and hosting providers to stop doing business, while levying fines of £20,000 per day, non-compliance was effectively guaranteed. In this respect, 4chan’s response was entirely predictable.</p>
<h2>4chan Unlikely to Attend Court in the UK</h2>
<p>As highlighted previously, cases are more easily won when it’s understood that the defendant won’t make an appearance. We can safely assume that 4chan has the same number of tickets to London as it does Illegal Content Risk Assessments so, no, it will not attend. So far, so good then? Not exactly. </p>
<p>Ofcom launched its 4chan investigation on June 10, to determine compliance with various duties under the Online Safety Act. </p>
<p>Did 4chan adequately respond to a statutory information request? Has it conducted and kept a record of its illegal content risk assessment? Is it complying with its safety duties, including protecting its users from ‘illegal’ content? </p>
<p>Ofcom currently has no answers to these questions but did learn something new this week. Not only has 4chan hired extremely capable attorneys in response to Ofcom’s threats, any action by Ofcom will be resisted in the United States under Federal Law. </p>
<h2>New Jurisdiction, Different Ball Game</h2>
<p>Since Ofcom’s threats are viewed as undermining 4chan’s constitutional rights, its attorneys believe that no court in America will allow foreign penalties to be enforced in the United States. Once people begin speaking about that, the damage will have been done.</p>
<center><picture loading="lazy" decoding="async">
<source type="image/webp" srcset="https://torrentfreak.com/images/ofcom-4chan.png.webp 649w, https://torrentfreak.com/images/ofcom-4chan-300x360.png.webp 300w" sizes="auto, (max-width: 649px) 100vw, 649px">
<img loading="lazy" decoding="async" src="https://torrentfreak.com/images/ofcom-4chan.png" alt="ofcom-4chan" width="649" height="779" srcset="https://torrentfreak.com/images/ofcom-4chan.png 649w, https://torrentfreak.com/images/ofcom-4chan-300x360.png 300w, https://torrentfreak.com/images/ofcom-4chan-600x720.png 600w, https://torrentfreak.com/images/ofcom-4chan-125x150.png 125w" sizes="auto, (max-width: 649px) 100vw, 649px">
</picture>
</center>
<p>Given the offense caused by last year’s threats by UK police against U.S. citizens, and similar events since then, the final three paragraphs of the statement above seem especially relevant. </p>
<p>By selecting 4chan as a potential target for enforcement, knowing all too well it would refuse to comply, a stand-off has been engineered between UK censorship measures nobody asked for, and the constitutional rights of all Americans.</p>
<p>If the hallmarks of the win in The Pirate Bay case were predictability, inability to mount any defense, and the avoidance of controversy, this is only just short of a complete disaster. .</p>
<h2>Who’s in Charge of Government Policy?</h2>
<p>Further escalation at the political level in the event Ofcom digs in, may demand intervention at the highest level. For Prime Minister Keir Starmer, that does not bode well</p>
<p>First, Ofcom is independent, so that may not even be possible. Second, consider this recent exchange between JD Vance and Keir Starmer himself on the erosion of free speech in the UK.</p>
<p><em><strong>Vance:</strong> “We also know that there have been infringements on free speech that actually affect not just the British. Of course, what the British do in their own country is up to them, but they also affect American technology companies and by extension American citizens. So that is something that we’ll talk about today at lunch.”</em></p><p><em><strong>Starmer</strong>: “We’ve had free speech for a very long time in the United Kingdom and uh..uh.. and it will last for a very, very long time. Well no, I mean we certainly wouldn’t want to reach across to US citizens…and we don’t…and that’s absolutely right.</em></p>
<p>Ofcom begs to differ, clearly; so who is in charge here? Why doesn’t the Prime Minister know that the UK is actively “reaching across to US citizens?” Unfortunately, Ofcom has a reputation for not backing down. On the plus side, it hasn’t imposed any penalties to back down from yet, so there is that.</p>
<center><picture loading="lazy" decoding="async">
<source type="image/webp" srcset="https://torrentfreak.com/images/safety.png.webp 348w, https://torrentfreak.com/images/safety-300x177.png.webp 300w" sizes="auto, (max-width: 348px) 100vw, 348px">
<img loading="lazy" decoding="async" src="https://torrentfreak.com/images/safety.png" alt="safety" width="348" height="205" srcset="https://torrentfreak.com/images/safety.png 348w, https://torrentfreak.com/images/safety-300x177.png 300w, https://torrentfreak.com/images/safety-150x88.png 150w, https://torrentfreak.com/images/safety-220x130.png 220w" sizes="auto, (max-width: 348px) 100vw, 348px">
</picture>
</center>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We put a coding agent in a while loop (132 pts)]]></title>
            <link>https://github.com/repomirrorhq/repomirror/blob/main/repomirror.md</link>
            <guid>45005434</guid>
            <pubDate>Sun, 24 Aug 2025 16:18:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/repomirrorhq/repomirror/blob/main/repomirror.md">https://github.com/repomirrorhq/repomirror/blob/main/repomirror.md</a>, See on <a href="https://news.ycombinator.com/item?id=45005434">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>


                <li>
      

      <div>
          <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_product_navbar&quot;}" href="https://github.com/features/copilot">
      
      <div>
          <p>
            GitHub Copilot
          </p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_spark&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_spark_link_product_navbar&quot;}" href="https://github.com/features/spark">
      
      <div>
          <p>
            GitHub Spark
              <span>
                New
              </span>
          </p><p>
        Build and deploy intelligent apps
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_models&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_models_link_product_navbar&quot;}" href="https://github.com/features/models">
      
      <div>
          <p>
            GitHub Models
              <span>
                New
              </span>
          </p><p>
        Manage and compare prompts
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_advanced_security&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_advanced_security_link_product_navbar&quot;}" href="https://github.com/security/advanced-security">
      
      <div>
          <p>
            GitHub Advanced Security
          </p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;actions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;actions_link_product_navbar&quot;}" href="https://github.com/features/actions">
      
      <div>
          <p>
            Actions
          </p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                    
                </ul>
              </div>
          <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;codespaces&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;codespaces_link_product_navbar&quot;}" href="https://github.com/features/codespaces">
      
      <div>
          <p>
            Codespaces
          </p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;issues&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;issues_link_product_navbar&quot;}" href="https://github.com/features/issues">
      
      <div>
          <p>
            Issues
          </p><p>
        Plan and track work
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_review&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_review_link_product_navbar&quot;}" href="https://github.com/features/code-review">
      
      <div>
          <p>
            Code Review
          </p><p>
        Manage code changes
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;discussions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;discussions_link_product_navbar&quot;}" href="https://github.com/features/discussions">
      
      <div>
          <p>
            Discussions
          </p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_search&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_search_link_product_navbar&quot;}" href="https://github.com/features/code-search">
      
      <div>
          <p>
            Code Search
          </p><p>
        Find more, search less
      </p></div>

    
</a></li>

                </ul>
              </div>
          

      </div>
</li>


                <li>
      

      
</li>


                <li>
      

      <div>
                    <p><span id="resources-explore-heading">Explore</span></p><ul aria-labelledby="resources-explore-heading">
                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;learning_pathways&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;learning_pathways_link_resources_navbar&quot;}" href="https://resources.github.com/learn/pathways">
      Learning Pathways

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;events_amp_webinars&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;events_amp_webinars_link_resources_navbar&quot;}" href="https://resources.github.com/">
      Events &amp; Webinars

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;ebooks_amp_whitepapers&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;ebooks_amp_whitepapers_link_resources_navbar&quot;}" href="https://github.com/resources/whitepapers">
      Ebooks &amp; Whitepapers

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;customer_stories&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;customer_stories_link_resources_navbar&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;partners&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;partners_link_resources_navbar&quot;}" href="https://partner.github.com/">
      Partners

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;executive_insights&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;executive_insights_link_resources_navbar&quot;}" href="https://github.com/solutions/executive-insights">
      Executive Insights

    
</a></li>

                </ul>
              </div>
</li>


                <li>
      

      <div>
              <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_sponsors&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_sponsors_link_open_source_navbar&quot;}" href="https://github.com/sponsors">
      
      <div>
          <p>
            GitHub Sponsors
          </p><p>
        Fund open source developers
      </p></div>

    
</a></li>

                </ul>
              </div>
              <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;the_readme_project&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;the_readme_project_link_open_source_navbar&quot;}" href="https://github.com/readme">
      
      <div>
          <p>
            The ReadME Project
          </p><p>
        GitHub community articles
      </p></div>

    
</a></li>

                </ul>
              </div>
              
          </div>
</li>


                <li>
      

      <div>

                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprise_platform&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprise_platform_link_enterprise_navbar&quot;}" href="https://github.com/enterprise">
      
      <div>
          <p>
            Enterprise platform
          </p><p>
        AI-powered developer platform
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>


                <li>
    <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;pricing&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;pricing_link_global_navbar&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:repomirrorhq/repomirror" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="ruW8NA9nnUwcapK3-_ZUyFl-0-1LYqt3R2BEwHzR3VqW450j5Mi9l73GD2eIX1vQ6sm-NerrPkewqlK9S29N9g" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="repomirrorhq/repomirror" data-current-org="repomirrorhq" data-current-owner="" data-logged-in="false" data-copilot-chat-enabled="false" data-nl-search-enabled="false" data-retain-scroll-position="true">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
        
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>


            

              <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=repomirrorhq%2Frepomirror" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/repomirrorhq/repomirror/blob/main/repomirror.md&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="be5fc9f8f2458dfd6671808d38b89ca4335cdc3358fca86a57ffa37d8e2a8d5e" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}">
                Sign up
              </a></p><p>
    <react-partial-anchor>
      <tool-tip id="tooltip-3162669a-10ae-46d8-b163-a717f9aa08d1" for="icon-button-10782354-4de3-41e9-a5ca-e89918c908dd" popover="manual" data-direction="s" data-type="label" data-view-component="true">Appearance settings</tool-tip>

      <template data-target="react-partial-anchor.template">
        <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-react.0c0051664a94f0e136ff.module.css">
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/appearance-settings.c82a4db79200850fb016.module.css">

<react-partial partial-name="appearance-settings" data-ssr="false" data-attempted-ssr="false" data-react-profiling="false">
  
  <script type="application/json" data-target="react-partial.embeddedData">{"props":{}}</script>
  <div data-target="react-partial.reactRoot"></div>
</react-partial>


      </template>
    </react-partial-anchor>
  </p>

          </div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Comet AI browser can get prompt injected from any site, drain your bank account (493 pts)]]></title>
            <link>https://twitter.com/zack_overflow/status/1959308058200551721</link>
            <guid>45004846</guid>
            <pubDate>Sun, 24 Aug 2025 15:14:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/zack_overflow/status/1959308058200551721">https://twitter.com/zack_overflow/status/1959308058200551721</a>, See on <a href="https://news.ycombinator.com/item?id=45004846">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="ScriptLoadFailure"><form action="" method="GET"><div><p><span>Something went wrong, but don’t fret — let’s give it another shot.</span></p><p><img alt="⚠️" draggable="false" src="https://abs-0.twimg.com/emoji/v2/svg/26a0.svg"><span> Some privacy related extensions may cause issues on x.com. Please disable them and try again.</span></p></div></form></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Making games in Go: 3 months without LLMs vs. 3 days with LLMs (263 pts)]]></title>
            <link>https://marianogappa.github.io/software/2025/08/24/i-made-two-card-games-in-go/</link>
            <guid>45004728</guid>
            <pubDate>Sun, 24 Aug 2025 15:01:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://marianogappa.github.io/software/2025/08/24/i-made-two-card-games-in-go/">https://marianogappa.github.io/software/2025/08/24/i-made-two-card-games-in-go/</a>, See on <a href="https://news.ycombinator.com/item?id=45004728">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2 id="introduction">Introduction</h2><p>After 15 years as a software engineer, I realized I had never actually built and published a game.</p><p>Since I grew up in 🇦🇷 Argentina playing card games with my friends, I figured I’d choose one of those. I asked myself:</p><p><img src="https://marianogappa.github.io/images/posts/i-made-two-card-games-in-go/most-common.png" alt="most-common-card-games"></p><h2 id="truco-3-months-without-llms">Truco: 3 Months Without LLMs</h2><p>On <a href="https://github.com/marianogappa/truco/commit/80ad842f546ac5bdf0d680d105afc10b66626d0f">June 18th of 2024</a> I started building <a href="https://en.wikipedia.org/wiki/Truco">Truco</a> in my free time. As a longtime Go backend developer, the backend was obvious. The challenge was the UI and long-term hosting without a paid server.</p><table><thead><tr><th>Problem</th><th>Solution</th></tr></thead><tbody><tr><td>UI</td><td>Bit the bullet and learned the minimal required <a href="https://reactjs.org/">React</a> for the UI.</td></tr><tr><td>No server</td><td>Transpiled the server to <a href="https://en.wikipedia.org/wiki/WebAssembly">WASM</a> using <a href="https://tinygo.org/">TinyGo</a>.</td></tr><tr><td>Hosting</td><td>Used <a href="https://pages.github.com/">GitHub Pages</a> to host the static files.</td></tr></tbody></table><p>This was pre-LLM, so every detail had to be figured out by hand. It took about 3 months of trial and error to get it ready.</p><p>I never planned to advertise or monetize it; I just wanted to finish, and maybe give someone the joy of playing their childhood game again. A year later, without any extra effort on my part, people are still playing it!</p><p><img src="https://marianogappa.github.io/images/posts/i-made-two-card-games-in-go/truco-analytics.png" alt="truco-analytics"></p><p>In case you want to check it out, here are some links for it:</p><p><a href="https://marianogappa.github.io/truco-argentino">Truco (play the game)</a></p><p><a href="https://github.com/marianogappa/truco">Backend in Go</a></p><p><a href="https://github.com/marianogappa/truco-argentino">Frontend in React</a> (don’t judge me 🤷‍♂️ best I can do with 1-hour React knowledge)</p><h2 id="escoba-3-days-with-llms">“Escoba”: 3 Days With LLMs</h2><p>A year later, visiting family in Argentina, I taught my nephew <a href="https://en.wikipedia.org/wiki/Escoba">Escoba</a>—the country’s second most popular card game (despite what ChatGPT insists).</p><p><img src="https://marianogappa.github.io/images/posts/i-made-two-card-games-in-go/two-most-common.png" alt="two-most-common-card-games"></p><p>With LLMs now mainstream, I wondered how much faster building a game might be—so I decided to test it.</p><p>I cloned the backend for Truco and gave <a href="https://claude.ai/">Claude</a> a long prompt explaining the rules of Escoba and asking it to refactor the code to implement it. To my surprise, it worked almost perfectly on the first prompt 😱. For a moment I thought: goodbye, job 😰.</p><p><img src="https://marianogappa.github.io/images/posts/i-made-two-card-games-in-go/prompt.png" alt="prompt"></p><p>The only bug I found was that it used <code>append</code> <a href="https://github.com/marianogappa/escoba/commit/e9c373a38cb2ca5e7eefca2870f91e7def1579f7#diff-8e38aecf51e5858a66646d328292fc8abf36f6a602ef3ea4ed7fc1ca2b1a0240L104-L105">incorrectly in one place and mutated actions</a>. Except for that, I only added a few bells and whistles on top (like <a href="https://github.com/marianogappa/escoba/commit/fe1c87bed8e9b60cc902dfc563c356506c2faf4c">a better bot</a>).</p><p>The frontend was a different story; it took me a few days to get it right. The real challenge probably wasn’t just the LLM — it was my own React skills, combined with the unusual setup of letting a black-box WASM function manage game state. Debugging in JavaScript also didn’t make life easier.</p><p>In case you want to check it out, here are some links for it:</p><p><a href="https://marianogappa.github.io/escoba-de-15">Escoba (play the game)</a></p><p><a href="https://github.com/marianogappa/escoba">Backend in Go</a></p><p><a href="https://github.com/marianogappa/escoba-de-15">Frontend in React</a></p><h2 id="step-by-step-how-to-build-your-own-game">Step-by-Step: How to Build Your Own Game</h2><p>I’m assuming you might have come here to see if it’s not too hard to give it a try yourself! So I’ll give you the minimalistic primer to make your own game with this stack.</p><p>I wrote a minimalistic Tic-Tac-Toe game set of repos so you can fork them to get started:</p><p><a href="https://github.com/marianogappa/tictactoe-backend">https://github.com/marianogappa/tictactoe-backend</a>
<a href="https://github.com/marianogappa/tictactoe-frontend">https://github.com/marianogappa/tictactoe-frontend</a></p><p>You can check it out here:</p><p><a href="https://marianogappa.github.io/tictactoe-frontend/">https://marianogappa.github.io/tictactoe-frontend/</a></p><p><img src="https://marianogappa.github.io/images/posts/i-made-two-card-games-in-go/tictactoe.png" alt="TicTacToe"></p><h3 id="backend-side">Backend-side</h3><p>A turn-based backend is straightforward to outline:</p><ul><li><a href="https://github.com/marianogappa/truco/blob/v0.2.0/truco/truco.go#L157">Initialize</a> a <a href="https://github.com/marianogappa/truco/blob/v0.2.0/truco/truco.go#L16">GameState struct</a> (e.g. initial board setup, empty actions list).</li><li>Implement <a href="https://github.com/marianogappa/truco/blob/v0.2.0/truco/truco.go#L378"><code>CalculatePossibleActions</code></a>, so clients know what’s valid.</li><li>Add <a href="https://github.com/marianogappa/truco/blob/v0.2.0/truco/truco.go#L213">RunAction</a> to mutate the GameState.</li><li>If there’s a bot, write a function to <a href="https://github.com/marianogappa/truco/blob/v0.2.0/examplebot/newbot/bot.go#L38">pick an action</a> from the current state.</li></ul><p>That’s it!</p><p><em>Note: forget human vs human, unless you’re willing to pay for that server.</em></p><h3 id="frontend-side">Frontend-side</h3><p>I’m no frontend expert, but the tasks are simple:</p><ul><li>Call the backend to create a new <code>GameState</code>.</li><li>Render it in the UI.</li><li>Let the player pick an action from the valid options.</li><li>Call the backend to apply the action.</li><li>Trigger the bot’s action when it’s their turn.</li></ul><p>That’s it!</p><h3 id="backend-side-interop">Backend-side interop</h3><p>To transpile the backend to WASM, you can build with (docs <a href="https://go.dev/wiki/WebAssembly">here</a>):</p><div><pre tabindex="0"><code data-lang="bash"><span><span>GOARCH<span>=</span>wasm GOOS<span>=</span>js go build -o main.wasm main.go
</span></span></code></pre></div><p>But that produces huge binaries (which is slow on mobile). Use <a href="https://tinygo.org/">TinyGo</a> for smaller ones.</p><p>Before compiling, you need a different entrypoint to the functions that you’re going to make available to the frontend. <a href="https://github.com/marianogappa/truco/blob/v0.2.0/main_wasm.go">Make a different <code>main.go</code></a> file that exports the functions that you need, and <a href="https://github.com/marianogappa/truco/blob/v0.2.0/main_wasm.go#L2">guard it via build flags</a>:</p><div><pre tabindex="0"><code data-lang="go"><span><span><span>//go:build tinygo</span>
</span></span><span><span><span>// +build tinygo</span>
</span></span><span><span>
</span></span><span><span><span>package</span> <span>main</span>
</span></span><span><span>
</span></span><span><span>[<span>...</span>]
</span></span><span><span>
</span></span><span><span><span>func</span> <span>main</span>() {
</span></span><span><span>	<span>js</span>.<span>Global</span>().<span>Set</span>(<span>"trucoNew"</span>, <span>js</span>.<span>FuncOf</span>(<span>trucoNew</span>))
</span></span><span><span>	<span>js</span>.<span>Global</span>().<span>Set</span>(<span>"trucoRunAction"</span>, <span>js</span>.<span>FuncOf</span>(<span>trucoRunAction</span>))
</span></span><span><span>	<span>js</span>.<span>Global</span>().<span>Set</span>(<span>"trucoBotRunAction"</span>, <span>js</span>.<span>FuncOf</span>(<span>trucoBotRunAction</span>))
</span></span><span><span>	<span>select</span> {}
</span></span><span><span>}
</span></span><span><span>
</span></span><span><span><span>var</span> (
</span></span><span><span>	<span>state</span> <span>*</span><span>truco</span>.<span>GameState</span> <span>// "Global variable" for the GameState</span>
</span></span><span><span>	<span>bot</span>   <span>truco</span>.<span>Bot</span>
</span></span><span><span>)
</span></span></code></pre></div><p>Don’t forget to block at the end of <code>main()</code> with <code>select {}</code> to prevent the program from exiting immediately.</p><h3 id="backend-data-interop">Backend data interop</h3><p><code>GameState</code> is typically a free-form struct that you define in Go. WASM can’t directly serialize/deserialize structs. The trick is to pass everything as JSON. After digging through <a href="https://tinygo.org/docs/guides/webassembly/">TinyGo docs</a>, here’s the formula:</p><div><pre tabindex="0"><code data-lang="go"><span><span><span>func</span> <span>trucoRunAction</span>(<span>this</span> <span>js</span>.<span>Value</span>, <span>p</span> []<span>js</span>.<span>Value</span>) <span>interface</span>{} { <span>// Always this signature</span>
</span></span><span><span>	<span>// Read the input JSON</span>
</span></span><span><span>    <span>jsonBytes</span> <span>:=</span> make([]<span>byte</span>, <span>p</span>[<span>0</span>].<span>Length</span>()) 
</span></span><span><span>	<span>js</span>.<span>CopyBytesToGo</span>(<span>jsonBytes</span>, <span>p</span>[<span>0</span>])
</span></span><span><span>
</span></span><span><span>	<span>// 1. Decode the input JSON to your struct</span>
</span></span><span><span>    <span>// 2. Run your Go code, return an output struct</span>
</span></span><span><span>	<span>// 3. Encode the output struct to JSON</span>
</span></span><span><span>	<span>newBytes</span> <span>:=</span> <span>_runAction</span>(<span>jsonBytes</span>)
</span></span><span><span>
</span></span><span><span>	<span>// Return the output JSON</span>
</span></span><span><span>	<span>buffer</span> <span>:=</span> <span>js</span>.<span>Global</span>().<span>Get</span>(<span>"Uint8Array"</span>).<span>New</span>(len(<span>newBytes</span>))
</span></span><span><span>	<span>js</span>.<span>CopyBytesToJS</span>(<span>buffer</span>, <span>newBytes</span>)
</span></span><span><span>	<span>return</span> <span>buffer</span>
</span></span><span><span>}
</span></span></code></pre></div><h3 id="frontend-side-interop">Frontend-side interop</h3><p>Finally, <a href="https://github.com/marianogappa/truco-argentino/blob/main/public/index.html#L45">call the backend functions from the frontend</a> and [track the GameState in a global variable]((<a href="https://github.com/marianogappa/truco-argentino/blob/main/src/gameState.js#L19)">https://github.com/marianogappa/truco-argentino/blob/main/src/gameState.js#L19)</a>:</p><div><pre tabindex="0"><code data-lang="js"><span><span><span>function</span> <span>jsRunAction</span>(<span>data</span>) {
</span></span><span><span>    <span>const</span> <span>encoder</span> <span>=</span> <span>new</span> <span>TextEncoder</span>();
</span></span><span><span>    <span>const</span> <span>encodedData</span> <span>=</span> <span>encoder</span>.<span>encode</span>(<span>JSON</span>.<span>stringify</span>(<span>data</span>));
</span></span><span><span>    <span>const</span> <span>result</span> <span>=</span> <span>trucoRunAction</span>(<span>encodedData</span>);
</span></span><span><span>    <span>const</span> <span>json</span> <span>=</span> <span>new</span> <span>TextDecoder</span>().<span>decode</span>(<span>result</span>);
</span></span><span><span>    <span>return</span> <span>JSON</span>.<span>parse</span>(<span>json</span>);
</span></span><span><span>}
</span></span><span><span>
</span></span><span><span><span>let</span> <span>gameState</span> <span>=</span> <span>jsNewGame</span>();
</span></span><span><span>
</span></span><span><span><span>// Note that RunAction doesn't take a GameState.
</span></span></span><span><span><span>// WASM is the source of truth; your frontend can't mutate it.
</span></span></span><span><span><span></span><span>gameState</span> <span>=</span> <span>jsRunAction</span>(<span>action</span>); 
</span></span></code></pre></div><p>Every time you modify the backend, you need to recompile it to WASM and replace the old file in the frontend. I put this in <a href="https://github.com/marianogappa/escoba-de-15/blob/main/Makefile">the Makefile</a>:</p><pre tabindex="0"><code>compile_library:
	cd $(GOPATH)/src/github.com/marianogappa/escoba &amp;&amp; \
	TINYGOROOT=/usr/local/Cellar/tinygo/0.38.0 tinygo build -o main.wasm -target wasm main_wasm.go &amp;&amp; \
	mv main.wasm $(CURDIR)/public/wasm/wasm.wasm &amp;&amp; \
	cp /usr/local/Cellar/tinygo/0.38.0/targets/wasm_exec.js $(CURDIR)/public/wasm/wasm_exec.js &amp;&amp; \
	cd -
</code></pre><p>Note that I’m also copying over <code>wasm_exec.js</code>. This is a requirement for running WASM code. The other requirement is to add the <a href="https://github.com/marianogappa/truco-argentino/blob/main/public/index.html#L16">script tag to the HEAD of the HTML file</a>:</p><div><pre tabindex="0"><code data-lang="html"><span><span>
</span></span><span><span>    &lt;<span>script</span> <span>src</span><span>=</span><span>"wasm/wasm_exec.js"</span>&gt;&lt;/<span>script</span>&gt;
</span></span><span><span>	&lt;<span>script</span>&gt;
</span></span><span><span>        <span>const</span> <span>go</span> <span>=</span> <span>new</span> <span>Go</span>(); <span>// Defined in wasm_exec.js
</span></span></span><span><span><span></span>        <span>const</span> <span>WASM_URL</span> <span>=</span> <span>'wasm/wasm.wasm'</span>;
</span></span><span><span>
</span></span><span><span>        <span>var</span> <span>wasm</span>;
</span></span><span><span>        <span>let</span> <span>wasmReady</span> <span>=</span> <span>false</span>;
</span></span><span><span>
</span></span><span><span>        <span>if</span> (<span>'instantiateStreaming'</span> <span>in</span> <span>WebAssembly</span>) {
</span></span><span><span>            <span>WebAssembly</span>.<span>instantiateStreaming</span>(<span>fetch</span>(<span>WASM_URL</span>), <span>go</span>.<span>importObject</span>).<span>then</span>(<span>function</span> (<span>obj</span>) {
</span></span><span><span>                <span>wasm</span> <span>=</span> <span>obj</span>.<span>instance</span>;
</span></span><span><span>                <span>go</span>.<span>run</span>(<span>wasm</span>);
</span></span><span><span>                <span>wasmReady</span> <span>=</span> <span>true</span>;
</span></span><span><span>            })
</span></span><span><span>        } <span>else</span> {
</span></span><span><span>            <span>fetch</span>(<span>WASM_URL</span>).<span>then</span>(<span>resp</span> =&gt;
</span></span><span><span>                <span>resp</span>.<span>arrayBuffer</span>()
</span></span><span><span>            ).<span>then</span>(<span>bytes</span> =&gt;
</span></span><span><span>                <span>WebAssembly</span>.<span>instantiate</span>(<span>bytes</span>, <span>go</span>.<span>importObject</span>).<span>then</span>(<span>function</span> (<span>obj</span>) {
</span></span><span><span>                    <span>wasm</span> <span>=</span> <span>obj</span>.<span>instance</span>;
</span></span><span><span>                    <span>go</span>.<span>run</span>(<span>wasm</span>);
</span></span><span><span>                    <span>wasmReady</span> <span>=</span> <span>true</span>;
</span></span><span><span>                })
</span></span><span><span>            )
</span></span><span><span>        }
</span></span><span><span>    &lt;/<span>script</span>&gt;
</span></span></code></pre></div><h2 id="troubleshooting">Troubleshooting</h2><h3 id="the-wasm-file-is-not-loading">The WASM file is not loading</h3><p>This works automatically in Github Pages, but locally, you need to serve the files over HTTP. You can use <a href="https://www.npmjs.com/package/http-server">http-server</a> for this:</p><div><pre tabindex="0"><code data-lang="bash"><span><span>npx http-server ./public -p <span>8080</span>
</span></span></code></pre></div><p>And then visit <code>http://localhost:8080</code> in your browser.</p><h2 id="conclusion">Conclusion</h2><p>I had a lot of fun making these games and I hope you find it interesting to see how it works. I also hope you find it useful to make your own games! If you have questions, I’m not hard to find.</p><p><img src="https://marianogappa.github.io/images/posts/i-made-two-card-games-in-go/escoba.png" alt="escoba"></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[US attack on renewables will lead to power crunch that spikes electricity prices (221 pts)]]></title>
            <link>https://www.cnbc.com/2025/08/24/solar-wind-renewable-trump-tariff-utility-tax-credit-itc-ptc-obbb-electricity-price.html</link>
            <guid>45004466</guid>
            <pubDate>Sun, 24 Aug 2025 14:22:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnbc.com/2025/08/24/solar-wind-renewable-trump-tariff-utility-tax-credit-itc-ptc-obbb-electricity-price.html">https://www.cnbc.com/2025/08/24/solar-wind-renewable-trump-tariff-utility-tax-credit-itc-ptc-obbb-electricity-price.html</a>, See on <a href="https://news.ycombinator.com/item?id=45004466">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="RegularArticle-ArticleBody-5" data-module="ArticleBody" data-test="articleBody-2" data-analytics="RegularArticle-articleBody-5-2"><div id="ArticleBody-InlineImage-107172309" data-test="InlineImage"><p>Witthaya Prasongsin | Moment | Getty Images</p></div><div><p>President <a href="https://www.cnbc.com/donald-trump/">Donald Trump</a>'s attack on solar and wind projects threatens to raise energy prices for consumers and undermine a stretched electric grid that's already straining to meet rapidly growing demand, renewable energy executives warn.</p><p>Trump has long said wind power turbines are unattractive and endanger birds, and that solar installations take up too much land. This week, he said his administration <a href="https://www.cnbc.com/2025/08/20/trump-says-us-will-not-approve-solar-or-wind-power-projects.html">will not approve solar and wind</a> projects, the latest salvo in a campaign the president has waged against the renewable energy industry since taking office.</p><p>"We will not approve wind or farmer destroying Solar," Trump <a href="https://truthsocial.com/@realDonaldTrump/115061417084982814" target="_blank">posted on Truth Social</a> Wednesday. "The days of stupidity are over in the USA!!!"</p><p>Trump's statement this week seemed to confirm industry fears that the Interior Department will block federal permits for solar and wind projects. Interior Secretary Doug Burgum <a href="https://www.cnbc.com/2025/07/17/solar-wind-permit-interior-department-burgum-trump.html">took control of all permit approvals</a> last month in a move that the American Clean Power Association criticized as "obstruction," calling it "unprecedented political review."</p><p>The Interior Department blocking permits would slow the growth of the entire solar and wind industry, top executives at renewable developers <a href="https://arevonenergy.com/" target="_blank">Arevon</a>, <a href="https://avantus.com/about-us" target="_blank">Avantus</a> and <a href="https://www.engie-na.com/" target="_blank">Engie North America</a> told CNBC.</p><p>Even solar and wind projects on private land may need approvals from the U.S. Fish and Wildlife Service if, for example, a waterway or animal species is affected, the executives told CNBC. The three power companies are among the top 10 renewable developers in the U.S., according to energy research firm Enverus.</p><p>The Interior Department "will not give preferential treatment to massive, unreliable projects that make no sense for the American people or that risk harming communities or the environment," a spokesperson told CNBC when asked if new permits would be issued for solar and wind construction.</p><p>Choking off renewables will worsen a looming power supply shortage, harm the electric grid and lead to higher electricity prices for consumers, said Kevin Smith, CEO of Arevon, a solar and battery storage developer headquartered in Scottsdale, Arizona, that's active in 17 states. Arevon operates five gigawatts of power equivalent to $10 billion of capital investment.</p><p>"I don't think everybody realizes how big the crunch is going to be," Smith said. "We're making that crunch more and more difficult with these policy changes."</p><h3>Uncertainty hits investment</h3><p>The red tape at the Interior Department and rising costs from Trump's copper and steel tariffs have created market instability that makes planning difficult, the renewable executives said.</p><p>"We don't want to sign contracts until we know what the playing field is," said Cliff Graham, CEO of Avantus, a solar and battery storage developer headquartered in San Diego. Avantus has built three gigawatts of solar and storage across the desert Southwest.</p><p>"I can do whatever you want me to do and have a viable business, I just need the rules set and in place," Graham said.</p></div><div><p>Engie North America, the U.S. arm of a global energy company based in Paris, is slashing its planned investment in the U.S. by 50% due to tariffs and regulatory uncertainty, said David Carroll, the chief renewables officer who leads the American subsidiary. Engie could cut its plans even more, he said.</p><p>Engie's North American subsidiary, headquartered in Houston, will operate about 11 gigawatts of solar, battery storage and wind power by year end.</p><p>Multinationals like Engie have long viewed the U.S. as one of the most stable business environments in the world, Carroll said. But that assessment is changing in Engie's boardroom and across the industry, he said.</p><p>"The stability of the U.S. business market is no longer really the gold standard," Carroll said.</p><h3>Rising costs</h3><p>Arevon is seeing costs for solar and battery storage projects increase by as much as 30% due to the metal tariffs, said Smith, the CEO. Many renewable developers are renegotiating power prices with utilities to cover the sudden spike in costs because projects no longer pencil out financially, he said.</p><p>Trump's One Big Beautiful Bill Act ends two key tax credits for solar and wind projects in late 2027, making conditions even more challenging. The investment tax credit supported new renewable construction and the production credit boosted clean electricity generation.</p><p>Those tax credits were just passed on to consumers, Smith said. Their termination and the rising costs from tariffs will mean higher utility bills for families and businesses, he said.</p><p>The price that Avantus charges for solar power has roughly doubled to $60 per megawatt-hour as interest rates and tariffs have increased over the years, said CEO Graham. Prices will surge again to around $100 per megawatt-hour when the tax credits are gone, he said.</p><p>"The small manufacturers, small companies and mom and pops will see their electric bills go up, and it'll start pushing the small entrepreneurs out of the industry or out of the marketplace," Graham said.</p><p>Renewable projects that start construction by next July, a year after the One Big Beautiful Act became law, will still qualify for the tax credits. Arevon, Avantus and Engie are moving forward with projects currently under construction, but the outlook is less certain for projects later in the decade.</p><p>The U.S. will see a big downturn in new renewable power generation starting in the second half of 2026 through 2028 as new projects no longer qualify for tax credits, said Smith, the head of Arevon.</p><p>"The small- and medium-sized players that can't take the financial risk, some of them will disappear," Smith said. "You're going to see less projects built in the sector."</p><h3>Artificial intelligence power crunch</h3><p>Fewer renewable power plants could increase the risk of brownouts or blackouts, Smith said. Electricity <a href="https://www.cnbc.com/2024/11/23/data-centers-powering-ai-could-use-more-electricity-than-entire-cities.html">demand is surging from the data centers</a> that technology companies are building to train artificial intelligence systems. <a href="https://www.pjm.com/about-pjm" target="_blank">PJM Interconnection</a>, the largest electrical grid in the U.S. that coordinates wholesale electricity in 13 states&nbsp;and the District of Columbia, has warned of <a href="https://www.cnbc.com/2024/08/28/utilities-face-looming-crunch-as-electricity-demand-from-ai-surges.html">tight power supplies </a>because too little new generation is coming online.</p><p>Renewables are the power source that can most quickly meet demand, Smith at Arevon said. More than 90% of the power waiting to connect to the grid is solar, battery storage or wind, according to data from Enverus.</p><p>"The power requirement is largely going to be coming from the new energy sector or not at all," so without it, "the grid becomes substantially hampered," Smith said.</p></div><div><p>Trump is prioritizing oil, gas and nuclear power as "the most effective and reliable tools to power our country," White House spokesperson Anna Kelly said.</p><p>"President Trump serves the American people who voted to implement his America First energy agenda – not solar and wind executives who are sad that Biden's Green New Scam subsidies are ending," Kelly said.</p><p>But new natural gas plants won't come online for another five years due to supply issues, new nuclear power is a decade away and no new coal plants are on the drawing board.</p><p>Utilities may have to turn away data centers at some point because there isn't enough surplus power to run them, and no one wants to risk blackouts at hospitals, schools and homes, Arevon's Smith said. This would pressure the U.S. in its race against China to master AI, a Trump administration priority.</p><p>"The panic in the data center, AI world is probably not going to set in for another 12 months or so, when they start realizing that they can't get the power they need in some of these areas where they're planning to build data centers," Smith said.</p><p>"Then we'll see what happens," said the University of Chicago MBA, who's worked in the energy industry for 35 years. "There may be a reversal in policy to try and build whatever we can and get power onto the grid."</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ICE uses celebrity loophole to hide deportation flights (132 pts)]]></title>
            <link>https://jacobin.com/2025/08/ice-uses-celebrities-loophole-to-hide-deportation-flights/</link>
            <guid>45003819</guid>
            <pubDate>Sun, 24 Aug 2025 12:40:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jacobin.com/2025/08/ice-uses-celebrities-loophole-to-hide-deportation-flights/">https://jacobin.com/2025/08/ice-uses-celebrities-loophole-to-hide-deportation-flights/</a>, See on <a href="https://news.ycombinator.com/item?id=45003819">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-content">

                <!-- Antescript -->

                
                  
                

                <!-- Intro -->
                
                  
                

                
                  
                    <section id="ch-0">
                      <p>For years, the country’s rich and famous have used a little-known Federal Aviation Administration program to shield their private jets’ flight records from public view — among them Taylor Swift, Oprah Winfrey, and Steven Spielberg.</p>
<p>Now this decades-old program has a new client: Immigration and Customs Enforcement (ICE), the agency carrying out President Donald&nbsp;Trump’s mass deportations.</p>
<p>To obscure its planes, which ship immigrants out of the country on deportation flights, ICE is taking advantage of a longstanding program created by the private jet lobby,&nbsp;<i>The Lever&nbsp;</i>can confirm. For years, the scheme has allowed celebrities and Wall Street CEOs to partially block their flight data from public view.</p>
<p>Its use by the Trump administration’s immigration enforcers is part of a mounting effort by ICE and its contracted&nbsp;<a href="https://www.levernews.com/inside-the-billion-dollar-business-of-deportation-flights/">private charter airlines</a>&nbsp;to keep the planes’ flight paths hidden from the public. CNN first&nbsp;<a href="https://www.cnn.com/2025/08/13/politics/ice-flights-locations-tracking-maps%22%20%5Ct%20%22_blank">reported</a>&nbsp;on the trend, noting that ICE’s charter airlines were requesting some of the planes in their fleets be scrubbed from public flight tracking sites.</p>
<p>Deportation flights — like Swift’s private jet, whose enormous carbon footprint&nbsp;has stoked <a href="https://www.bbc.com/travel/article/20240213-taylor-swift-private-jet-flight-travel-carbon-footprint%22%20%5Ct%20%22_blank">public outcry</a>&nbsp;— can still be tracked in real time using other public data. But ICE’s use of the Federal Aviation Administration (FAA)’s private jet blacklist underscores how a growing push for privacy by the corporate jet lobby is being deployed to limit public oversight of ICE’s draconian immigration crackdown.</p>
<p>Activists and journalists have for many years tracked ICE’s secretive deportation flights, which critics say subject passengers to cruel and inhumane conditions. People being flown out of the country by ICE&nbsp;are frequently <a href="https://www.propublica.org/article/inside-ice-air-deportation-flights%22%20%5Ct%20%22_blank">shackled</a>&nbsp;for the duration of the journey, and advocates have documented a pattern of&nbsp;<a href="https://www.theguardian.com/us-news/2020/sep/19/ice-air-immigration-medical-negligence%22%20%5Ct%20%22_blank">medical neglect</a>&nbsp;on the planes. As one ICE Air flight attendant&nbsp;<a href="https://www.propublica.org/article/inside-ice-air-deportation-flights%22%20%5Ct%20%22_blank">told</a>&nbsp;<i>ProPublica&nbsp;</i>this spring, a disaster on one of the flights is likely “only a matter of time.”</p>
<p>The charter airlines to whom ICE&nbsp;pays <a href="https://www.levernews.com/inside-the-billion-dollar-business-of-deportation-flights/">enormous sums</a>&nbsp;for deportation flights are the&nbsp;<a href="https://www.nytimes.com/athletic/6416337/2025/06/12/ice-ncaa-globalx-deportation/%22%20%5Ct%20%22_blank">same airlines</a>, like Avelo Airlines and GlobalX Air, that&nbsp;<a href="https://www.nytimes.com/2025/05/12/business/trump-deportation-flights-avelo-airlines.html%22%20%5Ct%20%22_blank">transport</a>&nbsp;professional sports teams around the country. Until recently, these airlines’ fleets could be tracked on public websites like FlightAware and Flightradar24, the same sites that track whether your flight on a commercial airline like Delta or United is delayed.</p>
<p>In recent months, according to multiple sources, these obscure charter airlines have for the first time begun requesting that some planes in their fleet be added to the FAA’s Limiting Aircraft Data Displayed list — LADD — a specialized program developed by the private jet lobby decades ago to keep aircraft data off of public aggregator sites like FlightAware.</p>
<p>“We’re seeing these commercial aircraft being added to the LADD list and then subsequently being employed under contract by the government for these deportation flights,” Ian Petchenik, the communications director with flight aggregator website Flightradar24, told&nbsp;<i>The Lever</i>.</p>
<p>Commercial planes have in the past been occasionally added to the LADD list, he said, for “very specific reasons,” like charter planes flown in the course of a presidential campaign. But ICE’s use of the list appears to be unprecedented: “It’s certainly new,” Petchenik said.</p>

                    </section>
                  
                

                <!-- Main Content -->

                
    
      
        
          <section id="ch-1">
            
              <h2>First ElonJet, Now ICE Air</h2>
              
            
            <p>In the 1990s, the FAA began&nbsp;<a href="https://publicintegrity.org/politics/barr-battle-obama-administration-to-make-more-corporate-jet-data-public-despite-flak/%22%20%5Ct%20%22_blank">sharing</a> real-time air traffic data&nbsp;with airlines, hoping to improve operations across the industry. Other commercial vendors were eventually allowed access to this data, some of which — including the website FlightAware, which launched in 2005 — began publishing real-time flight data for both commercial and private aircraft, both for the public and for industry use.</p>
<p>The new transparency drew opposition from the&nbsp;<a href="https://download.aopa.org/Media/General-Aviation-Explained-r5.pdf%22%20%5Ct%20%22_blank">$250 billion</a>&nbsp;private aviation industry, which argued that publishing the flight data of billionaires’ and celebrities’ jets posed “security” risks.</p>
<p>In&nbsp;<a href="https://www.ainonline.com/aviation-news/business-aviation/2011-07-31/lawmakers-decry-barr-restrictions%22%20%5Ct%20%22_blank">collaboration</a> with Congress, the National Business Aviation Association, a corporate jet lobbying group, in 2000 launched a program that would allow private jet owners to block their aircraft’s identification information from FAA data released to private vendors — cloaking their jets’ movements.</p>
<p>The group “has long believed that security and other imperatives make it absolutely essential to protect our Members’ aircraft and flight information from being made widely available, which is why we created [the program],” a representative&nbsp;<a href="https://nbaa.org/press-releases/nbaa-court-rules-against-long-term-protection-of-flight-data-in-barr-program/%22%20%5Ct%20%22_blank">said</a> in 2010.</p>
<p>For more than a decade, the program was managed by the National Business Aviation Association, which fed the requests to federal aviation regulators. But in 2011, under the Obama administration, federal regulators&nbsp;<a href="https://publicintegrity.org/politics/barr-battle-obama-administration-to-make-more-corporate-jet-data-public-despite-flak/%22%20%5Ct%20%22_blank">signaled</a>&nbsp;that they no longer planned to honor the block requests unless private jet owners submitted evidence of a legitimate “security concern” — essentially gutting the program.</p>
<p>This sent the private jet lobby into a panic. The National Business Aviation Association&nbsp;quickly <a href="https://nbaa.org/membership/letters-to-membership/2011-2/act-now-to-preserve-the-barr-program/%22%20%5Ct%20%22_blank">sued</a>&nbsp;and marshalled hundreds of groups to line up in opposition. The Heritage Foundation, a conservative think tank&nbsp;<a href="https://www.levernews.com/dark-money-just-got-darker-wall-street-helped-fund-project-2025/">bankrolled</a>&nbsp;by right-wing dark money interests, announced that the new rules&nbsp;would “<a href="https://google.com/search?q=heritage+foundation+barr+2011+obama+aircraft&amp;sca_esv=ce44fb6aa5ce43e4&amp;sxsrf=AE3TifMAPKXOUr2LpYB4jCzlmiGIJDi_iw%253A1755873566366&amp;ei=HoGoaJeJFvWs5NoPpNf1kQg&amp;ved=0ahUKEwiXkMbh0p6PAxV1FlkFHaRrPYIQ4dUDCBE&amp;uact=5&amp;oq=heritage+foundation+barr+2011+obama+aircraft&amp;gs_lp=Egxnd3Mtd2l6LXNlcnAiLGhlcml0YWdlIGZvdW5kYXRpb24gYmFyciAyMDExIG9iYW1hIGFpcmNyYWZ0MgUQIRigATIFECEYoAEyBRAhGKABSKYHUAFY6AZwAHgAkAEBmAG3AaAB-QiqAQMyLje4AQPIAQD4AQGYAgegArgHwgIFECEYqwKYAwCIBgGSBwMxLjagB7gqsgcDMS42uAe4B8IHATfIBwU&amp;sclient=gws-wiz-serp%22%20%5Ct%20%22_blank">destroy</a>”&nbsp;the privacy of corporate jet fliers. Under industry pressure, the FAA&nbsp;<a href="https://www.regulations.gov/document/FAA-2013-0259-0072%22%20%5Ct%20%22_blank">backtracked</a>&nbsp;just months after the 2011 announcement, allowing the Block Aircraft Registration Request program to continue. But now it would be managed directly by federal regulators, not by trade groups. In 2019, the program’s name was changed to LADD.</p>
<p>There&nbsp;are <a href="https://laddlist.com/stats/%22%20%5Ct%20%22_blank">tens of thousands</a>&nbsp;of private planes currently on the blacklist, according to a tracker maintained by Jack Sweeney, the online researcher who has become famous for tracking private jets owned by — among others — Taylor Swift and&nbsp;<a href="https://www.levernews.com/tag/elon-musk/">Elon Musk</a>.</p>
<p>Both the pop singer and the billionaire were incensed by Sweeney’s live trackers, which post real-time flight data on social media about the comings and goings of the private planes. In December 2023, Swift’s lawyers&nbsp;<a href="https://www.cbsnews.com/news/taylor-swift-private-jet-jack-sweeney-responds-cease-and-desist-lawyers-letter/%22%20%5Ct%20%22_blank">sent</a> Sweeney&nbsp;a cease-and-desist letter. Musk&nbsp;<a href="https://www.nytimes.com/2022/12/14/technology/twitter-private-jet-accounts-suspended.html%22%20%5Ct%20%22_blank">for a time</a>&nbsp;banned Sweeney from Twitter over “ElonJet,” the account that tracked Musk’s jet location. But Sweeney has refused to take down the trackers.</p>
<p>Musk’s and Swift’s private jets are both on the LADD list, which means people can’t find them on sites that rely on the FAA for flight-tracking data, like FlightAware. Sweeney, however, uses entirely crowd-sourced flight data,&nbsp;<a href="https://arstechnica.com/tech-policy/2023/01/the-flight-tracker-that-powered-elonjet-has-taken-a-left-turn/%22%20%5Ct%20%22_blank">collected</a> by volunteers&nbsp;around the world who use their own DIY receivers to pick up live data from planes overhead — allowing him to bypass the LADD list’s restrictions.</p>
<p>Just like Musk’s private jet, the positions of ICE’s deportation flights will remain available even if they are flown on blacklisted planes, thanks to the enthusiasts who feed this information, called ADS-B data, into open-source exchanges. The workaround has infuriated Musk, who has&nbsp;<a href="https://www.wired.com/story/ads-b-exchange-jetnet-sale/%22%20%5Ct%20%22_blank">advocated against</a>&nbsp;flight-data crowdsourcing.</p>
<p>Sweeney was surprised by the recent additions of private charter airline planes used in deportation flights to the LADD list. Earlier this month, he&nbsp;<a href="https://x.com/Jxck_Sweeney/status/1953550777072390194%22%20%5Ct%20%22_blank">highlighted</a>&nbsp;two aircraft owned by Avelo Airlines that had been quietly added to the program.</p>
<p>“I was like, ‘Why are these Avelo planes on the list?’” he told&nbsp;<i>The Lever</i>. “Those are commercial airliners. I hadn’t really seen that.”</p>
<p>According to a review by&nbsp;<i>The Lever</i>, two Avelo Airlines planes and seven GlobalX planes are currently on the LADD list, per data on the charter airlines’ fleets&nbsp;<a href="https://www.airfleets.net/flottecie/Avelo%2520Airlines-active-b737ng.htm%22%20%5Ct%20%22_blank">maintained</a> by Airfleets&nbsp;and Sweeney’s public&nbsp;LADD list <a href="https://laddlist.com/table/%22%20%5Ct%20%22_blank">reproduction</a>.</p>
<p>At the behest of the private jet lobby, the FAA has recently moved to roll back other transparency requirements for private jets. Last year, in the months after Musk launched a crusade against Sweeney over the&nbsp;still up-and-running <a href="https://bsky.app/profile/did:plc:62cuohm6c6nefpnw4uujepty%22%20%5Ct%20%22_blank">ElonJet</a>, lawmakers inserted a provision into must-pass aviation policy legislation that established a new program to allow private jet owners to obscure their planes’ ownership information, information that was once publicly available. The FAA began to&nbsp;<a href="https://www.faa.gov/newsroom/faa-moves-protect-aircraft-owners-private-information%22%20%5Ct%20%22_blank">roll out</a>&nbsp;that program in March.</p>
<p>The move followed expansions of the LADD list, as well as the&nbsp;<a href="https://nbaa.org/aircraft-operations/security/privacy/privacy-icao-address-pia/%22%20%5Ct%20%22_blank">launch</a> of a new program&nbsp;to make it more difficult for planes to be tracked using ADS-B data.</p>

          </section>
        
      
    
  

              </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dynamically patch a Python function's source code at runtime (132 pts)]]></title>
            <link>https://ericmjl.github.io/blog/2025/8/23/wicked-python-trickery-dynamically-patch-a-python-functions-source-code-at-runtime/</link>
            <guid>45003750</guid>
            <pubDate>Sun, 24 Aug 2025 12:28:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ericmjl.github.io/blog/2025/8/23/wicked-python-trickery-dynamically-patch-a-python-functions-source-code-at-runtime/">https://ericmjl.github.io/blog/2025/8/23/wicked-python-trickery-dynamically-patch-a-python-functions-source-code-at-runtime/</a>, See on <a href="https://news.ycombinator.com/item?id=45003750">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
<!-- Append author -->
<p><small>
  <p>
    written by
    
    
    
    on
    <span id="pub_date" name="pub_date">2025-08-23</span>

    
    | tags:
    <!-- Append tags after author -->
    <span id="tags" name="tags">
      <a href="https://ericmjl.github.io/blog/tag/python/">
        python
      </a>
    </span>
    <span id="tags" name="tags">
      <a href="https://ericmjl.github.io/blog/tag/runtime/">
        runtime
      </a>
    </span>
    <span id="tags" name="tags">
      <a href="https://ericmjl.github.io/blog/tag/llm/">
        llm
      </a>
    </span>
    <span id="tags" name="tags">
      <a href="https://ericmjl.github.io/blog/tag/security/">
        security
      </a>
    </span>
    <span id="tags" name="tags">
      <a href="https://ericmjl.github.io/blog/tag/namespace/">
        namespace
      </a>
    </span>
    <span id="tags" name="tags">
      <a href="https://ericmjl.github.io/blog/tag/compilation/">
        compilation
      </a>
    </span>
    <span id="tags" name="tags">
      <a href="https://ericmjl.github.io/blog/tag/execution/">
        execution
      </a>
    </span>
    <span id="tags" name="tags">
      <a href="https://ericmjl.github.io/blog/tag/functions/">
        functions
      </a>
    </span>
    <span id="tags" name="tags">
      <a href="https://ericmjl.github.io/blog/tag/toolbot/">
        toolbot
      </a>
    </span>
    <span id="tags" name="tags">
      <a href="https://ericmjl.github.io/blog/tag/monkeypatching/">
        monkeypatching
      </a>
    </span>
    
  </p>
  
</small></p><hr>

    
    
    <!-- NOTE: I am keeping this here just for preview purposes.
     We must rely on the webp logo for the blog post.
     Pre-commit hooks will ensure that the png logo is converted to webp.-->
    

    
    <p><i><p>In this blog post, I share how I discovered a powerful Python trick: dynamically changing a function's source code at runtime using the compile and exec functions. This technique enabled me to build more flexible AI bots, like ToolBot, that can generate and execute code with access to the current environment. While this opens up exciting possibilities for LLM-powered agents and generative UIs, it also raises serious security concerns. Curious how this hack can supercharge your AI projects—and what risks you should watch out for?</p>
</i>
    </p>
    

    <p><span id="post_body" name="post_body">
      <p>So today, I learned a very dangerous and yet fascinating trick.</p>
<p>It's possible to dynamically change a Python function's source code <em>at runtime</em>.</p>
<p>What this does is open a world of possibilities in building AI bots!</p>
<h2>How this actually works</h2>
<p>Every function has a <code>.__code__</code> attribute. For example, for this function:</p>
<div><pre><span></span><span>def</span><span> </span><span>something</span><span>():</span>
    <span>raise</span> <span>NotImplementedError</span><span>()</span>
</pre></div>
<p><code>something.__code__</code> looks like this:</p>
<div><pre><span></span><span>&lt;</span><span>code</span> <span>object</span> <span>something</span> <span>at</span> <span>0x149bdfc90</span><span>,</span> <span>file</span> <span>"/var/folders/36/vb250n_s0zncstw3sk74qfxr0000gn/T/marimo_80086/__marimo__cell_kJqw_.py"</span><span>,</span> <span>line</span> <span>1</span><span>&gt;</span>
</pre></div>
<p>If I were to execute <code>something()</code>, it would return a <code>NotImplementedError</code>.</p>
<p>Now, let's say that, for some reason that I shall not speculate, I decided that I wanted <code>something()</code> to instead do multiplication by 2. I can create new source code:</p>
<div><pre><span></span><span>new_code</span> <span>=</span> <span>"""</span>
<span>def something(x: int) -&gt; int:</span>
<span>    return x * 2</span>
<span>"""</span>
</pre></div>
<p>I can do the following three magical steps to swap it in.</p>
<p>Firstly, compile the code into bytecode:</p>
<div><pre><span></span><span>compiled</span> <span>=</span> <span>compile</span><span>(</span><span>new_code</span><span>,</span> <span>"&lt;magic&gt;"</span><span>,</span> <span>"exec"</span><span>)</span>
</pre></div>
<p>The three arguments to <code>compile</code> are:</p>
<ol>
<li>The code to compile (<code>new_code</code>),</li>
<li>The filename in which the code is compiled (<code>&lt;magic&gt;</code>), and</li>
<li>The mode in which compilation happens (in this case, <code>exec</code> mode).</li>
</ol>
<p>On the third point, the docstring of <code>compile</code> explains what the three modes are:</p>
<blockquote>
<p>The mode must be 'exec' to compile a module, 'single' to compile a single (interactive) statement, or 'eval' to compile an expression.</p>
</blockquote>
<p>The <code>compiled</code> object now is a "code object":</p>
<div><pre><span></span><span>&lt;</span><span>code</span> <span>object</span> <span>&lt;</span><span>module</span><span>&gt;</span> <span>at</span> <span>0x149bcbad0</span><span>,</span> <span>file</span> <span>"&lt;magic&gt;"</span><span>,</span> <span>line</span> <span>1</span><span>&gt;</span>
</pre></div>
<p>I can then execute the compiled code to make it imported into a particular namespace.</p>
<div><pre><span></span><span>ns</span> <span>=</span> <span>{}</span>
<span>exec</span><span>(</span><span>compiled</span><span>,</span> <span>{},</span> <span>ns</span><span>)</span>
</pre></div>
<p>Here, the three arguments passed to <code>exec</code> are:</p>
<ol>
<li>The code we want to execute (<code>compiled</code>), and in this case, by "executing" it after being compiled in <code>exec</code> mode, we are really just simulating an <code>import</code> into our namespace.</li>
<li>The globals (<code>{}</code>), which in this case are passed in as an empty dictionary. These are the global variables that are available to the function at runtime.</li>
<li><code>ns</code> is the "namespace" in which we want the function to be present; namespaces in Python are just dictionary mappings from function/object name to the function/object itself.</li>
</ol>
<p>Finally, I can replace my existing function with the compiled function inserted into the <code>ns</code> namespace:</p>
<div><pre><span></span><span>something_new</span> <span>=</span> <span>ns</span><span>[</span><span>"something"</span><span>]</span>
<span>print</span><span>(</span><span>something_new</span><span>(</span><span>21</span><span>))</span>  <span># this will print 42 to stdout!</span>
</pre></div>
<p>But really, the real lesson here is not that one can monkeypatch over an existing Python function's source code at runtime, but that you can actually <strong>compile the string of a Python function definition and give it access to a namespace's variables</strong>, including that of the current global namespace.</p>
<h2>When would you ever want to do this?</h2>
<p>At first glance, never really! This is a bit of hackery that lives on the fringes of Python-land, and is basically a party trick.</p>
<p>But as it turns out, I <em>actually</em> had a real motivation for wanting to do this.</p>
<p>Within <a href="https://github.com/ericmjl/llamabot">LlamaBot</a>, I've always had <code>AgentBot</code> as a first-pass implementation of what I think an LLM agent should look like, having studied LLM agent implementations in other libraries. However, I've never been fully satisfied with <code>AgentBot</code>'s implementation. The core issue was that it mixed too many concerns together - function execution, function call determination, and user response generation all lived in the same loop.</p>
<p>Here's what <code>AgentBot</code> looked like at a high level:</p>
<div><pre><span></span><span>class</span><span> </span><span>AgentBot</span><span>(</span><span>SimpleBot</span><span>):</span>
    <span>def</span><span> </span><span>__init__</span><span>(</span><span>self</span><span>,</span> <span>model_name</span><span>,</span> <span>tools</span><span>,</span> <span>**</span><span>kwargs</span><span>):</span>
        <span>...</span>

    <span>def</span><span> </span><span>__call__</span><span>(</span><span>self</span><span>,</span> <span>*</span><span>messages</span><span>,</span> <span>num_iterations</span><span>=</span><span>10</span><span>):</span>
        <span>for</span> <span>i</span> <span>in</span> <span>range</span><span>(</span><span>num_iterations</span><span>):</span>
            <span>response</span> <span>=</span> <span>...</span> <span># get response object, passing in messages</span>
            <span>results</span> <span>=</span> <span>[]</span>
            <span># Execute tool calls if they are present</span>
            <span>if</span> <span>response</span><span>.</span><span>tool_calls</span><span>:</span>
                <span>for</span> <span>tool_call</span> <span>in</span> <span>response</span><span>.</span><span>tool_calls</span><span>:</span>
                    <span>result</span> <span>=</span> <span>self</span><span>.</span><span>name_to_tools</span><span>[</span><span>tool_call</span><span>.</span><span>name</span><span>](</span><span>**</span><span>json</span><span>.</span><span>loads</span><span>(</span><span>tool_call</span><span>.</span><span>arguments</span><span>))</span>

            <span># continue until LLM decides we're done.</span>
            <span>else</span><span>:</span>
                <span># just respond to users.</span>
</pre></div>
<p>While this worked, it wasn't great at separating concerns. I had function execution mixed in with function call determination mixed in with responding to a user.</p>
<p>The bigger limitation was with code execution tools. My original implementation isolated generated code in a Docker container sandbox, which was secure but meant the code couldn't access variables from my current Python runtime. This severely limited what kinds of useful tasks the bot could perform with my existing data and variables.</p>
<p>I realized that if I could:</p>
<ol>
<li>Use an LLM to generate Python functions that referenced existing variables in my runtime,</li>
<li>Compile those functions on-the-fly within the same Python environment, and</li>
<li>Execute them with access to my current namespace,</li>
</ol>
<p>I could build something much more powerful. This led me to create <code>ToolBot</code> within LlamaBot.</p>
<h2>ToolBot focuses on tool selection instead of execution</h2>
<p><code>ToolBot</code> takes a different approach - it focuses purely on tool selection rather than execution. Here's the key structure:</p>
<div><pre><span></span><span>class</span><span> </span><span>ToolBot</span><span>(</span><span>SimpleBot</span><span>):</span>
    <span>def</span><span> </span><span>__init__</span><span>(</span><span>self</span><span>,</span> <span>system_prompt</span><span>,</span> <span>model_name</span><span>,</span> <span>tools</span><span>=</span><span>None</span><span>,</span> <span>**</span><span>kwargs</span><span>):</span>
        <span># Initialize with core tools like today_date and respond_to_user</span>
        <span>all_tools</span> <span>=</span> <span>[</span><span>today_date</span><span>,</span> <span>respond_to_user</span><span>]</span>
        <span>if</span> <span>tools</span><span>:</span>
            <span>all_tools</span><span>.</span><span>extend</span><span>(</span><span>tools</span><span>)</span>

        <span>self</span><span>.</span><span>tools</span> <span>=</span> <span>[</span><span>f</span><span>.</span><span>json_schema</span> <span>for</span> <span>f</span> <span>in</span> <span>all_tools</span><span>]</span>
        <span>self</span><span>.</span><span>name_to_tool_map</span> <span>=</span> <span>{</span><span>f</span><span>.</span><span>__name__</span><span>:</span> <span>f</span> <span>for</span> <span>f</span> <span>in</span> <span>all_tools</span><span>}</span>

    <span>def</span><span> </span><span>__call__</span><span>(</span><span>self</span><span>,</span> <span>message</span><span>):</span>
        <span># Process message and return tool calls (but don't execute them)</span>
        <span>response</span> <span>=</span> <span>make_response</span><span>(</span><span>self</span><span>,</span> <span>message_list</span><span>,</span> <span>stream</span><span>=</span><span>stream</span><span>)</span>
        <span>tool_calls</span> <span>=</span> <span>extract_tool_calls</span><span>(</span><span>response</span><span>)</span>
        <span>return</span> <span>tool_calls</span>  <span># Just return the calls, don't execute</span>
</pre></div>
<p>The key insight: <code>ToolBot</code> just selects a tool to be executed, but does <em>not</em> execute it. Instead, it returns the tools to be called to the external environment, giving you full control over execution.</p>
<h2>The magic happens with write_and_execute_code</h2>
<p>One of the most powerful tools that can be chosen is <code>write_and_execute_code</code>. Here's the core implementation:</p>
<div><pre><span></span><span>def</span><span> </span><span>write_and_execute_code</span><span>(</span><span>globals_dict</span><span>:</span> <span>dict</span><span>):</span>
    <span>@tool</span>
    <span>def</span><span> </span><span>write_and_execute_code_wrapper</span><span>(</span><span>placeholder_function</span><span>:</span> <span>str</span><span>,</span> <span>keyword_args</span><span>:</span> <span>dict</span><span>):</span>
<span>        </span><span>"""Write and execute `placeholder_function` with the passed in `keyword_args`.</span>

<span>        Use this tool for any task that requires custom Python code generation and execution.</span>
<span>        This tool has access to ALL globals in the current runtime environment (variables, dataframes, functions, etc.).</span>
<span>        Perfect for: data analysis, calculations, transformations, visualizations, custom algorithms.</span>

<span>        ## Code Generation Guidelines:</span>

<span>        1. **Write self-contained Python functions** with ALL imports inside the function body</span>
<span>        2. **Place all imports at the beginning of the function**: import statements must be the first lines inside the function</span>
<span>        3. **Include all required libraries**: pandas, numpy, matplotlib, etc. - import everything the function needs</span>
<span>        4. **Leverage existing global variables**: Can reference variables that exist in the runtime</span>
<span>        5. **Include proper error handling** and docstrings</span>
<span>        6. **Provide keyword arguments** when the function requires parameters</span>
<span>        7. **Make functions reusable** - they will be stored globally for future use</span>
<span>        8. **ALWAYS RETURN A VALUE**: Every function must explicitly return something - never just print, display, or show results without returning them. Even for plotting functions, return the figure/axes object.</span>

<span>        ## Function Arguments Handling:</span>

<span>        **CRITICAL**: You MUST match the function signature with the keyword_args:</span>
<span>        - **If your function takes NO parameters** (e.g., `def analyze_data():`), then pass an **empty dictionary**: `{}`</span>
<span>        - **If your function takes parameters** (e.g., `def filter_data(min_age, department):`), then pass the required arguments as a dictionary: `{"min_age": 30, "department": "Engineering"}`</span>
<span>        - **Never pass keyword_args that don't match the function signature** - this will cause execution errors</span>

<span>        ## Code Structure Example:</span>

<span>        ```python</span>
<span>        # Function with NO parameters - use empty dict {}</span>
<span>        def analyze_departments():</span>
<span>            '''Analyze department performance.'''</span>
<span>            import pandas as pd</span>
<span>            import numpy as np</span>
<span>            result = fake_df.groupby('department')['salary'].mean()</span>
<span>            return result</span>
<span>        # Function WITH parameters - pass matching keyword_args</span>
<span>        def filter_employees(min_age, department):</span>
<span>            '''Filter employees by criteria.'''</span>
<span>            import pandas as pd</span>
<span>            filtered = fake_df[(fake_df['age'] &gt;= min_age) &amp; (fake_df['department'] == department)]</span>
<span>            return filtered</span>
<span>        ```</span>

<span>        ## Return Value Requirements:</span>

<span>        - **Data analysis functions**: Return the computed results (numbers, DataFrames, lists, dictionaries)</span>
<span>        - **Plotting functions**: Return the figure or axes object (e.g., `return fig` or `return plt.gca()`)</span>
<span>        - **Filter/transformation functions**: Return the processed data</span>
<span>        - **Calculation functions**: Return the calculated values</span>
<span>        - **Utility functions**: Return relevant output (status, processed data, etc.)</span>
<span>        - **Never return None implicitly** - always have an explicit return statement</span>

<span>        ## Code Access Capabilities:</span>

<span>        The generated code will have access to:</span>
<span>        - All global variables and dataframes in the current session</span>
<span>        - Any previously defined functions</span>
<span>        - The ability to import any standard Python libraries within the function</span>
<span>        - The ability to create new reusable functions that will be stored globally</span>
<span>        :param placeholder_function: The function to execute (complete Python function as string).</span>
<span>        :param keyword_args: The keyword arguments to pass to the function (dictionary matching function parameters).</span>
<span>        :return: The result of the function execution.</span>
<span>        """</span>

        <span># Parse the code to extract the function name</span>
        <span>tree</span> <span>=</span> <span>ast</span><span>.</span><span>parse</span><span>(</span><span>placeholder_function</span><span>)</span>
        <span>function_name</span> <span>=</span> <span>None</span>
        <span>for</span> <span>node</span> <span>in</span> <span>ast</span><span>.</span><span>walk</span><span>(</span><span>tree</span><span>):</span>
            <span>if</span> <span>isinstance</span><span>(</span><span>node</span><span>,</span> <span>ast</span><span>.</span><span>FunctionDef</span><span>):</span>
                <span>function_name</span> <span>=</span> <span>node</span><span>.</span><span>name</span>
                <span>break</span>
        <span># Compile and execute the function with access to globals</span>
        <span>ns</span> <span>=</span> <span>globals_dict</span>
        <span>compiled</span> <span>=</span> <span>compile</span><span>(</span><span>placeholder_function</span><span>,</span> <span>"&lt;llm&gt;"</span><span>,</span> <span>"exec"</span><span>)</span>
        <span>exec</span><span>(</span><span>compiled</span><span>,</span> <span>globals_dict</span><span>,</span> <span>ns</span><span>)</span>
        <span>return</span> <span>ns</span><span>[</span><span>function_name</span><span>](</span><span>**</span><span>keyword_args</span><span>)</span>

    <span>return</span> <span>write_and_execute_code_wrapper</span>
</pre></div>
<p>This extensive docstring gets passed as part of the JSON schema and effectively serves as instructions to the LLM on when and how to use this tool. I stripped out logging and error handling to simplify what's shown here, but the actual codebase has more robustness built in.</p>
<p>Notice how <code>ToolBot</code>, and more specifically <code>write_and_execute_code</code>, gains explicit access to the <code>globals()</code> dictionary when a user passes it in. This approach allows us to ensure that function execution takes place within the proper namespace. If <code>ToolBot</code> chooses <code>write_and_execute_code</code>, I can control exactly where and how it executes within my Python runtime environment - and this opens up a world of possibilities!</p>
<p>For example, inspired by <a href="https://marimo.io/blog/marimo-chat">the Marimo blog</a>, which wrote about generative UIs and tool calling:</p>
<blockquote>
<p>marimo’s chat interface supports Generative UI - the ability to stream rich, interactive UI components directly from LLM responses. This goes beyond traditional text and markdown outputs, allowing chatbots to return dynamic elements like tables, charts, and interactive visualizations.</p>
</blockquote>
<p>I decided to build out a <em>generalized</em> version of a tool that an LLM could choose to call on that would also have access to any variable present within the runtime environment... much like Marimo's AI chat has access to any variable within the environment with an <code>@variable_name</code>, now I just dump the full set of <code>globals()</code> into the LLM's context window, and that's what <code>write_and_execute_code</code> looked like.</p>
<p>Here's an example, imagine I have two dataframes that I want an LLM to manipulate. Without <code>write_and_execute_code</code>, I'd have to write bespoke tools for the dataframe, in which I access the <code>df</code> as a "global" variable, much like the following:</p>
<div><pre><span></span><span>@lmb</span><span>.</span><span>tool</span>
<span>def</span><span> </span><span>chart_data</span><span>(</span><span>x_encoding</span><span>:</span> <span>str</span><span>,</span> <span>y_encoding</span><span>:</span> <span>str</span><span>,</span> <span>color</span><span>:</span> <span>str</span><span>):</span>
<span>    </span><span>"""Generate an altair chart"""</span>
    <span>import</span><span> </span><span>altair</span><span> </span><span>as</span><span> </span><span>alt</span>
    <span>return</span> <span>(</span>
        <span>alt</span><span>.</span><span>Chart</span><span>(</span><span>df</span><span>)</span>
        <span>.</span><span>mark_circle</span><span>()</span>
        <span>.</span><span>encode</span><span>(</span><span>x</span><span>=</span><span>x_encoding</span><span>,</span> <span>y</span><span>=</span><span>y_encoding</span><span>,</span> <span>color</span><span>=</span><span>color</span><span>)</span>
        <span>.</span><span>properties</span><span>(</span><span>width</span><span>=</span><span>500</span><span>)</span>
    <span>)</span>
</pre></div>
<p>So the writing on the wall is that I'd have to write one tool for every possible operation that I'd desire, but that's a big hassle. With this <code>globals()</code>, <code>compile</code>, and <code>exec</code> trickery baked into <code>write_and_execute_code</code>, I no longer have to specify bespoke tools for the environment that I'm in!</p>
<p>Further more, inspired by the Marimo blog post, <code>ToolBot</code> is designed to just do the tool picking, delegating the execution and return of the broader LLM-powered Python program back to the developer. In this way, I can give myself more flexibility when building entire "Agentic" programs, more so than if I were to use <code>AgentBot</code> in its current form. It allowed me to build a more powerful version of a tool-calling agent using <code>ToolBot</code> with generative UIs in a Marimo notebook. For this, it's easier to demo via a screencast instead of by me describing it in prose:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/tk5wvb556f8?si=sXSRulZ2ooBplapr" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
<p>And if you're curious to try running it, you can run it with the following command:</p>
<div><pre><span></span>uvx<span> </span>marimo<span> </span>edit<span> </span>--sandbox<span> </span>https://raw.githubusercontent.com/ericmjl/website/refs/heads/main/content/blog/wicked-python-trickery-dynamically-patch-a-python-functions-source-code-at-runtime/agents.py
</pre></div>
<h2>Security concerns are very real with this approach</h2>
<p>Comparing this to what we had before with <code>write_and_execute_script</code>, which performed execution in a sandboxed Docker container with limited read/write capabilities, <code>write_and_execute_code</code> is <em>much, much less secure</em>.</p>
<p>Obviously, I'm playing with fire here. A malicious LLM output could run code directly and do enormous damage to my machine and from my machine to the outside world. I have yet to implement code sanitization, but one big idea I have, which I just learned through discourse with GPT-4, is to use <a href="https://github.com/zopefoundation/RestrictedPython">Restricted Python</a>. I think that will be the next big upgrade after I let the current version of <code>write_and_execute_code</code> sit for a while.</p>
<p>As such, I don't suggest that the <code>write_and_execute_code</code> pattern be used for anything really serious in its current form.</p>
<h2>What I learned from this Python trickery</h2>
<p>This journey taught me several things. First, Python's runtime is far more malleable than I initially realized - the ability to compile strings into executable code and inject them into specific namespaces opens up incredible possibilities for dynamic programming.</p>
<p>Second, building effective LLM agents isn't just about the AI - it's about thoughtful system design. Separating tool selection from execution (as <code>ToolBot</code> does) creates much more flexible and controllable systems than monolithic agents.</p>
<p>Finally, this wouldn't have been possible without <a href="https://ericmjl.github.io/blog/2025/6/7/principles-for-using-ai-autodidactically/">autodidactic learning with LLMs</a>. I'm becoming more and more convinced that LLMs are a great tool for learning, but one must learn how to use them for learning, and one must <a href="https://ericmjl.github.io/blog/2025/7/13/earn-the-privilege-to-use-automation/">earn the automation</a> as well.</p>

    </span></p><hr>

    <p><i>Cite this blog post:</i></p><div>
    <pre><span id="citation-text"><span><span>@article</span>{
    <span>ericmjl-2025-wicked-python-trickery-dynamically-patch-a-python-functions-source-code-at-runtime</span>,
    <span>author</span> = <span>{Eric J. Ma}</span>,
    <span>title</span> = <span>{Wicked Python trickery - dynamically patch a Python function's source code at runtime}</span>,
    <span>year</span> = <span>{2025}</span>,
    <span>month</span> = <span>{08}</span>,
    <span>day</span> = <span>{23}</span>,
    <span>howpublished</span> = <span>{\url{https://ericmjl.github.io}}</span>,
    <span>journal</span> = <span>{Eric J. Ma's Blog}</span>,
    <span>url</span> = <span>{https://ericmjl.github.io/blog/2025/8/23/wicked-python-trickery-dynamically-patch-a-python-functions-source-code-at-runtime}</span>,
}
  </span></span></pre>
    </div>

    

    
    <hr>
    <p>
      <i>I send out a newsletter with tips and tools
        for data scientists. Come check it out at
        <a href="https://dspn.substack.com/">Substack</a>.</i>
    </p>
    <p>
      <i><span>If you would like to sponsor the coffee that goes into making my posts,
        please consider </span>
        <a href="https://github.com/sponsors/ericmjl">GitHub Sponsors</a>!</i>
    </p>
    <p>
      <i><span>Finally, I do free 30-minute GenAI strategy calls for teams
        that are looking to leverage GenAI for maximum impact. Consider </span>
        <a href="https://calendly.com/ericmjl/llm-chat">booking a call on Calendly</a>
        if you're interested!</i>
      
    </p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Clearcam – Add AI object detection to your IP CCTV cameras (164 pts)]]></title>
            <link>https://github.com/roryclear/clearcam</link>
            <guid>45003420</guid>
            <pubDate>Sun, 24 Aug 2025 11:34:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/roryclear/clearcam">https://github.com/roryclear/clearcam</a>, See on <a href="https://news.ycombinator.com/item?id=45003420">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">clearcam</h2><a id="user-content-clearcam" aria-label="Permalink: clearcam" href="#clearcam"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Turn your RTSP enabled camera or old iPhone into a state of the art AI Security Camera</h2><a id="user-content-turn-your-rtsp-enabled-camera-or-old-iphone-into-a-state-of-the-art-ai-security-camera" aria-label="Permalink: Turn your RTSP enabled camera or old iPhone into a state of the art AI Security Camera" href="#turn-your-rtsp-enabled-camera-or-old-iphone-into-a-state-of-the-art-ai-security-camera"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Now on the Apple App Store</h2><a id="user-content-now-on-the-apple-app-store" aria-label="Permalink: Now on the Apple App Store" href="#now-on-the-apple-app-store"></a></p>
<p dir="auto"><a href="https://apps.apple.com/app/clearcam/id6743237694" rel="nofollow">https://apps.apple.com/app/clearcam/id6743237694</a></p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/roryclear/clearcam/blob/main/images/server.PNG"><img src="https://github.com/roryclear/clearcam/raw/main/images/server.PNG" alt="Front" width="400"></a>
  &nbsp;&nbsp;&nbsp;
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/roryclear/clearcam/blob/main/images/front.PNG"><img src="https://github.com/roryclear/clearcam/raw/main/images/front.PNG" alt="Server" width="400"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">video demo:</h2><a id="user-content-video-demo" aria-label="Permalink: video demo:" href="#video-demo"></a></p>
<p dir="auto"><a href="https://x.com/RoryClear/status/1959249250811785405" rel="nofollow">https://x.com/RoryClear/status/1959249250811785405</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">install and run NVR + inference with homebrew</h2><a id="user-content-install-and-run-nvr--inference-with-homebrew" aria-label="Permalink: install and run NVR + inference with homebrew" href="#install-and-run-nvr--inference-with-homebrew"></a></p>
<ol dir="auto">
<li>brew tap roryclear/tap</li>
<li>brew install clearcam</li>
<li>clearcam</li>
<li>(optional) enter your Clearam premium userID (viewable in iOS app) to receive streams and notifications</li>
<li>open localhost:8080 in your browser</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">run NVR + inference in python (from source)</h2><a id="user-content-run-nvr--inference-in-python-from-source" aria-label="Permalink: run NVR + inference in python (from source)" href="#run-nvr--inference-in-python-from-source"></a></p>
<ol dir="auto">
<li>pip install -r requirements.txt</li>
<li>python3 clearcam.py</li>
<li>(optional) enter your Clearam premium userID (viewable in iOS app) to receive streams and notifications</li>
<li>open localhost:8080 in your browser</li>
</ol>
<ul dir="auto">
<li>use BEAM=2 python3 clearcam.py for extra performance (wait time on first run)</li>
<li>use --yolo_size={s, m, l, or x for larger yolov8 variants}</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">python requirements</h2><a id="user-content-python-requirements" aria-label="Permalink: python requirements" href="#python-requirements"></a></p>
<ul dir="auto">
<li>ffmpeg</li>
<li>tinygrad</li>
<li>numpy</li>
<li>cv2</li>
<li>scipy</li>
<li>lap</li>
<li>cython_bbox</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">install ios from source</h2><a id="user-content-install-ios-from-source" aria-label="Permalink: install ios from source" href="#install-ios-from-source"></a></p>
<ol dir="auto">
<li>git clone <a href="https://github.com/roryclear/clearcam.git">https://github.com/roryclear/clearcam.git</a></li>
<li>open ios/clearcam.xcodeproj</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">iOS requirements</h2><a id="user-content-ios-requirements" aria-label="Permalink: iOS requirements" href="#ios-requirements"></a></p>
<ul dir="auto">
<li>iOS 15 or newer</li>
<li>iPhone SE (1st gen) or newer (older iPhones <em>might</em> work)</li>
<li>dependencies: NONE!</li>
</ul>
<br>
<markdown-accessiblity-table></markdown-accessiblity-table>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/roryclear/clearcam/blob/main/images/browser_playback.PNG"><img src="https://github.com/roryclear/clearcam/raw/main/images/browser_playback.PNG" alt="Screenshot"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Signing Up for Clearcam Premium</h2><a id="user-content-signing-up-for-clearcam-premium" aria-label="Permalink: Signing Up for Clearcam Premium" href="#signing-up-for-clearcam-premium"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>View your live camera feeds remotely.</li>
<li>Receive notifications on events (objects/people detected).</li>
<li>View event clips remotely.</li>
<li>End-to-end encryption on all data.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to Sign Up on Android</h2><a id="user-content-how-to-sign-up-on-android" aria-label="Permalink: How to Sign Up on Android" href="#how-to-sign-up-on-android"></a></p>
<p dir="auto">Sign ups on android are not yet supported.<br>
In the meantime, please refer to the <a href="#how-to-sign-up-on-ios">How to Sign Up on iOS</a> section and use the user ID on android.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to Sign Up on iOS</h2><a id="user-content-how-to-sign-up-on-ios" aria-label="Permalink: How to Sign Up on iOS" href="#how-to-sign-up-on-ios"></a></p>
<ol dir="auto">
<li><strong>Install Clearcam</strong> from the App Store.</li>
<li>Open the app and go to <strong>Settings</strong>.</li>
<li>Tap <strong>Upgrade to Premium</strong>.</li>
<li>Complete the payment using the App Store’s secure checkout.</li>
<li>After upgrading, return to <strong>Settings</strong> in Clearcam.</li>
<li>Locate your <strong>User ID</strong> — you’ll use this to log in on any device, including Android.</li>
</ol>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Bicyclopedia (102 pts)]]></title>
            <link>https://bicyclopedia.lemoing.ca/</link>
            <guid>45003296</guid>
            <pubDate>Sun, 24 Aug 2025 11:15:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bicyclopedia.lemoing.ca/">https://bicyclopedia.lemoing.ca/</a>, See on <a href="https://news.ycombinator.com/item?id=45003296">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="canvas_container">
  <canvas id="bike_canvas" width="1340" height="750">
    <h2>Welcome!</h2>
    <p>This is an interactive exploration of the parts of a bicycle.</p>
    <p>If you're reading this message, the images may still be loading.</p>
    <p>If you are using a screen reader or have Javascript disabled, unfortunately you won't be able to see the images or animations of the parts, but you can still read the descriptions and source code <a href="https://github.com/nlemoing/bici/tree/master/bike.ts">here</a> and read more about this project <a href="https://lemoing.ca/blog/bicyclopedia">here</a>.</p>
    <p>Thank you for visiting!</p>
  </canvas>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A German ISP tampered with their DNS – specifically to sabotage my website (717 pts)]]></title>
            <link>https://lina.sh/blog/telefonica-sabotages-me</link>
            <guid>45003033</guid>
            <pubDate>Sun, 24 Aug 2025 10:27:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lina.sh/blog/telefonica-sabotages-me">https://lina.sh/blog/telefonica-sabotages-me</a>, See on <a href="https://news.ycombinator.com/item?id=45003033">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
                <p>One of Germany's biggest ISPs changed how their DNS works, right after I exposed an organization that they’re part of.</p>
            </section><article>
                <h2>My website: Publishing Germany's secret internet blocklist</h2>
<p>In Germany, we have the <em>Clearingstelle Urheberrecht im Internet</em> (CUII) - literally 'Copyright Clearinghouse for the Internet', 
a private organization that decides what websites to block, corporate interests rewriting our free internet.
No judges, no transparency, just a bunch of ISPs and major copyright holders deciding what your eyes can see.<br>
I decided to create a website, <a href="https://cuiiliste.de/">cuiiliste.de</a>, to find blocked domains, as the CUII refuses to publish such a list.
To read more about the CUII, check out <a href="https://lina.sh/blog/exposing-the-cuii">one of my previous blog posts</a>. Germany's four biggest ISPs 
(Telekom, Vodafone, 1&amp;1 and Telefonica (o2)) are all part of the CUII.</p>
<h2>Yet another slip-up by the CUII</h2>
<p>This week, Netzpolitik.org published an article about the CUII's latest blunder<sup id="fnref:1"><a href="#fn:1">1</a></sup>, based on information I gathered. 
They managed to block domains that no longer even existed: websites that had already been seized and taken offline when they were blocked.
It's not the first time the CUII has tripped over its own feet, and this mistake likely didn’t sit well with them.
In the past, it was <em>really</em> easy to find out if a domain was blocked by the CUII.
If you asked an ISP's DNS server (basically the internet's phone book) for a site and got a CNAME to <code>notice.cuii.info</code>, you knew it was blocked.<br>
What this basically means in case you're not a tech nerd:<br>
You can check the phone book of an ISP (the "DNS server") where to find a website, and you'd receive a note saying "This site is blocked by the CUII" if the page is blocked.
Automating this was simple, I could basically just ask "Hey, where can I find this site?" and immediately knew if it was blocked.
The CUII apparently did <em>not</em> like the fact that it was so easy for me to check if a domain was blocked. They want to keep their list secret.<br>
ISPs like Telekom, 1&amp;1 and Vodafone actually all stopped using this response a few months ago, 
after older articles about the CUII's past failures were published. Instead, they started pretending that blocked sites didn't exist at all.
Straight up erasing entries from the phone book. You could not tell if a site was blocked or just didn't exist.
Telefonica (the parent company of for example o2, Germany's <strong>fourth-biggest ISP</strong><sup id="fnref:2"><a href="#fn:2">2</a></sup>), apparently didn't get this memo, and they still used <code>notice.cuii.info</code> in their DNS responses.  </p>
<p>On cuiiliste.de, anyone can enter a domain, and see if it is blocked by the CUII, and which ISPs block it specifically.</p>
<h3>I get a new visitor</h3>
<p>Telefonica modified their DNS servers, specifically saying that <code>blau-sicherheit.info</code> was blocked by the CUII.
At 11:06 AM last Friday, someone from Telefonica's network checked if <code>blau-sicherheit.info</code> was blocked on my site. 
The twist? Telefonica seems to own this domain. Blau is one of their brands<sup id="fnref:3"><a href="#fn:3">3</a></sup>, and <code>blau-sicherheit.info</code> wasn’t some piracy hub -
it appears to be a test domain of theirs. 
My tool flagged it as blocked because Telefonica's DNS servers said so. 
Why would they block their own domain?</p>
<p><a href="https://lina.sh/assets/blog/blau-sicherheit-probe.png" target="_blank"><img alt="Telefonica's DNS response" src="https://lina.sh/assets/blog/blau-sicherheit-probe.png"></a>
To recap:</p>
<ul>
<li> Telefonica blocks their own domain</li>
<li> Someone from Telefonica visits my website to check if I detect this</li>
<li> I <i>do</i> in fact detect this</li>
</ul>
<h3>Telefonica modifies how their blocking works... to mess specifically with my website</h3>
<p>Two hours after this suspicious query, I was bombarded with Notifications. 
My program thought that the CUII had suddenly unblocked hundreds of domains.<br>
The reason: Telefonica had altered their DNS servers to stop redirecting blocked domains to <code>notice.cuii.info</code>.
Now they pretend that the domain doesn't exist at all, after they <em>specifically</em> blocked their own domain, likely to find out how my website works.<br>
I had to spend my entire Friday afternoon fixing this mess, and now everything is fully operational again.
<a href="https://lina.sh/assets/blog/git-pull.png" target="_blank"><img alt="Git pull" src="https://lina.sh/assets/blog/git-pull.png"></a>
The fix worked, but there’s a catch: without the <code>notice.cuii.info</code> redirect, it's harder to confirm if a block is actually the CUII's doing. 
Sometimes ISPs block sites for other reasons, like terrorism content (<a href="https://lina.sh/blog/german-isps-block-terrorist-content">I wrote about that too</a>). 
I try to compensate this by cross-checking domains against a list of known non-CUII-blocks.
<a href="https://lina.sh/assets/blog/almanar-blocked.png" target="_blank"><img alt="Probing a site blocked by ISPs, but not by the CUII" src="https://lina.sh/assets/blog/almanar-blocked.png"></a></p>
<h3>Why sabotage my website?</h3>
<p>The timing is more than suspicious. 
Right after Netzpolitik’s article exposed the CUII for blocking non-existent domains, they make it harder to track their mistakes. 
Coincidence? Or a move to bury future slip-ups? 
We can only speculate.
Regardless of intent, the result is the same: less transparency and harder oversight. And that benefits the CUII, not the public.  </p>
<p>In this context, Netzpolitik.org released another article (German): 
<a href="https://netzpolitik.org/2025/netzsperren-provider-verstecken-welche-domains-sie-sperren/">Netzpolitik.org: Provider verstecken, welche Domains sie sperren</a></p>
<h3>Sources</h3>

            </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[US halts work on almost finished wind farm because national security (109 pts)]]></title>
            <link>https://www.npr.org/2025/08/23/nx-s1-5513919/trump-stops-offshore-wind-renewable-energy</link>
            <guid>45002747</guid>
            <pubDate>Sun, 24 Aug 2025 09:23:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.npr.org/2025/08/23/nx-s1-5513919/trump-stops-offshore-wind-renewable-energy">https://www.npr.org/2025/08/23/nx-s1-5513919/trump-stops-offshore-wind-renewable-energy</a>, See on <a href="https://news.ycombinator.com/item?id=45002747">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="storytext">
      <div id="resg-s1-84954">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/900/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 900w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/1200/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 1200w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/1800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 1800w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg" sizes="(min-width: 1025px) 650px, calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/900/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 900w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/1200/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 1200w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/1800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg 1800w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg" sizes="(min-width: 1025px) 650px, calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5786x3857+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fb6%2Faa%2F10fd41f4471693bc183be3012ec6%2Fap25212463742062.jpg" alt="Offshore wind blades and other equipment in New London, Conn. President Trump is a longtime critic of the wind industry." fetchpriority="high">
        </picture>
</div>
<div>
    <div>
        <p>
                Offshore wind blades and other equipment in New London, Conn. President Trump is a longtime critic of the wind industry.
                <b aria-label="Image credit">
                    
                    Seth Wenig/AP
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Seth Wenig/AP
        
    </span>
</p></div>
   </div>
   <p>The Trump administration has ordered companies to stop construction of a wind farm that's being built off the coast of Rhode Island.</p>   <p>The acting director of the Bureau of Ocean Energy Management, Matthew Giacona, <a href="https://www.boem.gov/sites/default/files/documents/renewable-energy/Director%26%23039%3BsOrder-20250822.pdf?VersionId=VO3AWAHsV_kDvT048xf8dG7A.Rsj6HZJ" target="_blank"><u>wrote in a letter</u></a> to one of the developers, a Danish firm called Ørsted, that the government was halting work on the almost-finished project in order to "address concerns related to the protection of national security interests of the United States." The project is also being developed by Global Infrastructure Partners.</p>   <p>The order to stop work on the Revolution Wind project is the latest move by the Trump administration targeting the country's renewable energy industry. President Trump, a longtime critic of the wind industry, in January <a href="https://www.whitehouse.gov/presidential-actions/2025/01/temporary-withdrawal-of-all-areas-on-the-outer-continental-shelf-from-offshore-wind-leasing-and-review-of-the-federal-governments-leasing-and-permitting-practices-for-wind-projects/" target="_blank"><u>issued a moratorium</u></a> on new development of offshore wind projects. The Internal Revenue Service <a href="https://www.nytimes.com/2025/08/15/climate/irs-wind-solar-tax-credits.html" target="_blank"><u>recently put out new guidance</u></a> that makes it harder for companies building wind and solar projects to qualify for federal tax incentives. And the <a href="https://public-inspection.federalregister.gov/2025-16191.pdf?utm_campaign=pi+subscription+mailing+list&amp;utm_medium=email&amp;utm_source=federalregister.gov" target="_blank"><u>Commerce Department is investigating</u></a> whether imports of wind turbines and their components threaten national security.</p>   
   <p>Ørsted <a href="https://orsted.com/en/company-announcement-list/2025/08/revolution-wind-receives-offshore-stop-work-order--145387701" target="_blank"><u>said in a statement</u></a> that it is "evaluating all options to resolve the matter expeditiously," including legal action.</p>   <p><a href="https://revolution-wind.com/" target="_blank"><u>Revolution Wind</u></a> is located in federal waters 15 miles south of Rhode Island. Construction started in 2023, and the project has been slated to begin sending power to homes and businesses in Rhode Island and Connecticut starting next year.</p>   <p>"Any pause or uncertainty at this stage could ripple across jobs, contracts, and communities already benefiting from the project," Erik Milito, president of the National Ocean Industries Association, a trade group whose members include wind project developers as well as oil and gas companies, <a href="https://www.noia.org/noia-statement-on-revolution-wind/" target="_blank"><u>said in a statement</u></a>.</p>   <p>"Today, the U.S. has only one fully operational large-scale offshore wind project producing power," Milito said. "That is not enough to meet America's rising energy needs. We need more energy of all types, including oil and gas, wind, and new and emerging technologies."</p>   <p>The Bureau of Ocean Energy Management didn't respond to messages seeking comment.</p>   <p>Industry <a href="https://www.npr.org/2025/07/15/nx-s1-5461128/congress-energy-tax-credit-solar-wind" target="_blank"><u>analysts have said</u></a> that limiting renewable energy development amid rising electricity demand threatens to drive up power prices across the country.</p>   <p>"This is not the first time extreme partisan politics has derailed sound energy policy," Jason Grumet, chief executive of American Clean Power, an industry group, <a href="https://cleanpower.org/news/acp-statement-on-revolution-wind-stop-work-order/" target="_blank"><u>said in a statement</u></a> responding to the Trump administration's stop-work order to Revolution Wind. "The unfortunate message to investors is clear: the U.S. is no longer a reliable place for long-term energy investments."</p>   
   <p>In April, the Interior Department <a href="https://www.npr.org/2025/04/17/nx-s1-5367582/trump-new-york-wind-energy-offshore" target="_blank"><u>halted work</u></a> on an offshore wind project near the coast of Long Island. Interior Secretary Doug Burgum <a href="https://chrissmith.house.gov/uploadedfiles/trump_admin_dept_of_interior_empire_wind_memo_signed_by_secretary_burgum_april_16_2025.pdf" target="_blank"><u>wrote in a letter</u></a> to the Bureau of Ocean Energy Management at the time that approval of the project, called Empire Wind, "was rushed through by the prior administration without sufficient analysis."</p>   <p>Construction on Empire Wind <a href="https://www.equinor.com/news/20250519-empire-wind-project-resumes-construction" target="_blank"><u>resumed in May</u></a> when the Trump administration lifted the stop-work order. But the disruption was costly for the project's developer, a Norwegian company called Equinor. The firm recently <a href="https://www.reuters.com/sustainability/climate-energy/blaming-trump-equinor-books-955-million-us-offshore-wind-writedown-2025-07-23/" target="_blank"><u>cut the value of its investment</u></a> by almost $1 billion, mainly because of "the changes in regulations for future offshore wind projects in the U.S.," Torgrim Reitan, Equinor's chief financial officer, <a href="https://cdn.equinor.com/files/h61q9gi9/global/4b850b0ef0024c18d08f28291c12e181a1bb7f96.pdf?eqnr-osl-transcript-2025-07-23.pdf" target="_blank"><u>said on an earnings call in July</u></a>.</p>   <p>"For the second time, the Trump Administration has taken unlawful action against a fully permitted offshore wind project under active construction — this time one that is nearly 80% complete," Liz Burdock, chief executive of the Oceantic Network, an advocacy group for offshore wind, <a href="https://oceantic.org/press-releases/oceantic-statement-unlawful-stop-order-threatens-american-jobs-energy-dominance/" target="_blank"><u>said in a statement</u></a> about the Revolution Wind project.</p>   <p>"This dramatic action further erodes investor confidence in the U.S. market across all industries and undermines progress on shared national priorities — shipyard revitalization, steel and port investments, and energy dominance," Burdock said. "In fact, halting work on Revolution Wind will drive up energy costs for consumers, idle Gulf Coast vessel operators that have invested hundreds of millions of dollars in new or retrofitted vessels, and jeopardize the livelihoods of union workers."</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Turning Claude Code into My Best Design Partner (205 pts)]]></title>
            <link>https://betweentheprompts.com/design-partner/</link>
            <guid>45002315</guid>
            <pubDate>Sun, 24 Aug 2025 08:06:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://betweentheprompts.com/design-partner/">https://betweentheprompts.com/design-partner/</a>, See on <a href="https://news.ycombinator.com/item?id=45002315">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>When I first started using Claude Code, I had a naive approach to working with it. I would describe the task directly in the prompt, press Enter, and cross my fingers. If the agent made mistakes, I would tell it how to fix them. For small tasks, this can be good enough, but as the task grows in complexity, this approach reveals several significant drawbacks.</p><h2 id="when-simple-doesnt-scale">When Simple Doesn’t Scale</h2><p>The first problem is that the conversation becomes the only source of truth about the task. This means a new message can override instructions from an old one, but it isn’t always clear when this happens, which can cause mistakes by the agent.</p><p>Additionally, the context size for the agent is limited. The more the conversation grows, the more information from the beginning can be “forgotten,” even though Claude Code has a capacity for “compacting” the conversation that’s supposed to improve this issue.</p><p>For these reasons, I started experimenting with an approach I’d heard about: asking Claude Code to start by writing a plan document. This document becomes the source of truth instead of a sprawling conversation. When I find the plan document good enough, I’ve taken the habit of clearing the conversation to start fresh with just the plan as context.</p><h2 id="creating-the-initial-plan">Creating the Initial Plan</h2><p>My first prompt is usually to give Claude Code a description of the feature it should implement (or bug it should fix, or the refactoring it should do) with all the details I have in mind. If I already have an idea of the implementation, I can give it some pointers to existing files for reference. However, I try not to give it too many implementation instructions because I want it to make suggestions and contribute to the design process.</p><blockquote><p>I want to implement a query builder. The page will be displayed as two columns. In the first one, a first box will let the user select a view (for now only one view: “Volume Metrics”), a second box to select fields (“field 1”, “field 2”, “field 3”), and a third one to add filters (don’t fill it yet). The right column will display first the query as human readable, then a table with the query results. (to be continued)</p></blockquote><p>I also try to refer to existing plans for features implemented previously. I don’t have a formal template, but I don’t really need one as long as I have other plans to reference as examples.</p><blockquote><p>(continuing) Check out the previous plan in @plans/chat-playground.md to know about routing and architecture details. (to be continued)</p></blockquote><p>I expect to see several key elements in the document. First, a rephrasing of the feature description I gave it, which helps ensure we’re aligned on requirements. Second, details on how the feature will be implemented—usually it includes some pieces of code or pseudo-code without me having to tell it to do so. Finally, commands to run to make sure the code quality is acceptable, including type checking, linting, and tests.</p><blockquote><p>(continuing) Write a plan in @plans/query-builder.md, and let me validate it before starting the implementation.</p></blockquote><h2 id="the-collaborative-design-process">The Collaborative Design Process</h2><p>Sometimes, I’m not satisfied with the suggested implementation. In this case, instead of updating the plan, I tell it why it’s wrong, expecting it to change its approach.</p><blockquote><p>The page should be a subroute of /explore, not /review. Also, it should be accessible only to users with the “admin” role.</p></blockquote><p>It also happens that after a few back-and-forth exchanges, I realize the first suggested approach was better than the one I had in mind. This process is much more efficient than if I had started writing the code by myself and realized my approach was wrong later.</p><p>It’s a bit like discussing the plan with a colleague each time I’m about to start a new feature. More specifically, it’s like challenging my implementation plan with a junior colleague (or one who doesn’t know the codebase as well) who will question my choices. The dynamic reminds me of the rubber duck debugging technique, where explaining your approach helps you think through problems. However, it won’t suggest a radically different approach unless I specifically ask it to, which I have never tried.</p><p>But the plan document isn’t just a blueprint for the implementation. I discovered that Claude Code is much more efficient when it considers it as a living document.</p><h2 id="the-living-document-approach">The Living Document Approach</h2><p>The key insight is that I don’t just ask Claude Code to write the plan—I also ask it to make it a living document while implementing the feature. I explicitly ask it to update the plan during implementation because the implementation process, and especially the type checking, linting, or test processes, can reveal that some parts of the original plan were incorrect.</p><p>I’ve developed the habit of asking it to check that the plan is up to date each time it commits code, treating plan updates the same way as running quality checks.</p><blockquote><p>Make sure the plan is up to date, and commit changes.</p></blockquote><p>This living document approach solves a fundamental problem with AI development: context limits. With an up-to-date plan document, I can start a fresh conversation and simply ask Claude Code to continue the implementation. This usually works great—just the document is usually enough context for a new session to pick up exactly where the previous one left off.</p><blockquote><p>Continue the implementation documented in @plans/query-builder.md.</p></blockquote><h2 id="my-review-process">My Review Process</h2><p>When the implementation starts, I review changes along the way to ensure everything is progressing correctly. However, if I’m satisfied with the progress, I can let it continue without checking as often. When reviewing the final code, the updated plan document gives me helpful hints about the technical choices that were made during implementation.</p><p>Surprisingly, I think that the fact that I need to plan my features carefully before rushing into implementation is making me a better developer overall. This happens simply because it forces me to document the implementation and think it through before jumping into code. I also find myself explaining my reasoning more clearly because I have to write it down for the AI, whereas with colleagues I would typically discuss things in person or via video call.</p><h2 id="from-chaos-to-system">From Chaos to System</h2><p>This workflow systematically addresses the fundamental problems I encountered with the naive approach: it creates a clear source of truth, eliminates context limit issues, and forces better architectural thinking. The living document becomes both the specification and the implementation log, creating a complete record of not just what was built, but why and how it was built.</p><p>The result is a development process that’s more thoughtful, more documented, and more reliable.</p><p>AI isn’t just serving as implementer.</p><p>It becomes a collaborative design partner.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Valve Software handbook for new employees [pdf] (2012) (226 pts)]]></title>
            <link>https://cdn.akamai.steamstatic.com/apps/valve/Valve_NewEmployeeHandbook.pdf</link>
            <guid>45002301</guid>
            <pubDate>Sun, 24 Aug 2025 08:02:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cdn.akamai.steamstatic.com/apps/valve/Valve_NewEmployeeHandbook.pdf">https://cdn.akamai.steamstatic.com/apps/valve/Valve_NewEmployeeHandbook.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=45002301">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Seed: Interactive software environment based on Common Lisp (107 pts)]]></title>
            <link>https://github.com/phantomics/seed</link>
            <guid>45001979</guid>
            <pubDate>Sun, 24 Aug 2025 06:57:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/phantomics/seed">https://github.com/phantomics/seed</a>, See on <a href="https://news.ycombinator.com/item?id=45001979">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text">
<p dir="auto"><h2 tabindex="-1" dir="auto">Seed</h2><a id="user-content-seed" aria-label="Permalink: Seed" href="#seed"></a></p>

<p dir="auto">Seed is an interactive software environment. With it you can create and use computer programs in many ways. It is based on the Common Lisp language and runs inside the Web browser, allowing you to build software on a local or remote computer system, and it can present programs and their output using a wide variety of display modes. Seed depicts programs in the form of a tree grid, featuring glyphs that denote different functions and types of data. All of Seed's display modes share basic interface principles in common, so you can quickly feel at home with whatever way your program is presented.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Background</h2><a id="user-content-background" aria-label="Permalink: Background" href="#background"></a></p>
<p dir="auto">The Lisp family of programming languages offer unmatched flexibility in defining software, but this flexibility is not matched by the character strings most often used to express that software. Computer programs have hitherto been widely regarded as inextricable from and synonymous with character strings like the one you're reading now. While visual programming paradigms have made headway in a number of areas, most visual programming tools are tightly coupled to particular domains.</p>
<p dir="auto">The choice of Lisp's creators to forego a detailed syntax in favor of symbolic expressions marked a turn down a road less traveled by language developers. Users may be confused by the sometimes homogenous, sometimes verbose nature of Lisp code, but the problem in these cases is not a shortcoming of Lisp -- it is a shortcoming of character strings. In the choice of a regular syntax for the language, Lisp was set on a path that could lead to programming beyond the limits of plain text. Seed is an effort to realize that destination: a language representation orthogonal to the language's structure.</p>
<p dir="auto">These ideas are the foundation of Seed. Your experience with the system will determine their truth.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">In Practice</h2><a id="user-content-in-practice" aria-label="Permalink: In Practice" href="#in-practice"></a></p>
<p dir="auto">Seed can be seen as a type of IDE. It integrates ASDF, the standard Common Lisp build system, and the software systems it's used to develop are often expressed as ASDF systems. These systems are divided into branches, each of which expresses input to and output from the system. In a given Seed system, there is typically a .seed file located in the package directory that specifies the system and the behavior of each branch.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">The First Step: Installing and Running Seed</h2><a id="user-content-the-first-step-installing-and-running-seed" aria-label="Permalink: The First Step: Installing and Running Seed" href="#the-first-step-installing-and-running-seed"></a></p>
<p dir="auto">Seed depends on Common Lisp, ASDF and Quicklisp. The only Common Lisp implementation tested so far has been Steel Bank Common Lisp (SBCL). Seed also requires Node.js, NPM and Gulp to build parts of its Web interface. Install the required software if you don't have it, then clone this repository.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Setting up Node.js and NPM</h3><a id="user-content-setting-up-nodejs-and-npm" aria-label="Permalink: Setting up Node.js and NPM" href="#setting-up-nodejs-and-npm"></a></p>
<p dir="auto">If you don't have Node.js installed, you can follow one of these links to set Node.js up on your system.</p>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/creationix/nvm">Node Version Manager (nvm), a tool to install Node.js</a></p>
</li>
<li>
<p dir="auto"><a href="https://github.com/nodesource/distributions">Node.js packages for popular Linux distributions</a></p>
</li>
<li>
<p dir="auto"><a href="https://nodejs.org/en/download/" rel="nofollow">Node.js installers for Mac, Windows and binaries for Linux, plus source code</a></p>
</li>
</ul>
<p dir="auto">Of the above choices, the first option to install Node.js using nvm is probably the best, since nvm makes it easy to install Node.js in a way that doesn't require administrator-level privileges on the system.</p>
<p dir="auto">Once you have Node.js installed, you can install Gulp by running the command:</p>

<p dir="auto">If you installed Node using the second or third option above, you will probably need administrator-level permissions to do this, so on Linux and OSX the full command will most likely be:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Preparing Quicklisp</h3><a id="user-content-preparing-quicklisp" aria-label="Permalink: Preparing Quicklisp" href="#preparing-quicklisp"></a></p>
<p dir="auto">Enter your Quicklisp local-projects directory (usually ~/quicklisp/local-projects) and create a symbolic link to the directory where you cloned the Seed repository. For example, if you cloned the repo to ~/mystuff/seed and your Quicklisp directory is ~/quicklisp/, enter:</p>
<div data-snippet-clipboard-copy-content="cd ~/quicklisp/local-projects
ln -s ~/mystuff/seed"><pre><code>cd ~/quicklisp/local-projects
ln -s ~/mystuff/seed
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using the automatic installer</h3><a id="user-content-using-the-automatic-installer" aria-label="Permalink: Using the automatic installer" href="#using-the-automatic-installer"></a></p>
<p dir="auto">Seed comes with an installation program called, appropriately enough, install-seed.lisp. To use it, enter the Seed repository directory and load the install-seed.lisp file using your Common Lisp implementation. For example, if you are using SBCL, type:</p>
<div data-snippet-clipboard-copy-content="sbcl --load install-seed.lisp"><pre><code>sbcl --load install-seed.lisp
</code></pre></div>
<p dir="auto">This should automatically set Seed up, install its dependencies and build the components of the browser interface. If there are problems it will display error messages that should help with fixing them. If this doesn't work, you should try...</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Installing Seed manually</h3><a id="user-content-installing-seed-manually" aria-label="Permalink: Installing Seed manually" href="#installing-seed-manually"></a></p>
<p dir="auto">To complete the installation manually, start a Common Lisp REPL and enter:</p>

<p dir="auto">This will build Seed and install the software it needs to run. As long as you have Node, NPM and Gulp installed, the Javascript and CSS required to run the Seed interface should be automatically built.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Starting Seed automatically</h3><a id="user-content-starting-seed-automatically" aria-label="Permalink: Starting Seed automatically" href="#starting-seed-automatically"></a></p>
<p dir="auto">From now on, if you'd like to automatically start Seed whenever you run SBCL, you can edit your .sbclrc file (usually located at ~/.sbclrc) and add the lines:</p>
<div data-snippet-clipboard-copy-content="(asdf:load-system 'seed)
(seed:contact-open)"><pre><code>(asdf:load-system 'seed)
(seed:contact-open)
</code></pre></div>
<p dir="auto">The contact-open method will open Seed's Web interface at the designated HTTP port. If you would prefer not to automatically open the Web interface when you start Common Lisp, you can omit the (seed:contact-open) line above.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Web interface</h3><a id="user-content-the-web-interface" aria-label="Permalink: The Web interface" href="#the-web-interface"></a></p>
<p dir="auto">Once opened, Seed's web interface will be located at port 8055 by default; if you wish to change that, just edit seed.lisp in the main Seed directory.</p>
<p dir="auto">To visit the Web interface for the default portal "portal.demo1", which comes included with Seed, visit the URI:</p>
<div data-snippet-clipboard-copy-content="http://localhost:8055/portal.demo1/index.html"><pre><code>http://localhost:8055/portal.demo1/index.html
</code></pre></div>
<p dir="auto">If you create another portal, substitute that portal's name in the URI.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><a href="https://github.com/phantomics/seed/wiki/Introductory-Tutorial">Tutorial</a></h3><a id="user-content-tutorial" aria-label="Permalink: Tutorial" href="#tutorial"></a></p>
<p dir="auto"><a href="https://github.com/phantomics/seed/wiki/Introductory-Tutorial">Follow this link</a> for a tutorial to help you get started using Seed.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Credit</h3><a id="user-content-credit" aria-label="Permalink: Credit" href="#credit"></a></p>
<p dir="auto">Seed contains a modified copy of Panic, a utility for building React components written by Michael J. Forster. Thanks to Michael for creating this tool.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[It is worth it to buy the fast CPU (217 pts)]]></title>
            <link>https://blog.howardjohn.info/posts/buy-a-cpu/</link>
            <guid>45001778</guid>
            <pubDate>Sun, 24 Aug 2025 06:03:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.howardjohn.info/posts/buy-a-cpu/">https://blog.howardjohn.info/posts/buy-a-cpu/</a>, See on <a href="https://news.ycombinator.com/item?id=45001778">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<article>
   
  <div><p>In the past few years, CPUs have gotten really fast. Shockingly fast!
Yet most people are stuck on previous generation mobile chips (whether by choice, or by their companies choice), at a huge detriment to their productivity.</p>
<p>Meanwhile, AI coding subscriptions like Cursor are all the rage these days.
I'll skip the debate on exactly how useful these tools are, and focus on the pricing.
Cursor is $480/year for the team plan (the cheapest corporate plan), and other providers are around the same, setting a clear price point: engineering productivity is worth at least $500/year.</p>
<p>This makes sense, as given the typical salary of a senior (US-based) software engineer, you don't even need to be 1% more efficient for that investment to pay off.</p>
<p>Meanwhile, <em>the</em> top end CPU, AMD Ryzen 9 9950X, is only $500. Practically speaking it will last longer, but I believe typically corporations amortize the cost of development machines over 3 years putting it at only $170/year - a bargain compared to AI!.</p>
<p><strong>Buy the fast CPU!</strong> It is well worth it.</p>
<p>Below shows some benchmarks for 3 machines:</p>
<ul>
<li>The fastest laptop my former employee would give me in 2024 (i7-1165G7, released in 2020; my employer clearly didn't follow my advice to give engineers top end CPUs!).</li>
<li>The fastest ThinkPad I could buy in 2024 (AMD Ryzen 7840U).</li>
<li>The fastest desktop CPU I could buy in 2025 (AMD Ryzen 9950x).</li>
</ul>
<figure>
  
  <img src="https://blog.howardjohn.info/images/perf-linux-compile.png#center" alt="Compile times for Linux Kernel">
  
  <figcaption>Compile times for Linux Kernel</figcaption>
</figure>

<figure>
  
  <img src="https://blog.howardjohn.info/images/perf-ssl.png#center" alt="TLS operations benchmark">
  
  <figcaption>TLS operations benchmark</figcaption>
</figure>

<p>The gap is incredible -- over a 10x difference in many cases!
The difference between waiting 3s for a build vs 30s is game-changing, as is the difference between 3s and 300ms.</p>
<p>As a general rule of thumb I have seen:</p>
<ul>
<li>Desktop CPUs are about 3x faster than laptop CPUs</li>
<li>Top end CPUs are about 3x faster than the comparable top end models 3 years ago</li>
<li>This applies to cloud VMs as well; each new generations are 2-3x faster for many workloads and usually the same price!</li>
</ul>
<p>If you can justify an AI coding subscription, you can justify buying the best tool for the job.</p>


  </div>

  

</article>
    </div></div>]]></description>
        </item>
    </channel>
</rss>