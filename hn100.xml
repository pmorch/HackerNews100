<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 08 Oct 2024 13:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Nobel Prize in Physics Awarded for Machine Learning and Neural Networks (286 pts)]]></title>
            <link>https://www.nobelprize.org/prizes/physics/2024/summary/</link>
            <guid>41775463</guid>
            <pubDate>Tue, 08 Oct 2024 09:52:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nobelprize.org/prizes/physics/2024/summary/">https://www.nobelprize.org/prizes/physics/2024/summary/</a>, See on <a href="https://news.ycombinator.com/item?id=41775463">Hacker News</a></p>
Couldn't get https://www.nobelprize.org/prizes/physics/2024/summary/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[John Hopfield and Geoff Hinton Win Physics Nobel Prize [pdf] (140 pts)]]></title>
            <link>https://www.nobelprize.org/uploads/2024/10/press-physicsprize2024.pdf</link>
            <guid>41775449</guid>
            <pubDate>Tue, 08 Oct 2024 09:51:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nobelprize.org/uploads/2024/10/press-physicsprize2024.pdf">https://www.nobelprize.org/uploads/2024/10/press-physicsprize2024.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=41775449">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[An illustrated proof of the CAP theorem (2018) (189 pts)]]></title>
            <link>https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/</link>
            <guid>41772624</guid>
            <pubDate>Tue, 08 Oct 2024 00:32:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/">https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/</a>, See on <a href="https://news.ycombinator.com/item?id=41772624">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="container">
    
    <p>
    The <a href="http://en.wikipedia.org/wiki/CAP_theorem">CAP Theorem</a> is a
    fundamental theorem in distributed systems that states any distributed
    system can have at most two of the following three properties.
    </p>

    <ul>
      <li><strong>C</strong>onsistency</li>
      <li><strong>A</strong>vailability</li>
      <li><strong>P</strong>artition tolerance</li>
    </ul>

    <p>
    This guide will summarize
    <a href="http://lpd.epfl.ch/sgilbert/pubs/BrewersConjecture-SigAct.pdf">
      Gilbert and Lynch's specification and proof of the CAP Theorem</a>
    with pictures!
    </p>

    <h2>What is the CAP Theorem?</h2>
    <p>
    The CAP theorem states that a distributed system cannot simultaneously be
    consistent, available, and partition tolerant. Sounds simple enough, but
    what does it mean to be consistent? available? partition tolerant? Heck,
    what exactly do you even mean by a distributed system?
    </p>

    <p>
    In this section, we'll introduce a simple distributed system and explain
    what it means for that system to be available, consistent, and partition
    tolerant.  For a formal description of the system and the three properties,
    please refer to
    <a href="http://lpd.epfl.ch/sgilbert/pubs/BrewersConjecture-SigAct.pdf">
      Gilbert and Lynch's paper</a>.
    </p>

    <h2>A Distributed System</h2>
    <p>
    Let's consider a very simple distributed system. Our system is composed of
    two servers, $G_1$ and $G_2$. Both of these servers are keeping track of
    the same variable, $v$, whose value is initially $v_0$. $G_1$ and $G_2$
    can communicate with each other and can also communicate with external
    clients. Here's what our system looks like.
    </p>

    <center>
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap1.svg">
    </center>

    <p>
    A client can request to write and read from any server. When a server
    receives a request, it performs any computations it wants and then responds
    to the client. For example, here is what a write looks like.
    </p>

    <center>
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap2.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap3.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap4.svg">
    </center>

    <p>
    And here is what a read looks like.
    </p>

    <center>
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap5.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap6.svg">
    </center>

    <p>
    Now that we've gotten our system established, let's go over what it means
    for the system to be consistent, available, and partition tolerant.
    </p>

    <h2>Consistency</h2>
    <p>
    Here's how Gilbert and Lynch describe consistency.
    </p>

    <blockquote>
    any read operation that begins after a write operation completes must
    return that value, or the result of a later write operation
    </blockquote>

    <p>
    In a consistent system, once a client writes a value to any server and gets
    a response, it expects to get that value (or a fresher value) back from any
    server it reads from.
    </p>

    <p>
    Here is an example of an <strong>inconsistent</strong> system.
    </p>

    <center>
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap7.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap8.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap9.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap10.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap11.svg">
    </center>

    <p>
    Our client writes $v_1$ to $G_1$ and $G_1$ acknowledges, but when it
    reads from $G_2$, it gets stale data: $v_0$.
    </p>

    <p>
    On the other hand, here is an example of a <strong>consistent</strong>
    system.
    </p>

    <center>
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap12.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap13.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap14.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap15.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap16.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap17.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap18.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap19.svg">
    </center>

    <p>
    In this system, $G_1$ replicates its value to $G_2$ before sending an
    acknowledgement to the client. Thus, when the client reads from $G_2$, it
    gets the most up to date value of $v$: $v_1$.
    </p>

    <h2>Availability</h2>
    <p>
    Here's how Gilbert and Lynch describe availability.
    </p>

    <blockquote>
    every request received by a non-failing node in the system must result in a
    response
    </blockquote>

    <p>
    In an available system, if our client sends a request to a server and the
    server has not crashed, then the server must eventually respond to the
    client. The server is not allowed to ignore the client's requests.
    </p>

    <h2>Partition Tolerance</h2>
    <p>
    Here's how Gilbert and Lynch describe partitions.
    </p>

    <blockquote>
    the network will be allowed to lose arbitrarily many messages sent from one
    node to another
    </blockquote>

    <p>
    This means that any messages $G_1$ and $G_2$ send to one another can be
    dropped.  If all the messages were being dropped, then our system would
    look like this.
    </p>

    <center>
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap20.svg">
    </center>

    <p>
    Our system has to be able to function correctly despite arbitrary network
    partitions in order to be partition tolerant.
    </p>

    <h2>The Proof</h2>
    <p>
    Now that we've acquainted ourselves with the notion of consistency,
    availability, and partition tolerance, we can prove that a system cannot
    simultaneously have all three.
    </p>

    <p>
    Assume for contradiction that there does exist a system that is consistent,
    available, and partition tolerant. The first thing we do is partition our
    system. It looks like this.
    </p>

    <center>
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap21.svg">
    </center>

    <p>
    Next, we have our client request that $v_1$ be written to $G_1$. Since
    our system is available, $G_1$ must respond. Since the network is
    partitioned, however, $G_1$ cannot replicate its data to $G_2$. Gilbert
    and Lynch call this phase of execution $\alpha_1$.
    </p>

    <center>
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap22.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap23.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap24.svg">
    </center>

    <p>
    Next, we have our client issue a read request to $G_2$. Again, since our
    system is available, $G_2$ must respond. And since the network is
    partitioned, $G_2$ cannot update its value from $G_1$. It returns $v_0$.
    Gilbert and Lynch call this phase of execution $\alpha_2$.
    </p>

    <center>
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap25.svg">
      <img src="https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/assets/cap26.svg">
    </center>

    <p>
    $G_2$ returns $v_0$ to our client after the client had already written
    $v_1$ to $G_1$. This is inconsistent.
    </p>

    <p>
    We assumed a consistent, available, partition tolerant system existed, but
    we just showed that there exists an execution for any such system in which
    the system acts inconsistently. Thus, no such system exists.
    </p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Video Surveillance with YOLO+llava (157 pts)]]></title>
            <link>https://github.com/PsyChip/machina</link>
            <guid>41772551</guid>
            <pubDate>Tue, 08 Oct 2024 00:21:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/PsyChip/machina">https://github.com/PsyChip/machina</a>, See on <a href="https://news.ycombinator.com/item?id=41772551">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">MACHINA</h2><a id="user-content-machina" aria-label="Permalink: MACHINA" href="#machina"></a></p>
<p dir="auto">CCTV viewer with realtime object tagger [WIP]</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/PsyChip/machina/blob/main/demo.png"><img src="https://github.com/PsyChip/machina/raw/main/demo.png" alt="partial screenshot"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Uses</h3><a id="user-content-uses" aria-label="Permalink: Uses" href="#uses"></a></p>
<ul dir="auto">
<li><a href="https://llava-vl.github.io/" rel="nofollow">LLAVA</a></li>
<li><a href="https://github.com/ultralytics/ultralytics">YOLO 11</a></li>
<li><a href="https://opencv.org/" rel="nofollow">OpenCV</a></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">How it works</h3><a id="user-content-how-it-works" aria-label="Permalink: How it works" href="#how-it-works"></a></p>
<p dir="auto">Simply it connects to a high-resolution RTSP stream in a separate thread,
queues the frames into memory as it is and resamples it for processing.</p>
<p dir="auto">YOLO takes this frame, application gives a specific id based on it's coordinates,
size and timestamp then tries to match the same object on every iteration.</p>
<p dir="auto">Another thread runs in background, iterates that object array continuously and
makes LLM requests to Ollama server for object tagging</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Object matching</h3><a id="user-content-object-matching" aria-label="Permalink: Object matching" href="#object-matching"></a></p>
<p dir="auto">It calculates the center of every detection box, pinpoint on screen and gives 16px
tolerance on all directions. Script tries to find closest object as fallback and
creates a new object in memory in last resort.
You can observe persistent objects in <code>/elements</code> folder</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Test Environment</h3><a id="user-content-test-environment" aria-label="Permalink: Test Environment" href="#test-environment"></a></p>
<p dir="auto">Every input frame resampled to 640x480 for processing, got avg 20ms interference time
with yolo 11 small model (yolo11s.pt) on Geforce GTX 1060 which is almost 7 years old
graphics card. Other models available in "models" directory</p>
<p dir="auto">Stream delays by 1-2 seconds on every 10~ minutes due to network conditions, script also
have a frame skip mechanism on 3 seconds of detection idle.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Prerequisites</h3><a id="user-content-prerequisites" aria-label="Permalink: Prerequisites" href="#prerequisites"></a></p>
<ul dir="auto">
<li>Clone the repository</li>
<li>Install <a href="https://ollama.com/" rel="nofollow">ollama</a> server</li>
<li>Pull the LLAVA model by running <code>ollama run llava</code></li>
<li>Open <code>app.py</code> and set your rtmp stream address at line 18</li>
<li>Install the dependencies by running <code>pip install -r requirements.txt</code></li>
<li>Run the script <code>py app.py</code></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Shortcuts</h3><a id="user-content-shortcuts" aria-label="Permalink: Shortcuts" href="#shortcuts"></a></p>
<ul dir="auto">
<li>S : snapshot, actual image from input stream</li>
<li>R : start/stop recording. it records what you see.</li>
<li>Q : quit app</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Project direction</h3><a id="user-content-project-direction" aria-label="Permalink: Project direction" href="#project-direction"></a></p>
<p dir="auto">This is a living project, trying to create a <em>complete</em> headless security system by
taking advantage of modern vision, object detection models on my spare time.</p>
<p dir="auto">Feel free to contribute with code, ideas or even maybe a little bit donation
via ko-fi or bitcoin</p>
<p dir="auto">-<a href="https://ko-fi.com/psychip" rel="nofollow">https://ko-fi.com/psychip</a>
-BTC: bc1qlq067vldngs37l5a4yjc4wvhyt89wv3u68dsuv</p>
<p dir="auto">Created by PsyChip</p>
<ul dir="auto">
<li><a href="mailto:root@psychip.net">root@psychip.net</a></li>
</ul>
<p dir="auto">.eof</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[uBlock Origin supports filtering CNAME cloaking sites on Firefox now (265 pts)]]></title>
            <link>https://github.com/gorhill/uBlock/commit/6acf97bf51</link>
            <guid>41770921</guid>
            <pubDate>Mon, 07 Oct 2024 20:52:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/gorhill/uBlock/commit/6acf97bf51">https://github.com/gorhill/uBlock/commit/6acf97bf51</a>, See on <a href="https://news.ycombinator.com/item?id=41770921">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemscope="" itemtype="http://schema.org/SoftwareSourceCode" data-commit-hovercards-enabled="" data-discussion-hovercards-enabled="" data-issue-and-pr-hovercards-enabled="">
    <main id="js-repo-pjax-container">
      
  

    






  
  

  



<turbo-frame id="repo-content-turbo-frame" target="_top" data-turbo-action="advance">
    <div id="repo-content-pjax-container">
  <p>
  <h2>Commit</h2>
</p>

<p><a href="https://github.com/gorhill/uBlock/commit/6acf97bf5143543c036c38a82160e5f8efe8b3f1" data-hotkey="y">Permalink</a></p>


<div>
  <div>
    <div>
        <p>
          Rewrite cname uncloaking code to account for new <code>ipaddress=</code> option
        </p>
    </div>

    <p><a id="browse-at-time-link" href="https://github.com/gorhill/uBlock/tree/6acf97bf5143543c036c38a82160e5f8efe8b3f1" rel="nofollow">Browse files</a></p><tool-tip id="tooltip-d69658f2-caa3-4a59-92f1-c9ca107e65a1" for="browse-at-time-link" popover="manual" data-direction="ne" data-type="description" data-view-component="true">Browse the repository at this point in the history</tool-tip>
  </div>

    <div><pre>This commit makes the DNS resolution code better suited for both
filtering on cname and ip address. The change allows early availability
of ip address so that `ipaddress=` option can be matched at
onBeforeRequest time.

As a result, it is now possible to block root document using
`ipaddress=` option -- so long as an ip address can be extracted
before first onBeforeRequest() call.

Related issue:
<a data-error-text="Failed to load title" data-id="1875533514" data-permission-text="Title is private" data-url="https://github.com/uBlockOrigin/uBlock-issues/issues/2792" data-hovercard-type="issue" data-hovercard-url="/uBlockOrigin/uBlock-issues/issues/2792/hovercard" href="https://github.com/uBlockOrigin/uBlock-issues/issues/2792">uBlockOrigin/uBlock-issues#2792</a>

Caveat
------

the ip address used is the first one among the list of ip
addresses returned by dns.resolve() method. There is no way for uBO
to know which exact ip address will be used by the browser when
sending the request, so this is at most a best guess. The exact IP
address used by the browser is available at onHeadersReceived time,
and uBO will also filter according to this value, but by then the
network request has already been sent to the remote server.

Possibly a future improvement would make available the whole list
of ip addresses to the filtering engine, but even then it's impossible
to know with certainty which ip address will ultimately be used by the
browser -- it is entirely possible that the ip address used by the
browser might not be in the list received through dns.resolve().</pre></div>

  <div>
  <include-fragment src="/gorhill/uBlock/branch_commits/6acf97bf5143543c036c38a82160e5f8efe8b3f1" id="async-branches-list">
    <div>
      
      <ul>
        <li>Loading branch information<span></span></li>
      </ul>
    </div>
</include-fragment></div>


  
</div>


  


  <diff-layout>
    
        </diff-layout>


</div>

</turbo-frame>


    </main>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sam Altman Goes Full Emperor (115 pts)]]></title>
            <link>https://nonzero.substack.com/p/sam-altman-goes-full-emperor</link>
            <guid>41770249</guid>
            <pubDate>Mon, 07 Oct 2024 19:54:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nonzero.substack.com/p/sam-altman-goes-full-emperor">https://nonzero.substack.com/p/sam-altman-goes-full-emperor</a>, See on <a href="https://news.ycombinator.com/item?id=41770249">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png" width="1456" height="1116" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1116,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:3210117,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F49d6a5a0-b660-4d16-a813-024e9eb2235a_1472x1128.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>In 2008, Paul Graham, founder of the Silicon Valley firm Y Combinator, described Sam Altman, who was then 23 years old, like this: “You could parachute him into an island full of cannibals and come back in five years and he’d be the king.” In 2011, Graham made Altman a partner at Y Combinator. Three years later, Graham stepped down as president of the company and crowned Altman as his successor.&nbsp;&nbsp;</p><p>It soon became clear that the Y Combinator island wasn’t big enough to contain Altman’s ambitions. In 2015, while still president of the company, he co-founded a non-profit called OpenAI and became, along with Elon Musk, its co-chair. Within a few years, Altman and Musk were having disagreements—over, for example, who was alpha male. Musk left the OpenAI island and Altman settled in to run it.</p><p><span>I don’t think I’d be good at parachuting into cannibal-inhabited islands and securing political control of them, but I imagine that, if I </span><em>were</em><span> good at it, I’d follow this algorithm:&nbsp;</span></p><p>Be extremely nice and accommodating for a while, and gradually win the trust of the natives, who will thus cede increasing amounts of influence to you, until you have so much influence that you can drop the act and reveal your true ambitions. At that point you can eat them.</p><p>In this light, it’s worth revisiting Altman’s congressional testimony in May of 2023, shortly after ChatGPT had captured the world’s attention. He was a picture of humility and cooperation. He professed acute awareness of AI’s dangers and encouraged the regulation of OpenAI and other such companies. For a CEO to issue this kind of invitation was so unusual that it became the headline of the New York Times story about the hearings.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png" width="845" height="154" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/eb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:154,&quot;width&quot;:845,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:30269,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb6dccd7-6ccc-4aa9-adaa-80974a64e84f_845x154.png 1456w" sizes="100vw"></picture></div></a></figure></div><p><span>Connecticut Senator Richard Blumenthal, who had chaired the hearings, </span><a href="https://www.nytimes.com/2023/06/07/technology/sam-altman-ai-regulations.html" rel="">said</a><span>, “It’s so refreshing. He was willing, able, and eager.”</span></p><p>Not to mention pure of heart! When one senator asked Altman if he made a lot of money from AI, he replied, “No. I’m paid enough for health insurance. I have no equity in OpenAI… I’m doing this because I love it.”&nbsp;</p><p>Fast forward to now:</p><p><span>This week California’s governor </span><a href="https://time.com/7026653/gavin-newsom-ai-safety-bill-sb-1047/" rel="">vetoed</a><span> an AI regulation bill that OpenAI opposed even though the bill had been watered down to a point where Anthropic, OpenAI’s rival, had dropped its initial opposition. And last week, with OpenAI poised to close an investment round that will bring in $6.5 billion at a valuation of $150 billion, we </span><a href="https://www.reuters.com/technology/artificial-intelligence/openai-remove-non-profit-control-give-sam-altman-equity-sources-say-2024-09-25/" rel="">learned</a><span> that the company plans to become a fully for-profit corporation (having converted to a quasi-for-profit in 2019). And Altman could now get equity in OpenAI—around $10 billion worth, according to one </span><a href="https://www.bloomberg.com/news/articles/2024-09-25/openai-cto-mira-murati-says-she-will-leave-the-company?embedded-checkout=true" rel="">report</a><span>.</span></p><p>This last report, in particular, turned last week into a festival for Altman haters. Not content to just quote his congressional testimony about the irrelevance of money to his motivational structure, they circulated the video of it. Which really is worth watching, because you haven’t seen pious until you’ve seen Sam Altman do pious:</p><p data-attrs="{&quot;url&quot;:&quot;https://nonzero.substack.com/p/sam-altman-goes-full-emperor?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://nonzero.substack.com/p/sam-altman-goes-full-emperor?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p><p>I take issue with these Altman haters; I think they’re hating on the wrong part of Altman. What’s scary about him isn’t that he’s good at getting rich (he’s a billionaire even without any OpenAI equity), but that, as Graham told a journalist in 2016, “Sam is extremely good at getting powerful.” I think he’s using that power—in Silicon Valley and in Washington DC and in various centers of influence around the world—to put the AI industry, and the world, on a dangerous course. Sometimes you even get the impression that he’s chosen this course because it would give him more power, and the rest of us are just along for the ride.</p><p><span>How to describe this course? Though Altman (wisely) wouldn’t use this term for it, I’d say it boils down to </span><em>accelerationism</em><span>—the idea that, when it comes to technological change, and progress in AI in particular, faster is better. There was a time when Altman sounded like the opposite of an accelerationist. Consider the view he expressed in 2022:</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Is the attack helicopter dead? (184 pts)]]></title>
            <link>https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/</link>
            <guid>41769971</guid>
            <pubDate>Mon, 07 Oct 2024 19:28:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/">https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/</a>, See on <a href="https://news.ycombinator.com/item?id=41769971">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			
<figure><img data-attachment-id="47972" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-308/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/09/image-36.png" data-orig-size="1200,562" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/09/image-36.png?w=830" data-large-file="https://hushkit.net/wp-content/uploads/2024/09/image-36.png?w=830" tabindex="0" role="button" width="1024" height="479" src="https://hushkit.net/wp-content/uploads/2024/09/image-36.png?w=1024" alt=""></figure>



<p><strong>The attack helicopter is costly and complex to operate, yet it is taking a mauling in the Russian invasion of Ukraine. Russia’s full-scale invasion attempt of Ukraine starting in 2022 has shown both the vulnerability of helicopters and the effectiveness of small, uncrewed aircraft against armour. With this in mind, we ask: Is the attack helicopter dead? </strong></p>



<ul>
<li>Ron Smith </li>
</ul>



<p>Few observers thought Ukraine could withstand the Russian onslaught of 2022. Footage released in April footage of the destruction of a Russian Kamov attack helicopter was a huge morale boost. And more followed. </p>



<figure></figure>



<p><em>The conflict in Ukraine has been marked by comparatively staggering losses of both anti-armour helicopters and armour. A quick internet search (July 2024) suggests the following losses:</em></p>



<p><em>Russia:</em><em></em></p>



<p><em>Tanks: “More than 3,000” (Feb 2024) </em><a href="http://www.reuters.com/world/europe/russia-relying-old-stocks-after-losing-3000-tanks-ukraine-leading-military-2024-02-13/"><em>www.reuters.com/world/europe/russia-relying-old-stocks-after-losing-3000-tanks-ukraine-leading-military-2024-02-13/</em></a><em>&nbsp;</em><em></em></p>



<p><em>Helicopters: Flight Global “Kyiv claims to have destroyed 310 Russian helicopters since Moscow’s forces invaded Ukraine in February 2022, although this total cannot be independently verified. Losses have included multiple examples of the Kamov Ka-52 and Mil Mi-28N.”</em><em></em></p>



<p><em>Ukraine:&nbsp;</em><em></em></p>



<p><em>Tanks: One estimate indicates about one-third of the losses sustained by Russia – so approx. 1,000</em></p>



<p><em>Helicopters: Wikipedia lists 61, of which 16 Mil 24/35 and 39 Mil 8/17</em><em></em></p>



<p><strong>Armour operations</strong></p>



<p>Typical Western doctrine (offensive or defensive) uses manned armoured reconnaissance ahead of the Forward Line of Own Troops (FLOT) to locate enemy forces and determine their intentions. Increasingly, manned operations will be supported by other ISR, such as UAVs and later UGVs, to augment the manned platforms.</p>



<p><strong>Recce: </strong>This is driven by a recce Plan determined by the Commander’s Critical Information Requirements (CCIRs), designed to fill in gaps in intelligence and distinguish enemy feints and deception tactics from their main force’s true intentions and timing. Other objectives would typically be to locate enemy command and control, logistics, air defence units, long-range artillery, and other high-value/high-threat components.</p>



<p>The recce info will then shape the deployment of main armour and infantry (again offensive or defensive), supporting anti-armour helicopter and precision long-range artillery operations.</p>



<p>Manned armoured reconnaissance beyond the FLOT (i.e., in enemy territory) is likely hazardous, particularly if the enemy has effective electronic surveillance capabilities. Traffic analysis can be used to locate signal traffic from unknown forces and, even if encrypted, is likely to result in unwelcome attention. The US tends to assume its comms cannot be read, so it reports every enemy observation. The UK is more concerned about detected transmissions (even if not read) and operates largely under radio silence.</p>



<p>Terrain masking to avoid detection may make VHF traffic difficult, so HF or datalink to SATCOMs may have to be used.</p>



<p><strong>Armour and Mechanised Infantry: </strong>In addition, armour, on both sides, is having a hard time. In the Ukraine case, the threat has proven to be a combination of precision artillery and long-range missile attack, combined with top attack by armed drones.&nbsp;</p>



<p>The author identified this latter threat as a concern more than a dozen years ago – having noted that Hezbollah, in the first Lebanon conflict, had deployed armed drones against Israeli armour.</p>



<p>Because the high mass of protective armour leads to weight and mobility issues, MBT protection is concentrated against direct fire attacks from other MBTs. Top protection is typically reduced, primarily against artillery near misses rather than direct hits, which are now the norm. Even with these measures, deployed MBT mass is typically around 62 tonnes, and top protection is one area that is typically traded off to achieve acceptable mobility.</p>



<figure><img data-attachment-id="47986" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-318/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-20.png" data-orig-size="799,449" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-20.png?w=799" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-20.png?w=799" tabindex="0" role="button" width="799" height="449" src="https://hushkit.net/wp-content/uploads/2024/10/image-20.png?w=799" alt=""></figure>



<p>Active protection systems are not yet regarded as mature and may introduce hazards to nearby personnel (if operating with infantry, for example). I am unsure how successful these are in Israeli use, or whether they have been used successfully in Ukraine. </p>



<p>Furthermore, Western armour generally has no organic means of detecting or countering the drone threat, although directed energy weapons or RF countermeasures may offer some capability in the future and are undoubtedly being actively researched and trialled.</p>



<p>So heavy armour is looking increasingly vulnerable, as, in the Ukrainian conflict at least, attack helicopters. However, heavy armour is clearly still important for taking and holding ground, so it will most likely continue to be central in many operations.&nbsp;</p>



<p><strong>Attack Helicopter operations</strong></p>



<figure><img data-attachment-id="47977" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-311/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-13.png" data-orig-size="1908,1146" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-13.png?w=830" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-13.png?w=830" tabindex="0" role="button" width="1024" height="615" src="https://hushkit.net/wp-content/uploads/2024/10/image-13.png?w=1024" alt=""></figure>



<p>When the UK was developing its thinking for GST3971 to acquire a dedicated attack helicopter in the mid-1980s, the vision was of a helicopter that could engage in autonomous direct-fire attack of heavy armour. The threat was essentially Cold War, with massed Soviet armour operating across the North German Plain. Organic air defence (then primarily radar-directed ZSU-23-4) was a significant threat, leading to a desire to stand-off outside its lethal range. Priority targets were enemy air defence, command and control centres and heavy armour.</p>



<figure><img data-attachment-id="47984" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-317/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-19.png" data-orig-size="6116,4077" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-19.png?w=830" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-19.png?w=830" tabindex="0" role="button" loading="lazy" width="1024" height="682" src="https://hushkit.net/wp-content/uploads/2024/10/image-19.png?w=1024" alt=""></figure>



<p>The solution was deemed to be a low-signature helicopter (radar and IR signatures, particularly) fitted with a mast-mounted sight and using terrain screening. A long-range fire-and-forget weapon was required so that the helicopter would not be exposed throughout the weapon’s flight time.</p>



<p>Initially, Apache was not favoured because the AH-64A was regarded as having large visual and radar signatures and an inadequate sighting system. Without a mast-mounted sight, Scout helicopter support would also be required for target acquisition and designation.</p>



<p>The AH-64D with Longbow and RF Hellfire largely solved these problems by acquiring targets at long range and engaging in indirect fire. However, the missile and target detection range exceeded the recognition and identification range of the TADS sight (which also required the helicopter to be exposed to gain a line of sight to the target). This introduced some concern about the ability to achieve positive target identification when operating under restrictive rules of engagement.</p>



<p><strong>The Situation in Ukraine</strong></p>



<p><strong>Russian operations over Ukrainian-held territory</strong></p>



<p>Today, taking the Ukraine experience as representative, Russian attack helicopters are operating over large regions of Ukrainian-held territory without air superiority and with a dispersed infantry threat armed with capable MANPADS systems. The defending forces can adopt positions that are well hidden, but which offer good fields of fire.&nbsp;</p>



<p>The difficulty of detecting and countering this threat, combined with extensive areas lacking terrain cover, significantly increases the risk to attack helicopters in transit to and from their targets. This is compounded by the apparent ineffectiveness of the helicopter protection and countermeasures equipment.</p>



<p>There are reports of both sides in Ukraine using armed drones for anti-personnel operations against individual soldiers, so operation under cover, if not actually below ground is becoming necessary, if there are enemy drones in the area. This undoubtedly reduces the opportunities for, or increases the risk of, MANPADS operation.</p>



<p><strong>Ukraine perspective – early phase</strong></p>



<p>In the early phase of the invasion there was an armoured attack along the borders, but particularly moving south towards Kyiv from Belarus. This was largely canalised along main routes, as were its supporting logistic columns. This resulted in heavy losses. These were inflicted mainly by mines and artillery. Flooding of off-road terrain reduced the transit route options for the invading force.</p>



<figure><img data-attachment-id="47991" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-321/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-23.png" data-orig-size="1200,953" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-23.png?w=830" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-23.png?w=830" tabindex="0" role="button" loading="lazy" width="1024" height="813" src="https://hushkit.net/wp-content/uploads/2024/10/image-23.png?w=1024" alt=""></figure>



<p><strong>Later Developments</strong></p>



<p>After the pushing back of the initial armour thrust, Russian armour and mechanised infantry have been grinding out attacks from Ukraine’s borders, particularly from the south and east.&nbsp;This relatively static land battle is accompanied by long-range missile attacks on critical infrastructure and centres of population.</p>



<p>Both sides have effective anti-aircraft missile systems, and neither side has achieved full air superiority over the battlefield. The later Russian attack has featured the use of medium- to long-range stand-off weapons (cruise or ballistic missiles and glide bombs), air-or ground-launched, often from within Russian territory. There seems little scope to counter this, while the political does not exist to mount attacks on launch locations well into Russian territory. The best possible missile defence system may ameliorate damage but will not hasten the end of the conflict, which has become strategic rather than tactical.</p>



<p>Significant numbers of western ground-to-air missile systems are also being supplied. Ukrainian anti-armour operations have increasingly been able to use precision artillery such as HIMARS and ATACMS. The availability of such systems and their munitions is likely to be in short supply and is dependent on enduring political support from EU and NATO countries. It is, therefore, vulnerable, for example, should Donald Trump be returned as US President following the November election.</p>



<p>It seems likely that NATO surveillance assets (E-3, RC-135W, U-2S and satellite cover) are gathering real time intelligence over the battlefield – whether such information is being passed to inform Ukraine deployments and targeting decisions has not been revealed. In any future conflict, using such overhead assets and effective datalinks to transmit near real-time intelligence is likely to be key to effective offensive or defensive operations.</p>



<p>Both Russia and the Ukraine have adopted the use of armed drones for the top attack of armour and these appear to have been very successful. (Relatively little imagery has been released showing Ukraine anti-armour helicopter attacks on Russian armour, or indeed Russian helicopter attacks on Ukrainian armour – Western or otherwise).</p>



<p>NATO nations are beginning to supply air-to-ground weapons such as Brimstone and Storm Shadow, and F-16 aircraft have entered Ukrainian service. It is not known whether Western air-to-ground missiles have been integrated for release from existing Russian-built equipment operating with the Ukrainian Air Force.</p>



<p><strong>Suggested Success Factors for Helicopter anti-armour operations</strong></p>



<figure><img data-attachment-id="47992" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-322/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-24.png" data-orig-size="1024,601" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-24.png?w=830" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-24.png?w=830" tabindex="0" role="button" loading="lazy" width="1024" height="601" src="https://hushkit.net/wp-content/uploads/2024/10/image-24.png?w=1024" alt=""></figure>



<p>What do you need for successful helicopter anti-armour missions? Ideally, you want air superiority and not to operate over large swathes of enemy-held territory occupied by determined resistance, equipped with capable MANPADS and other air defence systems such as S-200 and S-300.&nbsp;</p>



<p>Here is a list of possible success factors for postulated helicopter anti-armour operations.</p>



<ul>
<li>Accurate intelligence as to disposition and movement of enemy armour: satellite, aerial recce, stand-off radar, comms / SIGINT, manned armoured reconnaissance, SF, etc.</li>



<li>A command and control infrastructure capable of providing updated target information in near real-time</li>



<li>Ability to comply with restrictive rules of engagement when necessary</li>



<li>Preferably having air superiority over the area of operations</li>



<li>Ability to reach an engagement position with minimal exposure to threat systems</li>



<li>Ability to engage at long-range</li>



<li>The necessity of avoiding enemy drone threats to AH is likely to favour mobile rather than static operation.</li>



<li>Carriage of sufficient weapons to inflict significant attrition on the enemy force (likely to determine the number of helicopters in the attack)</li>



<li>Use of longer-range missiles (Rafael Spike NLOS quotes 27 km range, helicopter-launched Brimstone is said to have similar range capability).</li>



<li>Proven and effective countermeasures against unexpected missile attack – missile launch detection and tracking, plus sophisticated countermeasures and effective signature reduction. Today, there must<em> be some query as to the availability and effectiveness of such systems.</em></li>



<li>Ballistic tolerance at least against small arms and medium machine gun threats</li>



<li>Reliable, low-maintenance platform, capable of operation in all weather and climatic conditions.</li>



<li>Crashworthy fuel systems</li>



<li>Run-dry transmission systems</li>
</ul>



<p><strong>Defensive Operations</strong></p>



<p>The above factors suggest that deploying attack helicopters operating defensively (over one’s territory) could still be effective.</p>



<p>If the enemy uses the same or similar equipment, there would still be problems to solve regarding positive target ID. Also, effective command and control to deal with a fluid ground situation could be problematic, as could maintaining a supply of munitions to the AH force. Missile countermeasures remain an uncertain problem.</p>



<p><strong>Offensive Operations</strong></p>



<p>Long-range indirect fire engagements would be preferred for both offensive and defensive operations—and probably essential in the offensive case.&nbsp;</p>



<p>The high helicopter losses sustained by Russia in current offensive operations probably reflect high risk operations, in the face of determined opposition with capable weapons and not much terrain cover for the helicopters. Also, no air superiority to provide top cover and hinder ground air defence, together with apparently ineffective measures to hinder missile lock-on and to break lock, once engaged.</p>


<div>
<figure><img data-attachment-id="47989" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-320/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-22.png" data-orig-size="480,315" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-22.png?w=480" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-22.png?w=480" tabindex="0" role="button" loading="lazy" width="480" height="315" src="https://hushkit.net/wp-content/uploads/2024/10/image-22.png?w=480" alt=""></figure></div>


<p>Moreover, the threat is not the organic air defences of battlegroups or a Soviet Motor-Rifle Regiment or Brigade but dispersed and well-hidden infantry and special forces units equipped with modern MANPADS missile systems. Furthermore, because the enemy forces are operating over the defenders’ own ground, the defence can be cued and alerted to approaching helicopters, given good data connectivity.</p>



<p>In the case of offensive operations, it would appear that stand-off operations from the ground already held by one’s own forces might be the order of the day. In this case, the helicopters might operate similarly to a highly mobile precision artillery unit, able to redeploy kilometres across the field of operations in minutes. With a lack of local air superiority, the Russian use of stand-off weapons launched from within their territory supports this proposition.</p>







<p>A further consideration is that maintaining the mobility of the helicopter force is likely to benefit it by hampering any drone threat targeted at it.</p>



<p>The focus of attack might shift towards enemy logistics – MBTs without fuel or ammunition cannot conduct manoeuvre warfare.&nbsp;</p>



<p>Increasing the range at which the attack is conducted could suggest the use of larger helicopters to carry the heavier weapons likely to be required – feasible if operating over safe ground. The carriage of Exocet on certain export Sea King aircraft is an example of such a usage. Rafael Spike and Brimstone are also attracting interest because of their long-range capability. Clearly, target selection would be entirely dependent on the higher-level ISTAR infrastructure, although salvo-fired Brimstone has already shown some autonomous target discrimination capability.</p>



<p>An alternative to using one heavy long-range missile per tank destroyed might be to use a larger helicopter to launch long-range drone-carrying systems. This could allow several medium helicopters to launch attack and surveillance drones into a given operational area, possibly in the enemy’s rear. Command and control, logistics, comms, armour, barracks, and hardened targets could all be engaged in this way.&nbsp;</p>



<p>Forward-launched recce drones could provide target designation and satisfy positive ID requirements when operating under tight rules of engagement.</p>



<p>Such an approach could also overload the enemy air defence command and control and be usefully deployed in conjunction with simultaneous missile and/or manned aircraft operations.</p>



<p>This capability is alluded to in several planned US programmes, including the abandoned FARA and FLRAA. We are talking about air-launched effects (LE) for reconnaissance or attack and Future Tactical Unmanned Aircraft Systems. The air-launched effects were described (Vertiflite March / April 2024) as being deployed from FARA, FLRAA and Black Hawk “to decoy, disrupt or destroy enemy air defences and to spot targets for joint forces”. The same article indicates that ”the Army plans first flight of a fully-integrated ALTIUS – Air-Launched, Tube Integrated Unmanned System from a Black Hawk this year” potentially for a rapid fielding decision in 2025.</p>



<p>Associated with this is the US’s ”long-standing interest in technologies that enable a single operator to control multiple UAS.”</p>



<figure></figure>



<p>Perhaps network-enabled command and control, ISTAR, and other means of target verification can integrate existing AH capability in defensive operations. Medium helicopters operating further back could launch a mix of longer-range weapons and ‘Launched effect UAS’ in both offensive and defensive scenarios.</p>



<p>Further to the suggestion of stand-off medium helicopters for anti-armour ops over enemy territory (and the US reference to Air Launched Effects), see this link: <a href="https://www.thinkdefence.co.uk/2022/06/tube-launched-uas/&amp;nbsp" rel="nofollow">https://www.thinkdefence.co.uk/2022/06/tube-launched-uas/&amp;nbsp</a>;</p>



<p>It is also worth noting that Sea King was cleared for export customers to launch Sea Eagle (India) and Exocet (Qatar, Pakistan), suggesting plenty of payload for air-launched systems controlled by medium support helicopters. [A good role for the FAA Merlin Mk.4 force?]</p>



<figure><img data-attachment-id="48007" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-326/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-28.png" data-orig-size="1500,1000" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-28.png?w=830" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-28.png?w=830" tabindex="0" role="button" loading="lazy" width="1024" height="682" src="https://hushkit.net/wp-content/uploads/2024/10/image-28.png?w=1024" alt=""></figure>



<p><strong>The Drone Threat to Helicopters</strong></p>



<p>In a traditional mechanised offensive, armour and infantry fighting vehicles (IFVs) operate collectively to gain and hold ground. Helicopters are used forward to take out enemy armour and attack command posts while scouting and designating targets for precision artillery strikes.</p>



<p>Infantry also relies on helicopter support for air cover and casevac. Recently, drones have been used in kamikaze attacks on helicopters. Used in this way, drones could significantly hamper helicopter operations and severely affect infantry morale.</p>



<p>Both helicopters and ground vehicles now need to adopt design and protection / defensive measures cognisant of the drone threat. In this scenario, the twin tail rotors suggested on some Westland designs (admittedly for other purposes) could provide a degree of redundancy.</p>



<p><strong>General Observations</strong></p>



<p>As the earlier discussion shows, the systems are more important than the platform. Ideally, you want to be network-enabled (so that someone else sorts out the targets and satisfies the rules of engagement). Then you want a long-range fire-and-forget weapon system capable of defeating enemy countermeasures and with a tandem charge, warhead to deal with ERA. If the missile sensor can discriminate between target types, so much the better. If I were in a tank, I’d still be worried about drones – as I said in a briefing a dozen years ago.&nbsp;</p>


<div>
<figure><img data-attachment-id="48010" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-328/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-30.png" data-orig-size="271,186" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-30.png?w=271" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-30.png?w=271" tabindex="0" role="button" loading="lazy" width="271" height="186" src="https://hushkit.net/wp-content/uploads/2024/10/image-30.png?w=271" alt=""></figure></div>


<p>Given the right network integration and the right weapons, you could inflict a deal of pain in a fairly basic helicopter while staying well out of the way of any air defence. You still have to protect yourself against chance encounters – partisans or special forces with shoulder-launched weapons, for example. This appears easier said than done.</p>



<p>Assuming conditions allow offensive aircraft operations, integrating western weapon systems such as Brimstone on suitable platforms, such as Frogfoot, could provide the ability to salvo fire against multiple targets. Its MMW radar seeker is supposed to support this capability, with the weapons themselves avoiding duplication of effort and allocating targets across the salvo (fire-and-forget en masse).</p>


<div>
<figure><img data-attachment-id="47980" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-313/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-15.png" data-orig-size="640,853" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-15.png?w=640" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-15.png?w=640" tabindex="0" role="button" loading="lazy" width="640" height="853" src="https://hushkit.net/wp-content/uploads/2024/10/image-15.png?w=640" alt=""></figure></div>


<p>The capacity offered by a medium helicopter in this role could extend to&nbsp;area denial or countermobility operations. This type of platform might be used to deliver area denial or scatterable countermeasures (even mines, perhaps) to rapidly counter enemy armour. Missiles such as Brimstone might be more effectively employed in this scenario.</p>



<p>Whether in a defensive or offensive posture, an agile and responsive command and control system will be required to maintain a responsive decision-making process. This is known as the OODA-loop (OODA stands for observe, orient, decide, act). There is some question as to whether current NATO surveillance assets are providing near-real time intelligence to Ukraine. It is clear, however, that long-range stand-off anti-armour operations will require a persistent (probably stealthy) high-flying or stand-off system to provide situation awareness, detect armour targets across the battlefield and enable the use of precision indirect fires (whether by artillery or helicopter, operations).</p>



<figure><img data-attachment-id="47998" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-325/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-27.png" data-orig-size="3840,2715" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-27.png?w=830" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-27.png?w=830" tabindex="0" role="button" loading="lazy" width="1024" height="724" src="https://hushkit.net/wp-content/uploads/2024/10/image-27.png?w=1024" alt=""></figure>



<p><em>One very good use case for low or zero sensors but good comms is to have airborne nodes in a ‘scrum half’ position behind the tactical edge. Anything up threat (exquisite and LO) can use directional comms to get data back / receive C2 and Intel from the nodes; the nodes then use any route to get to the optimal place – including space and terrestrial – from a position that cannot be easily targeted by OPFOR.</em></p>



<p><em>Urgent Operational Requirements manage rapid change during conflict, usually in response to painful lessons learned. This is generally at the subsystem/protection level rather than the system and platform level. Examples could be the rapid introduction of electronic countermeasures, protective screens, and responses to enemy countermeasures.</em> The targeting infrastructure required to support helicopter indirect fire long-range attacks appears a little different from that required to support MLRS / HIMARS / ATACMS operations and should, therefore, be available, provided suitable tasking orders can be accommodated.</p>



<p>Interestingly, the available description of the Leonardo AW249 mentions the ability to operate air-launched RPVs. The latest Aerospace magazine indicates more on its network capability: “acts as a sensor ISR node on a C4 network, and (can) control and manage UAVs – with a Wide Band LOS Datalink … LTE Gateway and Link 16.” The articles do not address the routine concept of operations, but the connectivity and network capabilities could allow a range of collaborating systems to provide targeting data. Now they just need to adapt AW149 and/or NH90 TTH to the stand-off anti-armour role …</p>



<p><strong>Tentative Conclusions</strong></p>



<p>There are many problems facing armoured units in modern land warfare. Broadly, these fall into (1) threats: enemy armour, helicopters, armed drones, precision artillery and missiles, minefields and obstacles; and (2) the difficulty of sustaining operations over time at long range: logistics – fuel, ammunition, repair, crew sustainment, rules of engagement.</p>



<p>Similarly, one can discuss the problems facing the counter-armour forces – again dependent on terrain/area of operations, posture, equipment and C4ISTAR systems and their connectivity.&nbsp;</p>



<p>Operational changes may arise under TTPs (Tactics, Techniques, and Procedures) rather than wholesale doctrinal revisions. The challenge is to inflict heavy casualties on enemy forces while increasing one’s own chances of survival.</p>



<p>Used carefully, existing attack helicopters operating over ‘friendly’ terrain can still be effective. Increased use of ‘network-enabled warfare’ seems essential, combined with the ability to engage targets primarily at range and preferably non-line-of-sight.</p>



<figure><img data-attachment-id="47974" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-309/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-11.png" data-orig-size="1280,960" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-11.png?w=830" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-11.png?w=830" tabindex="0" role="button" loading="lazy" width="1024" height="768" src="https://hushkit.net/wp-content/uploads/2024/10/image-11.png?w=1024" alt=""></figure>



<p>You might end up with some new operational concepts and the reprioritisation of target lists.&nbsp; Flooding of land to ‘canalise’ (literally and metaphorically) the routes available to armour (and logistics); out-of-contact launching and controlling of recce/designator / armed drones – and longer-range missiles from medium helicopters looks like a decent tactic for anti-armour operations and may have a place in both defensive and offensive postures.</p>


<div>
<figure><img data-attachment-id="47983" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-316/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-18.png" data-orig-size="531,299" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-18.png?w=531" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-18.png?w=531" tabindex="0" role="button" loading="lazy" width="531" height="299" src="https://hushkit.net/wp-content/uploads/2024/10/image-18.png?w=531" alt=""></figure></div>


<p>Brimstone 2 (helicopter launched) has a stated range of 40 km+. As an operational concept,&nbsp; half a dozen AW149s (or NH90s, or Merlins, or Sea Kings), each with eight Brimstone 2, could do a lot of damage providing indirect fire – provided near real-time networked stand-off target information was available. The helicopter fleet operates as a highly mobile precision artillery force in this role.</p>



<p>Exploitation of night capability and simultaneous attacks along a front might come into play. Deep strikes into enemy training and rear areas (and recruitment centres) might also be targeted to affect public opinion and morale. </p>



<figure><img data-attachment-id="47981" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-314/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-16.png" data-orig-size="1200,650" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-16.png?w=830" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-16.png?w=830" tabindex="0" role="button" loading="lazy" width="1024" height="554" src="https://hushkit.net/wp-content/uploads/2024/10/image-16.png?w=1024" alt=""></figure>



<p>Other options could include using dummy armour supported by signals deception activity to draw in enemy forces or distract from more covert operations.</p>



<figure><img data-attachment-id="47975" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-310/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-12.png" data-orig-size="700,467" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-12.png?w=700" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-12.png?w=700" tabindex="0" role="button" loading="lazy" width="700" height="467" src="https://hushkit.net/wp-content/uploads/2024/10/image-12.png?w=700" alt=""></figure>



<p>Finally, it would appear that heavy armour forces do need organic close-in air defence. Perhaps the naval approach (e.g., Phalanx)—whether by high rate-of-fire radar-directed gun systems, electronic countermeasures (potentially including EMP to disrupt connectivity of control systems), or directed energy means—might go a good way to countering the ‘kamikaze drone’ threat. Target detection and tracking systems would have to be modified to suit the targets to be engaged.&nbsp;</p>



<p>The low cost and simplicity of the drones means that they have a significant numbers advantage and identifying and then defeating drones once in air is hard; their low profile and low signature is a challenge and their agility makes physical defeat hard. This strongly favours electronic countermeasures might be the preferred approach.</p>



<p>There’s a Hush-Kit Book of Warplanes&nbsp;<a href="https://unbound.com/books/hushkit">Vol 1</a>, and there will soon be a&nbsp;<a href="https://unbound.com/books/hushkit2">Vol 2</a>&nbsp;and then a&nbsp;<a href="https://unbound.com/books/the-hush-kit-book-of-warplanes-vol-3">Vol 3</a>!</p>



<p>Thank you for reading the Hush-Kit site. It’s all been a massive labour of love to which I have devoted much time over the last 12 years. There are over 1100 free articles on Hush-Kit; think of the work that’s gone into that! To keep this going, consider donating (see button on top of page) or supporting on&nbsp;<a href="https://www.patreon.com/hush_kit">Patreon</a>. Not having a sponsor or paid content keeps this free, unbiased (other than to the Whirlwind) and a lot naughtier. We can only do this with your support. I love this site and want it to continue; this is where you come in.</p>



<p>To those who already support us, I’d like to thank you.</p>



<p>The discussion suggests that intelligence, communications, and the ability to counter enemy operations are becoming dominant factors in future land warfare. Land platforms and helicopters should now be designed considering enemy drone operations as a key threat.</p>



<p>Equally, friendly drone operations – offensive, defensive, intelligence gathering, defence suppression, etc. —should be integrated into and with operational planning and land and air platform capabilities.</p>



<p>RV Smith</p>



<p><em>Dr Ron Smith&nbsp;joined the British helicopter company&nbsp;<a href="https://hushkit.net/2017/09/02/10-incredible-cancelled-westland-aircraft/">Westland&nbsp;</a>in 1975, working in Research Aerodynamics, and remotely piloted helicopters (before they were cool), and later became Head of Future Projects. He had a strong influence on the design of the NH90 helicopter, and was involved in the assessment of the Apache for Britain. He also explored a variety of exotic future technologies for&nbsp;<a href="https://hushkit.net/2017/09/02/10-incredible-cancelled-westland-aircraft/">Westland</a>. One such exotic machine was a secret stealth attack helicopter.</em></p>



<p><em>Credit is also due to John Puddy, Robert Hopkins, Jeremy Smith, and Jim Smith for the valuable insights they provided.</em></p>



<figure><a href="https://www.amazon.co.uk/Westland-Aircraft-Rotorcraft-Cutting-Edge-Technology/dp/1911658956/ref=sr_1_1?crid=3VKHCUYVQPVBA&amp;dib=eyJ2IjoiMSJ9.2JRO68gZv6IMqF74VjvMo7cEPXlz-5GMpxv283-39Sdbj8hTs9bpR6EK0uC3pYvOF6sOoWk3ij7zJa7WXZm_nWX3M_xe_nE9u4hrH5QtxSTbQ70387PdpWWSDf1VxXSGILMdOjqIJhFmi4Nn8yk9x0UXe6SEr5foWKjDuVCWgU0BgLYTm9SRxRe330rI8McuRO9Dxr5triTaSMoOZEPHyVA_bYP3JSYgx4G0TiLYBHc.mDp0-QBTczHSJvvl5zDeft4LWsAGhG-cgac2hBYTnrU&amp;dib_tag=se&amp;keywords=westland+projects&amp;nsdOptOutParam=true&amp;qid=1728324045&amp;s=digital-text&amp;sprefix=westland+projects%2Cdigital-text%2C79&amp;sr=1-1-catcorr"><img data-attachment-id="47995" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-323/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-25.png" data-orig-size="735,1000" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-25.png?w=735" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-25.png?w=735" tabindex="0" role="button" loading="lazy" width="735" height="1000" src="https://hushkit.net/wp-content/uploads/2024/10/image-25.png?w=735" alt=""></a></figure>







<figure><a href="https://www.amazon.co.uk/Hush-Kit-Book-Warplanes-Joe-Coles/dp/1800180942/ref=monarch_sidesheet_title"><img data-attachment-id="47997" data-permalink="https://hushkit.net/2024/10/07/is-the-attack-helicopter-dead/image-324/" data-orig-file="https://hushkit.net/wp-content/uploads/2024/10/image-26.png" data-orig-size="1324,1500" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://hushkit.net/wp-content/uploads/2024/10/image-26.png?w=830" data-large-file="https://hushkit.net/wp-content/uploads/2024/10/image-26.png?w=830" tabindex="0" role="button" loading="lazy" width="904" height="1024" src="https://hushkit.net/wp-content/uploads/2024/10/image-26.png?w=904" alt=""></a></figure>

			
						
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google must crack open Android for third-party stores, rules Epic judge (609 pts)]]></title>
            <link>https://www.theverge.com/policy/2024/10/7/24243316/epic-google-permanent-injunction-ruling-third-party-stores</link>
            <guid>41769657</guid>
            <pubDate>Mon, 07 Oct 2024 19:00:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/policy/2024/10/7/24243316/epic-google-permanent-injunction-ruling-third-party-stores">https://www.theverge.com/policy/2024/10/7/24243316/epic-google-permanent-injunction-ruling-third-party-stores</a>, See on <a href="https://news.ycombinator.com/item?id=41769657">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p>Google’s Android app store <a href="https://www.theverge.com/23994174/epic-google-trial-jury-verdict-monopoly-google-play">is an illegal monopoly</a> — and now it will have to change. </p></div><p>Today, Judge James Donato issued his final ruling <a href="https://www.theverge.com/23945184/epic-v-google-fortnite-play-store-antitrust-trial-updates">in <em>Epic v. Google</em></a>, ordering Google to effectively open up the Google Play app store to competition for three whole years. Google will have to distribute rival third-party app stores<em> within </em>Google Play, and it must give rival third-party app stores access to the full catalog of Google Play apps, unless developers opt out individually. </p><p>These were <a href="https://www.theverge.com/2024/4/12/24128531/epic-google-proposed-injunction-remedies">Epic’s biggest asks</a>, and they might change the Android app marketplace forever — if they aren’t immediately paused or blocked on appeal. </p><p>And they’re not all that Epic has won today.</p><p>Starting November 1st, 2024, and ending November 1st, 2027, Google must also:</p><div><ul><li>Stop requiring Google Play Billing for apps distributed on the Google Play Store (the jury found that Google had illegally tied its payment system to its app store)</li><li>Let Android developers tell users about other ways to pay from within the Play Store</li><li>Let Android developers link to ways to download their apps outside of the Play Store</li><li>Let Android developers set their own prices for apps irrespective of Play Billing</li></ul></div><p>Google also can’t: </p><div><ul><li>Share app revenue “with any person or entity that distributes Android apps” or plans to launch an app store or app platform</li><li>Offer developers money or perks to launch their apps on the Play Store exclusively or first</li><li>Offer developers money or perks <strong>not</strong> to launch their apps on rival stores</li><li>Offer device makers or carriers money or perks to preinstall the Play Store</li><li>Offer device makers or carriers money or perks <strong>not </strong>to preinstall rival stores</li></ul></div><p>In <em>Epic v. Google</em>,<em> </em>Epic successfully argued that Google had <a href="https://www.theverge.com/23959932/epic-v-google-trial-antitrust-play-store-fortnite-recap">created such a substantial array of deals with developers, carriers, and device makers</a> that it was nigh-impossible for rival stores to spring up. By blocking those sorts of deals, and proactively helping rival app stores, it’s possible some real competition to Google’s monopoly could now arrive.</p><p>Google will still have some control over safety and security as it opens up the Google Play Store to rival stores. The injunction says that Google can “take reasonable measures” that are “strictly necessary and narrowly tailored” and are “comparable” to how it currently polices the Google Play Store. Google will be able to charge a fee for that policing, too. Epic has repeatedly argued that Google should not be able to deter third-party app stores through policing, so it’s likely Epic and Google will keep butting heads over this.</p><p>Judge Donato is giving Google eight months from now to come up with a system, with a three-person technical committee jointly chosen by Epic and Google reviewing any disputes. That system will also come with a way for developers to opt out of being listed in rival Android app stores.</p><p>Epic didn’t quite get everything it asked for: it wanted the judge to crack open Google Play for six years, not three; allow users to sideload apps with a single tap; and for Google to stop being able to tie Android APIs to Google Play. </p><p>Why not six years? “The provisions are designed to level the playing field for the entry and growth of rivals, without burdening Google excessively,” writes Donato in his order. “As competition comes into play and the network effects that Google Play unfairly enjoys are abated, Google should not be unduly constrained as a competitor.”</p><p>Yet Amazon, of all companies, convinced Judge Donato that Google’s rivals need a helping hand. “Even a corporate behemoth like Amazon could not compete with the Google Play Store due to network effects,” writes Donato, citing a key piece of evidence from the trial: an internal Google presentation that suggested Amazon would struggle with the chicken-and-egg problem of attracting both users and apps. To date, the Amazon Appstore has not become a substantial competitor.</p><p>But with access to the Google Play catalog of apps, Donato argues, rival app stores will now have “a fighting chance of getting off the ground”.</p><p>Epic Games <a href="https://www.theverge.com/2020/8/13/21368363/epic-google-fortnite-lawsuit-antitrust-app-play-store-apple-removal">originally sued Google</a> on August 13th, 2020 — the very same day it <a href="https://www.theverge.com/2020/8/13/21367963/epic-fortnite-legal-complaint-apple-ios-app-store-removal-injunctive-relief">sued Apple, too</a>. The game developer <a href="https://www.theverge.com/2020/8/14/21368651/apple-fortnite-ios-app-store-ban-lawsuit-epic-games-payments">sprung a premeditated trap</a> on both tech giants by attempting to bypass their 30 percent fee on in-app purchases with a surprise update to its mega-popular game <em>Fortnite. </em>Both tech companies retaliated by kicking <em>Fortnite</em> off their app stores, only to be met by a coordinated #FreeFortnite action campaign and a pair of lawsuits accusing each of creating illegal monopolies.</p><p>The Apple case is already over, and Apple mostly won: the <a href="https://www.theverge.com/2024/1/16/24039983/supreme-court-epic-apple-antitrust-case-rejected">Supreme Court rejected Epic’s final appeal</a> this January. The only thing Epic legally achieved there was an order dismantling Apple’s “anti-steering rules,” theoretically letting developers freely tell their customers how to bypass Apple’s payment systems. (I won’t discuss the Apple case more than this brief outline since I’m&nbsp;<a href="https://www.theverge.com/authors/sean-hollister/archives/38#:~:text=Ethics%20statement%2C%20June%202023%3A">ethically bound</a>.)</p><p>But the Google case took far longer to kick off, and it went very differently. I spent 15 days reporting live from the courtroom, and <a href="https://www.theverge.com/23959932/epic-v-google-trial-antitrust-play-store-fortnite-recap">I saw Epic show time and again</a> that Google was running scared, didn’t treat developers equally, and had something to hide. </p><p>The jury in <em>Epic v. Google</em> was thoroughly convinced: last December, <a href="https://www.theverge.com/23994174/epic-google-trial-jury-verdict-monopoly-google-play">it reached the unanimous verdict</a> that the Google Play app store and Google Play Billing service were an illegal monopoly and that many of the special deals it made with game developers and phone manufacturers were anticompetitive behavior.</p><div><p>“We’re going to tear the barriers down”</p></div><p>In August, <a href="https://www.theverge.com/2024/8/14/24220491/epic-google-android-app-store-monopoly-remedies-hearing">Judge Donato warned</a> that Google would pay for its behavior. “We’re going to tear the barriers down, it’s just the way it’s going to happen,” he said. In remedy hearings, he rejected Google’s suggestions that meeting Epic’s demands would take too much work, cost too much money, or were impossible to arrange without taking substantial time.</p><p>It’s not yet clear whether Google will have to immediately follow the court’s demands, even though the permanent injunction will take effect November 1st. Google already promised to appeal the verdict, and it’s now apparently looking for an immediate stay — Google says it will ask to “<a href="https://blog.google/outreach-initiatives/public-policy/epic-games-verdict-appeal/">pause Epic’s requested changes” in this new blog post today</a>. </p><p>Like Apple, Google now hopes the appeals court will press pause on Judge Donato’s order while it tries its luck again. Apple spent years <a href="https://www.theverge.com/2023/8/9/23826043/epic-apple-app-store-supreme-court-petition">delaying the anti-steering rules change</a> with its legal appeals.</p><p><a href="https://www.theverge.com/policy/2024/9/30/24256395/epic-sues-google-samsung-antitrust-auto-blocker">Epic filed a second lawsuit against Google (and Samsung)</a> one week ago, arguing the companies were already attempting to sidestep this upcoming injunction by adding additional friction for third-party app stores. Since that case is now officially related to this one, Judge Donato will be hearing it as well.</p><p>Epic didn’t immediately reply to a request for comment. </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Wigle.net: All the networks, found by everyone (144 pts)]]></title>
            <link>https://wigle.net/</link>
            <guid>41769648</guid>
            <pubDate>Mon, 07 Oct 2024 18:59:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wigle.net/">https://wigle.net/</a>, See on <a href="https://news.ycombinator.com/item?id=41769648">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
      
      <div id="map_ext_wrapper">
  <p>&lt;&lt;</p>
  <div>
    <table>
      <tbody><tr>
        <td>
          <label for="displaylat">Latitude&nbsp;</label></td><td>
        </td>
      </tr>
      <tr>
        <td>
          <label for="displaylon">Longitude&nbsp;</label></td><td>
        </td>
      </tr>
    </tbody></table>
  </div>
  <hr>
  <div>
    <form name="update" id="mapUpdate" action="/map" method="get">
      <table>
        <tbody><tr>
          <td><label for="ssid">SSID&nbsp;</label></td>
          <td></td>
        </tr>
        <tr>
          <td><label for="netid">BSSID&nbsp;</label></td>
          <td></td>
        </tr>
      </tbody></table>
Date Range:
<!-- label for="startTransID">Start Year&nbsp;</label --> 
<!--label for="endTransID">End Year&nbsp;</label --><span id="slideLabel"></span><br>




      <div>
             Possible FreeNet<br>
             Possible Commercial Net<br>
             No Labels<br>
            <!-- input type="checkbox" name="genwifi" class="mapFilter"> Wifi Net<br/>
            <input type="checkbox" name="gengsm" class="mapFilter"> GSM Cellular Net<br/>
            <input type="checkbox" name="gencdma" class="mapFilter"> CDMA Cellular Net<br/> -->
             Only Discovered By Me<br>
             Only Discovered By Others<br>
          </div>
      <div id="tiletools">
        <hr>
        <p><label for="tilecoloring">Coloring:&nbsp;</label>
        
        
      </p></div>

      &nbsp;&nbsp;
      
      
      <p><label for="mapstyle">View:&nbsp;</label>
      </p>
    </form>
  </div>
  <hr>
    <ul>
    <li><b>Notes:</b></li>
    <li>Zoom in to see individual SSIDs.</li>
    <!-- li><b><em>wide view:</em></b> yellow: more nets, purple fewer <img src="/images/density_grad.png"/></li -->
    <li><!-- b><em>near view:</em></b> green hi wifi high QoS, red low <img src="/images/qos_grad.png"/><br/ -->cell tower: blue</li>
    <li><b><em>QoS:</em></b> Quality of Signal is a metric based on the number of observations and observers</li>
    </ul>
</div>
      <div id="statsGraphDiv">
        <h3>Statistics Over Time</h3>
        <div>
<div id="statsgraphlabel">
  <h3>WiFi Networks Over Time</h3>
  
  <p><span><a href="https://wigle.net/graph-large.html">[Full-screen Graph]</a></span>
</p></div>
<div id="statsgraphlabel2">
  <h3>WiFi Encryption Over Time</h3>
  
  <p><span><a href="https://wigle.net/enc-large.html">[Full-screen Graph]</a>&nbsp;<a href="https://wigle.net/enc-large2y.html">[2 Years only Graph]</a>
  </span></p><p>Mouse-over graphs to interact with data. Select a range to zoom in, double click to zoom back out. Modify the number in the corner to smooth over multiple days. Full-screen graphs available!
    </p>
</div>
        </div>
      </div>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[US antitrust case against Amazon to move forward (428 pts)]]></title>
            <link>https://www.reuters.com/technology/us-antitrust-case-against-amazon-move-forward-2024-10-07/</link>
            <guid>41768658</guid>
            <pubDate>Mon, 07 Oct 2024 17:40:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/technology/us-antitrust-case-against-amazon-move-forward-2024-10-07/">https://www.reuters.com/technology/us-antitrust-case-against-amazon-move-forward-2024-10-07/</a>, See on <a href="https://news.ycombinator.com/item?id=41768658">Hacker News</a></p>
Couldn't get https://www.reuters.com/technology/us-antitrust-case-against-amazon-move-forward-2024-10-07/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Nearly all of the Google Images results for "Baby Peacock" are AI generated (354 pts)]]></title>
            <link>https://twitter.com/notengoprisa/status/1842550658102079556</link>
            <guid>41767648</guid>
            <pubDate>Mon, 07 Oct 2024 16:25:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/notengoprisa/status/1842550658102079556">https://twitter.com/notengoprisa/status/1842550658102079556</a>, See on <a href="https://news.ycombinator.com/item?id=41767648">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Compiling C in the browser using WebAssembly (167 pts)]]></title>
            <link>https://wasmer.io/posts/clang-in-browser</link>
            <guid>41767644</guid>
            <pubDate>Mon, 07 Oct 2024 16:24:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wasmer.io/posts/clang-in-browser">https://wasmer.io/posts/clang-in-browser</a>, See on <a href="https://news.ycombinator.com/item?id=41767644">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>We’ve reached a major milestone in making any software run with WebAssembly.
Thanks to the newest release of Wasmer (4.4) and the Wasmer JS SDK (0.8.0) you can now run clang anywhere Wasmer runs!</p>
<p>This allows compiling C programs from virtually anywhere. Including Javascript and your preferred browser! (we tested Chrome, Safari and Firefox and everything is working like a charm).</p>
<p>For those eager to see it in action, head over to <a href="http://wasmer.sh/">wasmer.sh</a> to try a live demo (note: it requires a 100MB download):</p>
<pre><code># NOTE: this will download the clang package (100Mb), so it might take a while...
wasmer run clang/clang example.c -o example.wasm
wasmer run example.wasm
</code></pre>
<blockquote>
<p>Note: we <a href="https://x.com/wasmerio/status/1234903250249273344?lang=en">attempted running clang</a> few years ago, but because of WASI limitations we were unable to call <code>posix_spawn</code> which limited the usage and usability of clang in the browser, Firefox and Safari were not supported by then but are fully supported now.</p>
</blockquote>
<hr>
<p>Why is running <code>clang</code> with Wasmer useful, what use cases will enable?</p>
<ul>
<li>
<p>You can compile C code to WebAssembly easily just using the <code>wasmer</code> CLI: no toolchains or complex installations needed, install Wasmer and you are ready to go!</p>
</li>
<li>
<p><a href="https://wasix.org/">WASIX</a> is now self-hosted meaning it can compile itself and any C programs.</p>
</li>
<li>
<p>You can compile C projects directly from JavaScript! (Continue reading to learn how to use <code>clang</code> with the Wasmer JS SDK.)</p>
<p>We expect online IDEs to start adopting the SDK to allow their users compile and run C programs in the browser.</p>
</li>
<li>
<p><strong>Reproducible builds</strong> anywhere (using the same version of Wasmer)</p>
</li>
</ul>
<p>Enough with the tech talk—let’s see a demo!</p>
<p>Create a <code>donut.c</code> file with the following content (example taken from the awesome <a href="https://www.a1k0n.net/2011/07/20/donut-math.html">Donut Math</a>):</p>
<pre><code>#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

             k;double sin()
         ,cos();main(){float A=
       0,B=0,i,j,z[1760];char b[
     1760];printf("\x1b[2J");for(;;
  ){memset(b,32,1760);memset(z,0,7040)
  ;for(j=0;6.28&gt;j;j+=0.07)for(i=0;6.28
 &gt;i;i+=0.02){float c=sin(i),d=cos(j),e=
 sin(A),f=sin(j),g=cos(A),h=d+2,D=1/(c*
 h*e+f*g+5),l=cos      (i),m=cos(B),n=s\
in(B),t=c*h*g-f*        e;int x=40+30*D*
(l*h*m-t*n),y=            12+15*D*(l*h*n
+t*m),o=x+80*y,          N=8*((f*e-c*d*g
 )*m-c*d*e-f*g-l        *d*n);if(22&gt;y&amp;&amp;
 y&gt;0&amp;&amp;x&gt;0&amp;&amp;80&gt;x&amp;&amp;D&gt;z[o]){z[o]=D;;;b[o]=
 ".,-~:;=!*#$@"[N&gt;0?N:0];}}/*#****!!-*/
  printf("\x1b[H");for(k=0;1761&gt;k;k++)
   putchar(k%80?b[k]:10);A+=0.04;B+=
     0.02;}}/*****####*******!!=;:~
       ~::==!!!**********!!!==::-
         .,~~;;;========;;;:~-.
             ..,--------,*/
</code></pre>
<p>We can run clang with Wasmer and compile it to WASI and WASIX (<em>just make sure <a href="https://docs.wasmer.io/install">you have Wasmer installed locally</a>!</em>):</p>
<pre><code>$ wasmer run clang/clang --dir=. -- -Wno-implicit-int donut.c -o donut.wasm
$ wasmer run donut.wasm
</code></pre>
<p>To run clang on your browser, you can try the following on <a href="https://wasmer.sh/">wasmer.sh</a> (we added <code>donut.c</code> to the <code>/home</code> dir so it’s easier to try):</p>
<pre><code>wasmer run clang/clang -Wno-implicit-int donut.c -o donut.wasm
wasmer run /home/donut.wasm
</code></pre>
<p>The exciting news is that the clang package can compile, not just the donut c example, but any <a href="https://github.com/wasix-org/wasix-libc/blob/main/examples">complicated examples</a> from WASIX.</p>
<p>And more importantly… it works fully in the browser! (and also via the Wasmer Javascript SDK, read below to check the example of how to run clang in any of your Javascript projects!)</p>
<p><img src="https://wasmer.io/_next/image?url=https%3A%2F%2Fcdn.wasmer.io%2Fimages%2Fclang-donut.original.png&amp;w=1920&amp;q=75" alt="Donut compiled to Wasm in the browser"></p>
<blockquote>
<p>Note: the <code>clang/clang</code> package currently weights about 100Mb uncompressed (as it requires the clang binaries + the system libraries). We are working on reducing the size and also serving it in compressed format. So ideally you should just need to download ~30Mb to use clang with Wasmer: either in your local shell, in your browser or in your Javascript project!</p>
</blockquote>
<h2>Javascript SDK usage</h2>
<p>Do you want to use <code>clang</code> in your Javascript project? Thanks to our newly released <a href="http://wasmer.io/posts/introducing-wasmer-js-wdk">Wasmer JS</a> SDK you can do it easily, in both the browser and Node.js/Bun etc:</p>
<pre><code>
import {
  init,
  Wasmer,
  Directory
} from "https://unpkg.com/@wasmer/sdk@latest/dist/index.mjs";

await init();

const clang = await Wasmer.fromRegistry("clang/clang");
const project = new Directory();
await project.writeFile("example.c",
`#include&lt;stdio.h&gt;

int main() {
  printf("Hello World");
  return 0;
}
`);

let instance = await clang.entrypoint.run({
  args: ["/project/example.c", "-o", "/project/example.wasm"],
  mount: { "/project": project },
});
const output = await instance.wait();

if (!output.ok) {
  throw new Error(`Clang failed. Exit: ${output.code}:`);
}

// The generated wasm file from clang
let wasm = await project.readFile("example.wasm");

const example = await Wasmer.fromFile(wasm);
const result = await example.entrypoint.run();
const outputExample = await result.wait();

// This should be "Hello World"
console.log(outputExample.stdout);
</code></pre>
<p>You can find a working <code>index.html</code> file executing clang: <a href="https://github.com/wasmerio/wasmer-js/blob/main/examples/clang-cdn/index.html">https://github.com/wasmerio/wasmer-js/blob/main/examples/clang-cdn/index.html</a></p>
<h3>One last thing! 🪄</h3>
<p>Wasmer’s clang can even <strong>optimize the file for you automatically</strong> using <code>wasm-opt</code> under the hood (Clang automatically detects if <code>wasm-opt</code> is used, and it will be automatically called when optimizing the file)</p>
<pre><code>wasmer run clang/clang --use wasmer/wasm-opt --dir=. -- -o example.wasm -O2
</code></pre>
<p>Imagine using Emscripten without needing its toolchain installed—or even better, imagine running Emscripten in the browser. We've made this possible thanks to the <a href="https://wasix.org/"><strong>WASIX</strong></a> ecosystem 🎉.</p>
<h2>What’s coming next</h2>
<p>We are incredibly excited for this milestone, as it opens the door for many upcoming features that we are going to need in Wasmer and Wasmer Edge:</p>
<ul>
<li>
<p>Compiling <strong>native Python libraries</strong> directly from within WASIX. Imagine being able to have PIP compiling things in Wasm upon install, e.g.:</p>
<pre><code>wasmer run python --entrypoint pip -- install numpy # This compiles numpy to WASIX, all within Wasmer processes
</code></pre>
</li>
<li>
<p>Using <strong><a href="https://wasmer.io/posts/py2wasm-a-python-to-wasm-compiler">py2wasm</a></strong> with a bundled compiler</p>
</li>
<li>
<p>Compiling <a href="https://medium.com/@elves.silva.vieira/javascript-achieves-breakthrough-performance-with-static-hermes-6286b0ac8ef7">Static Hermes</a> to WASIX, so we can generate native Wasm files from JS.</p>
</li>
<li>
<p>New tooling? (any project depending on LLVM can now be easily compiled to WebAssembly!)</p>
</li>
</ul>
<p>This is the beginning of an awesome journey, we can't wait to see what you create next with this.</p>
<p>Feel free to give Wasmer a star if you liked the article or tell us how you are thinking on using the project:</p>
<ul>
<li>Github: <a href="https://github.com/wasmerio/wasmer">https://github.com/wasmerio/wasmer</a></li>
<li>Or join us in our Discord: <a href="https://discord.gg/rWkMNStrEW">https://discord.gg/rWkMNStrEW</a></li>
</ul>
<hr>
<p>I want to give a special mention to Sebastien, who made the hard work on compiling clang to WASIX possible. Check his personal project, box86, if you want to see more awesome programs running anywhere: <a href="https://box86.org/">box86.org</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google Will Track Your Location 'Every 15 Minutes'–'Even with GPS Disabled' (104 pts)]]></title>
            <link>https://www.forbes.com/sites/zakdoffman/2024/10/05/google-new-location-tracking-warning-pixel-9-pro-pixel-9-pro-xl-pixel-9-pro-fold/</link>
            <guid>41767199</guid>
            <pubDate>Mon, 07 Oct 2024 15:49:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.forbes.com/sites/zakdoffman/2024/10/05/google-new-location-tracking-warning-pixel-9-pro-pixel-9-pro-xl-pixel-9-pro-fold/">https://www.forbes.com/sites/zakdoffman/2024/10/05/google-new-location-tracking-warning-pixel-9-pro-pixel-9-pro-xl-pixel-9-pro-fold/</a>, See on <a href="https://news.ycombinator.com/item?id=41767199">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><figure role="presentation"><figcaption><fbs-accordion><p>Warning—you are being tracked.</p></fbs-accordion><small>getty</small></figcaption></figure>
<p>If you’re worried your phone might be spying on you, sharing your data and location without you realizing, then a new report this week will make alarming reading.</p>

<p>“You can’t say no to Google’s surveillance,” the <a href="https://cybernews.com/security/google-pixel-9-phone-beams-data-and-awaits-commands/" rel="nofollow noopener noreferrer" target="_blank" title="https://cybernews.com/security/google-pixel-9-phone-beams-data-and-awaits-commands/" data-ga-track="ExternalLink:https://cybernews.com/security/google-pixel-9-phone-beams-data-and-awaits-commands/" aria-label="Cybernews"><em data-ga-track="ExternalLink:https://cybernews.com/security/google-pixel-9-phone-beams-data-and-awaits-commands/">Cybernews</em></a><em> </em>research team warns, describing a secretive stream of data they say continually transmits from a new phone to Google’s servers. Even more “concerning,” they say, “the phone periodically attempts to download and run new code, potentially opening up security risks.”</p>


<p>The <em>Cybernews</em> team took a “brand-new [Pixel 9 pro XL] with a new Google account and default settings” and rooted it to enable a man-in-the-middle data interception. The team “proxied the inbound and outbound traffic and used a custom security certificate to decrypt and examine the communications,” albeit rooting the phone disabled some features and so the intercepted data was not complete.</p>
<p><a href="https://www.forbes.com/sites/zakdoffman/2024/10/04/new-update-warning-for-all-samsung-s24-ultra-s23-ultra-z-fold-6-z-flip-6-users/" target="_blank" aria-label="Samsung’s Update Decision—Bad News Confirmed For All Galaxy Phone Owners" rel="noopener noreferrer" data-ga-track="forbesEmbedly:https://www.forbes.com/sites/zakdoffman/2024/10/04/new-update-warning-for-all-samsung-s24-ultra-s23-ultra-z-fold-6-z-flip-6-users/"><span><span>Forbes</span><span>Samsung’s Update Decision—Bad News Confirmed For All Galaxy Phone Owners</span><small>By <span>Zak Doffman</span></small></span><span><span></span></span></a></p>
<p>Because the testing took place with a new, default account, the team did not test to see the effect that user changes to privacy and security settings might have. But just as we’ve seen with browsers and apps—given most users maintain broadly default settings, it’s imperative those offer a good degree of out of the box protection.</p>

<p>“Every 15 minutes,” they say, the “Pixel 9 Pro XL sends a data packet to Google. The device shares location, email address, phone number, network status, and other telemetry.” This data, they found, is sent “to various Google endpoints, including Device Management, Policy Enforcement, and Face Grouping.”</p>

<p>There are clear sensitivities with contact details, device and network details, and other telemetry. But location data is especially sensitive, given the intrusive nature of such tracking data and the inferences this can provide about our lives.</p>
<figure role="presentation"><figcaption><fbs-accordion><p>Google’s data capture</p></fbs-accordion><small>Cybernews</small></figcaption></figure>


<p>We saw this sensitivity play out in <a href="https://www.forbes.com/sites/zakdoffman/2024/06/07/google-location-tracking-on-android-and-iphone-ios-stops-in-180-days/" target="_self" title="https://www.forbes.com/sites/zakdoffman/2024/06/07/google-location-tracking-on-android-and-iphone-ios-stops-in-180-days/" data-ga-track="InternalLink:https://www.forbes.com/sites/zakdoffman/2024/06/07/google-location-tracking-on-android-and-iphone-ios-stops-in-180-days/" aria-label="Google’s welcome move to stop collating user timelines from Google Maps">Google’s welcome move to stop collating user timelines from Google Maps</a> and instead maintain data on-device only. Worse, <em>Cybernews </em>says, “location data is included in the request even when GPS is disabled – the phone then relies on nearby Wi-Fi networks to estimate the location.”</p>
<p>There are multiple reasons why the collection of this data might be required to enable certain features, with <em>Cybernews</em> giving the example of the “newly introduced Car Crash Detection,” as one of these. There are also the diagnostic and services streams that flow from a device, and it’s unclear how this phone was setup. But the watchword is transparency and what users can reasonably be expected to know is taking place.</p>
<p><em>Cybernews</em> also raises the concern that communication takes place “with services the user didn’t explicitly consent to.” The example given is the Photos app, which they say they did not open nor take photos, but “the Pixel periodically contacted endpoints associated with Google Photos’ Face Grouping feature without asking for consent.”</p><p><a href="https://www.forbes.com/sites/zakdoffman/2024/10/04/microsoft-windows-10-windows-11-warning-3-days-to-update-or-stop-using-pc/" target="_blank" aria-label="Microsoft Windows ‘Critical Vulnerability’ Warning—You Have 72 Hours To Update Your PC" rel="noopener noreferrer" data-ga-track="forbesEmbedly:https://www.forbes.com/sites/zakdoffman/2024/10/04/microsoft-windows-10-windows-11-warning-3-days-to-update-or-stop-using-pc/"><span><span>Forbes</span><span>Microsoft Windows ‘Critical Vulnerability’ Warning—You Have 72 Hours To Update Your PC</span><small>By <span>Zak Doffman</span></small></span><span><span></span></span></a></p><p>Beyond the location and other data collection, <em>Cybernews </em>also claims the device reached out to Google for new code to execute, opening up security risks. This security risk is much more of a stretch than than the data capture, and there is no evidence of any vulnerability to third-party code, especially with Play Protect enabled on the device. That said, one can never rule out the more sophisticated adversaries hijacking such openings for their own purposes.</p>
<p>The data egress is more tangible. The data <em>Cybernews</em> says it captured off-device, and the frequency with which that was being sent, certainly warrants some transparency. That said, this is a Google device in the hands of a user with a Google account, and there’s no suggestion any of this data was transmitted to any third-party. But given Google’s mixed record on privacy and data harvesting, users will likely have concerns. I have asked Google for their comments on the new report and its findings.</p>
<p>Meanwhile, the researchers warn that “the deep integration of surveillance systems in [Google’s] ecosystem may leave users vulnerable to privacy violations.” And while this test was specifically for the new Pixel Pro devices, it’s clearly a wider issue.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Building a Single-Page App with Htmx (233 pts)]]></title>
            <link>https://jakelazaroff.com/words/building-a-single-page-app-with-htmx/</link>
            <guid>41766882</guid>
            <pubDate>Mon, 07 Oct 2024 15:19:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jakelazaroff.com/words/building-a-single-page-app-with-htmx/">https://jakelazaroff.com/words/building-a-single-page-app-with-htmx/</a>, See on <a href="https://news.ycombinator.com/item?id=41766882">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-content="" data-astro-cid-onuac4el=""> <p>People talk about htmx as though it’s saving the web from single-page apps.
React has mired developers in complexity (so the story goes) and htmx is offering a desperately-needed lifeline.</p>
<p>htmx creator Carson Gross wryly explains the dynamic <a href="https://twitter.com/htmx_org/status/1736849183112360293" data-astro-cid-bi7aps5f="">like this</a><a data-tooltip="" href="https://twitter.com/htmx_org/status/1736849183112360293" data-astro-cid-bi7aps5f=""> <img src="https://pbs.twimg.com/profile_images/1841320711912300544/g_9Zdyv2_200x200.jpg" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">htmx.org / CEO of Delete Your Account (same thing) (@htmx_org) on X</span> <span data-astro-cid-bi7aps5f="">@iamjohndorn @flaviocopes no, this is a Hegelian dialectic:

- thesis: traditional MPAs
- antithesis: SPAs
- synthesis (higher form): hypermedia-driven applications w/ islands of intereactivity</span> <span data-astro-cid-bi7aps5f=""> <img src="https://abs.twimg.com/favicons/twitter.3.ico" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">twitter.com/htmx_org/status/1736849183112360293</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a>:</p>
<blockquote>
<p>no, this is a Hegelian dialectic:</p>
<ul>
<li>thesis: traditional MPAs</li>
<li>antithesis: SPAs</li>
<li>synthesis (higher form): hypermedia-driven applications w/ islands of intereactivity</li>
</ul>
</blockquote>
<p>Well, I guess I missed the memo, because <a href="https://jakelazaroff.github.io/htmx-spa/" data-astro-cid-bi7aps5f="">I used htmx to build a single-page app</a><a data-tooltip="" href="https://jakelazaroff.github.io/htmx-spa/" data-astro-cid-bi7aps5f="">  <span data-astro-cid-bi7aps5f="">htmx spa</span>  <span data-astro-cid-bi7aps5f=""> <img src="https://jakelazaroff.github.io/favicon.ico" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">jakelazaroff.github.io/htmx-spa/</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a>.</p>
<p>It’s a simple proof of concept todo list.
Once the page is loaded, there is <em>no additional communication with a server</em>.
Everything happens locally on the client.</p>
<p>How does that work, given that htmx is focused on managing hypermedia exchanges over the network?</p>
<p>With one simple trick:<sup><a href="#user-content-fn-clickbait" id="user-content-fnref-clickbait" data-footnote-ref="" aria-describedby="footnote-label" data-astro-cid-bi7aps5f="">1</a></sup> the “server-side” code runs in a <a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API" data-astro-cid-bi7aps5f="">service worker</a><a data-tooltip="" href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API" data-astro-cid-bi7aps5f=""> <img src="https://developer.mozilla.org/mdn-social-share.d893525a4fb5fb1f67a2.png" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">Service Worker API - Web APIs | MDN</span> <span data-astro-cid-bi7aps5f="">Service workers essentially act as proxy servers that sit between web applications, the browser, and the network (when available). They are intended, among other things, to enable the creation of effective offline experiences, intercept network requests, and take appropriate action based on whether the network is available, and update assets residing on the server. They will also allow access to push notifications and background sync APIs.</span> <span data-astro-cid-bi7aps5f=""> <img src="https://developer.mozilla.org/favicon-48x48.bc390275e955dacb2e65.png" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a>.</p>
<p>Briefly, a service worker acts as a proxy between a webpage and the wider Internet.
It intercepts network requests and allows you to manipulate them.
You can alter requests, cache responses to be served offline or even create new responses out of whole cloth without ever sending the request beyond the browser.</p>
<p>That last capability is what powers this single-page app.
When htmx makes a network request, the service worker intercepts it.
The service worker then runs the business logic and generates new HTML, which htmx then swaps into the DOM.</p>
<p>There are a couple of advantages over a traditional single-page app built with something like React, too.
Service workers must use <a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API" data-astro-cid-bi7aps5f="">IndexedDB</a><a data-tooltip="" href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API" data-astro-cid-bi7aps5f=""> <img src="https://developer.mozilla.org/mdn-social-share.d893525a4fb5fb1f67a2.png" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">IndexedDB API - Web APIs | MDN</span> <span data-astro-cid-bi7aps5f="">IndexedDB is a low-level API for client-side storage of significant amounts of structured data, including files/blobs. This API uses indexes to enable high-performance searches of this data. While Web Storage is useful for storing smaller amounts of data, it is less useful for storing larger amounts of structured data. IndexedDB provides a solution. This is the main landing page for MDN's IndexedDB coverage — here we provide links to the full API reference and usage guides, browser support details, and some explanation of key concepts.</span> <span data-astro-cid-bi7aps5f=""> <img src="https://developer.mozilla.org/favicon-48x48.bc390275e955dacb2e65.png" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a> for storage, which is stateful between page loads.
If you close the page and then come back, the app retains your data — this happens “for free”, a <a href="https://blog.codinghorror.com/falling-into-the-pit-of-success/" data-astro-cid-bi7aps5f="">pit of success</a><a data-tooltip="" href="https://blog.codinghorror.com/falling-into-the-pit-of-success/" data-astro-cid-bi7aps5f=""> <img src="https://blog.codinghorror.com/assets/images/codinghorror-app-icon.png?v=f6a88d682f" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">Falling Into The Pit of Success</span> <span data-astro-cid-bi7aps5f="">Eric Lippert notes the perils of programming in C++:





I often think of C++ as my own personal Pit of Despair Programming Language. Unmanaged C++ makes it so easy to fall into traps. Think buffer overruns, memory leaks, double frees, mismatch between allocator and deallocator, using freed memory, umpteen dozen</span> <span data-astro-cid-bi7aps5f=""> <img src="https://blog.codinghorror.com/content/images/size/w256h256/2020/06/3cffc4b347c3587f19fe222caaac69f63b9a5e73.png" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">blog.codinghorror.com/falling-into-the-pit-of-success/</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a> consequence of choosing this architecture.
The app also works offline, which doesn’t come for free but is pretty easy to add once the service worker is set up already.</p>
<p>Of course, service workers have a bunch of pitfalls as well.
One is the absolutely abysmal support in developer tools, which seem to intermittently swallow <code>console.log</code> and unreliably report when a service worker is installed.
Another is the lack of support for ES modules in Firefox, which forced me to put all my code (including a vendored version of <a href="https://github.com/jakearchibald/idb-keyval" data-astro-cid-bi7aps5f="">IDB Keyval</a><a data-tooltip="" href="https://github.com/jakearchibald/idb-keyval" data-astro-cid-bi7aps5f=""> <img src="https://opengraph.githubassets.com/07f16bf35606046a6b0ae984536d6b4ffad2233d997114e353456a3b1973fe8b/jakearchibald/idb-keyval" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">GitHub - jakearchibald/idb-keyval: A super-simple-small promise-based keyval store implemented with IndexedDB</span> <span data-astro-cid-bi7aps5f="">A super-simple-small promise-based keyval store implemented with IndexedDB - jakearchibald/idb-keyval</span> <span data-astro-cid-bi7aps5f=""> <img src="https://github.githubassets.com/favicons/favicon.svg" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">github.com/jakearchibald/idb-keyval</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a>, which I included because IndexedDB is similarly annoying) in a single file.</p>
<p>This is not an exhaustive list!
I would describe the general experience of working with service workers as “not fun”.</p>
<p>But!
In spite of all that, the htmx single-page app works.
Let’s dive in!</p>
<h3 id="behind-the-scenes">Behind The Scenes</h3>
<p>Let’s start with the HTML:</p>
<pre><code is:raw=""><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>&gt;</span></span>
<span><span><span>&lt;</span>html</span><span>&gt;</span></span>
  <span><span><span>&lt;</span>head</span><span>&gt;</span></span>
    <span><span><span>&lt;</span>title</span><span>&gt;</span></span>htmx spa<span><span><span>&lt;/</span>title</span><span>&gt;</span></span>
    <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>utf-8<span>"</span></span> <span>/&gt;</span></span>
    <span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>./style.css<span>"</span></span> <span>/&gt;</span></span>
    <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>./htmx.js<span>"</span></span><span>&gt;</span></span><span></span><span><span><span>&lt;/</span>script</span><span>&gt;</span></span>
    <span><span><span>&lt;</span>script</span> <span>type</span><span><span>=</span><span>"</span>module<span>"</span></span><span>&gt;</span></span><span><span>
      <span>async</span> <span>function</span> <span>load</span><span>(</span><span>)</span> <span>{</span>
        <span>try</span> <span>{</span>
          <span>const</span> registration <span>=</span> <span>await</span> navigator<span>.</span>serviceWorker<span>.</span><span>register</span><span>(</span><span>"./sw.js"</span><span>)</span><span>;</span>
          <span>if</span> <span>(</span>registration<span>.</span>active<span>)</span> <span>return</span><span>;</span>

          <span>const</span> worker <span>=</span> registration<span>.</span>installing <span>||</span> registration<span>.</span>waiting<span>;</span>
          <span>if</span> <span>(</span><span>!</span>worker<span>)</span> <span>throw</span> <span>new</span> <span>Error</span><span>(</span><span>"No worker found"</span><span>)</span><span>;</span>

          worker<span>.</span><span>addEventListener</span><span>(</span><span>"statechange"</span><span>,</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
            <span>if</span> <span>(</span>registration<span>.</span>active<span>)</span> location<span>.</span><span>reload</span><span>(</span><span>)</span><span>;</span>
          <span>}</span><span>)</span><span>;</span>
        <span>}</span> <span>catch</span> <span>(</span>err<span>)</span> <span>{</span>
          console<span>.</span><span>error</span><span>(</span><span><span>`</span><span>Registration failed with </span><span><span>${</span>err<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
        <span>}</span>
      <span>}</span>

      <span>if</span> <span>(</span><span>"serviceWorker"</span> <span>in</span> navigator<span>)</span> <span>load</span><span>(</span><span>)</span><span>;</span>
    </span></span><span><span><span>&lt;/</span>script</span><span>&gt;</span></span>
    <span><span><span>&lt;</span>meta</span> <span>name</span><span><span>=</span><span>"</span>htmx-config<span>"</span></span> <span>content</span><span><span>=</span><span>'</span>{"scrollIntoViewOnBoost": false}<span>'</span></span> <span>/&gt;</span></span>
  <span><span><span>&lt;/</span>head</span><span>&gt;</span></span>
  <span><span><span>&lt;</span>body</span> <span>hx-boost</span><span><span>=</span><span>"</span>true<span>"</span></span> <span>hx-push-url</span><span><span>=</span><span>"</span>false<span>"</span></span> <span>hx-get</span><span><span>=</span><span>"</span>./ui<span>"</span></span> <span>hx-target</span><span><span>=</span><span>"</span>body<span>"</span></span> <span>hx-trigger</span><span><span>=</span><span>"</span>load<span>"</span></span><span>&gt;</span></span><span><span><span>&lt;/</span>body</span><span>&gt;</span></span>
<span><span><span>&lt;/</span>html</span><span>&gt;</span></span></code></pre>
<p>This should look familiar if you’ve ever built a single-page app: the empty husk of an HTML document, waiting to be filled in by JavaScript.
That long inline <code>&lt;script&gt;</code> tag just sets up the service worker and is <a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers" data-astro-cid-bi7aps5f="">mostly stolen from MDN</a><a data-tooltip="" href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers" data-astro-cid-bi7aps5f=""> <img src="https://developer.mozilla.org/mdn-social-share.d893525a4fb5fb1f67a2.png" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">Using Service Workers - Web APIs | MDN</span> <span data-astro-cid-bi7aps5f="">This article provides information on getting started with service workers, including basic architecture, registering a service worker, the installation and activation process for a new service worker, updating your service worker, cache control and custom responses, all in the context of a simple app with offline functionality.</span> <span data-astro-cid-bi7aps5f=""> <img src="https://developer.mozilla.org/favicon-48x48.bc390275e955dacb2e65.png" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a>.</p>
<p>The interesting bit here is the <code>&lt;body&gt;</code> tag, which uses htmx to set up the meat of the app:</p>
<ul>
<li><code>hx-boost="true"</code> tells htmx to use Ajax to swap in the responses of link clicks and form submissions without a full page navigation</li>
<li><code>hx-push-url="false"</code> prevents htmx from updating the URL in response to said link clicks and form submissions</li>
<li><code>hx-get="./ui"</code> tells htmx to load the page at <code>/ui</code> and swap it in</li>
<li><code>hx-target="body"</code> tells htmx to swap the results into the <code>&lt;body&gt;</code> element</li>
<li><code>hx-trigger="load"</code> tells htmx that it should do all this when the page loads</li>
</ul>
<p>So basically: <code>/ui</code> returns the actual markup for the app, at which point htmx takes over any links and forms to make it interactive.</p>
<p>What’s at <code>/ui</code>?
Enter the service worker!
It uses a small home-brewed Express-like “library” to handle boilerplate around routing requests and returning responses.
How that library actually works is beyond the scope of this post, but it’s used like this:</p>
<pre><code is:raw="">spa<span>.</span><span>get</span><span>(</span><span>"/ui"</span><span>,</span> <span>async</span> <span>(</span><span>_request<span>,</span> <span>{</span> query <span>}</span></span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> <span>{</span> filter <span>=</span> <span>"all"</span> <span>}</span> <span>=</span> query<span>;</span>
  <span>await</span> <span>setFilter</span><span>(</span>filter<span>)</span><span>;</span>

  <span>const</span> headers <span>=</span> <span>{</span><span>}</span><span>;</span>
  <span>if</span> <span>(</span>filter <span>===</span> <span>"all"</span><span>)</span> headers<span>[</span><span>"hx-replace-url"</span><span>]</span> <span>=</span> <span>"./"</span><span>;</span>
  <span>else</span> headers<span>[</span><span>"hx-replace-url"</span><span>]</span> <span>=</span> <span>"./?filter="</span> <span>+</span> filter<span>;</span>

  <span>const</span> html <span>=</span> <span>App</span><span>(</span><span>{</span> filter<span>,</span> <span>todos</span><span>:</span> <span>await</span> <span>listTodos</span><span>(</span><span>)</span> <span>}</span><span>)</span><span>;</span>
  <span>return</span> <span>new</span> <span>Response</span><span>(</span>html<span>,</span> <span>{</span> headers <span>}</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre>
<p>When a <code>GET</code> request is made to <code>/ui</code>, this code…</p>
<ol>
<li>grabs the query string for the filter</li>
<li>saves the filter in IndexedDB</li>
<li>tells htmx to update the URL accordingly</li>
<li>renders the <code>App</code> “component” to HTML with the active filter and list of todos</li>
<li>returns the rendered HTML to the browser</li>
</ol>
<p><code>setFilter</code> and <code>listTodos</code> are pretty simple functions that wrap IDB Keyval:</p>
<pre><code is:raw=""><span>async</span> <span>function</span> <span>setFilter</span><span>(</span><span>filter</span><span>)</span> <span>{</span>
  <span>await</span> <span>set</span><span>(</span><span>"filter"</span><span>,</span> filter<span>)</span><span>;</span>
<span>}</span>

<span>async</span> <span>function</span> <span>getFilter</span><span>(</span><span>)</span> <span>{</span>
  <span>return</span> <span>get</span><span>(</span><span>"filter"</span><span>)</span><span>;</span>
<span>}</span>

<span>async</span> <span>function</span> <span>listTodos</span><span>(</span><span>)</span> <span>{</span>
  <span>const</span> todos <span>=</span> <span>(</span><span>await</span> <span>get</span><span>(</span><span>"todos"</span><span>)</span><span>)</span> <span>||</span> <span>[</span><span>]</span><span>;</span>
  <span>const</span> filter <span>=</span> <span>await</span> <span>getFilter</span><span>(</span><span>)</span><span>;</span>

  <span>switch</span> <span>(</span>filter<span>)</span> <span>{</span>
    <span>case</span> <span>"done"</span><span>:</span>
      <span>return</span> todos<span>.</span><span>filter</span><span>(</span><span>todo</span> <span>=&gt;</span> todo<span>.</span>done<span>)</span><span>;</span>
    <span>case</span> <span>"left"</span><span>:</span>
      <span>return</span> todos<span>.</span><span>filter</span><span>(</span><span>todo</span> <span>=&gt;</span> <span>!</span>todo<span>.</span>done<span>)</span><span>;</span>
    <span>default</span><span>:</span>
      <span>return</span> todos<span>;</span>
  <span>}</span>
<span>}</span></code></pre>
<p>The <code>App</code> component looks like this:</p>
<pre><code is:raw=""><span>function</span> <span>App</span><span>(</span><span>{</span> filter <span>=</span> <span>"all"</span><span>,</span> todos <span>=</span> <span>[</span><span>]</span> <span>}</span> <span>=</span> <span>{</span><span>}</span><span>)</span> <span>{</span>
  <span>return</span> html<span><span>`</span><span>
    &lt;div class="app"&gt;
      &lt;header class="header"&gt;
        &lt;h1&gt;Todos&lt;/h1&gt;
        &lt;form class="filters" action="./ui"&gt;
          &lt;label class="filter"&gt;
            All
            &lt;input
              type="radio"
              name="filter"
              value="all"
              oninput="this.form.requestSubmit()"
              </span><span><span>${</span>filter <span>===</span> <span>"all"</span> <span>&amp;&amp;</span> <span>"checked"</span><span>}</span></span><span>
            /&gt;
          &lt;/label&gt;
          &lt;label class="filter"&gt;
            Active
            &lt;input
              type="radio"
              name="filter"
              value="left"
              oninput="this.form.requestSubmit()"
              </span><span><span>${</span>filter <span>===</span> <span>"left"</span> <span>&amp;&amp;</span> <span>"checked"</span><span>}</span></span><span>
            /&gt;
          &lt;/label&gt;
          &lt;label class="filter"&gt;
            Completed
            &lt;input
              type="radio"
              name="filter"
              value="done"
              oninput="this.form.requestSubmit()"
              </span><span><span>${</span>filter <span>===</span> <span>"done"</span> <span>&amp;&amp;</span> <span>"checked"</span><span>}</span></span><span>
            /&gt;
          &lt;/label&gt;
        &lt;/form&gt;
      &lt;/header&gt;
      &lt;ul class="todos"&gt;
        </span><span><span>${</span>todos<span>.</span><span>map</span><span>(</span><span>todo</span> <span>=&gt;</span> <span>Todo</span><span>(</span>todo<span>)</span><span>)</span><span>}</span></span><span>
      &lt;/ul&gt;
      &lt;form
        class="submit"
        action="./todos/add"
        method="get"
        hx-select=".todos"
        hx-target=".todos"
        hx-swap="outerHTML"
        hx-on::before-request="this.reset()"
      &gt;
        &lt;input
          type="text"
          name="text"
          placeholder="What needs to be done?"
          hx-on::after-request="this.focus()"
        /&gt;
      &lt;/form&gt;
    &lt;/div&gt;
  </span><span>`</span></span><span>.</span><span>trim</span><span>(</span><span>)</span><span>;</span>
<span>}</span></code></pre>
<p>(As before, we’ll skip some of the utility functions like <code>html</code>, which just provides some small conveniences when interpolating values.)</p>
<p><code>App</code> can be broken down into roughly three sections:</p>
<ul>
<li>The filters form.
This renders a radio button for each filter.
When a radio button changes, it submits the form to <code>/ui</code>, which re-renders the app using the steps described above.
The<code>hx-boost</code> attribute from before intercepts the form submission and swaps the response back into the <code>&lt;body&gt;</code> without refreshing the page.</li>
<li>The todos list.
This loops over all the todos matching the current filter, rendering each using the <code>Todo</code> component.</li>
<li>The add todo form.
This is a form with an input that submits the value to <code>/todos/add</code>.<sup><a href="#user-content-fn-get" id="user-content-fnref-get" data-footnote-ref="" aria-describedby="footnote-label" data-astro-cid-bi7aps5f="">2</a></sup>
<code>hx-target=".todos"</code> tells htmx to replace an element on the page with class <code>todos</code>; <code>hx-select=".todos"</code> tells htmx that rather than using the <em>entire</em> response, it should just use an element with class <code>todos</code>.</li>
</ul>
<p>Let’s take a look at that <code>/todos/add</code> route:</p>
<pre><code is:raw=""><span>async</span> <span>function</span> <span>addTodo</span><span>(</span><span>text</span><span>)</span> <span>{</span>
  <span>const</span> id <span>=</span> crypto<span>.</span><span>randomUUID</span><span>(</span><span>)</span><span>;</span>
  <span>await</span> <span>update</span><span>(</span><span>"todos"</span><span>,</span> <span>(</span><span>todos <span>=</span> <span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span> <span>[</span><span>...</span>todos<span>,</span> <span>{</span> id<span>,</span> text<span>,</span> <span>done</span><span>:</span> <span>false</span> <span>}</span><span>]</span><span>)</span><span>;</span>
<span>}</span>

spa<span>.</span><span>get</span><span>(</span><span>"/todos/add"</span><span>,</span> <span>async</span> <span>(</span><span>_request<span>,</span> <span>{</span> query <span>}</span></span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>if</span> <span>(</span>query<span>.</span>text<span>)</span> <span>await</span> <span>addTodo</span><span>(</span>query<span>.</span>text<span>)</span><span>;</span>

  <span>const</span> html <span>=</span> <span>App</span><span>(</span><span>{</span> <span>filter</span><span>:</span> <span>await</span> <span>getFilter</span><span>(</span><span>)</span><span>,</span> <span>todos</span><span>:</span> <span>await</span> <span>listTodos</span><span>(</span><span>)</span> <span>}</span><span>)</span><span>;</span>
  <span>return</span> <span>new</span> <span>Response</span><span>(</span>html<span>,</span> <span>{</span><span>}</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre>
<p>Pretty simple!
It just saves the todo and returns a response with the re-rendered UI, which htmx thens swap into the DOM.</p>
<p>Now, let’s look at that <code>Todo</code> component from before:</p>
<pre><code is:raw=""><span>function</span> <span>Icon</span><span>(</span><span><span>{</span> name <span>}</span></span><span>)</span> <span>{</span>
  <span>return</span> html<span><span>`</span><span>
    &lt;svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12"&gt;
      &lt;use href="./icons.svg#</span><span><span>${</span>name<span>}</span></span><span>" /&gt;
    &lt;/svg&gt;
  </span><span>`</span></span><span>;</span>
<span>}</span>

<span>function</span> <span>Todo</span><span>(</span><span><span>{</span> id<span>,</span> text<span>,</span> done<span>,</span> editable <span>}</span></span><span>)</span> <span>{</span>
  <span>return</span> html<span><span>`</span><span>
    &lt;li class="todo"&gt;
      &lt;input
        type="checkbox"
        name="done"
        value="true"
        hx-get="./todos/</span><span><span>${</span>id<span>}</span></span><span>/update"
        hx-vals="js:{done: event.target.checked}"
        </span><span><span>${</span>done <span>&amp;&amp;</span> <span>"checked"</span><span>}</span></span><span>
      /&gt;
      </span><span><span>${</span>editable
        <span>?</span> html<span><span>`</span><span>&lt;input
            type="text"
            name="text"
            value="</span><span><span>${</span>text<span>}</span></span><span>"
            hx-get="./todos/</span><span><span>${</span>id<span>}</span></span><span>/update"
            hx-trigger="change,blur"
            autofocus
          /&gt;</span><span>`</span></span>
        <span>:</span> html<span><span>`</span><span>&lt;span
            class="preview"
            hx-get="./ui/todos/</span><span><span>${</span>id<span>}</span></span><span>?editable=true"
            hx-trigger="dblclick"
            hx-target="closest .todo"
            hx-swap="outerHTML"
          &gt;
            </span><span><span>${</span>text<span>}</span></span><span>
          &lt;/span&gt;</span><span>`</span></span><span>}</span></span><span>
      &lt;button class="delete" hx-delete="./todos/</span><span><span>${</span>id<span>}</span></span><span>"&gt;</span><span><span>${</span><span>Icon</span><span>(</span><span>{</span> <span>name</span><span>:</span> <span>"ex"</span> <span>}</span><span>)</span><span>}</span></span><span>&lt;/button&gt;
    &lt;/li&gt;
  </span><span>`</span></span><span>;</span>
<span>}</span></code></pre>
<p>There are three main parts here: the checkbox, the delete button and the todo text.</p>
<p>First, the checkbox.
It triggers a <code>GET</code> request to <code>/todos/${id}/update</code> every time it’s checked or unchecked, with a query string <code>done</code> matching its current state; htmx swaps the full response into the <code>&lt;body&gt;</code>.</p>
<p>Here’s the code for that route:</p>
<pre><code is:raw=""><span>async</span> <span>function</span> <span>updateTodo</span><span>(</span><span>id<span>,</span> <span>{</span> text<span>,</span> done <span>}</span></span><span>)</span> <span>{</span>
  <span>await</span> <span>update</span><span>(</span><span>"todos"</span><span>,</span> <span>(</span><span>todos <span>=</span> <span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span>
    todos<span>.</span><span>map</span><span>(</span><span>todo</span> <span>=&gt;</span> <span>{</span>
      <span>if</span> <span>(</span>todo<span>.</span>id <span>!==</span> id<span>)</span> <span>return</span> todo<span>;</span>
      <span>return</span> <span>{</span> <span>...</span>todo<span>,</span> <span>text</span><span>:</span> text <span>||</span> todo<span>.</span>text<span>,</span> <span>done</span><span>:</span> done <span>??</span> todo<span>.</span>done <span>}</span><span>;</span>
    <span>}</span><span>)</span>
  <span>)</span><span>;</span>
<span>}</span>

spa<span>.</span><span>get</span><span>(</span><span>"/todos/:id/update"</span><span>,</span> <span>async</span> <span>(</span><span>_request<span>,</span> <span>{</span> params<span>,</span> query <span>}</span></span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> updates <span>=</span> <span>{</span><span>}</span><span>;</span>
  <span>if</span> <span>(</span>query<span>.</span>text<span>)</span> updates<span>.</span>text <span>=</span> query<span>.</span>text<span>;</span>
  <span>if</span> <span>(</span>query<span>.</span>done<span>)</span> updates<span>.</span>done <span>=</span> query<span>.</span>done <span>===</span> <span>"true"</span><span>;</span>

  <span>await</span> <span>updateTodo</span><span>(</span>params<span>.</span>id<span>,</span> updates<span>)</span><span>;</span>

  <span>const</span> html <span>=</span> <span>App</span><span>(</span><span>{</span> <span>filter</span><span>:</span> <span>await</span> <span>getFilter</span><span>(</span><span>)</span><span>,</span> <span>todos</span><span>:</span> <span>await</span> <span>listTodos</span><span>(</span><span>)</span> <span>}</span><span>)</span><span>;</span>
  <span>return</span> <span>new</span> <span>Response</span><span>(</span>html<span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre>
<p>(Notice that the route also supports changing the todo text. We’ll get to that in a minute.)</p>
<p>The delete button is even simpler: it makes a <code>DELETE</code> request to <code>/todos/${id}</code>.
As with the checkbox, htmx swaps the full response into the <code>&lt;body&gt;</code>.</p>
<p>Here’s that route:</p>
<pre><code is:raw=""><span>async</span> <span>function</span> <span>deleteTodo</span><span>(</span><span>id</span><span>)</span> <span>{</span>
  <span>await</span> <span>update</span><span>(</span><span>"todos"</span><span>,</span> <span>(</span><span>todos <span>=</span> <span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span> todos<span>.</span><span>filter</span><span>(</span><span>todo</span> <span>=&gt;</span> todo<span>.</span>id <span>!==</span> id<span>)</span><span>)</span><span>;</span>
<span>}</span>

spa<span>.</span><span>delete</span><span>(</span><span>"/todos/:id"</span><span>,</span> <span>async</span> <span>(</span><span>_request<span>,</span> <span>{</span> params <span>}</span></span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>await</span> <span>deleteTodo</span><span>(</span>params<span>.</span>id<span>)</span><span>;</span>

  <span>const</span> html <span>=</span> <span>App</span><span>(</span><span>{</span> <span>filter</span><span>:</span> <span>await</span> <span>getFilter</span><span>(</span><span>)</span><span>,</span> <span>todos</span><span>:</span> <span>await</span> <span>listTodos</span><span>(</span><span>)</span> <span>}</span><span>)</span><span>;</span>
  <span>return</span> <span>new</span> <span>Response</span><span>(</span>html<span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre>
<p>The final part is the todo text, which is made more complicated by the support for editing the text.
There are two possible states: “normal”, which just displays a simple <code>&lt;span&gt;</code> with the todo text (I’m sorry that this isn’t accessible!) and “editing”, which displays an <code>&lt;input&gt;</code> that allows the user to edit it.
The <code>Todo</code> component uses the <code>editing</code> “prop” to determine which state to render.</p>
<p>Unlike in a client-side framework like React, though, we can’t just toggle state somewhere and have it make the necessary DOM changes.
htmx makes a network request for the new UI, and we need to return a hypermedia response that it can then swap into the DOM.</p>
<p>Here’s the route:</p>
<pre><code is:raw=""><span>async</span> <span>function</span> <span>getTodo</span><span>(</span><span>id</span><span>)</span> <span>{</span>
  <span>const</span> todos <span>=</span> <span>await</span> <span>listTodos</span><span>(</span><span>)</span><span>;</span>
  <span>return</span> todos<span>.</span><span>find</span><span>(</span><span>todo</span> <span>=&gt;</span> todo<span>.</span>id <span>===</span> id<span>)</span><span>;</span>
<span>}</span>

spa<span>.</span><span>get</span><span>(</span><span>"/ui/todos/:id"</span><span>,</span> <span>async</span> <span>(</span><span>_request<span>,</span> <span>{</span> params<span>,</span> query <span>}</span></span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> todo <span>=</span> <span>await</span> <span>getTodo</span><span>(</span>params<span>.</span>id<span>)</span><span>;</span>
  <span>if</span> <span>(</span><span>!</span>todo<span>)</span> <span>return</span> <span>new</span> <span>Response</span><span>(</span><span>""</span><span>,</span> <span>{</span> <span>status</span><span>:</span> <span>404</span> <span>}</span><span>)</span><span>;</span>

  <span>const</span> editable <span>=</span> query<span>.</span>editable <span>===</span> <span>"true"</span><span>;</span>

  <span>const</span> html <span>=</span> <span>Todo</span><span>(</span><span>{</span> <span>...</span>todo<span>,</span> editable <span>}</span><span>)</span><span>;</span>
  <span>return</span> <span>new</span> <span>Response</span><span>(</span>html<span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre>
<p>At a high level, the coordination between webpage and service worker looks something like this:</p>
<ol>
<li>htmx listens for double-click events on todo text <code>&lt;span&gt;</code>s</li>
<li>htmx makes a request to <code>/ui/todos/${id}?editable=true</code></li>
<li>The service worker returns the HTML for the <code>Todo</code> component that includes the <code>&lt;input&gt;</code> rather than the <code>&lt;span&gt;</code></li>
<li>htmx swaps the current todo list item with the HTML from the response</li>
</ol>
<p>When the user changes the input, a similar process happens, calling the <code>/todos/${id}/update</code> endpoint instead and swapping the whole <code>&lt;body&gt;</code>.
If you’ve used htmx, this should be a pretty familiar pattern.</p>
<p>That’s it!
We now have a single-page app built with htmx (and service workers) that doesn’t rely on a remote web server.
The code I omitted for brevity is available <a href="https://github.com/jakelazaroff/htmx-spa" data-astro-cid-bi7aps5f="">on GitHub</a><a data-tooltip="" href="https://github.com/jakelazaroff/htmx-spa" data-astro-cid-bi7aps5f=""> <img src="https://opengraph.githubassets.com/94ef73a40c4bb7e207bf004946c9b849faf5e9d6512853537e0506f0735e42d9/jakelazaroff/htmx-spa" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">GitHub - jakelazaroff/htmx-spa: A proof of concept fully client-side single-page app using htmx and service workers.</span> <span data-astro-cid-bi7aps5f="">A proof of concept fully client-side single-page app using htmx and service workers. - jakelazaroff/htmx-spa</span> <span data-astro-cid-bi7aps5f=""> <img src="https://github.githubassets.com/favicons/favicon.svg" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">github.com/jakelazaroff/htmx-spa</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a>.</p>
<h3 id="takeaways">Takeaways</h3>
<p>So, this technically works.
Is it a good idea?
Is it the <em>apotheosis</em> of hypermedia-based applications?
Should we abandon React and build apps like this?</p>
<p>htmx works by adding indirection to the UI, loading new HTML from across a network boundary.
That can make sense in a client-server app, because it reduces indirection with regard to the <em>database</em> by colocating it with rendering.
On the other hand, the client-server story in a framework like React can be painful, requiring careful coordination between clients and servers via an awkward data exchange channel.</p>
<p>When all interactions are local, though, the rendering and data are <em>already</em> colocated (in memory) and updating them in tandem with a framework like React is easy and synchronous.
In this case, the indirection that htmx requires starts to feel more burdensome than liberatory.<sup><a href="#user-content-fn-nojs" id="user-content-fnref-nojs" data-footnote-ref="" aria-describedby="footnote-label" data-astro-cid-bi7aps5f="">3</a></sup>
For fully local apps, I don’t think juice is worth the squeeze.</p>
<p>Of course, most apps aren’t <em>fully</em> local — usually, there’s a mix of local interactions and network requests.
My sense is that even in that case, <a href="https://www.patterns.dev/vanilla/islands-architecture/" data-astro-cid-bi7aps5f="">islands of interactivity</a><a data-tooltip="" href="https://www.patterns.dev/vanilla/islands-architecture/" data-astro-cid-bi7aps5f=""> <img src="https://res.cloudinary.com/ddxwdqwkr/image/upload/f_auto/v1633286240/patterns.dev/islandsarchitecture.jpg" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">Islands Architecture</span> <span data-astro-cid-bi7aps5f="">The islands architecture encourages small, focused chunks of interactivity within server-rendered web pages</span> <span data-astro-cid-bi7aps5f=""> <img src="https://www.patterns.dev/img/favicon/favicon.ico" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">www.patterns.dev/vanilla/islands-architecture/</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a> is a better pattern than splitting your “server-side” code between the service worker and the actual server.</p>
<p>In any event, this was mostly an exercise to see what it might look like to build a fully local single-page app using hypermedia, rather than imperative or functional programming.</p>
<p>Note that hypermedia is a technique rather than a specific tool.
I chose htmx because it’s the hypermedia <del>library</del> <a href="https://htmx.org/essays/is-htmx-another-javascript-framework/" data-astro-cid-bi7aps5f="">framework</a><a data-tooltip="" href="https://htmx.org/essays/is-htmx-another-javascript-framework/" data-astro-cid-bi7aps5f="">  <span data-astro-cid-bi7aps5f="">&lt;/&gt; htmx ~ Is htmx Just Another JavaScript Framework?</span> <span data-astro-cid-bi7aps5f="">htmx gives you access to AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext

    htmx is small (~14k min.gz’d), dependency-free, extendable, IE11 compatible &amp; has reduced code base sizes by 67% when compared with react</span> <span data-astro-cid-bi7aps5f=""> <img src="https://htmx.org/favicon.ico" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">htmx.org/essays/is-htmx-another-javascript-framework/</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a> <em>du jour</em>, and I wanted to stretch it as far as I could.
There are other tools like <a href="https://mavo.io/" data-astro-cid-bi7aps5f="">Mavo</a><a data-tooltip="" href="https://mavo.io/" data-astro-cid-bi7aps5f=""> <img src="https://mavo.io/logo.svg" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">Mavo: A new, approachable way to create Web applications</span>  <span data-astro-cid-bi7aps5f=""> <img src="https://mavo.io/favicon.ico" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">mavo.io</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a> that explicitly focus on this use case, and indeed you can see that the <a href="https://mavo.io/demos/todo/" data-astro-cid-bi7aps5f="">Mavo implementation of TodoMVC</a><a data-tooltip="" href="https://mavo.io/demos/todo/" data-astro-cid-bi7aps5f="">  <span data-astro-cid-bi7aps5f="">To-Do List</span>  <span data-astro-cid-bi7aps5f=""> <img src="https://mavo.io/favicon.ico" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">mavo.io/demos/todo/</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a> is far simpler than what I’ve built here.
Better still would be some sort of HyperCard-esque app in which you could build the whole thing visually.</p>
<p>All in all, my little single-page htmx todo app was fun to build.
If nothing else, take this as a reminder that you can and should occasionally try using your tools in weird and unexpected ways!</p>

<section data-footnotes="">
<ol>
<li id="user-content-fn-clickbait">
<p>React developers hate him! <a href="#user-content-fnref-clickbait" data-footnote-backref="" aria-label="Back to reference 1" data-astro-cid-bi7aps5f="">↩</a></p>
</li>
<li id="user-content-fn-get">
<p>You might notice that the form method is <code>GET</code> rather than <code>POST</code>. That’s because service workers in Firefox don’t seem to support request bodies, which means we need to include any relevant data in the URL. <a href="#user-content-fnref-get" data-footnote-backref="" aria-label="Back to reference 2" data-astro-cid-bi7aps5f="">↩</a></p>
</li>
<li id="user-content-fn-nojs">
<p>htmx isn’t actually a required component of this architecture.
You could, in theory, build a fully client-side single-page app with no JavaScript at all (outside of the service worker) by simply wrapping every button in a <code>&lt;form&gt;</code> tag and replacing the full page on every action.
Since the responses all come from the service worker, it would still be lightning fast; you could probably even add in some slick animations using <a href="https://developer.chrome.com/docs/web-platform/view-transitions#cross-document_view_transitions" data-astro-cid-bi7aps5f="">cross-document view transitions</a><a data-tooltip="" href="https://developer.chrome.com/docs/web-platform/view-transitions#cross-document_view_transitions" data-astro-cid-bi7aps5f=""> <img src="https://www.gstatic.com/devrel-devsite/prod/vfebef541c9fc0d1ace8dfdb0f441925a06e1d514c8d869e9f136cb4460077d33/chrome/images/lockup.svg" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">Smooth transitions with the View Transition API &nbsp;|&nbsp; View Transitions &nbsp;|&nbsp; Chrome for Developers</span> <span data-astro-cid-bi7aps5f="">The View Transition API lets you add transitions between views of a website.</span> <span data-astro-cid-bi7aps5f=""> <img src="https://www.gstatic.com/devrel-devsite/prod/vfebef541c9fc0d1ace8dfdb0f441925a06e1d514c8d869e9f136cb4460077d33/chrome/images/favicon.png" alt="" onerror="this.remove()" data-astro-cid-bi7aps5f=""> <span data-astro-cid-bi7aps5f="">developer.chrome.com/docs/web-platform/view-transitions#cross-document_view_transitions</span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"> <use href="/icons.svg#share"></use> </svg> </span> </a>. <a href="#user-content-fnref-nojs" data-footnote-backref="" aria-label="Back to reference 3" data-astro-cid-bi7aps5f="">↩</a></p>
</li>
</ol>
</section> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AT&T, Verizon reportedly hacked to target US govt wiretapping platform (217 pts)]]></title>
            <link>https://www.bleepingcomputer.com/news/security/atandt-verizon-reportedly-hacked-to-target-us-govt-wiretapping-platform/</link>
            <guid>41766610</guid>
            <pubDate>Mon, 07 Oct 2024 14:53:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bleepingcomputer.com/news/security/atandt-verizon-reportedly-hacked-to-target-us-govt-wiretapping-platform/">https://www.bleepingcomputer.com/news/security/atandt-verizon-reportedly-hacked-to-target-us-govt-wiretapping-platform/</a>, See on <a href="https://news.ycombinator.com/item?id=41766610">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img alt="" height="1400" src="https://www.bleepstatic.com/content/hl-images/2024/05/22/Chinese_hackers.png" width="2504"></p>
<p>Multiple U.S. broadband providers, including Verizon, AT&amp;T, and Lumen Technologies, have been breached by a Chinese hacking group tracked as Salt Typhoon, the Wall Street Journal reports.</p>
<p>The purpose of the attack appears to be for intelligence collection as the hackers might have had access to systems used by the U.S. federal government for court-authorized network wiretapping requests.</p>
<p>It is unclear when the intrusion occurred, but WSJ cites people familiar with the matter, saying that "for months or longer, the hackers might have held access to network infrastructure used to cooperate with lawful U.S. requests for communications data."</p>
<p>Salt Typhoon is the name that Microsoft gave to this particular China-based threat actor. Other cybersecurity companies are tracking the adversary as Earth Estries (Trend Micro), FamousSparrow (ESET), Ghost Emperor (Kaspersky), and UNC2286 (Mandiant, now part of Google Cloud).</p>
<h3>Capturing sensitive traffic</h3>
<p>According to the WSJ, the attack was discovered in recent weeks and is being investigated by the U.S. government and security experts in the private sector.</p>
<p>The impact of the attack&nbsp;- amount and type of observed and exfiltrated data - is still being assessed, people with information about the intrusion told WSJ.</p>
<p>“The hackers appear to have engaged in a vast collection of internet traffic from internet service providers that count businesses large and small, and millions of Americans, as their customers” - <a href="http://www.wsj.com/politics/national-security/china-cyberattack-internet-providers-260bd835" target="_blank" rel="nofollow noopener">Wall Street Journal</a></p>
<p>Apart from breaching service providers in the U.S. Salt Typhoon may have hacked similar entities in other countries, too.</p>
<p>Salt Typhoon has been active since at least 2019 and is considered a sophisticated hacking group focusing on government entities and telecommunications companies typically in the Southeast Asia region.</p>
<p>Security researchers also found that the threat actor attacked hotels, engineering companies, and law firms in Brazil, Burkina Faso, South Africa, Canada, Israel, France, Guatemala, Lithuania, Saudi Arabia, Taiwan, Thailand, and the United Kingdom.</p>
<p>The hackers usually obtain initial access to the target network by exploiting vulnerabilities, such as the <a href="https://www.bleepingcomputer.com/news/security/more-hacking-groups-join-microsoft-exchange-attack-frenzy/" target="_blank">ProxyLogon vulnerabilities</a> in Microsoft Exchange Server (CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065).</p>
<p>In previous attacks attributed to Salt Typhoon/Ghost Emperor, the threat actor used a custom backdoor called <a href="https://www.welivesecurity.com/2021/09/23/famoussparrow-suspicious-hotel-guest/" target="_blank" rel="nofollow noopener">SparrowDoor</a>, customized versions of the Mimikatz tool for extracting authentication data, and a Windows kernel-mode rootkit <a href="https://securelist.com/ghostemperor-from-proxylogon-to-kernel-mode/104407/" target="_blank" rel="nofollow noopener">Demodex</a>.</p>
<p>Investigators are still looking for the initial access method for the recent attack. The WSJ says that one avenue being explored is gaining access to Cisco routers responsible for routing internet traffic.</p>
<p>However, a Cisco spokesperson told WSJ that the company was looking into the matter but had received no indication that Cisco networking equipment was involved in the breach.</p>
<p>BleepingComputer contacted AT&amp;T about the alleged breach and was told&nbsp;they "are not commenting on the WSJ report." Lumen also declined to comment.</p>
<p>Verizon has not responded to our emails, and we will&nbsp;update the story if we receive a reply.</p>
<p>Chinese APT hacking groups have been increasingly targeting U.S. and European networking devices and ISPs in cyberespionage attacks.</p>
<p>In August,&nbsp;cybersecurity researchers at Lumen's Black Lotus Labs disclosed that the Chinese threat actors known as "Volt Typhoon" exploited a zero-day flaw in Versa Director to steal credentials and breach corporate networks. During these attacks, the <a href="https://www.bleepingcomputer.com/news/security/chinese-volt-typhoon-hackers-exploited-versa-zero-day-to-breach-isps-msps/" target="_blank">threat actors breached multiple ISPs and MSPs</a> in the U.S. and India, which is not believed to be related to the recent breaches.</p>
<p>In September, Black Lotus Labs and law enforcement <a href="https://www.bleepingcomputer.com/news/security/flax-typhoon-hackers-infect-260-000-routers-ip-cameras-with-botnet-malware/" target="_blank">disrupted a massive Chinese botnet named "Raptor Train"</a> that compromised over&nbsp;260,000 SOHO routers, IP cameras with malware. This botnet was used by the "Flax Typhoon" threat actors for DDoS attacks and as a proxy to launch stealthy&nbsp;attacks on other organizations.</p>
<p>While these attacks have been attributed to different Chinese hacking groups, they are believed to operate under the same umbrella, commonly sharing infrastructure and tools.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What's New in Ruby on Rails 8 (485 pts)]]></title>
            <link>https://blog.appsignal.com/2024/10/07/whats-new-in-ruby-on-rails-8.html</link>
            <guid>41766515</guid>
            <pubDate>Mon, 07 Oct 2024 14:45:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.appsignal.com/2024/10/07/whats-new-in-ruby-on-rails-8.html">https://blog.appsignal.com/2024/10/07/whats-new-in-ruby-on-rails-8.html</a>, See on <a href="https://news.ycombinator.com/item?id=41766515">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>The first <a href="https://rubyonrails.org/2024/9/27/rails-8-beta1-no-paas-required">Rails 8 beta</a> has officially been released, bringing an exciting set
of features, bug fixes, and improvements. This version builds on the foundation
of
Rails 7.2,
while introducing new features and optimizations to make Rails development even
more productive and enjoyable.</p>
<p>Key highlights include an integration with Kamal 2 for hassle-free deployments, the
introduction of Propshaft as the new default asset pipeline, and extensive
ActiveRecord enhancements. Rails 8 also brings several SQLite integration upgrades
that make it a viable option for production use.</p>
<p>Let's dive in and explore everything that Rails 8 has to offer!</p>
<h2 id="effortless-deployments-with-kamal-2-and-thruster">Effortless Deployments with Kamal 2 and Thruster</h2>
<p>Rails 8 makes deploying your applications simple with
Kamal 2 and Thruster.</p>
<p><a href="https://kamal-deploy.org/">Kamal 2</a> reduces the need for reliance on managed cloud services and Platform as a Service (PaaS) platforms by
enabling quick and easy deployment to cloud VMs, bare metal servers, or VPS
environments in just minutes.</p>
<p>With a single command (<code>kamal setup</code>), you can set up a production-ready Rails
environment on a standard Linux box, making deployment both easy and
cost-effective.</p>
<p>Kamal 2 also integrates with <a href="https://github.com/basecamp/thruster">Thruster</a>, a custom proxy built specifically for
Rails that enables zero-downtime deployments, HTTP/2 support, automated SSL with
Let's Encrypt, Gzip compression, and easy hosting of multiple apps on a single
server — all without complex setup.</p>
<p>With Kamal 2 and Thruster, Rails 8 makes deploying apps easier than ever. And if
you prefer a different deployment setup, you can opt out using the
<code>--skip-kamal</code> flag to maintain your existing workflows.</p>
<h2 id="leaner-rails-deployments-with-solid-adapters">Leaner Rails Deployments with Solid Adapters</h2>
<p>One of the big improvements in Rails 8 is simpler deployments by reducing
the number of additional services needed to implement common web application
requirements.</p>
<p>Traditionally, if you required features like job queues, caching, and pub/sub
messaging, you'd use a combination of a database like PostgreSQL with Redis for
auxiliary functions.</p>
<p>With Rails 8, you can handle all these with just SQLite, thanks to three new
database-backed adapters: <a href="https://github.com/rails/solid_cable">Solid Cable</a>,
<a href="https://github.com/rails/solid_cache">Solid Cache</a>, and
<a href="https://github.com/rails/solid_queue">Solid Queue</a>.</p>
<ol>
<li>
<p><strong>Solid Cable</strong> is Rails' new default Action Cable adapter in production and
means you can drop the common dependency on Redis. It acts as the
pub/sub server, relaying messages between the app and connected clients using
fast polling through SQLite. Despite polling, Solid Cable's performance
is comparable to Redis in most situations.</p>
</li>
<li>
<p><strong>Solid Cache</strong> replaces the need for Redis by using disk storage instead of
RAM for caching. This approach allows for much larger, more cost-effective
caches that persist longer and handle more requests without sacrificing
performance. It also supports encrypted storage and retention policies to
meet privacy requirements.</p>
</li>
<li>
<p><strong>Solid Queue</strong> replaces Redis for
<a href="https://edgeguides.rubyonrails.org/active_job_basics.html">Active Job</a>
background processing, using the <code>FOR UPDATE SKIP LOCKED</code> mechanism for
efficient job handling (compatible with PostgreSQL, MySQL, or SQLite). It
includes essential features like concurrency control, retries, and recurring
jobs, and has proven itself at <a href="https://www.hey.com/">HEY</a>, where it now
manages 20 million jobs per day.</p>
</li>
</ol>
<p>These three adapters are designed around a simple idea: modern SSDs and NVMe
drives are fast enough to handle many tasks that previously required in-memory
solutions. By tapping into these speedy drives, Rails cuts out the need for
separate RAM-based tools like Redis.</p>

<h2 id="sqlite-is-ready-for-production">SQLite is Ready for Production</h2>
<p>Rails 8 takes SQLite from a lightweight development tool to a reliable choice
for production use, thanks to extensive work on the SQLite adapter and Ruby
driver.</p>
<p>With the introduction of the solid adapters discussed above, SQLite now has the
capability to power Action Cable, Rails.cache, and Active Job effectively,
expanding its role beyond just prototyping or testing environments.</p>
<p>Here are some key improvements to the SQLite integration in Rails 8:</p>
<ul>
<li>Full-text search and virtual tables are now supported using
<code>create_virtual_table</code>.</li>
<li>The adapter now allows bulk insert fixtures for enhanced data seeding
performance.</li>
<li>Transactions default to <code>IMMEDIATE</code> mode to improve concurrency.</li>
<li>Enhanced error handling by translating <code>SQLite3::BusyException</code> into
<code>ActiveRecord::StatementTimeout</code>.</li>
</ul>
<h2 id="a-new-era-for-the-asset-pipeline-with-propshaft">A New Era for the Asset Pipeline with Propshaft</h2>
<p>Rails 8 also introduces <a href="https://github.com/rails/propshaft">Propshaft</a> as the
new asset pipeline default, replacing the long-standing
<a href="https://github.com/rails/sprockets">Sprockets</a> system. Sprockets served Rails
developers well for over a decade, but it was designed in a different era — before
the explosion of JavaScript build tools and modern browser improvements.</p>
<p>Propshaft reflects a simpler, modern approach to managing assets, built around
the core needs of today's developers. Its purpose is straightforward: to provide a
clear path for assets and apply digest stamps for caching.</p>
<p>Unlike Sprockets, which took on numerous additional tasks, Propshaft focuses
only on what's essential, fitting naturally with the new Rails philosophy of
keeping asset pipelines lean (while complex JavaScript handling is left to
specialized tools like Esbuild or Vite).</p>
<h2 id="built-in-authentication-made-simple">Built-In Authentication Made Simple</h2>
<p>Rails has been building the key components of authentication over the years,
from <code>has_secure_password</code> in Rails 5 to <code>normalizes</code>, <code>generates_token_for</code> and
<code>authenticate_by</code> in
<a href="https://blog.appsignal.com/2023/02/15/whats-new-in-rails-7-1.html">Rails 7.1</a>.</p>
<p>With Rails 8, all these components come together to give you a straightforward
starting point for building a secure, session-based authentication system.</p>
<p>By running a single command, you can set up all the essentials for an
authentication system with database-backed sessions and password reset
functionality:</p>

<p>This command generates key files, including models, controllers, mailers, and
views:</p>

<p>This effectively puts you on the fast track to secure, production-ready
authentication. All that's left is to integrate a user sign-up flow
customized to your application's needs.</p>
<h2 id="new-script-folder-and-generator">New Script Folder and Generator</h2>
<p>Rails 8 introduces a new <code>script</code> folder dedicated to holding one-off or
general-purpose scripts, such as data migrations, cleanup tasks, or other
utility operations. This addition helps organize these scripts neatly, keeping
them separate from your main application logic.</p>
<p>To make script creation easier, a new script generator is available. You can
generate scripts with a simple command:</p>

<p>These commands create the corresponding script files, which you can then execute
with:</p>

<p>This streamlined approach keeps your application organized and makes handling
custom scripts more convenient and maintainable.</p>
<h2 id="a-slew-of-active-record-improvements">A Slew of Active Record Improvements</h2>
<p>Active Record has also seen major enhancements in Rails 8 to improve
performance, simplify migrations, improve troubleshooting, and provide better
support for complex database use cases.</p>
<p>Below are some of the key changes introduced in this latest version:</p>
<ul>
<li>Rails 8 now distinguishes between <code>float4</code> and <code>float8</code> in PostgreSQL.</li>
<li><code>drop_table</code> now supports dropping multiple tables at once.</li>
<li>Support for PostgreSQL table inheritance and native partitioning has been
added.</li>
<li>Bulk inserts of fixtures are now supported to improve data seeding performance.</li>
<li>Migrating a fresh database now starts by loading the database schema before
running the migrations.</li>
<li><code>create_schema</code> and <code>drop_schema</code> operations are now reversible.</li>
<li>Rails 8 now requires MySQL 5.6.4 or later due to advancements like datetime
with precision.</li>
<li>Query log tags are enabled by default in development environments to trace SQL
statements back to the application code and identify which database is in use.</li>
</ul>
<h2 id="wrapping-up">Wrapping Up</h2>
<p>Rails 8 introduces a range of impactful updates, from easier deployments with
Kamal and a modern asset pipeline to significant ActiveRecord enhancements and
improved production capabilities for SQLite.</p>
<p>These advancements not only boost developer productivity but also align with
modern best practices, allowing you to focus on building your application
instead of dealing with infrastructure complexities.</p>
<p>For a detailed list of all the new features, optimizations, and changes, check
out the
<a href="https://edgeguides.rubyonrails.org/8_0_release_notes.html">official Rails 8 release notes</a>.</p>
<p>If you want to get involved with contributing to Rails, visit the
<a href="https://github.com/rails/rails/">Rails GitHub repository</a> to explore open
issues and review the contribution guidelines.</p>
<p>Thanks for reading!</p>
<p><strong>P.S. If you'd like to read Ruby Magic posts as soon as they get off the press, <a href="https://blog.appsignal.com/ruby-magic">subscribe to our Ruby Magic newsletter and never miss a single post</a>!</strong></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Rise of Worse Is Better (1991) (240 pts)]]></title>
            <link>https://www.dreamsongs.com/RiseOfWorseIsBetter.html</link>
            <guid>41766293</guid>
            <pubDate>Mon, 07 Oct 2024 14:22:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.dreamsongs.com/RiseOfWorseIsBetter.html">https://www.dreamsongs.com/RiseOfWorseIsBetter.html</a>, See on <a href="https://news.ycombinator.com/item?id=41766293">Hacker News</a></p>
<div id="readability-page-1" class="page">
		<p><a href="https://www.dreamsongs.com/index.html"><img src="https://www.dreamsongs.com/Files/DreamsongsBannerWeb.jpg" width="800" height="95"></a>
		</p>
			
			<h2>Richard P. Gabriel</h2>
		<h3>Lucid, Inc</h3>
		<p>{an excerpt from "Lisp: Good News, Bad News, How to Win Big." [<a href="https://www.dreamsongs.com/WIB.html">html</a>]}</p>
		<h3>2.1 The Rise of <i>Worse is Better</i></h3>
		<p>I and just about every designer of Common Lisp and CLOS has had extreme exposure to the MIT/Stanford style of design. The essence of this style can be captured by the phrase <i>the right thing</i>. To such a designer it is important to get all of the following characteristics right:</p>
		<ul>
				<li>Simplicity -- the design must be simple, both in implementation and interface. It is more important for the interface to be simple than the implementation.
				</li><li>Correctness -- the design must be correct in all observable aspects. Incorrectness is simply not allowed.
				</li><li>Consistency -- the design must not be inconsistent. A design is allowed to be slightly less simple and less complete to avoid inconsistency. Consistency is as important as correctness.
				</li><li>Completeness -- the design must cover as many important situations as is practical. All reasonably expected cases must be covered. Simplicity is not allowed to overly reduce completeness.
			</li></ul>
			<p>I believe most people would agree that these are good characteristics. I will call the use of this philosophy of design the <i>MIT approach</i>. Common Lisp (with CLOS) and Scheme represent the MIT approach to design and implementation.</p>
			<p>The worse-is-better philosophy is only slightly different:</p>
			<ul>
				<li>Simplicity -- the design must be simple, both in implementation and interface. It is more important for the implementation to be simple than the interface. Simplicity is the most important consideration in a design.
				</li><li>Correctness -- the design must be correct in all observable aspects. It is slightly better to be simple than correct.
				</li><li>Consistency -- the design must not be overly inconsistent. Consistency can be sacrificed for simplicity in some cases, but it is better to drop those parts of the design that deal with less common circumstances than to introduce either implementational complexity or inconsistency.
				</li><li>Completeness -- the design must cover as many important situations as is practical. All reasonably expected cases should be covered. Completeness can be sacrificed in favor of any other quality. In fact, completeness must be sacrificed whenever implementation simplicity is jeopardized. Consistency can be sacrificed to achieve completeness if simplicity is retained; especially worthless is consistency of interface.</li></ul>
			<p>Early Unix and C are examples of the use of this school of design, and I will call the use of this design strategy the <i>New Jersey approach</i>. I have intentionally caricatured the worse-is-better philosophy to convince you that it is obviously a bad philosophy and that the New Jersey approach is a bad approach.</p>
			<p>However, I believe that worse-is-better, even in its strawman form, has better survival characteristics than the-right-thing, and that the New Jersey approach when used for software is a better approach than the MIT approach.</p>
			<p>Let me start out by retelling a story that shows that the MIT/New-Jersey distinction is valid and that proponents of each philosophy actually believe their philosophy is better.</p>
			<p>Two famous people, one from MIT and another from Berkeley (but working on Unix) once met to discuss operating system issues. The person from MIT was knowledgeable about ITS (the MIT AI Lab operating system) and had been reading the Unix sources. He was interested in how Unix solved the PC loser-ing problem. The PC loser-ing problem occurs when a user program invokes a system routine to perform a lengthy operation that might have significant state, such as IO buffers. If an interrupt occurs during the operation, the state of the user program must be saved. Because the invocation of the system routine is usually a single instruction, the PC of the user program does not adequately capture the state of the process. The system routine must either back out or press forward. The right thing is to back out and restore the user program PC to the instruction that invoked the system routine so that resumption of the user program after the interrupt, for example, re-enters the system routine. It is called <i>PC loser-ing</i> because the PC is being coerced into <i>loser mode</i>, where <i>loser</i> is the affectionate name for <i>user</i> at MIT.</p>
			<p>The MIT guy did not see any code that handled this case and asked the New Jersey guy how the problem was handled. The New Jersey guy said that the Unix folks were aware of the problem, but the solution was for the system routine to always finish, but sometimes an error code would be returned that signaled that the system routine had failed to complete its action. A correct user program, then, had to check the error code to determine whether to simply try the system routine again. The MIT guy did not like this solution because it was not the right thing.</p>
			<p>The New Jersey guy said that the Unix solution was right because the design philosophy of Unix was simplicity and that the right thing was too complex. Besides, programmers could easily insert this extra test and loop. The MIT guy pointed out that the implementation was simple but the interface to the functionality was complex. The New Jersey guy said that the right tradeoff has been selected in Unix -- namely, implementation simplicity was more important than interface simplicity.</p>
			<p>The MIT guy then muttered that sometimes it takes a tough man to make a tender chicken, but the New Jersey guy didn’t understand (I’m not sure I do either).</p>
			<p>Now I want to argue that worse-is-better is better. C is a programming language designed for writing Unix, and it was designed using the New Jersey approach. C is therefore a language for which it is easy to write a decent compiler, and it requires the programmer to write text that is easy for the compiler to interpret. Some have called C a fancy assembly language. Both early Unix and C compilers had simple structures, are easy to port, require few machine resources to run, and provide about 50%-80% of what you want from an operating system and programming language.</p>
			<p>Half the computers that exist at any point are worse than median (smaller or slower). Unix and C work fine on them. The worse-is-better philosophy means that implementation simplicity has highest priority, which means Unix and C are easy to port on such machines. Therefore, one expects that if the 50% functionality Unix and C support is satisfactory, they will start to appear everywhere. And they have, haven’t they?</p>
			<p>Unix and C are the ultimate computer viruses.</p>
			<p>A further benefit of the worse-is-better philosophy is that the programmer is conditioned to sacrifice some safety, convenience, and hassle to get good performance and modest resource use. Programs written using the New Jersey approach will work well both in small machines and large ones, and the code will be portable because it is written on top of a virus.</p>
			<p>It is important to remember that the initial virus has to be basically good. If so, the viral spread is assured as long as it is portable. Once the virus has spread, there will be pressure to improve it, possibly by increasing its functionality closer to 90%, but users have already been conditioned to accept worse than the right thing. Therefore, the worse-is-better software first will gain acceptance, second will condition its users to expect less, and third will be improved to a point that is almost the right thing. In concrete terms, even though Lisp compilers in 1987 were about as good as C compilers, there are many more compiler experts who want to make C compilers better than want to make Lisp compilers better.</p>
			<p>The good news is that in 1995 we will have a good operating system and programming language; the bad news is that they will be Unix and C++.</p>
			<p>There is a final benefit to worse-is-better. Because a New Jersey language and system are not really powerful enough to build complex monolithic software, large systems must be designed to reuse components. Therefore, a tradition of integration springs up.</p>
			<p>How does the right thing stack up? There are two basic scenarios: the <i>big complex system scenario</i> and the <i>diamond-like jewel</i> scenario.</p>
			<p>The <i>big complex system</i> scenario goes like this:</p>
			<p>First, the right thing needs to be designed. Then its implementation needs to be designed. Finally it is implemented. Because it is the right thing, it has nearly 100% of desired functionality, and implementation simplicity was never a concern so it takes a long time to implement. It is large and complex. It requires complex tools to use properly. The last 20% takes 80% of the effort, and so the right thing takes a long time to get out, and it only runs satisfactorily on the most sophisticated hardware.</p>
			<p>The <i>diamond-like jewel</i> scenario goes like this:</p>
			<p>The right thing takes forever to design, but it is quite small at every point along the way. To implement it to run fast is either impossible or beyond the capabilities of most implementors.</p>
			<p>The two scenarios correspond to Common Lisp and Scheme.</p>
			<p>The first scenario is also the scenario for classic artificial intelligence software.</p>
			<p>The right thing is frequently a monolithic piece of software, but for no reason other than that the right thing is often designed monolithically. That is, this characteristic is a happenstance.</p>
			<p>The lesson to be learned from this is that it is often undesirable to go for the right thing first. It is better to get half of the right thing available so that it spreads like a virus. Once people are hooked on it, take the time to improve it to 90% of the right thing.</p>
			<p>A wrong lesson is to take the parable literally and to conclude that C is the right vehicle for AI software. The 50% solution has to be basically right, and in this case it isn’t.</p>
		<p>But, one can conclude only that the Lisp community needs to seriously rethink its position on Lisp design. I will say more about this later.</p>
		<pre></pre>
		<pre></pre>
		<pre></pre>
		<pre></pre>
		<pre></pre>
		<pre></pre>
		<pre></pre>
		<pre></pre>
		<pre></pre>
		<pre></pre>
	

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Longwriter – Increase llama3.1 output to 10k words (139 pts)]]></title>
            <link>https://github.com/THUDM/LongWriter</link>
            <guid>41766144</guid>
            <pubDate>Mon, 07 Oct 2024 14:05:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/THUDM/LongWriter">https://github.com/THUDM/LongWriter</a>, See on <a href="https://news.ycombinator.com/item?id=41766144">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto">
<p dir="auto"><h3 tabindex="-1" dir="auto">The Aristocratic Estate</h3><a id="user-content-the-aristocratic-estate" aria-label="Permalink: The Aristocratic Estate" href="#the-aristocratic-estate"></a></p>
<p dir="auto">Nestled amidst the rolling hills of the English countryside, the grand estate of Lord Edward Ashwood was a beacon of elegance and sophistication. The sprawling manor, with its towering spires and expansive gardens, stood as a testament to centuries of wealth and power. The Ashwood family, known for their noble lineage and impeccable manners, had been pillars of the local community for generations. The grand halls were filled with the scent of polished wood and rich fabrics, echoing with the soft hum of servants attending to their masters' every need.</p>
<p dir="auto">Lady Ashwood, the matriarch of the household, was a woman of grace and wisdom. Her beauty had faded with time, but her elegance remained untarnished. She was known for her charitable works and her ability to command respect and admiration from all who met her. Her daughters, Eliza and Arabella, were the epitome of aristocratic charm. Eliza, the elder, was a poised and intelligent young woman, often seen with a book in hand or engaged in scholarly discussions. Arabella, the younger, was vivacious and lively, her laughter ringing through the halls like a bell. Both girls were expected to marry well, their futures already mapped out by their parents.</p>
<p dir="auto">The household was a bustling hive of activity. The grand dining hall was a testament to the family's wealth, adorned with intricate tapestries and fine china. The servants moved with practiced precision, their duties meticulously assigned. The butler, Mr. Blackwood, was a stern but fair man, ensuring that every aspect of the household ran smoothly. The head cook, Mrs. Brown, was a master of her craft, her culinary skills renowned throughout the county. The young page boys and maids scurried about, their faces a mix of innocence and the early signs of budding adulthood.</p>
<p dir="auto">The Ashwood estate was a world apart from the simpler lives of the villagers who worked the surrounding lands. The gulf between the two worlds was vast and unbridgeable, a chasm that no one dared to cross. The servants, though integral to the estate's operation, were kept at a distance, their presence a mere background to the grandeur that defined the Ashwoods.</p>
<p dir="auto">In this world of opulence and order, the seeds of a tragic love story were about to be sown.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Hidden Heart of Eliza</h3><a id="user-content-the-hidden-heart-of-eliza" aria-label="Permalink: The Hidden Heart of Eliza" href="#the-hidden-heart-of-eliza"></a></p>
<p dir="auto">Eliza Ashwood was the embodiment of aristocratic grace, her every movement a testament to years of refinement and education. Yet, beneath her composed exterior lay a heart yearning for something more, something the grand estate could not provide. Eliza was not merely a bookish daughter, though her love for literature was well-known. She possessed a depth of thought and a sensitivity that set her apart from her peers. Her days were filled with the routine of the estate—participating in social gatherings, learning the intricacies of diplomacy and etiquette, and engaging in scholarly pursuits. But her nights were often spent in quiet reflection, her mind wandering to thoughts that were far removed from the expectations of her station.</p>
<p dir="auto">Eliza's interest in the estate's servants was a well-guarded secret. She often found herself drawn to the quieter corners of the manor, where the servants conducted their duties with a sense of quiet dignity. It was during one such moment, while taking a solitary walk through the estate's expansive gardens, that she first encountered Thomas. He was a young servant, tasked with tending to the roses that lined the estate's perimeter. His back was to her as he worked, his hands deftly pruning the delicate blooms. Eliza was captivated by the ease and precision with which he moved, a stark contrast to the hurried chaos of the household's daily operations.</p>
<p dir="auto">As she watched him, a sense of tranquility washed over her. For the first time in what felt like an eternity, Eliza felt a sense of peace. Thomas's presence was unassuming, his focus entirely on his work. It was a stark contrast to the constant hustle and bustle of the manor. Eliza found herself lingering, her curiosity piqued by the man who seemed to exist in a world of his own, untouched by the grandeur that surrounded him.</p>
<p dir="auto">Their first conversation was innocent and brief, a simple exchange over the health of Thomas's mother. Eliza's genuine concern and Thomas's humble gratitude left an impression on both of them. From that moment, their interactions became more frequent, though always under the watchful eyes of the household. Eliza would often find herself seeking out Thomas, her heart fluttering with a mix of excitement and fear. Their conversations were simple and heartfelt, often centered around the beauty of the garden or the weather. Yet, it was enough to kindle a flame in Eliza's heart, a flame that she knew she must keep hidden.</p>
<p dir="auto">Eliza's feelings for Thomas were a source of both comfort and conflict. On one hand, he represented a connection to a simpler, more genuine world, a world where she felt truly seen and understood. On the other hand, she was acutely aware of the social and economic chasm that separated them. The idea of a relationship with a servant was not only unimaginable but also scandalous. Eliza's heart was a battlefield of hope and despair, torn between her desire for love and her duty to her family and society.</p>
<p dir="auto">As their bond deepened, Eliza found herself questioning her place in the world. She had been raised to aspire to greatness, to marry a man of equal or greater status, to uphold the Ashwood legacy. Yet, here she was, falling in love with a servant, a man who represented everything her world sought to exclude. It was a love that defied logic and reason, a love that threatened to upend the carefully constructed life she had been destined to lead.</p>
<p dir="auto">Eliza's secret affection for Thomas was a delicate balance, a fragile thread that she clung to with all her might. She knew that revealing her feelings would not only shatter her own dreams but also bring disgrace upon her family. Yet, the more time she spent with Thomas, the more she realized that her heart could no longer be contained. It was a love that was as beautiful as it was dangerous, a love that would test the very foundations of her world.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Thomas's Hidden Life</h3><a id="user-content-thomass-hidden-life" aria-label="Permalink: Thomas's Hidden Life" href="#thomass-hidden-life"></a></p>
<p dir="auto">Thomas had been born into a family of humble means, his parents working the fields to make ends meet. From a young age, he had known the hardships of rural life, the backbreaking labor and the sting of poverty. Yet, it was not the struggle that defined him but the resilience and determination he found within himself. When the Ashwood estate advertised for new servants, Thomas saw it as an opportunity to escape the confines of his village and forge a better future for himself.</p>
<p dir="auto">Life at the Ashwood estate was a stark contrast to his previous existence. The grandeur and opulence were overwhelming at first, but Thomas adapted quickly, his innate sense of duty driving him to excel in his duties. He was assigned to the garden, a role that suited his quiet nature and love for the natural world. Each day, he moved through the estate with a sense of purpose, his hands deftly tending to the plants, his mind a sanctuary of calm amidst the chaos.</p>
<p dir="auto">Despite the differences in their worlds, Thomas felt a strange sense of belonging at the Ashwood estate. The grand halls and ornate decorations were a world apart from his simple upbringing, but there was a certain elegance to the place that he found comforting. The strict routines and the disciplined lives of the servants provided a structure that he had always craved. He found solace in the predictability of his tasks, in the rhythm of his workday that allowed him moments of quiet reflection.</p>
<p dir="auto">It was during these moments of solitude that Thomas began to notice Eliza. Her presence was like a gentle breeze through the garden, her elegance contrasting with the rustic beauty of the flowers she admired. Thomas was initially drawn to her beauty, but as their interactions grew, he came to appreciate her intelligence and kindness. Eliza was unlike anyone he had ever met, her conversations filled with wisdom and compassion. She saw beyond his station, into the person he truly was.</p>
<p dir="auto">Their bond grew slowly, built on shared moments of understanding and mutual respect. Thomas found himself looking forward to their brief conversations, his heart lightening with each encounter. Eliza's genuine interest in his life and her willingness to see past the societal barriers that separated them filled him with a sense of hope he had long thought lost. For the first time, Thomas felt valued and seen, not as a servant, but as a person with dreams and aspirations of his own.</p>
<p dir="auto">Yet, Thomas was acutely aware of the dangers that their relationship posed. He knew the social and economic chasm that separated them, the impossibility of a future together. The idea of love was a fragile dream in a world that demanded conformity and respectability. Thomas's heart was a battlefield of hope and fear, torn between his desire for Eliza and the reality of their circumstances. He loved her with all his heart, but he was also pragmatic, understanding that their love was a risk he could not afford to take.</p>
<p dir="auto">As their bond deepened, Thomas found himself questioning his place in the world. He had come to the Ashwood estate seeking a better life, but now he found himself caught in a web of emotions that threatened to unravel everything he had worked for. The love he felt for Eliza was a beautiful but dangerous distraction, a reminder of the dreams he dared not speak aloud. He knew that their love was a fragile thread, one that could easily be severed by the harsh realities of their world.</p>
<p dir="auto">Thomas's heart was a sanctuary of love and fear, a place where his dreams and reality clashed. He loved Eliza with a passion that defied reason, but he was also realistic, understanding that their love was a fragile hope in a world that demanded conformity. As their bond grew stronger, Thomas found himself standing at a crossroads, his future uncertain and his heart in turmoil. He knew that his love for Eliza was a risk he was willing to take, but he was also aware of the dangers that lay ahead.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Unspoken Bond</h3><a id="user-content-the-unspoken-bond" aria-label="Permalink: The Unspoken Bond" href="#the-unspoken-bond"></a></p>
<p dir="auto">The bond between Eliza and Thomas grew stronger with each passing day, a silent yet powerful connection that neither could deny. Their conversations, though brief, were filled with a depth of understanding that transcended the barriers of their social standing. Eliza found herself looking forward to their encounters, each interaction a source of solace and joy in her otherwise structured and rigid world. Thomas, in turn, felt a sense of belonging and purpose that he had never known before, Eliza's presence a beacon of hope in his otherwise monotonous life.</p>
<p dir="auto">One evening, as the sun dipped below the horizon, casting a golden glow over the garden, Eliza found herself once again drawn to the roses Thomas tended. This time, she approached him with a quiet determination. "Thomas," she began, her voice barely above a whisper, "I wanted to thank you for always being there, for listening to me when no one else would."</p>
<p dir="auto">Thomas looked up, his eyes meeting hers with a mixture of surprise and gratitude. "It's my pleasure, Miss Eliza. You've always been kind to me."</p>
<p dir="auto">Eliza took a deep breath, her heart pounding in her chest. "Thomas, there's something I need to tell you. I... I care for you deeply. More than just as a friend or a servant. I... I love you."</p>
<p dir="auto">Thomas's eyes widened, his heart racing at the weight of her words. He had felt the same but had never dared to voice them, afraid of the consequences. "Eliza," he whispered, his voice trembling, "I... I feel the same. But we both know the dangers of what we feel."</p>
<p dir="auto">Eliza's eyes filled with a mixture of hope and despair. "I know the risks, Thomas. I've thought about it night and day. But I can't deny my feelings any longer. I need you to know how I truly feel."</p>
<p dir="auto">Thomas's heart ached with the weight of her words. He loved her with every part of his being, but the reality of their situation loomed large. "Eliza, we come from two different worlds. The gap between us is vast and unbridgeable. If we pursue this, we risk everything—our futures, our families, our very lives."</p>
<p dir="auto">Eliza's eyes glistened with unshed tears. "I understand that, Thomas. But I can't live without you. I need you in my life, even if it means defying everything I've ever been taught."</p>
<p dir="auto">Thomas took a step closer, his hand reaching out to gently touch her cheek. "Eliza, you mean more to me than words can express. But we must be careful. The world is not kind to those who defy its rules."</p>
<p dir="auto">Eliza nodded, her heart heavy with the weight of their reality. "I know, Thomas. But I'm willing to face whatever comes. I love you, and I can't let that go."</p>
<p dir="auto">Their fingers brushed against each other's, a silent promise of the love they shared. It was a love that defied reason and societal norms, a love that both terrified and inspired them. They knew the risks, but they were also aware of the beauty and depth of the bond they had forged.</p>
<p dir="auto">As they stood there under the golden light of the setting sun, their hearts beat in unison, a testament to the love that had grown between them. They were two souls entwined by fate, their love a fragile yet resilient thread that defied the world's expectations. Together, they faced the uncertainties of their future, their hearts united by a love that was as powerful as it was dangerous.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Struggle Within</h3><a id="user-content-the-struggle-within" aria-label="Permalink: The Struggle Within" href="#the-struggle-within"></a></p>
<p dir="auto">Eliza's heart was a tempest of emotions, torn between her love for Thomas and the societal expectations that loomed over her. She knew that her feelings for Thomas were real, profound, and unshakable. Yet, the weight of her upbringing and the expectations of her family were a constant reminder of the peril she faced. Every day was a battle within herself, a struggle to reconcile her heart with her duty.</p>
<p dir="auto">Eliza's parents had always been strict in their expectations, instilling in her a sense of responsibility and obligation to the Ashwood legacy. They had planned her future, envisioning a marriage that would secure the family's status and wealth. The idea of defying those plans, of pursuing a love that defied societal norms, was a terrifying prospect. Eliza feared the disgrace that would come to her family, the ruin of her carefully constructed life.</p>
<p dir="auto">Yet, every moment spent with Thomas only deepened her resolve. His kindness, his intelligence, and his unwavering support filled a void in her heart that nothing else could. Eliza found herself longing for the simple, genuine moments they shared, the comfort of his presence and the joy that his love brought into her life. She realized that her happiness, her true happiness, lay in the love she felt for Thomas, not in the expectations of her family.</p>
<p dir="auto">Eliza's internal conflict was a relentless torment. She loved her family and respected their wishes, but she also loved Thomas with a passion that she could no longer ignore. She spent sleepless nights wrestling with her emotions, her mind a whirlwind of doubt and determination. She knew that she could not continue living a lie, that she had to make a choice between her heart and her duty.</p>
<p dir="auto">One evening, as she stood before her mirror, staring at her reflection, Eliza made a decision. She would speak to her parents, reveal her feelings for Thomas, and face the consequences. She knew it would be a difficult conversation, but she also knew that she could no longer live in silence. She owed it to herself and to Thomas to be honest about her heart.</p>
<p dir="auto">As she prepared to face her parents, Eliza's heart was filled with a mixture of fear and hope. She was ready to fight for her love, to defy the expectations that had been laid out for her. She was willing to face whatever consequences might come, as long as she could be true to herself and to the man who had captured her heart.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Heart-Wrenching Confession</h3><a id="user-content-the-heart-wrenching-confession" aria-label="Permalink: The Heart-Wrenching Confession" href="#the-heart-wrenching-confession"></a></p>
<p dir="auto">Eliza took a deep breath, steeling herself for the conversation that was about to unfold. She found her parents in the drawing room, their faces a mask of calm as they sipped their tea. Eliza's heart pounded in her chest as she approached them, her hands trembling slightly. "Father, Mother," she began, her voice steady but filled with emotion, "I need to talk to you about something important."</p>
<p dir="auto">Lady Ashwood set down her teacup, her eyes narrowing slightly. "What is it, Eliza? Out with it."</p>
<p dir="auto">Eliza took a deep breath, her eyes meeting her parents' with a mixture of determination and fear. "I... I have something to confess. I... I am in love."</p>
<p dir="auto">Both of her parents' faces paled, their expressions shifting from surprise to concern. Lord Ashwood's stern gaze softened slightly, while Lady Ashwood's eyes filled with a mixture of shock and worry. "Eliza, what do you mean? With whom?" Her voice was a hushed whisper, as if speaking too loudly might shatter the fragile reality they all lived in.</p>
<p dir="auto">Eliza's heart ached as she forced herself to speak the words that had been burning in her chest for so long. "I am in love with Thomas, the servant who tends the garden. I... I can't deny it any longer. I love him with all my heart."</p>
<p dir="auto">The room fell into a heavy silence, the air thick with the weight of unspoken words. Lord Ashwood's face darkened, his eyes narrowing as he absorbed her words. "Thomas? The servant? Eliza, this is unthinkable. How could you even entertain such a notion?"</p>
<p dir="auto">Lady Ashwood's eyes filled with tears, her voice trembling. "Eliza, you must be mistaken. This cannot be real. You must forget him immediately."</p>
<p dir="auto">Eliza's heart broke as she looked at her parents, seeing the pain and disappointment in their eyes. She knew that their reaction was inevitable, but the words still felt like a dagger to her soul. "I am not mistaken, Mother. I am in love with Thomas, and I cannot change that. I... I cannot live a lie any longer."</p>
<p dir="auto">Lord Ashwood's voice was cold and stern. "Eliza, you must understand the consequences of your actions. This is not just about you. It is about the Ashwood legacy, about our reputation and honor. You cannot throw all of that away for a mere servant."</p>
<p dir="auto">Eliza's eyes filled with tears, her heart aching with the weight of their words. "I know, Father. I know the risks. But I cannot live without Thomas. He has given me a love that I never thought possible, a love that makes me feel alive. I cannot deny my feelings any longer."</p>
<p dir="auto">Lady Ashwood's voice broke, her tears flowing freely. "Eliza, you don't understand. This is more than just a love affair. It is a betrayal of everything we stand for. You are putting our entire family at risk."</p>
<p dir="auto">Eliza's heart was in turmoil, torn between her love for Thomas and her duty to her family. She knew that her parents were right, that the consequences of her actions could be devastating. But she also knew that she could not live a life of lies, that she had to be true to herself and to the man who had captured her heart.</p>
<p dir="auto">As the conversation continued, Eliza's resolve only strengthened. She knew that she would face consequences, but she was willing to bear them. She would fight for her love, even if it meant losing everything.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Unraveling of Dreams</h3><a id="user-content-the-unraveling-of-dreams" aria-label="Permalink: The Unraveling of Dreams" href="#the-unraveling-of-dreams"></a></p>
<p dir="auto">The days following Eliza's confession were a whirlwind of turmoil and heartache. Lord and Lady Ashwood were determined to put an end to what they saw as a scandalous relationship, and their actions were swift and unforgiving. Eliza was forbidden from seeing Thomas, her movements closely monitored by the household staff. The garden, once a sanctuary for their secret meetings, became a place of dread, its beauty marred by the weight of their separation.</p>
<p dir="auto">Eliza's heart was in shambles, each day a painful reminder of the love she had been forced to abandon. She spent her nights in tears, her mind a constant echo of the words spoken by her parents. The walls of the grand estate seemed to close in around her, the once familiar surroundings now a prison of her own making. Her once vibrant spirit dimmed, her laughter replaced by a hollow echo of its former self.</p>
<p dir="auto">Thomas, too, was not immune to the devastation. He could sense the change in Eliza, the sadness that clouded her eyes and weighed heavily on her heart. He longed to reach out to her, to offer her the comfort she so desperately needed, but he knew that any attempt would only worsen her situation. His heart ached with every passing day, his love for Eliza a silent but relentless torment.</p>
<p dir="auto">The household was abuzz with the news of Eliza's forbidden love, the servants whispering behind closed doors and the guests at social gatherings casting judgmental glances her way. Eliza's reputation was under siege, her once impeccable standing now tarnished by the scandal. The pressure was immense, and she found herself questioning her every action, her every decision.</p>
<p dir="auto">Despite the distance imposed upon them, Eliza and Thomas found ways to communicate. Secret notes were passed through the estate, their words a lifeline in the storm of their separation. Each letter was a balm to their wounded hearts, a reminder of the love that had once brought them together. But even these brief exchanges were fraught with danger, each note a potential discovery that could lead to even greater consequences.</p>
<p dir="auto">Eliza's parents, relentless in their efforts to break her spirit, increased the pressure. They sought to distract her with social engagements and scholarly pursuits, hoping to divert her attention from Thomas. But Eliza's heart remained steadfast, her love for Thomas an unyielding force that defied their attempts to sever their bond.</p>
<p dir="auto">The strain of their situation began to take its toll on Eliza's health. She grew pale and weak, her once vibrant energy sapped by the emotional and physical weight of her plight. The Ashwood estate, once a symbol of her family's power and prestige, now felt like a gilded cage, confining her spirit and threatening to crush her soul.</p>
<p dir="auto">Thomas, watching from a distance, felt the same despair. He saw the pain in Eliza's eyes, the way her once bright smile had faded into a shadow of its former self. His heart ached with every passing day, his love for her a beacon of hope in the darkness that had enveloped her life.</p>
<p dir="auto">As the days turned into weeks, the love between Eliza and Thomas remained unbroken, a testament to their unwavering devotion to each other. They faced their trials with courage and resilience, their bond stronger for the hardships they endured. But the weight of their circumstances was a constant reminder of the dangers that loomed over them, a reminder that their love, while powerful, was also fragile and vulnerable to the world's judgment.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Breaking Point</h3><a id="user-content-the-breaking-point" aria-label="Permalink: The Breaking Point" href="#the-breaking-point"></a></p>
<p dir="auto">The weight of their secret love became too much for Eliza to bear. The constant pressure from her parents, the judgment of society, and the physical and emotional toll of their separation began to erode her spirit. One evening, as the moon cast a silvery glow over the Ashwood estate, Eliza made a desperate decision. She would run away, escape the confines of her life and the expectations that had been laid upon her.</p>
<p dir="auto">Eliza slipped out of the manor under the cover of darkness, her heart pounding with a mixture of fear and determination. She made her way to the garden, where Thomas had promised to meet her. The garden, once a place of solace, now felt like a battlefield, each step she took a step closer to the unknown.</p>
<p dir="auto">Thomas was waiting for her, his face a mask of concern and hope. "Eliza, I knew you would come," he whispered, his voice trembling with emotion. "I've been so worried about you."</p>
<p dir="auto">Eliza's eyes filled with tears as she threw her arms around him, her body shaking with the weight of her emotions. "Thomas, I can't stay any longer. The pressure is too much. I need to be with you, even if it means losing everything."</p>
<p dir="auto">Thomas held her close, his heart aching with the depth of her words. "Eliza, I understand. I've felt the same. But we must be careful. Running away is not a solution. It will only make things worse."</p>
<p dir="auto">Eliza pulled back, her eyes searching Thomas's face for reassurance. "I know, Thomas. But I can't go back. I can't live a lie any longer. I need you, and I need to be free to love you."</p>
<p dir="auto">Thomas's heart broke as he looked into her eyes, seeing the pain and determination that burned within them. He knew that Eliza was right, that running away was not the answer, but he also knew that he could not bear to see her suffer any longer. "Eliza, I love you more than words can express. But we must be smart about this. We need a plan, a way to make a life together without the world's judgment."</p>
<p dir="auto">Eliza nodded, her tears drying on her cheeks as she took a deep breath. "I trust you, Thomas. I know you will guide me. I just need to be with you, to feel your love and support."</p>
<p dir="auto">Thomas led Eliza to a secluded part of the garden, away from the prying eyes of the household staff. He took her hands in his, his gaze steady and resolute. "Eliza, I promise you that I will do everything in my power to protect you and to build a life together. But we must be patient, and we must be careful. We cannot rush into anything without a solid plan."</p>
<p dir="auto">Eliza's heart swelled with hope and love as she looked into Thomas's eyes. "I believe in you, Thomas. I believe that we can find a way, that our love can overcome everything. I just need you."</p>
<p dir="auto">Thomas's eyes softened as he pulled Eliza into his arms, holding her close as if to shield her from the world's dangers. "I love you, Eliza. More than anything. And I will do whatever it takes to be with you, to build a life that is truly ours. But we must be strong, and we must be smart."</p>
<p dir="auto">Eliza's heart felt lighter as she rested her head on Thomas's chest, listening to the steady beat of his heart. She knew that their journey would be fraught with challenges, but she also knew that their love was strong enough to overcome them. "I love you too, Thomas. And I will stand by you no matter what."</p>
<p dir="auto">As they stood there in the moonlit garden, their hearts beating in unison, Eliza and Thomas made a silent vow to each other. They would face the world together, their love a beacon of hope in the darkness. They would fight for their happiness, no matter the cost.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Ultimate Sacrifice</h3><a id="user-content-the-ultimate-sacrifice" aria-label="Permalink: The Ultimate Sacrifice" href="#the-ultimate-sacrifice"></a></p>
<p dir="auto">The days that followed were a blur of desperation and hope. Eliza and Thomas knew that their time was limited, that the authorities would not be long in finding them. They spent their days in hiding, moving from one safe house to another, always looking over their shoulders for the threat of discovery. Each night, they found solace in each other's arms, their love a fragile yet resilient thread that held them together in the face of adversity.</p>
<p dir="auto">As the authorities closed in, Eliza and Thomas knew that their time was running out. They had to make a decision, a choice that would determine the course of their lives. Eliza looked into Thomas's eyes, her heart heavy with the weight of their reality. "Thomas," she whispered, her voice trembling, "we can't keep running. They will find us eventually. We need a plan, a way to ensure that our love endures, even if we cannot be together."</p>
<p dir="auto">Thomas's eyes filled with a mixture of love and sorrow. "Eliza, I have been thinking about this. There is only one way to ensure that our love endures, that our sacrifice is not in vain. We must marry, legally. It is our only chance to be together, to build a life that is truly ours."</p>
<p dir="auto">Eliza's eyes widened in shock and fear. "Thomas, I can't marry you. It is illegal, and it would mean losing everything—our freedom, our family, our future. I can't ask you to do that."</p>
<p dir="auto">Thomas's grip on her hand tightened, his voice firm and resolute. "Eliza, you must understand. Marrying me is the only way we can be together, the only way to ensure that our love endures. I am willing to face the consequences, to give up everything for you. But I need you to be with me, to stand by my side."</p>
<p dir="auto">Eliza's heart ached with the weight of Thomas's words. She knew that he was right, that their love was worth any sacrifice. But the idea of losing everything, of defying society's expectations, was a daunting prospect. "Thomas, I love you more than anything. But I am afraid of what will happen if we marry. I am afraid of losing you, of losing everything we have built together."</p>
<p dir="auto">Thomas's eyes softened as he pulled Eliza into his arms, holding her close as if to shield her from the world's dangers. "Eliza, you must trust me. I will protect you, I will fight for us. We can make this work, we can build a life together. But we must be brave, and we must be united."</p>
<p dir="auto">Eliza's heart swelled with love and determination as she looked into Thomas's eyes. She saw the depth of his devotion, the unwavering commitment he had for her. She knew that he was right, that their love was worth any sacrifice. "Thomas, I trust you. I will marry you, and I will stand by your side no matter what."</p>
<p dir="auto">As they stood there in the dim light of their hidden sanctuary, Eliza and Thomas made their final vow to each other. They would marry, defy society's expectations, and fight for their love. They would face the world together, their hearts united by a love that was as powerful as it was dangerous.</p>
<p dir="auto">Their wedding was a secret ceremony, held in the early hours of dawn to avoid detection. They exchanged vows in a small, secluded chapel, their hearts beating in unison as they promised to love and support each other through every trial and tribulation. The ceremony was simple but profound, a testament to their love and their commitment to each other.</p>
<p dir="auto">As they emerged from the chapel, hand in hand, Eliza and Thomas knew that their journey had only just begun. They faced the world with a newfound sense of purpose and determination, their love a beacon of hope in a world that sought to crush them. They were ready to face whatever challenges lay ahead, united by a love that was as powerful as it was fragile.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Heart-Wrenching End</h3><a id="user-content-the-heart-wrenching-end" aria-label="Permalink: The Heart-Wrenching End" href="#the-heart-wrenching-end"></a></p>
<p dir="auto">The authorities discovered Eliza and Thomas's marriage soon after the ceremony. The news spread like wildfire through the estate and the surrounding villages, igniting a firestorm of outrage and scandal. Lord and Lady Ashwood were devastated, their pride and reputation shattered by their daughter's defiance. Eliza was immediately confined to her room, her parents refusing to speak to her or acknowledge her existence.</p>
<p dir="auto">Thomas, determined to protect Eliza, stood by her side, his love unwavering despite the danger it posed to him. He was dismissed from his position at the estate, his future prospects ruined. The villagers turned their backs on him, their judgmental stares a constant reminder of the price he had paid for his love.</p>
<p dir="auto">Eliza's heart was in tatters, her spirit broken by the weight of her parents' rejection and the world's condemnation. She spent her days in solitude, her once vibrant spirit dimmed by the sorrow that enveloped her. Thomas, though strong and resilient, could see the despair in her eyes, the pain that gnawed at her soul.</p>
<p dir="auto">One evening, as the moon cast a silvery glow over the estate, Thomas took Eliza into the garden, the same place where their love had blossomed. He held her close, his voice trembling with emotion. "Eliza, I am so sorry. I never wanted this to happen. I love you more than anything, and I would do anything to make things right."</p>
<p dir="auto">Eliza's eyes filled with tears, her voice a whisper. "Thomas, I know. But I can't bear the pain any longer. I can't live in this world of judgment and rejection. I need to be free, to find peace."</p>
<p dir="auto">Thomas's heart broke as he looked into Eliza's eyes, seeing the pain and determination that burned within them. He knew that she was right, that she needed to be free from the world's constraints. "Eliza, please don't do this. I can't live without you. I love you, and I will always love you."</p>
<p dir="auto">Eliza pulled back, her eyes searching Thomas's face for one last moment of solace. "Thomas, I love you too. But I need to be free, to find the peace that has eluded me. I am so sorry."</p>
<p dir="auto">Thomas's heart ached with the weight of Eliza's words. He knew that he could not stop her, that her determination was unwavering. "Eliza, I will always love you, no matter what. But I need you to be happy, to find the peace that you deserve."</p>
<p dir="auto">Eliza's eyes glistened with unshed tears as she looked into Thomas's eyes, her heart aching with the weight of her decision. "Thomas, I will always love you. And I will never forget the love we shared. I am so sorry for the pain I have caused you."</p>
<p dir="auto">Thomas's eyes filled with tears as he pulled Eliza into his arms, holding her close as if to shield her from the world's dangers. "Eliza, you have given me the greatest gift of my life—the love of a kind and beautiful soul. I will always cherish that love, no matter what."</p>
<p dir="auto">As they stood there in the moonlit garden, their hearts beating in unison, Eliza and Thomas made their final farewell. They knew that their love had been powerful and beautiful, a testament to the strength of the human spirit. But they also knew that their love had come at a great cost, a sacrifice that had forever changed their lives.</p>
<p dir="auto">Eliza took a deep breath, her heart heavy with the weight of her decision. "Thomas, I need to go. I need to find the peace that has eluded me. I will always love you, and I will never forget you."</p>
<p dir="auto">Thomas's eyes filled with tears as he released Eliza, his heart aching with the weight of her departure. "Eliza, be happy, be free. I will always love you, and I will always remember the love we shared."</p>
<p dir="auto">Eliza walked away from Thomas, her heart breaking with each step. She knew that she was leaving a piece of her heart behind, that her love for Thomas would forever be a part of her. But she also knew that she needed to find the peace that had eluded her, to build a life that was truly her own.</p>
<p dir="auto">Thomas watched Eliza disappear into the darkness, his heart aching with the weight of her departure. He knew that their love had been powerful and beautiful, a testament to the strength of the human spirit. But he also knew that their love had come at a great cost, a sacrifice that had forever changed their lives.</p>
<p dir="auto">As the moon cast its silvery glow over the garden, Eliza and Thomas's love story came to an end. Their love had been powerful and beautiful, a testament to the strength of the human spirit. But it had also been tragic and heartbreaking, a reminder of the dangers that love can face in a world that often seeks to crush it.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Python 3.13.0 Is Released (252 pts)]]></title>
            <link>https://docs.python.org/3.13/whatsnew/3.13.html</link>
            <guid>41766035</guid>
            <pubDate>Mon, 07 Oct 2024 13:53:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://docs.python.org/3.13/whatsnew/3.13.html">https://docs.python.org/3.13/whatsnew/3.13.html</a>, See on <a href="https://news.ycombinator.com/item?id=41766035">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="what-s-new-in-python-3-13" role="main">

<dl>
<dt>Editors<span>:</span></dt>
<dd><p>Adam Turner and Thomas Wouters</p>
</dd>
</dl>
<p>This article explains the new features in Python 3.13, compared to 3.12.
Python 3.13 was released on October 7, 2024.
For full details, see the <a href="https://docs.python.org/3.13/whatsnew/changelog.html#changelog"><span>changelog</span></a>.</p>
<div>
<p>See also</p>
<p><span id="index-0"></span><a href="https://peps.python.org/pep-0719/"><strong>PEP 719</strong></a> – Python 3.13 Release Schedule</p>
</div>
<section id="summary-release-highlights">
<h2>Summary – Release Highlights<a href="#summary-release-highlights" title="Link to this heading">¶</a></h2>
<p>Python 3.13 is the latest stable release of the Python programming
language, with a mix of changes to the language, the implementation
and the standard library.
The biggest changes include a new <a href="#whatsnew313-better-interactive-interpreter">interactive interpreter</a>,
experimental support for running in a <a href="#whatsnew313-free-threaded-cpython">free-threaded mode</a> (<span id="index-1"></span><a href="https://peps.python.org/pep-0703/"><strong>PEP 703</strong></a>),
and a <a href="#whatsnew313-jit-compiler">Just-In-Time compiler</a> (<span id="index-2"></span><a href="https://peps.python.org/pep-0744/"><strong>PEP 744</strong></a>).</p>
<p>Error messages continue to improve, with tracebacks now highlighted in color
by default. The <a href="https://docs.python.org/3.13/library/functions.html#locals" title="locals"><code><span>locals()</span></code></a> builtin now has <a href="#whatsnew313-locals-semantics"><span>defined semantics</span></a> for changing the returned mapping,
and type parameters now support default values.</p>
<p>The library changes contain removal of deprecated APIs and modules,
as well as the usual improvements in user-friendliness and correctness.
Several legacy standard library modules have now <a href="#whatsnew313-pep594">been removed</a> following their deprecation in Python 3.11 (<span id="index-3"></span><a href="https://peps.python.org/pep-0594/"><strong>PEP 594</strong></a>).</p>
<p>This article doesn’t attempt to provide a complete specification
of all new features, but instead gives a convenient overview.
For full details refer to the documentation,
such as the <a href="https://docs.python.org/3.13/library/index.html#library-index"><span>Library Reference</span></a>
and <a href="https://docs.python.org/3.13/reference/index.html#reference-index"><span>Language Reference</span></a>.
To understand the complete implementation and design rationale for a change,
refer to the PEP for a particular new feature;
but note that PEPs usually are not kept up-to-date
once a feature has been fully implemented.
See <a href="#porting-to-python-3-13">Porting to Python 3.13</a> for guidance on upgrading from
earlier versions of Python.</p>
<hr>
<p>Interpreter improvements:</p>
<ul>
<li><p>A greatly improved <a href="#whatsnew313-better-interactive-interpreter"><span>interactive interpreter</span></a> and
<a href="#whatsnew313-improved-error-messages"><span>improved error messages</span></a>.</p></li>
<li><p><span id="index-4"></span><a href="https://peps.python.org/pep-0667/"><strong>PEP 667</strong></a>: The <a href="https://docs.python.org/3.13/library/functions.html#locals" title="locals"><code><span>locals()</span></code></a> builtin now has
<a href="#whatsnew313-locals-semantics"><span>defined semantics</span></a> when mutating the
returned mapping. Python debuggers and similar tools may now more reliably
update local variables in optimized scopes even during concurrent code
execution.</p></li>
<li><p><span id="index-5"></span><a href="https://peps.python.org/pep-0703/"><strong>PEP 703</strong></a>: CPython 3.13 has experimental support for running with the
<a href="https://docs.python.org/3.13/glossary.html#term-global-interpreter-lock"><span>global interpreter lock</span></a> disabled. See <a href="#whatsnew313-free-threaded-cpython"><span>Free-threaded CPython</span></a> for more details.</p></li>
<li><p><span id="index-6"></span><a href="https://peps.python.org/pep-0744/"><strong>PEP 744</strong></a>: A basic <a href="#whatsnew313-jit-compiler"><span>JIT compiler</span></a> was added.
It is currently disabled by default (though we may turn it on later).
Performance improvements are modest – we expect to improve this
over the next few releases.</p></li>
<li><p>Color support in the new <a href="#whatsnew313-better-interactive-interpreter"><span>interactive interpreter</span></a>,
as well as in <a href="#whatsnew313-improved-error-messages"><span>tracebacks</span></a>
and <a href="#whatsnew313-doctest"><span>doctest</span></a> output.
This can be disabled through the <span id="index-7"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHON_COLORS"><code><span>PYTHON_COLORS</span></code></a> and <a href="https://no-color.org/"><code><span>NO_COLOR</span></code></a>
environment variables.</p></li>
</ul>
<p>Python data model improvements:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/reference/datamodel.html#type.__static_attributes__" title="type.__static_attributes__"><code><span>__static_attributes__</span></code></a> stores the names of attributes accessed
through <code><span>self.X</span></code> in any function in a class body.</p></li>
<li><p><a href="https://docs.python.org/3.13/reference/datamodel.html#type.__firstlineno__" title="type.__firstlineno__"><code><span>__firstlineno__</span></code></a> records the first line number of a class
definition.</p></li>
</ul>
<p>Significant improvements in the standard library:</p>
<ul>
<li><p>Add a new <a href="https://docs.python.org/3.13/library/exceptions.html#PythonFinalizationError" title="PythonFinalizationError"><code><span>PythonFinalizationError</span></code></a> exception, raised when an operation
is blocked during <a href="https://docs.python.org/3.13/glossary.html#term-interpreter-shutdown"><span>finalization</span></a>.</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/argparse.html#module-argparse" title="argparse: Command-line option and argument parsing library."><code><span>argparse</span></code></a> module now supports deprecating command-line options,
positional arguments, and subcommands.</p></li>
<li><p>The new functions <a href="https://docs.python.org/3.13/library/base64.html#base64.z85encode" title="base64.z85encode"><code><span>base64.z85encode()</span></code></a> and <a href="https://docs.python.org/3.13/library/base64.html#base64.z85decode" title="base64.z85decode"><code><span>base64.z85decode()</span></code></a>
support encoding and decoding <a href="https://rfc.zeromq.org/spec/32/">Z85 data</a>.</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/copy.html#module-copy" title="copy: Shallow and deep copy operations."><code><span>copy</span></code></a> module now has a <a href="https://docs.python.org/3.13/library/copy.html#copy.replace" title="copy.replace"><code><span>copy.replace()</span></code></a> function,
with support for many builtin types and any class defining
the <a href="https://docs.python.org/3.13/library/copy.html#object.__replace__" title="object.__replace__"><code><span>__replace__()</span></code></a> method.</p></li>
<li><p>The new <a href="https://docs.python.org/3.13/library/dbm.html#module-dbm.sqlite3" title="dbm.sqlite3: SQLite backend for dbm (All)"><code><span>dbm.sqlite3</span></code></a> module is now the default <a href="https://docs.python.org/3.13/library/dbm.html#module-dbm" title="dbm: Interfaces to various Unix &quot;database&quot; formats."><code><span>dbm</span></code></a> backend.</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/os.html#module-os" title="os: Miscellaneous operating system interfaces."><code><span>os</span></code></a> module has a <a href="https://docs.python.org/3.13/library/os.html#os-timerfd"><span>suite of new functions</span></a>
for working with Linux’s timer notification file descriptors.</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/random.html#module-random" title="random: Generate pseudo-random numbers with various common distributions."><code><span>random</span></code></a> module now has a <a href="https://docs.python.org/3.13/library/random.html#random-cli"><span>command-line interface</span></a>.</p></li>
</ul>
<p>Security improvements:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/ssl.html#ssl.create_default_context" title="ssl.create_default_context"><code><span>ssl.create_default_context()</span></code></a> sets <a href="https://docs.python.org/3.13/library/ssl.html#ssl.VERIFY_X509_PARTIAL_CHAIN" title="ssl.VERIFY_X509_PARTIAL_CHAIN"><code><span>ssl.VERIFY_X509_PARTIAL_CHAIN</span></code></a>
and <a href="https://docs.python.org/3.13/library/ssl.html#ssl.VERIFY_X509_STRICT" title="ssl.VERIFY_X509_STRICT"><code><span>ssl.VERIFY_X509_STRICT</span></code></a> as default flags.</p></li>
</ul>
<p>C API improvements:</p>
<ul>
<li><p>The <a href="https://docs.python.org/3.13/c-api/module.html#c.Py_mod_gil" title="Py_mod_gil"><code><span>Py_mod_gil</span></code></a> slot is now used to indicate that
an extension module supports running with the <a href="https://docs.python.org/3.13/glossary.html#term-GIL"><span>GIL</span></a> disabled.</p></li>
<li><p>The <a href="https://docs.python.org/3.13/c-api/time.html"><span>PyTime C API</span></a> has been added,
providing access to system clocks.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.PyMutex" title="PyMutex"><code><span>PyMutex</span></code></a> is a new lightweight mutex that occupies a single byte.</p></li>
<li><p>There is a new <a href="https://docs.python.org/3.13/c-api/monitoring.html#c-api-monitoring"><span>suite of functions</span></a>
for generating <span id="index-8"></span><a href="https://peps.python.org/pep-0669/"><strong>PEP 669</strong></a> monitoring events in the C API.</p></li>
</ul>
<p>New typing features:</p>
<ul>
<li><p><span id="index-9"></span><a href="https://peps.python.org/pep-0696/"><strong>PEP 696</strong></a>: Type parameters (<a href="https://docs.python.org/3.13/library/typing.html#typing.TypeVar" title="typing.TypeVar"><code><span>typing.TypeVar</span></code></a>, <a href="https://docs.python.org/3.13/library/typing.html#typing.ParamSpec" title="typing.ParamSpec"><code><span>typing.ParamSpec</span></code></a>,
and <a href="https://docs.python.org/3.13/library/typing.html#typing.TypeVarTuple" title="typing.TypeVarTuple"><code><span>typing.TypeVarTuple</span></code></a>) now support defaults.</p></li>
<li><p><span id="index-10"></span><a href="https://peps.python.org/pep-0702/"><strong>PEP 702</strong></a>: The new <a href="https://docs.python.org/3.13/library/warnings.html#warnings.deprecated" title="warnings.deprecated"><code><span>warnings.deprecated()</span></code></a> decorator adds support
for marking deprecations in the type system and at runtime.</p></li>
<li><p><span id="index-11"></span><a href="https://peps.python.org/pep-0705/"><strong>PEP 705</strong></a>: <a href="https://docs.python.org/3.13/library/typing.html#typing.ReadOnly" title="typing.ReadOnly"><code><span>typing.ReadOnly</span></code></a> can be used to mark an item of a
<a href="https://docs.python.org/3.13/library/typing.html#typing.TypedDict" title="typing.TypedDict"><code><span>typing.TypedDict</span></code></a> as read-only for type checkers.</p></li>
<li><p><span id="index-12"></span><a href="https://peps.python.org/pep-0742/"><strong>PEP 742</strong></a>: <a href="https://docs.python.org/3.13/library/typing.html#typing.TypeIs" title="typing.TypeIs"><code><span>typing.TypeIs</span></code></a> provides more intuitive
type narrowing behavior, as an alternative to <a href="https://docs.python.org/3.13/library/typing.html#typing.TypeGuard" title="typing.TypeGuard"><code><span>typing.TypeGuard</span></code></a>.</p></li>
</ul>
<p>Platform support:</p>
<ul>
<li><p><span id="index-13"></span><a href="https://peps.python.org/pep-0730/"><strong>PEP 730</strong></a>: Apple’s iOS is now an <a href="#whatsnew313-platform-support"><span>officially supported platform</span></a>, at <span id="index-14"></span><a href="https://peps.python.org/pep-0011/#tier-3"><strong>tier 3</strong></a>.</p></li>
<li><p><span id="index-15"></span><a href="https://peps.python.org/pep-0738/"><strong>PEP 738</strong></a>: Android is now an <a href="#whatsnew313-platform-support"><span>officially supported platform</span></a>, at <span id="index-16"></span><a href="https://peps.python.org/pep-0011/#tier-3"><strong>tier 3</strong></a>.</p></li>
<li><p><code><span>wasm32-wasi</span></code> is now supported as a <span id="index-17"></span><a href="https://peps.python.org/pep-0011/#tier-2"><strong>tier 2</strong></a> platform.</p></li>
<li><p><code><span>wasm32-emscripten</span></code> is no longer an officially supported platform.</p></li>
</ul>
<p>Important removals:</p>
<ul>
<li><p><a href="#whatsnew313-pep594"><span>PEP 594</span></a>: The remaining 19 “dead batteries”
(legacy stdlib modules) have been removed from the standard library:
<code><span>aifc</span></code>, <code><span>audioop</span></code>, <code><span>cgi</span></code>, <code><span>cgitb</span></code>, <code><span>chunk</span></code>,
<code><span>crypt</span></code>, <code><span>imghdr</span></code>, <code><span>mailcap</span></code>, <code><span>msilib</span></code>, <code><span>nis</span></code>,
<code><span>nntplib</span></code>, <code><span>ossaudiodev</span></code>, <code><span>pipes</span></code>, <code><span>sndhdr</span></code>,
<code><span>spwd</span></code>, <code><span>sunau</span></code>, <code><span>telnetlib</span></code>, <code><span>uu</span></code> and <code><span>xdrlib</span></code>.</p></li>
<li><p>Remove the <strong>2to3</strong> tool and <code><span>lib2to3</span></code> module
(deprecated in Python 3.11).</p></li>
<li><p>Remove the <code><span>tkinter.tix</span></code> module (deprecated in Python 3.6).</p></li>
<li><p>Remove the <code><span>locale.resetlocale()</span></code> function.</p></li>
<li><p>Remove the <code><span>typing.io</span></code> and <code><span>typing.re</span></code> namespaces.</p></li>
<li><p>Remove chained <a href="https://docs.python.org/3.13/library/functions.html#classmethod" title="classmethod"><code><span>classmethod</span></code></a> descriptors.</p></li>
</ul>
<p>Release schedule changes:</p>
<p><span id="index-18"></span><a href="https://peps.python.org/pep-0602/"><strong>PEP 602</strong></a> (“Annual Release Cycle for Python”) has been updated
to extend the full support (‘bugfix’) period for new releases to two years.
This updated policy means that:</p>
<ul>
<li><p>Python 3.9–3.12 have one and a half years of full support,
followed by three and a half years of security fixes.</p></li>
<li><p>Python 3.13 and later have two years of full support,
followed by three years of security fixes.</p></li>
</ul>
</section>
<section id="new-features">
<h2>New Features<a href="#new-features" title="Link to this heading">¶</a></h2>
<section id="a-better-interactive-interpreter">
<span id="whatsnew313-better-interactive-interpreter"></span><h3>A better interactive interpreter<a href="#a-better-interactive-interpreter" title="Link to this heading">¶</a></h3>
<p>Python now uses a new <a href="https://docs.python.org/3.13/glossary.html#term-interactive"><span>interactive</span></a> shell by default, based on code
from the <a href="https://pypy.org/">PyPy project</a>.
When the user starts the <a href="https://docs.python.org/3.13/glossary.html#term-REPL"><span>REPL</span></a> from an interactive terminal,
the following new features are now supported:</p>
<ul>
<li><p>Multiline editing with history preservation.</p></li>
<li><p>Direct support for REPL-specific commands like <kbd>help</kbd>, <kbd>exit</kbd>,
and <kbd>quit</kbd>, without the need to call them as functions.</p></li>
<li><p>Prompts and tracebacks with <a href="https://docs.python.org/3.13/using/cmdline.html#using-on-controlling-color"><span>color enabled by default</span></a>.</p></li>
<li><p>Interactive help browsing using <kbd>F1</kbd> with a separate command
history.</p></li>
<li><p>History browsing using <kbd>F2</kbd> that skips output as well as the
<a href="https://docs.python.org/3.13/glossary.html#term-0"><span>&gt;&gt;&gt;</span></a> and <a href="https://docs.python.org/3.13/glossary.html#term-..."><span>…</span></a> prompts.</p></li>
<li><p>“Paste mode” with <kbd>F3</kbd> that makes pasting larger blocks of code
easier (press <kbd>F3</kbd> again to return to the regular prompt).</p></li>
</ul>
<p>To disable the new interactive shell,
set the <span id="index-19"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHON_BASIC_REPL"><code><span>PYTHON_BASIC_REPL</span></code></a> environment variable.
For more on interactive mode, see <a href="https://docs.python.org/3.13/tutorial/appendix.html#tut-interac"><span>Interactive Mode</span></a>.</p>
<p>(Contributed by Pablo Galindo Salgado, Łukasz Langa, and
Lysandros Nikolaou in <a href="https://github.com/python/cpython/issues/111201">gh-111201</a> based on code from the PyPy project.
Windows support contributed by Dino Viehland and Anthony Shaw.)</p>
</section>
<section id="improved-error-messages">
<span id="whatsnew313-improved-error-messages"></span><h3>Improved error messages<a href="#improved-error-messages" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The interpreter now uses color by default when displaying tracebacks in the
terminal. This feature <a href="https://docs.python.org/3.13/using/cmdline.html#using-on-controlling-color"><span>can be controlled</span></a>
via the new <span id="index-20"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHON_COLORS"><code><span>PYTHON_COLORS</span></code></a> environment variable as well as
the canonical <a href="https://no-color.org/"><code><span>NO_COLOR</span></code></a> and <a href="https://force-color.org/"><code><span>FORCE_COLOR</span></code></a> environment variables.
(Contributed by Pablo Galindo Salgado in <a href="https://github.com/python/cpython/issues/112730">gh-112730</a>.)</p></li>
</ul>
<ul>
<li><p>A common mistake is to write a script with the same name as a
standard library module. When this results in errors, we now
display a more helpful error message:</p>
<div><pre><span></span><span>$ python random.py</span>
<span>Traceback (most recent call last):</span>
  File <span>"/home/me/random.py"</span>, line <span>1</span>, in <span>&lt;module&gt;</span>
<span>    </span><span>import</span> <span>random</span>
  File <span>"/home/me/random.py"</span>, line <span>3</span>, in <span>&lt;module&gt;</span>
<span>    </span><span>print</span><span>(</span><span>random</span><span>.</span><span>randint</span><span>(</span><span>5</span><span>))</span>
<span>          </span><span>^^^^^^^^^^^^^^</span>
<span>AttributeError</span>: <span>module 'random' has no attribute 'randint' (consider renaming '/home/me/random.py' since it has the same name as the standard library module named 'random' and the import system gives it precedence)</span>
</pre></div>
<p>Similarly, if a script has the same name as a third-party
module that it attempts to import and this results in errors,
we also display a more helpful error message:</p>
<div><pre><span></span><span>$ python numpy.py</span>
<span>Traceback (most recent call last):</span>
  File <span>"/home/me/numpy.py"</span>, line <span>1</span>, in <span>&lt;module&gt;</span>
<span>    </span><span>import</span> <span>numpy</span> <span>as</span> <span>np</span>
  File <span>"/home/me/numpy.py"</span>, line <span>3</span>, in <span>&lt;module&gt;</span>
<span>    </span><span>np</span><span>.</span><span>array</span><span>([</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>])</span>
<span>    </span><span>^^^^^^^^</span>
<span>AttributeError</span>: <span>module 'numpy' has no attribute 'array' (consider renaming '/home/me/numpy.py' if it has the same name as a third-party module you intended to import)</span>
</pre></div>
<p>(Contributed by Shantanu Jain in <a href="https://github.com/python/cpython/issues/95754">gh-95754</a>.)</p>
</li>
<li><p>The error message now tries to suggest the correct keyword argument
when an incorrect keyword argument is passed to a function.</p>
<div><pre><span></span><span>&gt;&gt;&gt; </span><span>"Better error messages!"</span><span>.</span><span>split</span><span>(</span><span>max_split</span><span>=</span><span>1</span><span>)</span>
<span>Traceback (most recent call last):</span>
  File <span>"&lt;python-input-0&gt;"</span>, line <span>1</span>, in <span>&lt;module&gt;</span>
<span>    </span><span>"Better error messages!"</span><span>.</span><span>split</span><span>(</span><span>max_split</span><span>=</span><span>1</span><span>)</span>
<span>    </span><span>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^</span>
<span>TypeError</span>: <span>split() got an unexpected keyword argument 'max_split'. Did you mean 'maxsplit'?</span>
</pre></div>
<p>(Contributed by Pablo Galindo Salgado and Shantanu Jain in <a href="https://github.com/python/cpython/issues/107944">gh-107944</a>.)</p>
</li>
</ul>
</section>
<section id="free-threaded-cpython">
<span id="whatsnew313-free-threaded-cpython"></span><h3>Free-threaded CPython<a href="#free-threaded-cpython" title="Link to this heading">¶</a></h3>
<p>CPython now has experimental support for running in a free-threaded mode,
with the <a href="https://docs.python.org/3.13/glossary.html#term-global-interpreter-lock"><span>global interpreter lock</span></a> (GIL) disabled.
This is an experimental feature and therefore is not enabled by default.
The free-threaded mode requires a different executable,
usually called <code><span>python3.13t</span></code> or <code><span>python3.13t.exe</span></code>.
Pre-built binaries marked as <em>free-threaded</em> can be installed as part of
the official <a href="https://docs.python.org/3.13/using/windows.html#install-freethreaded-windows"><span>Windows</span></a>
and <a href="https://docs.python.org/3.13/using/mac.html#install-freethreaded-macos"><span>macOS</span></a> installers,
or CPython can be built from source with the <a href="https://docs.python.org/3.13/using/configure.html#cmdoption-disable-gil"><code><span>--disable-gil</span></code></a> option.</p>
<p>Free-threaded execution allows for full utilization of the available
processing power by running threads in parallel on available CPU cores.
While not all software will benefit from this automatically, programs
designed with threading in mind will run faster on multi-core hardware.
<strong>The free-threaded mode is experimental</strong> and work is ongoing to improve it:
expect some bugs and a substantial single-threaded performance hit.
Free-threaded builds of CPython support optionally running with the GIL
enabled at runtime using the environment variable <span id="index-21"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHON_GIL"><code><span>PYTHON_GIL</span></code></a> or
the command-line option <a href="https://docs.python.org/3.13/using/cmdline.html#cmdoption-X"><code><span>-X</span> <span>gil=1</span></code></a>.</p>
<p>To check if the current interpreter supports free-threading, <a href="https://docs.python.org/3.13/using/cmdline.html#cmdoption-V"><code><span>python</span> <span>-VV</span></code></a>
and <a href="https://docs.python.org/3.13/library/sys.html#sys.version" title="sys.version"><code><span>sys.version</span></code></a> contain “experimental free-threading build”.
The new <code><span>sys._is_gil_enabled()</span></code> function can be used to check whether
the GIL is actually disabled in the running process.</p>
<p>C-API extension modules need to be built specifically for the free-threaded
build. Extensions that support running with the <a href="https://docs.python.org/3.13/glossary.html#term-GIL"><span>GIL</span></a> disabled should
use the <a href="https://docs.python.org/3.13/c-api/module.html#c.Py_mod_gil" title="Py_mod_gil"><code><span>Py_mod_gil</span></code></a> slot. Extensions using single-phase init should
use <a href="https://docs.python.org/3.13/c-api/module.html#c.PyUnstable_Module_SetGIL" title="PyUnstable_Module_SetGIL"><code><span>PyUnstable_Module_SetGIL()</span></code></a> to indicate whether they support
running with the GIL disabled. Importing C extensions that don’t use these
mechanisms will cause the GIL to be enabled, unless the GIL was explicitly
disabled with the <span id="index-22"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHON_GIL"><code><span>PYTHON_GIL</span></code></a> environment variable or the
<a href="https://docs.python.org/3.13/using/cmdline.html#cmdoption-X"><code><span>-X</span> <span>gil=0</span></code></a> option.
pip 24.1 or newer is required to install packages with C extensions in the
free-threaded build.</p>
<p>This work was made possible thanks to many individuals and
organizations, including the large community of contributors to Python
and third-party projects to test and enable free-threading support.
Notable contributors include:
Sam Gross, Ken Jin, Donghee Na, Itamar Oren, Matt Page, Brett Simmers,
Dino Viehland, Carl Meyer, Nathan Goldbaum, Ralf Gommers,
Lysandros Nikolaou, and many others.
Many of these contributors are employed by Meta, which has
provided significant engineering resources to support this project.</p>

</section>
<section id="an-experimental-just-in-time-jit-compiler">
<span id="whatsnew313-jit-compiler"></span><h3>An experimental just-in-time (JIT) compiler<a href="#an-experimental-just-in-time-jit-compiler" title="Link to this heading">¶</a></h3>
<p>When CPython is configured and built using
the <code><span>--enable-experimental-jit</span></code> option,
a just-in-time (JIT) compiler is added which may speed up some Python programs.
On Windows, use <code><span>PCbuild/build.bat</span> <span>--experimental-jit</span></code> to enable the JIT
or <code><span>--experimental-jit-interpreter</span></code> to enable the Tier 2 interpreter.
Build requirements and further supporting information <a href="https://github.com/python/cpython/blob/main/Tools/jit/README.md">are contained at</a>
<code><span>Tools/jit/README.md</span></code>.</p>
<p>The <code><span>--enable-experimental-jit</span></code> option takes these (optional) values,
defaulting to <code><span>yes</span></code> if <code><span>--enable-experimental-jit</span></code> is present
without the optional value.</p>
<ul>
<li><p><code><span>no</span></code>: Disable the entire Tier 2 and JIT pipeline.</p></li>
<li><p><code><span>yes</span></code>: Enable the JIT.
To disable the JIT at runtime, pass the environment variable <code><span>PYTHON_JIT=0</span></code>.</p></li>
<li><p><code><span>yes-off</span></code>: Build the JIT but disable it by default.
To enable the JIT at runtime, pass the environment variable <code><span>PYTHON_JIT=1</span></code>.</p></li>
<li><p><code><span>interpreter</span></code>: Enable the Tier 2 interpreter but disable the JIT.
The interpreter can be disabled by running with <code><span>PYTHON_JIT=0</span></code>.</p></li>
</ul>
<p>The internal architecture is roughly as follows:</p>
<ul>
<li><p>We start with specialized <em>Tier 1 bytecode</em>.
See <a href="https://docs.python.org/3.13/whatsnew/3.11.html#whatsnew311-pep659"><span>What’s new in 3.11</span></a> for details.</p></li>
<li><p>When the Tier 1 bytecode gets hot enough, it gets translated
to a new purely internal intermediate representation (IR),
called the <em>Tier 2 IR</em>, and sometimes referred to as micro-ops (“uops”).</p></li>
<li><p>The Tier 2 IR uses the same stack-based virtual machine as Tier 1,
but the instruction format is better suited to translation to machine code.</p></li>
<li><p>We have several optimization passes for Tier 2 IR, which are applied
before it is interpreted or translated to machine code.</p></li>
<li><p>There is a Tier 2 interpreter, but it is mostly intended for debugging
the earlier stages of the optimization pipeline.
The Tier 2 interpreter can be enabled by configuring Python
with <code><span>--enable-experimental-jit=interpreter</span></code>.</p></li>
<li><p>When the JIT is enabled, the optimized
Tier 2 IR is translated to machine code, which is then executed.</p></li>
<li><p>The machine code translation process uses a technique called
<em>copy-and-patch</em>. It has no runtime dependencies, but there is a new
build-time dependency on LLVM.</p></li>
</ul>

<p>(JIT by Brandt Bucher, inspired by a paper by Haoran Xu and Fredrik Kjolstad.
Tier 2 IR by Mark Shannon and Guido van Rossum.
Tier 2 optimizer by Ken Jin.)</p>
</section>
<section id="defined-mutation-semantics-for-locals">
<span id="whatsnew313-locals-semantics"></span><h3>Defined mutation semantics for <a href="https://docs.python.org/3.13/library/functions.html#locals" title="locals"><code><span>locals()</span></code></a><a href="#defined-mutation-semantics-for-locals" title="Link to this heading">¶</a></h3>
<p>Historically, the expected result of mutating the return value of
<a href="https://docs.python.org/3.13/library/functions.html#locals" title="locals"><code><span>locals()</span></code></a> has been left to individual Python implementations to define.
Starting from Python 3.13, <span id="index-25"></span><a href="https://peps.python.org/pep-0667/"><strong>PEP 667</strong></a> standardises
the historical behavior of CPython for most code execution scopes,
but changes <a href="https://docs.python.org/3.13/glossary.html#term-optimized-scope"><span>optimized scopes</span></a>
(functions, generators, coroutines, comprehensions, and generator expressions)
to explicitly return independent snapshots of the currently assigned local
variables, including locally referenced nonlocal variables captured in closures.</p>
<p>This change to the semantics of <a href="https://docs.python.org/3.13/library/functions.html#locals" title="locals"><code><span>locals()</span></code></a> in optimized scopes also
affects the default behavior of code execution functions that implicitly
target <code><span>locals()</span></code> if no explicit namespace is provided
(such as <a href="https://docs.python.org/3.13/library/functions.html#exec" title="exec"><code><span>exec()</span></code></a> and <a href="https://docs.python.org/3.13/library/functions.html#eval" title="eval"><code><span>eval()</span></code></a>).
In previous versions, whether or not changes could be accessed by calling
<code><span>locals()</span></code> after calling the code execution function was
implementation-dependent. In CPython specifically, such code would typically
appear to work as desired, but could sometimes fail in optimized scopes based
on other code (including debuggers and code execution tracing tools)
potentially resetting the shared snapshot in that scope.
Now, the code will always run against an independent snapshot of
the local variables in optimized scopes, and hence the changes will never
be visible in subsequent calls to <code><span>locals()</span></code>.
To access the changes made in these cases, an explicit namespace reference
must now be passed to the relevant function.
Alternatively, it may make sense to update affected code to use a higher level
code execution API that returns the resulting code execution namespace
(e.g. <a href="https://docs.python.org/3.13/library/runpy.html#runpy.run_path" title="runpy.run_path"><code><span>runpy.run_path()</span></code></a> when executing Python files from disk).</p>
<p>To ensure debuggers and similar tools can reliably update local variables in
scopes affected by this change, <a href="https://docs.python.org/3.13/reference/datamodel.html#frame.f_locals" title="frame.f_locals"><code><span>FrameType.f_locals</span></code></a> now
returns a write-through proxy to the frame’s local and locally referenced
nonlocal variables in these scopes, rather than returning an inconsistently
updated shared <code><span>dict</span></code> instance with undefined runtime semantics.</p>
<p>See <span id="index-26"></span><a href="https://peps.python.org/pep-0667/"><strong>PEP 667</strong></a> for more details, including related C API changes
and deprecations. Porting notes are also provided below for the affected
<a href="#pep667-porting-notes-py"><span>Python APIs</span></a> and <a href="#pep667-porting-notes-c"><span>C APIs</span></a>.</p>
<p>(PEP and implementation contributed by Mark Shannon and Tian Gao in
<a href="https://github.com/python/cpython/issues/74929">gh-74929</a>. Documentation updates provided by Guido van Rossum and
Alyssa Coghlan.)</p>
</section>
<section id="support-for-mobile-platforms">
<span id="whatsnew313-platform-support"></span><h3>Support for mobile platforms<a href="#support-for-mobile-platforms" title="Link to this heading">¶</a></h3>
<p><span id="index-27"></span><a href="https://peps.python.org/pep-0730/"><strong>PEP 730</strong></a>: iOS is now a <span id="index-28"></span><a href="https://peps.python.org/pep-0011/"><strong>PEP 11</strong></a> supported platform, with the
<code><span>arm64-apple-ios</span></code> and <code><span>arm64-apple-ios-simulator</span></code> targets at tier 3
(iPhone and iPad devices released after 2013 and the Xcode iOS simulator
running on Apple silicon hardware, respectively).
<code><span>x86_64-apple-ios-simulator</span></code>
(the Xcode iOS simulator running on older <code><span>x86_64</span></code> hardware)
is not a tier 3 supported platform, but will have best-effort support.
(PEP written and implementation contributed by Russell Keith-Magee in
<a href="https://github.com/python/cpython/issues/114099">gh-114099</a>.)</p>
<p><span id="index-29"></span><a href="https://peps.python.org/pep-0738/"><strong>PEP 738</strong></a>: Android is now a <span id="index-30"></span><a href="https://peps.python.org/pep-0011/"><strong>PEP 11</strong></a> supported platform, with the
<code><span>aarch64-linux-android</span></code> and <code><span>x86_64-linux-android</span></code> targets at tier 3.
The 32-bit targets <code><span>arm-linux-androideabi</span></code> and <code><span>i686-linux-android</span></code>
are not tier 3 supported platforms, but will have best-effort support.
(PEP written and implementation contributed by Malcolm Smith in
<a href="https://github.com/python/cpython/issues/116622">gh-116622</a>.)</p>

</section>
</section>
<section id="other-language-changes">
<h2>Other Language Changes<a href="#other-language-changes" title="Link to this heading">¶</a></h2>
<ul>
<li><p>The compiler now strips common leading whitespace
from every line in a docstring.
This reduces the size of the <a href="https://docs.python.org/3.13/glossary.html#term-bytecode"><span>bytecode cache</span></a>
(such as <code><span>.pyc</span></code> files), with reductions in file size of around 5%,
for example in <code><span>sqlalchemy.orm.session</span></code> from SQLAlchemy 2.0.
This change affects tools that use docstrings, such as <a href="https://docs.python.org/3.13/library/doctest.html#module-doctest" title="doctest: Test pieces of code within docstrings."><code><span>doctest</span></code></a>.</p>
<div><pre><span></span><span>&gt;&gt;&gt; </span><span>def</span> <span>spam</span><span>():</span>
<span>... </span><span>    </span><span>"""</span>
<span>... </span><span>        This is a docstring with</span>
<span>... </span><span>          leading whitespace.</span>
<span>...</span>
<span>... </span><span>        It even has multiple paragraphs!</span>
<span>... </span><span>    """</span>
<span>...</span>
<span>&gt;&gt;&gt; </span><span>spam</span><span>.</span><span>__doc__</span>
<span>'\nThis is a docstring with\n  leading whitespace.\n\nIt even has multiple paragraphs!\n'</span>
</pre></div>
<p>(Contributed by Inada Naoki in <a href="https://github.com/python/cpython/issues/81283">gh-81283</a>.)</p>
</li>
<li><p><a href="https://docs.python.org/3.13/reference/executionmodel.html#annotation-scopes"><span>Annotation scopes</span></a> within class scopes
can now contain lambdas and comprehensions.
Comprehensions that are located within class scopes
are not inlined into their parent scope.</p>
<div><pre><span></span><span>class</span> <span>C</span><span>[</span><span>T</span><span>]:</span>
    <span>type</span> <span>Alias</span> <span>=</span> <span>lambda</span><span>:</span> <span>T</span>
</pre></div>
<p>(Contributed by Jelle Zijlstra in <a href="https://github.com/python/cpython/issues/109118">gh-109118</a> and <a href="https://github.com/python/cpython/issues/118160">gh-118160</a>.)</p>
</li>
<li><p><a href="https://docs.python.org/3.13/reference/simple_stmts.html#future"><span>Future statements</span></a> are no longer triggered by
relative imports of the <a href="https://docs.python.org/3.13/library/__future__.html#module-__future__" title="__future__: Future statement definitions"><code><span>__future__</span></code></a> module,
meaning that statements of the form <code><span>from</span> <span>.__future__</span> <span>import</span> <span>...</span></code>
are now simply standard relative imports, with no special features activated.
(Contributed by Jeremiah Gabriel Pascual in <a href="https://github.com/python/cpython/issues/118216">gh-118216</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/reference/simple_stmts.html#global"><code><span>global</span></code></a> declarations are now permitted in <a href="https://docs.python.org/3.13/reference/compound_stmts.html#except"><code><span>except</span></code></a> blocks
when that global is used in the <a href="https://docs.python.org/3.13/reference/compound_stmts.html#else"><code><span>else</span></code></a> block.
Previously this raised an erroneous <a href="https://docs.python.org/3.13/library/exceptions.html#SyntaxError" title="SyntaxError"><code><span>SyntaxError</span></code></a>.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/111123">gh-111123</a>.)</p></li>
<li><p>Add <span id="index-33"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHON_FROZEN_MODULES"><code><span>PYTHON_FROZEN_MODULES</span></code></a>, a new environment variable that
determines whether frozen modules are ignored by the import machinery,
equivalent to the <a href="https://docs.python.org/3.13/using/cmdline.html#cmdoption-X"><code><span>-X</span> <span>frozen_modules</span></code></a> command-line option.
(Contributed by Yilei Yang in <a href="https://github.com/python/cpython/issues/111374">gh-111374</a>.)</p></li>
<li><p>Add <a href="https://docs.python.org/3.13/howto/perf_profiling.html#perf-profiling"><span>support for the perf profiler</span></a> working
without <a href="https://en.wikipedia.org/wiki/Call_stack">frame pointers</a> through
the new environment variable <span id="index-34"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHON_PERF_JIT_SUPPORT"><code><span>PYTHON_PERF_JIT_SUPPORT</span></code></a>
and command-line option <a href="https://docs.python.org/3.13/using/cmdline.html#cmdoption-X"><code><span>-X</span> <span>perf_jit</span></code></a>.
(Contributed by Pablo Galindo in <a href="https://github.com/python/cpython/issues/118518">gh-118518</a>.)</p></li>
<li><p>The location of a <code><span>.python_history</span></code> file can be changed via the
new <span id="index-35"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHON_HISTORY"><code><span>PYTHON_HISTORY</span></code></a> environment variable.
(Contributed by Levi Sabah, Zackery Spytz and Hugo van Kemenade
in <a href="https://github.com/python/cpython/issues/73965">gh-73965</a>.)</p></li>
<li><p>Classes have a new <a href="https://docs.python.org/3.13/reference/datamodel.html#type.__static_attributes__" title="type.__static_attributes__"><code><span>__static_attributes__</span></code></a> attribute.
This is populated by the compiler with a tuple of the class’s attribute names
which are assigned through <code><span>self.&lt;name&gt;</span></code> from any function in its body.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/115775">gh-115775</a>.)</p></li>
<li><p>The compiler now creates a <code><span>__firstlineno__</span></code> attribute on classes
with the line number of the first line of the class definition.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/118465">gh-118465</a>.)</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/functions.html#exec" title="exec"><code><span>exec()</span></code></a> and <a href="https://docs.python.org/3.13/library/functions.html#eval" title="eval"><code><span>eval()</span></code></a> builtins now accept
the <em>globals</em> and <em>locals</em> arguments as keywords.
(Contributed by Raphael Gaschignard in <a href="https://github.com/python/cpython/issues/105879">gh-105879</a>)</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/functions.html#compile" title="compile"><code><span>compile()</span></code></a> builtin now accepts a new flag,
<code><span>ast.PyCF_OPTIMIZED_AST</span></code>, which is similar to <code><span>ast.PyCF_ONLY_AST</span></code>
except that the returned AST is optimized according to
the value of the <em>optimize</em> argument.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/108113">gh-108113</a>).</p></li>
<li><p>Add a <a href="https://docs.python.org/3.13/library/functions.html#property.__name__" title="property.__name__"><code><span>__name__</span></code></a> attribute on <a href="https://docs.python.org/3.13/library/functions.html#property" title="property"><code><span>property</span></code></a> objects.
(Contributed by Eugene Toder in <a href="https://github.com/python/cpython/issues/101860">gh-101860</a>.)</p></li>
<li><p>Add <a href="https://docs.python.org/3.13/library/exceptions.html#PythonFinalizationError" title="PythonFinalizationError"><code><span>PythonFinalizationError</span></code></a>, a new exception derived from
<a href="https://docs.python.org/3.13/library/exceptions.html#RuntimeError" title="RuntimeError"><code><span>RuntimeError</span></code></a> and used to signal when operations are blocked
during <a href="https://docs.python.org/3.13/glossary.html#term-interpreter-shutdown"><span>finalization</span></a>.
The following callables now raise <code><span>PythonFinalizationError</span></code>,
instead of <a href="https://docs.python.org/3.13/library/exceptions.html#RuntimeError" title="RuntimeError"><code><span>RuntimeError</span></code></a>:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/_thread.html#thread.start_new_thread" title="_thread.start_new_thread"><code><span>_thread.start_new_thread()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/os.html#os.fork" title="os.fork"><code><span>os.fork()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/os.html#os.forkpty" title="os.forkpty"><code><span>os.forkpty()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/subprocess.html#subprocess.Popen" title="subprocess.Popen"><code><span>subprocess.Popen</span></code></a></p></li>
</ul>
<p>(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/114570">gh-114570</a>.)</p>
</li>
<li><p>Allow the <em>count</em> argument of <a href="https://docs.python.org/3.13/library/stdtypes.html#str.replace" title="str.replace"><code><span>str.replace()</span></code></a> to be a keyword.
(Contributed by Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/106487">gh-106487</a>.)</p></li>
<li><p>Many functions now emit a warning if a boolean value is passed as
a file descriptor argument.
This can help catch some errors earlier.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/82626">gh-82626</a>.)</p></li>
<li><p>Added <code><span>name</span></code> and <code><span>mode</span></code> attributes
for compressed and archived file-like objects in
the <a href="https://docs.python.org/3.13/library/bz2.html#module-bz2" title="bz2: Interfaces for bzip2 compression and decompression."><code><span>bz2</span></code></a>, <a href="https://docs.python.org/3.13/library/lzma.html#module-lzma" title="lzma: A Python wrapper for the liblzma compression library."><code><span>lzma</span></code></a>, <a href="https://docs.python.org/3.13/library/tarfile.html#module-tarfile" title="tarfile: Read and write tar-format archive files."><code><span>tarfile</span></code></a>, and <a href="https://docs.python.org/3.13/library/zipfile.html#module-zipfile" title="zipfile: Read and write ZIP-format archive files."><code><span>zipfile</span></code></a> modules.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/115961">gh-115961</a>.)</p></li>
</ul>
</section>
<section id="new-modules">
<h2>New Modules<a href="#new-modules" title="Link to this heading">¶</a></h2>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/dbm.html#module-dbm.sqlite3" title="dbm.sqlite3: SQLite backend for dbm (All)"><code><span>dbm.sqlite3</span></code></a>: An SQLite backend for <a href="https://docs.python.org/3.13/library/dbm.html#module-dbm" title="dbm: Interfaces to various Unix &quot;database&quot; formats."><code><span>dbm</span></code></a>.
(Contributed by Raymond Hettinger and Erlend E. Aasland in <a href="https://github.com/python/cpython/issues/100414">gh-100414</a>.)</p></li>
</ul>
</section>
<section id="improved-modules">
<h2>Improved Modules<a href="#improved-modules" title="Link to this heading">¶</a></h2>
<section id="argparse">
<h3>argparse<a href="#argparse" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add the <em>deprecated</em> parameter to the
<a href="https://docs.python.org/3.13/library/argparse.html#argparse.ArgumentParser.add_argument" title="argparse.ArgumentParser.add_argument"><code><span>add_argument()</span></code></a>
and <code><span>add_parser()</span></code> methods, to enable deprecating
command-line options, positional arguments, and subcommands.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/83648">gh-83648</a>.)</p></li>
</ul>
</section>
<section id="array">
<h3>array<a href="#array" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add the <code><span>'w'</span></code> type code (<code><span>Py_UCS4</span></code>) for Unicode characters.
It should be used instead of the deprecated <code><span>'u'</span></code> type code.
(Contributed by Inada Naoki in <a href="https://github.com/python/cpython/issues/80480">gh-80480</a>.)</p></li>
<li><p>Register <a href="https://docs.python.org/3.13/library/array.html#array.array" title="array.array"><code><span>array.array</span></code></a> as a <a href="https://docs.python.org/3.13/library/collections.abc.html#collections.abc.MutableSequence" title="collections.abc.MutableSequence"><code><span>MutableSequence</span></code></a>
by implementing the <a href="https://docs.python.org/3.13/library/array.html#array.array.clear" title="array.array.clear"><code><span>clear()</span></code></a> method.
(Contributed by Mike Zimin in <a href="https://github.com/python/cpython/issues/114894">gh-114894</a>.)</p></li>
</ul>
</section>
<section id="ast">
<h3>ast<a href="#ast" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The constructors of node types in the <a href="https://docs.python.org/3.13/library/ast.html#module-ast" title="ast: Abstract Syntax Tree classes and manipulation."><code><span>ast</span></code></a> module are now
stricter in the arguments they accept,
with more intuitive behavior when arguments are omitted.</p>
<p>If an optional field on an AST node is not included as an argument when
constructing an instance, the field will now be set to <code><span>None</span></code>. Similarly,
if a list field is omitted, that field will now be set to an empty list,
and if an <code><span>expr_context</span></code> field is omitted, it defaults to
<a href="https://docs.python.org/3.13/library/ast.html#ast.Load" title="ast.Load"><code><span>Load()</span></code></a>.
(Previously, in all cases, the attribute would be missing on the newly
constructed AST node instance.)</p>
<p>In all other cases, where a required argument is omitted,
the node constructor will emit a <a href="https://docs.python.org/3.13/library/exceptions.html#DeprecationWarning" title="DeprecationWarning"><code><span>DeprecationWarning</span></code></a>.
This will raise an exception in Python 3.15.
Similarly, passing a keyword argument to the constructor
that does not map to a field on the AST node is now deprecated,
and will raise an exception in Python 3.15.</p>
<p>These changes do not apply to user-defined subclasses of <a href="https://docs.python.org/3.13/library/ast.html#ast.AST" title="ast.AST"><code><span>ast.AST</span></code></a>
unless the class opts in to the new behavior
by defining the <a href="https://docs.python.org/3.13/library/ast.html#ast.AST._field_types" title="ast.AST._field_types"><code><span>AST._field_types</span></code></a> mapping.</p>
<p>(Contributed by Jelle Zijlstra in <a href="https://github.com/python/cpython/issues/105858">gh-105858</a>, <a href="https://github.com/python/cpython/issues/117486">gh-117486</a>, and <a href="https://github.com/python/cpython/issues/118851">gh-118851</a>.)</p>
</li>
<li><p><a href="https://docs.python.org/3.13/library/ast.html#ast.parse" title="ast.parse"><code><span>ast.parse()</span></code></a> now accepts an optional argument <em>optimize</em>
which is passed on to <a href="https://docs.python.org/3.13/library/functions.html#compile" title="compile"><code><span>compile()</span></code></a>.
This makes it possible to obtain an optimized AST.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/108113">gh-108113</a>.)</p></li>
</ul>
</section>
<section id="asyncio">
<h3>asyncio<a href="#asyncio" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/asyncio-task.html#asyncio.as_completed" title="asyncio.as_completed"><code><span>asyncio.as_completed()</span></code></a> now returns an object that is both an
<a href="https://docs.python.org/3.13/glossary.html#term-asynchronous-iterator"><span>asynchronous iterator</span></a> and a plain <a href="https://docs.python.org/3.13/glossary.html#term-iterator"><span>iterator</span></a>
of <a href="https://docs.python.org/3.13/glossary.html#term-awaitable"><span>awaitables</span></a>.
The awaitables yielded by asynchronous iteration include original task
or future objects that were passed in,
making it easier to associate results with the tasks being completed.
(Contributed by Justin Arthur in <a href="https://github.com/python/cpython/issues/77714">gh-77714</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/asyncio-eventloop.html#asyncio.loop.create_unix_server" title="asyncio.loop.create_unix_server"><code><span>asyncio.loop.create_unix_server()</span></code></a> will now automatically remove
the Unix socket when the server is closed.
(Contributed by Pierre Ossman in <a href="https://github.com/python/cpython/issues/111246">gh-111246</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/asyncio-protocol.html#asyncio.DatagramTransport.sendto" title="asyncio.DatagramTransport.sendto"><code><span>DatagramTransport.sendto()</span></code></a> will now send zero-length
datagrams if called with an empty bytes object.
The transport flow control also now accounts for the datagram header
when calculating the buffer size.
(Contributed by Jamie Phan in <a href="https://github.com/python/cpython/issues/115199">gh-115199</a>.)</p></li>
<li><p>Add <a href="https://docs.python.org/3.13/library/asyncio-queue.html#asyncio.Queue.shutdown" title="asyncio.Queue.shutdown"><code><span>Queue.shutdown</span></code></a>
and <a href="https://docs.python.org/3.13/library/asyncio-queue.html#asyncio.QueueShutDown" title="asyncio.QueueShutDown"><code><span>QueueShutDown</span></code></a> to manage queue termination.
(Contributed by Laurie Opperman and Yves Duprat in <a href="https://github.com/python/cpython/issues/104228">gh-104228</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/library/asyncio-eventloop.html#asyncio.Server.close_clients" title="asyncio.Server.close_clients"><code><span>Server.close_clients()</span></code></a> and <a href="https://docs.python.org/3.13/library/asyncio-eventloop.html#asyncio.Server.abort_clients" title="asyncio.Server.abort_clients"><code><span>Server.abort_clients()</span></code></a>
methods, which more forcefully close an asyncio server.
(Contributed by Pierre Ossman in <a href="https://github.com/python/cpython/issues/113538">gh-113538</a>.)</p></li>
<li><p>Accept a tuple of separators in <a href="https://docs.python.org/3.13/library/asyncio-stream.html#asyncio.StreamReader.readuntil" title="asyncio.StreamReader.readuntil"><code><span>StreamReader.readuntil()</span></code></a>,
stopping when any one of them is encountered.
(Contributed by Bruce Merry in <a href="https://github.com/python/cpython/issues/81322">gh-81322</a>.)</p></li>
<li><p>Improve the behavior of <a href="https://docs.python.org/3.13/library/asyncio-task.html#asyncio.TaskGroup" title="asyncio.TaskGroup"><code><span>TaskGroup</span></code></a> when
an external cancellation collides with an internal cancellation.
For example, when two task groups are nested
and both experience an exception in a child task simultaneously,
it was possible that the outer task group would hang,
because its internal cancellation was swallowed by the inner task group.</p>
<p>In the case where a task group is cancelled externally
and also must raise an <a href="https://docs.python.org/3.13/library/exceptions.html#ExceptionGroup" title="ExceptionGroup"><code><span>ExceptionGroup</span></code></a>,
it will now call the parent task’s <a href="https://docs.python.org/3.13/library/asyncio-task.html#asyncio.Task.cancel" title="asyncio.Task.cancel"><code><span>cancel()</span></code></a> method.
This ensures that a <a href="https://docs.python.org/3.13/library/asyncio-exceptions.html#asyncio.CancelledError" title="asyncio.CancelledError"><code><span>CancelledError</span></code></a> will be raised
at the next <a href="https://docs.python.org/3.13/reference/expressions.html#await"><code><span>await</span></code></a>, so the cancellation is not lost.</p>
<p>An added benefit of these changes is that task groups now preserve
the cancellation count (<a href="https://docs.python.org/3.13/library/asyncio-task.html#asyncio.Task.cancelling" title="asyncio.Task.cancelling"><code><span>cancelling()</span></code></a>).</p>
<p>In order to handle some corner cases, <a href="https://docs.python.org/3.13/library/asyncio-task.html#asyncio.Task.uncancel" title="asyncio.Task.uncancel"><code><span>uncancel()</span></code></a> may now
reset the undocumented <code><span>_must_cancel</span></code> flag
when the cancellation count reaches zero.</p>
<p>(Inspired by an issue reported by Arthur Tacca in <a href="https://github.com/python/cpython/issues/116720">gh-116720</a>.)</p>
</li>
<li><p>When <a href="https://docs.python.org/3.13/library/asyncio-task.html#asyncio.TaskGroup.create_task" title="asyncio.TaskGroup.create_task"><code><span>TaskGroup.create_task()</span></code></a> is called on an inactive
<a href="https://docs.python.org/3.13/library/asyncio-task.html#asyncio.TaskGroup" title="asyncio.TaskGroup"><code><span>TaskGroup</span></code></a>, the given coroutine will be closed (which
prevents a <a href="https://docs.python.org/3.13/library/exceptions.html#RuntimeWarning" title="RuntimeWarning"><code><span>RuntimeWarning</span></code></a> about the given coroutine being
never awaited).
(Contributed by Arthur Tacca and Jason Zhang in <a href="https://github.com/python/cpython/issues/115957">gh-115957</a>.)</p></li>
</ul>
</section>
<section id="base64">
<h3>base64<a href="#base64" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add <a href="https://docs.python.org/3.13/library/base64.html#base64.z85encode" title="base64.z85encode"><code><span>z85encode()</span></code></a> and <a href="https://docs.python.org/3.13/library/base64.html#base64.z85decode" title="base64.z85decode"><code><span>z85decode()</span></code></a> functions
for encoding <a href="https://docs.python.org/3.13/library/stdtypes.html#bytes" title="bytes"><code><span>bytes</span></code></a> as <a href="https://rfc.zeromq.org/spec/32/">Z85 data</a>
and decoding Z85-encoded data to <code><span>bytes</span></code>.
(Contributed by Matan Perelman in <a href="https://github.com/python/cpython/issues/75299">gh-75299</a>.)</p>
</li>
</ul>
</section>
<section id="compileall">
<h3>compileall<a href="#compileall" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The default number of worker threads and processes is now selected using
<a href="https://docs.python.org/3.13/library/os.html#os.process_cpu_count" title="os.process_cpu_count"><code><span>os.process_cpu_count()</span></code></a> instead of <a href="https://docs.python.org/3.13/library/os.html#os.cpu_count" title="os.cpu_count"><code><span>os.cpu_count()</span></code></a>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/109649">gh-109649</a>.)</p></li>
</ul>
</section>
<section id="concurrent-futures">
<h3>concurrent.futures<a href="#concurrent-futures" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The default number of worker threads and processes is now selected using
<a href="https://docs.python.org/3.13/library/os.html#os.process_cpu_count" title="os.process_cpu_count"><code><span>os.process_cpu_count()</span></code></a> instead of <a href="https://docs.python.org/3.13/library/os.html#os.cpu_count" title="os.cpu_count"><code><span>os.cpu_count()</span></code></a>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/109649">gh-109649</a>.)</p></li>
</ul>
</section>
<section id="configparser">
<h3>configparser<a href="#configparser" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/configparser.html#configparser.ConfigParser" title="configparser.ConfigParser"><code><span>ConfigParser</span></code></a> now has support for unnamed sections,
which allows for top-level key-value pairs.
This can be enabled with the new <em>allow_unnamed_section</em> parameter.
(Contributed by Pedro Sousa Lacerda in <a href="https://github.com/python/cpython/issues/66449">gh-66449</a>.)</p></li>
</ul>
</section>
<section id="copy">
<h3>copy<a href="#copy" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The new <a href="https://docs.python.org/3.13/library/copy.html#copy.replace" title="copy.replace"><code><span>replace()</span></code></a> function and the <a href="https://docs.python.org/3.13/library/copy.html#object.__replace__" title="object.__replace__"><code><span>replace</span> <span>protocol</span></code></a> make creating modified copies of objects much simpler.
This is especially useful when working with immutable objects.
The following types support the <a href="https://docs.python.org/3.13/library/copy.html#copy.replace" title="copy.replace"><code><span>replace()</span></code></a> function
and implement the replace protocol:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/collections.html#collections.namedtuple" title="collections.namedtuple"><code><span>collections.namedtuple()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/dataclasses.html#dataclasses.dataclass" title="dataclasses.dataclass"><code><span>dataclasses.dataclass</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/datetime.html#datetime.datetime" title="datetime.datetime"><code><span>datetime.datetime</span></code></a>, <a href="https://docs.python.org/3.13/library/datetime.html#datetime.date" title="datetime.date"><code><span>datetime.date</span></code></a>, <a href="https://docs.python.org/3.13/library/datetime.html#datetime.time" title="datetime.time"><code><span>datetime.time</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/inspect.html#inspect.Signature" title="inspect.Signature"><code><span>inspect.Signature</span></code></a>, <a href="https://docs.python.org/3.13/library/inspect.html#inspect.Parameter" title="inspect.Parameter"><code><span>inspect.Parameter</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/types.html#types.SimpleNamespace" title="types.SimpleNamespace"><code><span>types.SimpleNamespace</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/reference/datamodel.html#code-objects"><span>code objects</span></a></p></li>
</ul>
<p>Any user-defined class can also support <a href="https://docs.python.org/3.13/library/copy.html#copy.replace" title="copy.replace"><code><span>copy.replace()</span></code></a> by defining
the <a href="https://docs.python.org/3.13/library/copy.html#object.__replace__" title="object.__replace__"><code><span>__replace__()</span></code></a> method.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/108751">gh-108751</a>.)</p>
</li>
</ul>
</section>
<section id="ctypes">
<h3>ctypes<a href="#ctypes" title="Link to this heading">¶</a></h3>
<ul>
<li><p>As a consequence of necessary internal refactoring, initialization of
internal metaclasses now happens in <code><span>__init__</span></code> rather
than in <code><span>__new__</span></code>. This affects projects that subclass these internal
metaclasses to provide custom initialization.
Generally:</p>
<ul>
<li><p>Custom logic that was done in <code><span>__new__</span></code> after calling <code><span>super().__new__</span></code>
should be moved to <code><span>__init__</span></code>.</p></li>
<li><p>To create a class, call the metaclass, not only the metaclass’s
<code><span>__new__</span></code> method.</p></li>
</ul>
<p>See <a href="https://github.com/python/cpython/issues/124520">gh-124520</a> for discussion and links to changes in some affected
projects.</p>
</li>
</ul>
</section>
<section id="dbm">
<h3>dbm<a href="#dbm" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add <a href="https://docs.python.org/3.13/library/dbm.html#module-dbm.sqlite3" title="dbm.sqlite3: SQLite backend for dbm (All)"><code><span>dbm.sqlite3</span></code></a>, a new module which implements an SQLite backend,
and make it the default <code><span>dbm</span></code> backend.
(Contributed by Raymond Hettinger and Erlend E. Aasland in <a href="https://github.com/python/cpython/issues/100414">gh-100414</a>.)</p></li>
<li><p>Allow removing all items from the database through
the new <a href="https://docs.python.org/3.13/library/dbm.html#dbm.gnu.gdbm.clear" title="dbm.gnu.gdbm.clear"><code><span>gdbm.clear()</span></code></a> and <a href="https://docs.python.org/3.13/library/dbm.html#dbm.ndbm.ndbm.clear" title="dbm.ndbm.ndbm.clear"><code><span>ndbm.clear()</span></code></a> methods.
(Contributed by Donghee Na in <a href="https://github.com/python/cpython/issues/107122">gh-107122</a>.)</p></li>
</ul>
</section>
<section id="dis">
<h3>dis<a href="#dis" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Change the output of <a href="https://docs.python.org/3.13/library/dis.html#module-dis" title="dis: Disassembler for Python bytecode."><code><span>dis</span></code></a> module functions to show logical
labels for jump targets and exception handlers, rather than offsets.
The offsets can be added with the new
<a href="https://docs.python.org/3.13/library/dis.html#cmdoption-dis-O"><code><span>-O</span></code></a> command-line option
or the <em>show_offsets</em> argument.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/112137">gh-112137</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/dis.html#dis.get_instructions" title="dis.get_instructions"><code><span>get_instructions()</span></code></a> no longer represents cache entries
as separate instructions.
Instead, it returns them as part of the <a href="https://docs.python.org/3.13/library/dis.html#dis.Instruction" title="dis.Instruction"><code><span>Instruction</span></code></a>,
in the new <em>cache_info</em> field.
The <em>show_caches</em> argument to <a href="https://docs.python.org/3.13/library/dis.html#dis.get_instructions" title="dis.get_instructions"><code><span>get_instructions()</span></code></a> is deprecated
and no longer has any effect.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/112962">gh-112962</a>.)</p></li>
</ul>
</section>
<section id="doctest">
<span id="whatsnew313-doctest"></span><h3>doctest<a href="#doctest" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/doctest.html#module-doctest" title="doctest: Test pieces of code within docstrings."><code><span>doctest</span></code></a> output is now colored by default.
This can be controlled via the new <span id="index-36"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHON_COLORS"><code><span>PYTHON_COLORS</span></code></a> environment
variable as well as the canonical <a href="https://no-color.org/"><code><span>NO_COLOR</span></code></a>
and <a href="https://force-color.org/"><code><span>FORCE_COLOR</span></code></a> environment variables.
See also <a href="https://docs.python.org/3.13/using/cmdline.html#using-on-controlling-color"><span>Controlling color</span></a>.
(Contributed by Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/117225">gh-117225</a>.)</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/doctest.html#doctest.DocTestRunner.run" title="doctest.DocTestRunner.run"><code><span>DocTestRunner.run()</span></code></a> method now counts the number of skipped tests.
Add the <a href="https://docs.python.org/3.13/library/doctest.html#doctest.DocTestRunner.skips" title="doctest.DocTestRunner.skips"><code><span>DocTestRunner.skips</span></code></a> and <a href="https://docs.python.org/3.13/library/doctest.html#doctest.TestResults.skipped" title="doctest.TestResults.skipped"><code><span>TestResults.skipped</span></code></a> attributes.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/108794">gh-108794</a>.)</p></li>
</ul>
</section>
<section id="email">
<h3>email<a href="#email" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Headers with embedded newlines are now quoted on output.
The <a href="https://docs.python.org/3.13/library/email.generator.html#module-email.generator" title="email.generator: Generate flat text email messages from a message structure."><code><span>generator</span></code></a> will now refuse to serialize (write) headers
that are improperly folded or delimited, such that they would be parsed as
multiple headers or joined with adjacent data.
If you need to turn this safety feature off,
set <a href="https://docs.python.org/3.13/library/email.policy.html#email.policy.Policy.verify_generated_headers" title="email.policy.Policy.verify_generated_headers"><code><span>verify_generated_headers</span></code></a>.
(Contributed by Bas Bloemsaat and Petr Viktorin in <a href="https://github.com/python/cpython/issues/121650">gh-121650</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/email.utils.html#email.utils.getaddresses" title="email.utils.getaddresses"><code><span>getaddresses()</span></code></a> and <a href="https://docs.python.org/3.13/library/email.utils.html#email.utils.parseaddr" title="email.utils.parseaddr"><code><span>parseaddr()</span></code></a> now
return <code><span>('',</span> <span>'')</span></code> pairs in more situations where invalid email addresses
are encountered instead of potentially inaccurate values.
The two functions have a new optional <em>strict</em> parameter (default <code><span>True</span></code>).
To get the old behavior (accepting malformed input), use <code><span>strict=False</span></code>.
<code><span>getattr(email.utils,</span> <span>'supports_strict_parsing',</span> <span>False)</span></code> can be used
to check if the <em>strict</em> parameter is available.
(Contributed by Thomas Dwyer and Victor Stinner for <a href="https://github.com/python/cpython/issues/102988">gh-102988</a> to improve
the <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27043">CVE-2023-27043</a> fix.)</p></li>
</ul>
</section>
<section id="fractions">
<h3>fractions<a href="#fractions" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/fractions.html#fractions.Fraction" title="fractions.Fraction"><code><span>Fraction</span></code></a> objects now support the standard
<a href="https://docs.python.org/3.13/library/string.html#formatspec"><span>format specification mini-language</span></a> rules
for fill, alignment, sign handling, minimum width, and grouping.
(Contributed by Mark Dickinson in <a href="https://github.com/python/cpython/issues/111320">gh-111320</a>.)</p></li>
</ul>
</section>
<section id="glob">
<h3>glob<a href="#glob" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add <a href="https://docs.python.org/3.13/library/glob.html#glob.translate" title="glob.translate"><code><span>translate()</span></code></a>, a function to convert a path specification
with shell-style wildcards to a regular expression.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/72904">gh-72904</a>.)</p></li>
</ul>
</section>
<section id="importlib">
<h3>importlib<a href="#importlib" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The following functions in <a href="https://docs.python.org/3.13/library/importlib.resources.html#module-importlib.resources" title="importlib.resources: Package resource reading, opening, and access"><code><span>importlib.resources</span></code></a> now allow accessing
a directory (or tree) of resources, using multiple positional arguments
(the <em>encoding</em> and <em>errors</em> arguments in the text-reading functions
are now keyword-only):</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/importlib.resources.html#importlib.resources.is_resource" title="importlib.resources.is_resource"><code><span>is_resource()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.resources.html#importlib.resources.open_binary" title="importlib.resources.open_binary"><code><span>open_binary()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.resources.html#importlib.resources.open_text" title="importlib.resources.open_text"><code><span>open_text()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.resources.html#importlib.resources.path" title="importlib.resources.path"><code><span>path()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.resources.html#importlib.resources.read_binary" title="importlib.resources.read_binary"><code><span>read_binary()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.resources.html#importlib.resources.read_text" title="importlib.resources.read_text"><code><span>read_text()</span></code></a></p></li>
</ul>
<p>These functions are no longer deprecated and are not scheduled for removal.
(Contributed by Petr Viktorin in <a href="https://github.com/python/cpython/issues/106532">gh-106532</a>.)</p>
</li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.resources.html#importlib.resources.contents" title="importlib.resources.contents"><code><span>contents()</span></code></a> remains deprecated in favor of
the fully-featured <a href="https://docs.python.org/3.13/library/importlib.resources.abc.html#importlib.resources.abc.Traversable" title="importlib.resources.abc.Traversable"><code><span>Traversable</span></code></a> API.
However, there is now no plan to remove it.
(Contributed by Petr Viktorin in <a href="https://github.com/python/cpython/issues/106532">gh-106532</a>.)</p></li>
</ul>
</section>
<section id="io">
<h3>io<a href="#io" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The <a href="https://docs.python.org/3.13/library/io.html#io.IOBase" title="io.IOBase"><code><span>IOBase</span></code></a> finalizer now logs any errors raised by
the <a href="https://docs.python.org/3.13/library/io.html#io.IOBase.close" title="io.IOBase.close"><code><span>close()</span></code></a> method with <a href="https://docs.python.org/3.13/library/sys.html#sys.unraisablehook" title="sys.unraisablehook"><code><span>sys.unraisablehook</span></code></a>.
Previously, errors were ignored silently by default,
and only logged in <a href="https://docs.python.org/3.13/library/devmode.html#devmode"><span>Python Development Mode</span></a>
or when using a <a href="https://docs.python.org/3.13/using/configure.html#debug-build"><span>Python debug build</span></a>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/62948">gh-62948</a>.)</p></li>
</ul>
</section>
<section id="ipaddress">
<h3>ipaddress<a href="#ipaddress" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add the <a href="https://docs.python.org/3.13/library/ipaddress.html#ipaddress.IPv4Address.ipv6_mapped" title="ipaddress.IPv4Address.ipv6_mapped"><code><span>IPv4Address.ipv6_mapped</span></code></a> property,
which returns the IPv4-mapped IPv6 address.
(Contributed by Charles Machalow in <a href="https://github.com/python/cpython/issues/109466">gh-109466</a>.)</p></li>
<li><p>Fix <code><span>is_global</span></code> and <code><span>is_private</span></code> behavior in
<a href="https://docs.python.org/3.13/library/ipaddress.html#ipaddress.IPv4Address" title="ipaddress.IPv4Address"><code><span>IPv4Address</span></code></a>, <a href="https://docs.python.org/3.13/library/ipaddress.html#ipaddress.IPv6Address" title="ipaddress.IPv6Address"><code><span>IPv6Address</span></code></a>,
<a href="https://docs.python.org/3.13/library/ipaddress.html#ipaddress.IPv4Network" title="ipaddress.IPv4Network"><code><span>IPv4Network</span></code></a>, and <a href="https://docs.python.org/3.13/library/ipaddress.html#ipaddress.IPv6Network" title="ipaddress.IPv6Network"><code><span>IPv6Network</span></code></a>.
(Contributed by Jakub Stasiak in <a href="https://github.com/python/cpython/issues/113171">gh-113171</a>.)</p></li>
</ul>
</section>
<section id="itertools">
<h3>itertools<a href="#itertools" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/itertools.html#itertools.batched" title="itertools.batched"><code><span>batched()</span></code></a> has a new <em>strict</em> parameter,
which raises a <a href="https://docs.python.org/3.13/library/exceptions.html#ValueError" title="ValueError"><code><span>ValueError</span></code></a> if the final batch is shorter
than the specified batch size.
(Contributed by Raymond Hettinger in <a href="https://github.com/python/cpython/issues/113202">gh-113202</a>.)</p></li>
</ul>
</section>
<section id="marshal">
<h3>marshal<a href="#marshal" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add the <em>allow_code</em> parameter in module functions.
Passing <code><span>allow_code=False</span></code> prevents serialization and de-serialization
of code objects which are incompatible between Python versions.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/113626">gh-113626</a>.)</p></li>
</ul>
</section>
<section id="math">
<h3>math<a href="#math" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The new function <a href="https://docs.python.org/3.13/library/math.html#math.fma" title="math.fma"><code><span>fma()</span></code></a> performs fused multiply-add operations.
This computes <code><span>x</span> <span>*</span> <span>y</span> <span>+</span> <span>z</span></code> with only a single round,
and so avoids any intermediate loss of precision.
It wraps the <code><span>fma()</span></code> function provided by C99,
and follows the specification of the IEEE 754 “fusedMultiplyAdd” operation
for special cases.
(Contributed by Mark Dickinson and Victor Stinner in <a href="https://github.com/python/cpython/issues/73468">gh-73468</a>.)</p></li>
</ul>
</section>
<section id="mimetypes">
<h3>mimetypes<a href="#mimetypes" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add the <a href="https://docs.python.org/3.13/library/mimetypes.html#mimetypes.guess_file_type" title="mimetypes.guess_file_type"><code><span>guess_file_type()</span></code></a> function to guess a MIME type
from a filesystem path.
Using paths with <a href="https://docs.python.org/3.13/library/mimetypes.html#mimetypes.guess_type" title="mimetypes.guess_type"><code><span>guess_type()</span></code></a> is now <a href="https://docs.python.org/3.13/glossary.html#term-soft-deprecated"><span>soft deprecated</span></a>.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/66543">gh-66543</a>.)</p></li>
</ul>
</section>
<section id="mmap">
<h3>mmap<a href="#mmap" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/mmap.html#mmap.mmap" title="mmap.mmap"><code><span>mmap</span></code></a> is now protected from crashing on Windows when the
mapped memory is inaccessible due to file system errors or access violations.
(Contributed by Jannis Weigend in <a href="https://github.com/python/cpython/issues/118209">gh-118209</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/mmap.html#mmap.mmap" title="mmap.mmap"><code><span>mmap</span></code></a> has a new <a href="https://docs.python.org/3.13/library/mmap.html#mmap.mmap.seekable" title="mmap.mmap.seekable"><code><span>seekable()</span></code></a> method
that can be used when a seekable file-like object is required.
The <a href="https://docs.python.org/3.13/library/mmap.html#mmap.mmap.seek" title="mmap.mmap.seek"><code><span>seek()</span></code></a> method now returns the new absolute position.
(Contributed by Donghee Na and Sylvie Liberman in <a href="https://github.com/python/cpython/issues/111835">gh-111835</a>.)</p></li>
<li><p>The new UNIX-only <em>trackfd</em> parameter for <a href="https://docs.python.org/3.13/library/mmap.html#mmap.mmap" title="mmap.mmap"><code><span>mmap</span></code></a> controls
file descriptor duplication;
if false, the file descriptor specified by <em>fileno</em> will not be duplicated.
(Contributed by Zackery Spytz and Petr Viktorin in <a href="https://github.com/python/cpython/issues/78502">gh-78502</a>.)</p></li>
</ul>
</section>
<section id="multiprocessing">
<h3>multiprocessing<a href="#multiprocessing" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The default number of worker threads and processes is now selected using
<a href="https://docs.python.org/3.13/library/os.html#os.process_cpu_count" title="os.process_cpu_count"><code><span>os.process_cpu_count()</span></code></a> instead of <a href="https://docs.python.org/3.13/library/os.html#os.cpu_count" title="os.cpu_count"><code><span>os.cpu_count()</span></code></a>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/109649">gh-109649</a>.)</p></li>
</ul>
</section>
<section id="os">
<h3>os<a href="#os" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add <a href="https://docs.python.org/3.13/library/os.html#os.process_cpu_count" title="os.process_cpu_count"><code><span>process_cpu_count()</span></code></a> function to get the number
of logical CPU cores usable by the calling thread of the current process.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/109649">gh-109649</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/os.html#os.cpu_count" title="os.cpu_count"><code><span>cpu_count()</span></code></a> and <a href="https://docs.python.org/3.13/library/os.html#os.process_cpu_count" title="os.process_cpu_count"><code><span>process_cpu_count()</span></code></a> can be overridden
through the new environment variable <span id="index-37"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHON_CPU_COUNT"><code><span>PYTHON_CPU_COUNT</span></code></a>
or the new command-line option <a href="https://docs.python.org/3.13/using/cmdline.html#cmdoption-X"><code><span>-X</span> <span>cpu_count</span></code></a>.
This option is useful for users who need to limit CPU resources
of a container system without having to modify application code
or the container itself.
(Contributed by Donghee Na in <a href="https://github.com/python/cpython/issues/109595">gh-109595</a>.)</p></li>
<li><p>Add a <a href="https://docs.python.org/3.13/library/os.html#os-timerfd"><span>low level interface</span></a> to Linux’s
<em><a href="https://manpages.debian.org/timerfd_create(2)">timer file descriptors</a></em>
via <a href="https://docs.python.org/3.13/library/os.html#os.timerfd_create" title="os.timerfd_create"><code><span>timerfd_create()</span></code></a>,
<a href="https://docs.python.org/3.13/library/os.html#os.timerfd_settime" title="os.timerfd_settime"><code><span>timerfd_settime()</span></code></a>, <a href="https://docs.python.org/3.13/library/os.html#os.timerfd_settime_ns" title="os.timerfd_settime_ns"><code><span>timerfd_settime_ns()</span></code></a>,
<a href="https://docs.python.org/3.13/library/os.html#os.timerfd_gettime" title="os.timerfd_gettime"><code><span>timerfd_gettime()</span></code></a>, <a href="https://docs.python.org/3.13/library/os.html#os.timerfd_gettime_ns" title="os.timerfd_gettime_ns"><code><span>timerfd_gettime_ns()</span></code></a>,
<a href="https://docs.python.org/3.13/library/os.html#os.TFD_NONBLOCK" title="os.TFD_NONBLOCK"><code><span>TFD_NONBLOCK</span></code></a>, <a href="https://docs.python.org/3.13/library/os.html#os.TFD_CLOEXEC" title="os.TFD_CLOEXEC"><code><span>TFD_CLOEXEC</span></code></a>,
<a href="https://docs.python.org/3.13/library/os.html#os.TFD_TIMER_ABSTIME" title="os.TFD_TIMER_ABSTIME"><code><span>TFD_TIMER_ABSTIME</span></code></a>, and <a href="https://docs.python.org/3.13/library/os.html#os.TFD_TIMER_CANCEL_ON_SET" title="os.TFD_TIMER_CANCEL_ON_SET"><code><span>TFD_TIMER_CANCEL_ON_SET</span></code></a>
(Contributed by Masaru Tsuchiyama in <a href="https://github.com/python/cpython/issues/108277">gh-108277</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/os.html#os.lchmod" title="os.lchmod"><code><span>lchmod()</span></code></a> and the <em>follow_symlinks</em> argument of <a href="https://docs.python.org/3.13/library/os.html#os.chmod" title="os.chmod"><code><span>chmod()</span></code></a>
are both now available on Windows.
Note that the default value of <em>follow_symlinks</em>
in <code><span>lchmod()</span></code> is <code><span>False</span></code> on Windows.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/59616">gh-59616</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/os.html#os.fchmod" title="os.fchmod"><code><span>fchmod()</span></code></a> and support for file descriptors in <a href="https://docs.python.org/3.13/library/os.html#os.chmod" title="os.chmod"><code><span>chmod()</span></code></a>
are both now available on Windows.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/113191">gh-113191</a>.)</p></li>
<li><p>On Windows, <a href="https://docs.python.org/3.13/library/os.html#os.mkdir" title="os.mkdir"><code><span>mkdir()</span></code></a> and <a href="https://docs.python.org/3.13/library/os.html#os.makedirs" title="os.makedirs"><code><span>makedirs()</span></code></a> now support passing
a <em>mode</em> value of <code><span>0o700</span></code> to apply access control to the new directory.
This implicitly affects <a href="https://docs.python.org/3.13/library/tempfile.html#tempfile.mkdtemp" title="tempfile.mkdtemp"><code><span>tempfile.mkdtemp()</span></code></a>
and is a mitigation for <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4030">CVE-2024-4030</a>.
Other values for <em>mode</em> continue to be ignored.
(Contributed by Steve Dower in <a href="https://github.com/python/cpython/issues/118486">gh-118486</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/os.html#os.posix_spawn" title="os.posix_spawn"><code><span>posix_spawn()</span></code></a> now accepts <code><span>None</span></code> for the <em>env</em> argument,
which makes the newly spawned process use the current process environment.
(Contributed by Jakub Kulik in <a href="https://github.com/python/cpython/issues/113119">gh-113119</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/os.html#os.posix_spawn" title="os.posix_spawn"><code><span>posix_spawn()</span></code></a> can now use the <a href="https://docs.python.org/3.13/library/os.html#os.POSIX_SPAWN_CLOSEFROM" title="os.POSIX_SPAWN_CLOSEFROM"><code><span>POSIX_SPAWN_CLOSEFROM</span></code></a>
attribute in the <em>file_actions</em> parameter on platforms that support
<code><span>posix_spawn_file_actions_addclosefrom_np()</span></code>.
(Contributed by Jakub Kulik in <a href="https://github.com/python/cpython/issues/113117">gh-113117</a>.)</p></li>
</ul>
</section>
<section id="os-path">
<h3>os.path<a href="#os-path" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add <a href="https://docs.python.org/3.13/library/os.path.html#os.path.isreserved" title="os.path.isreserved"><code><span>isreserved()</span></code></a> to check if a path is reserved
on the current system.
This function is only available on Windows.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/88569">gh-88569</a>.)</p></li>
<li><p>On Windows, <a href="https://docs.python.org/3.13/library/os.path.html#os.path.isabs" title="os.path.isabs"><code><span>isabs()</span></code></a> no longer considers paths
starting with exactly one slash (<code><span>\</span></code> or <code><span>/</span></code>) to be absolute.
(Contributed by Barney Gale and Jon Foster in <a href="https://github.com/python/cpython/issues/44626">gh-44626</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/os.path.html#os.path.realpath" title="os.path.realpath"><code><span>realpath()</span></code></a> now resolves MS-DOS style file names
even if the file is not accessible.
(Contributed by Moonsik Park in <a href="https://github.com/python/cpython/issues/82367">gh-82367</a>.)</p></li>
</ul>
</section>
<section id="pathlib">
<h3>pathlib<a href="#pathlib" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.UnsupportedOperation" title="pathlib.UnsupportedOperation"><code><span>UnsupportedOperation</span></code></a>, which is raised instead of
<a href="https://docs.python.org/3.13/library/exceptions.html#NotImplementedError" title="NotImplementedError"><code><span>NotImplementedError</span></code></a> when a path operation isn’t supported.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/89812">gh-89812</a>.)</p></li>
<li><p>Add a new constructor for creating <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path" title="pathlib.Path"><code><span>Path</span></code></a> objects
from ‘file’ URIs (<code><span>file:///</span></code>), <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.from_uri" title="pathlib.Path.from_uri"><code><span>Path.from_uri()</span></code></a>.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/107465">gh-107465</a>.)</p></li>
<li><p>Add <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.PurePath.full_match" title="pathlib.PurePath.full_match"><code><span>PurePath.full_match()</span></code></a> for matching paths with
shell-style wildcards, including the recursive wildcard “<code><span>**</span></code>”.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/73435">gh-73435</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.PurePath.parser" title="pathlib.PurePath.parser"><code><span>PurePath.parser</span></code></a> class attribute to store the
implementation of <a href="https://docs.python.org/3.13/library/os.path.html#module-os.path" title="os.path: Operations on pathnames."><code><span>os.path</span></code></a> used
for low-level path parsing and joining.
This will be either <code><span>posixpath</span></code> or <code><span>ntpath</span></code>.</p></li>
<li><p>Add <em>recurse_symlinks</em> keyword-only argument to
<a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.glob" title="pathlib.Path.glob"><code><span>Path.glob()</span></code></a> and <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.rglob" title="pathlib.Path.rglob"><code><span>rglob()</span></code></a>.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/77609">gh-77609</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.glob" title="pathlib.Path.glob"><code><span>Path.glob()</span></code></a> and <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.rglob" title="pathlib.Path.rglob"><code><span>rglob()</span></code></a>
now return files and directories when given a pattern that ends with “<code><span>**</span></code>”.
Previously, only directories were returned.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/70303">gh-70303</a>.)</p></li>
<li><p>Add the <em>follow_symlinks</em> keyword-only argument to
<a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.is_file" title="pathlib.Path.is_file"><code><span>Path.is_file</span></code></a>,
<a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.is_dir" title="pathlib.Path.is_dir"><code><span>Path.is_dir</span></code></a>,
<a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.owner" title="pathlib.Path.owner"><code><span>Path.owner()</span></code></a>, and <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.group" title="pathlib.Path.group"><code><span>Path.group()</span></code></a>.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/105793">gh-105793</a> and Kamil Turek in <a href="https://github.com/python/cpython/issues/107962">gh-107962</a>.)</p></li>
</ul>
</section>
<section id="pdb">
<h3>pdb<a href="#pdb" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/functions.html#breakpoint" title="breakpoint"><code><span>breakpoint()</span></code></a> and <a href="https://docs.python.org/3.13/library/pdb.html#pdb.set_trace" title="pdb.set_trace"><code><span>set_trace()</span></code></a> now enter the debugger immediately
rather than on the next line of code to be executed. This change prevents the
debugger from breaking outside of the context when <code><span>breakpoint()</span></code> is positioned
at the end of the context.
(Contributed by Tian Gao in <a href="https://github.com/python/cpython/issues/118579">gh-118579</a>.)</p></li>
<li><p><code><span>sys.path[0]</span></code> is no longer replaced by the directory of the script
being debugged when <a href="https://docs.python.org/3.13/library/sys.html#sys.flags.safe_path" title="sys.flags.safe_path"><code><span>sys.flags.safe_path</span></code></a> is set.
(Contributed by Tian Gao and Christian Walther in <a href="https://github.com/python/cpython/issues/111762">gh-111762</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/zipapp.html#module-zipapp" title="zipapp: Manage executable Python zip archives"><code><span>zipapp</span></code></a> is now supported as a debugging target.
(Contributed by Tian Gao in <a href="https://github.com/python/cpython/issues/118501">gh-118501</a>.)</p></li>
<li><p>Add ability to move between chained exceptions during
post-mortem debugging in <a href="https://docs.python.org/3.13/library/pdb.html#pdb.pm" title="pdb.pm"><code><span>pm()</span></code></a> using
the new <a href="https://docs.python.org/3.13/library/pdb.html#pdbcommand-exceptions"><code><span>exceptions</span> <span>[exc_number]</span></code></a> command for Pdb.
(Contributed by Matthias Bussonnier in <a href="https://github.com/python/cpython/issues/106676">gh-106676</a>.)</p></li>
<li><p>Expressions and statements whose prefix is a pdb command are now correctly
identified and executed.
(Contributed by Tian Gao in <a href="https://github.com/python/cpython/issues/108464">gh-108464</a>.)</p></li>
</ul>
</section>
<section id="queue">
<h3>queue<a href="#queue" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add <a href="https://docs.python.org/3.13/library/queue.html#queue.Queue.shutdown" title="queue.Queue.shutdown"><code><span>Queue.shutdown</span></code></a> and <a href="https://docs.python.org/3.13/library/queue.html#queue.ShutDown" title="queue.ShutDown"><code><span>ShutDown</span></code></a>
to manage queue termination.
(Contributed by Laurie Opperman and Yves Duprat in <a href="https://github.com/python/cpython/issues/104750">gh-104750</a>.)</p></li>
</ul>
</section>
<section id="random">
<h3>random<a href="#random" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add a <a href="https://docs.python.org/3.13/library/random.html#random-cli"><span>command-line interface</span></a>.
(Contributed by Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/118131">gh-118131</a>.)</p></li>
</ul>
</section>
<section id="re">
<h3>re<a href="#re" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Rename <code><span>re.error</span></code> to <a href="https://docs.python.org/3.13/library/re.html#re.PatternError" title="re.PatternError"><code><span>PatternError</span></code></a> for improved clarity.
<code><span>re.error</span></code> is kept for backward compatibility.</p></li>
</ul>
</section>
<section id="shutil">
<h3>shutil<a href="#shutil" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Support the <em>dir_fd</em> and <em>follow_symlinks</em> keyword arguments
in <a href="https://docs.python.org/3.13/library/shutil.html#shutil.chown" title="shutil.chown"><code><span>chown()</span></code></a>.
(Contributed by Berker Peksag and Tahia K in <a href="https://github.com/python/cpython/issues/62308">gh-62308</a>)</p></li>
</ul>
</section>
<section id="site">
<h3>site<a href="#site" title="Link to this heading">¶</a></h3>
<ul>
<li><p><code><span>.pth</span></code> files are now decoded using UTF-8 first,
and then with the <a href="https://docs.python.org/3.13/glossary.html#term-locale-encoding"><span>locale encoding</span></a> if UTF-8 decoding fails.
(Contributed by Inada Naoki in <a href="https://github.com/python/cpython/issues/117802">gh-117802</a>.)</p></li>
</ul>
</section>
<section id="sqlite3">
<h3>sqlite3<a href="#sqlite3" title="Link to this heading">¶</a></h3>
<ul>
<li><p>A <a href="https://docs.python.org/3.13/library/exceptions.html#ResourceWarning" title="ResourceWarning"><code><span>ResourceWarning</span></code></a> is now emitted if a <a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Connection" title="sqlite3.Connection"><code><span>Connection</span></code></a>
object is not <a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Connection.close" title="sqlite3.Connection.close"><code><span>closed</span></code></a> explicitly.
(Contributed by Erlend E. Aasland in <a href="https://github.com/python/cpython/issues/105539">gh-105539</a>.)</p></li>
<li><p>Add the <em>filter</em> keyword-only parameter to <a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Connection.iterdump" title="sqlite3.Connection.iterdump"><code><span>Connection.iterdump()</span></code></a>
for filtering database objects to dump.
(Contributed by Mariusz Felisiak in <a href="https://github.com/python/cpython/issues/91602">gh-91602</a>.)</p></li>
</ul>
</section>
<section id="ssl">
<h3>ssl<a href="#ssl" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The <a href="https://docs.python.org/3.13/library/ssl.html#ssl.create_default_context" title="ssl.create_default_context"><code><span>create_default_context()</span></code></a> API now includes
<a href="https://docs.python.org/3.13/library/ssl.html#ssl.VERIFY_X509_PARTIAL_CHAIN" title="ssl.VERIFY_X509_PARTIAL_CHAIN"><code><span>VERIFY_X509_PARTIAL_CHAIN</span></code></a> and <a href="https://docs.python.org/3.13/library/ssl.html#ssl.VERIFY_X509_STRICT" title="ssl.VERIFY_X509_STRICT"><code><span>VERIFY_X509_STRICT</span></code></a>
in its default flags.</p>
<div>
<p>Note</p>
<p><a href="https://docs.python.org/3.13/library/ssl.html#ssl.VERIFY_X509_STRICT" title="ssl.VERIFY_X509_STRICT"><code><span>VERIFY_X509_STRICT</span></code></a> may reject pre-<span id="index-38"></span><a href="https://datatracker.ietf.org/doc/html/rfc5280.html"><strong>RFC 5280</strong></a>
or malformed certificates that the underlying OpenSSL implementation
might otherwise accept.
Whilst disabling this is not recommended, you can do so using:</p>
<div><pre><span></span><span>import</span> <span>ssl</span>

<span>ctx</span> <span>=</span> <span>ssl</span><span>.</span><span>create_default_context</span><span>()</span>
<span>ctx</span><span>.</span><span>verify_flags</span> <span>&amp;=</span> <span>~</span><span>ssl</span><span>.</span><span>VERIFY_X509_STRICT</span>
</pre></div>
</div>
<p>(Contributed by William Woodruff in <a href="https://github.com/python/cpython/issues/112389">gh-112389</a>.)</p>
</li>
</ul>
</section>
<section id="statistics">
<h3>statistics<a href="#statistics" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add <a href="https://docs.python.org/3.13/library/statistics.html#statistics.kde" title="statistics.kde"><code><span>kde()</span></code></a> for kernel density estimation.
This makes it possible to estimate a continuous probability density function
from a fixed number of discrete samples.
(Contributed by Raymond Hettinger in <a href="https://github.com/python/cpython/issues/115863">gh-115863</a>.)</p></li>
<li><p>Add <a href="https://docs.python.org/3.13/library/statistics.html#statistics.kde_random" title="statistics.kde_random"><code><span>kde_random()</span></code></a> for sampling from an
estimated probability density function created by <a href="https://docs.python.org/3.13/library/statistics.html#statistics.kde" title="statistics.kde"><code><span>kde()</span></code></a>.
(Contributed by Raymond Hettinger in <a href="https://github.com/python/cpython/issues/115863">gh-115863</a>.)</p></li>
</ul>
</section>
<section id="subprocess">
<span id="whatsnew313-subprocess"></span><h3>subprocess<a href="#subprocess" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The <a href="https://docs.python.org/3.13/library/subprocess.html#module-subprocess" title="subprocess: Subprocess management."><code><span>subprocess</span></code></a> module now uses the <a href="https://docs.python.org/3.13/library/os.html#os.posix_spawn" title="os.posix_spawn"><code><span>posix_spawn()</span></code></a> function in
more situations.</p>
<p>Notably, when <em>close_fds</em> is <code><span>True</span></code> (the default),
<a href="https://docs.python.org/3.13/library/os.html#os.posix_spawn" title="os.posix_spawn"><code><span>posix_spawn()</span></code></a> will be used when the C library provides
<code><span>posix_spawn_file_actions_addclosefrom_np()</span></code>,
which includes recent versions of Linux, FreeBSD, and Solaris.
On Linux, this should perform similarly to the existing
Linux <code><span>vfork()</span></code> based code.</p>
<p>A private control knob <code><span>subprocess._USE_POSIX_SPAWN</span></code> can
be set to <code><span>False</span></code> if you need to force <a href="https://docs.python.org/3.13/library/subprocess.html#module-subprocess" title="subprocess: Subprocess management."><code><span>subprocess</span></code></a>
to never use <a href="https://docs.python.org/3.13/library/os.html#os.posix_spawn" title="os.posix_spawn"><code><span>posix_spawn()</span></code></a>.
Please report your reason and platform details in
the <a href="https://docs.python.org/3.13/bugs.html#using-the-tracker"><span>issue tracker</span></a> if you set this
so that we can improve our API selection logic for everyone.
(Contributed by Jakub Kulik in <a href="https://github.com/python/cpython/issues/113117">gh-113117</a>.)</p>
</li>
</ul>
</section>
<section id="sys">
<h3>sys<a href="#sys" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add the <a href="https://docs.python.org/3.13/library/sys.html#sys._is_interned" title="sys._is_interned"><code><span>_is_interned()</span></code></a> function to test if a string was interned.
This function is not guaranteed to exist in all implementations of Python.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/78573">gh-78573</a>.)</p></li>
</ul>
</section>
<section id="tempfile">
<h3>tempfile<a href="#tempfile" title="Link to this heading">¶</a></h3>
<ul>
<li><p>On Windows, the default mode <code><span>0o700</span></code> used by <a href="https://docs.python.org/3.13/library/tempfile.html#tempfile.mkdtemp" title="tempfile.mkdtemp"><code><span>tempfile.mkdtemp()</span></code></a> now
limits access to the new directory due to changes to <a href="https://docs.python.org/3.13/library/os.html#os.mkdir" title="os.mkdir"><code><span>os.mkdir()</span></code></a>.
This is a mitigation for <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4030">CVE-2024-4030</a>.
(Contributed by Steve Dower in <a href="https://github.com/python/cpython/issues/118486">gh-118486</a>.)</p></li>
</ul>
</section>
<section id="time">
<h3>time<a href="#time" title="Link to this heading">¶</a></h3>
<ul>
<li><p>On Windows, <a href="https://docs.python.org/3.13/library/time.html#time.monotonic" title="time.monotonic"><code><span>monotonic()</span></code></a> now uses the
<code><span>QueryPerformanceCounter()</span></code> clock for a resolution of 1 microsecond,
instead of the <code><span>GetTickCount64()</span></code> clock which has
a resolution of 15.6 milliseconds.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/88494">gh-88494</a>.)</p></li>
<li><p>On Windows, <a href="https://docs.python.org/3.13/library/time.html#time.time" title="time.time"><code><span>time()</span></code></a> now uses the
<code><span>GetSystemTimePreciseAsFileTime()</span></code> clock for a resolution of 1 microsecond,
instead of the <code><span>GetSystemTimeAsFileTime()</span></code> clock which has
a resolution of 15.6 milliseconds.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/63207">gh-63207</a>.)</p></li>
</ul>
</section>
<section id="tkinter">
<h3>tkinter<a href="#tkinter" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add <a href="https://docs.python.org/3.13/library/tkinter.html#module-tkinter" title="tkinter: Interface to Tcl/Tk for graphical user interfaces"><code><span>tkinter</span></code></a> widget methods:
<code><span>tk_busy_hold()</span></code>, <code><span>tk_busy_configure()</span></code>,
<code><span>tk_busy_cget()</span></code>, <code><span>tk_busy_forget()</span></code>,
<code><span>tk_busy_current()</span></code>, and <code><span>tk_busy_status()</span></code>.
(Contributed by Miguel, klappnase and Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/72684">gh-72684</a>.)</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/tkinter.html#module-tkinter" title="tkinter: Interface to Tcl/Tk for graphical user interfaces"><code><span>tkinter</span></code></a> widget method <code><span>wm_attributes()</span></code> now accepts
the attribute name without the minus prefix to get window attributes,
for example <code><span>w.wm_attributes('alpha')</span></code>
and allows specifying attributes and values to set as keyword arguments,
for example <code><span>w.wm_attributes(alpha=0.5)</span></code>.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/43457">gh-43457</a>.)</p></li>
<li><p><code><span>wm_attributes()</span></code> can now return attributes as a <a href="https://docs.python.org/3.13/library/stdtypes.html#dict" title="dict"><code><span>dict</span></code></a>,
by using the new optional keyword-only parameter <em>return_python_dict</em>.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/43457">gh-43457</a>.)</p></li>
<li><p><code><span>Text.count()</span></code> can now return a simple <a href="https://docs.python.org/3.13/library/functions.html#int" title="int"><code><span>int</span></code></a>
when the new optional keyword-only parameter <em>return_ints</em> is used.
Otherwise, the single count is returned as a 1-tuple or <code><span>None</span></code>.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/97928">gh-97928</a>.)</p></li>
<li><p>Support the “vsapi” element type in
the <a href="https://docs.python.org/3.13/library/tkinter.ttk.html#tkinter.ttk.Style.element_create" title="tkinter.ttk.Style.element_create"><code><span>element_create()</span></code></a> method of
<a href="https://docs.python.org/3.13/library/tkinter.ttk.html#tkinter.ttk.Style" title="tkinter.ttk.Style"><code><span>tkinter.ttk.Style</span></code></a>.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/68166">gh-68166</a>.)</p></li>
<li><p>Add the <code><span>after_info()</span></code> method for Tkinter widgets.
(Contributed by Cheryl Sabella in <a href="https://github.com/python/cpython/issues/77020">gh-77020</a>.)</p></li>
<li><p>Add a new <code><span>copy_replace()</span></code> method to <code><span>PhotoImage</span></code>
to copy a region from one image to another,
possibly with pixel zooming, subsampling, or both.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/118225">gh-118225</a>.)</p></li>
<li><p>Add <em>from_coords</em> parameter to the <code><span>PhotoImage</span></code> methods
<code><span>copy()</span></code>, <code><span>zoom()</span></code> and <code><span>subsample()</span></code>.
Add <em>zoom</em> and <em>subsample</em> parameters to the <code><span>PhotoImage</span></code> method
<code><span>copy()</span></code>.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/118225">gh-118225</a>.)</p></li>
<li><p>Add the <code><span>PhotoImage</span></code> methods
<code><span>read()</span></code> to read an image from a file
and <code><span>data()</span></code> to get the image data.
Add <em>background</em> and <em>grayscale</em> parameters to the <code><span>write()</span></code> method.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/118271">gh-118271</a>.)</p></li>
</ul>
</section>
<section id="traceback">
<h3>traceback<a href="#traceback" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add the <a href="https://docs.python.org/3.13/library/traceback.html#traceback.TracebackException.exc_type_str" title="traceback.TracebackException.exc_type_str"><code><span>exc_type_str</span></code></a> attribute
to <a href="https://docs.python.org/3.13/library/traceback.html#traceback.TracebackException" title="traceback.TracebackException"><code><span>TracebackException</span></code></a>,
which holds a string display of the <em>exc_type</em>.
Deprecate the <a href="https://docs.python.org/3.13/library/traceback.html#traceback.TracebackException.exc_type" title="traceback.TracebackException.exc_type"><code><span>exc_type</span></code></a> attribute,
which holds the type object itself.
Add parameter <em>save_exc_type</em> (default <code><span>True</span></code>)
to indicate whether <code><span>exc_type</span></code> should be saved.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/112332">gh-112332</a>.)</p></li>
<li><p>Add a new <em>show_group</em> keyword-only parameter to
<a href="https://docs.python.org/3.13/library/traceback.html#traceback.TracebackException.format_exception_only" title="traceback.TracebackException.format_exception_only"><code><span>TracebackException.format_exception_only()</span></code></a> to (recursively) format
the nested exceptions of a <a href="https://docs.python.org/3.13/library/exceptions.html#BaseExceptionGroup" title="BaseExceptionGroup"><code><span>BaseExceptionGroup</span></code></a> instance.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/105292">gh-105292</a>.)</p></li>
</ul>
</section>
<section id="types">
<h3>types<a href="#types" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/types.html#types.SimpleNamespace" title="types.SimpleNamespace"><code><span>SimpleNamespace</span></code></a> can now take a single positional argument
to initialise the namespace’s arguments.
This argument must either be a mapping or an iterable of key-value pairs.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/108191">gh-108191</a>.)</p></li>
</ul>
</section>
<section id="typing">
<h3>typing<a href="#typing" title="Link to this heading">¶</a></h3>
<ul>
<li><p><span id="index-39"></span><a href="https://peps.python.org/pep-0705/"><strong>PEP 705</strong></a>: Add <a href="https://docs.python.org/3.13/library/typing.html#typing.ReadOnly" title="typing.ReadOnly"><code><span>ReadOnly</span></code></a>, a special typing construct
to mark a <a href="https://docs.python.org/3.13/library/typing.html#typing.TypedDict" title="typing.TypedDict"><code><span>TypedDict</span></code></a> item as read-only for type checkers.</p></li>
<li><p><span id="index-40"></span><a href="https://peps.python.org/pep-0742/"><strong>PEP 742</strong></a>: Add <a href="https://docs.python.org/3.13/library/typing.html#typing.TypeIs" title="typing.TypeIs"><code><span>TypeIs</span></code></a>, a typing construct
that can be used to instruct a type checker how to narrow a type.</p></li>
<li><p>Add <a href="https://docs.python.org/3.13/library/typing.html#typing.NoDefault" title="typing.NoDefault"><code><span>NoDefault</span></code></a>, a sentinel object used to represent
the defaults of some parameters in the <a href="https://docs.python.org/3.13/library/typing.html#module-typing" title="typing: Support for type hints (see :pep:`484`)."><code><span>typing</span></code></a> module.
(Contributed by Jelle Zijlstra in <a href="https://github.com/python/cpython/issues/116126">gh-116126</a>.)</p></li>
<li><p>Add <a href="https://docs.python.org/3.13/library/typing.html#typing.get_protocol_members" title="typing.get_protocol_members"><code><span>get_protocol_members()</span></code></a> to return the set of members
defining a <a href="https://docs.python.org/3.13/library/typing.html#typing.Protocol" title="typing.Protocol"><code><span>typing.Protocol</span></code></a>.
(Contributed by Jelle Zijlstra in <a href="https://github.com/python/cpython/issues/104873">gh-104873</a>.)</p></li>
<li><p>Add <a href="https://docs.python.org/3.13/library/typing.html#typing.is_protocol" title="typing.is_protocol"><code><span>is_protocol()</span></code></a> to check whether a class
is a <a href="https://docs.python.org/3.13/library/typing.html#typing.Protocol" title="typing.Protocol"><code><span>Protocol</span></code></a>.
(Contributed by Jelle Zijlstra in <a href="https://github.com/python/cpython/issues/104873">gh-104873</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/typing.html#typing.ClassVar" title="typing.ClassVar"><code><span>ClassVar</span></code></a> can now be nested in <a href="https://docs.python.org/3.13/library/typing.html#typing.Final" title="typing.Final"><code><span>Final</span></code></a>,
and vice versa.
(Contributed by Mehdi Drissi in <a href="https://github.com/python/cpython/issues/89547">gh-89547</a>.)</p></li>
</ul>
</section>
<section id="unicodedata">
<h3>unicodedata<a href="#unicodedata" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Update the Unicode database to <a href="https://www.unicode.org/versions/Unicode15.1.0/">version 15.1.0</a>.
(Contributed by James Gerity in <a href="https://github.com/python/cpython/issues/109559">gh-109559</a>.)</p>
</li>
</ul>
</section>
<section id="venv">
<h3>venv<a href="#venv" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add support for creating source control management (SCM) ignore files
in a virtual environment’s directory.
By default, Git is supported.
This is implemented as opt-in via the API,
which can be extended to support other SCMs
(<a href="https://docs.python.org/3.13/library/venv.html#venv.EnvBuilder" title="venv.EnvBuilder"><code><span>EnvBuilder</span></code></a> and <a href="https://docs.python.org/3.13/library/venv.html#venv.create" title="venv.create"><code><span>create()</span></code></a>),
and opt-out via the CLI, using <code><span>--without-scm-ignore-files</span></code>.
(Contributed by Brett Cannon in <a href="https://github.com/python/cpython/issues/108125">gh-108125</a>.)</p></li>
</ul>
</section>
<section id="warnings">
<h3>warnings<a href="#warnings" title="Link to this heading">¶</a></h3>
<ul>
<li><p><span id="index-41"></span><a href="https://peps.python.org/pep-0702/"><strong>PEP 702</strong></a>: The new <a href="https://docs.python.org/3.13/library/warnings.html#warnings.deprecated" title="warnings.deprecated"><code><span>warnings.deprecated()</span></code></a> decorator provides a way to
communicate deprecations to a <a href="https://docs.python.org/3.13/glossary.html#term-static-type-checker"><span>static type checker</span></a>
and to warn on usage of deprecated classes and functions.
A <a href="https://docs.python.org/3.13/library/exceptions.html#DeprecationWarning" title="DeprecationWarning"><code><span>DeprecationWarning</span></code></a> may also be emitted when
a decorated function or class is used at runtime.
(Contributed by Jelle Zijlstra in <a href="https://github.com/python/cpython/issues/104003">gh-104003</a>.)</p></li>
</ul>
</section>
<section id="xml">
<h3>xml<a href="#xml" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Allow controlling Expat &gt;=2.6.0 reparse deferral (<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-52425">CVE-2023-52425</a>)
by adding five new methods:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLParser.flush" title="xml.etree.ElementTree.XMLParser.flush"><code><span>xml.etree.ElementTree.XMLParser.flush()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLPullParser.flush" title="xml.etree.ElementTree.XMLPullParser.flush"><code><span>xml.etree.ElementTree.XMLPullParser.flush()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/pyexpat.html#xml.parsers.expat.xmlparser.GetReparseDeferralEnabled" title="xml.parsers.expat.xmlparser.GetReparseDeferralEnabled"><code><span>xml.parsers.expat.xmlparser.GetReparseDeferralEnabled()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/pyexpat.html#xml.parsers.expat.xmlparser.SetReparseDeferralEnabled" title="xml.parsers.expat.xmlparser.SetReparseDeferralEnabled"><code><span>xml.parsers.expat.xmlparser.SetReparseDeferralEnabled()</span></code></a></p></li>
<li><p><code><span>xml.sax.expatreader.ExpatParser.flush()</span></code></p></li>
</ul>
<p>(Contributed by Sebastian Pipping in <a href="https://github.com/python/cpython/issues/115623">gh-115623</a>.)</p>
</li>
<li><p>Add the <code><span>close()</span></code> method for the iterator returned by
<a href="https://docs.python.org/3.13/library/xml.etree.elementtree.html#xml.etree.ElementTree.iterparse" title="xml.etree.ElementTree.iterparse"><code><span>iterparse()</span></code></a> for explicit cleanup.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/69893">gh-69893</a>.)</p></li>
</ul>
</section>
<section id="zipimport">
<h3>zipimport<a href="#zipimport" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add support for <a href="https://en.wikipedia.org/wiki/Zip_(file_format)#ZIP64">ZIP64</a> format files.
Everybody loves huge data, right?
(Contributed by Tim Hatch in <a href="https://github.com/python/cpython/issues/94146">gh-94146</a>.)</p>
</li>
</ul>
</section>
</section>
<section id="optimizations">
<h2>Optimizations<a href="#optimizations" title="Link to this heading">¶</a></h2>
<ul>
<li><p>Several standard library modules have had
their import times significantly improved.
For example, the import time of the <a href="https://docs.python.org/3.13/library/typing.html#module-typing" title="typing: Support for type hints (see :pep:`484`)."><code><span>typing</span></code></a> module
has been reduced by around a third by removing dependencies
on <a href="https://docs.python.org/3.13/library/re.html#module-re" title="re: Regular expression operations."><code><span>re</span></code></a> and <a href="https://docs.python.org/3.13/library/contextlib.html#module-contextlib" title="contextlib: Utilities for with-statement contexts."><code><span>contextlib</span></code></a>.
Other modules to enjoy import-time speedups include
<a href="https://docs.python.org/3.13/library/email.utils.html#module-email.utils" title="email.utils: Miscellaneous email package utilities."><code><span>email.utils</span></code></a>, <a href="https://docs.python.org/3.13/library/enum.html#module-enum" title="enum: Implementation of an enumeration class."><code><span>enum</span></code></a>, <a href="https://docs.python.org/3.13/library/functools.html#module-functools" title="functools: Higher-order functions and operations on callable objects."><code><span>functools</span></code></a>,
<a href="https://docs.python.org/3.13/library/importlib.metadata.html#module-importlib.metadata" title="importlib.metadata: Accessing package metadata"><code><span>importlib.metadata</span></code></a>, and <a href="https://docs.python.org/3.13/library/threading.html#module-threading" title="threading: Thread-based parallelism."><code><span>threading</span></code></a>.
(Contributed by Alex Waygood, Shantanu Jain, Adam Turner, Daniel Hollas,
and others in <a href="https://github.com/python/cpython/issues/109653">gh-109653</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/textwrap.html#textwrap.indent" title="textwrap.indent"><code><span>textwrap.indent()</span></code></a> is now around 30% faster than before for large input.
(Contributed by Inada Naoki in <a href="https://github.com/python/cpython/issues/107369">gh-107369</a>.)</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/subprocess.html#module-subprocess" title="subprocess: Subprocess management."><code><span>subprocess</span></code></a> module now uses the <a href="https://docs.python.org/3.13/library/os.html#os.posix_spawn" title="os.posix_spawn"><code><span>posix_spawn()</span></code></a> function in
more situations, including when <em>close_fds</em> is <code><span>True</span></code> (the default)
on many modern platforms.
This should provide a notable performance increase
when launching processes on FreeBSD and Solaris.
See the <a href="#whatsnew313-subprocess"><span>subprocess</span></a> section above for details.
(Contributed by Jakub Kulik in <a href="https://github.com/python/cpython/issues/113117">gh-113117</a>.)</p></li>
</ul>
</section>
<section id="removed-modules-and-apis">
<h2>Removed Modules And APIs<a href="#removed-modules-and-apis" title="Link to this heading">¶</a></h2>
<section id="pep-594-remove-dead-batteries-from-the-standard-library">
<span id="whatsnew313-pep594"></span><h3>PEP 594: Remove “dead batteries” from the standard library<a href="#pep-594-remove-dead-batteries-from-the-standard-library" title="Link to this heading">¶</a></h3>
<p><span id="index-42"></span><a href="https://peps.python.org/pep-0594/"><strong>PEP 594</strong></a> proposed removing 19 modules from the standard library,
colloquially referred to as ‘dead batteries’ due to their
historic, obsolete, or insecure status.
All of the following modules were deprecated in Python 3.11,
and are now removed:</p>
<ul>
<li><p><code><span>aifc</span></code></p></li>
<li><p><code><span>audioop</span></code></p></li>
<li><p><code><span>chunk</span></code></p></li>
<li><p><code><span>cgi</span></code> and <code><span>cgitb</span></code></p>
<ul>
<li><p><code><span>cgi.FieldStorage</span></code> can typically be replaced with
<a href="https://docs.python.org/3.13/library/urllib.parse.html#urllib.parse.parse_qsl" title="urllib.parse.parse_qsl"><code><span>urllib.parse.parse_qsl()</span></code></a> for <code><span>GET</span></code> and <code><span>HEAD</span></code> requests,
and the <a href="https://docs.python.org/3.13/library/email.message.html#module-email.message" title="email.message: The base class representing email messages."><code><span>email.message</span></code></a> module or the <a href="https://pypi.org/project/multipart/">multipart</a> library
for <code><span>POST</span></code> and <code><span>PUT</span></code> requests.</p></li>
<li><p><code><span>cgi.parse()</span></code> can be replaced by calling
<a href="https://docs.python.org/3.13/library/urllib.parse.html#urllib.parse.parse_qs" title="urllib.parse.parse_qs"><code><span>urllib.parse.parse_qs()</span></code></a> directly on the desired query string,
unless the input is <code><span>multipart/form-data</span></code>,
which should be replaced as described below for <code><span>cgi.parse_multipart()</span></code>.</p></li>
<li><p><code><span>cgi.parse_header()</span></code> can be replaced with the functionality
in the <a href="https://docs.python.org/3.13/library/email.html#module-email" title="email: Package supporting the parsing, manipulating, and generating email messages."><code><span>email</span></code></a> package, which implements the same MIME RFCs.
For example, with <a href="https://docs.python.org/3.13/library/email.message.html#email.message.EmailMessage" title="email.message.EmailMessage"><code><span>email.message.EmailMessage</span></code></a>:</p>
<div><pre><span></span><span>from</span> <span>email.message</span> <span>import</span> <span>EmailMessage</span>

<span>msg</span> <span>=</span> <span>EmailMessage</span><span>()</span>
<span>msg</span><span>[</span><span>'content-type'</span><span>]</span> <span>=</span> <span>'application/json; charset="utf8"'</span>
<span>main</span><span>,</span> <span>params</span> <span>=</span> <span>msg</span><span>.</span><span>get_content_type</span><span>(),</span> <span>msg</span><span>[</span><span>'content-type'</span><span>]</span><span>.</span><span>params</span>
</pre></div>
</li>
<li><p><code><span>cgi.parse_multipart()</span></code> can be replaced with the functionality
in the <a href="https://docs.python.org/3.13/library/email.html#module-email" title="email: Package supporting the parsing, manipulating, and generating email messages."><code><span>email</span></code></a> package, which implements the same MIME RFCs,
or with the <a href="https://pypi.org/project/multipart/">multipart</a> library.
For example, the <a href="https://docs.python.org/3.13/library/email.message.html#email.message.EmailMessage" title="email.message.EmailMessage"><code><span>email.message.EmailMessage</span></code></a>
and <a href="https://docs.python.org/3.13/library/email.compat32-message.html#email.message.Message" title="email.message.Message"><code><span>email.message.Message</span></code></a> classes.</p></li>
</ul>
</li>
<li><p><code><span>crypt</span></code> and the private <code><span>_crypt</span></code> extension.
The <a href="https://docs.python.org/3.13/library/hashlib.html#module-hashlib" title="hashlib: Secure hash and message digest algorithms."><code><span>hashlib</span></code></a> module may be an appropriate replacement
when simply hashing a value is required.
Otherwise, various third-party libraries on PyPI are available:</p>
<ul>
<li><p><a href="https://pypi.org/project/bcrypt/">bcrypt</a>:
Modern password hashing for your software and your servers.</p></li>
<li><p><a href="https://pypi.org/project/passlib/">passlib</a>:
Comprehensive password hashing framework supporting over 30 schemes.</p></li>
<li><p><a href="https://pypi.org/project/argon2-cffi/">argon2-cffi</a>:
The secure Argon2 password hashing algorithm.</p></li>
<li><p><a href="https://pypi.org/project/legacycrypt/">legacycrypt</a>:
<a href="https://docs.python.org/3.13/library/ctypes.html#module-ctypes" title="ctypes: A foreign function library for Python."><code><span>ctypes</span></code></a> wrapper to the POSIX crypt library call
and associated functionality.</p></li>
<li><p><a href="https://pypi.org/project/crypt_r/">crypt_r</a>:
Fork of the <code><span>crypt</span></code> module,
wrapper to the <em><a href="https://manpages.debian.org/crypt_r(3)">crypt_r(3)</a></em> library call
and associated functionality.</p></li>
</ul>
</li>
<li><p><code><span>imghdr</span></code>:
The <a href="https://pypi.org/project/filetype/">filetype</a>, <a href="https://pypi.org/project/puremagic/">puremagic</a>, or <a href="https://pypi.org/project/python-magic/">python-magic</a> libraries
should be used as replacements.
For example, the <code><span>puremagic.what()</span></code> function can be used
to replace the <code><span>imghdr.what()</span></code> function for all file formats
that were supported by <code><span>imghdr</span></code>.</p></li>
<li><p><code><span>mailcap</span></code>:
Use the <a href="https://docs.python.org/3.13/library/mimetypes.html#module-mimetypes" title="mimetypes: Mapping of filename extensions to MIME types."><code><span>mimetypes</span></code></a> module instead.</p></li>
<li><p><code><span>msilib</span></code></p></li>
<li><p><code><span>nis</span></code></p></li>
<li><p><code><span>nntplib</span></code>:
Use the <a href="https://pypi.org/project/pynntp/">pynntp</a> library from PyPI instead.</p></li>
<li><p><code><span>ossaudiodev</span></code>:
For audio playback, use the <a href="https://pypi.org/project/pygame/">pygame</a> library from PyPI instead.</p></li>
<li><p><code><span>pipes</span></code>:
Use the <a href="https://docs.python.org/3.13/library/subprocess.html#module-subprocess" title="subprocess: Subprocess management."><code><span>subprocess</span></code></a> module instead.</p></li>
<li><p><code><span>sndhdr</span></code>:
The <a href="https://pypi.org/project/filetype/">filetype</a>, <a href="https://pypi.org/project/puremagic/">puremagic</a>, or <a href="https://pypi.org/project/python-magic/">python-magic</a> libraries
should be used as replacements.</p></li>
<li><p><code><span>spwd</span></code>:
Use the <a href="https://pypi.org/project/python-pam/">python-pam</a> library from PyPI instead.</p></li>
<li><p><code><span>sunau</span></code></p></li>
<li><p><code><span>telnetlib</span></code>,
Use the <a href="https://pypi.org/project/telnetlib3/">telnetlib3</a> or <a href="https://pypi.org/project/Exscript/">Exscript</a> libraries from PyPI instead.</p></li>
<li><p><code><span>uu</span></code>:
Use the <a href="https://docs.python.org/3.13/library/base64.html#module-base64" title="base64: RFC 4648: Base16, Base32, Base64 Data Encodings; Base85 and Ascii85"><code><span>base64</span></code></a> module instead, as a modern alternative.</p></li>
<li><p><code><span>xdrlib</span></code></p></li>
</ul>
<p>(Contributed by Victor Stinner and Zachary Ware in <a href="https://github.com/python/cpython/issues/104773">gh-104773</a> and <a href="https://github.com/python/cpython/issues/104780">gh-104780</a>.)</p>
</section>
<section id="to3">
<h3>2to3<a href="#to3" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the <strong>2to3</strong> program and the <code><span>lib2to3</span></code> module,
previously deprecated in Python 3.11.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/104780">gh-104780</a>.)</p></li>
</ul>
</section>
<section id="builtins">
<h3>builtins<a href="#builtins" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove support for chained <a href="https://docs.python.org/3.13/library/functions.html#classmethod" title="classmethod"><code><span>classmethod</span></code></a> descriptors
(introduced in <a href="https://github.com/python/cpython/issues/63272">gh-63272</a>).
These can no longer be used to wrap other descriptors,
such as <a href="https://docs.python.org/3.13/library/functions.html#property" title="property"><code><span>property</span></code></a>.
The core design of this feature was flawed and led to several problems.
To “pass-through” a <a href="https://docs.python.org/3.13/library/functions.html#classmethod" title="classmethod"><code><span>classmethod</span></code></a>, consider using
the <code><span>__wrapped__</span></code> attribute that was added in Python 3.10.
(Contributed by Raymond Hettinger in <a href="https://github.com/python/cpython/issues/89519">gh-89519</a>.)</p></li>
<li><p>Raise a <a href="https://docs.python.org/3.13/library/exceptions.html#RuntimeError" title="RuntimeError"><code><span>RuntimeError</span></code></a> when calling <a href="https://docs.python.org/3.13/reference/datamodel.html#frame.clear" title="frame.clear"><code><span>frame.clear()</span></code></a>
on a suspended frame (as has always been the case for an executing frame).
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/79932">gh-79932</a>.)</p></li>
</ul>
</section>
<section id="id3">
<h3>configparser<a href="#id3" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the undocumented <code><span>LegacyInterpolation</span></code> class,
deprecated in the docstring since Python 3.2,
and at runtime since Python 3.11.
(Contributed by Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/104886">gh-104886</a>.)</p></li>
</ul>
</section>
<section id="importlib-metadata">
<h3>importlib.metadata<a href="#importlib-metadata" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove deprecated subscript (<a href="https://docs.python.org/3.13/reference/datamodel.html#object.__getitem__" title="object.__getitem__"><code><span>__getitem__()</span></code></a>) access for
<a href="https://docs.python.org/3.13/library/importlib.metadata.html#entry-points"><span>EntryPoint</span></a> objects.
(Contributed by Jason R. Coombs in <a href="https://github.com/python/cpython/issues/113175">gh-113175</a>.)</p></li>
</ul>
</section>
<section id="locale">
<h3>locale<a href="#locale" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the <code><span>locale.resetlocale()</span></code> function, deprecated in Python 3.11.
Use <code><span>locale.setlocale(locale.LC_ALL,</span> <span>"")</span></code> instead.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/104783">gh-104783</a>.)</p></li>
</ul>
</section>
<section id="opcode">
<h3>opcode<a href="#opcode" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Move <code><span>opcode.ENABLE_SPECIALIZATION</span></code> to <code><span>_opcode.ENABLE_SPECIALIZATION</span></code>.
This field was added in 3.12, it was never documented,
and is not intended for external use.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/105481">gh-105481</a>.)</p></li>
<li><p>Remove <code><span>opcode.is_pseudo()</span></code>, <code><span>opcode.MIN_PSEUDO_OPCODE</span></code>,
and <code><span>opcode.MAX_PSEUDO_OPCODE</span></code>, which were added in Python 3.12,
but were neither documented nor exposed through <a href="https://docs.python.org/3.13/library/dis.html#module-dis" title="dis: Disassembler for Python bytecode."><code><span>dis</span></code></a>,
and were not intended to be used externally.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/105481">gh-105481</a>.)</p></li>
</ul>
</section>
<section id="id4">
<h3>pathlib<a href="#id4" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the ability to use <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path" title="pathlib.Path"><code><span>Path</span></code></a> objects as context managers.
This functionality was deprecated and has had no effect since Python 3.9.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/83863">gh-83863</a>.)</p></li>
</ul>
</section>
<section id="id5">
<h3>re<a href="#id5" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the undocumented, deprecated, and broken
<code><span>re.template()</span></code> function and <code><span>re.TEMPLATE</span></code> / <code><span>re.T</span></code> flag.
(Contributed by Serhiy Storchaka and Nikita Sobolev in <a href="https://github.com/python/cpython/issues/105687">gh-105687</a>.)</p></li>
</ul>
</section>
<section id="tkinter-tix">
<h3>tkinter.tix<a href="#tkinter-tix" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the <code><span>tkinter.tix</span></code> module, deprecated in Python 3.6.
The third-party Tix library which the module wrapped is unmaintained.
(Contributed by Zachary Ware in <a href="https://github.com/python/cpython/issues/75552">gh-75552</a>.)</p></li>
</ul>
</section>
<section id="turtle">
<h3>turtle<a href="#turtle" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the <code><span>RawTurtle.settiltangle()</span></code> method,
deprecated in the documentation since Python 3.1
and at runtime since Python 3.11.
(Contributed by Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/104876">gh-104876</a>.)</p></li>
</ul>
</section>
<section id="id6">
<h3>typing<a href="#id6" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the <code><span>typing.io</span></code> and <code><span>typing.re</span></code> namespaces,
deprecated since Python 3.8.
The items in those namespaces can be imported directly
from the <a href="https://docs.python.org/3.13/library/typing.html#module-typing" title="typing: Support for type hints (see :pep:`484`)."><code><span>typing</span></code></a> module.
(Contributed by Sebastian Rittau in <a href="https://github.com/python/cpython/issues/92871">gh-92871</a>.)</p></li>
<li><p>Remove the keyword-argument method of creating
<a href="https://docs.python.org/3.13/library/typing.html#typing.TypedDict" title="typing.TypedDict"><code><span>TypedDict</span></code></a> types, deprecated in Python 3.11.
(Contributed by Tomas Roun in <a href="https://github.com/python/cpython/issues/104786">gh-104786</a>.)</p></li>
</ul>
</section>
<section id="unittest">
<h3>unittest<a href="#unittest" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the following <a href="https://docs.python.org/3.13/library/unittest.html#module-unittest" title="unittest: Unit testing framework for Python."><code><span>unittest</span></code></a> functions, deprecated in Python 3.11:</p>
<ul>
<li><p><code><span>unittest.findTestCases()</span></code></p></li>
<li><p><code><span>unittest.makeSuite()</span></code></p></li>
<li><p><code><span>unittest.getTestCaseNames()</span></code></p></li>
</ul>
<p>Use <a href="https://docs.python.org/3.13/library/unittest.html#unittest.TestLoader" title="unittest.TestLoader"><code><span>TestLoader</span></code></a> methods instead:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/unittest.html#unittest.TestLoader.loadTestsFromModule" title="unittest.TestLoader.loadTestsFromModule"><code><span>loadTestsFromModule()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/unittest.html#unittest.TestLoader.loadTestsFromTestCase" title="unittest.TestLoader.loadTestsFromTestCase"><code><span>loadTestsFromTestCase()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/unittest.html#unittest.TestLoader.getTestCaseNames" title="unittest.TestLoader.getTestCaseNames"><code><span>getTestCaseNames()</span></code></a></p></li>
</ul>
<p>(Contributed by Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/104835">gh-104835</a>.)</p>
</li>
<li><p>Remove the untested and undocumented <code><span>TestProgram.usageExit()</span></code>
method, deprecated in Python 3.11.
(Contributed by Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/104992">gh-104992</a>.)</p></li>
</ul>
</section>
<section id="urllib">
<h3>urllib<a href="#urllib" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the <em>cafile</em>, <em>capath</em>, and <em>cadefault</em> parameters of the
<a href="https://docs.python.org/3.13/library/urllib.request.html#urllib.request.urlopen" title="urllib.request.urlopen"><code><span>urllib.request.urlopen()</span></code></a> function, deprecated in Python 3.6.
Use the <em>context</em> parameter instead with an <a href="https://docs.python.org/3.13/library/ssl.html#ssl.SSLContext" title="ssl.SSLContext"><code><span>SSLContext</span></code></a> instance.
The <a href="https://docs.python.org/3.13/library/ssl.html#ssl.SSLContext.load_cert_chain" title="ssl.SSLContext.load_cert_chain"><code><span>ssl.SSLContext.load_cert_chain()</span></code></a> function
can be used to load specific certificates,
or let <a href="https://docs.python.org/3.13/library/ssl.html#ssl.create_default_context" title="ssl.create_default_context"><code><span>ssl.create_default_context()</span></code></a> select
the operating system’s trusted certificate authority (CA) certificates.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105382">gh-105382</a>.)</p></li>
</ul>
</section>
<section id="webbrowser">
<h3>webbrowser<a href="#webbrowser" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove the untested and undocumented <code><span>MacOSX</span></code> class,
deprecated in Python 3.11.
Use the <code><span>MacOSXOSAScript</span></code> class (introduced in Python 3.2) instead.
(Contributed by Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/104804">gh-104804</a>.)</p></li>
<li><p>Remove the deprecated <code><span>MacOSXOSAScript._name</span></code> attribute.
Use the <a href="https://docs.python.org/3.13/library/webbrowser.html#webbrowser.controller.name" title="webbrowser.controller.name"><code><span>MacOSXOSAScript.name</span></code></a>
attribute instead.
(Contributed by Nikita Sobolev in <a href="https://github.com/python/cpython/issues/105546">gh-105546</a>.)</p></li>
</ul>
</section>
</section>
<section id="new-deprecations">
<h2>New Deprecations<a href="#new-deprecations" title="Link to this heading">¶</a></h2>
<ul>
<li><p><a href="https://docs.python.org/3.13/reference/datamodel.html#user-defined-funcs"><span>User-defined functions</span></a>:</p>
<ul>
<li><p>Deprecate assignment to a function’s <a href="https://docs.python.org/3.13/reference/datamodel.html#function.__code__" title="function.__code__"><code><span>__code__</span></code></a> attribute,
where the new code object’s type does not match the function’s type.
The different types are:
plain function, generator, async generator, and coroutine.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/81137">gh-81137</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/array.html#module-array" title="array: Space efficient arrays of uniformly typed numeric values."><code><span>array</span></code></a>:</p>
<ul>
<li><p>Deprecate the <code><span>'u'</span></code> format code (<code><span>wchar_t</span></code>) at runtime.
This format code has been deprecated in documentation since Python 3.3,
and will be removed in Python 3.16.
Use the <code><span>'w'</span></code> format code (<a href="https://docs.python.org/3.13/c-api/unicode.html#c.Py_UCS4" title="Py_UCS4"><code><span>Py_UCS4</span></code></a>)
for Unicode characters instead.
(Contributed by Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/80480">gh-80480</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/ctypes.html#module-ctypes" title="ctypes: A foreign function library for Python."><code><span>ctypes</span></code></a>:</p>
<ul>
<li><p>Deprecate the undocumented <code><span>SetPointerType()</span></code> function,
to be removed in Python 3.15.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105733">gh-105733</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/glossary.html#term-soft-deprecated"><span>Soft-deprecate</span></a> the <a href="https://docs.python.org/3.13/library/ctypes.html#ctypes.ARRAY" title="ctypes.ARRAY"><code><span>ARRAY()</span></code></a>
function in favour of <code><span>type</span> <span>*</span> <span>length</span></code> multiplication.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105733">gh-105733</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/decimal.html#module-decimal" title="decimal: Implementation of the General Decimal Arithmetic  Specification."><code><span>decimal</span></code></a>:</p>
<ul>
<li><p>Deprecate the non-standard and undocumented <a href="https://docs.python.org/3.13/library/decimal.html#decimal.Decimal" title="decimal.Decimal"><code><span>Decimal</span></code></a>
format specifier <code><span>'N'</span></code>,
which is only supported in the <code><span>decimal</span></code> module’s C implementation.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/89902">gh-89902</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/dis.html#module-dis" title="dis: Disassembler for Python bytecode."><code><span>dis</span></code></a>:</p>
<ul>
<li><p>Deprecate the <code><span>HAVE_ARGUMENT</span></code> separator.
Check membership in <a href="https://docs.python.org/3.13/library/dis.html#dis.hasarg" title="dis.hasarg"><code><span>hasarg</span></code></a> instead.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/109319">gh-109319</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/getopt.html#module-getopt" title="getopt: Portable parser for command line options; support both short and long option names."><code><span>getopt</span></code></a> and <a href="https://docs.python.org/3.13/library/optparse.html#module-optparse" title="optparse: Command-line option parsing library. (deprecated)"><code><span>optparse</span></code></a>:</p>
<ul>
<li><p>Both modules are now <a href="https://docs.python.org/3.13/glossary.html#term-soft-deprecated"><span>soft deprecated</span></a>,
with <a href="https://docs.python.org/3.13/library/argparse.html#module-argparse" title="argparse: Command-line option and argument parsing library."><code><span>argparse</span></code></a> preferred for new projects.
This is a new soft-deprecation for the <code><span>getopt</span></code> module,
whereas the <code><span>optparse</span></code> module was already <em>de facto</em> soft deprecated.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/106535">gh-106535</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/gettext.html#module-gettext" title="gettext: Multilingual internationalization services."><code><span>gettext</span></code></a>:</p>
<ul>
<li><p>Deprecate non-integer numbers as arguments to functions and methods
that consider plural forms in the <code><span>gettext</span></code> module,
even if no translation was found.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/88434">gh-88434</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/glob.html#module-glob" title="glob: Unix shell style pathname pattern expansion."><code><span>glob</span></code></a>:</p>
<ul>
<li><p>Deprecate the undocumented <code><span>glob0()</span></code> and <code><span>glob1()</span></code> functions.
Use <a href="https://docs.python.org/3.13/library/glob.html#glob.glob" title="glob.glob"><code><span>glob()</span></code></a> and pass a <a href="https://docs.python.org/3.13/glossary.html#term-path-like-object"><span>path-like object</span></a> specifying
the root directory to the <em>root_dir</em> parameter instead.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/117337">gh-117337</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/http.server.html#module-http.server" title="http.server: HTTP server and request handlers."><code><span>http.server</span></code></a>:</p>
<ul>
<li><p>Deprecate <a href="https://docs.python.org/3.13/library/http.server.html#http.server.CGIHTTPRequestHandler" title="http.server.CGIHTTPRequestHandler"><code><span>CGIHTTPRequestHandler</span></code></a>,
to be removed in Python 3.15.
Process-based CGI HTTP servers have been out of favor for a very long time.
This code was outdated, unmaintained, and rarely used.
It has a high potential for both security and functionality bugs.
(Contributed by Gregory P. Smith in <a href="https://github.com/python/cpython/issues/109096">gh-109096</a>.)</p></li>
<li><p>Deprecate the <code><span>--cgi</span></code> flag to
the <strong>python -m http.server</strong> command-line interface,
to be removed in Python 3.15.
(Contributed by Gregory P. Smith in <a href="https://github.com/python/cpython/issues/109096">gh-109096</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/mimetypes.html#module-mimetypes" title="mimetypes: Mapping of filename extensions to MIME types."><code><span>mimetypes</span></code></a>:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/glossary.html#term-soft-deprecated"><span>Soft-deprecate</span></a> file path arguments
to <a href="https://docs.python.org/3.13/library/mimetypes.html#mimetypes.guess_type" title="mimetypes.guess_type"><code><span>guess_type()</span></code></a>,
use <a href="https://docs.python.org/3.13/library/mimetypes.html#mimetypes.guess_file_type" title="mimetypes.guess_file_type"><code><span>guess_file_type()</span></code></a> instead.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/66543">gh-66543</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/re.html#module-re" title="re: Regular expression operations."><code><span>re</span></code></a>:</p>
<ul>
<li><p>Deprecate passing the optional <em>maxsplit</em>, <em>count</em>, or <em>flags</em> arguments
as positional arguments to the module-level
<a href="https://docs.python.org/3.13/library/re.html#re.split" title="re.split"><code><span>split()</span></code></a>, <a href="https://docs.python.org/3.13/library/re.html#re.sub" title="re.sub"><code><span>sub()</span></code></a>, and <a href="https://docs.python.org/3.13/library/re.html#re.subn" title="re.subn"><code><span>subn()</span></code></a> functions.
These parameters will become <a href="https://docs.python.org/3.13/glossary.html#keyword-only-parameter"><span>keyword-only</span></a>
in a future version of Python.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/56166">gh-56166</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/pathlib.html#module-pathlib" title="pathlib: Object-oriented filesystem paths"><code><span>pathlib</span></code></a>:</p>
<ul>
<li><p>Deprecate <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.PurePath.is_reserved" title="pathlib.PurePath.is_reserved"><code><span>PurePath.is_reserved()</span></code></a>,
to be removed in Python 3.15.
Use <a href="https://docs.python.org/3.13/library/os.path.html#os.path.isreserved" title="os.path.isreserved"><code><span>os.path.isreserved()</span></code></a> to detect reserved paths on Windows.
(Contributed by Barney Gale in <a href="https://github.com/python/cpython/issues/88569">gh-88569</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/platform.html#module-platform" title="platform: Retrieves as much platform identifying data as possible."><code><span>platform</span></code></a>:</p>
<ul>
<li><p>Deprecate <a href="https://docs.python.org/3.13/library/platform.html#platform.java_ver" title="platform.java_ver"><code><span>java_ver()</span></code></a>,
to be removed in Python 3.15.
This function is only useful for Jython support, has a confusing API,
and is largely untested.
(Contributed by Nikita Sobolev in <a href="https://github.com/python/cpython/issues/116349">gh-116349</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/pydoc.html#module-pydoc" title="pydoc: Documentation generator and online help system."><code><span>pydoc</span></code></a>:</p>
<ul>
<li><p>Deprecate the undocumented <code><span>ispackage()</span></code> function.
(Contributed by Zackery Spytz in <a href="https://github.com/python/cpython/issues/64020">gh-64020</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/sqlite3.html#module-sqlite3" title="sqlite3: A DB-API 2.0 implementation using SQLite 3.x."><code><span>sqlite3</span></code></a>:</p>
<ul>
<li><p>Deprecate passing more than one positional argument to
the <a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.connect" title="sqlite3.connect"><code><span>connect()</span></code></a> function
and the <a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Connection" title="sqlite3.Connection"><code><span>Connection</span></code></a> constructor.
The remaining parameters will become keyword-only in Python 3.15.
(Contributed by Erlend E. Aasland in <a href="https://github.com/python/cpython/issues/107948">gh-107948</a>.)</p></li>
<li><p>Deprecate passing name, number of arguments, and the callable as keyword
arguments for <a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Connection.create_function" title="sqlite3.Connection.create_function"><code><span>Connection.create_function()</span></code></a>
and <a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Connection.create_aggregate" title="sqlite3.Connection.create_aggregate"><code><span>Connection.create_aggregate()</span></code></a>
These parameters will become positional-only in Python 3.15.
(Contributed by Erlend E. Aasland in <a href="https://github.com/python/cpython/issues/108278">gh-108278</a>.)</p></li>
<li><p>Deprecate passing the callback callable by keyword for the
<a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Connection.set_authorizer" title="sqlite3.Connection.set_authorizer"><code><span>set_authorizer()</span></code></a>,
<a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Connection.set_progress_handler" title="sqlite3.Connection.set_progress_handler"><code><span>set_progress_handler()</span></code></a>, and
<a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Connection.set_trace_callback" title="sqlite3.Connection.set_trace_callback"><code><span>set_trace_callback()</span></code></a>
<a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Connection" title="sqlite3.Connection"><code><span>Connection</span></code></a> methods.
The callback callables will become positional-only in Python 3.15.
(Contributed by Erlend E. Aasland in <a href="https://github.com/python/cpython/issues/108278">gh-108278</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/sys.html#module-sys" title="sys: Access system-specific parameters and functions."><code><span>sys</span></code></a>:</p>
<ul>
<li><p>Deprecate the <a href="https://docs.python.org/3.13/library/sys.html#sys._enablelegacywindowsfsencoding" title="sys._enablelegacywindowsfsencoding"><code><span>_enablelegacywindowsfsencoding()</span></code></a> function,
to be removed in Python 3.16.
Use the <span id="index-43"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING"><code><span>PYTHONLEGACYWINDOWSFSENCODING</span></code></a> environment variable instead.
(Contributed by Inada Naoki in <a href="https://github.com/python/cpython/issues/73427">gh-73427</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/tarfile.html#module-tarfile" title="tarfile: Read and write tar-format archive files."><code><span>tarfile</span></code></a>:</p>
<ul>
<li><p>Deprecate the undocumented and unused <code><span>TarFile.tarfile</span></code> attribute,
to be removed in Python 3.16.
(Contributed in <a href="https://github.com/python/cpython/issues/115256">gh-115256</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/traceback.html#module-traceback" title="traceback: Print or retrieve a stack traceback."><code><span>traceback</span></code></a>:</p>
<ul>
<li><p>Deprecate the <a href="https://docs.python.org/3.13/library/traceback.html#traceback.TracebackException.exc_type" title="traceback.TracebackException.exc_type"><code><span>TracebackException.exc_type</span></code></a> attribute.
Use <a href="https://docs.python.org/3.13/library/traceback.html#traceback.TracebackException.exc_type_str" title="traceback.TracebackException.exc_type_str"><code><span>TracebackException.exc_type_str</span></code></a> instead.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/112332">gh-112332</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/typing.html#module-typing" title="typing: Support for type hints (see :pep:`484`)."><code><span>typing</span></code></a>:</p>
<ul>
<li><p>Deprecate the undocumented keyword argument syntax for creating
<a href="https://docs.python.org/3.13/library/typing.html#typing.NamedTuple" title="typing.NamedTuple"><code><span>NamedTuple</span></code></a> classes
(e.g. <code><span>Point</span> <span>=</span> <span>NamedTuple("Point",</span> <span>x=int,</span> <span>y=int)</span></code>),
to be removed in Python 3.15.
Use the class-based syntax or the functional syntax instead.
(Contributed by Alex Waygood in <a href="https://github.com/python/cpython/issues/105566">gh-105566</a>.)</p></li>
<li><p>Deprecate omitting the <em>fields</em> parameter when creating
a <a href="https://docs.python.org/3.13/library/typing.html#typing.NamedTuple" title="typing.NamedTuple"><code><span>NamedTuple</span></code></a> or <a href="https://docs.python.org/3.13/library/typing.html#typing.TypedDict" title="typing.TypedDict"><code><span>typing.TypedDict</span></code></a> class,
and deprecate passing <code><span>None</span></code> to the <em>fields</em> parameter of both types.
Python 3.15 will require a valid sequence for the <em>fields</em> parameter.
To create a NamedTuple class with zero fields,
use <code><span>class</span> <span>NT(NamedTuple):</span> <span>pass</span></code> or <code><span>NT</span> <span>=</span> <span>NamedTuple("NT",</span> <span>())</span></code>.
To create a TypedDict class with zero fields,
use <code><span>class</span> <span>TD(TypedDict):</span> <span>pass</span></code> or <code><span>TD</span> <span>=</span> <span>TypedDict("TD",</span> <span>{})</span></code>.
(Contributed by Alex Waygood in <a href="https://github.com/python/cpython/issues/105566">gh-105566</a> and <a href="https://github.com/python/cpython/issues/105570">gh-105570</a>.)</p></li>
<li><p>Deprecate the <a href="https://docs.python.org/3.13/library/typing.html#typing.no_type_check_decorator" title="typing.no_type_check_decorator"><code><span>typing.no_type_check_decorator()</span></code></a> decorator function,
to be removed in in Python 3.15.
After eight years in the <a href="https://docs.python.org/3.13/library/typing.html#module-typing" title="typing: Support for type hints (see :pep:`484`)."><code><span>typing</span></code></a> module,
it has yet to be supported by any major type checker.
(Contributed by Alex Waygood in <a href="https://github.com/python/cpython/issues/106309">gh-106309</a>.)</p></li>
<li><p>Deprecate <a href="https://docs.python.org/3.13/library/typing.html#typing.AnyStr" title="typing.AnyStr"><code><span>typing.AnyStr</span></code></a>.
In Python 3.16, it will be removed from <code><span>typing.__all__</span></code>,
and a <a href="https://docs.python.org/3.13/library/exceptions.html#DeprecationWarning" title="DeprecationWarning"><code><span>DeprecationWarning</span></code></a> will be emitted at runtime
when it is imported or accessed.
It will be removed entirely in Python 3.18.
Use the new <a href="https://docs.python.org/3.13/reference/compound_stmts.html#type-params"><span>type parameter syntax</span></a> instead.
(Contributed by Michael The in <a href="https://github.com/python/cpython/issues/107116">gh-107116</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/wave.html#module-wave" title="wave: Provide an interface to the WAV sound format."><code><span>wave</span></code></a>:</p>
<ul>
<li><p>Deprecate the <a href="https://docs.python.org/3.13/library/wave.html#wave.Wave_read.getmark" title="wave.Wave_read.getmark"><code><span>getmark()</span></code></a>, <code><span>setmark()</span></code>,
and <a href="https://docs.python.org/3.13/library/wave.html#wave.Wave_read.getmarkers" title="wave.Wave_read.getmarkers"><code><span>getmarkers()</span></code></a> methods of
the <a href="https://docs.python.org/3.13/library/wave.html#wave.Wave_read" title="wave.Wave_read"><code><span>Wave_read</span></code></a> and <a href="https://docs.python.org/3.13/library/wave.html#wave.Wave_write" title="wave.Wave_write"><code><span>Wave_write</span></code></a> classes,
to be removed in Python 3.15.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105096">gh-105096</a>.)</p></li>
</ul>
</li>
</ul>
<section id="pending-removal-in-python-3-14">
<h3>Pending Removal in Python 3.14<a href="#pending-removal-in-python-3-14" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/argparse.html#module-argparse" title="argparse: Command-line option and argument parsing library."><code><span>argparse</span></code></a>: The <em>type</em>, <em>choices</em>, and <em>metavar</em> parameters
of <code><span>argparse.BooleanOptionalAction</span></code> are deprecated
and will be removed in 3.14.
(Contributed by Nikita Sobolev in <a href="https://github.com/python/cpython/issues/92248">gh-92248</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/ast.html#module-ast" title="ast: Abstract Syntax Tree classes and manipulation."><code><span>ast</span></code></a>: The following features have been deprecated in documentation
since Python 3.8, now cause a <a href="https://docs.python.org/3.13/library/exceptions.html#DeprecationWarning" title="DeprecationWarning"><code><span>DeprecationWarning</span></code></a> to be emitted at
runtime when they are accessed or used, and will be removed in Python 3.14:</p>
<ul>
<li><p><code><span>ast.Num</span></code></p></li>
<li><p><code><span>ast.Str</span></code></p></li>
<li><p><code><span>ast.Bytes</span></code></p></li>
<li><p><code><span>ast.NameConstant</span></code></p></li>
<li><p><code><span>ast.Ellipsis</span></code></p></li>
</ul>
<p>Use <a href="https://docs.python.org/3.13/library/ast.html#ast.Constant" title="ast.Constant"><code><span>ast.Constant</span></code></a> instead.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/90953">gh-90953</a>.)</p>
</li>
<li><p><a href="https://docs.python.org/3.13/library/asyncio.html#module-asyncio" title="asyncio: Asynchronous I/O."><code><span>asyncio</span></code></a>:</p>
<ul>
<li><p>The child watcher classes <a href="https://docs.python.org/3.13/library/asyncio-policy.html#asyncio.MultiLoopChildWatcher" title="asyncio.MultiLoopChildWatcher"><code><span>MultiLoopChildWatcher</span></code></a>,
<a href="https://docs.python.org/3.13/library/asyncio-policy.html#asyncio.FastChildWatcher" title="asyncio.FastChildWatcher"><code><span>FastChildWatcher</span></code></a>, <a href="https://docs.python.org/3.13/library/asyncio-policy.html#asyncio.AbstractChildWatcher" title="asyncio.AbstractChildWatcher"><code><span>AbstractChildWatcher</span></code></a>
and <a href="https://docs.python.org/3.13/library/asyncio-policy.html#asyncio.SafeChildWatcher" title="asyncio.SafeChildWatcher"><code><span>SafeChildWatcher</span></code></a> are deprecated and
will be removed in Python 3.14.
(Contributed by Kumar Aditya in <a href="https://github.com/python/cpython/issues/94597">gh-94597</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/asyncio-policy.html#asyncio.set_child_watcher" title="asyncio.set_child_watcher"><code><span>asyncio.set_child_watcher()</span></code></a>, <a href="https://docs.python.org/3.13/library/asyncio-policy.html#asyncio.get_child_watcher" title="asyncio.get_child_watcher"><code><span>asyncio.get_child_watcher()</span></code></a>,
<a href="https://docs.python.org/3.13/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.set_child_watcher" title="asyncio.AbstractEventLoopPolicy.set_child_watcher"><code><span>asyncio.AbstractEventLoopPolicy.set_child_watcher()</span></code></a> and
<a href="https://docs.python.org/3.13/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.get_child_watcher" title="asyncio.AbstractEventLoopPolicy.get_child_watcher"><code><span>asyncio.AbstractEventLoopPolicy.get_child_watcher()</span></code></a> are deprecated
and will be removed in Python 3.14.
(Contributed by Kumar Aditya in <a href="https://github.com/python/cpython/issues/94597">gh-94597</a>.)</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/asyncio-eventloop.html#asyncio.get_event_loop" title="asyncio.get_event_loop"><code><span>get_event_loop()</span></code></a> method of the
default event loop policy now emits a <a href="https://docs.python.org/3.13/library/exceptions.html#DeprecationWarning" title="DeprecationWarning"><code><span>DeprecationWarning</span></code></a> if there
is no current event loop set and it decides to create one.
(Contributed by Serhiy Storchaka and Guido van Rossum in <a href="https://github.com/python/cpython/issues/100160">gh-100160</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/collections.abc.html#module-collections.abc" title="collections.abc: Abstract base classes for containers"><code><span>collections.abc</span></code></a>: Deprecated <a href="https://docs.python.org/3.13/library/collections.abc.html#collections.abc.ByteString" title="collections.abc.ByteString"><code><span>ByteString</span></code></a>.
Prefer <code><span>Sequence</span></code> or <a href="https://docs.python.org/3.13/library/collections.abc.html#collections.abc.Buffer" title="collections.abc.Buffer"><code><span>Buffer</span></code></a>.
For use in typing, prefer a union, like <code><span>bytes</span> <span>|</span> <span>bytearray</span></code>,
or <a href="https://docs.python.org/3.13/library/collections.abc.html#collections.abc.Buffer" title="collections.abc.Buffer"><code><span>collections.abc.Buffer</span></code></a>.
(Contributed by Shantanu Jain in <a href="https://github.com/python/cpython/issues/91896">gh-91896</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/email.html#module-email" title="email: Package supporting the parsing, manipulating, and generating email messages."><code><span>email</span></code></a>: Deprecated the <em>isdst</em> parameter in <a href="https://docs.python.org/3.13/library/email.utils.html#email.utils.localtime" title="email.utils.localtime"><code><span>email.utils.localtime()</span></code></a>.
(Contributed by Alan Williams in <a href="https://github.com/python/cpython/issues/72346">gh-72346</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.html#module-importlib.abc" title="importlib.abc: Abstract base classes related to import"><code><span>importlib.abc</span></code></a> deprecated classes:</p>
<ul>
<li><p><code><span>importlib.abc.ResourceReader</span></code></p></li>
<li><p><code><span>importlib.abc.Traversable</span></code></p></li>
<li><p><code><span>importlib.abc.TraversableResources</span></code></p></li>
</ul>
<p>Use <a href="https://docs.python.org/3.13/library/importlib.resources.abc.html#module-importlib.resources.abc" title="importlib.resources.abc: Abstract base classes for resources"><code><span>importlib.resources.abc</span></code></a> classes instead:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/importlib.resources.abc.html#importlib.resources.abc.Traversable" title="importlib.resources.abc.Traversable"><code><span>importlib.resources.abc.Traversable</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.resources.abc.html#importlib.resources.abc.TraversableResources" title="importlib.resources.abc.TraversableResources"><code><span>importlib.resources.abc.TraversableResources</span></code></a></p></li>
</ul>
<p>(Contributed by Jason R. Coombs and Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/93963">gh-93963</a>.)</p>
</li>
<li><p><a href="https://docs.python.org/3.13/library/itertools.html#module-itertools" title="itertools: Functions creating iterators for efficient looping."><code><span>itertools</span></code></a> had undocumented, inefficient, historically buggy,
and inconsistent support for copy, deepcopy, and pickle operations.
This will be removed in 3.14 for a significant reduction in code
volume and maintenance burden.
(Contributed by Raymond Hettinger in <a href="https://github.com/python/cpython/issues/101588">gh-101588</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/multiprocessing.html#module-multiprocessing" title="multiprocessing: Process-based parallelism."><code><span>multiprocessing</span></code></a>: The default start method will change to a safer one on
Linux, BSDs, and other non-macOS POSIX platforms where <code><span>'fork'</span></code> is currently
the default (<a href="https://github.com/python/cpython/issues/84559">gh-84559</a>). Adding a runtime warning about this was deemed too
disruptive as the majority of code is not expected to care. Use the
<a href="https://docs.python.org/3.13/library/multiprocessing.html#multiprocessing.get_context" title="multiprocessing.get_context"><code><span>get_context()</span></code></a> or
<a href="https://docs.python.org/3.13/library/multiprocessing.html#multiprocessing.set_start_method" title="multiprocessing.set_start_method"><code><span>set_start_method()</span></code></a> APIs to explicitly specify when
your code <em>requires</em> <code><span>'fork'</span></code>.  See <a href="https://docs.python.org/3.13/library/multiprocessing.html#multiprocessing-start-methods"><span>Contexts and start methods</span></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/pathlib.html#module-pathlib" title="pathlib: Object-oriented filesystem paths"><code><span>pathlib</span></code></a>: <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.PurePath.is_relative_to" title="pathlib.PurePath.is_relative_to"><code><span>is_relative_to()</span></code></a> and
<a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.PurePath.relative_to" title="pathlib.PurePath.relative_to"><code><span>relative_to()</span></code></a>: passing additional arguments is
deprecated.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/pkgutil.html#module-pkgutil" title="pkgutil: Utilities for the import system."><code><span>pkgutil</span></code></a>: <a href="https://docs.python.org/3.13/library/pkgutil.html#pkgutil.find_loader" title="pkgutil.find_loader"><code><span>find_loader()</span></code></a> and <a href="https://docs.python.org/3.13/library/pkgutil.html#pkgutil.get_loader" title="pkgutil.get_loader"><code><span>get_loader()</span></code></a>
now raise <a href="https://docs.python.org/3.13/library/exceptions.html#DeprecationWarning" title="DeprecationWarning"><code><span>DeprecationWarning</span></code></a>;
use <a href="https://docs.python.org/3.13/library/importlib.html#importlib.util.find_spec" title="importlib.util.find_spec"><code><span>importlib.util.find_spec()</span></code></a> instead.
(Contributed by Nikita Sobolev in <a href="https://github.com/python/cpython/issues/97850">gh-97850</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/pty.html#module-pty" title="pty: Pseudo-Terminal Handling for Unix. (Unix)"><code><span>pty</span></code></a>:</p>
<ul>
<li><p><code><span>master_open()</span></code>: use <a href="https://docs.python.org/3.13/library/pty.html#pty.openpty" title="pty.openpty"><code><span>pty.openpty()</span></code></a>.</p></li>
<li><p><code><span>slave_open()</span></code>: use <a href="https://docs.python.org/3.13/library/pty.html#pty.openpty" title="pty.openpty"><code><span>pty.openpty()</span></code></a>.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/sqlite3.html#module-sqlite3" title="sqlite3: A DB-API 2.0 implementation using SQLite 3.x."><code><span>sqlite3</span></code></a>:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.version" title="sqlite3.version"><code><span>version</span></code></a> and <a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.version_info" title="sqlite3.version_info"><code><span>version_info</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Cursor.execute" title="sqlite3.Cursor.execute"><code><span>execute()</span></code></a> and <a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3.Cursor.executemany" title="sqlite3.Cursor.executemany"><code><span>executemany()</span></code></a>
if <a href="https://docs.python.org/3.13/library/sqlite3.html#sqlite3-placeholders"><span>named placeholders</span></a> are used and
<em>parameters</em> is a sequence instead of a <a href="https://docs.python.org/3.13/library/stdtypes.html#dict" title="dict"><code><span>dict</span></code></a>.</p></li>
<li><p>date and datetime adapter, date and timestamp converter:
see the <a href="https://docs.python.org/3.13/library/sqlite3.html#module-sqlite3" title="sqlite3: A DB-API 2.0 implementation using SQLite 3.x."><code><span>sqlite3</span></code></a> documentation for suggested replacement recipes.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/types.html#types.CodeType" title="types.CodeType"><code><span>types.CodeType</span></code></a>: Accessing <a href="https://docs.python.org/3.13/reference/datamodel.html#codeobject.co_lnotab" title="codeobject.co_lnotab"><code><span>co_lnotab</span></code></a> was
deprecated in <span id="index-44"></span><a href="https://peps.python.org/pep-0626/"><strong>PEP 626</strong></a>
since 3.10 and was planned to be removed in 3.12,
but it only got a proper <a href="https://docs.python.org/3.13/library/exceptions.html#DeprecationWarning" title="DeprecationWarning"><code><span>DeprecationWarning</span></code></a> in 3.12.
May be removed in 3.14.
(Contributed by Nikita Sobolev in <a href="https://github.com/python/cpython/issues/101866">gh-101866</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/typing.html#module-typing" title="typing: Support for type hints (see :pep:`484`)."><code><span>typing</span></code></a>: <a href="https://docs.python.org/3.13/library/typing.html#typing.ByteString" title="typing.ByteString"><code><span>ByteString</span></code></a>, deprecated since Python 3.9,
now causes a <a href="https://docs.python.org/3.13/library/exceptions.html#DeprecationWarning" title="DeprecationWarning"><code><span>DeprecationWarning</span></code></a> to be emitted when it is used.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/urllib.html#module-urllib" title="urllib"><code><span>urllib</span></code></a>:
<code><span>urllib.parse.Quoter</span></code> is deprecated: it was not intended to be a
public API.
(Contributed by Gregory P. Smith in <a href="https://github.com/python/cpython/issues/88168">gh-88168</a>.)</p></li>
</ul>
</section>
<section id="pending-removal-in-python-3-15">
<h3>Pending Removal in Python 3.15<a href="#pending-removal-in-python-3-15" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/ctypes.html#module-ctypes" title="ctypes: A foreign function library for Python."><code><span>ctypes</span></code></a>:</p>
<ul>
<li><p>The undocumented <code><span>ctypes.SetPointerType()</span></code> function
has been deprecated since Python 3.13.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/http.server.html#module-http.server" title="http.server: HTTP server and request handlers."><code><span>http.server</span></code></a>:</p>
<ul>
<li><p>The obsolete and rarely used <a href="https://docs.python.org/3.13/library/http.server.html#http.server.CGIHTTPRequestHandler" title="http.server.CGIHTTPRequestHandler"><code><span>CGIHTTPRequestHandler</span></code></a>
has been deprecated since Python 3.13.
No direct replacement exists.
<em>Anything</em> is better than CGI to interface
a web server with a request handler.</p></li>
<li><p>The <code><span>--cgi</span></code> flag to the <strong>python -m http.server</strong>
command-line interface has been deprecated since Python 3.13.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.html#module-importlib" title="importlib: The implementation of the import machinery."><code><span>importlib</span></code></a>: <code><span>__package__</span></code> and <code><span>__cached__</span></code> will cease to be set or
taken into consideration by the import system (<a href="https://github.com/python/cpython/issues/97879">gh-97879</a>).</p></li>
<li><p><a href="https://docs.python.org/3.13/library/locale.html#module-locale" title="locale: Internationalization services."><code><span>locale</span></code></a>:</p>
<ul>
<li><p>The <a href="https://docs.python.org/3.13/library/locale.html#locale.getdefaultlocale" title="locale.getdefaultlocale"><code><span>getdefaultlocale()</span></code></a> function
has been deprecated since Python 3.11.
Its removal was originally planned for Python 3.13 (<a href="https://github.com/python/cpython/issues/90817">gh-90817</a>),
but has been postponed to Python 3.15.
Use <a href="https://docs.python.org/3.13/library/locale.html#locale.getlocale" title="locale.getlocale"><code><span>getlocale()</span></code></a>, <a href="https://docs.python.org/3.13/library/locale.html#locale.setlocale" title="locale.setlocale"><code><span>setlocale()</span></code></a>,
and <a href="https://docs.python.org/3.13/library/locale.html#locale.getencoding" title="locale.getencoding"><code><span>getencoding()</span></code></a> instead.
(Contributed by Hugo van Kemenade in <a href="https://github.com/python/cpython/issues/111187">gh-111187</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/pathlib.html#module-pathlib" title="pathlib: Object-oriented filesystem paths"><code><span>pathlib</span></code></a>:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.PurePath.is_reserved" title="pathlib.PurePath.is_reserved"><code><span>PurePath.is_reserved()</span></code></a>
has been deprecated since Python 3.13.
Use <a href="https://docs.python.org/3.13/library/os.path.html#os.path.isreserved" title="os.path.isreserved"><code><span>os.path.isreserved()</span></code></a> to detect reserved paths on Windows.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/platform.html#module-platform" title="platform: Retrieves as much platform identifying data as possible."><code><span>platform</span></code></a>:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/platform.html#platform.java_ver" title="platform.java_ver"><code><span>java_ver()</span></code></a> has been deprecated since Python 3.13.
This function is only useful for Jython support, has a confusing API,
and is largely untested.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/threading.html#module-threading" title="threading: Thread-based parallelism."><code><span>threading</span></code></a>:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/threading.html#threading.RLock" title="threading.RLock"><code><span>RLock()</span></code></a> will take no arguments in Python 3.15.
Passing any arguments has been deprecated since Python 3.14,
as the  Python version does not permit any arguments,
but the C version allows any number of positional or keyword arguments,
ignoring every argument.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/typing.html#module-typing" title="typing: Support for type hints (see :pep:`484`)."><code><span>typing</span></code></a>:</p>
<ul>
<li><p>The undocumented keyword argument syntax for creating
<a href="https://docs.python.org/3.13/library/typing.html#typing.NamedTuple" title="typing.NamedTuple"><code><span>NamedTuple</span></code></a> classes
(e.g. <code><span>Point</span> <span>=</span> <span>NamedTuple("Point",</span> <span>x=int,</span> <span>y=int)</span></code>)
has been deprecated since Python 3.13.
Use the class-based syntax or the functional syntax instead.</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/typing.html#typing.no_type_check_decorator" title="typing.no_type_check_decorator"><code><span>typing.no_type_check_decorator()</span></code></a> decorator function
has been deprecated since Python 3.13.
After eight years in the <a href="https://docs.python.org/3.13/library/typing.html#module-typing" title="typing: Support for type hints (see :pep:`484`)."><code><span>typing</span></code></a> module,
it has yet to be supported by any major type checker.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/wave.html#module-wave" title="wave: Provide an interface to the WAV sound format."><code><span>wave</span></code></a>:</p>
<ul>
<li><p>The <a href="https://docs.python.org/3.13/library/wave.html#wave.Wave_read.getmark" title="wave.Wave_read.getmark"><code><span>getmark()</span></code></a>, <code><span>setmark()</span></code>,
and <a href="https://docs.python.org/3.13/library/wave.html#wave.Wave_read.getmarkers" title="wave.Wave_read.getmarkers"><code><span>getmarkers()</span></code></a> methods of
the <a href="https://docs.python.org/3.13/library/wave.html#wave.Wave_read" title="wave.Wave_read"><code><span>Wave_read</span></code></a> and <a href="https://docs.python.org/3.13/library/wave.html#wave.Wave_write" title="wave.Wave_write"><code><span>Wave_write</span></code></a> classes
have been deprecated since Python 3.13.</p></li>
</ul>
</li>
</ul>
</section>
<section id="pending-removal-in-python-3-16">
<h3>Pending Removal in Python 3.16<a href="#pending-removal-in-python-3-16" title="Link to this heading">¶</a></h3>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/builtins.html#module-builtins" title="builtins: The module that provides the built-in namespace."><code><span>builtins</span></code></a>:</p>
<ul>
<li><p>Bitwise inversion on boolean types, <code><span>~True</span></code> or <code><span>~False</span></code>
has been deprecated since Python 3.12,
as it produces surprising and unintuitive results (<code><span>-2</span></code> and <code><span>-1</span></code>).
Use <code><span>not</span> <span>x</span></code> instead for the logical negation of a Boolean.
In the rare case that you need the bitwise inversion of
the underlying integer, convert to <code><span>int</span></code> explicitly (<code><span>~int(x)</span></code>).</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/array.html#module-array" title="array: Space efficient arrays of uniformly typed numeric values."><code><span>array</span></code></a>:</p>
<ul>
<li><p>The <code><span>'u'</span></code> format code (<code><span>wchar_t</span></code>)
has been deprecated in documentation since Python 3.3
and at runtime since Python 3.13.
Use the <code><span>'w'</span></code> format code (<a href="https://docs.python.org/3.13/c-api/unicode.html#c.Py_UCS4" title="Py_UCS4"><code><span>Py_UCS4</span></code></a>)
for Unicode characters instead.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/shutil.html#module-shutil" title="shutil: High-level file operations, including copying."><code><span>shutil</span></code></a>:</p>
<ul>
<li><p>The <code><span>ExecError</span></code> exception
has been deprecated since Python 3.14.
It has not been used by any function in <code><span>shutil</span></code> since Python 3.4,
and is now an alias of <a href="https://docs.python.org/3.13/library/exceptions.html#RuntimeError" title="RuntimeError"><code><span>RuntimeError</span></code></a>.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/symtable.html#module-symtable" title="symtable: Interface to the compiler's internal symbol tables."><code><span>symtable</span></code></a>:</p>
<ul>
<li><p>The <a href="https://docs.python.org/3.13/library/symtable.html#symtable.Class.get_methods" title="symtable.Class.get_methods"><code><span>Class.get_methods</span></code></a> method
has been deprecated since Python 3.14.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/sys.html#module-sys" title="sys: Access system-specific parameters and functions."><code><span>sys</span></code></a>:</p>
<ul>
<li><p>The <a href="https://docs.python.org/3.13/library/sys.html#sys._enablelegacywindowsfsencoding" title="sys._enablelegacywindowsfsencoding"><code><span>_enablelegacywindowsfsencoding()</span></code></a> function
has been deprecated since Python 3.13.
Use the <span id="index-45"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING"><code><span>PYTHONLEGACYWINDOWSFSENCODING</span></code></a> environment variable instead.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/tarfile.html#module-tarfile" title="tarfile: Read and write tar-format archive files."><code><span>tarfile</span></code></a>:</p>
<ul>
<li><p>The undocumented and unused <code><span>TarFile.tarfile</span></code> attribute
has been deprecated since Python 3.13.</p></li>
</ul>
</li>
</ul>
</section>
<section id="pending-removal-in-future-versions">
<h3>Pending Removal in Future Versions<a href="#pending-removal-in-future-versions" title="Link to this heading">¶</a></h3>
<p>The following APIs will be removed in the future,
although there is currently no date scheduled for their removal.</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/argparse.html#module-argparse" title="argparse: Command-line option and argument parsing library."><code><span>argparse</span></code></a>: Nesting argument groups and nesting mutually exclusive
groups are deprecated.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/array.html#module-array" title="array: Space efficient arrays of uniformly typed numeric values."><code><span>array</span></code></a>’s <code><span>'u'</span></code> format code (<a href="https://github.com/python/cpython/issues/57281">gh-57281</a>)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/builtins.html#module-builtins" title="builtins: The module that provides the built-in namespace."><code><span>builtins</span></code></a>:</p>
<ul>
<li><p><code><span>bool(NotImplemented)</span></code>.</p></li>
<li><p>Generators: <code><span>throw(type,</span> <span>exc,</span> <span>tb)</span></code> and <code><span>athrow(type,</span> <span>exc,</span> <span>tb)</span></code>
signature is deprecated: use <code><span>throw(exc)</span></code> and <code><span>athrow(exc)</span></code> instead,
the single argument signature.</p></li>
<li><p>Currently Python accepts numeric literals immediately followed by keywords,
for example <code><span>0in</span> <span>x</span></code>, <code><span>1or</span> <span>x</span></code>, <code><span>0if</span> <span>1else</span> <span>2</span></code>.  It allows confusing and
ambiguous expressions like <code><span>[0x1for</span> <span>x</span> <span>in</span> <span>y]</span></code> (which can be interpreted as
<code><span>[0x1</span> <span>for</span> <span>x</span> <span>in</span> <span>y]</span></code> or <code><span>[0x1f</span> <span>or</span> <span>x</span> <span>in</span> <span>y]</span></code>).  A syntax warning is raised
if the numeric literal is immediately followed by one of keywords
<a href="https://docs.python.org/3.13/reference/expressions.html#and"><code><span>and</span></code></a>, <a href="https://docs.python.org/3.13/reference/compound_stmts.html#else"><code><span>else</span></code></a>, <a href="https://docs.python.org/3.13/reference/compound_stmts.html#for"><code><span>for</span></code></a>, <a href="https://docs.python.org/3.13/reference/compound_stmts.html#if"><code><span>if</span></code></a>,
<a href="https://docs.python.org/3.13/reference/expressions.html#in"><code><span>in</span></code></a>, <a href="https://docs.python.org/3.13/reference/expressions.html#is"><code><span>is</span></code></a> and <a href="https://docs.python.org/3.13/reference/expressions.html#or"><code><span>or</span></code></a>.  In a future release it
will be changed to a syntax error. (<a href="https://github.com/python/cpython/issues/87999">gh-87999</a>)</p></li>
<li><p>Support for <code><span>__index__()</span></code> and <code><span>__int__()</span></code> method returning non-int type:
these methods will be required to return an instance of a strict subclass of
<a href="https://docs.python.org/3.13/library/functions.html#int" title="int"><code><span>int</span></code></a>.</p></li>
<li><p>Support for <code><span>__float__()</span></code> method returning a strict subclass of
<a href="https://docs.python.org/3.13/library/functions.html#float" title="float"><code><span>float</span></code></a>: these methods will be required to return an instance of
<a href="https://docs.python.org/3.13/library/functions.html#float" title="float"><code><span>float</span></code></a>.</p></li>
<li><p>Support for <code><span>__complex__()</span></code> method returning a strict subclass of
<a href="https://docs.python.org/3.13/library/functions.html#complex" title="complex"><code><span>complex</span></code></a>: these methods will be required to return an instance of
<a href="https://docs.python.org/3.13/library/functions.html#complex" title="complex"><code><span>complex</span></code></a>.</p></li>
<li><p>Delegation of <code><span>int()</span></code> to <code><span>__trunc__()</span></code> method.</p></li>
<li><p>Passing a complex number as the <em>real</em> or <em>imag</em> argument in the
<a href="https://docs.python.org/3.13/library/functions.html#complex" title="complex"><code><span>complex()</span></code></a> constructor is now deprecated; it should only be passed
as a single positional argument.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/109218">gh-109218</a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/calendar.html#module-calendar" title="calendar: Functions for working with calendars, including some emulation of the Unix cal program."><code><span>calendar</span></code></a>: <code><span>calendar.January</span></code> and <code><span>calendar.February</span></code> constants are
deprecated and replaced by <a href="https://docs.python.org/3.13/library/calendar.html#calendar.JANUARY" title="calendar.JANUARY"><code><span>calendar.JANUARY</span></code></a> and
<a href="https://docs.python.org/3.13/library/calendar.html#calendar.FEBRUARY" title="calendar.FEBRUARY"><code><span>calendar.FEBRUARY</span></code></a>.
(Contributed by Prince Roshan in <a href="https://github.com/python/cpython/issues/103636">gh-103636</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/reference/datamodel.html#codeobject.co_lnotab" title="codeobject.co_lnotab"><code><span>codeobject.co_lnotab</span></code></a>: use the <a href="https://docs.python.org/3.13/reference/datamodel.html#codeobject.co_lines" title="codeobject.co_lines"><code><span>codeobject.co_lines()</span></code></a> method
instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/datetime.html#module-datetime" title="datetime: Basic date and time types."><code><span>datetime</span></code></a>:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/datetime.html#datetime.datetime.utcnow" title="datetime.datetime.utcnow"><code><span>utcnow()</span></code></a>:
use <code><span>datetime.datetime.now(tz=datetime.UTC)</span></code>.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/datetime.html#datetime.datetime.utcfromtimestamp" title="datetime.datetime.utcfromtimestamp"><code><span>utcfromtimestamp()</span></code></a>:
use <code><span>datetime.datetime.fromtimestamp(timestamp,</span> <span>tz=datetime.UTC)</span></code>.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/gettext.html#module-gettext" title="gettext: Multilingual internationalization services."><code><span>gettext</span></code></a>: Plural value must be an integer.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.html#module-importlib" title="importlib: The implementation of the import machinery."><code><span>importlib</span></code></a>:</p>
<ul>
<li><p><code><span>load_module()</span></code> method: use <code><span>exec_module()</span></code> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.html#importlib.util.cache_from_source" title="importlib.util.cache_from_source"><code><span>cache_from_source()</span></code></a> <em>debug_override</em> parameter is
deprecated: use the <em>optimization</em> parameter instead.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/importlib.metadata.html#module-importlib.metadata" title="importlib.metadata: Accessing package metadata"><code><span>importlib.metadata</span></code></a>:</p>
<ul>
<li><p><code><span>EntryPoints</span></code> tuple interface.</p></li>
<li><p>Implicit <code><span>None</span></code> on return values.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/logging.html#module-logging" title="logging: Flexible event logging system for applications."><code><span>logging</span></code></a>: the <code><span>warn()</span></code> method has been deprecated
since Python 3.3, use <a href="https://docs.python.org/3.13/library/logging.html#logging.warning" title="logging.warning"><code><span>warning()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/mailbox.html#module-mailbox" title="mailbox: Manipulate mailboxes in various formats"><code><span>mailbox</span></code></a>: Use of StringIO input and text mode is deprecated, use
BytesIO and binary mode instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/os.html#module-os" title="os: Miscellaneous operating system interfaces."><code><span>os</span></code></a>: Calling <a href="https://docs.python.org/3.13/library/os.html#os.register_at_fork" title="os.register_at_fork"><code><span>os.register_at_fork()</span></code></a> in multi-threaded process.</p></li>
<li><p><code><span>pydoc.ErrorDuringImport</span></code>: A tuple value for <em>exc_info</em> parameter is
deprecated, use an exception instance.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/re.html#module-re" title="re: Regular expression operations."><code><span>re</span></code></a>: More strict rules are now applied for numerical group references
and group names in regular expressions.  Only sequence of ASCII digits is now
accepted as a numerical reference.  The group name in bytes patterns and
replacement strings can now only contain ASCII letters and digits and
underscore.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/91760">gh-91760</a>.)</p></li>
<li><p><code><span>sre_compile</span></code>, <code><span>sre_constants</span></code> and <code><span>sre_parse</span></code> modules.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/shutil.html#module-shutil" title="shutil: High-level file operations, including copying."><code><span>shutil</span></code></a>: <a href="https://docs.python.org/3.13/library/shutil.html#shutil.rmtree" title="shutil.rmtree"><code><span>rmtree()</span></code></a>’s <em>onerror</em> parameter is deprecated in
Python 3.12; use the <em>onexc</em> parameter instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/ssl.html#module-ssl" title="ssl: TLS/SSL wrapper for socket objects"><code><span>ssl</span></code></a> options and protocols:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/library/ssl.html#ssl.SSLContext" title="ssl.SSLContext"><code><span>ssl.SSLContext</span></code></a> without protocol argument is deprecated.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/ssl.html#ssl.SSLContext" title="ssl.SSLContext"><code><span>ssl.SSLContext</span></code></a>: <a href="https://docs.python.org/3.13/library/ssl.html#ssl.SSLContext.set_npn_protocols" title="ssl.SSLContext.set_npn_protocols"><code><span>set_npn_protocols()</span></code></a> and
<code><span>selected_npn_protocol()</span></code> are deprecated: use ALPN
instead.</p></li>
<li><p><code><span>ssl.OP_NO_SSL*</span></code> options</p></li>
<li><p><code><span>ssl.OP_NO_TLS*</span></code> options</p></li>
<li><p><code><span>ssl.PROTOCOL_SSLv3</span></code></p></li>
<li><p><code><span>ssl.PROTOCOL_TLS</span></code></p></li>
<li><p><code><span>ssl.PROTOCOL_TLSv1</span></code></p></li>
<li><p><code><span>ssl.PROTOCOL_TLSv1_1</span></code></p></li>
<li><p><code><span>ssl.PROTOCOL_TLSv1_2</span></code></p></li>
<li><p><code><span>ssl.TLSVersion.SSLv3</span></code></p></li>
<li><p><code><span>ssl.TLSVersion.TLSv1</span></code></p></li>
<li><p><code><span>ssl.TLSVersion.TLSv1_1</span></code></p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/sysconfig.html#sysconfig.is_python_build" title="sysconfig.is_python_build"><code><span>sysconfig.is_python_build()</span></code></a> <em>check_home</em> parameter is deprecated and
ignored.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/threading.html#module-threading" title="threading: Thread-based parallelism."><code><span>threading</span></code></a> methods:</p>
<ul>
<li><p><code><span>threading.Condition.notifyAll()</span></code>: use <a href="https://docs.python.org/3.13/library/threading.html#threading.Condition.notify_all" title="threading.Condition.notify_all"><code><span>notify_all()</span></code></a>.</p></li>
<li><p><code><span>threading.Event.isSet()</span></code>: use <a href="https://docs.python.org/3.13/library/threading.html#threading.Event.is_set" title="threading.Event.is_set"><code><span>is_set()</span></code></a>.</p></li>
<li><p><code><span>threading.Thread.isDaemon()</span></code>, <a href="https://docs.python.org/3.13/library/threading.html#threading.Thread.setDaemon" title="threading.Thread.setDaemon"><code><span>threading.Thread.setDaemon()</span></code></a>:
use <a href="https://docs.python.org/3.13/library/threading.html#threading.Thread.daemon" title="threading.Thread.daemon"><code><span>threading.Thread.daemon</span></code></a> attribute.</p></li>
<li><p><code><span>threading.Thread.getName()</span></code>, <a href="https://docs.python.org/3.13/library/threading.html#threading.Thread.setName" title="threading.Thread.setName"><code><span>threading.Thread.setName()</span></code></a>:
use <a href="https://docs.python.org/3.13/library/threading.html#threading.Thread.name" title="threading.Thread.name"><code><span>threading.Thread.name</span></code></a> attribute.</p></li>
<li><p><code><span>threading.currentThread()</span></code>: use <a href="https://docs.python.org/3.13/library/threading.html#threading.current_thread" title="threading.current_thread"><code><span>threading.current_thread()</span></code></a>.</p></li>
<li><p><code><span>threading.activeCount()</span></code>: use <a href="https://docs.python.org/3.13/library/threading.html#threading.active_count" title="threading.active_count"><code><span>threading.active_count()</span></code></a>.</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/typing.html#typing.Text" title="typing.Text"><code><span>typing.Text</span></code></a> (<a href="https://github.com/python/cpython/issues/92332">gh-92332</a>).</p></li>
<li><p><a href="https://docs.python.org/3.13/library/unittest.html#unittest.IsolatedAsyncioTestCase" title="unittest.IsolatedAsyncioTestCase"><code><span>unittest.IsolatedAsyncioTestCase</span></code></a>: it is deprecated to return a value
that is not <code><span>None</span></code> from a test case.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/urllib.parse.html#module-urllib.parse" title="urllib.parse: Parse URLs into or assemble them from components."><code><span>urllib.parse</span></code></a> deprecated functions: <a href="https://docs.python.org/3.13/library/urllib.parse.html#urllib.parse.urlparse" title="urllib.parse.urlparse"><code><span>urlparse()</span></code></a> instead</p>
<ul>
<li><p><code><span>splitattr()</span></code></p></li>
<li><p><code><span>splithost()</span></code></p></li>
<li><p><code><span>splitnport()</span></code></p></li>
<li><p><code><span>splitpasswd()</span></code></p></li>
<li><p><code><span>splitport()</span></code></p></li>
<li><p><code><span>splitquery()</span></code></p></li>
<li><p><code><span>splittag()</span></code></p></li>
<li><p><code><span>splittype()</span></code></p></li>
<li><p><code><span>splituser()</span></code></p></li>
<li><p><code><span>splitvalue()</span></code></p></li>
<li><p><code><span>to_bytes()</span></code></p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/urllib.request.html#module-urllib.request" title="urllib.request: Extensible library for opening URLs."><code><span>urllib.request</span></code></a>: <a href="https://docs.python.org/3.13/library/urllib.request.html#urllib.request.URLopener" title="urllib.request.URLopener"><code><span>URLopener</span></code></a> and
<a href="https://docs.python.org/3.13/library/urllib.request.html#urllib.request.FancyURLopener" title="urllib.request.FancyURLopener"><code><span>FancyURLopener</span></code></a> style of invoking requests is
deprecated. Use newer <a href="https://docs.python.org/3.13/library/urllib.request.html#urllib.request.urlopen" title="urllib.request.urlopen"><code><span>urlopen()</span></code></a> functions and methods.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/wsgiref.html#module-wsgiref" title="wsgiref: WSGI Utilities and Reference Implementation."><code><span>wsgiref</span></code></a>: <code><span>SimpleHandler.stdout.write()</span></code> should not do partial
writes.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/xml.etree.elementtree.html#module-xml.etree.ElementTree" title="xml.etree.ElementTree: Implementation of the ElementTree API."><code><span>xml.etree.ElementTree</span></code></a>: Testing the truth value of an
<a href="https://docs.python.org/3.13/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element" title="xml.etree.ElementTree.Element"><code><span>Element</span></code></a> is deprecated. In a future release it
will always return <code><span>True</span></code>. Prefer explicit <code><span>len(elem)</span></code> or
<code><span>elem</span> <span>is</span> <span>not</span> <span>None</span></code> tests instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/library/zipimport.html#zipimport.zipimporter.load_module" title="zipimport.zipimporter.load_module"><code><span>zipimport.zipimporter.load_module()</span></code></a> is deprecated:
use <a href="https://docs.python.org/3.13/library/zipimport.html#zipimport.zipimporter.exec_module" title="zipimport.zipimporter.exec_module"><code><span>exec_module()</span></code></a> instead.</p></li>
</ul>
</section>
</section>
<section id="cpython-bytecode-changes">
<h2>CPython Bytecode Changes<a href="#cpython-bytecode-changes" title="Link to this heading">¶</a></h2>
<ul>
<li><p>The oparg of <a href="https://docs.python.org/3.13/library/dis.html#opcode-YIELD_VALUE"><code><span>YIELD_VALUE</span></code></a> is now
<code><span>1</span></code> if the yield is part of a yield-from or await, and <code><span>0</span></code> otherwise.
The oparg of <a href="https://docs.python.org/3.13/library/dis.html#opcode-RESUME"><code><span>RESUME</span></code></a> was changed to add a bit indicating
if the except-depth is 1, which is needed to optimize closing of generators.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/111354">gh-111354</a>.)</p></li>
</ul>
</section>
<section id="c-api-changes">
<h2>C API Changes<a href="#c-api-changes" title="Link to this heading">¶</a></h2>
<section id="id7">
<h3>New Features<a href="#id7" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/monitoring.html#c-api-monitoring"><span>PyMonitoring C API</span></a>
for generating <span id="index-46"></span><a href="https://peps.python.org/pep-0669/"><strong>PEP 669</strong></a> monitoring events:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoringState" title="PyMonitoringState"><code><span>PyMonitoringState</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FirePyStartEvent" title="PyMonitoring_FirePyStartEvent"><code><span>PyMonitoring_FirePyStartEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FirePyResumeEvent" title="PyMonitoring_FirePyResumeEvent"><code><span>PyMonitoring_FirePyResumeEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FirePyReturnEvent" title="PyMonitoring_FirePyReturnEvent"><code><span>PyMonitoring_FirePyReturnEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FirePyYieldEvent" title="PyMonitoring_FirePyYieldEvent"><code><span>PyMonitoring_FirePyYieldEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FireCallEvent" title="PyMonitoring_FireCallEvent"><code><span>PyMonitoring_FireCallEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FireLineEvent" title="PyMonitoring_FireLineEvent"><code><span>PyMonitoring_FireLineEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FireJumpEvent" title="PyMonitoring_FireJumpEvent"><code><span>PyMonitoring_FireJumpEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FireBranchEvent" title="PyMonitoring_FireBranchEvent"><code><span>PyMonitoring_FireBranchEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FireCReturnEvent" title="PyMonitoring_FireCReturnEvent"><code><span>PyMonitoring_FireCReturnEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FirePyThrowEvent" title="PyMonitoring_FirePyThrowEvent"><code><span>PyMonitoring_FirePyThrowEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FireRaiseEvent" title="PyMonitoring_FireRaiseEvent"><code><span>PyMonitoring_FireRaiseEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FireCRaiseEvent" title="PyMonitoring_FireCRaiseEvent"><code><span>PyMonitoring_FireCRaiseEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FireReraiseEvent" title="PyMonitoring_FireReraiseEvent"><code><span>PyMonitoring_FireReraiseEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FireExceptionHandledEvent" title="PyMonitoring_FireExceptionHandledEvent"><code><span>PyMonitoring_FireExceptionHandledEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FirePyUnwindEvent" title="PyMonitoring_FirePyUnwindEvent"><code><span>PyMonitoring_FirePyUnwindEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_FireStopIterationEvent" title="PyMonitoring_FireStopIterationEvent"><code><span>PyMonitoring_FireStopIterationEvent()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_EnterScope" title="PyMonitoring_EnterScope"><code><span>PyMonitoring_EnterScope()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/monitoring.html#c.PyMonitoring_ExitScope" title="PyMonitoring_ExitScope"><code><span>PyMonitoring_ExitScope()</span></code></a></p></li>
</ul>
<p>(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/111997">gh-111997</a>).</p>
</li>
<li><p>Add <a href="https://docs.python.org/3.13/c-api/init.html#c.PyMutex" title="PyMutex"><code><span>PyMutex</span></code></a>, a lightweight mutex that occupies a single byte,
and the new <a href="https://docs.python.org/3.13/c-api/init.html#c.PyMutex_Lock" title="PyMutex_Lock"><code><span>PyMutex_Lock()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/init.html#c.PyMutex_Unlock" title="PyMutex_Unlock"><code><span>PyMutex_Unlock()</span></code></a> functions.
<code><span>PyMutex_Lock()</span></code> will release the <a href="https://docs.python.org/3.13/glossary.html#term-GIL"><span>GIL</span></a> (if currently held)
if the operation needs to block.
(Contributed by Sam Gross in <a href="https://github.com/python/cpython/issues/108724">gh-108724</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/time.html#c-api-time"><span>PyTime C API</span></a> to provide access to system clocks:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/time.html#c.PyTime_t" title="PyTime_t"><code><span>PyTime_t</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/time.html#c.PyTime_MIN" title="PyTime_MIN"><code><span>PyTime_MIN</span></code></a> and <a href="https://docs.python.org/3.13/c-api/time.html#c.PyTime_MAX" title="PyTime_MAX"><code><span>PyTime_MAX</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/time.html#c.PyTime_AsSecondsDouble" title="PyTime_AsSecondsDouble"><code><span>PyTime_AsSecondsDouble()</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/time.html#c.PyTime_Monotonic" title="PyTime_Monotonic"><code><span>PyTime_Monotonic()</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/time.html#c.PyTime_MonotonicRaw" title="PyTime_MonotonicRaw"><code><span>PyTime_MonotonicRaw()</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/time.html#c.PyTime_PerfCounter" title="PyTime_PerfCounter"><code><span>PyTime_PerfCounter()</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/time.html#c.PyTime_PerfCounterRaw" title="PyTime_PerfCounterRaw"><code><span>PyTime_PerfCounterRaw()</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/time.html#c.PyTime_Time" title="PyTime_Time"><code><span>PyTime_Time()</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/time.html#c.PyTime_TimeRaw" title="PyTime_TimeRaw"><code><span>PyTime_TimeRaw()</span></code></a>.</p></li>
</ul>
<p>(Contributed by Victor Stinner and Petr Viktorin in <a href="https://github.com/python/cpython/issues/110850">gh-110850</a>.)</p>
</li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_ContainsString" title="PyDict_ContainsString"><code><span>PyDict_ContainsString()</span></code></a> function
with the same behavior as <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_Contains" title="PyDict_Contains"><code><span>PyDict_Contains()</span></code></a>,
but <em>key</em> is specified as a <span><span>const</span><span> </span><span>char</span><span>*</span></span> UTF-8 encoded bytes string,
rather than a <span><a href="https://docs.python.org/3.13/c-api/structures.html#c.PyObject" title="PyObject"><span>PyObject</span></a><span>*</span></span>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/108314">gh-108314</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_GetItemRef" title="PyDict_GetItemRef"><code><span>PyDict_GetItemRef()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_GetItemStringRef" title="PyDict_GetItemStringRef"><code><span>PyDict_GetItemStringRef()</span></code></a>
functions,
which behave similarly to <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_GetItemWithError" title="PyDict_GetItemWithError"><code><span>PyDict_GetItemWithError()</span></code></a>,
but return a  <a href="https://docs.python.org/3.13/glossary.html#term-strong-reference"><span>strong reference</span></a> instead of a <a href="https://docs.python.org/3.13/glossary.html#term-borrowed-reference"><span>borrowed reference</span></a>.
Moreover, these functions return <code><span>-1</span></code> on error,
removing the need to check <code><span>PyErr_Occurred()</span></code>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/106004">gh-106004</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_SetDefaultRef" title="PyDict_SetDefaultRef"><code><span>PyDict_SetDefaultRef()</span></code></a> function,
which behaves similarly to <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_SetDefault" title="PyDict_SetDefault"><code><span>PyDict_SetDefault()</span></code></a>,
but returns a <a href="https://docs.python.org/3.13/glossary.html#term-strong-reference"><span>strong reference</span></a> instead of a <a href="https://docs.python.org/3.13/glossary.html#term-borrowed-reference"><span>borrowed reference</span></a>.
This function returns <code><span>-1</span></code> on error,
<code><span>0</span></code> on insertion,
and <code><span>1</span></code> if the key was already present in the dictionary.
(Contributed by Sam Gross in <a href="https://github.com/python/cpython/issues/112066">gh-112066</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_Pop" title="PyDict_Pop"><code><span>PyDict_Pop()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_PopString" title="PyDict_PopString"><code><span>PyDict_PopString()</span></code></a> functions
to remove a key from a dictionary and optionally return the removed value.
This is similar to <a href="https://docs.python.org/3.13/library/stdtypes.html#dict.pop" title="dict.pop"><code><span>dict.pop()</span></code></a>,
though there is no default value,
and <a href="https://docs.python.org/3.13/library/exceptions.html#KeyError" title="KeyError"><code><span>KeyError</span></code></a> is not raised for missing keys.
(Contributed by Stefan Behnel and Victor Stinner in <a href="https://github.com/python/cpython/issues/111262">gh-111262</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/mapping.html#c.PyMapping_GetOptionalItem" title="PyMapping_GetOptionalItem"><code><span>PyMapping_GetOptionalItem()</span></code></a>
and <a href="https://docs.python.org/3.13/c-api/mapping.html#c.PyMapping_GetOptionalItemString" title="PyMapping_GetOptionalItemString"><code><span>PyMapping_GetOptionalItemString()</span></code></a> functions
as alternatives to <a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_GetItem" title="PyObject_GetItem"><code><span>PyObject_GetItem()</span></code></a>
and <a href="https://docs.python.org/3.13/c-api/mapping.html#c.PyMapping_GetItemString" title="PyMapping_GetItemString"><code><span>PyMapping_GetItemString()</span></code></a> respectively.
The new functions do not raise <a href="https://docs.python.org/3.13/library/exceptions.html#KeyError" title="KeyError"><code><span>KeyError</span></code></a>
if the requested key is missing from the mapping.
These variants are more convenient and faster
if a missing key should not be treated as a failure.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/106307">gh-106307</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_GetOptionalAttr" title="PyObject_GetOptionalAttr"><code><span>PyObject_GetOptionalAttr()</span></code></a>
and <a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_GetOptionalAttrString" title="PyObject_GetOptionalAttrString"><code><span>PyObject_GetOptionalAttrString()</span></code></a> functions
as alternatives to  <a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_GetAttr" title="PyObject_GetAttr"><code><span>PyObject_GetAttr()</span></code></a>
and <a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_GetAttrString" title="PyObject_GetAttrString"><code><span>PyObject_GetAttrString()</span></code></a> respectively.
The new functions do not raise <a href="https://docs.python.org/3.13/library/exceptions.html#AttributeError" title="AttributeError"><code><span>AttributeError</span></code></a>
if the requested attribute is not found on the object.
These variants are more convenient and faster
if the missing attribute should not be treated as a failure.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/106521">gh-106521</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/exceptions.html#c.PyErr_FormatUnraisable" title="PyErr_FormatUnraisable"><code><span>PyErr_FormatUnraisable()</span></code></a> function
as an extension to <a href="https://docs.python.org/3.13/c-api/exceptions.html#c.PyErr_WriteUnraisable" title="PyErr_WriteUnraisable"><code><span>PyErr_WriteUnraisable()</span></code></a>
that allows customizing the warning message.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/108082">gh-108082</a>.)</p></li>
<li><p>Add new functions that return a <a href="https://docs.python.org/3.13/glossary.html#term-strong-reference"><span>strong reference</span></a> instead of
a <a href="https://docs.python.org/3.13/glossary.html#term-borrowed-reference"><span>borrowed reference</span></a> for frame locals, globals, and builtins,
as part of <a href="#whatsnew313-locals-semantics"><span>PEP 667</span></a>:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetFrameBuiltins" title="PyEval_GetFrameBuiltins"><code><span>PyEval_GetFrameBuiltins()</span></code></a> replaces <a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetBuiltins" title="PyEval_GetBuiltins"><code><span>PyEval_GetBuiltins()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetFrameGlobals" title="PyEval_GetFrameGlobals"><code><span>PyEval_GetFrameGlobals()</span></code></a> replaces <a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetGlobals" title="PyEval_GetGlobals"><code><span>PyEval_GetGlobals()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetFrameLocals" title="PyEval_GetFrameLocals"><code><span>PyEval_GetFrameLocals()</span></code></a> replaces <a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetLocals" title="PyEval_GetLocals"><code><span>PyEval_GetLocals()</span></code></a></p></li>
</ul>
<p>(Contributed by Mark Shannon and Tian Gao in <a href="https://github.com/python/cpython/issues/74929">gh-74929</a>.)</p>
</li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/object.html#c.Py_GetConstant" title="Py_GetConstant"><code><span>Py_GetConstant()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/object.html#c.Py_GetConstantBorrowed" title="Py_GetConstantBorrowed"><code><span>Py_GetConstantBorrowed()</span></code></a>
functions to get <a href="https://docs.python.org/3.13/glossary.html#term-strong-reference"><span>strong</span></a>
or <a href="https://docs.python.org/3.13/glossary.html#term-borrowed-reference"><span>borrowed</span></a> references to constants.
For example, <code><span>Py_GetConstant(Py_CONSTANT_ZERO)</span></code> returns a strong reference
to the constant zero.
(Contributed by Victor  Stinner in <a href="https://github.com/python/cpython/issues/115754">gh-115754</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/import.html#c.PyImport_AddModuleRef" title="PyImport_AddModuleRef"><code><span>PyImport_AddModuleRef()</span></code></a> function
as a replacement for <a href="https://docs.python.org/3.13/c-api/import.html#c.PyImport_AddModule" title="PyImport_AddModule"><code><span>PyImport_AddModule()</span></code></a>
that returns a <a href="https://docs.python.org/3.13/glossary.html#term-strong-reference"><span>strong reference</span></a> instead of a <a href="https://docs.python.org/3.13/glossary.html#term-borrowed-reference"><span>borrowed reference</span></a>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105922">gh-105922</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/init.html#c.Py_IsFinalizing" title="Py_IsFinalizing"><code><span>Py_IsFinalizing()</span></code></a> function to check
whether the main Python interpreter is
<a href="https://docs.python.org/3.13/glossary.html#term-interpreter-shutdown"><span>shutting down</span></a>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/108014">gh-108014</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/list.html#c.PyList_GetItemRef" title="PyList_GetItemRef"><code><span>PyList_GetItemRef()</span></code></a> function
as a replacement for <a href="https://docs.python.org/3.13/c-api/list.html#c.PyList_GetItem" title="PyList_GetItem"><code><span>PyList_GetItem()</span></code></a>
that returns a <a href="https://docs.python.org/3.13/glossary.html#term-strong-reference"><span>strong reference</span></a> instead of a <a href="https://docs.python.org/3.13/glossary.html#term-borrowed-reference"><span>borrowed reference</span></a>.
(Contributed by Sam Gross in <a href="https://github.com/python/cpython/issues/114329">gh-114329</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/list.html#c.PyList_Extend" title="PyList_Extend"><code><span>PyList_Extend()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/list.html#c.PyList_Clear" title="PyList_Clear"><code><span>PyList_Clear()</span></code></a> functions,
mirroring the Python <code><span>list.extend()</span></code> and <code><span>list.clear()</span></code> methods.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/111138">gh-111138</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/long.html#c.PyLong_AsInt" title="PyLong_AsInt"><code><span>PyLong_AsInt()</span></code></a> function.
It behaves similarly to <a href="https://docs.python.org/3.13/c-api/long.html#c.PyLong_AsLong" title="PyLong_AsLong"><code><span>PyLong_AsLong()</span></code></a>,
but stores the result in a C <span><span>int</span></span> instead of a C <span><span>long</span></span>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/108014">gh-108014</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/long.html#c.PyLong_AsNativeBytes" title="PyLong_AsNativeBytes"><code><span>PyLong_AsNativeBytes()</span></code></a>, <a href="https://docs.python.org/3.13/c-api/long.html#c.PyLong_FromNativeBytes" title="PyLong_FromNativeBytes"><code><span>PyLong_FromNativeBytes()</span></code></a>,
and <a href="https://docs.python.org/3.13/c-api/long.html#c.PyLong_FromUnsignedNativeBytes" title="PyLong_FromUnsignedNativeBytes"><code><span>PyLong_FromUnsignedNativeBytes()</span></code></a> functions
to simplify converting between native integer types
and Python <a href="https://docs.python.org/3.13/library/functions.html#int" title="int"><code><span>int</span></code></a> objects.
(Contributed by Steve Dower in <a href="https://github.com/python/cpython/issues/111140">gh-111140</a>.)</p></li>
<li><p>Add <a href="https://docs.python.org/3.13/c-api/module.html#c.PyModule_Add" title="PyModule_Add"><code><span>PyModule_Add()</span></code></a> function, which is similar to
<a href="https://docs.python.org/3.13/c-api/module.html#c.PyModule_AddObjectRef" title="PyModule_AddObjectRef"><code><span>PyModule_AddObjectRef()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/module.html#c.PyModule_AddObject" title="PyModule_AddObject"><code><span>PyModule_AddObject()</span></code></a>,
but always steals a reference to the value.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/86493">gh-86493</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/hash.html#c.PyObject_GenericHash" title="PyObject_GenericHash"><code><span>PyObject_GenericHash()</span></code></a> function
that implements the default hashing function of a Python object.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/113024">gh-113024</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/hash.html#c.Py_HashPointer" title="Py_HashPointer"><code><span>Py_HashPointer()</span></code></a> function to hash a raw pointer.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/111545">gh-111545</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_VisitManagedDict" title="PyObject_VisitManagedDict"><code><span>PyObject_VisitManagedDict()</span></code></a> and
<a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_ClearManagedDict" title="PyObject_ClearManagedDict"><code><span>PyObject_ClearManagedDict()</span></code></a> functions.
which must be called by the traverse and clear functions of a type using
the <a href="https://docs.python.org/3.13/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT" title="Py_TPFLAGS_MANAGED_DICT"><code><span>Py_TPFLAGS_MANAGED_DICT</span></code></a> flag.
The <a href="https://github.com/python/pythoncapi-compat/">pythoncapi-compat project</a> can be used to
use these functions with Python 3.11 and 3.12.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/107073">gh-107073</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/init.html#c.PyRefTracer_SetTracer" title="PyRefTracer_SetTracer"><code><span>PyRefTracer_SetTracer()</span></code></a>
and <a href="https://docs.python.org/3.13/c-api/init.html#c.PyRefTracer_GetTracer" title="PyRefTracer_GetTracer"><code><span>PyRefTracer_GetTracer()</span></code></a> functions,
which enable tracking object creation and destruction
in the same way that the <a href="https://docs.python.org/3.13/library/tracemalloc.html#module-tracemalloc" title="tracemalloc: Trace memory allocations."><code><span>tracemalloc</span></code></a> module does.
(Contributed by Pablo Galindo in <a href="https://github.com/python/cpython/issues/93502">gh-93502</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/sys.html#c.PySys_AuditTuple" title="PySys_AuditTuple"><code><span>PySys_AuditTuple()</span></code></a> function
as an alternative to <a href="https://docs.python.org/3.13/c-api/sys.html#c.PySys_Audit" title="PySys_Audit"><code><span>PySys_Audit()</span></code></a>
that takes event arguments as a Python <a href="https://docs.python.org/3.13/library/stdtypes.html#tuple" title="tuple"><code><span>tuple</span></code></a> object.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/85283">gh-85283</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/init.html#c.PyThreadState_GetUnchecked" title="PyThreadState_GetUnchecked"><code><span>PyThreadState_GetUnchecked()</span></code></a> function
as an alternative to <a href="https://docs.python.org/3.13/c-api/init.html#c.PyThreadState_Get" title="PyThreadState_Get"><code><span>PyThreadState_Get()</span></code></a>
that doesn’t kill the process with a fatal error if it is <code><span>NULL</span></code>.
The caller is responsible for checking if the result is <code><span>NULL</span></code>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/108867">gh-108867</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/type.html#c.PyType_GetFullyQualifiedName" title="PyType_GetFullyQualifiedName"><code><span>PyType_GetFullyQualifiedName()</span></code></a> function
to get the type’s fully qualified name.
The module name is prepended if <a href="https://docs.python.org/3.13/reference/datamodel.html#type.__module__" title="type.__module__"><code><span>type.__module__</span></code></a> is
a string and is not equal to either <code><span>'builtins'</span></code> or <code><span>'__main__'</span></code>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/111696">gh-111696</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/type.html#c.PyType_GetModuleName" title="PyType_GetModuleName"><code><span>PyType_GetModuleName()</span></code></a> function
to get the type’s module name. This is equivalent to getting the
<a href="https://docs.python.org/3.13/reference/datamodel.html#type.__module__" title="type.__module__"><code><span>type.__module__</span></code></a> attribute.
(Contributed by Eric Snow and Victor Stinner in <a href="https://github.com/python/cpython/issues/111696">gh-111696</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/unicode.html#c.PyUnicode_EqualToUTF8AndSize" title="PyUnicode_EqualToUTF8AndSize"><code><span>PyUnicode_EqualToUTF8AndSize()</span></code></a>
and <a href="https://docs.python.org/3.13/c-api/unicode.html#c.PyUnicode_EqualToUTF8" title="PyUnicode_EqualToUTF8"><code><span>PyUnicode_EqualToUTF8()</span></code></a> functions
to compare a Unicode object with a <span><span>const</span><span> </span><span>char</span><span>*</span></span> UTF-8 encoded string
and <code><span>1</span></code> if they are equal or <code><span>0</span></code> otherwise.
These functions do not raise exceptions.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/110289">gh-110289</a>.)</p></li>
<li><p>Add the <a href="https://docs.python.org/3.13/c-api/weakref.html#c.PyWeakref_GetRef" title="PyWeakref_GetRef"><code><span>PyWeakref_GetRef()</span></code></a> function
as an alternative to  <a href="https://docs.python.org/3.13/c-api/weakref.html#c.PyWeakref_GetObject" title="PyWeakref_GetObject"><code><span>PyWeakref_GetObject()</span></code></a>
that returns a <a href="https://docs.python.org/3.13/glossary.html#term-strong-reference"><span>strong reference</span></a>
or <code><span>NULL</span></code> if the referent is no longer live.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105927">gh-105927</a>.)</p></li>
<li><p>Add fixed variants of functions which silently ignore errors:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_HasAttrWithError" title="PyObject_HasAttrWithError"><code><span>PyObject_HasAttrWithError()</span></code></a> replaces <a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_HasAttr" title="PyObject_HasAttr"><code><span>PyObject_HasAttr()</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_HasAttrStringWithError" title="PyObject_HasAttrStringWithError"><code><span>PyObject_HasAttrStringWithError()</span></code></a>
replaces <a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_HasAttrString" title="PyObject_HasAttrString"><code><span>PyObject_HasAttrString()</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/mapping.html#c.PyMapping_HasKeyWithError" title="PyMapping_HasKeyWithError"><code><span>PyMapping_HasKeyWithError()</span></code></a> replaces <a href="https://docs.python.org/3.13/c-api/mapping.html#c.PyMapping_HasKey" title="PyMapping_HasKey"><code><span>PyMapping_HasKey()</span></code></a>.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/mapping.html#c.PyMapping_HasKeyStringWithError" title="PyMapping_HasKeyStringWithError"><code><span>PyMapping_HasKeyStringWithError()</span></code></a>
replaces <a href="https://docs.python.org/3.13/c-api/mapping.html#c.PyMapping_HasKeyString" title="PyMapping_HasKeyString"><code><span>PyMapping_HasKeyString()</span></code></a>.</p></li>
</ul>
<p>The new functions return <code><span>-1</span></code> for errors
and the standard <code><span>1</span></code> for true and <code><span>0</span></code> for false.</p>
<p>(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/108511">gh-108511</a>.)</p>
</li>
</ul>
</section>
<section id="changed-c-apis">
<h3>Changed C APIs<a href="#changed-c-apis" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The <em>keywords</em> parameter of <a href="https://docs.python.org/3.13/c-api/arg.html#c.PyArg_ParseTupleAndKeywords" title="PyArg_ParseTupleAndKeywords"><code><span>PyArg_ParseTupleAndKeywords()</span></code></a>
and <a href="https://docs.python.org/3.13/c-api/arg.html#c.PyArg_VaParseTupleAndKeywords" title="PyArg_VaParseTupleAndKeywords"><code><span>PyArg_VaParseTupleAndKeywords()</span></code></a>
now has type <span><span>char</span><span> </span><span>*</span><span>const</span><span>*</span></span> in C
and <span><span>const</span><span> </span><span>char</span><span> </span><span>*</span><span>const</span><span>*</span></span> in C++,
instead of <span><span>char</span><span>*</span><span>*</span></span>.
In C++, this makes these functions compatible with arguments
of type <span><span>const</span><span> </span><span>char</span><span> </span><span>*</span><span>const</span><span>*</span></span>, <span><span>const</span><span> </span><span>char</span><span>*</span><span>*</span></span>,
or <span><span>char</span><span> </span><span>*</span><span>const</span><span>*</span></span> without an explicit type cast.
In C, the functions only support arguments of type <span><span>char</span><span> </span><span>*</span><span>const</span><span>*</span></span>.
This can be overridden with the <a href="https://docs.python.org/3.13/c-api/arg.html#c.PY_CXX_CONST" title="PY_CXX_CONST"><code><span>PY_CXX_CONST</span></code></a> macro.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/65210">gh-65210</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/arg.html#c.PyArg_ParseTupleAndKeywords" title="PyArg_ParseTupleAndKeywords"><code><span>PyArg_ParseTupleAndKeywords()</span></code></a> now supports
non-ASCII keyword parameter names.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/110815">gh-110815</a>.)</p></li>
<li><p>The <code><span>PyCode_GetFirstFree()</span></code> function is now unstable API
and is now named <a href="https://docs.python.org/3.13/c-api/code.html#c.PyUnstable_Code_GetFirstFree" title="PyUnstable_Code_GetFirstFree"><code><span>PyUnstable_Code_GetFirstFree()</span></code></a>.
(Contributed by Bogdan Romanyuk in <a href="https://github.com/python/cpython/issues/115781">gh-115781</a>.)</p></li>
<li><p>The <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_GetItem" title="PyDict_GetItem"><code><span>PyDict_GetItem()</span></code></a>, <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_GetItemString" title="PyDict_GetItemString"><code><span>PyDict_GetItemString()</span></code></a>,
<a href="https://docs.python.org/3.13/c-api/mapping.html#c.PyMapping_HasKey" title="PyMapping_HasKey"><code><span>PyMapping_HasKey()</span></code></a>, <a href="https://docs.python.org/3.13/c-api/mapping.html#c.PyMapping_HasKeyString" title="PyMapping_HasKeyString"><code><span>PyMapping_HasKeyString()</span></code></a>,
<a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_HasAttr" title="PyObject_HasAttr"><code><span>PyObject_HasAttr()</span></code></a>, <a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_HasAttrString" title="PyObject_HasAttrString"><code><span>PyObject_HasAttrString()</span></code></a>,
and <a href="https://docs.python.org/3.13/c-api/sys.html#c.PySys_GetObject" title="PySys_GetObject"><code><span>PySys_GetObject()</span></code></a> functions,
each of which clears all errors which occurred when calling them
now reports these errors using <a href="https://docs.python.org/3.13/library/sys.html#sys.unraisablehook" title="sys.unraisablehook"><code><span>sys.unraisablehook()</span></code></a>.
You may replace them with other functions as recommended in the documentation.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/106672">gh-106672</a>.)</p></li>
<li><p>Add support for the <code><span>%T</span></code>, <code><span>%#T</span></code>, <code><span>%N</span></code> and <code><span>%#N</span></code> formats
to <a href="https://docs.python.org/3.13/c-api/unicode.html#c.PyUnicode_FromFormat" title="PyUnicode_FromFormat"><code><span>PyUnicode_FromFormat()</span></code></a>:</p>
<ul>
<li><p><code><span>%T</span></code>: Get the fully qualified name of an object type</p></li>
<li><p><code><span>%#T</span></code>: As above, but use a colon as the separator</p></li>
<li><p><code><span>%N</span></code>: Get the fully qualified name of a type</p></li>
<li><p><code><span>%#N</span></code>: As above, but use a colon as the separator</p></li>
</ul>
<p>See <span id="index-47"></span><a href="https://peps.python.org/pep-0737/"><strong>PEP 737</strong></a> for more information.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/111696">gh-111696</a>.)</p>
</li>
<li><p>You no longer have to define the <code><span>PY_SSIZE_T_CLEAN</span></code> macro before
including <code><span>Python.h</span></code> when using <code><span>#</span></code> formats in
<a href="https://docs.python.org/3.13/c-api/arg.html#arg-parsing-string-and-buffers"><span>format codes</span></a>.
APIs accepting the format codes always use <code><span>Py_ssize_t</span></code> for <code><span>#</span></code> formats.
(Contributed by Inada Naoki in <a href="https://github.com/python/cpython/issues/104922">gh-104922</a>.)</p></li>
<li><p>If Python is built in <a href="https://docs.python.org/3.13/using/configure.html#debug-build"><span>debug mode</span></a>
or <a href="https://docs.python.org/3.13/using/configure.html#cmdoption-with-assertions"><code><span>with</span> <span>assertions</span></code></a>,
<a href="https://docs.python.org/3.13/c-api/tuple.html#c.PyTuple_SET_ITEM" title="PyTuple_SET_ITEM"><code><span>PyTuple_SET_ITEM()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/list.html#c.PyList_SET_ITEM" title="PyList_SET_ITEM"><code><span>PyList_SET_ITEM()</span></code></a>
now check the index argument with an assertion.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/106168">gh-106168</a>.)</p></li>
</ul>
</section>
<section id="limited-c-api-changes">
<h3>Limited C API Changes<a href="#limited-c-api-changes" title="Link to this heading">¶</a></h3>
<ul>
<li><p>The following functions are now included in the Limited C API:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/memory.html#c.PyMem_RawMalloc" title="PyMem_RawMalloc"><code><span>PyMem_RawMalloc()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/memory.html#c.PyMem_RawCalloc" title="PyMem_RawCalloc"><code><span>PyMem_RawCalloc()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/memory.html#c.PyMem_RawRealloc" title="PyMem_RawRealloc"><code><span>PyMem_RawRealloc()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/memory.html#c.PyMem_RawFree" title="PyMem_RawFree"><code><span>PyMem_RawFree()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/sys.html#c.PySys_Audit" title="PySys_Audit"><code><span>PySys_Audit()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/sys.html#c.PySys_AuditTuple" title="PySys_AuditTuple"><code><span>PySys_AuditTuple()</span></code></a></p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/type.html#c.PyType_GetModuleByDef" title="PyType_GetModuleByDef"><code><span>PyType_GetModuleByDef()</span></code></a></p></li>
</ul>
<p>(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/85283">gh-85283</a>, <a href="https://github.com/python/cpython/issues/85283">gh-85283</a>, and <a href="https://github.com/python/cpython/issues/116936">gh-116936</a>.)</p>
</li>
<li><p>Python built with <a href="https://docs.python.org/3.13/using/configure.html#cmdoption-with-trace-refs"><code><span>--with-trace-refs</span></code></a> (tracing references)
now supports the <a href="https://docs.python.org/3.13/c-api/stable.html#limited-c-api"><span>Limited API</span></a>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/108634">gh-108634</a>.)</p></li>
</ul>
</section>
<section id="removed-c-apis">
<h3>Removed C APIs<a href="#removed-c-apis" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Remove several functions, macros, variables, etc
with names prefixed by <code><span>_Py</span></code> or <code><span>_PY</span></code> (which are considered private).
If your project is affected  by one of these removals
and you believe that the removed API should remain available,
please <a href="https://docs.python.org/3.13/bugs.html#using-the-tracker"><span>open a new issue</span></a> to request a public C API
and add <code><span>cc:</span> <span>@vstinner</span></code> to the issue to notify Victor Stinner.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/106320">gh-106320</a>.)</p></li>
<li><p>Remove old buffer protocols deprecated in Python 3.0.
Use <a href="https://docs.python.org/3.13/c-api/buffer.html#bufferobjects"><span>Buffer Protocol</span></a> instead.</p>
<ul>
<li><p><code><span>PyObject_CheckReadBuffer()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/buffer.html#c.PyObject_CheckBuffer" title="PyObject_CheckBuffer"><code><span>PyObject_CheckBuffer()</span></code></a> to test
whether the object supports the buffer protocol.
Note that <a href="https://docs.python.org/3.13/c-api/buffer.html#c.PyObject_CheckBuffer" title="PyObject_CheckBuffer"><code><span>PyObject_CheckBuffer()</span></code></a> doesn’t guarantee
that <a href="https://docs.python.org/3.13/c-api/buffer.html#c.PyObject_GetBuffer" title="PyObject_GetBuffer"><code><span>PyObject_GetBuffer()</span></code></a> will succeed.
To test if the object is actually readable,
see the next example of <a href="https://docs.python.org/3.13/c-api/buffer.html#c.PyObject_GetBuffer" title="PyObject_GetBuffer"><code><span>PyObject_GetBuffer()</span></code></a>.</p></li>
<li><p><code><span>PyObject_AsCharBuffer()</span></code>, <code><span>PyObject_AsReadBuffer()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/buffer.html#c.PyObject_GetBuffer" title="PyObject_GetBuffer"><code><span>PyObject_GetBuffer()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/buffer.html#c.PyBuffer_Release" title="PyBuffer_Release"><code><span>PyBuffer_Release()</span></code></a> instead:</p>
<div><pre><span></span><span>Py_buffer</span><span> </span><span>view</span><span>;</span>
<span>if</span><span> </span><span>(</span><span>PyObject_GetBuffer</span><span>(</span><span>obj</span><span>,</span><span> </span><span>&amp;</span><span>view</span><span>,</span><span> </span><span>PyBUF_SIMPLE</span><span>)</span><span> </span><span>&lt;</span><span> </span><span>0</span><span>)</span><span> </span><span>{</span>
<span>    </span><span>return</span><span> </span><span>NULL</span><span>;</span>
<span>}</span>
<span>// Use `view.buf` and `view.len` to read from the buffer.</span>
<span>// You may need to cast buf as `(const char*)view.buf`.</span>
<span>PyBuffer_Release</span><span>(</span><span>&amp;</span><span>view</span><span>);</span>
</pre></div>
</li>
<li><p><code><span>PyObject_AsWriteBuffer()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/buffer.html#c.PyObject_GetBuffer" title="PyObject_GetBuffer"><code><span>PyObject_GetBuffer()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/buffer.html#c.PyBuffer_Release" title="PyBuffer_Release"><code><span>PyBuffer_Release()</span></code></a> instead:</p>
<div><pre><span></span><span>Py_buffer</span><span> </span><span>view</span><span>;</span>
<span>if</span><span> </span><span>(</span><span>PyObject_GetBuffer</span><span>(</span><span>obj</span><span>,</span><span> </span><span>&amp;</span><span>view</span><span>,</span><span> </span><span>PyBUF_WRITABLE</span><span>)</span><span> </span><span>&lt;</span><span> </span><span>0</span><span>)</span><span> </span><span>{</span>
<span>    </span><span>return</span><span> </span><span>NULL</span><span>;</span>
<span>}</span>
<span>// Use `view.buf` and `view.len` to write to the buffer.</span>
<span>PyBuffer_Release</span><span>(</span><span>&amp;</span><span>view</span><span>);</span>
</pre></div>
</li>
</ul>
<p>(Contributed by Inada Naoki in <a href="https://github.com/python/cpython/issues/85275">gh-85275</a>.)</p>
</li>
<li><p>Remove various functions deprecated in Python 3.9:</p>
<ul>
<li><p><code><span>PyEval_CallObject()</span></code>, <code><span>PyEval_CallObjectWithKeywords()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/call.html#c.PyObject_CallNoArgs" title="PyObject_CallNoArgs"><code><span>PyObject_CallNoArgs()</span></code></a> or <a href="https://docs.python.org/3.13/c-api/call.html#c.PyObject_Call" title="PyObject_Call"><code><span>PyObject_Call()</span></code></a> instead.</p>
<div>
<p>Warning</p>
<p>In <a href="https://docs.python.org/3.13/c-api/call.html#c.PyObject_Call" title="PyObject_Call"><code><span>PyObject_Call()</span></code></a>, positional arguments must be a <a href="https://docs.python.org/3.13/library/stdtypes.html#tuple" title="tuple"><code><span>tuple</span></code></a>
and must not be <code><span>NULL</span></code>,
and keyword arguments must be a <a href="https://docs.python.org/3.13/library/stdtypes.html#dict" title="dict"><code><span>dict</span></code></a> or <code><span>NULL</span></code>,
whereas the removed functions checked argument types
and accepted <code><span>NULL</span></code> positional and keyword arguments.
To replace <code><span>PyEval_CallObjectWithKeywords(func,</span> <span>NULL,</span> <span>kwargs)</span></code> with
<a href="https://docs.python.org/3.13/c-api/call.html#c.PyObject_Call" title="PyObject_Call"><code><span>PyObject_Call()</span></code></a>,
pass an empty tuple as positional arguments using
<a href="https://docs.python.org/3.13/c-api/tuple.html#c.PyTuple_New" title="PyTuple_New"><code><span>PyTuple_New(0)</span></code></a>.</p>
</div>
</li>
<li><p><code><span>PyEval_CallFunction()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/call.html#c.PyObject_CallFunction" title="PyObject_CallFunction"><code><span>PyObject_CallFunction()</span></code></a> instead.</p></li>
<li><p><code><span>PyEval_CallMethod()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/call.html#c.PyObject_CallMethod" title="PyObject_CallMethod"><code><span>PyObject_CallMethod()</span></code></a> instead.</p></li>
<li><p><code><span>PyCFunction_Call()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/call.html#c.PyObject_Call" title="PyObject_Call"><code><span>PyObject_Call()</span></code></a> instead.</p></li>
</ul>
<p>(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105107">gh-105107</a>.)</p>
</li>
<li><p>Remove the following old functions to configure the Python initialization,
deprecated in Python 3.11:</p>
<ul>
<li><p><code><span>PySys_AddWarnOptionUnicode()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.warnoptions" title="PyConfig.warnoptions"><code><span>PyConfig.warnoptions</span></code></a> instead.</p></li>
<li><p><code><span>PySys_AddWarnOption()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.warnoptions" title="PyConfig.warnoptions"><code><span>PyConfig.warnoptions</span></code></a> instead.</p></li>
<li><p><code><span>PySys_AddXOption()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.xoptions" title="PyConfig.xoptions"><code><span>PyConfig.xoptions</span></code></a> instead.</p></li>
<li><p><code><span>PySys_HasWarnOptions()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.xoptions" title="PyConfig.xoptions"><code><span>PyConfig.xoptions</span></code></a> instead.</p></li>
<li><p><code><span>PySys_SetPath()</span></code>:
Set <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.module_search_paths" title="PyConfig.module_search_paths"><code><span>PyConfig.module_search_paths</span></code></a> instead.</p></li>
<li><p><code><span>Py_SetPath()</span></code>:
Set <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.module_search_paths" title="PyConfig.module_search_paths"><code><span>PyConfig.module_search_paths</span></code></a> instead.</p></li>
<li><p><code><span>Py_SetStandardStreamEncoding()</span></code>:
Set <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.stdio_encoding" title="PyConfig.stdio_encoding"><code><span>PyConfig.stdio_encoding</span></code></a> instead,
and set also maybe <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.legacy_windows_stdio" title="PyConfig.legacy_windows_stdio"><code><span>PyConfig.legacy_windows_stdio</span></code></a> (on Windows).</p></li>
<li><p><code><span>_Py_SetProgramFullPath()</span></code>:
Set <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.executable" title="PyConfig.executable"><code><span>PyConfig.executable</span></code></a> instead.</p></li>
</ul>
<p>Use the new <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig" title="PyConfig"><code><span>PyConfig</span></code></a> API of the <a href="https://docs.python.org/3.13/c-api/init_config.html#init-config"><span>Python Initialization
Configuration</span></a> instead (<span id="index-48"></span><a href="https://peps.python.org/pep-0587/"><strong>PEP 587</strong></a>), added to Python 3.8.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105145">gh-105145</a>.)</p>
</li>
<li><p>Remove <code><span>PyEval_AcquireLock()</span></code> and <code><span>PyEval_ReleaseLock()</span></code> functions,
deprecated in Python 3.2.
They didn’t update the current thread state.
They can be replaced with:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.PyEval_SaveThread" title="PyEval_SaveThread"><code><span>PyEval_SaveThread()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/init.html#c.PyEval_RestoreThread" title="PyEval_RestoreThread"><code><span>PyEval_RestoreThread()</span></code></a>;</p></li>
<li><p>low-level <a href="https://docs.python.org/3.13/c-api/init.html#c.PyEval_AcquireThread" title="PyEval_AcquireThread"><code><span>PyEval_AcquireThread()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/init.html#c.PyEval_RestoreThread" title="PyEval_RestoreThread"><code><span>PyEval_RestoreThread()</span></code></a>;</p></li>
<li><p>or <a href="https://docs.python.org/3.13/c-api/init.html#c.PyGILState_Ensure" title="PyGILState_Ensure"><code><span>PyGILState_Ensure()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/init.html#c.PyGILState_Release" title="PyGILState_Release"><code><span>PyGILState_Release()</span></code></a>.</p></li>
</ul>
<p>(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105182">gh-105182</a>.)</p>
</li>
<li><p>Remove the <code><span>PyEval_ThreadsInitialized()</span></code> function,
deprecated in Python 3.9.
Since Python 3.7, <code><span>Py_Initialize()</span></code> always creates the GIL:
calling <code><span>PyEval_InitThreads()</span></code> does nothing and
<code><span>PyEval_ThreadsInitialized()</span></code> always returns non-zero.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105182">gh-105182</a>.)</p></li>
<li><p>Remove the <code><span>_PyInterpreterState_Get()</span></code> alias to
<a href="https://docs.python.org/3.13/c-api/init.html#c.PyInterpreterState_Get" title="PyInterpreterState_Get"><code><span>PyInterpreterState_Get()</span></code></a>
which was kept for backward compatibility with Python 3.8.
The <a href="https://github.com/python/pythoncapi-compat/">pythoncapi-compat project</a> can be used to get
<a href="https://docs.python.org/3.13/c-api/init.html#c.PyInterpreterState_Get" title="PyInterpreterState_Get"><code><span>PyInterpreterState_Get()</span></code></a> on Python 3.8 and older.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/106320">gh-106320</a>.)</p></li>
<li><p>Remove the private <code><span>_PyObject_FastCall()</span></code> function:
use <code><span>PyObject_Vectorcall()</span></code> which is available since Python 3.8
(<span id="index-49"></span><a href="https://peps.python.org/pep-0590/"><strong>PEP 590</strong></a>).
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/106023">gh-106023</a>.)</p></li>
<li><p>Remove the <code><span>cpython/pytime.h</span></code> header file,
which only contained private functions.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/106316">gh-106316</a>.)</p></li>
<li><p>Remove the undocumented <code><span>PY_TIMEOUT_MAX</span></code> constant from the limited C API.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/110014">gh-110014</a>.)</p></li>
<li><p>Remove the old trashcan macros <code><span>Py_TRASHCAN_SAFE_BEGIN</span></code>
and <code><span>Py_TRASHCAN_SAFE_END</span></code>.
Replace both with the new macros <code><span>Py_TRASHCAN_BEGIN</span></code>
and <code><span>Py_TRASHCAN_END</span></code>.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/105111">gh-105111</a>.)</p></li>
</ul>
</section>
<section id="deprecated-c-apis">
<h3>Deprecated C APIs<a href="#deprecated-c-apis" title="Link to this heading">¶</a></h3>
<ul>
<li><p>Deprecate old Python initialization functions:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/sys.html#c.PySys_ResetWarnOptions" title="PySys_ResetWarnOptions"><code><span>PySys_ResetWarnOptions()</span></code></a>:
Clear <a href="https://docs.python.org/3.13/library/sys.html#sys.warnoptions" title="sys.warnoptions"><code><span>sys.warnoptions</span></code></a> and <code><span>warnings.filters</span></code> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetExecPrefix" title="Py_GetExecPrefix"><code><span>Py_GetExecPrefix()</span></code></a>:
Get <a href="https://docs.python.org/3.13/library/sys.html#sys.exec_prefix" title="sys.exec_prefix"><code><span>sys.exec_prefix</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetPath" title="Py_GetPath"><code><span>Py_GetPath()</span></code></a>:
Get <a href="https://docs.python.org/3.13/library/sys.html#sys.path" title="sys.path"><code><span>sys.path</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetPrefix" title="Py_GetPrefix"><code><span>Py_GetPrefix()</span></code></a>:
Get <a href="https://docs.python.org/3.13/library/sys.html#sys.prefix" title="sys.prefix"><code><span>sys.prefix</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetProgramFullPath" title="Py_GetProgramFullPath"><code><span>Py_GetProgramFullPath()</span></code></a>:
Get <a href="https://docs.python.org/3.13/library/sys.html#sys.executable" title="sys.executable"><code><span>sys.executable</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetProgramName" title="Py_GetProgramName"><code><span>Py_GetProgramName()</span></code></a>:
Get <a href="https://docs.python.org/3.13/library/sys.html#sys.executable" title="sys.executable"><code><span>sys.executable</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetPythonHome" title="Py_GetPythonHome"><code><span>Py_GetPythonHome()</span></code></a>:
Get <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.home" title="PyConfig.home"><code><span>PyConfig.home</span></code></a>
or the <span id="index-50"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHONHOME"><code><span>PYTHONHOME</span></code></a> environment variable instead.</p></li>
</ul>
<p>(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105145">gh-105145</a>.)</p>
</li>
<li><p><a href="https://docs.python.org/3.13/glossary.html#term-soft-deprecated"><span>Soft deprecate</span></a> the
<a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetBuiltins" title="PyEval_GetBuiltins"><code><span>PyEval_GetBuiltins()</span></code></a>, <a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetGlobals" title="PyEval_GetGlobals"><code><span>PyEval_GetGlobals()</span></code></a>,
and <a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetLocals" title="PyEval_GetLocals"><code><span>PyEval_GetLocals()</span></code></a> functions,
which return a <a href="https://docs.python.org/3.13/glossary.html#term-borrowed-reference"><span>borrowed reference</span></a>.
(Soft deprecated as part of <span id="index-51"></span><a href="https://peps.python.org/pep-0667/"><strong>PEP 667</strong></a>.)</p></li>
<li><p>Deprecate the <a href="https://docs.python.org/3.13/c-api/import.html#c.PyImport_ImportModuleNoBlock" title="PyImport_ImportModuleNoBlock"><code><span>PyImport_ImportModuleNoBlock()</span></code></a> function,
which is just an alias to <a href="https://docs.python.org/3.13/c-api/import.html#c.PyImport_ImportModule" title="PyImport_ImportModule"><code><span>PyImport_ImportModule()</span></code></a> since Python 3.3.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105396">gh-105396</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/glossary.html#term-soft-deprecated"><span>Soft deprecate</span></a> the
<a href="https://docs.python.org/3.13/c-api/module.html#c.PyModule_AddObject" title="PyModule_AddObject"><code><span>PyModule_AddObject()</span></code></a> function.
It should be replaced with <a href="https://docs.python.org/3.13/c-api/module.html#c.PyModule_Add" title="PyModule_Add"><code><span>PyModule_Add()</span></code></a>
or <a href="https://docs.python.org/3.13/c-api/module.html#c.PyModule_AddObjectRef" title="PyModule_AddObjectRef"><code><span>PyModule_AddObjectRef()</span></code></a>.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/86493">gh-86493</a>.)</p></li>
<li><p>Deprecate the old <code><span>Py_UNICODE</span></code> and <code><span>PY_UNICODE_TYPE</span></code> types
and the <code><span>Py_UNICODE_WIDE</span></code> define.
Use the <code><span>wchar_t</span></code> type directly instead.
Since Python 3.3, <code><span>Py_UNICODE</span></code> and <code><span>PY_UNICODE_TYPE</span></code>
are just aliases to <code><span>wchar_t</span></code>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105156">gh-105156</a>.)</p></li>
<li><p>Deprecate the <a href="https://docs.python.org/3.13/c-api/weakref.html#c.PyWeakref_GetObject" title="PyWeakref_GetObject"><code><span>PyWeakref_GetObject()</span></code></a> and
<a href="https://docs.python.org/3.13/c-api/weakref.html#c.PyWeakref_GET_OBJECT" title="PyWeakref_GET_OBJECT"><code><span>PyWeakref_GET_OBJECT()</span></code></a> functions,
which return a <a href="https://docs.python.org/3.13/glossary.html#term-borrowed-reference"><span>borrowed reference</span></a>.
Replace them with the new <a href="https://docs.python.org/3.13/c-api/weakref.html#c.PyWeakref_GetRef" title="PyWeakref_GetRef"><code><span>PyWeakref_GetRef()</span></code></a> function,
which returns a <a href="https://docs.python.org/3.13/glossary.html#term-strong-reference"><span>strong reference</span></a>.
The <a href="https://github.com/python/pythoncapi-compat/">pythoncapi-compat project</a> can be used to get
<a href="https://docs.python.org/3.13/c-api/weakref.html#c.PyWeakref_GetRef" title="PyWeakref_GetRef"><code><span>PyWeakref_GetRef()</span></code></a> on Python 3.12 and older.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/105927">gh-105927</a>.)</p></li>
</ul>
<section id="id8">
<h4>Pending Removal in Python 3.14<a href="#id8" title="Link to this heading">¶</a></h4>
<ul>
<li><p>The <code><span>ma_version_tag</span></code> field in <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDictObject" title="PyDictObject"><code><span>PyDictObject</span></code></a> for extension modules
(<span id="index-52"></span><a href="https://peps.python.org/pep-0699/"><strong>PEP 699</strong></a>; <a href="https://github.com/python/cpython/issues/101193">gh-101193</a>).</p></li>
<li><p>Creating <a href="https://docs.python.org/3.13/c-api/typeobj.html#c.Py_TPFLAGS_IMMUTABLETYPE" title="Py_TPFLAGS_IMMUTABLETYPE"><code><span>immutable</span> <span>types</span></code></a> with mutable
bases (<a href="https://github.com/python/cpython/issues/95388">gh-95388</a>).</p></li>
<li><p>Functions to configure Python’s initialization, deprecated in Python 3.11:</p>
<ul>
<li><p><code><span>PySys_SetArgvEx()</span></code>:
Set <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.argv" title="PyConfig.argv"><code><span>PyConfig.argv</span></code></a> instead.</p></li>
<li><p><code><span>PySys_SetArgv()</span></code>:
Set <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.argv" title="PyConfig.argv"><code><span>PyConfig.argv</span></code></a> instead.</p></li>
<li><p><code><span>Py_SetProgramName()</span></code>:
Set <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.program_name" title="PyConfig.program_name"><code><span>PyConfig.program_name</span></code></a> instead.</p></li>
<li><p><code><span>Py_SetPythonHome()</span></code>:
Set <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.home" title="PyConfig.home"><code><span>PyConfig.home</span></code></a> instead.</p></li>
</ul>
<p>The <a href="https://docs.python.org/3.13/c-api/init_config.html#c.Py_InitializeFromConfig" title="Py_InitializeFromConfig"><code><span>Py_InitializeFromConfig()</span></code></a> API should be used with
<a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig" title="PyConfig"><code><span>PyConfig</span></code></a> instead.</p>
</li>
<li><p>Global configuration variables:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_DebugFlag" title="Py_DebugFlag"><code><span>Py_DebugFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.parser_debug" title="PyConfig.parser_debug"><code><span>PyConfig.parser_debug</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_VerboseFlag" title="Py_VerboseFlag"><code><span>Py_VerboseFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.verbose" title="PyConfig.verbose"><code><span>PyConfig.verbose</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_QuietFlag" title="Py_QuietFlag"><code><span>Py_QuietFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.quiet" title="PyConfig.quiet"><code><span>PyConfig.quiet</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_InteractiveFlag" title="Py_InteractiveFlag"><code><span>Py_InteractiveFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.interactive" title="PyConfig.interactive"><code><span>PyConfig.interactive</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_InspectFlag" title="Py_InspectFlag"><code><span>Py_InspectFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.inspect" title="PyConfig.inspect"><code><span>PyConfig.inspect</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_OptimizeFlag" title="Py_OptimizeFlag"><code><span>Py_OptimizeFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.optimization_level" title="PyConfig.optimization_level"><code><span>PyConfig.optimization_level</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_NoSiteFlag" title="Py_NoSiteFlag"><code><span>Py_NoSiteFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.site_import" title="PyConfig.site_import"><code><span>PyConfig.site_import</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_BytesWarningFlag" title="Py_BytesWarningFlag"><code><span>Py_BytesWarningFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.bytes_warning" title="PyConfig.bytes_warning"><code><span>PyConfig.bytes_warning</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_FrozenFlag" title="Py_FrozenFlag"><code><span>Py_FrozenFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.pathconfig_warnings" title="PyConfig.pathconfig_warnings"><code><span>PyConfig.pathconfig_warnings</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_IgnoreEnvironmentFlag" title="Py_IgnoreEnvironmentFlag"><code><span>Py_IgnoreEnvironmentFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.use_environment" title="PyConfig.use_environment"><code><span>PyConfig.use_environment</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_DontWriteBytecodeFlag" title="Py_DontWriteBytecodeFlag"><code><span>Py_DontWriteBytecodeFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.write_bytecode" title="PyConfig.write_bytecode"><code><span>PyConfig.write_bytecode</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_NoUserSiteDirectory" title="Py_NoUserSiteDirectory"><code><span>Py_NoUserSiteDirectory</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.user_site_directory" title="PyConfig.user_site_directory"><code><span>PyConfig.user_site_directory</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_UnbufferedStdioFlag" title="Py_UnbufferedStdioFlag"><code><span>Py_UnbufferedStdioFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.buffered_stdio" title="PyConfig.buffered_stdio"><code><span>PyConfig.buffered_stdio</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_HashRandomizationFlag" title="Py_HashRandomizationFlag"><code><span>Py_HashRandomizationFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.use_hash_seed" title="PyConfig.use_hash_seed"><code><span>PyConfig.use_hash_seed</span></code></a>
and <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.hash_seed" title="PyConfig.hash_seed"><code><span>PyConfig.hash_seed</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_IsolatedFlag" title="Py_IsolatedFlag"><code><span>Py_IsolatedFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.isolated" title="PyConfig.isolated"><code><span>PyConfig.isolated</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_LegacyWindowsFSEncodingFlag" title="Py_LegacyWindowsFSEncodingFlag"><code><span>Py_LegacyWindowsFSEncodingFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyPreConfig.legacy_windows_fs_encoding" title="PyPreConfig.legacy_windows_fs_encoding"><code><span>PyPreConfig.legacy_windows_fs_encoding</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_LegacyWindowsStdioFlag" title="Py_LegacyWindowsStdioFlag"><code><span>Py_LegacyWindowsStdioFlag</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.legacy_windows_stdio" title="PyConfig.legacy_windows_stdio"><code><span>PyConfig.legacy_windows_stdio</span></code></a> instead.</p></li>
<li><p><code><span>Py_FileSystemDefaultEncoding</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.filesystem_encoding" title="PyConfig.filesystem_encoding"><code><span>PyConfig.filesystem_encoding</span></code></a> instead.</p></li>
<li><p><code><span>Py_HasFileSystemDefaultEncoding</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.filesystem_encoding" title="PyConfig.filesystem_encoding"><code><span>PyConfig.filesystem_encoding</span></code></a> instead.</p></li>
<li><p><code><span>Py_FileSystemDefaultEncodeErrors</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.filesystem_errors" title="PyConfig.filesystem_errors"><code><span>PyConfig.filesystem_errors</span></code></a> instead.</p></li>
<li><p><code><span>Py_UTF8Mode</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyPreConfig.utf8_mode" title="PyPreConfig.utf8_mode"><code><span>PyPreConfig.utf8_mode</span></code></a> instead.
(see <a href="https://docs.python.org/3.13/c-api/init_config.html#c.Py_PreInitialize" title="Py_PreInitialize"><code><span>Py_PreInitialize()</span></code></a>)</p></li>
</ul>
<p>The <a href="https://docs.python.org/3.13/c-api/init_config.html#c.Py_InitializeFromConfig" title="Py_InitializeFromConfig"><code><span>Py_InitializeFromConfig()</span></code></a> API should be used with
<a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig" title="PyConfig"><code><span>PyConfig</span></code></a> instead.</p>
</li>
</ul>
</section>
<section id="id9">
<h4>Pending Removal in Python 3.15<a href="#id9" title="Link to this heading">¶</a></h4>
<ul>
<li><p>The bundled copy of <code><span>libmpdecimal</span></code>.</p></li>
<li><p>The <a href="https://docs.python.org/3.13/c-api/import.html#c.PyImport_ImportModuleNoBlock" title="PyImport_ImportModuleNoBlock"><code><span>PyImport_ImportModuleNoBlock()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/import.html#c.PyImport_ImportModule" title="PyImport_ImportModule"><code><span>PyImport_ImportModule()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/weakref.html#c.PyWeakref_GetObject" title="PyWeakref_GetObject"><code><span>PyWeakref_GetObject()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/weakref.html#c.PyWeakref_GET_OBJECT" title="PyWeakref_GET_OBJECT"><code><span>PyWeakref_GET_OBJECT()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/weakref.html#c.PyWeakref_GetRef" title="PyWeakref_GetRef"><code><span>PyWeakref_GetRef()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/unicode.html#c.Py_UNICODE" title="Py_UNICODE"><code><span>Py_UNICODE</span></code></a> type and the <code><span>Py_UNICODE_WIDE</span></code> macro:
Use <code><span>wchar_t</span></code> instead.</p></li>
<li><p>Python initialization functions:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/sys.html#c.PySys_ResetWarnOptions" title="PySys_ResetWarnOptions"><code><span>PySys_ResetWarnOptions()</span></code></a>:
Clear <a href="https://docs.python.org/3.13/library/sys.html#sys.warnoptions" title="sys.warnoptions"><code><span>sys.warnoptions</span></code></a> and <code><span>warnings.filters</span></code> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetExecPrefix" title="Py_GetExecPrefix"><code><span>Py_GetExecPrefix()</span></code></a>:
Get <a href="https://docs.python.org/3.13/library/sys.html#sys.exec_prefix" title="sys.exec_prefix"><code><span>sys.exec_prefix</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetPath" title="Py_GetPath"><code><span>Py_GetPath()</span></code></a>:
Get <a href="https://docs.python.org/3.13/library/sys.html#sys.path" title="sys.path"><code><span>sys.path</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetPrefix" title="Py_GetPrefix"><code><span>Py_GetPrefix()</span></code></a>:
Get <a href="https://docs.python.org/3.13/library/sys.html#sys.prefix" title="sys.prefix"><code><span>sys.prefix</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetProgramFullPath" title="Py_GetProgramFullPath"><code><span>Py_GetProgramFullPath()</span></code></a>:
Get <a href="https://docs.python.org/3.13/library/sys.html#sys.executable" title="sys.executable"><code><span>sys.executable</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetProgramName" title="Py_GetProgramName"><code><span>Py_GetProgramName()</span></code></a>:
Get <a href="https://docs.python.org/3.13/library/sys.html#sys.executable" title="sys.executable"><code><span>sys.executable</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.Py_GetPythonHome" title="Py_GetPythonHome"><code><span>Py_GetPythonHome()</span></code></a>:
Get <a href="https://docs.python.org/3.13/c-api/init_config.html#c.PyConfig.home" title="PyConfig.home"><code><span>PyConfig.home</span></code></a>
or the <span id="index-53"></span><a href="https://docs.python.org/3.13/using/cmdline.html#envvar-PYTHONHOME"><code><span>PYTHONHOME</span></code></a> environment variable instead.</p></li>
</ul>
</li>
</ul>
</section>
<section id="id10">
<h4>Pending Removal in Future Versions<a href="#id10" title="Link to this heading">¶</a></h4>
<p>The following APIs are deprecated and will be removed,
although there is currently no date scheduled for their removal.</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/typeobj.html#c.Py_TPFLAGS_HAVE_FINALIZE" title="Py_TPFLAGS_HAVE_FINALIZE"><code><span>Py_TPFLAGS_HAVE_FINALIZE</span></code></a>:
Unneeded since Python 3.8.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/exceptions.html#c.PyErr_Fetch" title="PyErr_Fetch"><code><span>PyErr_Fetch()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/exceptions.html#c.PyErr_GetRaisedException" title="PyErr_GetRaisedException"><code><span>PyErr_GetRaisedException()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/exceptions.html#c.PyErr_NormalizeException" title="PyErr_NormalizeException"><code><span>PyErr_NormalizeException()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/exceptions.html#c.PyErr_GetRaisedException" title="PyErr_GetRaisedException"><code><span>PyErr_GetRaisedException()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/exceptions.html#c.PyErr_Restore" title="PyErr_Restore"><code><span>PyErr_Restore()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/exceptions.html#c.PyErr_SetRaisedException" title="PyErr_SetRaisedException"><code><span>PyErr_SetRaisedException()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/module.html#c.PyModule_GetFilename" title="PyModule_GetFilename"><code><span>PyModule_GetFilename()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/module.html#c.PyModule_GetFilenameObject" title="PyModule_GetFilenameObject"><code><span>PyModule_GetFilenameObject()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/sys.html#c.PyOS_AfterFork" title="PyOS_AfterFork"><code><span>PyOS_AfterFork()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/sys.html#c.PyOS_AfterFork_Child" title="PyOS_AfterFork_Child"><code><span>PyOS_AfterFork_Child()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/slice.html#c.PySlice_GetIndicesEx" title="PySlice_GetIndicesEx"><code><span>PySlice_GetIndicesEx()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/slice.html#c.PySlice_Unpack" title="PySlice_Unpack"><code><span>PySlice_Unpack()</span></code></a> and <a href="https://docs.python.org/3.13/c-api/slice.html#c.PySlice_AdjustIndices" title="PySlice_AdjustIndices"><code><span>PySlice_AdjustIndices()</span></code></a> instead.</p></li>
<li><p><code><span>PyUnicode_AsDecodedObject()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/codec.html#c.PyCodec_Decode" title="PyCodec_Decode"><code><span>PyCodec_Decode()</span></code></a> instead.</p></li>
<li><p><code><span>PyUnicode_AsDecodedUnicode()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/codec.html#c.PyCodec_Decode" title="PyCodec_Decode"><code><span>PyCodec_Decode()</span></code></a> instead.</p></li>
<li><p><code><span>PyUnicode_AsEncodedObject()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/codec.html#c.PyCodec_Encode" title="PyCodec_Encode"><code><span>PyCodec_Encode()</span></code></a> instead.</p></li>
<li><p><code><span>PyUnicode_AsEncodedUnicode()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/codec.html#c.PyCodec_Encode" title="PyCodec_Encode"><code><span>PyCodec_Encode()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/unicode.html#c.PyUnicode_READY" title="PyUnicode_READY"><code><span>PyUnicode_READY()</span></code></a>:
Unneeded since Python 3.12</p></li>
<li><p><code><span>PyErr_Display()</span></code>:
Use <a href="https://docs.python.org/3.13/c-api/exceptions.html#c.PyErr_DisplayException" title="PyErr_DisplayException"><code><span>PyErr_DisplayException()</span></code></a> instead.</p></li>
<li><p><code><span>_PyErr_ChainExceptions()</span></code>:
Use <code><span>_PyErr_ChainExceptions1()</span></code> instead.</p></li>
<li><p><code><span>PyBytesObject.ob_shash</span></code> member:
call <a href="https://docs.python.org/3.13/c-api/object.html#c.PyObject_Hash" title="PyObject_Hash"><code><span>PyObject_Hash()</span></code></a> instead.</p></li>
<li><p><code><span>PyDictObject.ma_version_tag</span></code> member.</p></li>
<li><p>Thread Local Storage (TLS) API:</p>
<ul>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_create_key" title="PyThread_create_key"><code><span>PyThread_create_key()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_tss_alloc" title="PyThread_tss_alloc"><code><span>PyThread_tss_alloc()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_delete_key" title="PyThread_delete_key"><code><span>PyThread_delete_key()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_tss_free" title="PyThread_tss_free"><code><span>PyThread_tss_free()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_set_key_value" title="PyThread_set_key_value"><code><span>PyThread_set_key_value()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_tss_set" title="PyThread_tss_set"><code><span>PyThread_tss_set()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_get_key_value" title="PyThread_get_key_value"><code><span>PyThread_get_key_value()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_tss_get" title="PyThread_tss_get"><code><span>PyThread_tss_get()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_delete_key_value" title="PyThread_delete_key_value"><code><span>PyThread_delete_key_value()</span></code></a>:
Use <a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_tss_delete" title="PyThread_tss_delete"><code><span>PyThread_tss_delete()</span></code></a> instead.</p></li>
<li><p><a href="https://docs.python.org/3.13/c-api/init.html#c.PyThread_ReInitTLS" title="PyThread_ReInitTLS"><code><span>PyThread_ReInitTLS()</span></code></a>:
Unneeded since Python 3.7.</p></li>
</ul>
</li>
</ul>
</section>
</section>
</section>
<section id="build-changes">
<h2>Build Changes<a href="#build-changes" title="Link to this heading">¶</a></h2>
<ul>
<li><p><code><span>arm64-apple-ios</span></code> and <code><span>arm64-apple-ios-simulator</span></code> are both
now <span id="index-54"></span><a href="https://peps.python.org/pep-0011/"><strong>PEP 11</strong></a> tier 3 platforms.
(<a href="#whatsnew313-platform-support"><span>PEP 730</span></a> written
and implementation contributed by Russell Keith-Magee in <a href="https://github.com/python/cpython/issues/114099">gh-114099</a>.)</p></li>
<li><p><code><span>aarch64-linux-android</span></code> and <code><span>x86_64-linux-android</span></code> are both
now <span id="index-55"></span><a href="https://peps.python.org/pep-0011/"><strong>PEP 11</strong></a> tier 3 platforms.
(<a href="#whatsnew313-platform-support"><span>PEP 738</span></a> written
and implementation contributed by Malcolm Smith in <a href="https://github.com/python/cpython/issues/116622">gh-116622</a>.)</p></li>
<li><p><code><span>wasm32-wasi</span></code> is now a <span id="index-56"></span><a href="https://peps.python.org/pep-0011/"><strong>PEP 11</strong></a> tier 2 platform.
(Contributed by Brett Cannon in <a href="https://github.com/python/cpython/issues/115192">gh-115192</a>.)</p></li>
<li><p><code><span>wasm32-emscripten</span></code> is no longer a <span id="index-57"></span><a href="https://peps.python.org/pep-0011/"><strong>PEP 11</strong></a> supported platform.
(Contributed by Brett Cannon in <a href="https://github.com/python/cpython/issues/115192">gh-115192</a>.)</p></li>
<li><p>Building CPython now requires a compiler with support for the C11 atomic
library, GCC built-in atomic functions, or MSVC interlocked intrinsics.</p></li>
<li><p>Autoconf 2.71 and aclocal 1.16.4 are now required to regenerate
the <code><span>configure</span></code> script.
(Contributed by Christian Heimes in <a href="https://github.com/python/cpython/issues/89886">gh-89886</a>.)</p></li>
<li><p>SQLite 3.15.2 or newer is required to build
the <a href="https://docs.python.org/3.13/library/sqlite3.html#module-sqlite3" title="sqlite3: A DB-API 2.0 implementation using SQLite 3.x."><code><span>sqlite3</span></code></a> extension module.
(Contributed by Erlend Aasland in <a href="https://github.com/python/cpython/issues/105875">gh-105875</a>.)</p></li>
<li><p>CPython now bundles the <a href="https://github.com/microsoft/mimalloc/">mimalloc library</a> by default.
It is licensed under the MIT license;
see <a href="https://docs.python.org/3.13/license.html#mimalloc-license"><span>mimalloc license</span></a>.
The bundled mimalloc has custom changes, see <a href="https://github.com/python/cpython/issues/113141">gh-113141</a> for details.
(Contributed by Dino Viehland in <a href="https://github.com/python/cpython/issues/109914">gh-109914</a>.)</p>
</li>
<li><p>The <code><span>configure</span></code> option <a href="https://docs.python.org/3.13/using/configure.html#cmdoption-with-system-libmpdec"><code><span>--with-system-libmpdec</span></code></a>
now defaults to <code><span>yes</span></code>.
The bundled copy of <code><span>libmpdecimal</span></code> will be removed in Python 3.15.</p></li>
<li><p>Python built with <code><span>configure</span></code> <a href="https://docs.python.org/3.13/using/configure.html#cmdoption-with-trace-refs"><code><span>--with-trace-refs</span></code></a>
(tracing references) is now ABI compatible with the Python release build
and <a href="https://docs.python.org/3.13/using/configure.html#debug-build"><span>debug build</span></a>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/108634">gh-108634</a>.)</p></li>
<li><p>On POSIX systems, the pkg-config (<code><span>.pc</span></code>) filenames now include the ABI
flags.  For example, the free-threaded build generates <code><span>python-3.13t.pc</span></code>
and the debug build generates <code><span>python-3.13d.pc</span></code>.</p></li>
<li><p>The <code><span>errno</span></code>, <code><span>fcntl</span></code>, <code><span>grp</span></code>, <code><span>md5</span></code>, <code><span>pwd</span></code>, <code><span>resource</span></code>,
<code><span>termios</span></code>, <code><span>winsound</span></code>,
<code><span>_ctypes_test</span></code>, <code><span>_multiprocessing.posixshmem</span></code>, <code><span>_scproxy</span></code>, <code><span>_stat</span></code>,
<code><span>_statistics</span></code>, <code><span>_testconsole</span></code>, <code><span>_testimportmultiple</span></code> and <code><span>_uuid</span></code>
C extensions are now built with the <a href="https://docs.python.org/3.13/c-api/stable.html#limited-c-api"><span>limited C API</span></a>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/85283">gh-85283</a>.)</p></li>
</ul>
</section>
<section id="porting-to-python-3-13">
<h2>Porting to Python 3.13<a href="#porting-to-python-3-13" title="Link to this heading">¶</a></h2>
<p>This section lists previously described changes and other bugfixes
that may require changes to your code.</p>
<section id="changes-in-the-python-api">
<h3>Changes in the Python API<a href="#changes-in-the-python-api" title="Link to this heading">¶</a></h3>
<ul id="pep667-porting-notes-py">
<li><p><a href="#whatsnew313-locals-semantics"><span>PEP 667</span></a> introduces several changes
to the semantics of <a href="https://docs.python.org/3.13/library/functions.html#locals" title="locals"><code><span>locals()</span></code></a> and <a href="https://docs.python.org/3.13/reference/datamodel.html#frame.f_locals" title="frame.f_locals"><code><span>f_locals</span></code></a>:</p>
<ul>
<li><p>Calling <a href="https://docs.python.org/3.13/library/functions.html#locals" title="locals"><code><span>locals()</span></code></a> in an <a href="https://docs.python.org/3.13/glossary.html#term-optimized-scope"><span>optimized scope</span></a> now produces an
independent snapshot on each call, and hence no longer implicitly updates
previously returned references. Obtaining the legacy CPython behavior now
requires explicit calls to update the initially returned dictionary with the
results of subsequent calls to <code><span>locals()</span></code>. Code execution functions that
implicitly target <code><span>locals()</span></code> (such as <code><span>exec</span></code> and <code><span>eval</span></code>) must be
passed an explicit namespace to access their results in an optimized scope.
(Changed as part of <span id="index-58"></span><a href="https://peps.python.org/pep-0667/"><strong>PEP 667</strong></a>.)</p></li>
<li><p>Calling <a href="https://docs.python.org/3.13/library/functions.html#locals" title="locals"><code><span>locals()</span></code></a> from a comprehension at module or class scope
(including via <code><span>exec</span></code> or <code><span>eval</span></code>) once more behaves as if the comprehension
were running as an independent nested function (i.e. the local variables from
the containing scope are not included). In Python 3.12, this had changed
to include the local variables from the containing scope when implementing
<span id="index-59"></span><a href="https://peps.python.org/pep-0709/"><strong>PEP 709</strong></a>. (Changed as part of <span id="index-60"></span><a href="https://peps.python.org/pep-0667/"><strong>PEP 667</strong></a>.)</p></li>
<li><p>Accessing <a href="https://docs.python.org/3.13/reference/datamodel.html#frame.f_locals" title="frame.f_locals"><code><span>FrameType.f_locals</span></code></a> in an
<a href="https://docs.python.org/3.13/glossary.html#term-optimized-scope"><span>optimized scope</span></a> now returns a write-through proxy rather than a
snapshot that gets updated at ill-specified times. If a snapshot is desired,
it must be created explicitly with <code><span>dict</span></code> or the proxy’s <code><span>.copy()</span></code> method.
(Changed as part of <span id="index-61"></span><a href="https://peps.python.org/pep-0667/"><strong>PEP 667</strong></a>.)</p></li>
</ul>
</li>
<li><p><a href="https://docs.python.org/3.13/library/functools.html#functools.partial" title="functools.partial"><code><span>functools.partial</span></code></a> now emits a <a href="https://docs.python.org/3.13/library/exceptions.html#FutureWarning" title="FutureWarning"><code><span>FutureWarning</span></code></a>
when used as a method.
The behavior will change in future Python versions.
Wrap it in <a href="https://docs.python.org/3.13/library/functions.html#staticmethod" title="staticmethod"><code><span>staticmethod()</span></code></a> if you want to preserve the old behavior.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/121027">gh-121027</a>.)</p></li>
<li><p>An <a href="https://docs.python.org/3.13/library/exceptions.html#OSError" title="OSError"><code><span>OSError</span></code></a> is now raised by <a href="https://docs.python.org/3.13/library/getpass.html#getpass.getuser" title="getpass.getuser"><code><span>getpass.getuser()</span></code></a>
for any failure to retrieve a username,
instead of <a href="https://docs.python.org/3.13/library/exceptions.html#ImportError" title="ImportError"><code><span>ImportError</span></code></a> on non-Unix platforms
or <a href="https://docs.python.org/3.13/library/exceptions.html#KeyError" title="KeyError"><code><span>KeyError</span></code></a> on Unix platforms where the password database is empty.</p></li>
<li><p>The value of the <code><span>mode</span></code> attribute of <a href="https://docs.python.org/3.13/library/gzip.html#gzip.GzipFile" title="gzip.GzipFile"><code><span>gzip.GzipFile</span></code></a>
is now a string (<code><span>'rb'</span></code> or <code><span>'wb'</span></code>) instead of an integer (<code><span>1</span></code> or <code><span>2</span></code>).
The value of the <code><span>mode</span></code> attribute of the readable file-like object
returned by <a href="https://docs.python.org/3.13/library/zipfile.html#zipfile.ZipFile.open" title="zipfile.ZipFile.open"><code><span>zipfile.ZipFile.open()</span></code></a> is now <code><span>'rb'</span></code> instead of <code><span>'r'</span></code>.
(Contributed by Serhiy Storchaka in <a href="https://github.com/python/cpython/issues/115961">gh-115961</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/mailbox.html#mailbox.Maildir" title="mailbox.Maildir"><code><span>mailbox.Maildir</span></code></a> now ignores files with a leading dot (<code><span>.</span></code>).
(Contributed by Zackery Spytz in <a href="https://github.com/python/cpython/issues/65559">gh-65559</a>.)</p></li>
<li><p><a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.glob" title="pathlib.Path.glob"><code><span>pathlib.Path.glob()</span></code></a> and <a href="https://docs.python.org/3.13/library/pathlib.html#pathlib.Path.rglob" title="pathlib.Path.rglob"><code><span>rglob()</span></code></a> now return both
files and directories if a pattern that ends with “<code><span>**</span></code>” is given,
rather than directories only.
Add a trailing slash to keep the previous behavior and only match directories.</p></li>
<li><p>The <a href="https://docs.python.org/3.13/library/threading.html#module-threading" title="threading: Thread-based parallelism."><code><span>threading</span></code></a> module now expects the <code><span>_thread</span></code> module
to have an <code><span>_is_main_interpreter()</span></code> function.
This function takes no arguments and returns <code><span>True</span></code>
if the current interpreter is the main interpreter.</p>
<p>Any library or application that provides a custom <code><span>_thread</span></code> module
must provide <code><span>_is_main_interpreter()</span></code>,
just like the module’s other “private” attributes.
(<a href="https://github.com/python/cpython/issues/112826">gh-112826</a>.)</p>
</li>
</ul>
</section>
<section id="changes-in-the-c-api">
<h3>Changes in the C API<a href="#changes-in-the-c-api" title="Link to this heading">¶</a></h3>
<ul>
<li><p><code><span>Python.h</span></code> no longer includes the <code><span>&lt;ieeefp.h&gt;</span></code> standard header. It was
included for the <code><span>finite()</span></code> function which is now provided by the
<code><span>&lt;math.h&gt;</span></code> header. It should now be included explicitly if needed. Remove
also the <code><span>HAVE_IEEEFP_H</span></code> macro.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/108765">gh-108765</a>.)</p></li>
<li><p><code><span>Python.h</span></code> no longer includes these standard header files: <code><span>&lt;time.h&gt;</span></code>,
<code><span>&lt;sys/select.h&gt;</span></code> and <code><span>&lt;sys/time.h&gt;</span></code>. If needed, they should now be
included explicitly. For example, <code><span>&lt;time.h&gt;</span></code> provides the <code><span>clock()</span></code> and
<code><span>gmtime()</span></code> functions, <code><span>&lt;sys/select.h&gt;</span></code> provides the <code><span>select()</span></code>
function, and <code><span>&lt;sys/time.h&gt;</span></code> provides the <code><span>futimes()</span></code>, <code><span>gettimeofday()</span></code>
and <code><span>setitimer()</span></code> functions.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/108765">gh-108765</a>.)</p></li>
<li><p>On Windows, <code><span>Python.h</span></code> no longer includes the <code><span>&lt;stddef.h&gt;</span></code> standard
header file. If needed, it should now be included explicitly. For example, it
provides <code><span>offsetof()</span></code> function, and <code><span>size_t</span></code> and <code><span>ptrdiff_t</span></code> types.
Including <code><span>&lt;stddef.h&gt;</span></code> explicitly was already needed by all other
platforms, the <code><span>HAVE_STDDEF_H</span></code> macro is only defined on Windows.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/108765">gh-108765</a>.)</p></li>
<li><p>If the <a href="https://docs.python.org/3.13/c-api/stable.html#c.Py_LIMITED_API" title="Py_LIMITED_API"><code><span>Py_LIMITED_API</span></code></a> macro is defined, <code><span>Py_BUILD_CORE</span></code>,
<code><span>Py_BUILD_CORE_BUILTIN</span></code> and <code><span>Py_BUILD_CORE_MODULE</span></code> macros
are now undefined by <code><span>&lt;Python.h&gt;</span></code>.
(Contributed by Victor Stinner in <a href="https://github.com/python/cpython/issues/85283">gh-85283</a>.)</p></li>
<li><p>The old trashcan macros <code><span>Py_TRASHCAN_SAFE_BEGIN</span></code> and <code><span>Py_TRASHCAN_SAFE_END</span></code>
were removed. They should be replaced by the new macros <code><span>Py_TRASHCAN_BEGIN</span></code>
and <code><span>Py_TRASHCAN_END</span></code>.</p>
<p>A <code><span>tp_dealloc</span></code> function that has the old macros, such as:</p>
<div><pre><span></span><span>static</span> <span>void</span>
<span>mytype_dealloc</span><span>(</span><span>mytype</span> <span>*</span><span>p</span><span>)</span>
<span>{</span>
    <span>PyObject_GC_UnTrack</span><span>(</span><span>p</span><span>);</span>
    <span>Py_TRASHCAN_SAFE_BEGIN</span><span>(</span><span>p</span><span>);</span>
    <span>...</span>
    <span>Py_TRASHCAN_SAFE_END</span>
<span>}</span>
</pre></div>
<p>should migrate to the new macros as follows:</p>
<div><pre><span></span><span>static</span> <span>void</span>
<span>mytype_dealloc</span><span>(</span><span>mytype</span> <span>*</span><span>p</span><span>)</span>
<span>{</span>
    <span>PyObject_GC_UnTrack</span><span>(</span><span>p</span><span>);</span>
    <span>Py_TRASHCAN_BEGIN</span><span>(</span><span>p</span><span>,</span> <span>mytype_dealloc</span><span>)</span>
    <span>...</span>
    <span>Py_TRASHCAN_END</span>
<span>}</span>
</pre></div>
<p>Note that <code><span>Py_TRASHCAN_BEGIN</span></code> has a second argument which
should be the deallocation function it is in. The new macros were
added in Python 3.8 and the old macros were deprecated in Python 3.11.
(Contributed by Irit Katriel in <a href="https://github.com/python/cpython/issues/105111">gh-105111</a>.)</p>
</li>
</ul>
<ul id="pep667-porting-notes-c">
<li><p><a href="#whatsnew313-locals-semantics"><span>PEP 667</span></a> introduces several changes
to frame-related functions:</p>
<ul>
<li><p>The effects of mutating the dictionary returned from
<a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetLocals" title="PyEval_GetLocals"><code><span>PyEval_GetLocals()</span></code></a> in an <a href="https://docs.python.org/3.13/glossary.html#term-optimized-scope"><span>optimized scope</span></a> have changed.
New dict entries added this way will now <em>only</em> be visible to
subsequent <a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetLocals" title="PyEval_GetLocals"><code><span>PyEval_GetLocals()</span></code></a> calls in that frame,
as <a href="https://docs.python.org/3.13/c-api/frame.html#c.PyFrame_GetLocals" title="PyFrame_GetLocals"><code><span>PyFrame_GetLocals()</span></code></a>, <a href="https://docs.python.org/3.13/library/functions.html#locals" title="locals"><code><span>locals()</span></code></a>,
and <a href="https://docs.python.org/3.13/reference/datamodel.html#frame.f_locals" title="frame.f_locals"><code><span>FrameType.f_locals</span></code></a> no longer access
the same underlying cached dictionary.
Changes made to entries for actual variable names and names added via
the write-through proxy interfaces will be overwritten on subsequent calls
to <a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetLocals" title="PyEval_GetLocals"><code><span>PyEval_GetLocals()</span></code></a> in that frame.
The recommended code update depends on how the function was being used,
so refer to the deprecation notice on the function for details.</p></li>
<li><p>Calling <a href="https://docs.python.org/3.13/c-api/frame.html#c.PyFrame_GetLocals" title="PyFrame_GetLocals"><code><span>PyFrame_GetLocals()</span></code></a> in an <a href="https://docs.python.org/3.13/glossary.html#term-optimized-scope"><span>optimized scope</span></a>
now returns a write-through proxy rather than a snapshot
that gets updated at ill-specified times.
If a snapshot is desired, it must be created explicitly
(e.g. with <a href="https://docs.python.org/3.13/c-api/dict.html#c.PyDict_Copy" title="PyDict_Copy"><code><span>PyDict_Copy()</span></code></a>),
or by calling the new <a href="https://docs.python.org/3.13/c-api/reflection.html#c.PyEval_GetFrameLocals" title="PyEval_GetFrameLocals"><code><span>PyEval_GetFrameLocals()</span></code></a> API.</p></li>
<li><p><code><span>PyFrame_FastToLocals()</span></code> and <code><span>PyFrame_FastToLocalsWithError()</span></code>
no longer have any effect.
Calling these functions has been redundant since Python 3.11,
when <a href="https://docs.python.org/3.13/c-api/frame.html#c.PyFrame_GetLocals" title="PyFrame_GetLocals"><code><span>PyFrame_GetLocals()</span></code></a> was first introduced.</p></li>
<li><p><code><span>PyFrame_LocalsToFast()</span></code> no longer has any effect.
Calling this function is redundant now that <a href="https://docs.python.org/3.13/c-api/frame.html#c.PyFrame_GetLocals" title="PyFrame_GetLocals"><code><span>PyFrame_GetLocals()</span></code></a>
returns a write-through proxy for <a href="https://docs.python.org/3.13/glossary.html#term-optimized-scope"><span>optimized scopes</span></a>.</p></li>
</ul>
</li>
</ul>
</section>
</section>
<section id="regression-test-changes">
<h2>Regression Test Changes<a href="#regression-test-changes" title="Link to this heading">¶</a></h2>
<ul>
<li><p>Python built with <code><span>configure</span></code> <a href="https://docs.python.org/3.13/using/configure.html#cmdoption-with-pydebug"><code><span>--with-pydebug</span></code></a> now
supports a <a href="https://docs.python.org/3.13/using/cmdline.html#cmdoption-X"><code><span>-X</span> <span>presite=package.module</span></code></a> command-line
option. If used, it specifies a module that should be imported early
in the lifecycle of the interpreter, before <code><span>site.py</span></code> is executed.
(Contributed by Łukasz Langa in <a href="https://github.com/python/cpython/issues/110769">gh-110769</a>.)</p></li>
</ul>
</section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: A website for comparing protein powder prices (113 pts)]]></title>
            <link>https://nutritionprices.com/</link>
            <guid>41765939</guid>
            <pubDate>Mon, 07 Oct 2024 13:42:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nutritionprices.com/">https://nutritionprices.com/</a>, See on <a href="https://news.ycombinator.com/item?id=41765939">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="filters">

            <fieldset>
                <p>
                   All serving are normalized to a serving size of 25 grams of protein to enable price comparison.
                </p>
            </fieldset>
            <fieldset id="datasource">
                <legend>Data Source</legend>
                <ul>
                    
                        <span>
                            <li>iHerb.com</li>
                        </span>
                    
                    
                    
                </ul>
            </fieldset>
            <fieldset>
                <legend>Search</legend>
                
            </fieldset>
            <fieldset>
                <legend>Type</legend>
                <label>
                    
                    Whey
                </label>
                <label>
                    
                    Plant Based
                </label>
                <label>
                    
                    Animal
                </label>
                <label>
                    
                    Casein
                </label>
                <label>
                    
                    Blend
                </label>
            </fieldset>
            <fieldset>
                <legend>Diet</legend>
                    <label>
                        
                        Gluten Free
                    </label>
                    <label>
                        
                        Vegetarian
                    </label>
                    <label>
                        
                        Vegan
                    </label>
                    <label>
                        
                        Lactose Free
                    </label>
                    <label>
                        
                        Non GMO
                    </label>
            </fieldset>
            <fieldset>
                <legend>Flavor</legend>
                <label>
                    
                    Vanilla
                </label>
                <label>
                    
                    Chocolate
                </label>
                <label>
                    
                    Strawberry
                </label>
                <label>
                    
                    Unflavored
                </label>
                <label>
                    
                    Other
                </label>
            </fieldset>
            <fieldset>
                <legend>Weight</legend>
                <p>
                    <label>Minimum</label>
                </p>
                <p>
                    <label>Maximum</label>
                </p>
            </fieldset>
            <fieldset>
                <legend>Calories per Serving</legend>
                <p>
                    <label>Minimum</label>
                </p>
                <p>
                    <label>Maximum</label>
                </p>
            </fieldset>
            <fieldset>
                <ul>
                    <a href="https://nutritionprices.com/faq.html">
                        <li>
                            FAQ
                        </li>
                    </a>
                    <a href="https://nutritionprices.com/privacy.html">
                        <li>
                            Privacy Policy
                        </li>
                    </a>
                </ul>
            </fieldset>
            <fieldset>
                <p>
                    This site is supported by paid affiliate links.
                </p>
            </fieldset>
        </div></div>]]></description>
        </item>
    </channel>
</rss>