<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Thu, 23 Nov 2023 06:00:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Test, [, and [[ (2020) (134 pts)]]></title>
            <link>https://jmmv.dev/2020/03/test-bracket.html</link>
            <guid>38387464</guid>
            <pubDate>Thu, 23 Nov 2023 00:31:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jmmv.dev/2020/03/test-bracket.html">https://jmmv.dev/2020/03/test-bracket.html</a>, See on <a href="https://news.ycombinator.com/item?id=38387464">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><p>Did you know that Unix systems have a binary whose name is a single symbol?</p><p>Go and look for it. Run <code>ls /bin/?</code> and behold:</p><pre tabindex="0"><code>$ ls /bin/?
/bin/[
</code></pre><p>Uh huh. <code>[</code>? The square bracket? That’s a program?!</p><p>But wait, it gets more interesting:</p><pre tabindex="0"><code>$ ls -li /bin/[ /bin/test
834 -rwxr-xr-x  2 root  wheel  35824 Jan 23 08:59 /bin/[
834 -rwxr-xr-x  2 root  wheel  35824 Jan 23 08:59 /bin/test
</code></pre><p>The two names, <code>[</code> and <code>test</code>, point to the same binary<sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup>. But why? What are these?</p><p>The <code>test</code> program is what you use in the shell to evaluate an expression. You can use this to compare strings, compare numbers, and to check various conditions on files. If you have written a shell script—any shell script really—you certainly have used either of these variants.</p><p>The way this works is simple: the <code>test</code> program takes a bunch of arguments, evaluates the expression represented by them, and returns 0 if the expression is true or 1 if it is false. This then lets you do things like:</p><pre tabindex="0"><code>if test a = b; then
    echo "The two strings were the same! Oops!"
fi
</code></pre><p>So why do we have two names for this helper tool? I haven’t been able to find the definitive answer, but my guess is simply: because the above “looks ugly”, and the “obvious” solution to make it look nicer is to introduce <code>[</code> as a command. With it, you can express the same logic from above as:</p><pre tabindex="0"><code>if [ a = b ]; then
    echo "The two strings were the same! Oops!"
fi
</code></pre><p>Yup. Exact same code as above. The only difference here is that the <code>test</code> binary checks its <code>argv[0]</code> to see if it’s invoked as <code>test</code> or as <code>[</code>. If the invocation happens to use the latter, then the program ensures that the last argument is the matching <code>]</code> to keep things balanced.</p><p>With that, you can deduce that you don’t even need the conditional statement to use either of these commands and see what’s going on:</p><pre tabindex="0"><code>$ test a = a; echo $?
0
$ test a = b; echo $?
1
$ [ a = a ]; echo $?
0
$ [ a = b ]; echo $?
1
</code></pre><p>That’s right. The <code>if</code> statement we used in the previous examples just takes <em>a command</em> as its argument and runs it to get its exit code. (And with this, you can “guess” that <code>true</code> and <code>false</code> are… yup, yup… also helper binaries.)</p><p>To make things more confusing, though, pay attention to the following:</p><pre tabindex="0"><code>$ /bin/test a b
test: a: unexpected operator
$ test a b
dash: 2: test: a: unexpected operator
</code></pre><p>Why did we get different outputs there? Well… as it so happens, <code>test</code> and <code>[</code> appear <em>a lot</em> in shell scripts. Invoking them as separate binaries would be very inefficient, so the vast majority of the shells implement these commands as built-ins <em>too</em>. You may get different behavior depending on whether you run the external binary or the builtin, which means you easily get different behavior across different shells. (And that’s true for many other things like the innocent-looking <code>echo</code>.)</p><hr><p>So what about <code>[[</code>? This is <a href="https://www.gnu.org/software/bash/manual/html_node/Conditional-Constructs.html#index-_005b_005b">a Bash extension</a> and replaces the use of <code>[</code>. The key difference, however, is that <code>[[</code> is <em>guaranteed</em> to be a builtin and therefore it can change, and it does change, the fundamental rules of the language within the expression it evaluates. To illustrate this, let’s look at an example with globs:</p><pre tabindex="0"><code>$ touch long-name
$ [ long* = long-name ] &amp;&amp; echo match
match
$ [[ long* = long-name ]] &amp;&amp; echo match
</code></pre><p>The first command shown here is an invocation of the <code>[</code> tool, which may or may not be a builtin. No matter what, all arguments are subject to the regular shell expansion rules, so <code>long*</code> is matched against the directory contents, is then expanded to <code>long-name</code>, and thus the test succeeds. But, in contrast, <code>[[</code> produces a different result because it treats the <code>long*</code> as a literal string, so all this is doing is comparing <code>long*</code> against <code>long-name</code> verbatim, and therefore failing.</p><p>What should you use, then? If you are writing a portable shell script (please do), then stick to <code>[</code>. You can also use <code>test</code>, but I don’t think that’s too common. But if you know your script is going to be Bash-specific anyway, you are probably better served by using <code>[[</code> unconditionally and consistently, as it provides a lot of nice features (like regular expression matches via <code>=~</code>).</p><hr><p>And now for the final lolz. I’ve said above that these are the commands you use to evaluate expressions… but the shell <em>also</em> has expressions of its own via the <code>!</code>, <code>&amp;&amp;</code>, and <code>||</code> operators—all of which work on command exit statuses. That is:</p><pre tabindex="0"><code>$ grep ^hello$ /usr/share/dict/words &amp;&amp; grep ^bye$ /usr/share/dict/words
hello
bye
$ echo $?
0
$ grep ^tyop$ /usr/share/dict/words &amp;&amp; grep ^bye$ /usr/share/dict/words
$ echo $?
1
</code></pre><p>Which means… that you can combine <code>test</code> expressions and shell expressions in one invocation:</p><pre tabindex="0"><code>if [ a = b ] || grep -q ^hello$ /usr/share/dict/words; then
  echo "test failed and grep succeeded"
fi
</code></pre><p>You pick whether to be amused or horrified. I don’t know how exactly my coworker reacted when I hinted at this during a recent code review I did for them.</p></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ChatGPT generates fake data set to support scientific hypothesis (146 pts)]]></title>
            <link>https://www.nature.com/articles/d41586-023-03635-w</link>
            <guid>38386547</guid>
            <pubDate>Wed, 22 Nov 2023 23:11:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nature.com/articles/d41586-023-03635-w">https://www.nature.com/articles/d41586-023-03635-w</a>, See on <a href="https://news.ycombinator.com/item?id=38386547">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    <figure>
 <picture>
  <source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-023-03635-w/d41586-023-03635-w_26338662.jpg?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-023-03635-w/d41586-023-03635-w_26338662.jpg?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px">
  <img alt="The ChatGPT interface displayed on a smartphone." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-023-03635-w/d41586-023-03635-w_26338662.jpg">
  <figcaption>
   <p><span>The artificial-intelligence model that powers ChatGPT can create superficially plausible scientific data sets.</span><span>Credit: Mateusz Slodkowski/SOPA Images/LightRocket via Getty</span></p>
  </figcaption>
 </picture>
</figure><p>Researchers have used the technology behind the artificial intelligence (AI) chatbot ChatGPT to create a fake clinical-trial data set to support an unverified scientific claim.</p><p>In a paper published in <i>JAMA Ophthalmology</i> on 9 November<sup><a href="#ref-CR1" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">1</a></sup>, the authors used GPT-4 — the latest version of the large language model on which ChatGPT runs — paired with Advanced Data Analysis (ADA), a model that incorporates the programming language Python and can perform statistical analysis and create data visualizations. The AI-generated data compared the outcomes of two surgical procedures and indicated — wrongly — that one treatment is better than the other.</p><article data-label="Related">
  <a href="https://www.nature.com/articles/d41586-023-02477-w" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-023-03635-w/d41586-023-03635-w_26135786.jpg"><p>Scientific sleuths spot dishonest ChatGPT use in papers</p></a>
 </article><p>“Our aim was to highlight that, in a few minutes, you can create a data set that is not supported by real original data, and it is also opposite or in the other direction compared to the evidence that are available,” says study co-author Giuseppe Giannaccare, an eye surgeon at the University of Cagliari in Italy.</p><p>The ability of AI to fabricate convincing data adds to concern among researchers and journal editors about research integrity. “It was one thing that generative AI could be used to generate texts that would not be detectable using plagiarism software, but the capacity to create fake but realistic data sets is a next level of worry,” says Elisabeth Bik, a microbiologist and independent research-integrity consultant in San Francisco, California. “It will make it very easy for any researcher or group of researchers to create fake measurements on non-existent patients, fake answers to questionnaires or to generate a large data set on animal experiments.”</p><p>The authors describe the results as a “seemingly authentic database”. But when examined by specialists, the data failed authenticity checks, and contained telltale signs of having been fabricated.</p><h2>Surgery comparison</h2><p>The authors asked GPT-4 ADA to create a data set concerning people with an eye condition called keratoconus, which causes thinning of the cornea and can lead to impaired focus and poor vision. For 15–20% of people with the disease, treatment involves a corneal transplant, performed using one of two procedures.</p><p>The first method, penetrating keratoplasty (PK), involves surgically removing all the damaged layers of the cornea and replacing them with healthy tissue from a donor. The second procedure, deep anterior lamellar keratoplasty (DALK), replaces only the front layer of the cornea, leaving the innermost layer intact.</p><article data-label="Related">
  <a href="https://www.nature.com/articles/d41586-023-03144-w" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-023-03635-w/d41586-023-03635-w_26195420.jpg"><p>How ChatGPT and other AI tools could disrupt scientific publishing</p></a>
 </article><p>The authors instructed the large language model to fabricate data to support the conclusion that DALK results in better outcomes than PK. To do that, they asked it to show a statistical difference in an imaging test that assesses the cornea’s shape and detects irregularities, as well as a difference in how well the trial participants could see before and after the procedures.</p><p>The AI-generated data included 160 male and 140 female participants and indicated that those who underwent DALK scored better in both vision and the imaging test did than those who had PK, a finding that is at odds with what genuine clinical trials show. In a 2010 report of a trial with 77 participants, the outcomes of DALK were similar to those of PK for up to 2 years after the surgery<sup><a href="#ref-CR2" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">2</a></sup>.</p><p>“It seems like it’s quite easy to create data sets that are at least superficially plausible. So, to an untrained eye, this certainly looks like a real data set,” says Jack Wilkinson, a biostatistician at the University of Manchester, UK.</p><p>Wilkinson, who has an interest in methods to detect inauthentic data, has examined several data sets generated by earlier versions of the large language model, which he says lacked convincing elements when scrutinized, because they struggled to capture realistic relationships between variables.</p><h2>Closer scrutiny</h2><p>At the request of <i>Nature</i>’s news team, Wilkinson and his colleague Zewen Lu assessed the fake data set using a screening protocol designed to check for authenticity.</p><p>This revealed a mismatch in many ‘participants’ between designated sex and the sex that would typically be expected from their name. Furthermore, no correlation was found between preoperative and postoperative measures of vision capacity and the eye-imaging test. Wilkinson and Lu also inspected the distribution of numbers in some of the columns in the data set to check for non-random patterns. The eye-imaging values passed this test, but some of the participants’ age values clustered in a way that would be extremely unusual in a genuine data set: there was a disproportionate number of participants whose age values ended with 7 or 8.</p><article data-label="Related">
  <a href="https://www.nature.com/articles/d41586-023-03507-3" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-023-03635-w/d41586-023-03635-w_26300874.png"><p>ChatGPT has entered the classroom: how LLMs could transform education</p></a>
 </article><p>The study authors acknowledge that their data set has flaws that could be detected with close scrutiny. But nevertheless, says Giannaccare, “if you look very quickly at the data set, it’s difficult to recognize the non-human origin of the data source”.</p><p>Bernd Pulverer, chief editor of <i>EMBO Reports</i>, agrees that this is a cause for concern. “Peer review in reality often stops short of a full data re-analysis and is unlikely to pick up on well-crafted integrity breaches using AI,” he says, adding that journals will need to update quality checks to identify AI-generated synthetic data.</p><p>Wilkinson is leading a collaborative project to design statistical and non-statistical tools to assess potentially problematic studies. “In the same way that AI might be part of the problem, there might be AI-based solutions to some of this. We might be able to automate some of these checks,” he says. But he warns that advances in generative AI could soon offer ways to circumvent these protocols. Pulverer agrees: “These are things the AI can be easily weaponized against as soon as it is known what the screening looks for.”</p>
                </div><div id="references" aria-labelledby="Bib1"><h2 id="Bib1">References</h2><div data-container-section="references" id="Bib1-content"><ol data-track-component="outbound reference"><li data-counter="1."><p id="ref-CR1">Taloni, A., Scorcia, V. &amp; Giannaccare, G. <i>JAMA Ophthalmol</i>. https://doi.org/10.1001/jamaophthalmol.2023.5162 (2023)</p><p><a data-track="click" rel="nofollow noopener" data-track-label="10.1001/jamaophthalmol.2023.5162" data-track-action="article reference" href="https://doi.org/10.1001%2Fjamaophthalmol.2023.5162" aria-label="Article reference 1" data-doi="10.1001/jamaophthalmol.2023.5162">Article</a>&nbsp;
    <a data-track="click" rel="nofollow noopener" data-track-label="link" data-track-action="pubmed reference" href="http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=PubMed&amp;dopt=Abstract&amp;list_uids=37943569" aria-label="PubMed reference 1">PubMed</a>&nbsp;
    <a data-track="click" data-track-action="google scholar reference" data-track-label="link" rel="nofollow noopener" aria-label="Google Scholar reference 1" href="http://scholar.google.com/scholar_lookup?&amp;title=&amp;journal=JAMA%20Ophthalmol&amp;doi=10.1001%2Fjamaophthalmol.2023.5162&amp;publication_year=2023&amp;author=Taloni%2CA.&amp;author=Scorcia%2CV.&amp;author=Giannaccare%2CG.">
                    Google Scholar</a>&nbsp;
                </p></li><li data-counter="2."><p id="ref-CR2">Javadi, M. A., Feizi, S., Yazdani, S. &amp; Mirbabaee, F. <i>Cornea</i> <b>29</b>, 365–371 (2010).</p><p><a data-track="click" rel="nofollow noopener" data-track-label="10.1097/ICO.0b013e3181b81b71" data-track-action="article reference" href="https://doi.org/10.1097%2FICO.0b013e3181b81b71" aria-label="Article reference 2" data-doi="10.1097/ICO.0b013e3181b81b71">Article</a>&nbsp;
    <a data-track="click" rel="nofollow noopener" data-track-label="link" data-track-action="pubmed reference" href="http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=PubMed&amp;dopt=Abstract&amp;list_uids=20168217" aria-label="PubMed reference 2">PubMed</a>&nbsp;
    <a data-track="click" data-track-action="google scholar reference" data-track-label="link" rel="nofollow noopener" aria-label="Google Scholar reference 2" href="http://scholar.google.com/scholar_lookup?&amp;title=&amp;journal=Cornea&amp;doi=10.1097%2FICO.0b013e3181b81b71&amp;volume=29&amp;pages=365-371&amp;publication_year=2010&amp;author=Javadi%2CM.%20A.&amp;author=Feizi%2CS.&amp;author=Yazdani%2CS.&amp;author=Mirbabaee%2CF.">
                    Google Scholar</a>&nbsp;
                </p></li></ol><p><a data-track="click" data-track-action="download citation references" data-track-label="link" rel="nofollow" href="https://citation-needed.springer.com/v2/references/10.1038/d41586-023-03635-w?format=refman&amp;flavour=references">Download references</a></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sam Altman's ouster was precipitated by letter to board about AI breakthrough (574 pts)]]></title>
            <link>https://www.reuters.com/technology/sam-altmans-ouster-openai-was-precipitated-by-letter-board-about-ai-breakthrough-2023-11-22/</link>
            <guid>38386487</guid>
            <pubDate>Wed, 22 Nov 2023 23:07:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/technology/sam-altmans-ouster-openai-was-precipitated-by-letter-board-about-ai-breakthrough-2023-11-22/">https://www.reuters.com/technology/sam-altmans-ouster-openai-was-precipitated-by-letter-board-about-ai-breakthrough-2023-11-22/</a>, See on <a href="https://news.ycombinator.com/item?id=38386487">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-testid="primary-gallery"><p data-testid="Body"><b data-testid="Body">[1/2]</b><span>Sam Altman, CEO of ChatGPT maker OpenAI, arrives for a bipartisan Artificial Intelligence (AI) Insight Forum for all U.S. senators hosted by Senate Majority Leader Chuck Schumer (D-NY) at the U.S. Capitol in Washington, U.S., September 13, 2023. REUTERS/Julia Nikhinson/File Photo <a data-testid="Link" href="https://www.reutersagency.com/en/licensereuterscontent/?utm_medium=rcom-article-media&amp;utm_campaign=rcom-rcp-lead" target="_blank" referrerpolicy="no-referrer-when-downgrade"> Acquire Licensing Rights</a></span></p></div><div><p data-testid="paragraph-0">Nov 22 (Reuters) - Ahead of OpenAI CEO <a data-testid="Link" href="https://www.reuters.com/technology/ousting-ceo-sam-altman-chatgpt-loses-its-best-fundraiser-2023-11-18/" referrerpolicy="no-referrer-when-downgrade">Sam Altman’s four days in exile</a>, several staff researchers sent the board of directors a letter warning of a powerful artificial intelligence discovery that they said could threaten humanity, two people familiar with the matter told Reuters.</p><p data-testid="paragraph-1">The previously unreported letter and AI algorithm was a catalyst that caused the board to oust Altman, the poster child of generative AI, the two sources said. Before <a data-testid="Link" href="https://www.reuters.com/technology/sam-altman-return-openai-ceo-2023-11-22/" referrerpolicy="no-referrer-when-downgrade">his triumphant return</a> late Tuesday, more than 700 employees had threatened to quit and join backer Microsoft <a data-testid="Link" href="https://www.reuters.com/markets/companies/MSFT.O" target="_blank" referrerpolicy="no-referrer-when-downgrade">(MSFT.O)</a> in solidarity with their fired leader.</p><p data-testid="paragraph-2">The sources cited the letter as one factor among a longer list of grievances by the board that led to Altman’s firing. Reuters was unable to review a copy of the letter. The researchers who wrote the letter did not immediately respond to requests for comment.</p><p data-testid="paragraph-3">OpenAI declined to comment.</p><p data-testid="paragraph-4">According to one of the sources, long-time executive Mira Murati told employees on Wednesday that a letter about the AI breakthrough called Q* (pronounced Q-Star), precipitated the board's actions.</p><p data-testid="paragraph-5">The maker of ChatGPT had made progress on Q*, which some internally believe could be a breakthrough in the startup's search for superintelligence, also known as artificial general intelligence (AGI), one of the people told Reuters. OpenAI defines AGI as AI systems that are smarter than humans.</p><p data-testid="paragraph-6">Given vast computing resources, the new model was able to solve certain mathematical problems, the person said on condition of anonymity because they were not authorized to speak on behalf of the company. Though only performing math on the level of grade-school students, acing such tests made researchers very optimistic about Q*’s future success, the source said.</p><p data-testid="paragraph-7">Reuters could not independently verify the capabilities of Q* claimed by the researchers.</p><p data-testid="Body">Anna Tong and Jeffrey Dastin in San Francisco and Krystal Hu in New York; Editing by Kenneth Li and Lisa Shumaker</p><p data-testid="Body">Our Standards: <a data-testid="Link" href="https://www.thomsonreuters.com/en/about-us/trust-principles.html" target="_blank" referrerpolicy="no-referrer-when-downgrade">The Thomson Reuters Trust Principles.</a></p><div><address><p data-testid="Body">Anna Tong is a correspondent for Reuters based in San Francisco, where she reports on the technology industry. She joined Reuters in 2023 after working at the San Francisco Standard as a data editor. Tong previously worked at technology startups as a product manager and at Google where she worked in user insights and helped run a call center. Tong graduated from Harvard University.
Contact:4152373211</p></address><address><p data-testid="Body">Jeffrey Dastin is a correspondent for Reuters based in San Francisco, where he reports on the technology industry and artificial intelligence. He joined Reuters in 2014, originally writing about airlines and travel from the New York bureau. Dastin graduated from Yale University with a degree in history.
He was part of a team that examined lobbying by Amazon.com around the world, for which he won a SOPA Award in 2022. </p></address><address><p data-testid="Body">Krystal reports on venture capital and startups for Reuters. She covers Silicon Valley and beyond through the lens of money and characters, with a focus on growth-stage startups, tech investments and AI. She has previously covered M&amp;A for Reuters, breaking stories on Trump's SPAC and Elon Musk's Twitter financing. Previously, she reported on Amazon for Yahoo Finance, and her investigation of the company's retail practice was cited by lawmakers in Congress. Krystal started a career in journalism by writing about tech and politics in China. She has a master's degree from New York University, and enjoys a scoop of Matcha ice cream as much as getting a scoop at work. </p></address></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tesla workers report explosions, concussions and robot injuries at Texas factory (146 pts)]]></title>
            <link>https://www.theverge.com/2023/11/21/23971138/tesla-gigafactory-austin-texas-injury-reports-robot-claw-explosion</link>
            <guid>38386118</guid>
            <pubDate>Wed, 22 Nov 2023 22:32:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/2023/11/21/23971138/tesla-gigafactory-austin-texas-injury-reports-robot-claw-explosion">https://www.theverge.com/2023/11/21/23971138/tesla-gigafactory-austin-texas-injury-reports-robot-claw-explosion</a>, See on <a href="https://news.ycombinator.com/item?id=38386118">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>As Tesla prepares to deliver its first Cybertrucks to customers, a new report paints a grisly picture of the Texas factory where the truck is being built, including a casting machine explosion and a robot allegedly goring a worker. </p><p><em>The Information</em> <a href="https://www.theinformation.com/articles/at-teslas-giant-texas-factory-injuries-and-safety-lapses-mount">reported some of the gruesome incidents</a> that have occurred at the Gigafactory in Austin, Texas, where one out of every 21 workers were reportedly hurt in 2022. The data is derived from the required injury reports Tesla submits to OSHA. </p><p>One incident in 2021 involved an engineer who approached a supposed shutdown robot arm but got clawed and pinned to the wall by the machine performing its programmed motions. A witness said the engineer bled from his back and arms, and after someone hit the emergency stop button, the engineer pulled himself out and fell into a chute, leaving a trail of blood.</p><p>An injury report submitted to Travis County, Texas, by Tesla reportedly has a robot-related incident but does not clearly match the one from witness accounts. The reported one does not state the person missed any time from work. In unrelated incidents in August 2022, a worker’s ankle got caught under a cart, which put them out of work for 127 days. Days later, another worker suffered a head injury which put them out for 85 days.</p><p>Other injury reports were more recent. At least one worker was concussed after getting launched back from an explosion in the metal casting area around New Year’s 2023. The blast was allegedly caused by water inadvertently mixing into the molten aluminum press machine. A witness who saw surveillance video said the explosion sent a ball of fire and smoke into the air, damaged the die, and curled up a door that seals the chamber. It’s not clear if Tesla reported this to OSHA, which reportedly didn't have an inspection for this incident.</p><p>Another worker claims the molding machine also didn’t correctly seal and often spat out molten metal. When a worker presented a solution to fix the issue, they were reprimanded that shutting it down would slow production output.</p><p>In June, contractors installing metal grating for elevated walkways in the factory fell to the ground due to a lack of protective equipment. Some of the metal walkway fell on top of them, leaving them with fractures and a punctured lung. OSHA inspected this incident and fined the contractors. </p><p>It’s not the only time things fell from above: <em>The Information </em>reports incidents of air conditioning ducts, steel beams, and other building materials crashing to the ground near autoworkers.</p><p>Tesla’s Fremont factory in California also has a torrid history with worker injuries. Employees there have a <a href="https://www.theverge.com/2017/5/24/15681472/tesla-model-3-electric-car-factory-injury-rate-worker-safety">higher injury rate</a> than the national average. Tesla has been accused of <a href="https://www.theverge.com/2018/11/6/18064326/tesla-factory-worker-injuries-clinic-fremont">underreporting injuries</a> and of failing to address hazards in an outdoor tent that was erected for the assembly line, incurring <a href="https://www.theverge.com/2019/1/25/18197866/tesla-fined-osha-safety-hazards-model-3-tent">fines</a>.</p><p>Tesla’s Gigafactory in Austin <a href="https://www.theverge.com/2022/4/8/23008731/tesla-texas-gigafactory-open-cybertruck-elon-musk">first opened</a> in April 2022 and was built about two years after <a href="https://www.theverge.com/2020/7/22/21334860/tesla-cybertruck-factory-austin-texas-location-model-y">its announcement in 2020</a>. Employees described the company as having <a href="https://www.theverge.com/2023/8/16/23833447/tesla-elon-musk-ultra-hardcore-employees-land-of-the-giants">an “ultra hardcore” work culture</a> that puts them through extremely long hours, unsafe working conditions, harassment,&nbsp;and more. </p><p>Tesla CEO Elon Musk historically <a href="https://www.theverge.com/2022/3/3/22959592/elon-musk-tesla-union-challenges-uaw-california-factory-vote">has opposed</a> efforts by his employees to unionize. He choose to build the Texas factory in a “right to work” state where unions have a more difficult time organizing workers. Meanwhile, Musk’s other company in Texas, SpaceX, recently <a href="https://www.theverge.com/2023/11/10/23956247/spacex-hypes-up-its-next-starship-flight-test-while-ignoring-a-report-about-workplace-injuries">ignored its workplace injuries</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How do I become a graphics programmer? (225 pts)]]></title>
            <link>https://gpuopen.com/learn/how_do_you_become_a_graphics_programmer/</link>
            <guid>38384952</guid>
            <pubDate>Wed, 22 Nov 2023 20:54:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gpuopen.com/learn/how_do_you_become_a_graphics_programmer/">https://gpuopen.com/learn/how_do_you_become_a_graphics_programmer/</a>, See on <a href="https://news.ycombinator.com/item?id=38384952">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="how-do-i-become-a-graphics-programmer-a-small-guide-from-the-amd-game-engineering-team" role="main" data-id="3cfd864" data-element_type="widget" data-widget_type="theme-post-content.default">
<h2>Introduction</h2>
<p>Every now and then we get asked what a beginner-friendly website is for learning graphics programming. We’d love to recommend GPUOpen of course, but the truth is, the main target audience for GPUOpen is intermediate or advanced graphics programmers. For someone who just started to dive into the world of graphics, there are surely other websites more suitable for them.</p>
<p>As with so many things, there is no one right way to get into graphics. It mostly depends on potential pre-existing knowledge, how you like to learn, personal preference, available hardware, etc. Hence, this guide is more a collection of websites that we think are useful for beginners, and a small discussion weighing the pro and cons of the websites and what they teach.</p>
<section id="which-programming-language">
<h2 id="which-programming-language?">Which programming language?</h2>
<p>When we talk to students about our job, one of the questions we almost always get is: which programming language do you use? The short answer is: C++.</p>
<p>The long answer is … well, if you do graphics, you write code for the host CPU, usually in C++, but you also write code for the GPU in what the industry has come to call shader code, typically in a high-level shading language such as HLSL or GLSL. You also need a way to tie them both together, asking the CPU to ask the GPU to do something useful using shaders and the other data and metadata needed to make that happen. That’s where the graphics application programming interfaces (APIs) come in, which you drive usually as host CPU code written in C++.</p>
<p>So the more controversial question is: which graphics API you should start with. And we don’t have an answer for you, just a bunch of different opinions and considerations. We’ll narrow in on the common graphics APIs used to write most PC games or 3D applications at this point, ignoring things like games consoles with their (mostly) proprietary APIs.</p>
<p>There are different graphics APIs out there, but in 2023 it essentially boils down to:</p>
<ul>
<li>OpenGL® / Microsoft® DirectX®11 / WebGL™</li>
<li>Vulkan® / Microsoft® DirectX®12 / Metal / WebGPU</li>
</ul>
<p>OpenGL®, DirectX®11 and WebGL™ are legacy APIs. They’re based on a historical approach to programming the GPU. Nonetheless, they are still widely used across academia and industry since they’re simpler from the programmer’s perspective and thus easier to learn. Their simplicity comes at a cost however, since the underlying implementation of those APIs in any driver and runtime code became more complex over time, causing host-side bottlenecks and very complicated drivers for GPU vendors to write.</p>
<p>In 2014-2016 things changed with the introduction of Metal (2014), DirectX®12 and Vulkan® (both 2016), which all took a lower-level and more explicit approach to programming the GPU. They put a higher burden on the programmer being more clear and explicit about what they’d like the GPU to do, giving the programmer more control.</p>
<p>It effectively moves more of the traditional view of what a GPU driver is into the application. The tradeoff is more control for the programmer, and thus the opportunity for more performance and efficiency in what happens on the GPU.</p>
<p>Knowing how the GPU programming paradigm shifted, the decision about what API to pick might seem easy. If you want to learn graphics programming on Windows®, which is the primary target for PC games, then the instinct will be to pick Vulkan® or DirectX®12, as this is the new stuff, right?</p>
<p>However, not only are the legacy APIs still widely used, they are much simpler and easier to learn. So it might make sense to first learn the legacy APIs, and then later on move to the modern graphics APIs. Instead of immediately climbing Mount Everest, you first train at your local hill.</p>
<p>A simple comparison is how many lines of code are needed to draw a triangle on the screen, which is the “Hello, World!” equivalent in graphics programming. While OpenGL® or DirectX®11 need about 10 lines of code to get to the first triangle, Vulkan® and DirectX®12 require at least an order of magnitude more.</p>
<p>So, on the other hand, you can also say that Vulkan® and DirectX®12 require you to do more hand-holding for the GPU. You need 100 lines of code, but each line is clearer about what eventually happens on the GPU. While with OpenGL® and DirectX®11 a lot of the things are hidden and taken care for you, it’s easier for it to appear like a magic box and the few things you need to do might not make much sense in terms of understanding how the GPU works.</p>
<p>Vulkan® and DirectX®12 force you to deal with and gain that lower-level knowledge and understand early on, while OpenGL® and DirectX®11 act on a higher level and let you focus with the more productive aspects of graphics programming.</p>
<p>Let’s see what the AMD Game Engineering team have to say about whether one should start with a legacy API or with a modern API:</p>
<p><em>“Starting by learning graphics programming with DX12® or Vulkan® as a teenager would be rough.”</em></p>
<p><em>“We’re a long way away from the ol’ glVertex hello triangle.”</em></p>
<p><em>“Shame that OpenGL® is no longer super relevant tho.”</em></p>
<p><em>“I think it (OpenGL®) is still good enough to learn the basics imho.”</em></p>
<p><em>“I started out with DX10® which I think is not bad, but a lot of kids struggle with it if they are not proficient in C++.”</em> – DX10® is the predecessor of DX11® and outdated – don’t learn DX10®!</p>
<p><em>“But there are many things in play. Learning the theory of rasterisation and ray tracing. Learning the traditional pipeline. Learning how to feed a GPU work etc… I don’t know in what order they should be learnt but I’m usually all-in C++ (there is no need to start in another language) so I should probably say just start with Vulkan®… but I’m not really sure to be honest.”</em></p>
<p>And of course, there is also the possibility to learn graphics programming without OpenGL® and DirectX®11 or Vulkan® and DirectX®12. We mentioned WebGL™ and WebGPU in the broad classes of graphics APIs that are available, both of which operate in the web browser domain which is a whole software ecosystem (and arguably a full operating system) in its own right.</p>
<p>You can do real-time graphics in the web browser via WebGL™ or WebGPU too! One advantage is that you don’t need C++ for the web (but can technically still use it to drive graphics in the browser with something like WebAssembly). In the browser, the dominant programming language of JavaScript is fine!</p>
<p>Or, if you want to focus on higher-level stuff first and not bother with the lower-level details of a graphics API and hand-authoring shaders, maybe even a game engine is the right choice for you. <a href="https://gpuopen.com/unreal-engine/" target="_blank" rel="noopener">Unreal Engine</a> is the biggest for PC games, with <a href="https://unity.com/" target="_blank" rel="noopener">Unity®</a> the most common alternative, along with a boatload of smaller, simpler, open-source engines like <a href="https://godotengine.org/" target="_blank" rel="noopener">Godot</a> to play with too.</p>
<p>Here’s some opinions from our AMD Game Engineering team:</p>
<p><em>“IMHO, getting newcomers to start out with DX12® or Vulkan® is rough, but maybe doable. I would say that starting out with WebGL™ just to understand the graphics pipeline is probably the easiest (and you focus on the right stuff).”</em></p>
<p><em>“WebGPU might give you concepts closer to modern graphics APIs without the extra low-level details.”</em></p>
<p><em>“WebGPU will probably get a lot better but right now I think you can expect a lot of kinks once you start writing nontrivial code. Still, it was very cool and it worked surprisingly well. I sincerely hope it gets better, but what exists right now is super promising. For prototyping stuff this is crazy good. And yeah, it would probably make a good API for learning / teaching too.”</em></p>
<p><em>“I know a few schools use Unity® for their first rendering courses which probably isn’t half bad, but there is a risk those students will never understand why they need to learn the lower-level stuff…”</em></p>
<p><em>“Starting with an explicit API is fine if you have a good handle on the modern graphics pipeline and the high-level of how GPU hardware implements it, or you want to pick up that GPU hardware understanding along the way. Otherwise start with something simpler to get going and then look at an explicit API later if you need or want to.”</em></p>
<p><em>“Personally, I feel that maybe acclimating to shaders through a popular game engine before moving to writing custom host code might be a good way of getting into it. It’s very hard to learn if you don’t have a clear view of what you want to achieve in a graphics API, otherwise you might just quit when you get to the triangle.”</em></p>
</section>
<section id="useful-websites">
<h2 id="useful-websites">Useful websites</h2>
<p>So what do we recommend in terms of learning resources? These are some of the websites suggested by members of the AMD Game Engineering team:</p>
<ul>
<li><a href="https://learnopengl.com/" target="_blank" rel="noopener">https://learnopengl.com</a> – “LearnOpenGL is the best beginner site I can think of that shows you how to actually do this stuff with a real API in C++.”</li>
<li><a href="https://www.scratchapixel.com/" target="_blank" rel="noopener">https://www.scratchapixel.com</a> – “What makes scratch a pixel nice is that you don’t end up with a ton of code. You focus on learning how RT works for example.”</li>
<li><a href="https://www.udemy.com/" target="_blank" rel="noopener">https://www.udemy.com/</a> – “Udemy is a good place for courses to get people started.”</li>
<li><a href="https://rastertek.com/tutindex.html" target="_blank" rel="noopener">https://rastertek.com/tutindex.html</a> – OpenGL®/DirectX®11 tutorial</li>
<li><a href="https://github.com/RayTracing/raytracing.github.io" target="_blank" rel="noopener">https://github.com/RayTracing/raytracing.github.io</a> : Ray Tracing in one weekend – “I like hands on approaches to learning, so Ray Tracing in a weekend is nice if you can code a little.”</li>
<li><a href="https://fgiesen.wordpress.com/2011/07/09/a-trip-through-the-graphics-pipeline-2011-index/" target="_blank" rel="noopener">https://fgiesen.wordpress.com/2011/07/09/a-trip-through-the-graphics-pipeline-2011-index/</a> – “A trip through the graphics pipeline from the GPU’s perspective. It’s from 2011, so it pre-dates the explicit APIs, but lots of the hardware and software concepts still apply.”</li>
<li><a href="https://sotrh.github.io/learn-wgpu/" target="_blank" rel="noopener">https://sotrh.github.io/learn-wgpu/</a> – “There is a “learn webgpu” site in the same style as learnopengl, but very wip.”</li>
<li><a href="https://codelabs.developers.google.com/your-first-webgpu-app" target="_blank" rel="noopener">https://codelabs.developers.google.com/your-first-webgpu-app</a> – “I haven’t fully read it, but this is decent.”</li>
<li><a href="https://www.shadertoy.com/" target="_blank" rel="noopener">https://www.shadertoy.com/</a> – “Shadertoy lets you write shaders without the need to deal with any graphics API. I would never have gotten interested in graphics enough to want to learn OpenGL® if I hadn’t started out in something simpler (for me it was just direct painting on a java canvas).”</li>
<li><a href="https://vulkan-tutorial.com/" target="_blank" rel="noopener">https://vulkan-tutorial.com/</a> – “I also feel it’s important for people not to be afraid of copy-paste especially with Vulkan® and DirectX®.”</li>
</ul>
</section>
<section id="summary">
<h2 id="summary">Summary</h2>
<p>So what now? If you haven’t made a decision by now about what programming language and graphics API ecosystem to start with, don’t worry. You can try out different approaches and then stick with the one that works for you best.</p>
<p>We’d also be very happy to hear your thoughts! How did you learn graphics programming? What can you recommend to fellow graphics programmers just getting started? We would love to add your contributions to this blog post to make it an even more useful starting point.</p>
<p>Please feel free to share your thoughts with us via Twitter/X either on <a href="https://twitter.com/GPUOpen/status/1727387476153847979" target="_blank" rel="noopener">this X thread</a>, or you can DM us at <a href="https://twitter.com/gpuopen/" target="_blank" rel="noopener">@GPUOpen</a> too. You can also reach us on <a href="https://mastodon.gamedev.place/@gpuopen" target="_blank" rel="noopener">Mastodon</a> via DM or <a href="https://mastodon.gamedev.place/@gpuopen/111455555950683906" target="_blank" rel="noopener">this Mastodon thread</a>. If we use your contribution, we’ll reach out to confirm via DM that it’s okay to use the relevant social media handle in this blog.</p>
<p>Looking forward to hearing from you!</p>
<p><em>Links to third party sites are provided for convenience and unless explicitly stated, AMD is not responsible for the contents of such linked sites and no endorsement is implied. GD-5</em></p>
</section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fast self-hostable open-source workflow engine (284 pts)]]></title>
            <link>https://www.windmill.dev/blog/launch-week-1/fastest-workflow-engine</link>
            <guid>38383138</guid>
            <pubDate>Wed, 22 Nov 2023 18:33:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.windmill.dev/blog/launch-week-1/fastest-workflow-engine">https://www.windmill.dev/blog/launch-week-1/fastest-workflow-engine</a>, See on <a href="https://news.ycombinator.com/item?id=38383138">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[All design and engineering of the original Tesla Roadster is now open source (147 pts)]]></title>
            <link>https://twitter.com/elonmusk/status/1727392569238159491</link>
            <guid>38383099</guid>
            <pubDate>Wed, 22 Nov 2023 18:31:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/elonmusk/status/1727392569238159491">https://twitter.com/elonmusk/status/1727392569238159491</a>, See on <a href="https://news.ycombinator.com/item?id=38383099">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="ScriptLoadFailure"><form action="" method="GET"><div><p><span>Something went wrong, but don’t fret — let’s give it another shot.</span></p><br></div></form></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Big Pharma gave $9M to dark money groups to fight drug pricing reform (103 pts)]]></title>
            <link>https://arstechnica.com/health/2023/11/big-pharma-gave-9m-to-dark-money-groups-to-fight-drug-pricing-reform/</link>
            <guid>38382485</guid>
            <pubDate>Wed, 22 Nov 2023 17:50:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/health/2023/11/big-pharma-gave-9m-to-dark-money-groups-to-fight-drug-pricing-reform/">https://arstechnica.com/health/2023/11/big-pharma-gave-9m-to-dark-money-groups-to-fight-drug-pricing-reform/</a>, See on <a href="https://news.ycombinator.com/item?id=38382485">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <h4>
      Shame    —
</h4>
            
            <h2 itemprop="description">Dark money group American Action Network spend millions opposing drug pricing reforms.</h2>
                    </div><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2018/09/GettyImages-520882250-800x533.jpg" alt="High angle close-up view still life of an opened prescription bottles with pills and medication spilling onto ae background of money, U.S. currency with Lincoln Portrait.">
      <figcaption></figcaption>  </figure>

  




<!-- cache hit 85:single/related:536770ff06ccc00ae6830630cba6ca5c --><!-- empty -->
<p>In August, the Department of Health and Human Services announced <a href="https://arstechnica.com/health/2023/08/the-10-drugs-up-for-medicare-price-negotiation-have-seen-steep-price-hikes/">10 drugs selected for the first round of Medicare price negotiations</a>—a landmark effort established by the 2022 Inflation Reduction Act to try to drag down the country's uniquely astronomical prescription drug prices.</p>
<p>Pharmaceutical companies publicly balked—and also sued—then <a href="https://arstechnica.com/health/2023/09/big-pharma-companies-agree-to-federal-price-negotiations-under-protest/">eventually came to the table</a>. But it was far from their first protest of the Democrat-led effort to reform drug pricing in the US, which pays <a href="https://www.healthsystemtracker.org/chart-collection/how-do-prescription-drug-costs-in-the-united-states-compare-to-other-countries/#Per%20capita%20prescribed%20medicine%20spending,%20U.S.%20dollars,%202004-2019">far more for prescription drugs than other high-income countries</a>.
</p><p>In 2022, the pharmaceutical industry's top lobbying group, PhRMA, gave a record $7.5 million to the GOP-linked dark money group, American Action Network (AAN), which spent millions on advertising that year opposing drug pricing reforms, some of which made it into the Inflation Reduction Act.</p>
<p><a href="https://issueone.org/press/phrma-contributed-record-sum-to-gop-aligned-dark-money-group-in-2022-new-tax-filing-reviewed-by-issue-one-shows/">The revelation was announced by Issue One</a>, a campaign finance reform advocacy group that reviewed federal tax filings. Issue One also highlighted that the $7.5 million donation was the largest donation to date that PhRMA has given AAN.</p>                                            
                                                        
<p>From 2010 to 2022, PhRMA has given the dark money group more than $34.5 million. In 2016, PhRMA gave $6.1 million to AAN as it <a href="https://www.nytimes.com/2018/07/27/business/the-stealth-campaign-to-kill-off-obamacare.html">stealthily backed an aggressive Republican effort to try to repeal the Affordable Care Act</a>, which was ultimately unsuccessful.</p>
<p>"Public policymaking should be done on behalf of the public’s interest, and the forces involved in policymaking should be operating in daylight, not darkness," Issue One CEO Nick Penniman said in the announcement. "Unfortunately, our findings suggest that neither is true when it comes to the pharmaceutical industry. That’s a shame for public health, for government spending, and for Americans who can’t afford the drugs they need."</p>
<p>Dark money groups like AAN are politically active groups that are not required to reveal their donors publicly. But, certain donors—including PhRMA—are required to report their contributions as expenditures on tax filings. Issue One obtained <a href="https://www.documentcloud.org/documents/24172399-phrma-2022-irs-form-990">an annual tax filing</a> PhRMA submitted to the IRS last week.</p>
<p>Politico also reported that <a href="https://www.politico.com/newsletters/politico-influence/2023/11/21/phrma-gave-big-to-dark-money-groups-boosting-drug-pricing-critics-00128360">PhRMA gave $1.6 million in 2022 to the centrist dark money group Center Forward</a>, which funneled money to Democratic lawmakers who hampered the party's drug pricing reform efforts.</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[It's never been a better time to switch to Firefox (193 pts)]]></title>
            <link>https://www.androidpolice.com/never-been-better-time-switch-firefox-browser/</link>
            <guid>38381918</guid>
            <pubDate>Wed, 22 Nov 2023 17:10:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.androidpolice.com/never-been-better-time-switch-firefox-browser/">https://www.androidpolice.com/never-been-better-time-switch-firefox-browser/</a>, See on <a href="https://news.ycombinator.com/item?id=38381918">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                                                       <div>
                    


        

            <nav>
            <ul>
                <li><a href="https://www.androidpolice.com/">Home</a></li>
                                                                            <li><a href="https://www.androidpolice.com/apps/">Applications</a></li>
                                                                                                                                </ul>
        </nav>
    
                </div>
                            

    
            
    
        
            
    
    
    
        
    
                            






            
            

    
    
        
    
            
    
            
    
        
            
    
    
    
        
    
                                
    <p>The mobile browser is about to get a massive update that could see it gain traction over Chrome</p>

            
            

    
    
        
    
            
    
            
    
        
            
    
    
    
        
    
                                
                                    
                                                                                                                        
                                                <div data-img-url="https://static1.anpoimages.com/wordpress/wp-content/uploads/2022/09/firefox-ap-hero.jpg" data-modal-id="single-image-modal" data-modal-container-id="single-image-modal-container" data-img-caption="&quot;&quot;">

        <figure>
            <picture>
                <!--[if IE 9]>
                <video style="display: none;"><![endif]-->
                                    <source media="(min-width: 1024px)" sizes="1140px" srcset="https://static1.anpoimages.com/wordpress/wp-content/uploads/2022/09/firefox-ap-hero.jpg?q=50&amp;fit=contain&amp;w=1140&amp;h=&amp;dpr=1.5">
                                    <source media="(min-width: 768px)" sizes="943px" srcset="https://static1.anpoimages.com/wordpress/wp-content/uploads/2022/09/firefox-ap-hero.jpg?q=50&amp;fit=contain&amp;w=943&amp;h=&amp;dpr=1.5">
                                    <source media="(min-width: 481px)" sizes="767px" srcset="https://static1.anpoimages.com/wordpress/wp-content/uploads/2022/09/firefox-ap-hero.jpg?q=50&amp;fit=contain&amp;w=767&amp;h=&amp;dpr=1.5">
                                    <source media="(min-width: 0px)" sizes="480px" srcset="https://static1.anpoimages.com/wordpress/wp-content/uploads/2022/09/firefox-ap-hero.jpg?q=50&amp;fit=contain&amp;w=480&amp;h=&amp;dpr=1.5">
                                <!--[if IE 9]></video><![endif]-->
                                    <img width="1920" height="1080" alt="firefox-ap-hero" data-img-url="https://static1.anpoimages.com/wordpress/wp-content/uploads/2022/09/firefox-ap-hero.jpg" src="https://static1.anpoimages.com/wordpress/wp-content/uploads/2022/09/firefox-ap-hero.jpg">
                            </picture>
            <figcaption></figcaption>
        </figure>
    </div>

    
            <!-- No winning ad found for zone: below main pic! -->
    
            
            

    
    
        
    
            
                    </div><div id="article-body" itemprop="articleBody">
<p>Chrome has been the dominant web browser for PC and mobile for some time now. Chrome is everywhere, to the point a huge selection of <a href="https://www.androidpolice.com/best-android-web-browser/">the best mobile browsers</a> are Chromium-based (Google's open-sourced version of Chrome), and just because <a href="https://www.statista.com/chart/10402/worldwide-browser-market-share-by-platform/" rel="noopener noreferrer" target="_blank">Chrome has been the leading choice for Android and desktop users</a>, it doesn't mean it's necessarily the best browser out there.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":0,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":0,"nbrPlacementsScanned":0,"ruleCount":10,"degradationStartingPoint":2,"actualCount":375} -->
<!-- Zone: below first paragraph. -->
<!-- No ads allowed! -->
<!-- No winning ad found for zone: mid intro! -->
<p><a href="https://www.makeuseof.com/tag/chrome-using-much-ram-fix-right-now/" rel="noopener noreferrer" target="_blank">Chrome is known as a system hog</a> on your CPU and RAM, but unfortunately, Firefox also adds stress to your system resources. But when it comes to the best privacy and security and a cleaner browsing experience, Firefox reigns supreme over the majority of Chromium implementations.</p>
<!-- Repeatable debug data: {"injection":"before","adPosition":0,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":0,"nbrPlacementsScanned":1,"ruleCount":10,"degradationStartingPoint":2,"actualCount":278} --><!-- Zone: character count repeatable. --><!-- No ads allowed! --><!-- Repeatable debug data: {"injection":"after","adPosition":1,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":1,"nbrPlacementsScanned":1,"ruleCount":10,"degradationStartingPoint":2,"actualCount":0} -->
<p>But the final push to start using Firefox over Chrome might finally be thanks to the <a href="https://www.androidpolice.com/firefox-mozilla-extensions-android-mobile/">enormous selection of add-ons</a> (Firefox's version of extensions) coming out next month. Chrome doesn't offer native support for extensions in its mobile app. This is where Mozilla can finally regain ground over Google, especially now that Google is so insistent on serving ads everywhere, <a href="https://www.androidpolice.com/youtube-ads-european-union-law-google-meta/">like YouTube and its current security concerns</a>.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":1,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":1,"nbrPlacementsScanned":2,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":428} -->
<!-- No winning ad found for zone: native in content! -->
<h2 id="firefox-wins-the-battle-for-best-user-privacy-and-security"> Firefox wins the battle for best user privacy and security </h2>
<p>As a non-profit project, <a href="https://www.mozilla.org/en-US/privacy/" rel="noopener noreferrer" target="_blank">Mozilla is committed to transparency and user privacy</a> through an open-source model. The advantage of running an open-source project is that the entire community can contribute to making the web a better place, plus the code is public, which means anyone can audit it.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":1,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":1,"nbrPlacementsScanned":2,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":720} -->
<p>Firefox also protects your privacy with its <a href="https://support.mozilla.org/en-US/kb/enhanced-tracking-protection-firefox-desktop" rel="noopener noreferrer" target="_blank">Enhanced Tracking Protection</a>. While Google has been <a href="https://www.androidpolice.com/google-chrome-120/">taking its sweet time phasing out cookies</a>, Mozilla has been making progress with <a href="https://www.androidpolice.com/mozilla-total-cookie-protection-default-firefox/" rel="noopener noreferrer" target="_blank">Total Cookie Protection (TCP) since 2021</a>, and it's on by default. With extra add-ons coming to Firefox, installing your favorite extensions for privacy and security will only get easier.</p>
<!-- Repeatable debug data: {"injection":"before","adPosition":1,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":1,"nbrPlacementsScanned":2,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":1087} --><!-- Zone: character count repeatable. --><!-- No ads allowed! --><!-- Repeatable debug data: {"injection":"after","adPosition":2,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":2,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":0} -->

<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":2,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":240} -->

<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":2,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":240} -->
<h2 id="installing-add-ons-on-firefox-is-only-going-to-get-better"> Installing add-ons on Firefox is only going to get better </h2>
<p>The <a href="https://www.androidpolice.com/how-to-open-chrome-web-store/">Chrome Web Store</a> has plenty of extensions to improve your Chrome browsing. These extensions can help you block ads, manage passwords, and provide anti-malware tools to make internet browsing safe and more secure. Only trusted Chrome extensions make it to the Chrome Web Store. But sadly, Google doesn't extend these benefits to its mobile browser. And if you can't live without your extensions, you'd have to settle with third-party extensions on Chromium-based web browsers instead, moving you away from Chrome.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":2,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":768} -->
<p>So far, <a href="https://www.androidpolice.com/install-add-on-extension-mozilla-firefox-android/">Mozilla offers only a few select add-ons</a> (Mozilla's version of extensions) that work on Android, one of which is uBlock Origin (proving itself incredibly helpful as YouTube wages war against adblockers). But soon, Mozilla <a href="https://www.androidpolice.com/firefox-mozilla-extensions-android-mobile/">will launch 200 new add-ons in Firefox 120</a>. That's a whopping 200 more than Google, bringing Firefox Mobile much closer to its Desktop sibling, something Google appears deadset against with Chrome on mobile.</p>
<!-- Repeatable debug data: {"injection":"before","adPosition":2,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":2,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":1213} --><!-- Zone: character count repeatable. --><!-- No ads allowed! --><!-- Repeatable debug data: {"injection":"after","adPosition":3,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":3,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":0} -->

<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":3,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":4,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":240} -->

<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":3,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":4,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":240} -->
<h2 id="add-ons-ensure-firefox-brings-a-competitive-edge-to-mobile"> Add-ons ensure Firefox brings a competitive edge to mobile </h2>
<p>When using Firefox, once you plug in a few helpful add-ons, you don't have to worry about sifting through tons of ads, auto-playing videos, and pop-ups. The uBlock Origin plugin can take care of these things, and if it doesn't, you can manually tell it to. And that's just one add-on. Imagine what 200 will bring to the table. Browsing the web on mobile can be just as clutter-free as web browsing on a computer. And since we often prefer to jump into a news story as quickly as possible on our mobile devices, thanks to Firefox's use of add-ons, background clutter and every other annoyance filling our tiny screens may soon be a thing of the past.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":3,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":4,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":905} -->

<!-- Repeatable debug data: {"injection":"before","adPosition":3,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":3,"nbrPlacementsScanned":4,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":1145} --><!-- Zone: character count repeatable. --><!-- No ads allowed! --><!-- Repeatable debug data: {"injection":"after","adPosition":4,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":4,"nbrPlacementsScanned":4,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":0} -->
<p>It's no secret Google loves ads; <a href="https://www.statista.com/statistics/266249/advertising-revenue-of-google/" target="_blank">Google generates billions of dollars from ads alone</a>. And so the vast majority of sites you read follow suit, requiring ads to keep their livelihoods in check as the pay rate continues to fall. Unfortunately, based on how important ads have become for generating revenue, there will never be a shortage of ads online.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":4,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":4,"nbrPlacementsScanned":5,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":353} -->
<p>But in a world of ads, ads can still exist without being intrusive. Google doesn't care which ads you see until you use filters. We also know <a href="https://www.bleepingcomputer.com/news/security/hackers-abuse-google-ads-to-spread-malware-in-legit-software/" rel="noopener noreferrer" target="_blank">Google can serve ads that are used for nefarious purposes</a>, which is <a href="https://www.ic3.gov/Media/Y2022/PSA221221?=8324278624" rel="noopener noreferrer" target="_blank">why the FBI recommends using an ad blocker when online</a>. And thanks to how lucrative ads have become for Google, the company will more than likely never budge on its stance to bring extension support to mobile, as <a href="https://www.statista.com/statistics/435252/adblock-users-worldwide/" rel="noopener noreferrer" target="_blank">most users will install adblockers</a>. But with Firefox, you can already install uBlock Origin to lockdown those ads, with 200 more add-ons coming soon to bolster the experience.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":4,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":4,"nbrPlacementsScanned":5,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":955} -->

<!-- Repeatable debug data: {"injection":"before","adPosition":4,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":4,"nbrPlacementsScanned":5,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":1195} --><!-- Zone: character count repeatable. --><!-- No ads allowed! --><!-- Repeatable debug data: {"injection":"after","adPosition":5,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":5,"nbrPlacementsScanned":5,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":0} -->

<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":5,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":5,"nbrPlacementsScanned":6,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":0} -->
<h2 id="it-39-s-about-winning-the-war-not-the-battle"> It's about winning the war, not the battle </h2>
<p>Google Chrome may still be everyone's favorite browser on desktop and mobile, especially with its <a href="https://www.androidpolice.com/best-google-chrome-extensions/">impressive library of extensions</a> for desktops. Still, with <a href="https://www.androidpolice.com/firefox-mozilla-extensions-android-mobile/">Mozilla Firefox catching up to the extension and add-on</a> game and bringing its work over to Android, Firefox has more than enough fuel to make a comeback in no time flat, especially as Google wages war <a href="https://www.androidpolice.com/youtube-ads-european-union-law-google-meta/">against adblockers and its users</a>, privacy be damned. With Mozilla's recent moves ensuring Firefox takes shape as one of the most accessible web browsers around, you'd think Google would eventually pick up the pace and start making some pro-consumer moves.</p>
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":5,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":5,"nbrPlacementsScanned":6,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":625} -->
<p>But products can only improve with better competition; having another web browser that turns heads may finally force Google to up its game if Firefox really makes a splash once its new add-on supports drops. So not only is it high time to give Firefox another chance as Chrome grows stale and ad-filled, you can expect hundreds of add-ons to make the Firefox browsing experience even better <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/120" rel="noopener noreferrer" target="_blank">on November 21st</a>.</p>
<!-- Repeatable debug data: {"injection":"before","adPosition":5,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":5,"nbrPlacementsScanned":6,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":1033} --><!-- Zone: character count repeatable. --><!-- No ads allowed! --><!-- Repeatable debug data: {"injection":"after","adPosition":6,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":6,"nbrPlacementsScanned":6,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":0} -->
 
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":6,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":6,"nbrPlacementsScanned":7,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":1} -->


<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":6,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":6,"nbrPlacementsScanned":7,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":241} -->
 
<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":6,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":6,"nbrPlacementsScanned":7,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":242} -->


<!-- No repeatable ad for zone: character count repeatable. --><!-- Repeatable debug data: {"injection":"none","adPosition":6,"startingPoint":1,"skipEvery":null,"nbrPlacementFilledEachSkip":6,"nbrPlacementsScanned":7,"ruleCount":1000,"degradationStartingPoint":2,"actualCount":482} --></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Reflecting on 18 Years at Google (1599 pts)]]></title>
            <link>https://ln.hixie.ch/?start=1700627373&amp;count=1</link>
            <guid>38381573</guid>
            <pubDate>Wed, 22 Nov 2023 16:44:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ln.hixie.ch/?start=1700627373&#x26;count=1">https://ln.hixie.ch/?start=1700627373&#x26;count=1</a>, See on <a href="https://news.ycombinator.com/item?id=38381573">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
   <h3 title="48631">
    <a href="https://ln.hixie.ch/?start=1700627373&amp;count=1" rel="bookmark">2023-11-22 04:29 UTC</a>
    Reflecting on 18 years at Google
   </h3>
<p>I joined Google in October 2005, and handed in my resignation 18 years later. Last week was my last week at Google.</p>

<p>I feel very lucky to have experienced the early post-IPO Google; unlike most companies, and contrary to the popular narrative, Googlers, from the junior engineer all the way to the C-suite, were genuinely good people who cared very much about doing the right thing. The oft-mocked "<a href="https://en.wikipedia.org/wiki/Don%27t_be_evil">don't be evil</a>" truly was the guiding principle of the company at the time (largely a reaction to contemporaries like Microsoft whose operating procedures put profits far above the best interests of customers and humanity as a whole).</p>

<p>Many times I saw Google criticised for actions that were sincerely intended to be good for society. <a href="https://en.wikipedia.org/wiki/Authors_Guild,_Inc._v._Google,_Inc.">Google Books</a>, for example. Much of the criticism Google received around Chrome and Search, especially around supposed conflicts of interest with Ads, was way off base (it's surprising how often coincidences and mistakes can appear malicious). I often saw privacy advocates argue against Google proposals in ways that were net harmful to users. Some of these fights have had lasting effects on the world at large; one of the most annoying is the prevalence of pointless cookie warnings we have to wade through today. I found it quite frustrating how teams would be legitimately actively pursuing ideas that would be good for the world, without prioritising short-term Google interests, only to be met with cynicism in the court of public opinion.</p>

<p>
<img src="https://ln.hixie.ch/media/photos/california/2011/google_campus_2011-04-11_edited_to_remove_people-small.jpeg" alt="[Photograph]">
Charlie's patio at Google, 2011. Image has been manipulated to remove individuals.
</p>

<p>Early Google was also an excellent place to work. Executives gave frank answers on a weekly basis, or were candid about their inability to do so (e.g. for legal reasons or because some topic was too sensitive to discuss broadly). Eric Schmidt regularly walked the whole company through the discussions of the board. The successes and failures of various products were presented more or less objectively, with successes celebrated and failures examined critically with an eye to learning lessons rather than assigning blame. The company had a vision, and deviations from that vision were explained. Having experienced <a href="https://en.wikipedia.org/wiki/List_of_Dilbert_characters#Pointy-haired_Boss">Dilbert-level management</a> during my internship at Netscape five years earlier, the uniform competence of people at Google was very refreshing.</p>

<p>For my first nine years at Google I worked on <a href="https://whatwg.org/">HTML and related standards</a>. My mandate was to do the best thing for the web, as whatever was good for the web would be good for Google (I was explicitly told to ignore Google's interests). This was a continuation of the work I started while at Opera Software. Google was an excellent host for this effort. My team was nominally the open source team at Google, but I was entirely autonomous (for which I owe thanks to Chris DiBona). Most of my work was done on a laptop from random buildings on Google's campus; entire years went by where I didn't use my assigned desk.</p>

<p>In time, exceptions to Google's cultural strengths developed. For example, as much as I enjoyed Vic Gundotra's enthusiasm (and his initial vision for Google+, which again was quite well defined and, if not necessarily uniformly appreciated, at least unambiguous), I felt less confident in his ability to give clear answers when things were not going as well as hoped. He also started introducing silos to Google (e.g. locking down certain buildings to just the Google+ team), a distinct departure from the complete internal transparency of early Google. Another example is the Android team (originally an acquisition), who never really fully acclimated to Google's culture. Android's work/life balance was unhealthy, the team was not as transparent as older parts of Google, and the team focused on chasing the competition more than solving real problems for users.</p>

<p>My last nine years were spent on Flutter. Some of my fondest memories of my time at Google are of the early days of this effort. Flutter was one of the last projects to come out of the old Google, part of a stable of ambitious experiments started by Larry Page shortly before the creation of Alphabet. We essentially operated like a startup, <em>discovering</em> what we were building more than designing it. The Flutter team was very much built out of the culture of young Google; for example we prioritised internal transparency, work/life balance, and data-driven decision making (greatly helped by Tao Dong and his UXR team). We were radically open from the beginning, which made it easy for us to build a healthy open source project around the effort as well. Flutter was also very lucky to have excellent leadership throughout the years, such as Adam Barth as founding tech lead, Tim Sneath as PM, and Todd Volkert as engineering manager.</p>

<p>
<img src="https://ln.hixie.ch/media/photos/california/2015/flutter_design_document-2015-05-06-small.jpeg" alt="[Photograph]">
We also didn't follow engineering best practices for the first few years. For example we wrote no tests and had precious little documentation. This whiteboard is what passed for a design doc for the core Widget, RenderObject, and dart:ui layers. This allowed us to move fast at first, but we paid for it later.</p>

<p>Flutter grew in a bubble, largely insulated from the changes Google was experiencing at the same time. Google's culture eroded. Decisions went from being made for the benefit of users, to the benefit of Google, to the benefit of whoever was making the decision. Transparency evaporated. Where previously I would eagerly attend every company-wide meeting to learn what was happening, I found myself now able to predict the answers executives would give word for word. Today, I don't know anyone at Google who could explain what Google's vision is. Morale is at an all-time low. If you talk to therapists in the bay area, they will tell you all their Google clients are unhappy with Google.</p>

<p>Then Google had layoffs. The layoffs were an unforced error driven by a short-sighted drive to ensure the stock price would keep growing quarter-to-quarter, instead of following Google's erstwhile strategy of prioritising long-term success even if that led to short-term losses (the very essence of "don't be evil"). The effects of layoffs are insidious. Whereas before people might focus on the user, or at least their company, trusting that doing the right thing will eventually be rewarded even if it's not strictly part of their assigned duties, after a layoff people can no longer trust that their company has their back, and they dramatically dial back any risk-taking. Responsibilities are guarded jealously. Knowledge is hoarded, because making oneself irreplaceable is the only lever one has to protect oneself from future layoffs. I see all of this at Google now. The lack of trust in management is reflected by management no longer showing trust in the employees either, in the form of inane corporate policies. In 2004, Google's founders <a href="https://abc.xyz/investor/founders-letters/ipo-letter/">famously told Wall Street</a> "Google is not a conventional company. We do not intend to become one." but that Google is no more.</p>

<p>Much of these problems with Google today stem from a lack of visionary leadership from Sundar Pichai, and his clear lack of interest in maintaining the cultural norms of early Google. A symptom of this is the spreading contingent of inept middle management. Take Jeanine Banks, for example, who manages the department that somewhat arbitrarily contains (among other things) Flutter, Dart, Go, and Firebase. Her department nominally has a strategy, but I couldn't leak it if I wanted to; I literally could never figure out what any part of it meant, even after years of hearing her describe it. Her understanding of what her teams are doing is minimal at best; she frequently makes requests that are completely incoherent and inapplicable. She treats engineers as commodities in a way that is dehumanising, reassigning people against their will in ways that have no relationship to their skill set. She is completely unable to receive constructive feedback (as in, she literally doesn't even acknowledge it). I hear other teams (who have leaders more politically savvy than I) have learned how to "handle" her to keep her off their backs, feeding her just the right information at the right time. Having seen Google at its best, I find this new reality depressing.</p>

<p>There are still great people at Google. I've had the privilege to work with amazing people on the Flutter team such as JaYoung Lee, Kate Lovett, Kevin Chisholm, Zoey Fan, Dan Field, and dozens more (sorry folks, I know I should just name all of you but there's too many!). In recent years I started offering career advice to anyone at Google and through that met many great folks from around the company. It's definitely not too late to heal Google. It would require some shake-up at the top of the company, moving the centre of power from the CFO's office back to someone with a clear long-term vision for how to use Google's extensive resources to deliver value to users. I still believe there's lots of mileage to be had from Google's mission statement (<q lang="en-US">to organize the world’s information and make it universally accessible and useful</q>). Someone who wanted to lead Google into the next twenty years, maximising the good to humanity and disregarding the short-term fluctuations in stock price, could channel the skills and passion of Google into truly great achievements.</p>

<p>I do think the clock is ticking, though. The deterioration of Google's culture will eventually become irreversible, because the kinds of people whom you need to act as moral compass are the same kinds of people who don't join an organisation without a moral compass.</p>
   <!--  RDF for trackback autodiscovery:
      <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
               xmlns:dc="http://purl.org/dc/elements/1.1/"
               xmlns:tb="http://madskills.com/public/xml/rss/module/trackback/">
      <rdf:Description
          about="http://ln.hixie.ch/?start=1700627373&amp;count=1"
          dc:identifier="http://ln.hixie.ch/?start=1700627373&amp;count=1"
          dc:title="Reflecting on 18 years at Google"
          dc:date="2023-11-22T04:29:33+00:00"
          tb:ping="http://software.hixie.ch/utilities/cgi/pingback-proxy/trackback-to-pingback/http%253A%252F%252Fln.hixie.ch%252F%2Chttp%253A%252F%252Fln.hixie.ch%252F%253Fstart%253D1700627373%2526count%253D1"/>
      </rdf:RDF>
    -->
  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GitHub Renamed Me (2014) (185 pts)]]></title>
            <link>http://russbishop.net/github-renamed-me</link>
            <guid>38380344</guid>
            <pubDate>Wed, 22 Nov 2023 15:15:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://russbishop.net/github-renamed-me">http://russbishop.net/github-renamed-me</a>, See on <a href="https://news.ycombinator.com/item?id=38380344">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <p>In preparation for <a href="http://www.russbishop.net/contextlocal-t">a new post</a>, I logged in to GitHub recently. I created my account two years ago in anticipation of being able to open-source more code and I wanted to reserve my name; I had a couple of forked repos but that's it. A new baby and a wife with major back surgery will do that to you. </p>

<p>Imagine my surprise when I logged in today and found that my account had been renamed. No longer was I known as <code>github.com/rbishop</code>. Instead, I was now relegated to <code>github.com/rbishop-xx</code>. </p>

<p>How <em>curious</em>.</p>

<p>I next noticed a warning about verifying my SSH key. </p>

<p><em>"Why self, I don't remember uploading an SSH key just yet"</em></p>

<p><em>"Well self, that's because you <strong>haven't</strong>"</em></p>

<p>Now I was even more <em>curious</em>. Had my account been hacked? Had I made a mistake somewhere? That's when I checked Account Settings, Security, Security History and behold two months ago:</p>

<p><img alt="Silvrback blog image" src="https://silvrback.s3.amazonaws.com/uploads/5e13d149-5362-4336-b603-bdb6887d46f4/githubrename_large.png"></p>

<p><img alt="Silvrback blog image" src="https://silvrback.s3.amazonaws.com/uploads/e29665d2-2220-4d46-88c3-3b0cd4be4bcd/rathjenc_key_large.png"></p>

<p>Whoever this <em>rathjenc</em> character was, he had not only renamed my account but <strong>he uploaded an SSH key, thus allowing him to modify my repos at-will.</strong></p>

<p>Just who was this rathjenc fellow?</p>

<p><img alt="Silvrback blog image" src="https://silvrback.s3.amazonaws.com/uploads/c103f12c-1287-4fe3-ad03-984b35d258e5/rathjenc_large.png"></p>

<p>Now I am merely left with questions. </p>

<p><strong>Why is an official Github representative renaming accounts and modifying people's SSH keys without so much as an email to the account holder?</strong> </p>

<p>There is now a new owner of the <code>rbishop</code> name: Richard B; is he a friend of Chris? Was Chris doing his buddy a favor by kicking me off? </p>

<p>Or perhaps it's because Richard B is a member of their Developer program. Maybe people who pay more or develop Github integrations have priority on names?</p>

<p>Maybe it's just policy that you can take someone else's name if you ask <em>real nice</em> ?</p>

<p>Whatever the case, I certainly couldn't find any documentation of this forced-renaming policy on Github's website, and as we all know they're a professional organization. <a href="http://recode.net/2014/03/15/prominent-github-engineer-julie-ann-horvath-quits-claiming-gender-based-harassment/">They certainly don't have founder's non-employee wives running around intimidating employees.</a> </p>

<p>As I said earlier, how <em>curious</em>.</p>

          </div><div>
          <p><a href="http://russbishop.net/bio">Russ Bishop</a></p><p>This blog represents my own personal opinion and is not endorsed by my employer.</p>

  
  
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ZFS 2.2.1: Block Cloning disabled due to data corruption (113 pts)]]></title>
            <link>https://github.com/openzfs/zfs/releases/tag/zfs-2.2.1</link>
            <guid>38380240</guid>
            <pubDate>Wed, 22 Nov 2023 15:07:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/openzfs/zfs/releases/tag/zfs-2.2.1">https://github.com/openzfs/zfs/releases/tag/zfs-2.2.1</a>, See on <a href="https://news.ycombinator.com/item?id=38380240">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-pjax="true" data-test-selector="body-content" data-view-component="true"><h4>Supported Platforms</h4>
<ul>
<li><strong>Linux</strong>: compatible with 3.10 - 6.6 kernels</li>
<li><strong>FreeBSD</strong>: compatible with releases starting from 12.2-RELEASE</li>
</ul>
<h4>Changes</h4>
<p><strong>Note</strong>:  We recommend that anyone running zfs-2.2.0 to please update to this release.  Gentoo users have identified a block cloning bug (<a data-error-text="Failed to load title" data-id="1992751216" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15526" data-hovercard-type="issue" data-hovercard-url="/openzfs/zfs/issues/15526/hovercard" href="https://github.com/openzfs/zfs/issues/15526">#15526</a>) that can result in data corruption in zfs-2.2.0.  To workaround this, zfs-2.2.1 disables block cloning by default (see <a data-error-text="Failed to load title" data-id="1995003691" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15529" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15529/hovercard" href="https://github.com/openzfs/zfs/pull/15529">#15529</a> and <a data-hovercard-type="commit" data-hovercard-url="https://github.com/openzfs/zfs/commit/479dca51c66a731e637bd2d4f9bba01a05f9ac9f/hovercard" href="https://github.com/openzfs/zfs/commit/479dca51c66a731e637bd2d4f9bba01a05f9ac9f"><tt>479dca5</tt></a>). Users running the 2.1.x branch or older are unaffected, as block cloning is a 2.2.x-only feature.</p>
<ul>
<li>ZTS: Fix 'could not unmount datasets' on Alma 9 (<a data-error-text="Failed to load title" data-id="2000582264" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15542" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15542/hovercard" href="https://github.com/openzfs/zfs/pull/15542">#15542</a>)</li>
<li>zfs-2.2.1: Disable block cloning by default (<a data-hovercard-type="commit" data-hovercard-url="https://github.com/openzfs/zfs/commit/479dca51c66a731e637bd2d4f9bba01a05f9ac9f/hovercard" href="https://github.com/openzfs/zfs/commit/479dca51c66a731e637bd2d4f9bba01a05f9ac9f"><tt>479dca5</tt></a>)</li>
<li>Add a tunable to disable BRT support. <a data-error-text="Failed to load title" data-id="1995003691" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15529" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15529/hovercard" href="https://github.com/openzfs/zfs/pull/15529">#15529</a></li>
<li>Packaging: Auto-generate changelog during configure (<a data-error-text="Failed to load title" data-id="1994591508" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15528" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15528/hovercard" href="https://github.com/openzfs/zfs/pull/15528">#15528</a>)</li>
<li>Linux 6.6 compat: META <a data-error-text="Failed to load title" data-id="1991598268" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15520" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15520/hovercard" href="https://github.com/openzfs/zfs/pull/15520">#15520</a></li>
<li>Workaround UBSAN errors for variable arrays <a data-error-text="Failed to load title" data-id="1986649590" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15510" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15510/hovercard" href="https://github.com/openzfs/zfs/pull/15510">#15510</a></li>
<li>ZTS: Test for all known zpool feature sets <a data-error-text="Failed to load title" data-id="1983610843" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15505" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15505/hovercard" href="https://github.com/openzfs/zfs/pull/15505">#15505</a></li>
<li>Update zpool-features.7 for grub2 compatibility list updates <a data-error-text="Failed to load title" data-id="1983610843" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15505" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15505/hovercard" href="https://github.com/openzfs/zfs/pull/15505">#15505</a></li>
<li>Workaround to allow openzfs-zfs-dkms install on Ubuntu <a data-error-text="Failed to load title" data-id="1982166974" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15503" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15503/hovercard" href="https://github.com/openzfs/zfs/pull/15503">#15503</a></li>
<li>Linux: reject read/write mapping to immutable file only on VM_SHARED <a data-error-text="Failed to load title" data-id="1923216574" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15344" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15344/hovercard" href="https://github.com/openzfs/zfs/pull/15344">#15344</a></li>
<li>Fix accounting error for pending sync IO ops in zpool iostat <a data-error-text="Failed to load title" data-id="1973247539" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15478" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15478/hovercard" href="https://github.com/openzfs/zfs/pull/15478">#15478</a></li>
<li>Linux 6.6 compat: fix implicit conversion error with debug build <a data-error-text="Failed to load title" data-id="1976384996" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15489" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15489/hovercard" href="https://github.com/openzfs/zfs/pull/15489">#15489</a></li>
<li>Remove obsolete_counts from grub2 compatibility list <a data-error-text="Failed to load title" data-id="1981592919" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15499" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15499/hovercard" href="https://github.com/openzfs/zfs/pull/15499">#15499</a></li>
<li>Fix dkms installation of deb packages created with Alien. <a data-error-text="Failed to load title" data-id="1949788918" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15415" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15415/hovercard" href="https://github.com/openzfs/zfs/pull/15415">#15415</a></li>
<li>Add all read-only compatible zpool features to grub2 compatibility <a data-error-text="Failed to load title" data-id="1964930753" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15459" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15459/hovercard" href="https://github.com/openzfs/zfs/pull/15459">#15459</a></li>
<li>Unify arc_prune_async() code <a data-error-text="Failed to load title" data-id="1964159493" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15456" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15456/hovercard" href="https://github.com/openzfs/zfs/pull/15456">#15456</a></li>
<li>Tune zio buffer caches and their alignments <a data-error-text="Failed to load title" data-id="1962153479" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15452" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15452/hovercard" href="https://github.com/openzfs/zfs/pull/15452">#15452</a></li>
<li>DMU: Do not pre-read holes during write <a data-error-text="Failed to load title" data-id="1931455862" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15371" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15371/hovercard" href="https://github.com/openzfs/zfs/pull/15371">#15371</a></li>
<li>Linux 6.6 compat: fsync_bdev() has been removed in favor of sync_blockdev() <a data-error-text="Failed to load title" data-id="1891608366" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15263" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15263/hovercard" href="https://github.com/openzfs/zfs/pull/15263">#15263</a></li>
<li>Linux 6.6 compat: generic_fillattr has a new u32 request_mask added at arg2 <a data-error-text="Failed to load title" data-id="1891608366" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15263" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15263/hovercard" href="https://github.com/openzfs/zfs/pull/15263">#15263</a></li>
<li>Linux 6.6 compat: use inode_get/set_ctime*(...) <a data-error-text="Failed to load title" data-id="1891608366" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15263" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15263/hovercard" href="https://github.com/openzfs/zfs/pull/15263">#15263</a> <a data-error-text="Failed to load title" data-id="1889529445" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15257" data-hovercard-type="issue" data-hovercard-url="/openzfs/zfs/issues/15257/hovercard" href="https://github.com/openzfs/zfs/issues/15257">#15257</a></li>
<li>Read prefetched buffers from L2ARC <a data-error-text="Failed to load title" data-id="1961199397" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15451" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15451/hovercard" href="https://github.com/openzfs/zfs/pull/15451">#15451</a></li>
<li>Add mutex_enter_interruptible() for interruptible sleeping IOCTLs <a data-error-text="Failed to load title" data-id="1929244578" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15360" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15360/hovercard" href="https://github.com/openzfs/zfs/pull/15360">#15360</a></li>
<li>Revert "zvol: Temporally disable blk-mq" <a data-error-text="Failed to load title" data-id="1958171452" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15439" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15439/hovercard" href="https://github.com/openzfs/zfs/pull/15439">#15439</a></li>
<li>zvol: Remove broken blk-mq optimization <a data-error-text="Failed to load title" data-id="1926673207" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15351" data-hovercard-type="issue" data-hovercard-url="/openzfs/zfs/issues/15351/hovercard" href="https://github.com/openzfs/zfs/issues/15351">#15351</a></li>
<li>"ARC prefetch metadata accesses:" appears twice in the output. <a data-error-text="Failed to load title" data-id="1954953399" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15427" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15427/hovercard" href="https://github.com/openzfs/zfs/pull/15427">#15427</a></li>
<li>Trust ARC_BUF_SHARED() more <a data-error-text="Failed to load title" data-id="1940682921" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15397" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15397/hovercard" href="https://github.com/openzfs/zfs/pull/15397">#15397</a></li>
<li>Remove lock from dsl_pool_need_dirty_delay() <a data-error-text="Failed to load title" data-id="1935926625" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15390" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15390/hovercard" href="https://github.com/openzfs/zfs/pull/15390">#15390</a></li>
<li>run-zts test procfs/pool_state failed with uncorrectable I/O failure <a data-error-text="Failed to load title" data-id="1930023503" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15364" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15364/hovercard" href="https://github.com/openzfs/zfs/pull/15364">#15364</a></li>
<li>Properly pad struct tx_cpu to cache line <a data-error-text="Failed to load title" data-id="1942909972" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15402" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15402/hovercard" href="https://github.com/openzfs/zfs/pull/15402">#15402</a></li>
<li>Fix typo in  tests/zfs-tests/tests/functional/cli_user/misc/misc.cfg <a data-error-text="Failed to load title" data-id="1950277709" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15417" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15417/hovercard" href="https://github.com/openzfs/zfs/pull/15417">#15417</a></li>
<li>FreeBSD: taskq: Remove unused declaration <a data-error-text="Failed to load title" data-id="1950008652" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15416" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15416/hovercard" href="https://github.com/openzfs/zfs/pull/15416">#15416</a></li>
<li>Set spa_ccw_fail_time=0 when expanding a vdev. <a data-error-text="Failed to load title" data-id="1943574455" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15405" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15405/hovercard" href="https://github.com/openzfs/zfs/pull/15405">#15405</a></li>
<li>Fix ZED auto-replace for VDEVs using by-id paths <a data-error-text="Failed to load title" data-id="1929450959" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15363" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15363/hovercard" href="https://github.com/openzfs/zfs/pull/15363">#15363</a></li>
<li>Add zfs_prepare_disk script for disk firmware install <a data-error-text="Failed to load title" data-id="1884851583" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15243" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15243/hovercard" href="https://github.com/openzfs/zfs/pull/15243">#15243</a></li>
<li>Large sync writes perform worse with slog <a data-error-text="Failed to load title" data-id="1529657288" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/14378" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/14378/hovercard" href="https://github.com/openzfs/zfs/pull/14378">#14378</a></li>
<li>FreeBSD: Improve taskq wrapper <a data-error-text="Failed to load title" data-id="1927295198" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15356" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15356/hovercard" href="https://github.com/openzfs/zfs/pull/15356">#15356</a></li>
<li>Fix block cloning between unencrypted and encrypted datasets <a data-error-text="Failed to load title" data-id="1968211163" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15464" data-hovercard-type="issue" data-hovercard-url="/openzfs/zfs/issues/15464/hovercard" href="https://github.com/openzfs/zfs/issues/15464">#15464</a> <a data-error-text="Failed to load title" data-id="1968492674" data-permission-text="Title is private" data-url="https://github.com/openzfs/zfs/issues/15465" data-hovercard-type="pull_request" data-hovercard-url="/openzfs/zfs/pull/15465/hovercard" href="https://github.com/openzfs/zfs/pull/15465">#15465</a></li>
</ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[VMware is now part of Broadcom (336 pts)]]></title>
            <link>https://www.broadcom.com/info/vmware</link>
            <guid>38380137</guid>
            <pubDate>Wed, 22 Nov 2023 15:01:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.broadcom.com/info/vmware">https://www.broadcom.com/info/vmware</a>, See on <a href="https://news.ycombinator.com/item?id=38380137">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Fortran 2023 (174 pts)]]></title>
            <link>https://www.iso.org/standard/82170.html</link>
            <guid>38379893</guid>
            <pubDate>Wed, 22 Nov 2023 14:46:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.iso.org/standard/82170.html">https://www.iso.org/standard/82170.html</a>, See on <a href="https://news.ycombinator.com/item?id=38379893">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>Making lives <strong><em>easier</em></strong>, <strong><em>safer</em></strong> and <strong><em>better</em></strong>.</p><div>
            <p>We are committed to ensuring that our website is accessible to everyone. If you have any questions or suggestions regarding the accessibility of this site, please <a href="mailto:webmaster@iso.org?subject=Accessibility">contact us</a>.</p>
            <p><a href="#copyright" target="_self" data-bs-toggle="collapse" aria-expanded="false" aria-controls="copyright">© All Rights Reserved</a> <span id="copyright">All ISO publications and materials are protected by copyright and are subject to the user’s acceptance of ISO’s conditions of copyright. Any use, including reproduction requires our written permission. All copyright requests should be addressed to <a href="mailto:copyright@iso.org">copyright@iso.org</a>.</span></p>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[EP–133 (184 pts)]]></title>
            <link>https://teenage.engineering/products/ep-133</link>
            <guid>38379543</guid>
            <pubDate>Wed, 22 Nov 2023 14:22:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://teenage.engineering/products/ep-133">https://teenage.engineering/products/ep-133</a>, See on <a href="https://news.ycombinator.com/item?id=38379543">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[US thwarted plot to kill Sikh separatist on American soil (129 pts)]]></title>
            <link>https://www.ft.com/content/56f7d6d6-6a93-4172-a49e-d8a91991e29d</link>
            <guid>38379463</guid>
            <pubDate>Wed, 22 Nov 2023 14:17:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ft.com/content/56f7d6d6-6a93-4172-a49e-d8a91991e29d">https://www.ft.com/content/56f7d6d6-6a93-4172-a49e-d8a91991e29d</a>, See on <a href="https://news.ycombinator.com/item?id=38379463">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="site-content" data-trackable="trial-barrier-grid" data-barrier="trial" data-barrier-is-sandbox="false">
			<div data-o-component="o-subs-card" data-offer-id="41218b9e-c8ae-c934-43ad-71b13fcb4465" data-offer-prominence="primary" data-offer-title="Trial" data-tracking-context="{&quot;title&quot;:&quot;Trial&quot;,&quot;brief&quot;:&quot;Try full digital access and see why over 1 million readers subscribe to the FT&quot;,&quot;offerId&quot;:&quot;41218b9e-c8ae-c934-43ad-71b13fcb4465&quot;,&quot;price&quot;:&quot;$1 for 4 weeks&quot;,&quot;prominence&quot;:&quot;primary&quot;,&quot;skuIds&quot;:[],&quot;description&quot;:&quot;For 4 weeks receive unlimited Premium digital access to the FT's trusted, award-winning business news&quot;}">
					<h3>Try unlimited access</h3>

					<p>Try full digital access and see why over 1 million readers subscribe to the FT</p><p>Only
						CHF&nbsp;1 for 4 weeks
				</p>

					

				</div>
			<p>
				<h4>Explore our subscriptions</h4>
			</p>
			<div>
					<h5>Individual</h5>
					<p>Find the plan that suits you best.</p>
					
				</div>
			<div>
					<h5>Professional</h5>
					<p>Premium access for businesses and educational institutions.</p>
					
				</div>
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Email obfuscation: What still works in 2023? (148 pts)]]></title>
            <link>https://spencermortensen.com/articles/email-obfuscation/</link>
            <guid>38379397</guid>
            <pubDate>Wed, 22 Nov 2023 14:12:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://spencermortensen.com/articles/email-obfuscation/">https://spencermortensen.com/articles/email-obfuscation/</a>, See on <a href="https://news.ycombinator.com/item?id=38379397">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>


<nav>
<ul>
<li>1 <a href="#link">Clickable link</a>
	<ul>
	<li>1.1 <a href="#link-url">URL encoding</a>: blocked 100% of spam</li>
	<li>1.2 <a href="#link-entity">HTML entities</a>: blocked 50% of spam</li>
	<li>1.3 <a href="#link-none">No protection</a>: blocked 17% of spam</li>
	<li>1.4 <a href="#link-concatenation">Concatenation</a>: <i>still testing</i> <span>JS</span></li>
	<li>1.5 <a href="#link-rot18">Rot18</a>: <i>still testing</i> <span>JS</span></li>
	<li>1.6 <a href="#link-xor">Xor</a>: <i>still testing</i> <span>JS</span></li>
	<li>1.7 <a href="#link-append">Append host</a>: <i>still testing</i> <span>JS</span></li>
	<li>1.8 <a href="#link-events">User interaction</a>: <i>still testing</i> <span>JS</span></li>
	</ul>
</li>
<li>2 <a href="#text">Plain text</a>
	<ul>
	<li>2.1 <a href="#text-display">Display none</a>: blocked 100% of spam <span>CSS</span></li>
	<li>2.2 <a href="#text-comment">HTML comment</a>: blocked 83% of spam</li>
	<li>2.3 <a href="#text-entity">HTML entities</a>: blocked 67% of spam</li>
	<li>2.4 <a href="#text-none">No protection</a>: blocked 0% of spam</li>
	<li>2.5 <a href="#text-concatenation">Concatenation</a>: <i>still testing</i> <span>JS</span></li>
	<li>2.6 <a href="#text-rot18">Rot18</a>: <i>still testing</i> <span>JS</span></li>
	<li>2.7 <a href="#text-xor">Xor</a>: <i>still testing</i> <span>JS</span></li>
	<li>2.8 <a href="#text-append">Append host</a>: <i>still testing</i> <span>JS</span></li>
	<li>2.9 <a href="#text-substitution">Symbol substition</a>: blocked 100% of spam <span>Issues</span></li>
	<li>2.10 <a href="#text-content">CSS content</a>: blocked 100% of spam <span>CSS</span> <span>Issues</span></li>
	<li>2.11 <a href="#text-direction">Text direction</a>: blocked 100% of spam <span>CSS</span> <span>Issues</span></li>
	<li>2.12 <a href="#text-image">Image</a>: blocked 100% of spam <span>Issues</span></li>
	</ul>
</li>
<li>3 <a href="#methodology">Methodology</a></li>
</ul>
</nav>


<h2 id="link">1 Clickable link</h2>

<p>These techniques protect a clickable link that will open the user’s mail client (e.g. <a href="mailto:email@example.com">email</a>).
The link text is expected to be generic; if the <i>email address</i> appears in the link text, then the email address is additionally exposed as plain text, and you’ll need to layer on the <a href="#text">plain-text</a> obfuscation techniques.</p>


<h3 id="link-url">1.1 URL encoding</h3>
<p>Blocked 100% of spam</p>

<code>&lt;<span>a</span> <span>href</span>=<wbr><span>"mailto:<wbr><span id="link-url-output">%65<wbr>%6d<wbr>%61<wbr>%69<wbr>%6c<wbr>%40<wbr>%65<wbr>%78<wbr>%61<wbr>%6d<wbr>%70<wbr>%6c<wbr>%65<wbr>%2e<wbr>%63<wbr>%6f<wbr>%6d</span>"</span>&gt;<wbr>email<wbr>&lt;/<span>a</span>&gt;</code>
<p><label for="link-url-input">email:</label></p>

<p>This is based on a small sample size: just six bots that were observed over a one-year period.
Of those bots, <i>half</i> were able to decode HTML entitites, and URL-decoding is just as easy, so caution is advised.</p>


<h3 id="link-entity">1.2 HTML entities</h3>
<p>Blocked 50% of spam</p>

<code>&lt;<span>a</span> <span>href</span>=<wbr><span>"&amp;#109;<wbr>&amp;#97;<wbr>&amp;#105;<wbr>&amp;#108;<wbr>&amp;#116;<wbr>&amp;#111;<wbr>&amp;#58;<wbr><span id="link-entity-output">&amp;#101;<wbr>&amp;#109;<wbr>&amp;#97;<wbr>&amp;#105;<wbr>&amp;#108;<wbr>&amp;#64;<wbr>&amp;#101;<wbr>&amp;#120;<wbr>&amp;#97;<wbr>&amp;#109;<wbr>&amp;#112;<wbr>&amp;#108;<wbr>&amp;#101;<wbr>&amp;#46;<wbr>&amp;#99;<wbr>&amp;#111;<wbr>&amp;#109;</span>"</span>&gt;<wbr>email<wbr>&lt;/<span>a</span>&gt;</code>
<p><label for="link-entity-input">email:</label></p>


<h3 id="link-none">1.3 No protection</h3>
<p>Blocked 17% of spam</p>

<code>&lt;<span>a</span> <span>href</span>=<wbr><span>"mailto:<wbr><span id="link-none-output">email<wbr>@example<wbr>.com</span>"</span>&gt;<wbr>email<wbr>&lt;/<span>a</span>&gt;</code>
<p><label for="link-none-input">email:</label></p>

<p>Surprisingly, the unprotected email address appears to have blocked a spam email.
Either that message wasn’t received, or an extra message was sent to one of the protected email addresses.</p>


<h3 id="link-concatenation">1.4 Concatenation</h3>
<p><i>Still testing</i> <span>JS</span></p>

<code>&lt;<span>script</span>&gt;<wbr>document<wbr>.write(<wbr>'&lt;a href="mailto:'<wbr>+<span id="link-concatenation-output">'e'+<wbr>'m'+<wbr>'a'+<wbr>'i'+<wbr>'l'+<wbr>'@'+<wbr>'e'+<wbr>'x'+<wbr>'a'+<wbr>'m'+<wbr>'p'+<wbr>'l'+<wbr>'e'+<wbr>'.'+<wbr>'c'+<wbr>'o'+<wbr>'m'</span>+'"&gt;email&lt;/a&gt;'<wbr>);<wbr>&lt;/<span>script</span>&gt;</code>
<p><label for="link-concatenation-input">email:</label></p>

<p>This is convenient because it has no external dependencies, but it is easily broken, even by bots that don’t interpret JavaScript.</p>


<h3 id="link-rot18">1.5 Rot18</h3>
<p><i>Still testing</i> <span>JS</span></p>

<code>&lt;<span>head</span>&gt;
	&lt;<span>script</span> <span>src</span>=<wbr><span>"js/<a href="https://spencermortensen.com/articles/email-obfuscation/src/link-rot18.js">email.js</a>"</span> <span>defer</span>&gt;<wbr>&lt;/<span>script</span>&gt;
&lt;/<span>head</span>&gt;</code>
<code>&lt;<span>a</span> <span>class</span>=<wbr><span>"email"</span> <span>href</span>=<wbr><span>"znvygb:<wbr><span id="link-rot18-output">rznvy<wbr>@rknzcyr<wbr>.pbz</span>"</span>&gt;<wbr>email<wbr>&lt;/<span>a</span>&gt;</code>
<p><label for="link-rot18-input">email:</label></p>

<p>This has an external dependency and can <i>still</i> be broken by bots that don’t interpret JavaScript.
At the very least, you should change the lengths of the rotation cycles (see the source code).</p>


<h3 id="link-xor">1.6 Xor</h3>
<p><i>Still testing</i> <span>JS</span></p>

<code>&lt;<span>head</span>&gt;
	&lt;<span>script</span> <span>src</span>=<wbr><span>"js/<a href="https://spencermortensen.com/articles/email-obfuscation/src/link-xor.js">email.js</a>"</span> <span>defer</span>&gt;<wbr>&lt;/<span>script</span>&gt;
&lt;/<span>head</span>&gt;</code>
<code>&lt;<span>a</span> <span>class</span>=<wbr><span>"email"</span> <span>href</span>=<wbr><span>"<span id="link-xor-output">71<wbr>79<wbr>75<wbr>7d<wbr>78<wbr>54<wbr>71<wbr>6c<wbr>75<wbr>79<wbr>64<wbr>78<wbr>71<wbr>3a<wbr>77<wbr>7b<wbr>79</span>"</span> <span>rel</span>=<span>"nofollow, noindex"</span>&gt;<wbr>email<wbr>&lt;/<span>a</span>&gt;</code>
<p><label for="link-xor-input">email:</label></p>

<p>This can only be defeated by a bot with full JavaScript support.</p>


<h3 id="link-append">1.7 Append host</h3>
<p><i>Still testing</i> <span>JS</span></p>

<code>&lt;<span>head</span>&gt;
	&lt;<span>script</span> <span>src</span>=<wbr><span>"js/<a href="https://spencermortensen.com/articles/email-obfuscation/src/link-append.js">email.js</a>"</span> <span>defer</span>&gt;<wbr>&lt;/<span>script</span>&gt;
&lt;/<span>head</span>&gt;</code>
<code>&lt;<span>a</span> <span>class</span>=<wbr><span>"email"</span> <span>href</span>=<wbr><span>"mailto:<wbr><span id="link-append-output">email</span>"</span>&gt;<wbr>email<wbr>&lt;/<span>a</span>&gt;</code>
<p><label for="link-append-input">email:</label></p>


<h3 id="link-events">1.8 User interaction</h3>
<p><i>Still testing</i> <span>JS</span></p>

<code>&lt;<span>head</span>&gt;
	&lt;<span>script</span> <span>src</span>=<wbr><span>"js/<a href="https://spencermortensen.com/articles/email-obfuscation/src/link-events.js">email.js</a>"</span> <span>defer</span>&gt;<wbr>&lt;/<span>script</span>&gt;
&lt;/<span>head</span>&gt;</code>
<code>&lt;<span>a</span> <span>class</span>=<wbr><span>"email"</span> <span>href</span>=<wbr><span>"mailto:<wbr><span id="link-events-output">email</span>"</span>&gt;<wbr>email<wbr>&lt;/<span>a</span>&gt;</code>
<p><label for="link-events-input">email:</label></p>


<h2 id="text">2 Plain text</h2>

<h3 id="text-display">2.1 Display none</h3>
<p>Blocked 100% of spam <span>CSS</span></p>

<code><span>span</span><wbr>.<span>email</span> <span>b</span> {
	<span>display</span>: <span>none</span>;
}</code>
<code>&lt;<span>span</span> <span>class</span>=<wbr><span>"email"</span>&gt;<wbr><span id="text-display-output">email<wbr>@example<wbr>&lt;<span>b</span>&gt;<wbr>.example<wbr>&lt;/<span>b</span>&gt;<wbr>.com</span><wbr>&lt;/<span>span</span>&gt;</code>
<p><label for="text-display-input">email:</label></p>



<p>Blocked 83% of spam</p>

<code><span id="text-comment-output">email<wbr>@example<wbr><span>&lt;!--<wbr>.example<wbr>--&gt;</span><wbr>.com</span></code>
<p><label for="text-comment-input">email:</label></p>


<h3 id="text-entity">2.3 HTML entities</h3>
<p>Blocked 67% of spam</p>

<code><span id="text-entity-output">&amp;#101;<wbr>&amp;#109;<wbr>&amp;#97;<wbr>&amp;#105;<wbr>&amp;#108;<wbr><wbr>&amp;#64;<wbr>&amp;#101;<wbr>&amp;#120;<wbr>&amp;#97;<wbr>&amp;#109;<wbr>&amp;#112;<wbr>&amp;#108;<wbr>&amp;#101;<wbr><wbr>&amp;#46;<wbr>&amp;#99;<wbr>&amp;#111;<wbr>&amp;#109;</span></code>
<p><label for="text-entity-input">email:</label></p>


<h3 id="text-none">2.4 No protection</h3>
<p>Blocked 0% of spam</p>

<code><span id="text-none-output">email<wbr>@example<wbr>.com</span></code>
<p><label for="text-none-input">email:</label></p>


<h3 id="text-concatenation">2.5 Concatenation</h3>
<p><i>Still testing</i> <span>JS</span></p>

<code>&lt;<span>script</span>&gt;document.write(<wbr><span id="text-concatenation-output">'e'+<wbr>'m'+<wbr>'a'+<wbr>'i'+<wbr>'l'+<wbr>'@'+<wbr>'e'+<wbr>'x'+<wbr>'a'+<wbr>'m'+<wbr>'p'+<wbr>'l'+<wbr>'e'+<wbr>'.'+<wbr>'c'+<wbr>'o'+<wbr>'m'</span><wbr>);<wbr>&lt;/<span>script</span>&gt;</code>
<p><label for="text-concatenation-input">email:</label></p>

<p>This is convenient because it has no external dependencies, but it is easily broken, even by bots that don’t interpret JavaScript.</p>


<h3 id="text-rot18">2.6 Rot18</h3>
<p><i>Still testing</i> <span>JS</span></p>

<code>&lt;<span>head</span>&gt;
	&lt;<span>script</span> <span>src</span>=<wbr><span>"js/<a href="https://spencermortensen.com/articles/email-obfuscation/src/text-rot18.js">email.js</a>"</span> <span>defer</span>&gt;<wbr>&lt;/<span>script</span>&gt;
&lt;/<span>head</span>&gt;</code>
<code>&lt;<span>span</span> <span>class</span>=<wbr><span>"email"</span>&gt;<wbr><span id="text-rot18-output">rznvy<wbr>@rknzcyr<wbr>.pbz</span><wbr>&lt;/<span>span</span>&gt;</code>
<p><label for="text-rot18-input">email:</label></p>

<p>This can be broken even by bots that don’t interpret JavaScript.
At the very least, you should change the lengths of the rotation cycles (see the source code).</p>


<h3 id="text-xor">2.7 Xor</h3>
<p><i>Still testing</i> <span>JS</span></p>

<code>&lt;<span>head</span>&gt;
	&lt;<span>script</span> <span>src</span>=<wbr><span>"js/<a href="https://spencermortensen.com/articles/email-obfuscation/src/text-xor.js">email.js</a>"</span> <span>defer</span>&gt;<wbr>&lt;/<span>script</span>&gt;
&lt;/<span>head</span>&gt;</code>
<code>&lt;<span>span</span> <span>class</span>=<wbr><span>"email"</span>&gt;<wbr><span id="text-xor-output">71<wbr>79<wbr>75<wbr>7d<wbr>78<wbr>54<wbr>71<wbr>6c<wbr>75<wbr>79<wbr>64<wbr>78<wbr>71<wbr>3a<wbr>77<wbr>7b<wbr>79</span><wbr>&lt;/<span>span</span>&gt;</code>
<p><label for="text-xor-input">email:</label></p>


<h3 id="text-append">2.8 Append host</h3>
<p><i>Still testing</i> <span>JS</span></p>

<code>&lt;<span>head</span>&gt;
	&lt;<span>script</span> <span>src</span>=<wbr><span>"js/<a href="https://spencermortensen.com/articles/email-obfuscation/src/text-append.js">email.js</a>"</span> <span>defer</span>&gt;<wbr>&lt;/<span>script</span>&gt;
&lt;/<span>head</span>&gt;</code>
<code>&lt;<span>span</span> <span>class</span>=<wbr><span>"email"</span>&gt;<wbr><span id="text-append-output">email</span><wbr>&lt;/<span>span</span>&gt;</code>
<p><label for="text-append-input">email:</label></p>


<h3 id="text-substitution">2.9 Symbol substitution</h3>
<p>Blocked 100% of spam <span>Issues</span></p>

<code><span id="text-substitution-output">email AT example DOT com</span></code>
<p><label for="text-substitution-input">email:</label></p>

<p><b>Breaks usability.</b> The user has to extract the email address from the surrounding text and then undo each symbol substitution before they can send their email.</p>


<h3 id="text-content">2.10 CSS content</h3>
<p>Blocked 100% of spam <span>CSS</span> <span>Issues</span></p>

<code><span>span</span><wbr>.<span>email</span><wbr>::<span>after</span> {
	<span>content</span>: <span>"<span id="text-content-output">email<wbr>@example<wbr>.com</span>"</span>;
}</code>
<code>&lt;<span>span</span> <span>class</span>=<wbr><span>"email<wbr>"</span>&gt;<wbr>&lt;/<span>span</span>&gt;</code>
<p><label for="text-content-input">email:</label></p>

<p><b>Breaks usability.</b> The email address can be seen, but not selected. The user is forced to type out the full email address by hand.</p>


<h3 id="text-direction">2.11 Text direction</h3>
<p>Blocked 100% of spam <span>CSS</span> <span>Issues</span></p>

<code><span>span</span>.<span>email</span> {
	<span>unicode-bidi</span>: <span>bidi-override</span>;
	<span>direction</span>: <span>rtl</span>;
}</code>
<code>&lt;<span>span</span> <span>class</span>=<wbr><span>"email"</span>&gt;<wbr><span id="text-direction-output">moc<wbr>.elpmaxe<wbr>@liame</span><wbr>&lt;/<span>span</span>&gt;</code>
<p><label for="text-direction-input">email:</label></p>

<p><b>Breaks usability.</b> The email address can be copied, but the text is reversed—which is confusing, and then frustrating. The user is forced to type out the full email address by hand.</p>


<h3 id="text-image">2.12 Image</h3>
<p>Blocked 100% of spam <span>Issues</span></p>

<code>&lt;<span>img</span> <span>src</span>=<wbr><span>"images/email.jpg"</span> <span>width</span>=<wbr><span>"216"</span> <span>height</span>=<wbr><span>"18"</span> <span>alt</span>=<wbr><span>"email address"</span>&gt;</code>

<p><b>Breaks usability.</b> The user is forced to type out the full email address by hand.</p>


<h2 id="methodology">3 Methodology</h2>

<p>I set up a live example for each obfuscation technique, using a different email address for each technique.</p>

<a href="https://spencermortensen.com/email/">email</a>


</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What has changed in CPU cores in M3 chips? (184 pts)]]></title>
            <link>https://eclecticlight.co/2023/11/22/what-has-changed-in-cpu-cores-in-m3-chips/</link>
            <guid>38378992</guid>
            <pubDate>Wed, 22 Nov 2023 13:43:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eclecticlight.co/2023/11/22/what-has-changed-in-cpu-cores-in-m3-chips/">https://eclecticlight.co/2023/11/22/what-has-changed-in-cpu-cores-in-m3-chips/</a>, See on <a href="https://news.ycombinator.com/item?id=38378992">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-76428">
	
	<!-- .entry-header -->

	
		<div data-first_letter="I">
		<p>If you read the initial reviews of Apple’s new M3-based Macs, you’d be forgiven for thinking little had changed in their CPU cores, apart from a rejigging of numbers and an increase in the maximum frequency of their P cores. As my MacBook Pro 16-inch M3 Pro arrived three days early, this article presents a tentative first look at what has changed in their CPU cores, and from that, how you might choose the right chip for your next Apple silicon Mac. Like Apple, I’m going to make comparison between M1 and M3 chips, as in most respects discussed here, M2 CPU cores didn’t change as much from those in the M1, and I’ve had and tested four different M1 models.</p>
<h4>Cluster size</h4>
<p>The most obvious difference between M1/M2 CPU cores and those in M3 chips is in the size of their clusters. In M1 and M2 chips, CPU cores are grouped into clusters of 2 or 4, within which cores share L2 cache and run at the same frequency. In M3 chips (certainly the M3 Pro, and I understand the M3 Max as well) clusters are composed of 4 (M3 basic) or 6 (Pro and Max).</p>
<p>This change has impact on chip selection.</p>
<p>macOS tries to allocate threads running at higher priorities, as set by their Quality of Service (QoS), to P cores whenever possible. This is what we want, as it ensures that the apps we’re running deliver best performance, albeit at higher power consumption. When the P cores are already fairly fully occupied, macOS may instead run high QoS threads on the E cores. While it has compensatory mechanisms for doing this (see below), it may mean that those threads run more slowly than we’d want.</p>
<p>If you already have an Apple silicon Mac and are wondering whether to upgrade to an M3 model, then you can use this as a way of working out which chip you’ll need. Load your current Mac up with the apps you normally use together when working, and watch their use in Activity Monitor’s CPU History window. If its P cores are fully occupied much of the time, and that workload often spills over to the E cores, then you should aim for an M3 with more P cores; if there’s always adequate spare capacity on the Mac’s P cores, then you probably wouldn’t get much added value from an M3 with more P cores.</p>
<p>This changed cluster size in M3 chips is significant, as it could not only have effects on performance, but also on power use. When running at full pelt, all six P cores in an M3 Pro cluster can use as much as 5.5 W, while six in an M1 Pro will use about 5.8 W.</p>
<h4>E cores</h4>
<p>From my preliminary measurements, E cores in an M3 Pro differ little from those in an M1 Pro, except for their frequency management, which is determined by macOS. M1 E cores have a maximum frequency of 2064 MHz, while those in M3 chips reach 2748 MHz. But, when running low QoS threads in the M1 Pro chip, E core frequency is set to 972 MHz, and that in the M3 Pro is 744 MHz, giving a ratio of 1.3 for M1/M3. Integer, floating point, NEON and Accelerate performance at those frequencies matches the difference in frequency, at 1.3-1.4. That means the M3’s E cores run background threads slightly more slowly than the M1 because macOS sets their frequency lower.</p>
<p>That isn’t true, though, when the E cores are being used to run high QoS threads that couldn’t be accommodated on P cores. Those are run at maximum frequency, which favours the M3 Pro by a factor of 1.3.</p>
<p>Replacing an M1 Pro with an M3 Pro thus slows background tasks, but accelerates high QoS tasks that have overflowed onto the E cores.</p>
<h4>P cores</h4>
<p>There are greater differences between the P cores in an M1 Pro and those in an M3 Pro. M1 P cores have a maximum frequency of 3228 MHz, while M3 P cores run up to a maximum of 4056 MHz, a ratio of 1.26 in favour of the M3. A similar ratio is seen for integer and floating point performance, at 1.30 and 1.28 respectively, but vector performance using NEON or Apple’s Accelerate library is faster still on the M3 Pro P core, at ratios of 1.67 and 1.63.</p>
<p>This suggests that improved integer and floating point performance is largely (if not completely) the result of increased core frequency, but that there are likely to be further improvements in vector processing. Perhaps Apple has improved the design of the NEON unit in M3 P cores.</p>
<h4>P v E</h4>
<p>Aside from any improvement in vector processing in M3 P cores, M1 and M3 cores show different patterns of performance under load. These are perhaps clearest in the two charts below. Loads were applied using AsmAttic, which here runs tight loops of floating point arithmetic that remains in-core, accessing only registers and not memory. These charts show the time taken to complete one or more threads, each running 200 million loops of assembly code. Each thread is run as if on a single core at 100% active residency, i.e. it’s one core’s worth of performance, so 6 threads will fully load a 6-core P cluster.</p>
<p><span><img data-attachment-id="76432" data-permalink="https://eclecticlight.co/m1m3psummary/" data-orig-file="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3psummary.png" data-orig-size="1071,893" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="m1m3psummary" data-image-description="" data-image-caption="" data-medium-file="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3psummary.png?w=300" data-large-file="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3psummary.png?w=940" src="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3psummary.png?w=940" alt="m1m3psummary" srcset="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3psummary.png 1071w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3psummary.png?w=150&amp;h=125 150w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3psummary.png?w=300&amp;h=250 300w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3psummary.png?w=768&amp;h=640 768w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3psummary.png?w=1024&amp;h=854 1024w" sizes="(max-width: 1071px) 100vw, 1071px"></span></p>
<p>This chart shows the total time to complete running all the threads, by the number of threads (effectively the number of cores), for an M1 Pro in red, and an M3 Pro in black. These threads were all run at maximum QoS (33), so were run preferentially on P cores. Those run on the 8 P cores in an M1 Pro (red) show a near-perfect linear relationship, with each thread fully occupying one core for a period of 1.3 seconds.</p>
<p>The lower black line shows equivalent results for the 6 P and 6 E cores in an M3 Pro. For 1-6 threads, these were all run on its P cores, then on an increasing number of its E cores as well. That is quite linear up to 6 threads, where the time taken is significantly less than that of the M1 Pro. By 6 threads, that difference is over 1 second; in the time the M1 Pro took to run 5 threads, the M3 Pro had almost completed 6.</p>
<p>From 6-8 threads, the two lines run in parallel, indicating that the M3 E cores were delivering similar performance to the P cores in the M1 Pro. You wouldn’t want to run more than 8 threads, though, on the 8P + 2E cores of the M1 Pro, as they would risk displacing background threads on the two E cores. On the M3 Pro, you can go safely up to a total of 10 threads, on 6 P and 4 E cores, without compromising background threads. Indeed, because the E cluster is running at maximum frequency, background tasks might even complete more quickly under that load.</p>
<p><span><img data-attachment-id="76431" data-permalink="https://eclecticlight.co/m1m3esummary/" data-orig-file="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3esummary.png" data-orig-size="1071,893" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="m1m3esummary" data-image-description="" data-image-caption="" data-medium-file="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3esummary.png?w=300" data-large-file="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3esummary.png?w=940" src="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3esummary.png?w=940" alt="m1m3esummary" srcset="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3esummary.png 1071w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3esummary.png?w=150&amp;h=125 150w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3esummary.png?w=300&amp;h=250 300w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3esummary.png?w=768&amp;h=640 768w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3esummary.png?w=1024&amp;h=854 1024w" sizes="(max-width: 1071px) 100vw, 1071px"></span></p>
<p>Differences are reversed when running low QoS threads on the E cores, as shown here, again with the 2 E cores of the M1 Pro in red, and the 6 E cores of the M3 Pro in black.</p>
<p>The frequency of the M1 Pro E cores is increased when they’re running a second thread, which accounts for the small change in total time from 1-2 threads. However, with more than 2 threads, further threads are queued, and performance suffers as a result. The 6 E cores of the M3 Pro have three times the capacity for background threads, and although running them more slowly, they cope with up to 6 threads, beyond which those threads are queued, and the time required to complete them rises more rapidly.</p>
<h4>CPU History</h4>
<p>The most accessible window you have on core load and performance is CPU History in Activity Monitor. Although it can cast light on the use of different types of core, and help you decide whether your next Mac needs more cores, it’s also seriously misleading, as shown in the screenshot below.</p>
<p><span><img data-attachment-id="76430" data-permalink="https://eclecticlight.co/m1m3cpuhist/" data-orig-file="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3cpuhist.jpg" data-orig-size="1414,1114" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="m1m3cpuhist" data-image-description="" data-image-caption="" data-medium-file="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3cpuhist.jpg?w=300" data-large-file="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3cpuhist.jpg?w=940" src="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3cpuhist.jpg?w=940" alt="m1m3cpuhist" srcset="https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3cpuhist.jpg 1414w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3cpuhist.jpg?w=150&amp;h=118 150w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3cpuhist.jpg?w=300&amp;h=236 300w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3cpuhist.jpg?w=768&amp;h=605 768w, https://eclecticlightdotcom.files.wordpress.com/2023/11/m1m3cpuhist.jpg?w=1024&amp;h=807 1024w" sizes="(max-width: 1414px) 100vw, 1414px"></span></p>
<p>This shows what happened during two tests using my app AsmAttic: in the first, responsible for the large blocks of green in the E cores, I ran a load of 6 threads at low QoS; in the second, reflected in the much narrower blocks for the P cores below, I ran the same load of 6 threads on the P cores. When the E cores were fully loaded, their frequency was 744 MHz, that’s only a little above their idle, but when the P cores were fully loaded, they were running at close to their maximum at just under 4000 MHz. This persistent failure in Activity Monitor to take core frequency into account gives seriously misleading impressions.</p>
<h4>Summary</h4>
<ul>
<li>There’s much more to comparing CPU cores than multi-core benchmarks.</li>
<li>If you already have an Apple silicon Mac, observe patterns of use of P and E cores during normal use to determine whether you need a Mac with more cores.</li>
<li>CPU core cluster size has changed in M3 chips, from 2-4 to 4-6, which is likely to have extensive effects on performance and power use.</li>
<li>M3 E cores appear similar to those in the M1, but have a higher maximum frequency, and are run at lower frequency for background tasks.</li>
<li>M3 P cores appear to have improved performance in the vector (NEON) unit, and have a higher maximum frequency.</li>
<li>Increased E core count increases the capacity to accommodate overflow of high QoS threads from P cores.</li>
<li>macOS core management has also changed.</li>
</ul>
<p>I will post further analyses of the M3 Pro chip’s CPU performance as I assess the data.</p>
	</div><!-- .entry-content -->

	
	<!-- .entry-footer -->

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Writing and linting Python at scale (115 pts)]]></title>
            <link>https://engineering.fb.com/2023/08/07/developer-tools/fixit-2-linter-meta/</link>
            <guid>38378776</guid>
            <pubDate>Wed, 22 Nov 2023 13:22:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://engineering.fb.com/2023/08/07/developer-tools/fixit-2-linter-meta/">https://engineering.fb.com/2023/08/07/developer-tools/fixit-2-linter-meta/</a>, See on <a href="https://news.ycombinator.com/item?id=38378776">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

		<ul>
<li aria-level="1"><span>Fixit is dead! Long live Fixit 2 – the latest version of our open-source auto-fixing linter.</span></li>
<li aria-level="1"><span>Fixit 2 allows developers to efficiently build custom lint rules and perform auto-fixes for their codebases.</span></li>
<li aria-level="1"><span>Fixit 2 is </span><span>available today on </span><a href="https://pypi.org/project/fixit/2.0.0a1/" target="_blank" rel="noopener"><span>PyPI</span></a><span>.</span></li>
</ul>
<p><a href="https://engineering.fb.com/2022/07/27/developer-tools/programming-languages-endorsed-for-server-side-use-at-meta/" target="_blank" rel="noopener"><span>Python is one of the most popular languages in use at Meta.</span></a><span> Meta’s production engineers (PEs) are specialized software engineers (SWEs) who focus on reliability, efficiency, and scalability. They work on various projects, including debugging production services, rewriting inefficient libraries, orchestrating project deployments at scale, or capacity planning and scheduling. And Python is often one of the first tools that PEs reach for, as it offers rapid development, easy to read syntax, and a massive array of open source libraries.</span></p>
<p><span>Meta’s Python Language Foundation team — a hybrid team of both PEs and traditional SWEs — helps own and maintain the infrastructure and tooling for Python at Meta. The team supports engineers, data scientists, researchers, and anyone else at Meta using Python to get their work done.</span></p>
<p><span>One of the ways we accomplish this is building tools that enable Python developers to write better, and more reliable code more efficiently. This includes tools like</span> <a href="https://ufmt.omnilib.dev/" target="_blank" rel="noopener"><span>automatic formatting</span></a><span> and</span> <a href="https://usort.rtfd.io/" target="_blank" rel="noopener"><span>import sorting</span></a><span> that eliminate tedium, or linters that guide engineers toward maintainable code with fewer bugs.</span></p>
<p><span>This year, we have been building a new linter, </span><a href="https://pypi.org/project/fixit/2.0.0a1/" target="_blank" rel="noopener"><span>Fixit 2</span></a><span>, designed from the ground up to make developers more efficient and capable, both in open source projects and the diverse landscape of our internal monorepo. At Meta, we are using Fixit 2 with a few early adopters, and plan to roll it out to the rest of our monorepo soon. But any developer can use it to </span><span>perform auto-fixing more efficiently and make faster improvements to their own codebases.</span></p>
<h2><span>Why a new linter? (why not X?)</span></h2>
<p><span>There are a variety of excellent linters in the Python ecosystem, many of which have a large community of third-party plugins providing a diverse array of lint rules. We have used </span><a href="https://flake8.pycqa.org/" target="_blank" rel="noopener"><span>Flake8</span></a><span> internally at Meta since 2016, and it has been very successful in helping developers reduce bugs and keep a clean codebase. The popular flake8-bugbear plugin was even created by Łukasz Langa (author of </span><a href="https://black.readthedocs.io/" target="_blank" rel="noopener"><span>Black</span></a><span>, PSF developer-in-residence, and release manager for Python 3.8 and 3.9) while working at Meta (then Facebook), as a home for more opinionated lint rules that we could both use internally and share with the rest of the Python developer community.&nbsp;</span></p>
<p><span>We also have a large number of internal plugins built by various teams, and Flake8 allows them to write and enable custom lint rules directly in the codebase without getting sign-off from a central gatekeeper, and without waiting for a new deployment of Flake8 to roll out.</span></p>
<p><span>But while Flake8 has long been a cornerstone of our linting solution, it also has some rough edges. Writing new lint rules requires building entire plugins (each claiming a portion of the “namespace” for error codes) and encourages developers to build complicated plugins covering multiple classes of errors. When those lint errors are found, Flake8 can only point to a line and column number where it occurred, but has no way of suggesting changes to the developer looking at a list of lint results, leaving them in a state of trial and error to find changes that make the linter happy. Also, Flake8 uses the stdlib </span><span>ast</span><span> module, making it unable to parse future syntax features and forcing developers to wait for tools to upgrade before they can use the shiny new hotness.</span></p>
<p><span>There are alternatives to Flake8 of course, but many of them suffer from one or more drawbacks:&nbsp;</span></p>
<ul>
<li aria-level="1"><span>A lack of support for “local” in-repo plugins or custom lint rules.&nbsp;</span></li>
<li aria-level="1"><span>Limited or no support for hierarchical configuration for different projects within a monorepo.</span></li>
<li aria-level="1"><span>No option for auto-fixes when errors are found.</span></li>
<li aria-level="1"><span>Slow performance on large codebases.</span></li>
</ul>
<p><span>While some of those features aren’t critical, the most important for developer efficiency is offering auto-fixes – automatic suggested changes that would satisfy the lint rule. This takes the guesswork out of using a linter, and allows users to quickly review and accept those changes when possible, eliminating the need to re-run the linter until the code is finally clean. Combining these auto-fixes with in-repo, custom lint rules provides a level of tailored code quality improvements that is hard to beat.</span></p>
<p><span>Unfortunately, even Fixit, the auto-fixing linter that we built for Instagram and open sourced, did not support local lint rules or hierarchical configuration – core requirements for our monorepo that is home to thousands of projects, many of which are themselves open source projects with their own distinct needs for linting and CI. We received many requests from developers to support Fixit in our monorepo, but there were enough hurdles that we were only able to support a small set of security lint rules, reducing the direct benefits to our Python codebase.&nbsp;</span></p>
<h2><span>Meet Fixit 2</span></h2>
<p><span>After discussions with other teams, especially in the rapidly growing AI/ML space, we considered our options and decided upon a partial rewrite of Fixit. We intentionally designed the new version with an open source-first mindset, while incorporating the needs and requirements of our own monorepos and open source projects from day one.</span></p>
<p><span>The framework and linting engine would be rebuilt from the ground up while leaving the core design of lint rules largely untouched. The new system provides a hierarchical configuration based on the TOML format; support for local, in-repo lint rules similar to Flake8; and a much improved CLI and API for integration with other tools and automation.&nbsp;</span></p>
<p><span>Fixit itself builds on top of another Instagram open source project, </span><a href="https://libcst.rtfd.io/" target="_blank" rel="noopener"><span>LibCST</span></a><span>, a concrete syntax tree for Python with a tree and node API following the patterns of the <span>ast</span> </span><span>module in the standard library. The “concrete” part of CST means that LibCST includes every part of the source file in the resulting tree after parsing, including whitespace, comments, and formatting elements that are ignored by the <span>ast</span> </span><span>module. This is what allows Fixit (and other tools we built, like </span><a href="https://usort.rtfd.io/" target="_blank" rel="noopener"><span>µsort</span></a><span>) to safely modify source files, without using regular expressions or the risk of producing broken syntax, and provides the foundation for Fixit to offer auto-fixes suggested by the lint rules themselves.</span></p>
<p><span>Writing a new lint rule can be done with less than a dozen lines of code, and test cases are defined inline. You can even place it right next to the code that it will be linting:</span></p>
<pre><code># teambread/rules/hollywood.py
import fixit
import libcst
class HollywoodName(fixit.LintRule):
    VALID = [...] # no lint errors here
    INVALID = [...] # bad code samples here
    def visit_SimpleString(self, node: libcst.SimpleString):
        if node.value in ('"Paul"', "'Paul'"):
            self.report(node, "It's underbaked!")</code></pre>
<p><span>Suggesting auto-fixes for the user is as easy as including a new CST node when reporting an error:</span></p>
<pre><code>def visit_SimpleString(self, node: libcst.SimpleString):
    if node.value in ('"Paul"', "'Paul'"):
        new_node = libcst.SimpleString('"Mary"')
        self.report(node, new_node)</code></pre>
<p><span>Enabling this new rule within the project’s codebase can be done with a simple config change:</span></p>
<pre><code># teambread/sourdough/fixit.toml
[tool.fixit]
enable = [".rules.hollywood"]
</code></pre>
<p><span>Now we can run our linter against our project:</span></p>
<pre><code># teambread/sourdough/baker.py
name = "Paul"
print(f"hello {name}!")</code></pre>
<pre><code>$ fixit lint --diff sourdough/baker.py
sourdough/baker.py@7:11 HollywoodName: It's underbaked! (has autofix)
--- a/baker.py
+++ b/baker.py
@@ -6,3 +6,3 @@
def main():
-    name = "Paul"
+    name = "Mary"
    print(f"hello {name}")
🛠️  1 file checked, 1 file with errors, 1 auto-fix available 🛠️
[1]</code></pre>
<p><span>The `lint` command only shows errors and suggested changes. If we use the `fix` command, we can apply those suggested changes back to the codebase:</span></p>
<pre><code>$ fixit fix --automatic sourdough/baker.py
sourdough/baker.py@7:11 HollywoodName: It's underbaked! (has autofix)
🛠️  1 file checked, 1 file with errors, 1 auto-fix available, 1 fix applied 🛠️
</code></pre>
<p><span>Now that our auto-fixes have been applied, we can confirm that the project is now clean and lint-free:</span></p>
<pre><code>$ fixit lint sourdough/baker.py
🧼 1 file clean 🧼</code></pre>
<p><span>When running Fixit 2 with auto-fixing lint rules, any code that triggers the lint rule is an opportunity to get an automatic replacement, improving the codebase with less effort from the developer. Applied more broadly, Fixit 2 can even be used as a tool to enact sweeping codemods against a large codebase, while leaving a lint rule in place to handle any matching code in the future.</span></p>
<h2><span>Try Fixit 2&nbsp;</span></h2>
<p><span>Fixit 2 is available today on </span><a href="https://pypi.org/project/fixit/2.0.0a1/" target="_blank" rel="noopener"><span>PyPI</span></a><span>. You can install and test Fixit 2 with </span><span><span>pip</span> <span>install</span> </span><span><span>fixit</span>.&nbsp;</span></p>
<p><span>We have a&nbsp;</span><a href="https://github.com/Instagram/Fixit/milestones" target="_blank" rel="noopener"><span>roadmap</span></a><span> with plans for future improvements and features, and a rich set of </span><a href="https://fixit.rtfd.io/en/latest/" target="_blank" rel="noopener"><span>documentation and user guides</span></a><span> to help you get started with Fixit 2 in your own projects or repositories. </span><span>We hope it proves useful in your projects, and we look forward to </span><a href="https://github.com/Instagram/Fixit/issues" target="_blank" rel="noopener"><span>hearing your feedback</span></a><span>!</span></p>

		
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ubuntu: ~20% More Performance Than Windows 11 on New AMD Zen 4 Threadripper (338 pts)]]></title>
            <link>https://www.phoronix.com/review/threadripper-7995wx-windows-linux</link>
            <guid>38378455</guid>
            <pubDate>Wed, 22 Nov 2023 12:46:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.phoronix.com/review/threadripper-7995wx-windows-linux">https://www.phoronix.com/review/threadripper-7995wx-windows-linux</a>, See on <a href="https://news.ycombinator.com/item?id=38378455">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-bg">
						
						<!-- google_ad_section_start -->
<article>


<div>

<p>With currently reviewing the HP Z6 G5 A workstation powered by the new 96-core <a href="https://www.phoronix.com/review/amd-linux-threadripper-pro-7995wx">AMD Ryzen Threadripper PRO 7995WX</a> Zen 4 processor, one of the areas I was curious about was how well HP's tuned Microsoft Windows 11 compares to that of Linux. In this article is looking at how the Microsoft Windows 11 performance is out-of-the-box with the HP Z6 G5 A workstation as configured by HP versus a clean install of Ubuntu 23.10 with the Linux 6.5 kernel.</p>
<p><a href="https://www.phoronix.com/image-viewer.php?id=threadripper-7995wx-windows-linux&amp;image=threadripper_windows_1_lrg" target="_blank"><img src="https://www.phoronix.net/image.php?id=threadripper-7995wx-windows-linux&amp;image=threadripper_windows_1_med" alt="Windows 11 on Threadripper PRO 7995WX"></a></p>
<p>Going back to the original AMD Ryzen Threadripper processors, Linux has long possessed a performance lead over Microsoft Windows. With Linux typically being the dominant OS of HPC systems and other large core count servers, the Linux kernel scheduler has coped better than various flavors of Windows when dealing with high core count processors. Paired with some early Windows issues that Microsoft and AMD has since worked through. Linux has gained a reputation of handling these HEDT systems better than Windows.</p>
<p><a href="https://www.phoronix.com/image-viewer.php?id=threadripper-7995wx-windows-linux&amp;image=threadripper_windows_3_lrg" target="_blank"><img src="https://www.phoronix.net/image.php?id=threadripper-7995wx-windows-linux&amp;image=threadripper_windows_3_med" alt="AMD Ryzen Threadripper PRO 7995WX processor"></a></p>
<p>In being curious about the difference for these new Zen 4 Threadrippers and now being able to push things to the extreme with the Threadripper PRO 7995WX 96-core / 192-thread processor, I set out for some fresh benchmarks. The HP Z6 G5 A review unit was preloaded with Microsoft Windows 11 Pro as configured by HP and so it makes for a nice perspective of looking at the Windows performance as validated by the hardware vendor. </p>
<p><a href="https://www.phoronix.com/image-viewer.php?id=threadripper-7995wx-windows-linux&amp;image=threadripper_windows_2_lrg" target="_blank"><img src="https://www.phoronix.net/image.php?id=threadripper-7995wx-windows-linux&amp;image=threadripper_windows_2_med" alt="Windows 11 on Threadripper PRO 7995WX"></a></p>
<p>After running through all of the Windows benchmarks of tests relevant to HEDT/workstations and that work similarly on Windows and Linux, I then set out to do the Linux benchmarks. Ubuntu 23.10 was run for providing a clean, out-of-the-box look at this common desktop/workstation Linux distribution. Benchmarks of other Linux distributions will come in time in follow-up Phoronix articles. But for the most part the Ubuntu 23.10 performance should be largely similar to that of other modern Linux distributions with the exception of Intel's Clear Linux that takes things to the extreme or those doing non-default tinkering to their Linux installations.</p>
<p><img type="image/svg+xml" width="100%" height="auto" src="https://phoronix.com/benchmark/result/amd-ryzen-threadripper-pro-7995wx---windows-11-vs-ubuntu-linux/result.svgz" alt="AMD Ryzen Threadripper PRO 7995WX - Windows 11 vs. Ubuntu Linux"></p>
<p>The HP Z6 G5 A for all testing was configured with the Ryzen Threadripper PRO 7995WX at default frequencies, 8 x 16GB DDR5-5200 Hynix RDIMMs, Samsung MZVL21T0HCLR-00BH1 NVMe SSD, NVIDIA GeForce RTX A4000 16GB graphics. A full review on the HP Z6 G5 A Threadripper workstation will be published in a separate article on Phoronix in early December.</p>
<p>From there the up-to-date Windows 11 Pro Build 22631 (H2'23) was tested against Ubuntu 23.10 with its stable release updates. Let's see how Windows and Ubuntu Linux perform on this 96-core / 192-thread Zen 4 workstation with 128GB of RAM.</p>
</div>

							


					
						</article>
						
<!-- google_ad_section_end -->
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ultra Fast Bert (233 pts)]]></title>
            <link>https://arxiv.org/abs/2311.10770</link>
            <guid>38378242</guid>
            <pubDate>Wed, 22 Nov 2023 12:20:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2311.10770">https://arxiv.org/abs/2311.10770</a>, See on <a href="https://news.ycombinator.com/item?id=38378242">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2311.10770.pdf">Download PDF</a></p><blockquote>
            <span>Abstract:</span>Language models only really need to use an exponential fraction of their neurons for individual inferences. As proof, we present UltraFastBERT, a BERT variant that uses 0.3% of its neurons during inference while performing on par with similar BERT models. UltraFastBERT selectively engages just 12 out of 4095 neurons for each layer inference. This is achieved by replacing feedforward networks with fast feedforward networks (FFFs). While no truly efficient implementation currently exists to unlock the full acceleration potential of conditional neural execution, we provide high-level CPU code achieving 78x speedup over the optimized baseline feedforward implementation, and a PyTorch implementation delivering 40x speedup over the equivalent batched feedforward inference. We publish our training code, benchmarking setup, and model weights.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Peter Belcak [<a href="https://arxiv.org/show-email/bea1b092/2311.10770">view email</a>]      <br>            <strong><a href="https://arxiv.org/abs/2311.10770v1">[v1]</a></strong>
        Wed, 15 Nov 2023 18:42:50 UTC (35 KB)<br>
    <strong>[v2]</strong>
        Tue, 21 Nov 2023 06:59:59 UTC (35 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sam Altman’s polarizing past (705 pts)]]></title>
            <link>https://www.washingtonpost.com/technology/2023/11/22/sam-altman-fired-y-combinator-paul-graham/</link>
            <guid>38378216</guid>
            <pubDate>Wed, 22 Nov 2023 12:17:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.washingtonpost.com/technology/2023/11/22/sam-altman-fired-y-combinator-paul-graham/">https://www.washingtonpost.com/technology/2023/11/22/sam-altman-fired-y-combinator-paul-graham/</a>, See on <a href="https://news.ycombinator.com/item?id=38378216">Hacker News</a></p>
Couldn't get https://www.washingtonpost.com/technology/2023/11/22/sam-altman-fired-y-combinator-paul-graham/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[LM Studio – Discover, download, and run local LLMs (406 pts)]]></title>
            <link>https://lmstudio.ai/</link>
            <guid>38377072</guid>
            <pubDate>Wed, 22 Nov 2023 09:38:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lmstudio.ai/">https://lmstudio.ai/</a>, See on <a href="https://news.ycombinator.com/item?id=38377072">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Project managers, ducks, and dogs marking territory (2013) (121 pts)]]></title>
            <link>https://rachelbythebay.com/w/2013/06/05/duck/</link>
            <guid>38376885</guid>
            <pubDate>Wed, 22 Nov 2023 09:13:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rachelbythebay.com/w/2013/06/05/duck/">https://rachelbythebay.com/w/2013/06/05/duck/</a>, See on <a href="https://news.ycombinator.com/item?id=38376885">Hacker News</a></p>
Couldn't get https://rachelbythebay.com/w/2013/06/05/duck/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Running Windows 98 on the Browser (161 pts)]]></title>
            <link>https://copy.sh/v86/?profile=windows98</link>
            <guid>38376731</guid>
            <pubDate>Wed, 22 Nov 2023 08:51:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://copy.sh/v86/?profile=windows98">https://copy.sh/v86/?profile=windows98</a>, See on <a href="https://news.ycombinator.com/item?id=38376731">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="boot_options">
        <h4>Select profile</h4>
        <table id="oses">
            <tbody><tr id="start_archlinux"><td><a href="https://copy.sh/v86/?profile=archlinux">Arch Linux</a> <small>12 MB &gt;_</small></td> <td>
            A complete Arch Linux restored from a snapshot, additional files are loaded as needed</td></tr>
            <tr id="start_dsl"><td><a href="https://copy.sh/v86/?profile=dsl">Damn Small Linux</a> <small>50 MB 💻</small></td> <td>
            Graphical Linux with 2.4 kernel, Firefox 2.0 and more. Takes 1 minute to boot.</td></tr>
            <tr id="start_buildroot"><td><a href="https://copy.sh/v86/?profile=buildroot">Buildroot Linux</a> <small>5.0 MB &gt;_</small></td> <td>
            Minimal Linux with busybox, Lua, tests, internet access, ping, telnet and curl. Exchange files through <code>/mnt/</code>.</td></tr>
            <tr id="start_reactos"><td><a href="https://copy.sh/v86/?profile=reactos">ReactOS</a> <small>18 MB 💻</small></td> <td>
            Windows-compatible OS. Restored from snapshot</td></tr>
            <tr id="start_windows2000"><td><a href="https://copy.sh/v86/?profile=windows2000">Windows 2000</a> <small>22 MB 💻</small></td> <td>
            Including Pinball and Internet Explorer with internet access. Additional sectors are loaded as needed.</td></tr>
            <tr id="start_windows98"><td><a href="https://copy.sh/v86/?profile=windows98">Windows 98</a> <small>9.7 MB 💻</small></td> <td>
            Including Minesweeper and Internet Explorer with internet access. Additional sectors are loaded as needed.</td></tr>
            <tr id="start_windows95"><td><a href="https://copy.sh/v86/?profile=windows95">Windows 95</a> <small>4.6 MB 💻</small></td> <td>
            Restored from snapshot</td></tr>
            <tr id="start_windows31"><td><a href="https://copy.sh/v86/?profile=windows31">Windows 3.1</a> <small>15 MB 💻</small></td> <td>
            Takes 15 seconds to boot</td></tr>
            <tr id="start_windows1"><td><a href="https://copy.sh/v86/?profile=windows1">Windows 1.01</a> <small>0.6 MB 💻</small></td> <td>
            Takes 1 second to boot</td></tr>
            <tr id="start_msdos"><td><a href="https://copy.sh/v86/?profile=msdos">MS-DOS 6.22</a> <small>4.4 MB &gt;_</small></td> <td>
            With Enhanced Tools, QBasic, vim, games and demos.</td></tr>
            <tr id="start_freedos"><td><a href="https://copy.sh/v86/?profile=freedos">FreeDOS</a> <small>0.5 MB &gt;_</small></td> <td>
            With nasm, vim, debug.com, Rogue, some games and demos.</td></tr>
            <tr id="start_freebsd"><td><a href="https://copy.sh/v86/?profile=freebsd">FreeBSD</a> <small>17 MB &gt;_</small></td> <td>
            FreeBSD 12.0 base install. Restored from snapshot.</td></tr>
            <tr id="start_openbsd"><td><a href="https://copy.sh/v86/?profile=openbsd">OpenBSD</a> <small>12 MB &gt;_</small></td> <td>
            OpenBSD 6.6 base install. Restored from snapshot.</td></tr>
            <tr id="start_9front"><td><a href="https://copy.sh/v86/?profile=9front">9front</a> <small>4.4 MB 💻</small></td> <td>
            A Plan 9 fork.</td></tr>
            <tr id="start_haiku"><td><a href="https://copy.sh/v86/?profile=haiku">Haiku</a> <small>38 MB 💻</small></td> <td>
            An open-source operating system inspired by BeOS. Restored from snapshot. Includes network support.</td></tr>
            <tr id="start_serenity"><td><a href="https://copy.sh/v86/?profile=serenity">SerenityOS</a> <small>17 MB 💻</small></td> <td>
            A graphical Unix-like operating system. Restored from snapshot.</td></tr>
            <tr id="start_helenos"><td><a href="https://copy.sh/v86/?profile=helenos">HelenOS</a> <small>7.9 MB 💻</small></td> <td>
            A graphical operating system based on a multiserver microkernel design</td></tr>
            <tr id="start_fiwix"><td><a href="https://copy.sh/v86/?profile=fiwix">FiwixOS</a> <small>15 MB &gt;_</small></td> <td>
            A Unix-like OS written from scratch. Includes Doom.</td></tr>
            <tr id="start_android"><td><a href="https://copy.sh/v86/?profile=android">Android-x86</a> <small>42 MB 💻</small></td> <td>
            An x86 port of the Android Open Source Project, version 1.6. Quite slow. Takes about 10 minutes to boot.</td></tr>
            <tr id="start_oberon"><td><a href="https://copy.sh/v86/?profile=oberon">Oberon</a> <small>1.2 MB 💻</small></td> <td>
            Native Oberon 2.3.6</td></tr>
            <tr id="start_kolibrios"><td><a href="https://copy.sh/v86/?profile=kolibrios">KolibriOS</a> <small>1.4 MB 💻</small></td> <td>
            Fast graphical OS written in Assembly</td></tr>
            <tr id="start_qnx"><td><a href="https://copy.sh/v86/?profile=qnx">QNX</a> <small>1.3 MB 💻</small></td> <td>
            QNX 4.05 Demo disk (no networking)</td></tr>
            <tr id="start_snowdrop"><td><a href="https://copy.sh/v86/?profile=snowdrop">Snowdrop</a> <small>0.3 MB &gt;_</small></td> <td>
            A homebrew operating system from scratch, written in assembly language</td></tr>
            <tr id="start_solos"><td><a href="https://copy.sh/v86/?profile=solos">Solar OS</a> <small>0.3 MB 💻</small></td> <td>
            Simple graphical OS</td></tr>
            <tr id="start_bootchess"><td><a href="https://copy.sh/v86/?profile=bootchess">Bootchess</a> <small>512 B &gt;_</small></td> <td>
            A tiny chess program written in the boot sector</td></tr>
            <tr id="start_sectorlisp"><td><a href="https://copy.sh/v86/?profile=sectorlisp">SectorLISP</a> <small>512 B &gt;_</small></td> <td>
            A LISP interpreter that fits into the boot sector</td></tr>
        </tbody></table>

        <hr>
        <h4>Setup</h4>
        <table>
            <tbody><tr>
                <td><label for="cd_image">CD image</label></td>
                <td>
                    
                </td>
            </tr>

            <tr>
                <td><label for="floppy_image">Floppy disk image</label></td>
                <td> <br></td>
            </tr>

            <tr>
                <td><label for="hda_image">Hard disk image</label></td>
                <td><br></td>
            </tr>

            <!--
            <tr>
                <td><label for="multiboot_image">Multiboot kernel image (experimental)</td>
                <td><input type="file" id="multiboot_image"><br></td>
            </tr>
            -->

            <tr>
                <td><label for="bzimage">Kernel image (bzimage)</label></td>
                <td><br></td>
            </tr>
            <tr>
                <td><label for="initrd">initrd</label></td>
                <td><br></td>
            </tr>


            <tr>
                <td colspan="2"><small>Disk images are not uploaded to the server</small><hr></td>
            </tr>

            <tr>
                <td><label for="memory_size">Memory size</label></td>
                <td>
                     MB<br>
                </td>
            </tr>

            <tr>
                <td><label for="video_memory_size">Video Memory size</label></td>
                <td>
                     MB<br>
                </td>
            </tr>

            <tr>
                <td><label for="networking_proxy">Networking proxy (leave blank to disable)</label></td>
                <td>
                    
                </td>
            </tr>

            <tr>
                <td colspan="2"><hr></td>
            </tr>

            <tr>
                <td><label for="disable_audio">Disable audio</label></td>
                <td>
                    <br>
                </td>
            </tr>

            <tr>
                <td><label for="enable_acpi">Enable ACPI (experimental)</label></td>
                <td>
                    <br>
                </td>
            </tr>

            <tr>
                <td colspan="2"><hr></td>
            </tr>

            <tr>
                <td><label for="boot_order">Boot order</label></td>
                <td>
                    
                 </td>
            </tr>
        </tbody></table>

        <br>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We have reached an agreement in principle for Sam to return to OpenAI as CEO (1807 pts)]]></title>
            <link>https://twitter.com/openai/status/1727206187077370115</link>
            <guid>38375239</guid>
            <pubDate>Wed, 22 Nov 2023 06:01:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/openai/status/1727206187077370115">https://twitter.com/openai/status/1727206187077370115</a>, See on <a href="https://news.ycombinator.com/item?id=38375239">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="ScriptLoadFailure"><form action="" method="GET"><div><p><span>Something went wrong, but don’t fret — let’s give it another shot.</span></p><br></div></form></div></div>]]></description>
        </item>
    </channel>
</rss>