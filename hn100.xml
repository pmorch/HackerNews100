<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 06 Oct 2024 17:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[ByteDance is abusing the free video downloading service Cobalt for mass scraping (129 pts)]]></title>
            <link>https://twitter.com/uwukko/status/1842538843720868016</link>
            <guid>41756209</guid>
            <pubDate>Sun, 06 Oct 2024 10:42:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/uwukko/status/1842538843720868016">https://twitter.com/uwukko/status/1842538843720868016</a>, See on <a href="https://news.ycombinator.com/item?id=41756209">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[HPy – A better C API for Python (201 pts)]]></title>
            <link>https://hpyproject.org/</link>
            <guid>41755183</guid>
            <pubDate>Sun, 06 Oct 2024 06:23:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hpyproject.org/">https://hpyproject.org/</a>, See on <a href="https://news.ycombinator.com/item?id=41755183">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody text">
    <section id="what-is-hpy"><h2>What is HPy?<a href="#what-is-hpy" title="Permalink to this heading">¶</a></h2>
<p>HPy provides a new API for extending Python in C.  In other words, you use
<code>#include &lt;hpy.h&gt;</code> instead of <code>#include &lt;Python.h&gt;</code>.</p>
</section><section id="what-are-the-advantages-of-hpy"><h2>What are the advantages of HPy?<a href="#what-are-the-advantages-of-hpy" title="Permalink to this heading">¶</a></h2>
<ul>
<li><p><strong>Zero overhead</strong> on CPython: extensions written in HPy run at the same
speed as "normal" extensions.</p></li>
<li><p><strong>Much faster</strong> on alternative implementations such as <a href="https://pypy.org/">PyPy</a>, <a href="https://www.graalvm.org/python">GraalPy</a>.</p></li>
<li><p><strong>Universal binaries</strong>: extensions built for the <a href="https://docs.hpyproject.org/en/latest/overview.html#target-abis">HPy Universal ABI</a> can be
loaded unmodified on CPython, PyPy, GraalPython, etc.</p></li>
<li><p><strong>A migration path</strong> for mixing legacy C-API calls with HPy API calls. Once
all the code is migrated, the extension can be compiled as a universal binary
that works on any CPython version, PyPy, or GraalPy.</p></li>
<li><p><strong>Debug mode</strong>: in <a href="https://docs.hpyproject.org/en/latest/debug-mode.html">debug mode</a>, you can easily identify common problems such
as memory leaks, invalid lifetime of objects, invalid usage of APIs. Have
you ever forgot a <code>Py_INCREF</code> or <code>Py_DECREF</code>? The HPy debug mode can be
activated at runtime to detect these mistakes for you on universal binaries.</p></li>
<li><p><strong>Nicer API</strong>: the standard Python/C API shows its age. HPy is designed to
overcome some of its limitations, be more consistent, produce better quality
extensions and to make it harder to introduce bugs.</p></li>
<li><p><strong>Evolvability</strong>: As nicely summarized in
<a href="https://peps.python.org/pep-0620/">PEP 620</a> the standard Python/C API
exposes a lot of internal implementation details which makes it hard to
evolve the C API. HPy doesn't have this problem because all internal
implementation details are hidden.</p></li>
</ul></section><section id="current-status"><h2>Current status<a href="#current-status" title="Permalink to this heading">¶</a></h2>
<p>HPy is under active development. <a href="https://hpyproject.org/blog/posts/2023/10/hpy-0.9.0-fourth-public-release/">0.9.0</a> is the latest alpha release but we
will soon leave the _alpha_ state and are working hard towards a stable release.</p>
<p>We feel that the HPy ABI is stable enough now that we can fulfill our backwards
and forwards binary compatibility promises with the upcoming release, and that
the API now covers enough use cases to migrate important packages (in
particular, checkout our <a href="https://github.com/hpyproject/numpy-hpy/tree/graal-team/hpy#readme">numpy</a> port). We also provide porting guides and
extensive documentation (in particular the <a href="https://docs.hpyproject.org/en/latest/api-reference/index.html">API reference</a>).</p>
<p>We are, of course, always open for design discussions and new reqiurements.</p>
<p>The Python/C API is huge. At the moment many popular functions are
available. Is something missing for the port of your favorite extension?
Please open an issue or even better a PR.</p>
<section id="hpy-compatible-extensions"><h3>HPy-compatible extensions<a href="#hpy-compatible-extensions" title="Permalink to this heading">¶</a></h3>
<p>The extensions that we are experimenting with include:</p>
<ul>
<li><p><a href="https://github.com/hpyproject/ultrajson-hpy">ultrajson-hpy</a>: this was the first real-world module to be ported to HPy. It is
a nice fit because it only exports functions (as opposed as custom types)
and requires only a small number of API functions.</p></li>
<li><p><a href="https://github.com/hpyproject/piconumpy">piconumpy</a>: as the name suggests, this is a minimal numpy-like module which
defines a custom type (similar to <code>ndarray</code> but with many fewer features of
course).</p></li>
<li><p><a href="https://github.com/hpyproject/numpy-hpy/tree/graal-team/hpy#readme">numpy</a>: one of our ambitious goals is to port numpy to HPy, and to use this
experience to better understand how to design the API. This port is close to
passing the test suite.</p></li>
<li><p><a href="https://github.com/hpyproject/matplotlib-hpy/">matplotlib</a>: Since Matplotlib also has a dependency to NumPy, the migration
to universal mode is not fully finished. HPy provides the legacy compatibility API
such that we can still call legacy C API functions from HPy and successfully
run the test suite.</p></li>
<li><p><a href="https://github.com/hpyproject/kiwi-hpy/">kiwi-solver</a>: A dependency of Matplotlib, it has been fully ported to
universal mode.</p></li>
</ul>
<p>Benchmarks and more information about the Matplotlib and kiwi-solver ports can
be found in the <a href="https://medium.com/graalvm/porting-matplotlib-from-c-api-to-hpy-aa32faa1f0b5">GraalVM blog post</a>. The benchmarks show that the HPy ports
have little impact on CPython performance, while enabling close-to-cpython
performance with GraalVM Python for the kiwi-solver complete HPy port.</p>
</section></section><section id="where-we-need-help"><h2>Where we need help<a href="#where-we-need-help" title="Permalink to this heading">¶</a></h2>
<ul>
<li><p><strong>Documentation:</strong> Our resources are very limited and we therefore concentrate
on technical tasks. We already wrote a significant amount of documentation
(see <a href="https://hpy.readthedocs.io/en/latest/">Documentation</a>) but it is not complete yet. If this non-coding work is
something you can do, let us know.</p></li>
<li><p><strong>Publicity:</strong> HPy is already well received among core developers of some
important projects. For instance, we are actively talking to Python, NumPy,
and Cython core developers. However, we need to get more package developers to
be interested in and even use HPy. We appreciate any help for advertising HPy
and we are also happy to help preparing talks, demos, etc.</p></li>
<li><p><strong>Tooling:</strong> This is also a topic we would need help. We are, for example,
thinking of migration helper tools that do all the boilerplate work that can
be automated when migrating a package from C API to HPy API.</p></li>
<li>
<p><strong>Packaging:</strong> There are several open questions we need to discuss and answer.</p>
<ul>
<li><p>How to package a universal extension and how to put it on PyPI?</p></li>
<li><p>How best to package HPy itself</p></li>
<li><p>How does HPy integrate with setuptools, mesonpy, or other build systems</p></li>
<li><p>Upstreaming completed forks of the packages listed below, or upstreaming
parts of the forks so the code does not suffer from bit-rot</p></li>
</ul>
</li>
<li><p><strong>Website and logo design:</strong> You don't like this website and the HPy logo?
Well, we have expertise in virtual machines, compilers, low-level programming,
etc, but zero expertise in web development or graphic design. <a href="https://github.com/hpyproject/hpyproject.org/">PRs are welcome
;)</a></p></li>
</ul></section><section id="more-info"><h2>More info<a href="#more-info" title="Permalink to this heading">¶</a></h2>
<ul>
<li><p><a href="https://hpy.readthedocs.io/en/latest/">Documentation</a></p></li>
<li><p><a href="https://hpyproject.org/blog/">HPy blog</a></p></li>
<li><p><a href="https://github.com/hpyproject/hpy/">Github repository</a></p></li>
<li><p><a href="https://discord.gg/xSzxUbPkTQ">HPy Discord server</a></p></li>
<li><p>#hpy <a href="irc://irc.libera.chat/hpy">IRC channel</a> (obsolete but still there)</p></li>
<li><p><a href="https://mail.python.org/archives/list/hpy-dev@python.org/latest">Mailing list</a></p></li>
<li><p>HPy is pronounced <cite>/h/ - pie</cite> (or using IPA notation: <cite>/eɪtʃ-paɪ/</cite>)</p></li>
</ul></section><section id="recent-blog-posts"><h2>Recent blog posts<a href="#recent-blog-posts" title="Permalink to this heading">¶</a></h2>
<!-- Begin post-list post_list_3083f6e11d7747c98bd37ec46c431723 -->

<!-- End post-list post_list_3083f6e11d7747c98bd37ec46c431723 -->
</section>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We need a real GNU/Linux (not Android) smartphone ecosystem (180 pts)]]></title>
            <link>https://old.reddit.com/r/linux/comments/1fx5fq0/we_need_a_real_gnulinux_not_android_smartphone/</link>
            <guid>41754074</guid>
            <pubDate>Sun, 06 Oct 2024 01:28:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://old.reddit.com/r/linux/comments/1fx5fq0/we_need_a_real_gnulinux_not_android_smartphone/">https://old.reddit.com/r/linux/comments/1fx5fq0/we_need_a_real_gnulinux_not_android_smartphone/</a>, See on <a href="https://news.ycombinator.com/item?id=41754074">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>We're in an age where Apple and Google have a near-monopoly over smartphone software. LineageOS and Android modding is dying. We all hate Big Tech monopolies, Google isn't the cool company it once was, Google is showing their true colors. Yet we let them rule our phones and didn't fight back. We <em>need</em> a real GNU/Linux smartphone ecosystem.</p>

<p>Why hasn't the PC ecosystem locked out Linux? Because Linux is too powerful that nobody can really fight it. We fought against Microsoft's monopoly and even if we don't have the Year of the Desktop Linux, we still have access. But why can <a href="https://github.com/melontini/bootloader-unlock-wall-of-shame">phone OEMs take back bootloader unlocking</a>? Because LineageOS isn't powerful enough. OEMs, developers and carriers give the middle finger and got us locked out.</p>

<p>LineageOS has a big flaw: it's dependent on Google. Verizon and banks are much more powerful than modders, so much that if they hate Android modding they both can force us to use stock firmware. Whereas Verizon and banks won't block you from using desktop Linux. It's also the fault of the modding community for not fighting back hard enough the way the GNU/Linux community fought the Microsoft monoculture.</p>

<p>For instance, Chase claims to "require" Windows or Mac but doesn't block Linux. Why? Because Linux is too powerful for Chase. Whereas Chase has blocked modded Android for years if you aren't into a cocktail of Magisk modules. One day, that won't work. I've given up on custom ROMs because of a declining ROM ecosystem, and even I'm not too happy about giving OEMs control over my phone.</p>

<p>While a GNU/Linux smartphone will lack apps, if the US wins their lawsuit against Apple we could push for Progressive Web Apps to make most mobile apps OS-agnostic and leave native apps for games. Heck, Waydroid would be <em>perfect</em> for a GNU/Linux phone: get the Android apps you need in a container.</p>

<p>Why can desktop Linux and Chromebooks not be niche platforms a la BeOS or AmigaOS? Because many desktop use cases went web so they're truly OS agnostic, aside from rouge developers. And even a user agent switcher can work in most cases. Yes, there's still Word and Photoshop and Autodesk, but enough people don't need them also.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[So thieves broke into your storage unit again (176 pts)]]></title>
            <link>http://oldvcr.blogspot.com/2024/10/so-thieves-broke-into-your-storage-unit.html</link>
            <guid>41754008</guid>
            <pubDate>Sun, 06 Oct 2024 01:09:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://oldvcr.blogspot.com/2024/10/so-thieves-broke-into-your-storage-unit.html">http://oldvcr.blogspot.com/2024/10/so-thieves-broke-into-your-storage-unit.html</a>, See on <a href="https://news.ycombinator.com/item?id=41754008">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-3419622014212783578" itemprop="description articleBody"><p>
If you've been wondering why entries have been a little slow lately, let me tell you a story.
</p><p>
All collectors tend to be a bit obsessive by nature, and us classic computer nerds probably pick up more hardware than we can (or should) store in our residence — especially if the loves of our lives aren't as enthusiastic about the hobby than we are — and thus have storage units for the overflow. I have two small "cold" climate control units, kept small so that I can be out of one or both relatively quickly, as well as a larger "hot" conventional unit at ambient temperature. The hot unit is indoors and not exposed directly to the sun, so it's not particularly hot for sunny southern California, but I keep working spare electronics, hard disks, tapes, etc. in the cold units as a precaution and use the hot unit for non-working parts units, books, magazines and other household items.
</p><p>
Of course, climate control units cost more, sometimes substantially, and thieves use this as a signal that more valuable stuff is likely to be kept there:
</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjO90CaD60O5BfZNhnsywtYKkepciLhXROdFXqd8aOcTOmRGugQ1FEZRTHp4GoDIVVJbk1doJvEa0XTCo7TVaHloP0k7jTJjCAjKZV7dq7k_A6P-j6o9BCpO5o11CRJZ-UhkeVclowFKRVKHxMtIdMCdToTlM2ZLJLZrz9ljAQKY2mzPqIjgSI_zXWvP0k/s4080/PXL_20240806_164239071.jpg"><img alt="" data-original-height="4080" data-original-width="3072" height="320" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjO90CaD60O5BfZNhnsywtYKkepciLhXROdFXqd8aOcTOmRGugQ1FEZRTHp4GoDIVVJbk1doJvEa0XTCo7TVaHloP0k7jTJjCAjKZV7dq7k_A6P-j6o9BCpO5o11CRJZ-UhkeVclowFKRVKHxMtIdMCdToTlM2ZLJLZrz9ljAQKY2mzPqIjgSI_zXWvP0k/s320/PXL_20240806_164239071.jpg"></a></p><p>
Both times I've been burglarized, they were the cold units. August was the second time. So, with crime being a nationwide topic, let's talk about what happens when your storage unit gets broken into and how to recover from it.
</p><p>
<a name="more"></a>
The first time was not quite two decades ago at a now defunct national chain. I was obviously rather younger then and didn't recognize that these units were incredibly poorly secured: they had simple plywood doors that opened out as opposed to metal roll-ups, the "latch" (such as it was) was just a regular safety hasp your padlock went on, and the door hinges were completely exposed. The exterior door to the climate control units (because there must be one to keep the climate controlled air in) was a regular unlocked door without any security cameras. According to the police, a couple of tweekers decided to use the climate units as free air conditioned apartments and intermittently took up residence in many of them, including mine. I had the good sense to use a disc lock instead of a regular padlock, but while they may have been drug-addled they turned out to be smarter than I was. Instead of attacking the lock they just pulled the hinge pins (only two) and got in without even touching the door, the lock or the hasp, and then were able to pull the door closed and escape discovery on walkthrus. By moving around they apparently weren't noticed for days.
</p><p>
When a storage unit is hit, the police report that the facility files and any insurance claim they make are completely separate from yours. They may or may not use information from you, but you still have to file your own. During their vacation in my two units they stole and likely hocked my family's Panasonic VHS video camera, which didn't have any tapes we cared about but would have been fun to keep, as well as my first digital camera, an Olympus Camedia something or other that used SmartMedia and still had some photos on it I realized later I never downloaded, a Fisher-Price PXL2000 (the famous pixelicious video camera that uses regular audio cassettes instead of videotape) I had in its original box that I got to use exactly once, and my spare boxed Mattel Intellivision. They also stole a few items from my highway signs collection and even spray-painted a couple I suppose for lulz, and generously left some rather grotty drug paraphernalia and dirty blankets in trade which the police took as evidence.
</p><p>
Only one of those items was recovered, the Intellivision (the one item I cared about <em>least</em> since that was a totally spare unit). It turned up at a pawn shop on the other side of the freeway. California law, at least at that time, said that the pawn shop had to be reimbursed what they paid: they couldn't sell it to you at retail, but they also were to be made whole. I went over with someone from the police department and I think it cost me $60 to recover it; I still have it. The cop also quietly pointed out all the things that were wrong with the storage units and told me to get out the rest of my stuff and leave at my earliest opportunity since they would almost certainly be hit again.
</p><p>
But what about making <em>me</em> whole? I was required to have insurance on the units, but I just had an apartment at the time and didn't carry renter's insurance, so I paid a premium as part of my rental fees to the chain's "insurance partner." If this smells like a kickback deal, you're right, and virtually every self-storage company engages in it. The idea is to offer you something cheap so that the insurance company will then protect the storage company by deflecting claims. The insurance is cheap because it sucks. I had a police report, obviously, but when I tried to submit the claims for each unit — on paper, as we did in the Dark Ages at the beginning of the 21st century — they were rejected for insufficient documentation (because who keeps a receipt for the Intellivision you bought five years ago from a thrift store?) and I was hardly in a position to sue them over it.
</p><p>
As the cop instructed, I bailed out of there a couple months later. The doors had not been upgraded, there was still no lock on the exterior entrance, and the manager said installing cameras would be too expensive. I made sure to note on my "exit survey" that I was leaving because their security was worse than a Russian garrison after a vodka waffle party. The chain subsequently folded and got sold to some other megastorage company and I imagine they're still too cheap to do anything about it.
</p><p>
The current break-in was a bit more professional because the facility I moved to was obviously more serious about security (they could hardly have been less). When I first moved in, the climate control section had proper roll-up doors and sliding security latches, and there were cameras scattered around the premises, but the exterior door was also just a regular door and usually left unlocked. One of the local unhoused encampments noticed this and moved in, leaving a mess and requiring forcible eviction by the police, though they didn't manage to get into any occupied units. After that the management installed a cipher lock-type door handle and issued unique codes to each tenant.
</p><p>
We own a house now, but my particular homeowner's insurance policy doesn't cover rental units (I read every page, believe me). Even though the "partner" insurance was useless the first time around, I still went with the company this facility was getting kickbacks from since it was the cheapest alternative. After all, I figured if I got hit again they wouldn't pay off this time either, so I might as well spend as little money as possible on it.
</p><p>
The door handle only controlled the latch; there was no deadbolt. So what do you do to attack a door like that? You crowbar it and pry the latch open (see also <a href="https://xkcd.com/538/">the well-known xkcd</a>). The picture at the beginning was what it looked like when I came to survey the damage. The manager had effected some emergency repairs and installed a temporary keyed deadbolt, requiring me to go to the office to get inside.
</p><p>
And what do you do to attack disc locks? Well, if you're not handy with a pick, you drill them.
</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj2aKtVbiekkhiD5SeCwyV4p_wQNZ2RiiGy7tMIZYMs_vhorPEA5ocSxuGC-gf0uZvgo4J4UGdHiEd2mJmP4HXebuKBx_TlM_fopUkbWIuhWStqUFTytfygTMTbwOwgwWQJZJyOh6nyyQwzjGAKoYi0sMDM5u7w6edG6gIHZkoWqowMKJR5ylkDK_SZWWQ/s4080/PXL_20240806_234051528~2.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj2aKtVbiekkhiD5SeCwyV4p_wQNZ2RiiGy7tMIZYMs_vhorPEA5ocSxuGC-gf0uZvgo4J4UGdHiEd2mJmP4HXebuKBx_TlM_fopUkbWIuhWStqUFTytfygTMTbwOwgwWQJZJyOh6nyyQwzjGAKoYi0sMDM5u7w6edG6gIHZkoWqowMKJR5ylkDK_SZWWQ/s320/PXL_20240806_234051528~2.jpg" width="320"></a></p><p>
The drilled lock is on the right where you can see the small hole in the keyway. This lock was on the first unit, in which they upended several items and ended up stealing my Atari Portfolio in a camera bag (the good one, of course, not the flaky spare), a boxed set of Agenda VR3 PDAs (the famous MIPS Linux-based one), and an 867MHz Titanium PowerBook G4 in its original box. This unit was somewhat defective in that it has an iffy LCD CCFL that starts up pink. Later after submitting the claim and police report I also noticed they stole a box of Apple Pro Speakers (wait until they try to hook them up to anything).
</p><p>
For some reason they didn't drill the lock on the second unit and instead took several whacks at it with some sort of sharp instrument, but this only made the lock completely inoperable. They then pried the latch off, but the shelves in that unit interfere with the roll-up door unless you know the trick and they apparently weren't able to get inside. (The manager had also replaced the latch before I arrived.) In the process, however, they did succeed in knocking some items around including a couple of hard disks off the shelf from my Outbound laptop systems. They were fortunately backed up before storage and should be replaceable with some other 2.5" IDE equivalent device because they won't spin up now.
</p><p>
Having learned my lesson from the first burglary, I had nothing irreplaceable in the units, though I did have some items from my Tomy Pyuuta collection in the second one temporarily. They also didn't go through any boxes, likely because they didn't have any time: the next scheduled security patrol arrived about ten or fifteen minutes after they gained access and discovered the theft, so no doubt they hauldassed when they saw the guard coming back on rounds. I also wasn't the only person burglarized, though the manager wouldn't tell me exactly how many other units were hit. For the units that were hit, he provided us with covers that slide onto the latch:
</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj8AsDE9oX7tlytR3wsz2TBYf3FTWTKEE3huq90mdqcXdTnraxnSPSIMEza4G1NYMqmIvlabOTPoW0XNnvdUOpLlCLkVFOtbSMbLiTtJcWA2gkfwSgGQ7zM4aA-4D_GFqFM2kdhKT1Cf5cRM72awazjNYPs8iNi7JXIw57Tgs-J8INrc0NXhN4Pv1Dzcqs/s4080/PXL_20240806_184600014.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj8AsDE9oX7tlytR3wsz2TBYf3FTWTKEE3huq90mdqcXdTnraxnSPSIMEza4G1NYMqmIvlabOTPoW0XNnvdUOpLlCLkVFOtbSMbLiTtJcWA2gkfwSgGQ7zM4aA-4D_GFqFM2kdhKT1Cf5cRM72awazjNYPs8iNi7JXIw57Tgs-J8INrc0NXhN4Pv1Dzcqs/s320/PXL_20240806_184600014.jpg" width="320"></a></p><p>
I can see how this would make it very difficult to use boltcutters or an angle grinder on the lock shackle, but if you can get a key in it, you can get a wrench or a drill bit in it, so I'm not sure if it adds any meaningful security otherwise. I wandered around to see if the covers were on other units and I counted a few, though I couldn't say if everyone who got one was using it.
</p><p>
This time, same city, the police never showed for my units and I don't know if they came to the premises at all. (Before you ask, I have absolutely no idea if <a href="https://en.wikipedia.org/wiki/2014_California_Proposition_47">Proposition 47</a> has anything to do with it.) I submitted the police reports online and got my case numbers, one for each unit as usual, and then did an online submission with the insurance company including the photos that I had.
</p><p>
The insurance company took about a week to assign an adjuster. Despite having itemized the missing items twice on the police report and in the initial submission, I was asked to complete <em>and notarize</em> another inventory sheet for each unit <em>on paper</em>. The adjuster also wanted any proof of purchase or ownership, such as "a receipt, invoice, order or shipping confirmation, or debit/credit statement." Naturally, these items are so old and have been in there so long that none of this exists. The situation sounded suspiciously like I was going to get stiffed again and I complained to the adjuster that if I had to pay a notary to notarize two documents that may never result in a payout, I'd be out even more money as well as time. (A fairly cynical way of discouraging claims by people for whom that amount of money is more significant.)
</p><p>
To my surprise, although it took several E-mails and another ten days, the adjuster agreed to waive the notarization requirement. (I'm not even sure what the notarization step was accomplishing: the inventory sheets aren't affidavits.) The documents wanted purchase price and location, which I could only do from memory, and a replacement cost, which I did by eBay searches for comparable items. My insurance limit is $2,000 each unit with a $100 deductible, waived if you have a disc lock installed, which I did. I made sure the destroyed disc locks were listed as part of the claim and I determined a total replacement cost of $512.23 in the first unit and $57.23 in the second one.
</p><p>
I didn't hear anything for a month and E-mailed the adjuster again. The next day they paid off on the claim: $269.40 and $48.96. "The policy you have is based on the Actual Cash Value (ACV) of your items, which means depreciation needs to be applied to the item(s) based on their age. I've adjusted the loss presented and added in the applicable sales tax." Since I figured the alternative was $0 and extra vitriol for this blog post, I agreed. The checks arrived this week and we deposited them. They do not make me whole, though of course none of these items are critical.
</p><p>
Here's the lessons learned for those of us with classic computers in storage:
</p><ul>
<li>The quality of the facility's security matters. The best burglary is the one that never happens. If one does, higher quality facilities are more likely to work with less unreasonable partner insurance agencies.
</li><li>Store nothing you really care about in a storage unit. Real burglars notwithstanding, the other kind of theft you may have to worry about is an unscrupulous manager who says you didn't pay your bill and auctions it off. Such horror stories aren't common, but I know people who say this has happened to them, keeping in mind I'm only hearing their side of the story. For example, <a href="http://oldvcr.blogspot.com/2024/03/after-41-years-my-first-assembly.html">my original Tomy Tutor</a>, the actual computer I got when I was seven in its actual box with its actual accessories that actually still works, will never go in storage. Neither will my first suitcase Commodore KIM-1.
</li><li><em>Use a disc lock.</em> They're certainly better than the cheapo padlocks you buy at the store, but most insurance companies will also reduce or waive your deductable if you have what they consider to be a proper lock, and that usually means a disc lock. If you use the disc lock the storage facility sells, you'll likely pay an additional markup on it, but it's also guaranteed to be acceptable to their partner insurance company. Plus, you can claim the replacement cost.
</li><li>How you do inventory may not have much effect on the success of your claim. The advice that you should take photos of your storage unit each time you're in it is a good one and you might as well do it if you have the presence of mind, but it's not really what they're asking for on claims ("you could have lost it, you could have misplaced it, that's not proof of ownership," etc.), and there's no guarantee you'll have photographed what in fact got taken. A beautiful spreadsheet doesn't prove ownership either. In both cases they wanted receipts and I didn't have any of those. In the first case, the insurance company told me to pound sand. In the second case, they paid off. I'll let you know if a pattern ever emerges, but the photos didn't have anything to do with it in either situation.
</li><li>Bulky and heavy items are ignored. Fortunately, many classic computing items are bulky and heavy, and they take up space in a truck. If it's going to slow them down and it's not clear they can fence it, they might damage it but they probably won't take it. By the way, claim damaged items too, not just stolen ones. You might as well ask.
</li><li>Something neat-looking that's light and portable might get nicked. The Portfolio was in a camera bag, so they probably figured it was a camera and yoinked it. Moreover, anything with an Apple logo that's light and portable <em>will</em> get nicked.  These aren't usually technologically savvy people and they know that Apple makes this cool thing called an iPhone and some watch thing and people like those. So they took the PowerBook and Pro Speakers, even though they probably didn't fetch much when they tried to sell them.
</li><li>Conversely, if you make the thieves' job harder, they'll take less. Gangs that hit self-storage units aren't generally the ones that do a whole lot of preplanning and research. Other than maybe renting a unit themselves to look around and get a gate code, they usually won't know the exact interior layout or what units are occupied, and since they won't know what time window they have before any guards or staff come around they'll prefer to grab what's obvious. In my case, the door on the second unit won't fully open without a bit of particular fiddling, so they obviously gave up. Messy units are harder to work in but also harder to steal from. Put high value items in the back and out of view behind big heavy ones. Hide production packaging in non-descript boxes: they <em>didn't</em> get any of <a href="https://arstechnica.com/gadgets/2024/04/palm-os-and-the-devices-that-ran-it-an-ars-retrospective/">my Palm Pilot collection</a>, for example, despite being small, portable, frequently in their original boxes and looking like something of value, because they were all in plain cardboard boxes with opaque descriptions in Sharpie marker. But they got the Agenda VR3 box because it was out on the shelf.
</li><li>You don't get what you don't ask for, and you won't get what you don't constantly get on their case about. The adjuster was clearly not a malignant person, just overworked, because this is a cut-rate insurance company who tries to screw their employees just as much as their covered individuals. The squeaky wheel gets the check.
</li><li>You will never get the full replacement value of your items. Ever. In the end, it's just stuff. I'm not happy it got broken into, but I'm not going to shrivel up or shoot myself in the head over it either. Nothing was in there I can't live without.
  </li></ul><p>
Since the break-in occurred, the temporary deadbolt was replaced with a new cipher lock, but this one controls a full deadbolt, not just a door latch. The facility is also gradually converting the roll-up doors to pick-resistant cylinder locks and dispensing with padlocks altogether. I'm hopeful I won't be writing a third blog post on this topic in a few years.
</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Arthur Whitney's one liner sudoku solver (254 pts)]]></title>
            <link>https://dfns.dyalog.com/n_sudoku.htm</link>
            <guid>41753741</guid>
            <pubDate>Sun, 06 Oct 2024 00:00:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dfns.dyalog.com/n_sudoku.htm">https://dfns.dyalog.com/n_sudoku.htm</a>, See on <a href="https://news.ycombinator.com/item?id=41753741">Hacker News</a></p>
<div id="readability-page-1" class="page">
<pre>svec ← {shape←⍬⍴(⍴⍵)*÷2} ##.<a href="https://dfns.dyalog.com/c_sudoku.htm">sudoku</a> prob  ⍝ Solution vector for Sudoku problem ⍵.

The  Sudoku  puzzle  consists  of a 3×3 grid of 3×3 boxes, each cell of which is
either  empty  or contains a number in the range 1 to 9. A typical problem might
look like this:

    ┌─────┬─────┬─────┐
    │· · 1│6 9 ·│5 · ·│
    │4 · ·│2 7 ·│· · 1│
    │· 7 ·│· · ·│· 9 ·│
    ├─────┼─────┼─────┤
    │· · ·│· · ·│· 3 ·│
    │· · ·│4 3 ·│· · 7│
    │· · ·│7 8 ·│6 · ·│
    ├─────┼─────┼─────┤
    │· · 6│· · ·│8 · ·│
    │· 2 ·│1 4 ·│· 6 ·│
    │· 1 ·│3 5 ·│· 4 ·│
    └─────┴─────┴─────┘

The challenge is to supply the missing numbers in such a way that:

    each 3×3 box and
    each 9-item row and
    each 9-item column

contains each of the 9 numbers with no repeats.

A solution to the above problem might be:

    ┌─────┬─────┬─────┐
    │3 8 1│6 9 4│5 7 2│
    │4 6 9│2 7 5│3 8 1│
    │2 7 5│8 1 3│4 9 6│
    ├─────┼─────┼─────┤
    │7 9 4│5 6 2│1 3 8│
    │6 5 8│4 3 1│9 2 7│
    │1 3 2│7 8 9│6 5 4│
    ├─────┼─────┼─────┤
    │5 4 6│9 2 7│8 1 3│
    │9 2 3│1 4 8│7 6 5│
    │8 1 7│3 5 6│2 4 9│
    └─────┴─────┴─────┘

The  puzzle  may  be generalised to accept problems of shape other than 3×3×3×3,
see examples below.

Argument  matrix [prob] contains numbers 1-9 in occupied cells and 0s otherwise.
Optional  left argument [shape] specifies the box shape for non-square problems.
The result is a vector of all solution matrices.

Technical notes:

This solution was supplied by Veli-Matti Jantunen, who says:

⍺ may be used to denote the sudoku rectangle, the default is 2/(↑⍴⍵)*0.5 (eg. if
"mat" is a 6x6 matrix and the sub area is 2 3, the call must be 2 3 sudoku mat).

The result is a vector of all the solutions found, or ⍬ (no solutions) or ''
(error - should not happen, but if there are zillions of results)

The algorithm is simple:
   handle the matrix as a vector
   the rows, columns and sudoku areas are denoted by index vectors
   do the basic checking for the puzzle (i.e. polish) and with the main function
    check one alternative from the list at time:
     filter all the possible elements for all the cells
      if at least one cell is empty = no solution -&gt; take the next from the list
      if one cell contains more than one number -&gt; select the cell from the
         tightest group and add every combination (from this cell) to the list
      if all cells contain one number = solution -&gt; take the next from the list.

Veli-Matti  also  provides this new-from-old problem shuffler:

    Shuffle←{
    ⍝| Shuffle the original sudoku table to another one ;)
    ⍝| ⍺: sudoku box (use for e.g. 6x6 tables, like 2 3 Shuffle table).

        ⍺←(⍴⍵)*0.5 ⋄ (⎕IO ⎕ML ⎕RL)←1 3(⎕TS+.*2)
        (¯1+?3⍴2){(⌽⍣(↑⍺))(⍉⍣(↑1⌽⍺))(⊖⍣(↑⌽⍺))⍵}⍵{(0,(↑⍴⍺)?↑⍴⍺)[⍵⌷⍺+1]}(↑⍴⍵){∊{⍵[(⍴⍵)?⍴⍵]}{⍵[(⍴⍵)?⍴⍵]}¨⍵⊂⍳⍺}¨⍺/¨⍳¨⌽⍺
    }

David Crossley supplies an alternative coding:

    sudoku←{⎕IO←0
        ⍝ Sudoku - ⍵: N×N setup where box size N*÷2 is integral
        ⍝ The setup is a valid arrangement in some cells of numbers from 1-N; the rest are 0´s.
        ⍝ Each row, column and the N boxes of each result must contain all numbers 1 to N.
·
        valid←{                                 ⍝ Validate.  ⍵ be...
            (2≠⍴⍴⍵)∨(≠/2↑⍴⍵)∨0≠1|(⊃⍴⍵)*÷2:1     ⍝ a square matrix with an integral box size
            ((⍴⍵)⍴0)≢⊃1↑0⍴⊂⍵:1                  ⍝ numeric N×N matrix
            1∊~⍵∊⍳1+⊃⍴⍵:1                       ⍝ numbers 0-N only
            0=+/,⍵                              ⍝ at least one number
        }
        box←{⍵⌿(⍵×⍳⍵)∘.+⍵/⍳⍵}                   ⍝ Box template ⍵:sq root of size
        chk←{1∊1&lt;+⌿(1+⍳⊃⍴⍵)∘.=⍵}                ⍝ Check for duplicates of 1-9 in ⍵
        sets←{⍉⍺{(⍺=+⌿⍵)/⍵}(⍵⍴2)⊤⍳2*⍵}          ⍝ LM sets of ⍺ unique nrs from 1 to ⍵
        iv←{⍵/⍳⍴⍵}                              ⍝ idiom
        un←{(⍳⍴⍵)=⍵⍳⍵}                          ⍝ LV of first unique items in vector
        indx←{⍺[⍵]}                             ⍝ index ⍺ by ⍵
        search←{                                ⍝ Search possibilities for a cell
            r p←⍵
            p←⍺ adjust p                        ⍝ adjust possibles for current cell
            ~0∊⊃(r p)←rules r p:r               ⍝ resolve using logical tests
            (next p)∇¨⊂r p                      ⍝ search cell with minimum possibilities
        }
        adjust←{                                ⍝ Adjust cell to single value
            0&gt;⊃⍺:⍵                              ⍝ no cell
            p←⍵ ⋄ p[;⊃⍺]←⍺[1]=⍳⊃⍴⍵ ⋄ p          ⍝ item ⍺ in to 1, rest of cell to 0
        }
        next←{                                  ⍝ Cell-value pairs for possible values
            ⍵{⍵,¨iv ⍺[;⍵]                       ⍝ in the cell with the minimum nr of
            }{1⍳⍨⍺\{⍵=⌊/⍵}⍺/⍵}/{(⍵&gt;1)⍵}+⌿⍵      ⍝ possibilities (2 or more)
        }
        rules←{                                 ⍝ Apply logic tests to resolve cells
            ~0∊⊃z←sole ⍵:z                      ⍝ detect single-value possibilities
            ~0∊⊃z←↑singles/(⍳⊃⍴RCB),⊂z:z        ⍝ single-valued cells in row/col/box
            ~0∊⊃z←↑uniques/(⍳(⍴⊃z)*÷2),⊂z:z     ⍝ values unique to one row/col of a box
            ~0∊⊃z←↑NinN/4 3 2,⊂z:z              ⍝ detect N vals in N cells
            ~0∊⊃z←↑matches/4 3 2,⊂z:z           ⍝ matches of N vals in N cells of r/c/b
            z≡⍵:⍵                               ⍝ finish if no state change
            ∇ z                                 ⍝ otherwise repeat rules
        }
        sole←{                                  ⍝ Resolve sole value cells. ⍺:soln, ⍵:possibles
            ~0∊⊃r p←⍵:⍵                         ⍝ pass through
            0∊n←+⌿p:⍬ ⍬                         ⍝ no go
            (⍴r)=i←1⍳⍨n×r=0:⍵                   ⍝ no remaining single value cells
            r[i]←1+p[;i]⍳1                      ⍝ set result value
            p[¯1+i⊃r;i~⍨iv i⊃Masks]←0           ⍝ remove as possible value in related cells
            ∇ r p                               ⍝ check for further single-value cells
        }
        singles←{                               ⍝ Fix box cells that resolve to single value
            ~0∊⊃r p←⍵:⍵                         ⍝ pass through
            i←RCB[⍺;]                           ⍝ cells in row, col or box
            b←i/p                               ⍝ possibles for cells
            ~1∊l←(1=+/b)∧~(1+⍳⊃⍴p)∊i/r:⍵        ⍝ values that occur just once ex result values
            c←(iv i)[(↓l⌿b)⍳¨1]                 ⍝ cells where they occur
            p[;c]←(⍳⊃⍴p)∘.=iv l                 ⍝ modify to just the single value
            sole r p                            ⍝ resolve the sole values
        }
        uniques←{                               ⍝ Unique to one row/col of the ⍺´th box
            ~0∊⊃r p←⍵:⍵                         ⍝ pass through
            b←p[;⍺⊃Box]                         ⍝ box cell values
            i←(⍴i)⊤iv,(i&gt;1)∧i=⍉(⌽⍴i)⍴+/i←+/b    ⍝ 2 or more unique to a row
            j←(⍴j)⊤iv,(j&gt;1)∧j=⍉(⌽⍴j)⍴+/j←+/[1]b ⍝ 2 or more unique to a column
            (0∊⍴i)∧0∊⍴j:⍵                       ⍝ none found
            s←⊃⌽⍴b                              ⍝ box size
            p[(s(⍺ rinds)↓i),s(⍺ cinds)↓j]←0    ⍝ remove vals from cols of other boxes
            sole r p                            ⍝ resolve sole values
        }
        rinds←{                                 ⍝ uniques: row pick inds to update
            0=⍴⊃⍵:0⍴⊂0 0
            ↑,/(0⊃⍵),¨¨((⍺*2)×(1⊃⍵)+¨⍺×⌊⍺⍺÷⍺)+⊂(⍳⍺*2)~(⍺×⍺|⍺⍺)+⍳⍺
        }
        cinds←{                                 ⍝ uniques: column pick inds to update
            0=⍴⊃⍵:0⍴⊂0 0
            ↑,/(0⊃⍵),¨¨((1⊃⍵)+¨⍺×⍺|⍺⍺)+⊂(⍺*2)×(⍳⍺*2)~(⍺×⌊⍺⍺÷⍺)+⍳⍺
        }
        matches←{                               ⍝ Resolve exact matches on ⍺ possible values
            ~0∊⊃r p←⍵:⍵                         ⍝ pass through
            0∊n←+⌿p:⍬ ⍬                         ⍝ no go if no possibilities for a cell
            i←(n=⍺){iv ⍺\un 2⊥⍺/⍵}p             ⍝ cells with ⍺ possible values
            sole↑(⍺ match)/i,⊂⍵                 ⍝ resolve each ⍺-set then sole values
        }
        match←{                                 ⍝ Resolve exact matches in row/col/box
            ~0∊⊃r p←⍵:⍵                         ⍝ pass through
            ⍺⍺≠+/p[;⍺]:⍵                        ⍝ cell no longer has ⍺⍺ values
            ⍺⍺&gt;+/l←p[;⍺]∧.=p:⍵                  ⍝ occurrences of matches with the ⍺´th cell
            1∊⍺⍺&lt;n←+/l/RCB:⍬ ⍬                  ⍝ no go if &gt;⍺⍺ matches in any row/col/box
            ~1∊n=⍺⍺:⍵                           ⍝ no r/c/b´s with exactly ⍺⍺ matches
            p←↑(l do_matches)/(iv n=⍺⍺),⊂p      ⍝ remove matched vals from related cells
            sole r p                            ⍝ resolve singles then sole values
        }
        do_matches←{                            ⍝ Remove vals from other row/col/box cells
            p←⍵                                 ⍝ ⍺⍺ marks all occurrences of match
            p[iv p[;⍺⍺⍳1];iv RCB[⍺;]∧~⍺⍺]←0     ⍝ filter occurrences in the ⍺´th row/col/box
            p
        }
        NinN←{                                  ⍝ Reduce ⍺-sets in exactly ⍺ cells of a row/col/box
            ~0∊⊃r p←⍵:⍵                         ⍝ pass through
            s←⍺ sets(⍴r)*÷2                     ⍝ all combns of sets of ⍺ values
            l←r=0                               ⍝ non-singular cells
            n←(⍺=(s∨.∧p)+.∧⍉RCB)∧⍺=(s∨.∧l\l/p)+.∧⍉RCB ⍝ set-RCB combinations with ⍺ occurrences
            i←↓[0](⍴n)⊤iv,n                     ⍝ indices of set-RCB combns
            sole↑(s do_NinN)/i,⊂⍵               ⍝ reduce non-set values from cells then sole values
        }
        do_NinN←{                               ⍝ Remove values not in set ⊃⍺ from identified cells
            i←⍺⍺[0⊃⍺;] ⋄ j←RCB[1⊃⍺;]            ⍝ set values / row-col-box mask
            r p←⍵ ⋄ p[iv~i;iv j∧i∨.∧p]←0 ⋄ r p  ⍝ [vals not in set;cells in set and in row/col/box]
        }
        setup←{                                 ⍝ Setup LM possibilities per cell
            p←(⊂1+⍳⊃⍴⍵)~¨Masks/¨⊂,⍵             ⍝ possibles per cell, except...
            ((0≠,⍵)/p)←0~⍨,⍵                    ⍝ adjust given cells to single value
            (1+⍳⊃⍴⍵)∘.∊p                        ⍝ convert to LM vals×cells
        }
        res←(⍴⍵)∘{⍺∘⍴¨((⍴⍵)⍴(×/⍺)↑1)⊂⍵}         ⍝ Shape result(s)
·
        valid ⍵:'Invalid setup'                 ⍝ Validate
        RCB←{,¨(⍵/⍳⍵)(⍵ ⍵⍴⍳⍵)(box ⍵*÷2)}⊃⍴⍵     ⍝ Rows-Columns-Boxes
        Masks←↓↑∨/{⍵∘.=⍵}¨RCB                   ⍝ Sets per cell of related row/col/box cells
        RCB←↑⍪/(⊂⍳⊃⍴⍵)∘.=¨RCB                   ⍝ Selection vectors for rows,columns,boxes
        Box←((⍴⍵)*÷2)∘⍴¨(↓RCB[(2×⊃⍴⍵)+⍳⊃⍴⍵;])/¨⊂⍳×/⍴⍵ ⍝ Box indices
        1∊chk¨Masks/¨⊂,⍵:'Invalid setup'        ⍝ Duplicates in row/column/box
·
        res∊¯1 0 search(,⍵)(setup ⍵)
    ⍝:  ADC 5Jun2005
    }

Finally, here is Arthur Whitney's amazing solution in K 5:

    x(,/{@[x;y;]'(!10)^x*|/p[;y]=p,:,3/:-3!p:!9 9}')/&amp;~*x

Translated by Phil Last into a D-function:

    sudoku←{⎕io←0       ⍝ Whitney/Last
        p←{(↑⍵)∘{(⍺∨.=⍵)/⍳n×n}¨,⍵},(n*÷2){⍵,⍺⊥⌊⍵÷⍺}¨⍳n n←⍴⍵
        m←{(⊂⍵)⌈(⊂⍺=⍳⍴⍵)×(1+⍳n)~⍵[⍺⊃p]}
        (⍴⍵)∘⍴¨⊃{⊃,/⍺ m¨⍵}/{(⍸⍵=0),⊂⊂⍵},⍵
    }

Morten Kromberg's recasting defines some of K's  constructs explicitly and so is
closer to the original.  Note that, like the K version, it takes and returns 81-
vectors, rather than matrices.

    sudoku←{
    ⍝ Define one k fn and one op missing from APL
         wh←{⍸⍵≠0}              ⍝ k '&amp;' function
         mg←{a←⍺ ⋄ a[⍺⍺]←⍵ ⋄ a} ⍝ merge operator: r←old (indexes mg) new

         rcq←(↑,⍳9 9),3/,3⌿3 3⍴⍳9   ⍝ Row, Column, Quadrant
         p←{wh rcq∨.=⍵}¨↓rcq        ⍝ Cells in same row, col or quadrant
         nzd←1+⍳9                   ⍝ Non-zero digits for a little more speed
         ⊃{⊃,/⍺{⍵∘(⍺ mg)¨nzd~⍵[⍺⊃p]}¨⍵}/(wh ⍵=0),⊂⊂⍵ ⍝ kapow!
    }

Roger Hui presents this in the following more beautiful form, generalised for
non-square puzzles:

    Sudoku←{⍺←(⍴⍵)*÷2                   ⍝ Solutions of shape-⍺ Sudoku puzzle ⍵.
        svec ← {⊃pvex/(emt ⍵),⊂⊂⍵}      ⍝ solution vector
        pvex ← {⊃,/⍺∘pvec¨⍵}            ⍝ vector of placements
        pvec ← {(⍺ avl ⍵)⊣@(⊂⍺)¨⊂⍵}     ⍝ placements
        avl  ← {(⍳⊃⍴⍵)~⍵×⊃⍺⌷CMAP}       ⍝ list of available numbers
        emt  ← {(,⍵=0)/,⍳⍴⍵}            ⍝ row &amp; column indices of empty cells

        rcb  ← {(⍳⍴⍵),¨⍺ box(⍴⍵)÷⍺}     ⍝ row/column/box numbers
        box  ← {(⊃⍺)⌿(⊃⌽⍺)/⍵⍴⍳×/⍵}      ⍝ box numbers for a puzzle of size ⍵*2
        cmap ← {⊂[⍳2]1∊¨⍵∘.=⍵}          ⍝ contention map for puzzle ⍵
        CMAP ← cmap ⍺ rcb ⍵             ⍝ contention map for puzzle

        svec ⍵                          ⍝ vector of solutions.
    }

See →<a href="https://dfns.dyalog.com/n_sudoku_bfs.htm">sudoku_bfs</a>← for an illustration of this algorithm.
See "Learn" in: <a href="http://www.tryapl.org/">http://www.TryAPL.org</a> for step-by-step demonstration.
Watch: <a href="http://www.youtube.com/watch?v=DmT80OseAGs">http://www.youtube.com/watch?v=DmT80OseAGs</a> to see it in action.

Thanks also to Maurice Jordan and John R. Clark for suggestions.

Examples:

    s33                                 ⍝ sample 3×3 problem.
0 0 1 6 9 0 5 0 0
4 0 0 2 7 0 0 0 1
0 7 0 0 0 0 0 9 0
0 0 0 0 0 0 0 3 0
0 0 0 4 3 0 0 0 7
0 0 0 7 8 0 6 0 0
0 0 6 0 0 0 8 0 0
0 2 0 1 4 0 0 6 0
0 1 0 3 5 0 0 4 0

    sudoku s33                          ⍝ ... has 3 solutions.
┌─────────────────┬─────────────────┬─────────────────┐
│3 8 1 6 9 4 5 7 2│2 8 1 6 9 3 5 7 4│2 8 1 6 9 3 5 7 4│
│4 6 9 2 7 5 3 8 1│4 6 9 2 7 5 3 8 1│4 6 9 2 7 5 3 8 1│
│2 7 5 8 1 3 4 9 6│3 7 5 8 1 4 2 9 6│5 7 3 8 1 4 2 9 6│
│7 9 4 5 6 2 1 3 8│7 9 2 5 6 1 4 3 8│7 9 2 5 6 1 4 3 8│
│6 5 8 4 3 1 9 2 7│6 5 8 4 3 9 1 2 7│6 5 8 4 3 9 1 2 7│
│1 3 2 7 8 9 6 5 4│1 3 4 7 8 2 6 5 9│1 3 4 7 8 2 6 5 9│
│5 4 6 9 2 7 8 1 3│5 4 6 9 2 7 8 1 3│3 4 6 9 2 7 8 1 5│
│9 2 3 1 4 8 7 6 5│9 2 3 1 4 8 7 6 5│9 2 5 1 4 8 7 6 3│
│8 1 7 3 5 6 2 4 9│8 1 7 3 5 6 9 4 2│8 1 7 3 5 6 9 4 2│
└─────────────────┴─────────────────┴─────────────────┘

⍝ This function separates inner boxes for easier reading:

    sbox←{⎕IO←0                             ⍝ Box sudoku grids.
        ⍺←(⍴⍵)*÷2                           ⍝ default square cells.
        vp hp←0=⍺|⍳¨⍴⍵                      ⍝ vert and horiz partition vectors.
        numbs←⍉↑vp∘(⊂[0])¨hp⊂⍵              ⍝ numeric sub-areas.
        width←2+⌊10⍟⌈/1,,⍵                  ⍝ digits per number.
        fmt←width∘{⍵=0:⌽⍺↑'·' ⋄ ⍺ 0⍕⍵}      ⍝ dots for zeros.
        cells←0 1∘↓¨↑∘(,/)¨fmt¨¨numbs       ⍝ char matrix sub-areas.
        hv←⍺⍴¨⊂¨⌽(⍴⊃cells)/¨'│─'            ⍝ vert and horiz boundaries.
        in←{↑⍺{⍺,⍺⍺,⍵}/⍵}                   ⍝ ⍺ separates ⍵.
        (t m b)lr←'┬┼┴' '├┤'in¨∘⊂¨hv        ⍝ bordering lines.
        body←m in⍉¨⊂[1 2]'│'in cells        ⍝ collected cells.
        (⍉body in t b)in lr in¨'┌└' '┐┘'    ⍝ boxed grid.
    }

    sbox¨ sudoku s33                    ⍝ formatted solutions
 ┌─────┬─────┬─────┐  ┌─────┬─────┬─────┐  ┌─────┬─────┬─────┐
 │3 8 1│6 9 4│5 7 2│  │2 8 1│6 9 3│5 7 4│  │2 8 1│6 9 3│5 7 4│
 │4 6 9│2 7 5│3 8 1│  │4 6 9│2 7 5│3 8 1│  │4 6 9│2 7 5│3 8 1│
 │2 7 5│8 1 3│4 9 6│  │3 7 5│8 1 4│2 9 6│  │5 7 3│8 1 4│2 9 6│
 ├─────┼─────┼─────┤  ├─────┼─────┼─────┤  ├─────┼─────┼─────┤
 │7 9 4│5 6 2│1 3 8│  │7 9 2│5 6 1│4 3 8│  │7 9 2│5 6 1│4 3 8│
 │6 5 8│4 3 1│9 2 7│  │6 5 8│4 3 9│1 2 7│  │6 5 8│4 3 9│1 2 7│
 │1 3 2│7 8 9│6 5 4│  │1 3 4│7 8 2│6 5 9│  │1 3 4│7 8 2│6 5 9│
 ├─────┼─────┼─────┤  ├─────┼─────┼─────┤  ├─────┼─────┼─────┤
 │5 4 6│9 2 7│8 1 3│  │5 4 6│9 2 7│8 1 3│  │3 4 6│9 2 7│8 1 5│
 │9 2 3│1 4 8│7 6 5│  │9 2 3│1 4 8│7 6 5│  │9 2 5│1 4 8│7 6 3│
 │8 1 7│3 5 6│2 4 9│  │8 1 7│3 5 6│9 4 2│  │8 1 7│3 5 6│9 4 2│
 └─────┴─────┴─────┘  └─────┴─────┴─────┘  └─────┴─────┴─────┘

    s22                                 ⍝ sample 2×2 problem.
0 2 3 4
3 0 0 0
2 0 0 0
4 0 0 0

    sbox¨ sudoku s22                    ⍝ ... has 3 solutions.
 ┌───┬───┐  ┌───┬───┐  ┌───┬───┐
 │1 2│3 4│  │1 2│3 4│  │1 2│3 4│
 │3 4│2 1│  │3 4│1 2│  │3 4│1 2│
 ├───┼───┤  ├───┼───┤  ├───┼───┤
 │2 1│4 3│  │2 1│4 3│  │2 3│4 1│
 │4 3│1 2│  │4 3│2 1│  │4 1│2 3│
 └───┴───┘  └───┴───┘  └───┴───┘

    3 4 sbox s34                        ⍝ sample 3×4 problem.
┌───────────┬───────────┬───────────┐
│ 9  6  ·  ·│10  ·  ·  8│ 2  ·  ·  4│
│ ·  1  · 11│ · 12  ·  ·│ ·  ·  3  5│
│ ·  ·  ·  ·│ 6  ·  7 11│12  ·  ·  ·│
├───────────┼───────────┼───────────┤
│ ·  · 10  7│ ·  ·  ·  ·│ 4  ·  9  ·│
│ 1  ·  6  ·│12 11  ·  4│ ·  3  ·  ·│
│ ·  ·  9  ·│ · 10  8  1│ ·  ·  6  ·│
├───────────┼───────────┼───────────┤
│ ·  7  ·  ·│11  2  1  ·│ · 12  ·  ·│
│ 2  · 12  ·│ 4  ·  6  5│ ·  1  · 11│
│ · 10  ·  5│ ·  ·  ·  ·│ 3  4  ·  ·│
├───────────┼───────────┼───────────┤
│ ·  ·  · 10│ 5  8  ·  7│ ·  ·  ·  ·│
│ 5  3  ·  ·│ ·  · 11  ·│ 9  ·  ·  ·│
│ 7  ·  ·  ·│ 3  ·  ·  6│ ·  ·  4  2│
└───────────┴───────────┴───────────┘

    3 4∘sbox¨ 3 4 sudoku s34            ⍝ ... has 2 solutions.
 ┌───────────┬───────────┬───────────┐  ┌───────────┬───────────┬───────────┐
 │ 9  6  5 12│10  1  3  8│ 2  7 11  4│  │ 9  6  5 12│10  1  3  8│ 2  7 11  4│
 │ 8  1  7 11│ 9 12  4  2│ 6 10  3  5│  │ 8  1  7 11│ 9 12  4  2│ 6 10  3  5│
 │10  4  2  3│ 6  5  7 11│12  9  1  8│  │10  4  2  3│ 6  5  7 11│12  9  1  8│
 ├───────────┼───────────┼───────────┤  ├───────────┼───────────┼───────────┤
 │12 11 10  7│ 2  6  5  3│ 4  8  9  1│  │12 11 10  7│ 2  6  5  3│ 4  8  9  1│
 │ 1  2  6  8│12 11  9  4│ 7  3  5 10│  │ 1  2  6  8│12 11  9  4│10  3  5  7│
 │ 3  5  9  4│ 7 10  8  1│11  2  6 12│  │ 3  5  9  4│ 7 10  8  1│11  2  6 12│
 ├───────────┼───────────┼───────────┤  ├───────────┼───────────┼───────────┤
 │ 4  7  3  6│11  2  1 10│ 5 12  8  9│  │ 4  7  3  6│11  2  1 10│ 5 12  8  9│
 │ 2  8 12  9│ 4  3  6  5│10  1  7 11│  │ 2  8 12  9│ 4  3  6  5│ 7  1 10 11│
 │11 10  1  5│ 8  7 12  9│ 3  4  2  6│  │11 10  1  5│ 8  7 12  9│ 3  4  2  6│
 ├───────────┼───────────┼───────────┤  ├───────────┼───────────┼───────────┤
 │ 6  9  4 10│ 5  8  2  7│ 1 11 12  3│  │ 6  9  4 10│ 5  8  2  7│ 1 11 12  3│
 │ 5  3  8  2│ 1  4 11 12│ 9  6 10  7│  │ 5  3  8  2│ 1  4 11 12│ 9  6  7 10│
 │ 7 12 11  1│ 3  9 10  6│ 8  5  4  2│  │ 7 12 11  1│ 3  9 10  6│ 8  5  4  2│
 └───────────┴───────────┴───────────┘  └───────────┴───────────┴───────────┘

See also: <a href="https://dfns.dyalog.com/n_queens.htm">queens</a> <a href="https://dfns.dyalog.com/n_sudoku_bfs.htm">sudoku_bfs</a> <a href="https://dfns.dyalog.com/n_X.htm">X</a> <a href="https://dfns.dyalog.com/n_sudokuX.htm">sudokuX</a>
See also: <a href="http://www.ams.org/notices/200904/rtx090400460p.pdf">http://www.ams.org/notices/200904/rtx090400460p.pdf</a>
See also: <a href="http://www.tryapl.org/">http://www.TryAPL.org</a>
See also: <a href="http://www.youtube.com/watch?v=DmT80OseAGs">http://www.youtube.com/watch?v=DmT80OseAGs</a>

Back to: <a href="https://dfns.dyalog.com/n_contents.htm">contents</a>

Back to: <a href="https://dfns.dyalog.com/index.htm">Workspaces</a>
</pre>


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[What is the history of the use of "foo" and "bar" in source code examples? (2012) (131 pts)]]></title>
            <link>https://softwareengineering.stackexchange.com/questions/69788/what-is-the-history-of-the-use-of-foo-and-bar-in-source-code-examples</link>
            <guid>41752436</guid>
            <pubDate>Sat, 05 Oct 2024 19:52:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://softwareengineering.stackexchange.com/questions/69788/what-is-the-history-of-the-use-of-foo-and-bar-in-source-code-examples">https://softwareengineering.stackexchange.com/questions/69788/what-is-the-history-of-the-use-of-foo-and-bar-in-source-code-examples</a>, See on <a href="https://news.ycombinator.com/item?id=41752436">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text">
<p>tl;dr</p>
<ul>
<li><p>"Foo" and "bar" as metasyntactic variables were popularised by MIT and DEC, the first references are in work on LISP and PDP-1 and Project MAC from 1964 onwards.</p>
</li>
<li><p>Many of these people were in MIT's Tech Model Railroad Club, where we find the first documented use of "foo" in tech circles in 1959 (and a variant in 1958).</p>
</li>
<li><p>Both "foo" and "bar" (and even "baz") were well known in popular culture, especially from Smokey Stover and Pogo comics, which will have been read by many TMRC members.</p>
</li>
<li><p>Also, it seems likely the military FUBAR contributed to their popularity.</p>
</li>
</ul>
<hr>
<p>The use of lone "foo" as a nonsense word is pretty well documented in popular culture in the early 20th century, as is the military FUBAR. (Some background reading:
<a href="http://foldoc.org/metasyntactic+variables" rel="nofollow noreferrer">FOLDOC</a>
<a href="http://foldoc.org/foo" rel="nofollow noreferrer">FOLDOC</a>
<a href="http://www.catb.org/jargon/html/F/foo.html" rel="nofollow noreferrer">Jargon File</a>
<a href="http://www.catb.org/jargon/html/M/metasyntactic-variable.html" rel="nofollow noreferrer">Jargon File</a>
<a href="http://en.wikipedia.org/wiki/Foobar" rel="nofollow noreferrer">Wikipedia</a>
<a href="http://www.faqs.org/rfcs/rfc3092.html" rel="nofollow noreferrer">RFC3092</a>)</p>
<hr>
<p>OK, so let's find some references.</p>
<p><strong>STOP PRESS!</strong> After posting this answer, I discovered this perfect article about "foo" in the Friday 14th January <strong>1938</strong> edition of <a href="http://tech.mit.edu/V57/PDF/N57.pdf" rel="nofollow noreferrer">The Tech</a> ("MIT's oldest and largest
newspaper &amp; the first newspaper published on the web"), Volume LVII. No. 57, Price Three Cents:</p>
<blockquote>
<p>On Foo-ism</p>
<p>The Lounger thinks that this business of Foo-ism has been carried too far by its misguided proponents, and does hereby and forthwith take his stand against its abuse.
It may be that there's no foo like an old foo, and we're it, but anyway, a foo and his money are some party. (Voice from the bleachers- "Don't be foo-lish!")</p>
<p>As an expletive, of course, "foo!" has a definite and probably irreplaceable position in our language, although we fear that the excessive use to which it is currently subjected may well result in its falling into an early (and, alas, a dark) oblivion. We say alas because proper use of the word may result in such happy incidents as the following.</p>
<p>It was an 8.50 Thermodynamics lecture by Professor Slater in Room 6-120. The professor, having covered the front side of the blackboard, set the handle that operates the lift mechanism, turning meanwhile to the class to continue his discussion. The front board slowly, majestically, lifted itself, revealing the board behind it, and on that board, writ large, the symbols that spelled "FOO"!</p>
</blockquote>
<p><a href="http://tech.mit.edu/V57/PDF/N30.pdf" rel="nofollow noreferrer">The Tech newspaper</a>, a year earlier, the Letter to the Editor, September <strong>1937</strong>:</p>
<blockquote>
<p>By the time  the  train  has  reached  the station  the  neophytes  are  so  filled with  the  stories  of  the  glory  of  Phi Omicron  Omicron,  usually  referred  to as  Foo,  that  they  are  easy  prey.</p>
<p>...</p>
<p>It  is  not  that  I  mind  having  lost my  first  four  sons  to  the  Grand  and Universal  Brotherhood  of  Phi  Omicron  Omicron,  but  I  do  wish  that  my fifth  son,  my  baby,  should  at least  be warned  in  advance.</p>
<p>Hopefully  yours,</p>
<p>Indignant  Mother  of  Five.</p>
</blockquote>
<p>And <a href="http://tech.mit.edu/V58/PDF/N48.pdf" rel="nofollow noreferrer">The Tech</a> in December <strong>1938</strong>:</p>
<blockquote>
<p>General  trend  of  thought  might  be best  interpreted  from  the  remarks
made  at  the  end  of  the  ballots.  One vote  said,  '"I don't  think  what  I  do  is any  of  Pulver's  business,"  while another  merely  added  a  curt  "Foo."</p>
</blockquote>
<hr>
<p>The first documented "foo" in tech circles is probably <strong>1959</strong>'s <a href="http://www.gricer.com/tmrc/dictionary1959.html" rel="nofollow noreferrer">Dictionary of the TMRC Language</a>:</p>
<blockquote>
<p>FOO:  the sacred syllable (FOO MANI PADME HUM); to be spoken only when under inspiration to commune with the Deity. Our first obligation is to keep the Foo Counters turning.</p>
</blockquote>
<p>These are explained at <a href="http://foldoc.org/TMRC" rel="nofollow noreferrer">FOLDOC</a>. The dictionary's compiler Pete Samson said in 2005:</p>
<blockquote>
<p>Use of this word at TMRC antedates my coming there. A foo counter could simply have randomly flashing lights, or could be a real counter with an obscure input.</p>
</blockquote>
<p>And from 1996's <a href="http://www.jargon.net/jargonfile/b/baz.html" rel="nofollow noreferrer">Jargon File 4.0.0</a>:</p>
<blockquote>
<p>Earlier versions of this lexicon derived 'baz' as a Stanford corruption of bar. However, Pete Samson (compiler of the TMRC lexicon) reports it was already current when he joined TMRC in 1958. He says "It came from "Pogo". Albert the Alligator, when vexed or outraged, would shout 'Bazz Fazz!' or 'Rowrbazzle!' The club layout was said to model the (mythical) New England counties of Rowrfolk and Bassex (Rowrbazzle mingled with (Norfolk/Suffolk/Middlesex/Essex)."</p>
</blockquote>
<p>A year before the TMRC dictionary, <strong>1958</strong>'s MIT Voo Doo Gazette ("Humor suplement of the MIT Deans' office") <a href="http://web.mit.edu/voodoo/www/archive/pdfs/1958-Jun.pdf" rel="nofollow noreferrer">(PDF)</a> mentions Foocom, in "The Laws of Murphy and Finagle" by John Banzhaf (an electrical engineering student):</p>
<blockquote>
<p>Further research under a joint Foocom and Anarcom grant expanded the law to be all embracing and universally applicable: If anything can go wrong, it will!</p>
</blockquote>
<p>Also <strong>1964</strong>'s MIT Voo Doo <a href="http://web.mit.edu/voodoo/www/archive/pdfs/1964-Jan.pdf" rel="nofollow noreferrer">(PDF)</a> references the TMRC usage:</p>
<blockquote>
<p>Yes! I want to be an instant success and snow customers. Send me a degree in:
...</p>
<ul>
<li><p>Foo Counters</p>
</li>
<li><p>Foo Jung</p>
</li>
</ul>
</blockquote>
<hr>
<p>But let's remember this question is about code examples, so let's find "foo", "bar" and "foobar" published in code.</p>
<p>So, <a href="http://www.catb.org/jargon/html/F/foobar.html" rel="nofollow noreferrer">Jargon File 4.4.7</a> says of "foobar":</p>
<blockquote>
<p>Probably originally propagated through DECsystem manuals by Digital Equipment Corporation (DEC) in 1960s and early 1970s; confirmed sightings there go back to 1972.</p>
</blockquote>
<p>The first published reference I can find is from February <strong>1964</strong>, but written in June 1963, <a href="http://books.google.com/books?ei=ynbhTd2PK8nUsgbQurSABg&amp;ct=result&amp;id=eH0sAQAAIAAJ&amp;dq=%22project%20mac%22%20%2bfoo&amp;q=foo#search_anchor" rel="nofollow noreferrer">The Programming Language LISP: its Operation and Applications</a> by Information International, Inc., with many authors, but including Timothy P. Hart and Michael Levin:</p>
<blockquote>
<p>Thus, since "FOO" is a name for itself, "COMITRIN" will treat both "FOO" and "(FOO)" in exactly the same way.</p>
</blockquote>
<p>Also includes other metasyntactic variables such as: FOO CROCK GLITCH / POOT TOOR / ON YOU / SNAP CRACKLE POP / X Y Z</p>
<p>I expect this is much the same as this next reference of "foo" from MIT's Project MAC in January <strong>1964</strong>'s AIM-064, or <a href="http://dspace.mit.edu/handle/1721.1/5924" rel="nofollow noreferrer">LISP Exercises</a> by Timothy P. Hart and Michael Levin:</p>
<blockquote>
<p>car[((FOO . CROCK) . GLITCH)]</p>
</blockquote>
<p>It shares many other metasyntactic variables like: CHI / BOSTON NEW YORK / SPINACH BUTTER STEAK / FOO CROCK GLITCH / POOT TOOP / TOOT TOOT / ISTHISATRIVIALEXCERCISE / PLOOP FLOT TOP / SNAP CRACKLE POP / ONE TWO THREE / PLANE SUB THRESHER</p>
<p>For both "foo" and "bar" together, the earliest reference I could find is from MIT's Project MAC in June <strong>1966</strong>'s AIM-098, or <a href="http://dspace.mit.edu/handle/1721.1/5899" rel="nofollow noreferrer">PDP-6 LISP</a> by none other than Peter Samson:</p>
<blockquote>
<p>EXPLODE, like PRIN1, inserts slashes, so (EXPLODE (QUOTE FOO/ BAR)) PRIN1's as (F O O // /  B A R) or PRINC's as (F O O /   B A R).</p>
</blockquote>
<hr>
<p>Some more recallations.</p>
<p><a href="https://softwareengineering.stackexchange.com/questions/69788/using-foo-and-bar-in-examples/69803#69803">@Walter Mitty</a> recalled on this site in 2008:</p>
<blockquote>
<p>I second the jargon file regarding Foo Bar. I can trace it back at least to 1963, and PDP-1 serial number 2, which was on the second floor of Building 26 at MIT. Foo and Foo Bar were used there, and after 1964 at the PDP-6 room at project MAC.</p>
</blockquote>
<p><a href="http://groups.google.com/group/alt.folklore.computers/browse_thread/thread/f2dcd4247b866a62/fc54f0f7d7329fb5" rel="nofollow noreferrer">John V. Everett</a> recalls in 1996:</p>
<blockquote>
<p>When I joined DEC in 1966, foobar was already being commonly used as a throw-away file name. I believe fubar became foobar because the PDP-6 supported six character names, although I always assumed the term migrated to DEC from MIT. There were many MIT types at DEC in those days, some of whom had worked with the 7090/7094 CTSS. Since the 709x was also a 36 bit machine, foobar may have been used as a common file name there.</p>
<p>Foo and bar were also commonly used as file extensions. Since the text editors of the day operated on an input file and produced an output file, it was common to edit from a .foo file to a .bar file, and back again.</p>
<p>It was also common to use foo to fill a buffer when editing with TECO. The text string to exactly fill one disk block was IFOO$HXA127GA$$. Almost all of the PDP-6/10 programmers I worked with used this same command string.</p>
</blockquote>
<p><a href="http://groups.google.com/group/alt.folklore.computers/browse_thread/thread/6d8f44f725ef0e5d/0a6112662a880ddd" rel="nofollow noreferrer">Daniel P. B. Smith</a> in 1998:</p>
<blockquote>
<p>Dick Gruen had a device in his dorm room, the usual assemblage of B-battery, resistors, capacitors, and NE-2 neon tubes, which he called a "foo counter."  This would have been circa 1964 or so.</p>
</blockquote>
<p><a href="http://groups.google.com/group/alt.folklore.computers/browse_thread/thread/f2dcd4247b866a62/fc54f0f7d7329fb5" rel="nofollow noreferrer">Robert Schuldenfrei</a> in 1996:</p>
<blockquote>
<p>The use of FOO and BAR as example variable names goes back at least to 1964 and the IBM 7070.  This too may be older, but that is where I first saw it.  This was in Assembler.  What would be the FORTRAN integer equivalent? IFOO and IBAR?</p>
</blockquote>
<p><a href="http://groups.google.com/group/alt.folklore.computers/browse_thread/thread/39c4d97bdd57a5ee/8db07ccaf99fc014" rel="nofollow noreferrer">Paul M. Wexelblat</a> in 1992:</p>
<blockquote>
<p>The earliest PDP-1 Assembler used two characters for symbols (18 bit machine) programmers always left a few words as patch space to fix problems. (Jump to patch space, do new code, jump back)  That space conventionally was named  FU: which stood for Fxxx Up, the place where you fixed Fxxx Ups.  When spoken, it was known as FU space. Later Assemblers ( e.g. MIDAS allowed three char tags so FU became FOO, and as ALL PDP-1 programmers will tell you that was FOO space.</p>
</blockquote>
<p><a href="http://groups.google.com/group/alt.folklore.computers/browse_thread/thread/f2dcd4247b866a62/fc54f0f7d7329fb5" rel="nofollow noreferrer">Bruce B. Reynolds</a> in 1996:</p>
<blockquote>
<p>On the IBM side of FOO(FU)BAR is the use of the BAR side as Base Address Register; in the middle 1970's CICS programmers had to worry out the various xxxBARs...I think one of those was FRACTBAR...</p>
</blockquote>
<p>Here's a straight <a href="http://books.google.com/books?ei=bWfhTYeeNs7Osga10ciLBg&amp;ct=result&amp;id=mgUuAAAAIAAJ&amp;dq=%22Base%20Address%20Register%22%20bar&amp;q=bar#search_anchor" rel="nofollow noreferrer">IBM "BAR"</a> from 1955.</p>
<hr>
<p>Other early references:</p>
<ul>
<li><p><a href="http://dspace.mit.edu/handle/1721.1/5868" rel="nofollow noreferrer">1967 foo bar MIT AIM-127</a></p>
</li>
<li><p><a href="http://hdl.handle.net/1721.1/6136" rel="nofollow noreferrer">1967 foo bar MIT AIM-127a</a></p>
</li>
<li><p><a href="http://books.google.com/books?ei=8WzhTfOPBo3ysgbBnvjsBQ&amp;ct=result&amp;id=aOQRAQAAMAAJ&amp;dq=f00%20pdp&amp;q=foo#search_anchor" rel="nofollow noreferrer">1965 foo MIT Tech Engineering News</a></p>
</li>
<li><p><a href="http://books.google.com/books?ei=ZSzhTaPbGYuVswaMoPT9BQ&amp;ct=result&amp;id=80UsAQAAIAAJ&amp;dq=foo%20baz&amp;q=baz#search_anchor" rel="nofollow noreferrer">1968 foo baz DEC</a></p>
</li>
<li><p><a href="https://www.rfc-editor.org/rfc/rfc269" rel="nofollow noreferrer">1971 FOO BAR UCLA-NMC RFC269</a></p>
</li>
<li><p><a href="http://dspace.mit.edu/handle/1721.1/41939" rel="nofollow noreferrer">1972 FOO MIT AI</a></p>
</li>
<li><p><a href="http://www.inwap.com/pdp10/hbaker/hakmem/hacks.html" rel="nofollow noreferrer">1972 FOO MIT AI HAKMEM</a> (<a href="http://dspace.mit.edu/bitstream/handle/1721.1/6086/AIM-239.pdf?sequence=2" rel="nofollow noreferrer">PDF scan</a>)</p>
</li>
<li><p><a href="http://books.google.com/books?ei=PSHhTdjDO8rLswbXr5WDBg&amp;ct=result&amp;id=jZdPAAAAYAAJ&amp;dq=foo%20%20%22Digital%20Equipment%20Corporation%22&amp;q=foo#search_anchor" rel="nofollow noreferrer">1972 FOO DEC</a></p>
</li>
<li><p><a href="http://books.google.com/books?ei=viLhTbe8Cs_3sgaC48SPBg&amp;ct=result&amp;id=VfQRAQAAMAAJ&amp;dq=%2bfoo%20%20%22Digital%20Equipment%20Corporation%22&amp;q=foo#search_anchor" rel="nofollow noreferrer">1973 FOO DEC</a></p>
</li>
<li><p><a href="http://books.google.com/books?id=glNQAAAAMAAJ&amp;q=foo%20bar&amp;dq=foo%20bar&amp;hl=en&amp;ei=7NTfTdnmNM2WOpKL7YIK&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=2&amp;sqi=2&amp;ved=0CDAQ6AEwAQ" rel="nofollow noreferrer">1973 foo bar International Joint Council on Artificial Intelligence</a></p>
</li>
<li><p><a href="http://books.google.com/books?id=qVRQAAAAMAAJ&amp;q=%22foo%20bar%22&amp;dq=%22foo%20bar%22&amp;hl=en&amp;ei=CdTfTe69LcqUOuSQ8fcJ&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CCwQ6AEwAA" rel="nofollow noreferrer">1975 foo bar International Joint Council on Artificial Intelligence</a></p>
</li>
<li><p><a href="http://books.google.com/books?ei=19XfTcSeBMKBOvWTuegJ&amp;ct=result&amp;id=NpsZAQAAIAAJ&amp;dq=%2bfoobar&amp;q=foobar#search_anchor" rel="nofollow noreferrer">1977 Foobar</a></p>
</li>
<li><p><a href="http://books.google.com/books?id=zqomAAAAMAAJ&amp;q=foobar&amp;dq=foobar&amp;hl=en&amp;ei=EdbfTYWNIJCSOozL6Y4K&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CDAQ6AEwAA" rel="nofollow noreferrer">1978 Foobar</a></p>
</li>
<li><p><a href="http://www.panda.com/tops-20/software-wars.html" rel="nofollow noreferrer">1978 Moby Foobar in Software Wars</a></p>
</li>
</ul>
<hr>
<p>I haven't been able to find any references to foo bar as "inverted foo signal" as suggested in RFC3092 and elsewhere.</p>
<p>Here are a some of even earlier F00s but I think they're coincidences/false positives:</p>
<ul>
<li><p><a href="http://books.google.com/books?ei=W2rhTf_oIZCTswbVv8z7BQ&amp;ct=result&amp;id=mOkuAAAAIAAJ&amp;dq=ibm%20foo&amp;q=foo#search_anchor" rel="nofollow noreferrer">1959 "FOO 31 IBM-704 Bettis Plant Uses a least squares technique" U.S. Atomic Energy Commission</a></p>
</li>
<li><p><a href="http://books.google.com/books?ei=WyXhTfP9AYePswbtl6GQBg&amp;ct=result&amp;id=uo_QAAAAMAAJ&amp;dq=%2bfoo%20signal%20-fog&amp;q=foo#search_anchor" rel="nofollow noreferrer">1960 FOO (FO Out, F1, F2, FOO, FOI) "Digital computer and control engineering"</a></p>
</li>
<li><p><a href="http://books.google.com/books?ei=8iHhTY6SPMvJswbD1eWFBg&amp;ct=result&amp;id=aGVXAAAAMAAJ&amp;dq=%2bfoo%20%20%22Digital%20Equipment%20Corporation%22&amp;q=%20foo#search_anchor" rel="nofollow noreferrer">1967 FOO?</a></p>
</li>
</ul>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[CoRncrete: A corn starch based building material (148 pts)]]></title>
            <link>https://research.tudelft.nl/en/publications/corncrete-a-corn-starch-based-building-material</link>
            <guid>41752020</guid>
            <pubDate>Sat, 05 Oct 2024 18:51:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://research.tudelft.nl/en/publications/corncrete-a-corn-starch-based-building-material">https://research.tudelft.nl/en/publications/corncrete-a-corn-starch-based-building-material</a>, See on <a href="https://news.ycombinator.com/item?id=41752020">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page-content">
            
        <div>
                        
                        
                            
                        <div><p>Starch is a natural polymer which is commonly used as a cooking ingredient. The renewability and bio-degradability of starch has made it an interesting material for industrial applications, such as production of bioplastic. This paper introduces the application of corn starch in the production of a novel construction material, named CoRncrete. CoRncrete is formed by mixing corn starch with sand and water. The mixture appears to be self-compacting when wet. The mixture is poured in a mould and then heated in a microwave or an oven. This heating causes a gelatinisation process which results in a hardened material having compressive strength up to 26&nbsp;MPa. The factors affecting the strength of hardened CoRncrete such as water content, sand aggregate size and heating procedure have been studied. The degradation and sustainability aspects of CoRncrete are elucidated and limitations in the potential application of this material are discussed.</p></div>
                        
                        

                        

                        <div><ul><li><span>Biopolymer</span></li><li><span>Compressive strength</span></li><li><span>Construction material</span></li><li><span>Corn starch</span></li><li><span>Gelatinisation</span></li></ul></div>

                    </div>
        
            
        

        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
        <section aria-labelledby="publications-cite-title">
    
    <ul role="tablist" aria-label="Cite this">
        
            <li role="tab" id="tab-0" aria-controls="cite-apa" tabindex="-1" aria-selected="false">
                APA
            </li>
        
            <li role="tab" id="tab-1" aria-controls="cite-author" tabindex="-1" aria-selected="false">
                Author
            </li>
        
            <li role="tab" id="tab-2" aria-controls="cite-BIBTEX" tabindex="-1" aria-selected="false">
                BIBTEX
            </li>
        
            <li role="tab" id="tab-3" aria-controls="cite-harvard" tabindex="-1" aria-selected="false">
                Harvard
            </li>
        
            <li role="tab" id="tab-4" aria-controls="cite-standard" tabindex="-1" aria-selected="false">
                Standard
            </li>
        
            <li role="tab" id="tab-5" aria-controls="cite-RIS" tabindex="-1" aria-selected="false">
                RIS
            </li>
        
            <li role="tab" id="tab-6" aria-controls="cite-vancouver" tabindex="-1" aria-selected="false">
                Vancouver
            </li>
        
    </ul>
    
</section>
        
        
        





    
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[World-first therapy using donor cells sends autoimmune diseases into remission (134 pts)]]></title>
            <link>https://www.nature.com/articles/d41586-024-03209-4</link>
            <guid>41751568</guid>
            <pubDate>Sat, 05 Oct 2024 17:46:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nature.com/articles/d41586-024-03209-4">https://www.nature.com/articles/d41586-024-03209-4</a>, See on <a href="https://news.ycombinator.com/item?id=41751568">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    
                        <figure>
 <picture>
  <source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-024-03209-4/d41586-024-03209-4_27699382.jpg?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-024-03209-4/d41586-024-03209-4_27699382.jpg?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px">
  <img alt="Coloured scanning electron micrograph of a breast cancer cell (pink) being attacked by a chimeric antigen receptor (CAR) T-cell (yellow)." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-024-03209-4/d41586-024-03209-4_27699382.jpg">
  <figcaption>
   <p><span>Engineered immune cells, called CAR T cells (yellow), have revolutionized treatment for some tumours (pink) and show promise for treating autoimmune conditions. </span><span>Credit: Eye Of Science/Science Photo Library</span></p>
  </figcaption>
 </picture>
</figure><p>One woman and two men with severe autoimmune conditions have gone into remission after being treated with bioengineered and CRISPR-modified immune cells<sup><a href="#ref-CR1" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">1</a></sup>. The three individuals from China are the first people with autoimmune disorders to be treated with engineered immune cells created from donor cells, rather than ones collected from their own bodies. This advance is the first step towards mass production of such therapies.</p><p>One of the recipients, Mr Gong, a 57-year-old man from Shanghai, has systemic sclerosis, which affects connective tissue and can result in skin stiffening and organ damage. He says that three days after receiving the therapy, he felt his skin loosen and he could start moving his fingers and opening his mouth again. Two weeks later, he returned to his office job. “I feel very good,” he says, more than a year after receiving the treatment.</p><p>Engineered immune cells, called chimeric antigen receptor (CAR) T cells, have shown <a href="https://www.nature.com/articles/d41586-022-00241-0" data-track="click" data-label="https://www.nature.com/articles/d41586-022-00241-0" data-track-category="body text link">great promise</a> in treating blood cancers — half a dozen products are <a href="https://www.nature.com/articles/nature.2017.22304" data-track="click" data-label="https://www.nature.com/articles/nature.2017.22304" data-track-category="body text link">approved</a> in the United States — and potential for treating autoimmune conditions such as <a href="https://www.nature.com/articles/d41586-024-00169-7" data-track="click" data-label="https://www.nature.com/articles/d41586-024-00169-7" data-track-category="body text link">lupus</a> and <a href="https://www.nature.com/articles/d41586-024-00470-5" data-track="click" data-label="https://www.nature.com/articles/d41586-024-00470-5" data-track-category="body text link">multiple sclerosis</a>, in which rogue immune cells release autoantibodies that attack the body’s own tissue. But the therapy typically relies on a person’s own immune cells, and this personalization makes it expensive and time consuming.</p><p>That’s why researchers have started creating CAR T therapies from donated immune cells. If successful, they would allow pharmaceutical companies to scale up manufacturing, potentially <a href="https://www.nature.com/articles/d41586-024-00809-y" data-track="click" data-label="https://www.nature.com/articles/d41586-024-00809-y" data-track-category="body text link">slashing costs</a> and production times. Instead of making one treatment for one person, therapies for more than a hundred people could be made from one donor’s cells, says Lin Xin, an immunologist at Tsinghua University in Beijing. Donor-derived CAR T cells have been used to treat people with cancers, but with limited success so far<sup><a href="#ref-CR2" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">2</a></sup>.</p><h2>Autoimmune diseases</h2><p>The trial, led by Xu Huji, a rheumatologist at Naval Medical University in Shanghai, is the first to report results for autoimmune diseases. They were published in <i>Cell</i> last month. More than six months after receiving the treatment, the recipients remained in remission. Another two dozen individuals have received the donor-derived treatment and a slightly modified product, says Xu. The results have been largely positive, he says.</p><p>“The clinical outcomes are phenomenal,” says Lin, who is leading a separate trial using donor-derived CAR T cells to treat lupus.</p><p>The success and safety of the therapy look promising but still need to be demonstrated in many more people before researchers can draw conclusions about its broad application, says Christina Bergmann, a rheumatologist at the University Hospital Erlangen in Germany.</p><p>But if it does succeed in more people over a longer time frame, it “could prove paradigm shifting”, says Daniel Baker, an immunologist at the University of Pennsylvania in Philadelphia. More than 80 autoimmune diseases are linked to malfunctioning immune cells.</p><h2>Healthy donor</h2><p>CAR-T-cell therapy typically involves extracting immune cells known as T cells from the person being treated. The cells are embellished with CAR proteins that target B cells and are then re-infused into the person’s body.</p><p>The process for creating CAR T cells from donated immune cells is similar. Xu and his colleagues extracted T cells from a 21-year-old woman and studded them with CARs that recognize CD19, a receptor found on the surface of B cells. They used the CRISPR–Cas9 gene-editing tool to knock out five genes in the T cells, to prevent both the grafted cells from attacking the host’s body and the host’s immune system from attacking the donor cells.</p><p>The first person to receive the treatment, in May 2023, was a 42-year-old woman with a type of autoimmune myopathy, which targets skeletal muscle tissue, resulting in weakness and fatigue. Mr Gong, and another man aged 45, had an aggressive form of sclerosis. They started their treatments in June and August 2023.</p><p>Once injected into the hosts, the CAR T cells got to work. They multiplied and targeted and destroyed all the B cells — including pathogenic cells linked to the autoimmune conditions. The bioengineered T cells survived for weeks in the recipients before largely vanishing. Eventually, new healthy B cells returned, but no pathogenic ones did. A similar response has been observed in people with <a href="https://www.nature.com/articles/d41586-023-03968-6" data-track="click" data-label="https://www.nature.com/articles/d41586-023-03968-6" data-track-category="body text link">autoimmune conditions</a> who received CAR T cells derived from their own cells<sup><a href="#ref-CR3" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">3</a></sup>.</p><h2>‘Complete remission’</h2><p>Two months after the treatment, the researchers say the woman achieved complete remission, and maintained that status at her six-month follow-up. Baker says that although the woman showed clear clinical improvements, he would be more cautious about calling it complete remission, given the short assessment time. The woman’s autoantibodies had dropped to undetectable levels, and her muscle strength and mobility had improved dramatically.</p><p>The two men also saw significant improvements in their symptoms — including the reversal of scar-tissue formation — and declines in autoantibody levels.</p><p>None of the individuals experienced an extreme inflammatory reaction known as cytokine-release syndrome, which has been observed in some people with cancer who have received CAR-T therapy, and they didn’t show evidence of the graft attacking the host. But the researchers are still trying to determine whether the host’s body rejects the graft over time.</p><p>One key safety concern observed in some people who have received CAR-T-cell therapy to treat cancer is the <a href="https://www.nature.com/articles/d41586-024-01215-0" data-track="click" data-label="https://www.nature.com/articles/d41586-024-01215-0" data-track-category="body text link">emergence of new tumours</a>, although researchers are still investigating whether they are linked to the therapy. Baker says it’s too early to know whether people with autoimmune conditions who are treated with donor-derived CAR T cells will face this risk. “Only time will tell.“</p><p>The big question now, Baker says, is whether the same approach will work in more people, and how durable the effects will be. “Will these patients stay symptom-free for years?”</p>
                    
                </div></div>]]></description>
        </item>
    </channel>
</rss>