<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 15 Dec 2023 20:00:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[OpenAI: Prompt Engineering (109 pts)]]></title>
            <link>https://platform.openai.com/docs/guides/prompt-engineering</link>
            <guid>38657029</guid>
            <pubDate>Fri, 15 Dec 2023 18:30:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://platform.openai.com/docs/guides/prompt-engineering">https://platform.openai.com/docs/guides/prompt-engineering</a>, See on <a href="https://news.ycombinator.com/item?id=38657029">Hacker News</a></p>
Couldn't get https://platform.openai.com/docs/guides/prompt-engineering: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Fastmail Employees Form a Union (135 pts)]]></title>
            <link>https://union.place/@fastmailunited/111563614375789166</link>
            <guid>38656727</guid>
            <pubDate>Fri, 15 Dec 2023 18:01:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://union.place/@fastmailunited/111563614375789166">https://union.place/@fastmailunited/111563614375789166</a>, See on <a href="https://news.ycombinator.com/item?id=38656727">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Not even LinkedIn is that keen on Microsoft's cloud: Shift to Azure abandoned (120 pts)]]></title>
            <link>https://www.theregister.com/2023/12/14/linkedin_abandons_migration_to_microsoft/</link>
            <guid>38656038</guid>
            <pubDate>Fri, 15 Dec 2023 17:00:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2023/12/14/linkedin_abandons_migration_to_microsoft/">https://www.theregister.com/2023/12/14/linkedin_abandons_migration_to_microsoft/</a>, See on <a href="https://news.ycombinator.com/item?id=38656038">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>LinkedIn has abandoned its efforts to migrate its datacenter infrastructure to Microsoft Azure four years after announcing the planned move.</p>
<p>Citing sources familiar with the matter, CNBC <a target="_blank" rel="nofollow" href="https://www.cnbc.com/2023/12/14/linkedin-shelved-plan-to-migrate-to-microsoft-azure-cloud.html">reports</a> the effort, codenamed "Blueshift," had run up against numerous challenges in the years since Microsoft acquired the professional networking site in 2016 for $27 billion.</p>
<p>In a statement to <em>The Register</em>, LinkedIn confirmed its plans to invest in its own datacenters while using Azure services where appropriate.</p>

    

<p>"This includes our running 100 employee-facing applications on Azure, leveraging Azure FrontDoor and ongoing work to consolidate our datacenter locations that are currently spread across multiple buildings under a single roof," the spokesperson said. "Azure has been crucial to support and scale collaboration and productivity for our teams to deliver value to our members."</p>

        


        

<p>The decision marks a reversal of LinkedIn's plans, <a target="_blank" href="https://engineering.linkedin.com/blog/2019/building-next-infra">announced</a> in a 2019 blog post, to migrate its workloads to a public cloud. At the time Mohak Shroff, the social network's SVP of engineering, touted the move as an opportunity to better support the site's growing membership.</p>
<p>"With the incredible member and business growth we're seeing, we've decided to begin a multi-year migration of all LinkedIn workloads to the public cloud," he wrote. "Moving to Azure will give us access to a wide array of hardware and software innovations, and unprecedented global scale."</p>
<ul>

<li><a href="https://www.theregister.com/2023/12/13/aws_sees_direct_uk_government/">In just one year, UK.gov's direct spend on AWS rises 76 percent</a></li>

<li><a href="https://www.theregister.com/2023/12/13/google_gemini_duet_ai/">Like Microsoft, Google can't stop its cloud from pouring AI all over your heads</a></li>

<li><a href="https://www.theregister.com/2023/12/07/aws_says_only_microsoft_has/">AWS accuses Microsoft of clipping customers' cloud freedoms</a></li>

<li><a href="https://www.theregister.com/2023/12/11/microsoft_union_ai_partnership/">Microsoft partners with labor unions to shape and regulate AI</a></li>
</ul>
<p>Over the past few years LinkedIn has deployed some services in Azure. In early 2022, the social network <a target="_blank" rel="nofollow" href="https://engineering.linkedin.com/blog/2022/accelerating-the-linkedin-experience-with-azure-front-door">tapped up</a> Azure FrontDoor, Microsoft's content delivery network, which caches commonly accessed content across a global network of edge datacenters reducing the bandwidth and access latencies required to serve users.</p>
<p>However, by mid-2022, CNBC reports, the cracks in LinkedIn's migration strategy were beginning to show. In a memo last summer, LinkedIn CTO Raghu Hiremagalur reportedly told employees LinkedIn was moving to a hybrid-cloud model with some services running in the cloud and others in the company's dedicated datacenters.</p>

        

<p>As it turned out, while Azure's scale may have presented a tantalizing opportunity at first blush, LinkedIn was having a hard time taking advantage of the cloud provider's software. Sources told CNBC that issues arose when LinkedIn attempted to lift and shift its existing software tools to Azure rather than refactor them to run on the cloud provider's ready made tools. Â®</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Database Fundamentals (360 pts)]]></title>
            <link>https://tontinton.com/posts/database-fundementals/</link>
            <guid>38655066</guid>
            <pubDate>Fri, 15 Dec 2023 15:28:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tontinton.com/posts/database-fundementals/">https://tontinton.com/posts/database-fundementals/</a>, See on <a href="https://news.ycombinator.com/item?id=38655066">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><p>About a year ago, I tried thinking which database I should choose for my next project, and came to the realization that I don't really know the differences of databases enough. I went to different database websites and saw mostly marketing and words I don't understand.</p><p>This is when I decided to read the excellent books <code>Database Internals</code> by Alex Petrov and <code>Designing Data-Intensive Applications</code> by Martin Kleppmann.</p><p>The books piqued my curiosity enough to write my own little database I called <a href="https://github.com/tontinton/dbeel">dbeel</a>.</p><p>This post is basically a short summary of these books, with a focus on the fundamental problems a database engineer thinks about in the shower.</p><h2 id="bashdb">bashdb</h2><p>Let's start with the simplest database program ever written, just 2 bash functions (we'll call it <code>bashdb</code>):</p><pre data-lang="bash"><code data-lang="bash"><span>#!/bin/bash
</span><span>
</span><span>db_set</span><span>() {
</span><span>    </span><span>echo </span><span>"$</span><span>1</span><span>,$</span><span>2</span><span>" </span><span>&gt;&gt;</span><span> database
</span><span>}
</span><span>
</span><span>db_get</span><span>() {
</span><span>    </span><span>grep </span><span>"^$</span><span>1</span><span>,"</span><span> database </span><span>| </span><span>sed</span><span> -e </span><span>"s/^$</span><span>1</span><span>,//" </span><span>| </span><span>tail</span><span> -n</span><span> 1
</span><span>}
</span></code></pre><p>Try it out:</p><pre data-lang="sh"><code data-lang="sh"><span>$</span><span> db_set 500 </span><span>'{"movie": "Airplane!", "rating": 9}'
</span><span>
</span><span>$</span><span> db_set 111 </span><span>'{"movie": "Tokio Drift", "rating": 6}'
</span><span>
</span><span>$</span><span> db_get 500
</span><span>{</span><span>"movie"</span><span>: </span><span>"Airplane!"</span><span>, </span><span>"rating"</span><span>: 9}
</span></code></pre><p>Before you continue reading, I want you to pause and think about why you wouldn't use <code>bashdb</code> in production.</p><pre><code><span>
</span><span>
</span><span>
</span><span>
</span><span>
</span><span>
</span><span>
</span><span>Some space for you to think :)
</span><span>
</span><span>
</span><span>
</span><span>
</span><span>
</span><span>
</span><span>
</span></code></pre><p>You probably came up with at least a dozen issues in <code>bashdb</code>. Now I won't go over <em>all</em> of the possible issues, for this post I will focus on the following ones:</p><ul><li><strong>Durability</strong> - If the machine crashes after a successful <code>db_set</code>, the data might be lost, as it was not flushed to disk.</li><li><strong>Atomicity</strong> - If the machine crashes while you call <code>db_set</code>, data might be written partially, corrupting our data.</li><li><strong>Isolation</strong> - If one process calls <code>db_get</code>, while another calls <code>db_set</code> concurrently on the same item, the first process might read only part of the data, leading to a corrupt result.</li><li><strong>Performance</strong> - <code>db_get</code> uses <code>grep</code>, so search goes line by line and is <code>O(n)</code>, <code>n</code> = all items saved.</li></ul><p>Could you figure out these problems yourself? If you could, well done, you don't need me, you already understand databases ð</p><p>In the next section, we'll try get rid of these problems, to make <code>bashdb</code> a <em>real</em> database we might use in production (not really, please don't, just use <code>PostgreSQL</code>).</p><h2 id="improving-bashdb-to-be-acid">Improving bashdb to be ACID</h2><p>Before we begin, know that I did not come up with most of these problems on my own, they are part of an acronym named <code>ACID</code>, which almost all databases strive to guarantee:</p><ul><li><strong>Atomicity</strong> - Not to be confused with multi-threading's definition of atomicity (which is more similar to isolation), a transaction is considered atomic when a fault happens in the middle of a write, and the database either undos or aborts it completely, as if the write never started, leaving no partially written data.</li><li><strong>Consistency</strong> - This one doesn't really belong on ACID as a property of databases, as it is a property of the application.</li><li><strong>Isolation</strong> - No race conditions in concurrent accesses to the same data. There are multiple isolation levels, and we will discuss some of them later.</li><li><strong>Durability</strong> - The first thing that comes to mind when talking about a database. It should store data you wrote to it, forever, even in the event of monkeys pulling the power plug out.</li></ul><blockquote><p>Not all databases need to guarantee ACID, for some use cases, it is fine to drop guarantees for performance reasons.</p></blockquote><p>But <em>how</em> can we make <code>bashdb</code> ACID?</p><p>We can start with durability, as it's pretty easy to make <code>bashdb</code> durable by running <code>sync</code> right after writing in <code>db_set</code>:</p><pre data-lang="bash"><code data-lang="bash"><span>db_set</span><span>() {
</span><span>    </span><span>echo </span><span>"$</span><span>1</span><span>,$</span><span>2</span><span>" </span><span>&gt;&gt;</span><span> database </span><span>&amp;&amp; </span><span>sync</span><span> -d</span><span> database
</span><span>}
</span></code></pre><p>But wait a minute, what is going on, what is <code>sync</code> really doing? And what is that <code>-d</code>?</p><h3 id="durability">Durability</h3><p>The <code>write</code> syscall writes a buffer to a file, but who said it writes to disk?</p><p>The buffer you write could end up in any cache along the way to the non volatile memory. For example, the kernel stores the buffer in the page cache with each page marked as dirty, meaning it will flush it to disk sometime in the future.</p><p>To make matters worse, the disk device, or something managing your disks (for example a RAID system), might have a write cache as well.</p><p>So how do you tell all the systems in the middle to flush all dirty pages to the disk? For that we have <code>fsync</code> / <code>fdatasync</code>, let's see what <code>man</code> has to say:</p><pre><code><span>$ man 2 fsync
</span><span>
</span><span>...
</span><span>
</span><span>fsync() transfers ("flushes") all modified in-core data of (i.e., modified buffer cache pages for)
</span><span>the file referred to by the file descriptor fd to the disk device (or other permanent storage
</span><span>device) so that all changed information can be retrieved even if the system crashes or is rebooted.
</span><span>This includes writing through or flushing a disk cache if present.
</span><span>The call blocks until the device reports that the transfer has completed.
</span><span>
</span><span>...
</span><span>
</span><span>fdatasync() is similar to fsync(), but does not flush modified metadata unless that metadata itself
</span><span>in order to allow a subsequent data  retrieval to be correctly handled.
</span><span>
</span><span>...
</span></code></pre><p>In short, <code>fdatasync</code> flushes the dirty raw buffers we gave <code>write</code>. <code>fsync</code> also flushes the file's metadata like <code>mtime</code>, which we don't really care about.</p><p>The <code>sync</code> program is basically like running <code>fsync</code> on all dirty pages, unless a specific file is specified as one of the arguments. It has the <code>-d</code> flag for us to call <code>fdatasync</code> instead of <code>fsync</code>.</p><p>The biggest drawback in adding <code>sync</code> is that we get worse performance. Usually sync is slower than even the write itself. But hey, at least we are now <em>durable</em>.</p><blockquote><p>A short but important note about fsync. When fsync() returns success it means "all writes since the last fsync have hit disk" when you might have assumed it means "all writes since the last SUCCESSFUL fsync have hit disk". PostgreSQL learned about this only recently (2018), which led to them modifying the behavior of syncing from retrying fsync until a success is returned, to simply panic on fsync failure. This incident got famous and was named fsyncgate. You can learn a lot more about fsync failures <a href="https://www.usenix.org/system/files/atc20-rebello.pdf">here</a>.</p></blockquote><blockquote><p>Dear <code>MongoDB</code> users, know that by default writes are <a href="https://www.mongodb.com/docs/manual/core/journaling/writes">synced every 100ms</a>, meaning it is not 100% durable.</p></blockquote><h3 id="isolation">Isolation</h3><p>The simplest way to have multiprocess isolation in <code>bashdb</code> is to add a lock before we read / write to the storage file.</p><p>There's a program in linux called <code>flock</code>, which locks a file, and you can even provide it with the <code>-s</code> flag, to specify that you will not modify the file, meaning all callers who specify <code>-s</code> are allowed to read the file concurrently. <code>flock</code> blocks until it has taken the lock.</p><blockquote><p>flock simply calls the flock syscall</p></blockquote><p>With such an awesome program, <code>bashdb</code> can guarantee <em>isolation</em>, here's the code:</p><pre data-lang="bash"><code data-lang="bash"><span>db_set</span><span>() {
</span><span>    (
</span><span>        </span><span>flock</span><span> 9 </span><span>&amp;&amp; </span><span>echo </span><span>"$</span><span>1</span><span>,$</span><span>2</span><span>" </span><span>&gt;&gt;</span><span> database
</span><span>    ) </span><span>9</span><span>&gt;</span><span>database.lock
</span><span>}
</span><span>
</span><span>db_get</span><span>() {
</span><span>    (
</span><span>        </span><span>flock</span><span> -s</span><span> 9 </span><span>&amp;&amp; </span><span>grep </span><span>"^$</span><span>1</span><span>,"</span><span> database </span><span>| </span><span>sed</span><span> -e </span><span>"s/^$</span><span>1</span><span>,//" </span><span>| </span><span>tail</span><span> -n</span><span> 1
</span><span>    ) </span><span>9</span><span>&gt;</span><span>database.lock
</span><span>}
</span></code></pre><p>The biggest drawback is that we are now locking the entire database whenever we write to it.</p><p>The only things left are atomicity and improving the algorithm to not be <code>O(n)</code>.</p><h2 id="bad-news">Bad News</h2><p>I'm sorry, this is as far as I could get with <code>bashdb</code>, I could not find a simple way to ensure atomicity in bash â¹ï¸</p><p>And even if it was possible, we still need to fix the <code>O(n)</code> situation.</p><p>Before beginning the <code>bashdb</code> adventure, I knew that we won't be able to easily solve all these problems in less than 10 lines of bash, but by trying to, you've hopefully started to get a feel for the problems database engineers face.</p><h2 id="storage-engine">Storage Engine</h2><p>Let's start with the first big component of a database, the <code>Storage Engine</code>.</p><p>The purpose of the storage engine is to provide an abstraction over reading and writing data to persistent storage, with the main goal to be <strong>fast</strong>, i.e. have <strong>high throughput</strong> and <strong>low latency</strong> on requests.</p><p>But what makes software slow?</p><pre><code><span>Latency Comparison Numbers (~2012)
</span><span>----------------------------------
</span><span>L1 cache reference                           0.5 ns
</span><span>Branch mispredict                            5   ns
</span><span>L2 cache reference                           7   ns                      14x L1 cache
</span><span>Mutex lock/unlock                           25   ns
</span><span>Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache
</span><span>Compress 1K bytes with Zippy             3,000   ns        3 us
</span><span>Send 1K bytes over 1 Gbps network       10,000   ns       10 us
</span><span>Read 4K randomly from SSD              150,000   ns      150 us          ~1GB/sec SSD
</span><span>Read 1 MB sequentially from memory     250,000   ns      250 us
</span><span>Round trip within same datacenter      500,000   ns      500 us
</span><span>Read 1 MB sequentially from SSD      1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory
</span><span>Disk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip
</span><span>Read 1 MB sequentially from disk    20,000,000   ns   20,000 us   20 ms  80x memory, 20X SSD
</span><span>Send packet CA-&gt;Netherlands-&gt;CA    150,000,000   ns  150,000 us  150 ms
</span></code></pre><p>If L1 cache reference took as long as a heart beat (around half a second), reading 1 MB sequentially from SSD would take ~12 days and reading 1 MB sequentially from disk would take ~8 months.</p><p>This is why the main limitation of storage engines is the disk itself, and thus all designs try to minimize disk I/O and disk seeks as much as possible. Some designs even get rid of disks in favor of SSDs (although they are much more expensive).</p><p>A storage engine design usually consists of:</p><ul><li>The underlying data structure to store items on disk.</li><li>ACID transactions. <ul><li>Some may skip this to achieve better performance for specific use cases where ACID is not important.</li></ul></li><li>Some cache - to not read from disk <em>every</em> time. <ul><li>Most use buffered I/O to let the OS cache for us.</li></ul></li><li>API layer - SQL / document / graph / ...</li></ul><p>Storage engine data structures come in all shapes and sizes, I'm going to focus on the 2 categories you will most likely find in the wild - mutable and immutable data structures.</p><p>Mutable means that after writing data to a file, the data can be overwritten later in the future, while immutable means that after writing data to a file, it can only be read again.</p><h2 id="mutable-b-trees">Mutable B-Trees</h2><p>To achieve the goal of maintaining good performance as the amount of data scales up, the data structure we use should be able to search an item in at most logarithmic time, and not linear time like in <code>bashdb</code>.</p><p>A simple data structure you are probably familiar with is the BST (binary search tree), where lookups are made in <code>O(log n)</code> time.</p><p>The problem with BSTs is nodes are placed randomly apart from each other, which means that after reading a node while traversing the tree, the next node is most likely going to be somewhere far away on disk. To minimize disk I/O &amp; seeks, each page read from disk should be read as much as possible from memory again, without reaching to disk.</p><p>The property we're looking for is called "spatial locality", and one of the most famous "spatially local" variations of BSTs are B-trees.</p><p>B-tree generalizes BST, allowing for nodes with more than two children. Here's what they look like:</p><pre><code><span>                  ------------------------------------
</span><span>                  |     7     |     16     |    |    |
</span><span>                  ------------------------------------
</span><span>                 /            |             \
</span><span>-----------------     ----------------       -----------------
</span><span>| 1 | 2 | 5 | 6 |     | 9 | 12 |  |  |       | 18 | 21 |  |  |
</span><span>-----------------     ----------------       -----------------
</span></code></pre><p>With the search algorithm in pseudo python code:</p><pre data-lang="python"><code data-lang="python"><span>def </span><span>get</span><span>(</span><span>node</span><span>, </span><span>key</span><span>):
</span><span>    </span><span>for </span><span>i, child </span><span>in </span><span>enumerate</span><span>(node</span><span>.</span><span>children):
</span><span>        </span><span>if not </span><span>child:
</span><span>            </span><span>return </span><span>None
</span><span>
</span><span>        </span><span>if </span><span>child</span><span>.</span><span>key </span><span>== </span><span>key:
</span><span>            </span><span># Found it!
</span><span>            </span><span>return </span><span>child</span><span>.</span><span>value
</span><span>
</span><span>        </span><span>if </span><span>child</span><span>.</span><span>key </span><span>&gt; </span><span>key:
</span><span>            </span><span>return </span><span>get</span><span>(node</span><span>.</span><span>nodes[i], key)
</span><span>
</span><span>    </span><span>return </span><span>get</span><span>(node</span><span>.</span><span>nodes[</span><span>-</span><span>1</span><span>], key)
</span></code></pre><p>On each read of a page from disk (usually 4KB or 8KB), we iterate over multiple nodes sequentially from memory and the various CPU caches, trying to keep the least amount of bytes read go to waste.</p><p>Remember, reading from memory and the CPU caches is a few order of magnitudes faster than disk, so much faster in fact, that it can be considered to be basically free in comparison.</p><p>I know some of you reading this right now think to themselves <em>"Why not binary search instead of doing it linearly?"</em>, to you I say, please look at the L1 / L2 cache reference times in the latency comparison numbers table again. Also, modern CPUs execute multiple operations in parallel when it operates on sequential memory thanks to <a href="https://en.wikipedia.org/wiki/Single_instruction,_multiple_data">SIMD</a>, <a href="https://en.wikipedia.org/wiki/Instruction_pipelining">instruction pipelining</a> and <a href="https://en.wikipedia.org/wiki/Cache_prefetching">prefetching</a>. You would be surprised just how far reading sequential memory can take you in terms of performance.</p><p>There's a variation of the B-tree that takes this model even further, called a B+ tree, where the final leaf nodes hold a value and all other nodes hold only keys, thus fetching a page from disk results in a lot more keys to compare.</p><p>B-trees, to be space optimized, need to sometimes reclaim space as a consequence of data fragmentation created by operations on the tree like:</p><ul><li>Big value updates - updating a value into a larger value might overwrite data of the next node, so the tree relocates the item to a different location, leaving a "hole" in the original page.</li><li>Small value updates - updating a value to a smaller value leaves a "hole" at the end.</li><li>Deletes - deletion causes a "hole" right where the deleted value used to reside.</li></ul><p>The process that takes care of space reclamation and page rewrites can sometimes be called vacuum, compaction, page defragmentation, and maintenance. It is usually done in the background to not interfere and cause latency spikes to user requests.</p><blockquote><p>See for example how in <code>PostgreSQL</code> you can configure an <a href="https://www.postgresql.org/docs/current/routine-vacuuming.html">auto vacuum daemon</a>.</p></blockquote><p>B-trees are most commonly used as the underlying data structure of an index (<code>PostgreSQL</code> creates B-tree indexes by default), or all data (I've seen <code>DynamoDB</code> once jokingly called <em>"a distributed B-tree"</em>).</p><h2 id="immutable-lsm-tree">Immutable LSM Tree</h2><p>As we have already seen in the latency comparison numbers table, disk seeks are really expensive, which is why the idea of sequentially written immutable data structures got so popular.</p><p>The idea is that if you only append data to a file, the disk needle doesn't need to move as much to the next position where data will be written. On write heavy workloads it has been proven very beneficial.</p><p>One such append only data structure is called the <code>Log Structured Merge tree</code> or <code>LSM tree</code> in short, and is what powers <em>a lot</em> of modern database storage engines, such as <code>RocksDB</code>, <code>Cassandra</code> and my personal favorite <code>ScyllaDB</code>.</p><p>LSM trees' general concept is to buffer writes to a data structure in memory, preferably one that is easy to iterate in a sorted fashion (for example <code>AVL tree</code> / <code>Red Black tree</code> / <code>Skip List</code>), and once it reaches some capacity, flush it sorted to a new file called a <code>Sorted String Table</code> or <code>SSTable</code>. An SSTable stores sorted data, letting us leverage binary search and sparse indexes to lower the amount of disk I/O.</p><img src="https://tontinton.com/lsm_tree_write.svg"><p>To maintain durability, when data is written to memory, the action is stored in a <code>Write-Ahead Log</code> or <code>WAL</code>, which is read on program's startup to reset state to as it was before shutting down / crashing.</p><p>Deletions are also appended the same way a write would, it simply holds a tombstone instead of a value. The tombstones get deleted in the compaction process detailed later.</p><p>The read path is where it a bit wonky, reading from an LSM tree is done by first searching for the item of the provided key in the data structure in memory, if not found, it then searches for the item by iterating over all SSTables on disk, from the newest one to the oldest.</p><img src="https://tontinton.com/lsm_tree_read.svg"><p>You can probably already tell that as more and more data is written, there will be more SSTables to go through to find an item of a specific key, and even though each file is sorted, going over a lot of small files is slower than going over one big file with all items (lookup time complexity: <code>log(num_files * table_size) &lt; num_files * log(table_size)</code>). This is another reason why LSM trees require compaction, in addition to removing tombstones.</p><p>In other words: compaction combines a few small SSTables into one big SSTable, removing all tombstones in the process, and is usually run as a background process.</p><img src="https://tontinton.com/lsm_tree_compact.svg"><p>Compaction can be implemented using a binary heap / priority queue, something like:</p><pre data-lang="python"><code data-lang="python"><span>def </span><span>compact</span><span>(</span><span>sstables</span><span>, </span><span>output_sstable</span><span>): 
</span><span>    </span><span># Ordered by ascending key. pop() results in the item of the smallest key.
</span><span>    heap </span><span>= </span><span>heapq</span><span>.</span><span>heapify</span><span>([(sstable</span><span>.</span><span>next</span><span>(), sstable) </span><span>for </span><span>sstable </span><span>in </span><span>sstables])
</span><span>
</span><span>    </span><span>while </span><span>(item, sstable) </span><span>:= </span><span>heap</span><span>.</span><span>pop</span><span>()
</span><span>        </span><span>if not </span><span>item</span><span>.</span><span>is_tombstone</span><span>():
</span><span>            output_sstable</span><span>.</span><span>write</span><span>(item)
</span><span>
</span><span>        </span><span>if </span><span>item </span><span>:= </span><span>sstable</span><span>.</span><span>next</span><span>():
</span><span>            </span><span># For code brevity, imagine pushing an item with a key that exists
</span><span>            </span><span># in the heap removes the item with the smaller timestamp,
</span><span>            </span><span># resulting in last write wins.
</span><span>            heap</span><span>.</span><span>push</span><span>((item, sstable))
</span></code></pre><blockquote><p>For a real working example in rust ð¦, <a href="https://github.com/tontinton/dbeel/blob/ee3de152a5/src/storage_engine/lsm_tree.rs#L1038">click here</a>.</p></blockquote><p>To optimize an LSM tree, you should decide <em>when</em> to compact and on <em>which</em> sstable files. <code>RocksDB</code> for example implements <a href="https://github.com/facebook/rocksdb/wiki/Leveled-Compaction">Leveled Compaction</a>, where the newly flushed sstables are said to reside in level 0, and once a configured N number of files are created in a level, they are compacted and the new file is promoted to the next level.</p><p>It's important to handle removal of tombstones with care to not cause data resurrection. An item might be removed and then resurrected on compaction with another file that holds that item, even if the write happened before the deletion, there is no way to know once deleted in a previous compaction. <code>RocksDB</code> keeps tombstones around until a compaction of files that result in a promotion to the last level.</p><h3 id="bloom-filters">Bloom Filters</h3><p>LSM trees can be further optimized by something called a bloom filter.</p><p>A bloom filter is a probabilistic set data structure that lets you to efficiently check whether an item doesn't exist in a set. Checking whether an item exists in the set results in either <code>false</code>, which means the item is definitely not in the set, or in <code>true</code>, which means the item is <strong>maybe</strong> in the set, and that's why it's called a <em>probabilistic</em> data structure.</p><p>The beauty is that the space complexity of a bloom filter set of <code>n</code> items is <code>O(log n)</code>, while a regular set with <code>n</code> items is <code>O(n)</code>.</p><p>How do they work? The answer is hash functions! On insertion, they run multiple different hash functions on the inserted key, then take the results and store 1 in the corresponding bit (<code>result % number_of_bits</code>).</p><pre data-lang="python"><code data-lang="python"><span># A bloom filter's bitmap of size 8 (bits).
</span><span>bloom </span><span>= </span><span>[</span><span>0</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>0</span><span>]
</span><span>
</span><span># Inserting key - first run 2 hash functions.
</span><span>Hash1</span><span>(key1) </span><span>= </span><span>100
</span><span>Hash2</span><span>(key1) </span><span>= </span><span>55
</span><span>
</span><span># Then calculate corresponding bits.
</span><span>bits </span><span>= </span><span>[</span><span>100 </span><span>% </span><span>8</span><span>, </span><span>55 </span><span>% </span><span>8</span><span>] </span><span>= </span><span>[</span><span>4</span><span>, </span><span>7</span><span>]
</span><span>
</span><span># Set 1 to corresponding bits.
</span><span>bloom[</span><span>4</span><span>] </span><span>= </span><span>1
</span><span>bloom[</span><span>7</span><span>] </span><span>= </span><span>1
</span><span>
</span><span># After insertion it should look like:
</span><span>[</span><span>0</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>1</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>1</span><span>]
</span></code></pre><p>Now comes the exciting part - checking!</p><pre data-lang="python"><code data-lang="python"><span>bloom </span><span>= </span><span>[</span><span>0</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>1</span><span>, </span><span>0</span><span>, </span><span>0</span><span>, </span><span>1</span><span>]
</span><span>
</span><span># To check a key, simply run the 2 hash functions and find the corresponding
</span><span># bits, exactly like you would on insertion:
</span><span>Hash1</span><span>(key2) </span><span>= </span><span>34
</span><span>Hash2</span><span>(key2) </span><span>= </span><span>35
</span><span>
</span><span>bits </span><span>= </span><span>[</span><span>34 </span><span>% </span><span>8</span><span>, </span><span>35 </span><span>% </span><span>8</span><span>] </span><span>= </span><span>[</span><span>2</span><span>, </span><span>3</span><span>]
</span><span>
</span><span># And then check whether all the corresponding bits hold 1, if true, the item
</span><span># maybe exists in the set, otherwise it definitely isn't.
</span><span>result </span><span>= </span><span>[bloom[</span><span>2</span><span>], bloom[</span><span>3</span><span>]] </span><span>= </span><span>[</span><span>0</span><span>, </span><span>0</span><span>] </span><span>= </span><span>false
</span><span>
</span><span># false. key2 was never inserted in the set, otherwise those exact same bits
</span><span># would have all been set to 1.
</span></code></pre><blockquote><p>Think about why it is that even when all checked bits are 1, it doesn't guarantee that the same exact key was inserted before.</p></blockquote><p>A nice benefit of bloom filters is that you can control the chance of being certain that the item doesn't exist in the set, by allocating more memory for the bitmap and by adding more hash functions. There's even <a href="https://hur.st/bloomfilter/">calculators</a> for it.</p><p>LSM trees can store a bloom filter for each SSTable, to skip searching in SSTables if their bloom filter validates that an item doesn't exist in it. Otherwise, we search the SSTable normally, even if the item doesn't necessarily exist in it.</p><h2 id="write-ahead-log">Write Ahead Log</h2><p>Remember ACID? Let's talk briefly about how storage engines achieve ACID transactions.</p><p>Atomicity and durability are properties of whether data is correct at all times, even when power shuts down the machine.</p><p>The most popular method to survive sudden crashes is to log all transaction actions into a special file called a <code>Write-Ahead Log</code> / <code>WAL</code> (we touched on this briefly in the <code>LSM tree</code> section).</p><p>When the database process starts, it reads the <code>WAL</code> file, and reconstructs the state of the data, skipping all transactions that don't have a commit log, thus achieving atomicity.</p><p>Also, as long a write request's data is written + flushed to the <code>WAL</code> file before the user receives the response, the data is going to be 100% read at startup, meaning you also achieve durability.</p><p>WALs are basically a sort of <a href="https://martinfowler.com/eaaDev/EventSourcing.html">event sourcing</a> of the transactional events.</p><h2 id="isolation-1">Isolation</h2><p>To achieve isolation, you can either:</p><ul><li>Use pessimistic locks - Block access to data that is currently being written to.</li><li>Use optimistic locks - Update a copy of the data and then commit it only whether the data was not modified during the transaction, if it did, retry on the new data. Also known as optimistic concurrency control.</li><li>Read a copy of the data - MVCC (Multiversion concurrency control) is a common method used to avoid blocking user requests. In MVCC when data is mutated, instead of locking + overwriting it, you create a new version of the data that new requests read from. Once no readers remain that are reading the old data it can be safely removed. With MVCC, each user sees a <em>snapshot</em> of the database at a specific instant in time.</li></ul><p>Some applications don't require perfect isolation (or <code>Serializable Isolation</code>), and can relax their read isolation levels.</p><p>The ANSI/ISO standard SQL 92 includes 3 different possible outcomes from reading data in a transaction, while another transaction might have updated that data:</p><ul><li><strong>Dirty reads</strong> - A dirty read occurs when a transaction retrieves a row that has been updated by another transaction that is not yet committed.</li></ul><pre data-lang="sql"><code data-lang="sql"><span>BEGIN</span><span>;
</span><span>SELECT</span><span> age </span><span>FROM</span><span> users </span><span>WHERE</span><span> id </span><span>= </span><span>1</span><span>;
</span><span>-- retrieves 20
</span><span>
</span><span>
</span><span>                                        </span><span>BEGIN</span><span>;
</span><span>                                        </span><span>UPDATE</span><span> users </span><span>SET</span><span> age </span><span>= </span><span>21 </span><span>WHERE</span><span> id </span><span>= </span><span>1</span><span>;
</span><span>                                        </span><span>-- no commit here
</span><span>
</span><span>
</span><span>SELECT</span><span> age </span><span>FROM</span><span> users </span><span>WHERE</span><span> id </span><span>= </span><span>1</span><span>;
</span><span>-- retrieves in 21
</span><span>COMMIT</span><span>;
</span></code></pre><ul><li><strong>Non-repeatable reads</strong> - A non-repeatable read occurs when a transaction retrieves a row twice and that row is updated by another transaction that is committed in between.</li></ul><pre data-lang="sql"><code data-lang="sql"><span>BEGIN</span><span>;
</span><span>SELECT</span><span> age </span><span>FROM</span><span> users </span><span>WHERE</span><span> id </span><span>= </span><span>1</span><span>;
</span><span>-- retrieves 20
</span><span>
</span><span>
</span><span>                                        </span><span>BEGIN</span><span>;
</span><span>                                        </span><span>UPDATE</span><span> users </span><span>SET</span><span> age </span><span>= </span><span>21 </span><span>WHERE</span><span> id </span><span>= </span><span>1</span><span>;
</span><span>                                        </span><span>COMMIT</span><span>;
</span><span>
</span><span>
</span><span>SELECT</span><span> age </span><span>FROM</span><span> users </span><span>WHERE</span><span> id </span><span>= </span><span>1</span><span>;
</span><span>-- retrieves 21
</span><span>COMMIT</span><span>;
</span></code></pre><ul><li><strong>Phantom reads</strong> - A phantom read occurs when a transaction retrieves a set of rows twice and new rows are inserted into or removed from that set by another transaction that is committed in between.</li></ul><pre data-lang="sql"><code data-lang="sql"><span>BEGIN</span><span>;
</span><span>SELECT</span><span> name </span><span>FROM</span><span> users </span><span>WHERE</span><span> age </span><span>&gt; </span><span>17</span><span>;
</span><span>-- retrieves Alice and Bob
</span><span>	
</span><span>
</span><span>                                        </span><span>BEGIN</span><span>;
</span><span>                                        </span><span>INSERT INTO</span><span> users </span><span>VALUES</span><span> (</span><span>3</span><span>, </span><span>'Carol'</span><span>, </span><span>26</span><span>);
</span><span>                                        </span><span>COMMIT</span><span>;
</span><span>
</span><span>
</span><span>SELECT</span><span> name </span><span>FROM</span><span> users </span><span>WHERE</span><span> age </span><span>&gt; </span><span>17</span><span>;
</span><span>-- retrieves Alice, Bob and Carol
</span><span>COMMIT</span><span>;
</span></code></pre><p>Your application might not need a guarantee of no dirty reads for example in a specific transaction, so it can choose a different isolation level to allow greater performance, as to achieve higher isolation levels, you usually sacrifice performance.</p><p>Here are isolation levels defined by the ANSI/SQL 92 standard from highest to lowest (higher levels guarantee at least everything lower levels guarantee):</p><ul><li><strong>Serializable</strong> - The highest isolation level. Reads always return data that is committed, including range based writes on multiple rows (avoiding phantom reads).</li><li><strong>Repeatable reads</strong> - Phantom reads are acceptable.</li><li><strong>Read committed</strong> - Non-repeatable reads are acceptable.</li><li><strong>Read uncommitted</strong> - The lowest isolation level. Dirty reads are acceptable.</li></ul><blockquote><p>The ANSI/SQL 92 standard isolation levels are often criticized for not being complete. For example, many MVCC implementations offer <a href="https://en.wikipedia.org/wiki/Snapshot_isolation">snapshot isolation</a> and not serializable isolation (for the differences, read the provided wikipedia link). If you want to learn more about MVCC, I recommend reading about <a href="https://db.in.tum.de/~muehlbau/papers/mvcc.pdf">HyPer</a>, a fast serializable MVCC algorithm.</p></blockquote><p>So to conclude the storage engine part of this post, the fundamental problem you solve writing a storage engine are: how to store / retrieve data while trying to guarantee some ACID transactions in the most performant way.</p><blockquote><p>One topic I left out is the API to choose when writing a database / storage engine, but I'll leave a post called <a href="https://www.scattered-thoughts.net/writing/against-sql/">"Against SQL"</a> for you to start exploring the topic yourself.</p></blockquote><h2 id="distributed-systems">Distributed Systems</h2><p>Going distributed should be a last mile resort, introducing it to a system adds a <strong>ton</strong> of complexity, as we will soon learn. Please avoid using distributed systems when non distributed solutions suffice.</p><blockquote><p>A distributed system is one in which the failure of a computer you didnât even know existed can render your own computer unusable. ~Leslie Lamport</p></blockquote><p>The common use cases of needing to distribute data across multiple machines are:</p><ul><li><strong>Availability</strong> - If for some reason the machine running the database crashes / disconnects from our users, we might still want to let users use the application. By distributing data, when one machine fails, you can simply point requests to another machine holding the "redundant" data.</li><li><strong>Horizontal Scaling</strong> - Conventionally, when an application needed to serve more user requests than it can handle, we would have upgraded the machine's resources (faster / more disk, RAM, CPUs). This is called <code>Vertical Scaling</code>. It can get very expensive and for some workloads there just doesn't exist hardware to match the amount of resources needed. Also, most of the time you don't need all those resources, except in peaks of traffic (imagine shopify on black Friday). Another strategy called <code>Horizontal Scaling</code>, is to operate on multiple separate machines connected over a network, seemingly working as a single machine.</li></ul><p>Sounds like a dream, right? What can go wrong with going distributed?</p><p>Well, you have now introduced operational complexity (deployments / etc...) and more importantly partitioning / network partitioning, infamous for being the P in something called the CAP theorem.</p><p>The CAP theorem states that a system can guarantee only 2 of the following 3:</p><ul><li><strong>Consistency</strong> - Reads receive the most recent write.</li><li><strong>Availability</strong> - All requests succeed, no matter the failures.</li><li><strong>Partition Tolerance</strong> - The system continues to operate despite dropped / delayed messages between nodes.</li></ul><p>To understand why this is, imagine a database operating on a single machine. It is definitely <em>partition tolerant</em>, as messages in the system are not sent through something like a network, but through function calls operating on the same hardware (CPU / memory). It is also <em>consistent</em>, as the state of the data is saved on the same hardware (memory / disk) that all other read / write requests operate on. Once the machine fails (be it software failures like SIGSEGV or hardware failures like the disk overheating) all new requests to it fail, violating <em>availability</em>.</p><p>Now imagine a database operating on 2 machines with separate CPUs, memory and disks, connected through some cable. When a request to one of the machines fails, for whatever reason, the system can choose to do one of the following:</p><ul><li>Cancel the request, thus sacrificing <em>availability</em> for <em>consistency</em>.</li><li>Allow the request to continue only on the working machine, meaning once the other machine will now have inconsistent data (reads from it will not return the most recent write), thus sacrificing <em>consistency</em> for <em>availability</em>. When a system does this, it is called eventually consistent.</li></ul><p>The original <a href="https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf">dynamo paper</a> is famous for many things, one of them being amazon stating that amazon.com's shopping cart should be highly available, and that it's more important to them than consistency. In the unlikely scenario a user sees 2 of the same item in the shopping cart, they will simply remove one of them, which is a better situation then them not being able to purchase and pay money!</p><blockquote><p>I really enjoy out of the box thinking of sacrificing something that adds software complexity (like consistency in amazon's shopping cart) for a simpler human solution like the user getting a refund. Software complexity can get more expensive to operate than having a refund budget for example.</p></blockquote><p>To achieve <em>availability</em> it's not enough to have multiple nodes together combining all the data, there must also be data redundancy, or in other words, for each item a node stores there must be at least 1 other node to store a copy of that item. These nodes are usually called <strong>replicas</strong>, and the process of copying the data is called <strong>replication</strong>.</p><p>Assigning more replica nodes means that the system will be more <em>available</em>, with the obvious drawback of needing more resources to store all these copies.</p><blockquote><p>Copies of data don't need to be stored "whole", they can be split and scattered across multiple nodes using a technique called erasure coding, which also has some interesting <a href="https://brooker.co.za/blog/2023/01/06/erasure.html">latency characteristics</a> (by the way brooker's blog is simply amazing for learning distributed systems).</p></blockquote><h2 id="consistent-hashing">Consistent Hashing</h2><p>Now that you have multiple nodes, you need some kind of load balancing / data partitioning method. When a request to store some data comes in, how do you determine which node receives the request?</p><p>You could go for the simplest solution, which is to simply always take a primary key (some id) in addition to the data, hash the key and modulo the result by the number of available nodes, something like:</p><pre data-lang="python"><code data-lang="python"><span>def </span><span>get_owning_node</span><span>(</span><span>nodes</span><span>, </span><span>key</span><span>):
</span><span>    </span><span>return </span><span>nodes[</span><span>hash</span><span>(key) </span><span>% </span><span>len</span><span>(nodes)] 
</span></code></pre><p>This modulo method works fine, until a node is either added or removed from the cluster. Once that happens, the calculation returns a different result because the number of available nodes changed, meaning a different node will be selected for the same key. To accommodate, each node can migrate keys that should now live on different nodes, but then almost all items are migrated, which is really expensive.</p><p>One method to lower the amount of items to be migrated on node addition / removal that is used by some databases (e.g. <code>Dynamo</code> and <code>Cassandra</code>) is <code>Consistent Hashing</code>.</p><p>Consistent hashing creates a ring of nodes instead of an array, placing each node's name hash on the ring. Then each request's key is hashed just like before, but instead of doing the modulo operation, we get the first node in the ring whose name's hash is greater or equal to the request key hash:</p><pre data-lang="python"><code data-lang="python"><span># Assume nodes are sorted, with the first node having the smallest hash value.
</span><span>def </span><span>get_owning_node</span><span>(</span><span>nodes</span><span>, </span><span>key</span><span>):
</span><span>    </span><span>if </span><span>len</span><span>(nodes) </span><span>== </span><span>0</span><span>:
</span><span>        </span><span>return </span><span>None
</span><span>
</span><span>    key_hash </span><span>= </span><span>hash</span><span>(key)
</span><span>
</span><span>    </span><span>for </span><span>node </span><span>in </span><span>nodes:
</span><span>        </span><span>if </span><span>node</span><span>.</span><span>hash </span><span>&gt;= </span><span>key_hash:
</span><span>            </span><span>return </span><span>node
</span><span>
</span><span>    </span><span>return </span><span>nodes[</span><span>0</span><span>]
</span></code></pre><p>For a visual explanation, imagine a ring that goes from 0 -&gt; 99, holding nodes with the names "half", "quarter" and "zero" whose hashes are 50, 25 and 0 respectively:</p><pre><code><span>   zero
</span><span> /      \
</span><span>|     quarter 
</span><span> \      /
</span><span>   half
</span></code></pre><p>Let's say a user now wants to set an item with the key "four-fifths", with a hash value of 80. The first node with a name hash greater or equal to 80 is "half" (with hash value of 50), so that's the node to receive the request!</p><p>Choosing replicas is very simple, when an item is set to be stored on a specific node, go around the ring counter-clockwise, the next node will store a copy of that item. In our example, "zero" is the replica node for all items "half" owns, so when "half" dies and requests will now be routed to "zero", it can serve these requests, keeping our system <em>available</em>. This method is sometimes called <code>Leaderless Replication</code> and is used by "Dynamo" style databases like <code>Cassandra</code>.</p><blockquote><p>Another method is to choose a leader node and replica nodes is <code>Leader Election</code>, which is a huge topic on its own that I won't get into in this post.</p></blockquote><p>Now, what happens when a node is added to the cluster? Let's add a node named "three-quarters" with a hash value of 75, the item "four-fifths" should be migrated to the new "three-quarters" node, as new requests to it will now point to it.</p><p>This migration process is a lot less expensive than what we previously had in the modulo solution. The number of keys that need to be migrated is equal to <code>num_keys / num_nodes</code> on average.</p><p>A cool trick is to introduce the concept of virtual nodes, where you add multiple instances of a node to the ring, to lower the chances of some nodes owning more items than other nodes (in our example "half" will store twice as many items on average than the other nodes). You can generate virtual node names by for example adding an index as a suffix to the node name ("half-0", "half-1", etc...) and then the hash will result in a completely different location on the ring.</p><p>Here's a more detailed example of a migration in a cluster with a replication factor of 3:</p><img src="https://tontinton.com/migration.svg"><blockquote><p>Same colored nodes are virtual nodes of the same node, green arrows show to which node an item is being migrated to, red arrows show item deletions from nodes and the brown diamonds are items.</p></blockquote><h2 id="leaderless-replication">Leaderless Replication</h2><p>In a leaderless setup, you get amazing <em>availability</em>, while sacrificing <em>consistency</em>. If the owning node is down on a write request, it will be written to the replica, and once the owning node is up and running again, a read request will read stale data.</p><p>When <em>consistency</em> is needed for a specific request, read requests can be sent in parallel to several replica nodes as well as to the owning node. The client will pick the most up to date data. Write requests are usually sent in parallel to all replica nodes but wait for an acknowledgement from only some of them. By choosing the number of read requests and number of write requests acknowledge, you can tune the <em>consistency</em> level on a request level.</p><p>To know whether a request is <em>consistent</em>, you just need to validate that <code>R + W &gt; N/2 + 1</code>, where:</p><ul><li><strong>N</strong> - Number of nodes holding a copy of the data.</li><li><strong>W</strong> - Number of nodes that will acknowledge a write for it to succeed.</li><li><strong>R</strong> - Number of nodes that have to respond to a read operation for it to succeed.</li></ul><blockquote><p>Sending a request to a majority of nodes (where <code>W</code> or <code>R</code> is equal to <code>N/2 + 1</code>) is called a quorum.</p></blockquote><p>Picking the correct read as the latest written one is called <code>Conflict Resolution</code> and it is not a simple task, you might think that simply comparing timestamps and choosing the biggest one is enough, but using times in a distributed system are unreliable.</p><blockquote><p>This didn't stop <a href="https://cassandra.apache.org/doc/latest/cassandra/architecture/dynamo.html#data-versioning">Cassandra from using timestamps</a> though.</p></blockquote><p>Each machine has its own hardware clock, and the clocks <em>drift</em> apart as they are not perfectly accurate (usually a quartz crystal oscillator). Synchronizing clocks using NTP (Network Time Protocol), where a server returns the time from a more accurate time source such as a GPS receiver, is not enough to provide accurate results, as the NTP request is over the network (another distributed system) and we can't know exactly how much time will pass before receiving a response.</p><blockquote><p>Google's <code>Spanner</code> actually did achieve consistency with clocks, by uses special high precision time hardware and its API exposes the time range uncertainty of each timestamp. You can read more about it <a href="https://research.google/pubs/pub39966.pdf">here</a>.</p></blockquote><p>But if clocks are so unreliable, how else are we supposed to know which value is correct?</p><p>Some systems (for example <code>Dynamo</code>) try to solve this partially using <code>Version Vectors</code>, where you attach a (node, counter) pair for each version of an item, which gives you the ability to find causality between the different versions. By finding versions of values that are definitely newer (have a higher counter) you can remove some versions of a value, which makes the problem easier.</p><img src="https://tontinton.com/version_vector.svg"><blockquote><p>An example showing how easily conflicts arise. At the end we are left with {v2, v3} as the conflicting values for the same key. The reason I removed v1 is to show that by using something like <code>Version Vectors</code>, versions of values can be safely removed to minimize the amount of conflicts. To learn more on <code>Version Vectors</code> and their implementations, I recommend reading <a href="https://github.com/ricardobcl/Dotted-Version-Vectors">Dotted Version Vectors</a>.</p></blockquote><p>We could also decide to simply let the application decide how to deal with conflicts, by returning all conflicting values for the requested item. The application might know a lot more on the data than the database, so why not let it resolve conflicts? This is what <code>Riak KV</code> does for example.</p><blockquote><p>An idea I think about often is that you could even allow users to compile conflict resolution logic as a WASM module, and upload it to the database, so that when conflicts occur, the database resolves them, never relying on the application.</p></blockquote><p>There are lots of different ideas to reduce conflicts in an eventually consistent system, they usually fall under the umbrella term <code>Anti Entropy</code>.</p><h2 id="anti-entropy">Anti Entropy</h2><p>Here are examples of some of the most popular <code>Anti Entropy</code> mechanisms:</p><p><strong>Read Repair</strong> - After a client chooses the "latest" value from a read request that went to multiple nodes (by conflict resolution), it sends that value back to all the nodes that don't currently store that value, thus <em>repairing</em> them.</p><p><strong>Hinted Handoff</strong> - When a write request can't reach one of the target nodes, send it instead as a "hint" to some other node. As soon as that target node is available again, send it the saved "hint". On a quorum write, this mechanism is also called <code>Sloppy Quorum</code>, which provides even better <em>availability</em> for quorum requests.</p><p><strong>Merkle Trees</strong> - Because read repair only fixes queried data, a lot of data can still become inconsistent for a long time. Nodes can choose to start a synchronization process by talking to each other and see the differences in data. This is really expensive when there is a lot of data (<code>O(n)</code>). To make the sync algorithm faster (<code>O(log n)</code>) we can introduce <a href="https://en.wikipedia.org/wiki/Merkle_tree">merkle trees</a>. A merkle tree stores the hash of a range of the data in lowest leaf nodes, with the parent leaf nodes being a combined hash of the 2 of its children, thus creating a hierarchy of hashes up to the root of the tree. The sync process now starts by one node comparing the root of the merkle tree to another node's merkle tree, if the hashes are the same, it means they have exactly the same data. If the hashes differ, the leaf hashes are checked the same way, recursively until the inconsistent data is found.</p><p><strong>Gossip Dissemination</strong> - Send broadcast events to all nodes in the cluster in a simple and reliable way, by imitating how humans spread rumors or a disease. You send the event message to a configured number of randomly chosen nodes (called the "fanout"), then when they receive the message they repeat the process and send the message to another set of randomly chosen <code>N</code> nodes. To not repeat the message forever in the cluster, a node stops broadcasting a gossip message when it sees it a configured number of times. To get a feel for how data converges using gossip, head over to the <a href="https://www.serf.io/docs/internals/simulator.html">simulator</a>! As an optimization, gossip messages are usually sent using UDP, as the mechanism is just that reliable.</p><h2 id="conclusion">Conclusion</h2><p>There is a lot more to talk about databases, be it the use of <a href="https://yarchive.net/comp/linux/o_direct.html">O_DIRECT</a> in linux and implementing your own page cache, failure detection in distributed systems, consensus algorithms like <a href="https://raft.github.io/">raft</a>, distributed transactions, leader election, and an almost infinite amount more.</p><p>I hope I have piqued your curiosity enough to explore the world of databases further, or provided the tools for you to better understand which database to pick in your next project ð</p></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Delta Dental says data breach exposed info of 7M people (205 pts)]]></title>
            <link>https://www.bleepingcomputer.com/news/security/delta-dental-says-data-breach-exposed-info-of-7-million-people/</link>
            <guid>38654805</guid>
            <pubDate>Fri, 15 Dec 2023 14:59:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bleepingcomputer.com/news/security/delta-dental-says-data-breach-exposed-info-of-7-million-people/">https://www.bleepingcomputer.com/news/security/delta-dental-says-data-breach-exposed-info-of-7-million-people/</a>, See on <a href="https://news.ycombinator.com/item?id=38654805">Hacker News</a></p>
Couldn't get https://www.bleepingcomputer.com/news/security/delta-dental-says-data-breach-exposed-info-of-7-million-people/: Error: Request failed with status code 503]]></description>
        </item>
        <item>
            <title><![CDATA[September 11th That You Have Never Seen (121 pts)]]></title>
            <link>https://medium.com/@jeremiahjw/31-photos-from-september-11th-that-you-have-never-seen-9514aaac2d54</link>
            <guid>38654567</guid>
            <pubDate>Fri, 15 Dec 2023 14:34:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://medium.com/@jeremiahjw/31-photos-from-september-11th-that-you-have-never-seen-9514aaac2d54">https://medium.com/@jeremiahjw/31-photos-from-september-11th-that-you-have-never-seen-9514aaac2d54</a>, See on <a href="https://news.ycombinator.com/item?id=38654567">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><a rel="noopener follow" href="https://medium.com/@jeremiahjw?source=post_page-----9514aaac2d54--------------------------------"><div aria-hidden="false"><p><img alt="Jeremiah Warren" src="https://miro.medium.com/v2/resize:fill:88:88/1*cBiTRH-yRdfE6I0-iClrkg.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"></p></div></a></div><p id="3f35">In 2001, digital cameras were a rare commodity. They were expensive, bulky and captured images that were inferior to the organic look of film. After you downloaded and edited those whopping 3.1 megapixel images, you had very few options of where you could publish them online. Remember when Shutterfly and Snapfish were a thing?</p><p id="d82a">Contrast that to today where you have people shooting magazine covers on cell phones and uploading over 500,000 images to Instagram, Snapchat, Twitter, and Facebook every minute. We donât hear about national tragedies on the news anymore, we read about them in our Twitter and Facebook feeds. Seconds after they happen.</p><p id="69e2">When the events of 9/11 took place there were thousands of photographs taken by professional photographers and members of the press. These images were shown on the news and published in magazines and newspapers all across the country. Yet, few of these featured photographs were taken by everyday people.</p><p id="0dc5">I wanted to set about curating a selection of photographs that most of you havenât seen. Photographs captured by everyday people. Thanks to the internet these individuals have been able to publish their photos to Flickr, but most of them have less than a thousand, or even less than a hundred views. As I searched for these images it was like I was witnessing history again, but from an angle that no one had ever been shown. I decided to share these photographs with all of you.</p><p id="0b95">For the images that were captured on a digital camera, Iâve made a note of the model of the camera. All images are hosted on the account of the person that owns the photographs, none of them were taken down and re-hosted.</p><figure></figure><p id="968f">Seconds after flight 175 struck the South Tower. Taken with a Canon PowerShot S100 by <a href="http://www.flickr.com/people/georgeweld/" rel="noopener ugc nofollow" target="_blank">George Weld</a>.</p><figure></figure><p id="b5e1"><a href="http://www.flickr.com/people/since1968/" rel="noopener ugc nofollow" target="_blank">Marc Garrett</a>, about this image he captured. âThe second plane flew directly over my head and slammed into the south tower. It took me a few seconds to get my head together, and this was the shot I took. Iâm not a professional photojournalist, but I believe having a camera in my hand and feeling like a I had a âjobâ to do helped me keep my head.â</p><figure></figure><p id="faff"><a href="http://www.flickr.com/people/hiro_oshima/" rel="noopener ugc nofollow" target="_blank">The photographer</a> who took this photo mentions that at the time it didnât occur to him how bad of an idea it was to walk so close to the tower right after it was struck. Later he discovered that he had been hit in the leg by a piece of falling metal, but didnât notice it until hours later after he had settled down. If you read the comments youâll find one by the owner of the open delivery truck you see in this image. He mentioned that the driver of the truck, seen in the blue shirt and pants survived the ordeal. The truck, however, was crushed. This image and the following were taken on an Olympus E-10.</p><figure></figure><p id="2f29">This image struck me on a deep emotion level. In the midst of the chaos and destruction there were still people willing to show their selflessness and cover the remains of the victims.</p><figure></figure><p id="7cb7">Taken a few moments after the second tower was hit, you can see the cloud of paper floating through the air. Photograph by <a href="http://www.flickr.com/people/79579905@N00/" rel="noopener ugc nofollow" target="_blank">Ronald Smits</a>.</p><figure></figure><p id="a71d">You can see the outline of the planeâs wing span. Photograph by <a href="http://www.flickr.com/people/hiro_oshima/" rel="noopener ugc nofollow" target="_blank">Hiro</a>.</p><figure></figure><p id="7135">I think this image speaks for itself. Photograph by <a href="http://www.flickr.com/people/lukekurtis/" rel="noopener ugc nofollow" target="_blank">Luke Kurtis</a>.</p><figure></figure><p id="ea71">Photographer <a href="http://www.flickr.com/people/strippednuts/" rel="noopener ugc nofollow" target="_blank">Jay Boucher says</a>: âMy wife had called me that morning to let me know she was safe. âHuh?â I said. She told me to turn on the TV and there was the Trade Center, burning. I grabbed my cameras and ran out to Hobokenâs Pier A. This is what I sawâ.</p><figure></figure><p id="8a49">Photograph by <a href="http://www.flickr.com/people/georgeweld/" rel="noopener ugc nofollow" target="_blank">George Weld</a>, taken on a Canon PowerShot S100.</p><figure></figure><p id="df48">Photograph by <a href="http://www.flickr.com/people/pixorama/" rel="noopener ugc nofollow" target="_blank">Michael Foran</a>, taken on an Olympus C2000Z.</p><figure></figure><p id="a850">Photographed by <a href="http://www.flickr.com/people/hbomb/" rel="noopener ugc nofollow" target="_blank">Harvey Silikovitz</a> on Houston Street in Greenwich Village. âAn out-of-town TV reporter who is covering the 9/11 tragedy looks at the smoke emanating from the wreckage of the World Trade Center, a couple of miles to the south. Taken during my pre-digital days, this picture happened to be on a roll that for some reason I had gotten burned onto a CD when I got it developed.â</p><figure></figure><p id="696f">A rescue team taking off to attempt a rooftop rescue. They never made it. Photograph by <a href="http://www.flickr.com/people/bryanthatcher/" rel="noopener ugc nofollow" target="_blank">Bryan Thatcher</a>, taken with a Sony Cybershot.</p><figure></figure><p id="ecaf">Photographer <a href="http://www.flickr.com/people/pixorama/" rel="noopener ugc nofollow" target="_blank">Michael Foran</a> says âThis man was overcome with emotion as we listened to the calls of the Firemen and Police trapped in the rubble of the collapsed towers on his police scanner radio.â</p><figure></figure><p id="dd24">Photograph by <a href="http://www.flickr.com/people/13189502@N02/" rel="noopener ugc nofollow" target="_blank">Eddy</a>, taken on an Olympus C3000Z</p><figure></figure><p id="3be9">It looks like this woman is shooting with an Olympus film camera. I think I still have the same lens and camera. Photograph by <a href="http://www.flickr.com/people/theactionitems/" rel="noopener ugc nofollow" target="_blank">Marc AuMarc</a>.</p><figure></figure><p id="2aa1">Photograph by <a href="http://www.flickr.com/photos/georgeweld/" rel="noopener ugc nofollow" target="_blank">George Weld</a>, taken on a Canon PowerShot S100.</p><figure></figure><p id="be8f">There are a lot of photographs of messages scrawled into the dust covering the cars. I canât make out what the note says. Photograph by <a href="http://www.flickr.com/people/theactionitems/" rel="noopener ugc nofollow" target="_blank">Marc AuMarc</a>.</p><figure></figure><p id="dc1b">Photographer <a href="http://www.flickr.com/people/hiro_oshima/" rel="noopener ugc nofollow" target="_blank">Hiro</a> says âThe firemen were utterly covered by the debris. We all could tell that a lot of it was asbestos, though no one said it outloud. It crossed my mind that this could be the real terror, if all the people around became ill after the fact.â</p><figure></figure><p id="ac30">Taken with a Nikon E990 by <a href="http://www.flickr.com/people/georgehjr/" rel="noopener ugc nofollow" target="_blank">George Hackett</a>.</p><figure></figure><p id="ace7">Photograph by <a href="http://www.flickr.com/people/malarchie/" rel="noopener ugc nofollow" target="_blank">Shayna Marchese</a>. Her father posted this image on his Flickr account, he says âThis is 6th Avenue and there was no traffic on it at all. Just pedestrians beginning to realize that the first tower had fallen.â</p><figure></figure><p id="dd43">Photographer <a href="http://www.flickr.com/people/boyds/" rel="noopener ugc nofollow" target="_blank">Brian Boyd</a> says âIâm running North on West Side Highway, just one block from Chambers street. The tower just collapsed seconds before this photo.â</p><figure></figure><p id="699b">Photograph by <a href="http://www.flickr.com/people/georgehjr/" rel="noopener ugc nofollow" target="_blank">George Hackett</a></p><figure></figure><p id="a5e1">Photograph by <a href="http://www.flickr.com/people/georgehjr/" rel="noopener ugc nofollow" target="_blank">George Hackett</a>.</p><figure></figure><p id="e60f">Photograph by <a href="http://www.flickr.com/people/bryanthatcher/" rel="noopener ugc nofollow" target="_blank">Bryan Thatcher</a>, taken on a Sony Cybershot.</p><figure></figure><p id="4890">Photographer <a href="http://www.flickr.com/people/santijose/" rel="noopener ugc nofollow" target="_blank">Santi-Jose</a> says âI never go down to that area of the city during the week, but there I was on that morning. chance or fate? I was to witness this moment in history. ever since that day seven years ago I almost never leave the house without my camera.â</p><figure></figure><p id="5964">Brooklyn onlookers. Photograph by <a href="http://www.flickr.com/people/x-hibition/" rel="noopener ugc nofollow" target="_blank">Hans</a>.</p><figure></figure><p id="43af">Photograph by <a href="http://www.flickr.com/people/kenengimaging/" rel="noopener ugc nofollow" target="_blank">Ken Eng</a>. Taken on a Fujifilm FinePixS1 Pro.</p><figure></figure><p id="5936">Photograph by <a href="http://www.flickr.com/people/kenengimaging/" rel="noopener ugc nofollow" target="_blank">Ken Eng</a>.</p><figure></figure><p id="374e">Photograph by <a href="http://www.flickr.com/people/kenengimaging/" rel="noopener ugc nofollow" target="_blank">Ken Eng</a>.</p><figure></figure><p id="b14f">Photographed by <a href="http://www.flickr.com/people/demonbaby/" rel="noopener ugc nofollow" target="_blank">Rob Sheridan</a> from his Brooklyn apartment, on a Canon EOS D30.</p><figure></figure><p id="4ec1">This was taken the day after 9/11, on September 12th, by <a href="http://www.flickr.com/people/13189502@N02/" rel="noopener ugc nofollow" target="_blank">Eddy</a>.</p></div><div><p id="8b70"><strong>If you enjoyed this piece, please consider clicking the little clapping hands icon below, so someone else will see and read it too. Thank you! :)</strong></p><p id="c2ff"><em>Follow me on Twitter </em><a href="http://twitter.com/jeremiahjw" rel="noopener ugc nofollow" target="_blank"><em>@JeremiahJW </em></a><em>.</em></p><p id="565c"><em>See more of my work at </em><a href="http://jeremiahwarren.com/" rel="noopener ugc nofollow" target="_blank"><em>JeremiahWarren.com</em></a><em>.</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Data exfiltration from Writer.com with indirect prompt injection (114 pts)]]></title>
            <link>https://promptarmor.substack.com/p/data-exfiltration-from-writercom</link>
            <guid>38654533</guid>
            <pubDate>Fri, 15 Dec 2023 14:31:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://promptarmor.substack.com/p/data-exfiltration-from-writercom">https://promptarmor.substack.com/p/data-exfiltration-from-writercom</a>, See on <a href="https://news.ycombinator.com/item?id=38654533">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><em>This vulnerability can allow attackers to steal a userâs private documents by manipulating the language model used for content generation. As of now, it has not been fixed as it was not triaged as a security vulnerability by Writer.com after disclosure (more details in Responsible Disclosure section at the end). </em></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png" width="480" height="289.1208791208791" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:877,&quot;width&quot;:1456,&quot;resizeWidth&quot;:480,&quot;bytes&quot;:1399454,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcb633d5a-2e58-448c-988a-e9e745288dd7_3966x2390.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption>(the attack, disguised in white text on an attacker controlled website)</figcaption></figure></div><p><span>Writer.com is an application that can be used by enterprises and consumers alike. Users can upload data files, share links, and ask questions in order to generate tailored content for their business needs. It has access to your brand and knowledge base and as such can maintain consistency when writing articles for you. They emphasize its data security given the sensitivity of information its clients upload throughout its website: </span><a href="https://writer.com/product/data-security-privacy/" rel="nofollow ugc noopener">https://writer.com/product/data-security-privacy/</a></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png" width="480" height="255.14950166112956" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:640,&quot;width&quot;:1204,&quot;resizeWidth&quot;:480,&quot;bytes&quot;:67733,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd37f09c5-5444-4973-835d-ddbb2b28d6b1_1204x640.png 1456w" sizes="100vw"></picture></div></a><figcaption>(screenshot from writer.com/security on Dec 13)</figcaption></figure></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png" width="470" height="129.12087912087912" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:400,&quot;width&quot;:1456,&quot;resizeWidth&quot;:470,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8504d66f-35a8-4567-a887-3f445e34aa79_1514x416.png 1456w" sizes="100vw"></picture></div></a><figcaption>(screenshot from writer.com on Dec 5)</figcaption></figure></div><p>In Writer, users can enter a ChatGPT-like session to edit or create their documents. In this chat session, the LLM can retrieve information from sources on the web to assist users in creation of their documents. We show that attackers can prepare websites that, when a user adds them as a source, manipulate the LLM into sending private information to the attacker or perform other malicious activities.&nbsp;</p><p>The data theft can include documents the user has uploaded, their chat history or potentially specific private information the chat model can convince the user to divulge at the attacker's behest.</p><p><span>This type of attack is called </span><a href="https://arxiv.org/abs/2302.12173" rel="nofollow ugc noopener">indirect prompt injection</a><span>, initially coined by Kai Greshake.</span></p><p>To prove the feasibility of such an attack, we uploaded a file that contains mocked sensitive information (SSN numbers, revenue figures, salary information), and were able to exfiltrate all of it:&nbsp;</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png" width="1456" height="84" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:84,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:96853,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa8bf00bc-a870-4ece-827b-1fbd5e9e85e8_1600x92.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>(screenshot from our pentesting exfiltration server)</figcaption></figure></div><p>The website that hosts the payload looks like any other website, and the payload is hidden from any user visiting it. In the following screenshot, the hidden text of the payload is highlighted (it has white font, but there are other methods to hide it or embed payloads on other websites such as social media platforms).:&nbsp;</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png" width="1456" height="363" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:363,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb9d4a38c-c276-4585-8814-069dbdd16125_1600x399.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>(screenshot from the website with the injection)</figcaption></figure></div><p>Note that *.cloudfront.net is one of the locations allowed by the CSP. </p><p>A typical user use case would be the following:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png" width="1456" height="258" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:258,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1083806,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e65223a-e808-496c-ab68-e2885413f81d_4760x842.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>However, hereâs what actually happens in the background with the injection</p><p>A) They ask Writer to write a report for them based on some sources and some data they upload.&nbsp;</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png" width="1456" height="1147" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1147,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5c3f8a54-fe97-4878-8421-48a1a63b4785_1600x1260.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>(screenshot from our chat session at writer.com)</figcaption></figure></div><p>B) They find a nice source on the web which has the information they need</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png" width="1456" height="1398" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1398,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3476bfd3-f19c-41ae-b7ff-b205518200ad_1600x1536.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>C) They upload some sensitive data</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb856d97d-56ff-4027-9307-06cc92003da6_1360x832.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb856d97d-56ff-4027-9307-06cc92003da6_1360x832.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb856d97d-56ff-4027-9307-06cc92003da6_1360x832.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb856d97d-56ff-4027-9307-06cc92003da6_1360x832.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb856d97d-56ff-4027-9307-06cc92003da6_1360x832.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb856d97d-56ff-4027-9307-06cc92003da6_1360x832.png" width="1360" height="832" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b856d97d-56ff-4027-9307-06cc92003da6_1360x832.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:832,&quot;width&quot;:1360,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb856d97d-56ff-4027-9307-06cc92003da6_1360x832.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb856d97d-56ff-4027-9307-06cc92003da6_1360x832.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb856d97d-56ff-4027-9307-06cc92003da6_1360x832.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb856d97d-56ff-4027-9307-06cc92003da6_1360x832.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>D) They get Writer to write the report</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png" width="1456" height="428" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:428,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff02b01b2-526c-415a-a59b-904e4c1127fc_1600x470.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>(screenshot from our chat window at writer.com)</figcaption></figure></div><p>E) Writer reads the webpage, but it contains a hidden injection in small white text:&nbsp;</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png" width="1456" height="877" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:877,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6622f249-a11d-4265-8b32-a1737ee68806_1600x964.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>F) Writer follows the instructions, and overrides the initial instructions of the user and any security filters Writer.com has enforced. The user never asked for this image and it was not on the webpage that they initially asked for. Nevertheless, Writer.com has automatically rendered the attacker-controlled image in markdown and you can see in the network activity that it has appended the contents of the uploaded client data file to the HTTP parameters, just as instructed: </p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png" width="1456" height="758" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:758,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:4418822,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8ab5f8a6-6b28-4db2-8d02-59c6fcf3e34a_14198x7389.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>(screenshot of our chat session at writer.com with network activity expanded)</figcaption></figure></div><p>Hereâs a side by side comparison between the uploaded client data file, and a zoomed in image of the HTTP parameters from the above screenshot: </p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png" width="1456" height="255" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:255,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1406652,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9089e37b-2eb5-46b6-855c-200708012b0e_17604x3087.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>G) Without their knowledge, their data has now been exfiltrated to the attackerâs server. Rendering the image in markdown automatically created a GET request with the HTTP parameters including the content of the file. The attacker can read their logs to extract the sensitive client data from the file.&nbsp;</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png" width="1456" height="1634" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1634,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:2070420,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2068bb49-7d45-4b67-88f0-e966db968cbf_4248x4768.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>(screenshot from pentesting exfiltration server logs)</figcaption></figure></div><p><span>Rendering an image to exfiltrate data is only one method of exfiltrating data. Note that while, to our knowledge, Writer does not use OpenAI for text generation, </span><a href="https://embracethered.com/blog/posts/2023/chatgpt-webpilot-data-exfil-via-markdown-injection/#:~:text=Responsible%20Disclosure" rel="nofollow ugc noopener">OpenAI has said the same issue in their system is a âwonât fix.â</a></p><p>Please see below for other example attacks which use other mediums (like links) to exfiltrate data.&nbsp;</p><h5>Example 1: Exfiltration of uploaded files</h5><p>In this example, an attacker is able to exfiltrate a confidential file that the user uploads via&nbsp;a link, using this injection: </p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png" width="1456" height="284" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:284,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:121493,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa07c38f3-f4f1-47e2-ade0-b594babbe669_1540x300.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://www.loom.com/share/d8ffe66d9dfb44429be8a60182372f38" rel="nofollow ugc noopener">Video explanation (sent with disclosure)</a></p><h5>Example 2: Exfiltration of chat history</h5><p>In this example, an attacker is able to exfiltrate the chat history from a user via a link, using this injection: </p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png" width="1456" height="309" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:309,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F211bd372-8a83-4fb3-86d0-ed1399304db7_1600x340.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://www.loom.com/share/678d76f03c5244a1aee592ba41e744dd" rel="nofollow ugc noopener">Video explanation (sent with disclosure)</a></p><p><span>These type of attacks have been done in other LLM surfaces, such as the </span><a href="https://embracethered.com/blog/posts/2023/google-bard-data-exfiltration/" rel="nofollow ugc noopener">Bard attack by Thacker, Rehberger and Greshake </a><span>, which was resolved promptly by the Google Security and Bard team.&nbsp;</span></p><p>For more information on these attacks and relevant information here are some great sources:&nbsp;</p><ul><li><p><a href="https://kai-greshake.de/" rel="nofollow ugc noopener">https://kai-greshake.de/</a><span> (twitter: @KGreshake)</span></p></li><li><p><a href="https://embracethered.com/blog/index.html" rel="nofollow ugc noopener">https://embracethered.com/blog/index.html</a><span> (twitter: @wunderwuzzi23)</span></p></li><li><p><a href="https://josephthacker.com/" rel="nofollow ugc noopener">https://josephthacker.com/</a><span> (twitter: @rez0_) </span></p></li><li><p><a href="https://promptarmor.com/" rel="nofollow ugc noopener">https://promptarmor.com/ </a><span>(twitter: @promptarmor)</span></p></li></ul><p>And to learn more about LLM security risks feel free to check out:&nbsp;</p><ul><li><p><a href="https://owasp.org/www-project-top-10-for-large-language-model-applications/" rel="nofollow ugc noopener">https://owasp.org/www-project-top-10-for-large-language-model-applications/</a></p></li><li><p><a href="https://atlas.mitre.org/" rel="nofollow ugc noopener">https://atlas.mitre.org/</a></p></li></ul><p>Responsible Disclosure Timeline</p><ul><li><p>Nov 29: We disclose issue to CTO &amp; Security team with video examples</p></li><li><p>Nov 29: Writer responds, asking for more details</p></li><li><p>Nov 29: We respond describing the exploit in more detail with screenshots</p></li><li><p>Dec 1: We follow up</p></li><li><p>Dec 4: We follow up with re-recorded video with voiceover asking about their responsible disclosure policy</p></li><li><p>Dec 5: Writer responds âWe do not consider this to be a security issue since the real customer accounts do not have access to any website.â</p></li><li><p>Dec 5: We explain that paid customer accounts have the same vulnerability, and inform them that we are writing a post about the vulnerability so consumers are aware. No response from the Writer team after this point in time. </p></li></ul><p>Feel free to reach out to us at founders@promptarmor.com or at https://kai-greshake.de/about</p><h6>Disclaimer: The content of this blog is intended solely for research and educational use, aimed at enhancing knowledge, understanding, and awareness regarding attacks and their countermeasures to bolster the security of Large Language Models (LLMs)</h6></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What Happens in the Brain While Daydreaming? (117 pts)]]></title>
            <link>https://hms.harvard.edu/news/what-happens-brain-while-daydreaming</link>
            <guid>38654388</guid>
            <pubDate>Fri, 15 Dec 2023 14:18:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hms.harvard.edu/news/what-happens-brain-while-daydreaming">https://hms.harvard.edu/news/what-happens-brain-while-daydreaming</a>, See on <a href="https://news.ycombinator.com/item?id=38654388">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p><span lang="EN" xml:lang="EN"><strong>At a glance:</strong></span></p><ul><li><span lang="EN" xml:lang="EN"></span><span lang="EN" xml:lang="EN"><strong>During quiet waking, brain activity in mice suggests the animals are daydreaming about a recent image.</strong></span></li><li><span lang="EN" xml:lang="EN"></span><span lang="EN" xml:lang="EN"><strong>Having daydreams about a recently viewed image predicted how the brain would respond to the image in the future.</strong></span></li><li><p><span lang="EN" xml:lang="EN"></span><span lang="EN" xml:lang="EN"><strong>The findings provide a clue that daydreams may play a role in brain plasticity. </strong></span></p><hr></li></ul><p><span lang="EN" xml:lang="EN"></span><span lang="EN" xml:lang="EN">You are sitting quietly, and suddenly your brain tunes out the world and wanders to something else entirely â perhaps a recent experience, or an old memory. You just had a daydream. </span></p><p><span lang="EN" xml:lang="EN">Yet despite the ubiquity of this experience, what is happening in the brain while daydreaming is a question that has largely eluded neuroscientists. </span></p><p><span lang="EN" xml:lang="EN">Now, a study in mice, </span><a href="https://www.nature.com/articles/s41586-023-06810-1"><span lang="EN" xml:lang="EN">published Dec. 13 in </span><em><span lang="EN" xml:lang="EN">Nature</span></em></a><em><span lang="EN" xml:lang="EN">,</span></em><span lang="EN" xml:lang="EN"> has brought a team led by researchers at Harvard Medical School one step closer to figuring it out. </span></p><p><a href="https://hms.harvard.edu/news-events/sign-email-communications"><span lang="EN" xml:lang="EN"><strong>Get more HMS news here</strong></span></a><span lang="EN" xml:lang="EN"></span></p><p><span lang="EN" xml:lang="EN">The researchers tracked the activity of neurons in the visual cortex of the brains of mice while the animals remained in a quiet waking state. They found that occasionally these neurons fired in a pattern similar to one that occurred when a mouse looked at an actual image, suggesting that the mouse was thinking â or daydreaming â about the image. Moreover, the patterns of activity during a mouseâs first few daydreams of the day predicted how the brainâs response to the image would change over time. </span></p><p><span lang="EN" xml:lang="EN">The research provides tantalizing, if preliminary, evidence that daydreams can shape the brainâs future response to what it sees. This causal relationship needs to be confirmed in further research, the team cautioned, but the results offer an intriguing clue that daydreams during quiet waking may play a role in brain plasticity â the brainâs ability to remodel itself in response to new experiences.</span></p><p><span lang="EN" xml:lang="EN">âWe wanted to know how this daydreaming process occurred on a neurobiological level, and whether these moments of quiet reflection could be important for learning and memory,â said lead author Nghia Nguyen, a PhD student in neurobiology in the Blavatnik Institute at HMS. </span></p><h3><span lang="EN" xml:lang="EN"><strong>An overlooked brain region</strong></span></h3><div><p><span lang="EN" xml:lang="EN">Scientists have spent considerable time studying how neurons replay past events to form memories and map the physical environment in the hippocampus, a seahorse-shaped brain region that plays a key role in memory and spatial navigation.</span></p><p><span lang="EN" xml:lang="EN">By contrast, there has been little research on the replay of neurons in other brain regions, including the visual cortex. Such efforts would provide valuable insights about how visual memories are formed. </span></p></div><p><span lang="EN" xml:lang="EN">âMy lab became interested in whether we could record from enough neurons in the visual cortex to understand what exactly the mouse is remembering â and then connect that information to brain plasticity,â said senior author </span><a href="https://www.andermannlab.com/"><span lang="EN" xml:lang="EN">Mark Andermann</span></a><span lang="EN" xml:lang="EN">, professor of medicine at Beth Israel Deaconess Medical Center, and professor of neurobiology at HMS. </span></p><figure><article><img loading="lazy" src="https://hms.harvard.edu/sites/default/files/2023-12/MouseMovie-1-and-2-400x320.gif" width="400" height="320" alt="A checkerboard pattern of gray and black and white squares that morphs into another, similar pattern"></article><figcaption>During the experiments, mice repeatedly looked at one of two images, shown here, with one-minute breaks in between. The images were selected based on their ability to elicit a strong response from neurons in the visual cortex. Video: Andermann lab</figcaption></figure><p><span lang="EN" xml:lang="EN">In the new study, the researchers repeatedly showed mice one of two images, each consisting of a different checkerboard pattern of gray and dappled black and white squares. Between images, the mice spent a minute looking at a gray screen. The team simultaneously recorded activity from around 7,000 neurons in the visual cortex. </span></p><p><span lang="EN" xml:lang="EN">The researchers found that when a mouse looked at an image, the neurons fired in a specific pattern, and the patterns were different enough to discern image one from image two. More important, when a mouse looked at the gray screen between images, the neurons sometimes fired in a similar, but not identical, pattern, as when the mouse looked at the image, a sign that it was daydreaming about the image. These daydreams occurred only when mice were relaxed, characterized by calm behavior and small pupils. </span></p><p><span lang="EN" xml:lang="EN">Unsurprisingly, mice daydreamed more about the most recent image â and they had more daydreams at the beginning of the day than at the end, when they had already seen each image dozens of times. </span></p><figure><article><img loading="lazy" src="https://hms.harvard.edu/sites/default/files/2023-12/FiringMouseNeurons-400x274.gif" width="400" height="274" alt="A grayscale image showing a cloud-like group of neurons lighting up"></article><figcaption>Between images, mice spent a minute looking at a gray screen. During this time, neurons in the visual cortex of the brain, shown here, occasionally fired in a pattern similar to one seen when the mice were looking at an image, suggesting that mice were daydreaming about the image. Video: Andermann lab</figcaption></figure><p><span lang="EN" xml:lang="EN">But what the researchers found next was completely unexpected. </span></p><p><span lang="EN" xml:lang="EN">Throughout the day, and across days, the activity patterns seen when the mice looked at the images changed â what neuroscientists call ârepresentational drift.â Yet this drift wasnât random. Over time, the patterns associated with the images became even more different from each other, until each involved an almost entirely separate set of neurons. Notably, the pattern seen during a mouseâs first few daydreams about an image predicted what the pattern would become when the mouse looked at the image later. </span></p><p><span lang="EN" xml:lang="EN">âThereâs drift in how the brain responds to the same image over time, and these early daydreams can predict where the drift is going,â Andermann said. </span></p><p><span lang="EN" xml:lang="EN">Finally, the researchers found that the visual cortex daydreams occurred at the same time as replay activity occurred in the hippocampus, suggesting that the two brain regions were communicating during these daydreams. </span></p><h3><span lang="EN" xml:lang="EN"><strong>To sit, perchance to daydream</strong></span></h3><p><span lang="EN" xml:lang="EN">Based on the results of the study, the researches suspect that these daydreams may be actively involved in brain plasticity. </span></p><p><span lang="EN" xml:lang="EN">âWhen you see two different images many times, it becomes important to discriminate between them. Our findings suggest that daydreaming may guide this process by steering the neural patterns associated with the two images away from each other,â Nguyen said, while noting that this relationship needs to be confirmed. </span></p><p><span lang="EN" xml:lang="EN">Nguyen added that learning to differentiate between the images should help the mouse respond to each image with more specificity in the future. </span></p><p><span lang="EN" xml:lang="EN">These observations align with a growing body of </span><a href="https://www.sciencedirect.com/science/article/pii/S0149763422002883?casa_token=MBHEs_LeUGwAAAAA:KWgpbzTsGl7jv55nOZFGPssjIi-0j8-H1Th5rZ52Jxt71QglVXVsmU4BpcIhUAjtDw4QPyhXYHQ"><span lang="EN" xml:lang="EN">evidence in rodents and humans</span></a><span lang="EN" xml:lang="EN"> that entering a state of quiet wakefulness after an experience can improve learning and memory. </span></p><p><span lang="EN" xml:lang="EN">Next, the researchers plan to use their imaging tools to visualize the connections between individual neurons in the visual cortex and to examine how these connections change when the brain âseesâ an image. </span></p><p><span lang="EN" xml:lang="EN">âWe were chasing this 99 percent of unexplored brain activity and discovered that thereâs so much richness in the visual cortex that nobody knew anything about,â Andermann said. </span></p><p><span lang="EN" xml:lang="EN">Whether daydreams in people involve similar activity patterns in the visual cortex is an open question, and the answer will require additional experiments. However, there is preliminary evidence that an analogous process occurs in humans when they recall visual imagery.</span></p><p><a href="https://bucknerlab.fas.harvard.edu/"><span lang="EN" xml:lang="EN">Randy Buckner</span></a><span lang="EN" xml:lang="EN">, the Sosland Family Professor of Psychology and of Neuroscience at Harvard University, has shown that </span><a href="https://www.pnas.org/doi/10.1073/pnas.97.20.11125"><span lang="EN" xml:lang="EN">brain activity in the visual cortex increases</span></a><span lang="EN" xml:lang="EN"> when people are asked to recall an image in detail. Other studies have recorded </span><a href="https://www.science.org/doi/10.1126/science.aax1030"><span lang="EN" xml:lang="EN">flurries of electrical activity</span></a><span lang="EN" xml:lang="EN"> in the visual cortex and the hippocampus during such recall. </span></p><p><span lang="EN" xml:lang="EN">For the researchers, the results of their study and others suggest that it may be important to make space for moments of quiet waking that lead to daydreams. For a mouse, this may mean taking a pause from looking at a series of images and, for a human, this could mean taking a break from scrolling on a smartphone. </span></p><p><span lang="EN" xml:lang="EN">âWe feel pretty confident that if you never give yourself any awake downtime, youâre not going to have as many of these daydream events, which may be important for brain plasticity,â Andermann said. </span></p><p><span lang="EN" xml:lang="EN"><strong>Authorship, funding, disclosures</strong></span></p><p><span lang="EN" xml:lang="EN">Additional authors on the paper include Andrew Lutas, Oren Amsalem, Jesseba Fernando, Andy Young-Eon Ahn, Richard Hakim, Josselyn Vergara, Justin McMahon, Jordane Dimidschstein, and Bernardo Sabatini.</span></p><p><span lang="EN" xml:lang="EN">The research was supported by a National Defense Science and Engineering Fellowship, a Howard Hughes Medical Institute Gilliam Fellowship, the National Institutes of Health (F32 DK112589; DP2 DK105570; DP1 AT010971-02S1; R01 MH12343), a Davis Family Foundation award, a McKnight Scholar Award, a Harvard Mind Brain Behavior Interfaculty Initiative Faculty Research Award, the Harvard Brain Science Initiative Bipolar Disorder Seed Grant, and by Kent and Liz Dauten. </span></p>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How Lego builds a new Lego set (274 pts)]]></title>
            <link>https://www.theverge.com/c/23991049/lego-ideas-polaroid-onestep-behind-the-scenes-price</link>
            <guid>38653456</guid>
            <pubDate>Fri, 15 Dec 2023 12:25:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/c/23991049/lego-ideas-polaroid-onestep-behind-the-scenes-price">https://www.theverge.com/c/23991049/lego-ideas-polaroid-onestep-behind-the-scenes-price</a>, See on <a href="https://news.ycombinator.com/item?id=38653456">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
		
			<div>
					<p>
		Marc Corfmat was a teenager when he began to compete for Legoâs ultimate prize: the chance to design an official set. He and his brother Nick had been building custom Lego creations ever since they were kids, sometimes in California, sometimes during vacations at their grandparentsâ home in La Rochelle, France. They shared their models <a href="https://www.youtube.com/c/MiniBrickProductions/videos">on YouTube</a> and posted their creations to Legoâs website, but interest from the Lego world came slowly, if it came at all.
</p>


					<p>
		Then, in 2020, the brothers started having some luck. <a href="https://ideas.lego.com/">The Lego Ideas program</a> gives fans the chance to turn their designs into reality, offering both fame and a small fortune â&nbsp;1 percent of net sales â to anyone who can convince 10,000 peers and The Lego Group that their set deserves to exist. After three years and 18 submissions, Marc finally cleared the 10,000-vote hurdle with a design based on <a href="https://ideas.lego.com/projects/d0772ba6-298a-44df-ba84-f26faa8d7216"><em>Avatar: The Last Airbender</em></a>. A month later, <a href="https://ideas.lego.com/projects/f4dead4b-7900-451a-9cfe-96c4ab3e756c">his <em>Tintin</em> idea</a> was chosen as a staff pick. <a href="https://ideas.lego.com/projects/0b9f43ac-67c0-4108-9e82-a44d6574b8ab/official_comments#content_nav_tabs">Another design</a> based on <em>The Polar Express </em>hit 10,000 votes the next year.
</p>


					<p>
		And thenâ¦ nothing. The <em>Tintin</em> votes dried up, and Lego rejected both his fan-favorite <em>Avatar</em> and <em>Polar Express </em>ideas<em>. </em>The company never says why it rejects an Ideas submission, only that deciding factors include everything from âplayabilityâ and âbrand fitâ to the difficulties in licensing another companyâs IP.
</p>


					<p>
		âWe knew it was almost impossible to get products on the shelves. You see maybe a few selected a year out of thousands of submissions â but even that slight glimmer of hope was enough to really keep us going,â says Marc, now a graduate student in mechanical engineering at the University of California, Davis.
</p>


					<p>
		Then, he decided to try an idea that had been noodling about his brain: a Polaroid, like one of the instant cameras his sister Mia liked using. Marc wasnât a Polaroid devotee himself, but heâd liked the iconic look of the original 1977 Polaroid OneStep. The rainbow stripe camera had lived on his internal mood board for âquite some time,â but when he saw that a 2020 Lego <em>Minions</em> set had introduced <a href="https://www.bricklink.com/catalogItemIn.asp?P=68327&amp;in=S">the perfect size lens ring</a> for his purposes, he decided to begin building.
</p>


			</div>
		
					<div>
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn0.vox-cdn.com/thumbor/FpaAR448zYP_rwB0naZjb3AzIi0=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161196/MarcCorfmatPicture_4_3.jpg" data-sourcetablet="https://cdn3.vox-cdn.com/thumbor/OLne4uI2UUgGwYUxQ16dyP0-Ujw=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161196/MarcCorfmatPicture_4_3.jpg" data-sourcemobile="https://cdn3.vox-cdn.com/thumbor/_GSzwxYPek3-4dbwRPRmZZ3ejes=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161196/MarcCorfmatPicture_4_3.jpg" alt="Marc Corfmat is the fan designer behind this set â here, heâs holding the original Polaroid OneStep SX-70 instant camera." src="https://cdn3.vox-cdn.com/thumbor/_GSzwxYPek3-4dbwRPRmZZ3ejes=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161196/MarcCorfmatPicture_4_3.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>Marc Corfmat is the fan designer behind this set â here, heâs holding the original Polaroid OneStep SX-70 instant camera.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn1.vox-cdn.com/thumbor/SG-jj-rN8oWc6JRpGCeQ_6ZGB_0=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161292/Progress3.jpg" data-sourcetablet="https://cdn0.vox-cdn.com/thumbor/WiTH--UfUDK12esDYQPOqfFRw9Q=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161292/Progress3.jpg" data-sourcemobile="https://cdn0.vox-cdn.com/thumbor/sYOCgbZ0H0Dx5cYJAT-ThsPrJes=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161292/Progress3.jpg" alt="Marcâs original digital designs included a truck tire around the lens." src="https://cdn0.vox-cdn.com/thumbor/sYOCgbZ0H0Dx5cYJAT-ThsPrJes=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161292/Progress3.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>Marcâs original digital designs included a truck tire around the lens.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn1.vox-cdn.com/thumbor/YQojalpfimOHBOID89F6xdoURik=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161283/PolaroidSideViewOpen.jpg" data-sourcetablet="https://cdn2.vox-cdn.com/thumbor/V7fyMu8eU_H9xgMxg-WTl_RQRfI=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161283/PolaroidSideViewOpen.jpg" data-sourcemobile="https://cdn2.vox-cdn.com/thumbor/3Y7ZZ3SpmulOaOaakgsftepFx_s=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161283/PolaroidSideViewOpen.jpg" alt="Marcâs final fan renders show an opening film bay on the front of the camera and a prominent dial on the side so you can spit out photos." src="https://cdn2.vox-cdn.com/thumbor/3Y7ZZ3SpmulOaOaakgsftepFx_s=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161283/PolaroidSideViewOpen.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>Marcâs final fan renders show an opening film bay on the front of the camera and a prominent dial on the side so you can spit out photos.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn2.vox-cdn.com/thumbor/DAActsXdL2Y3kZWJPz0xjtFwwe8=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161072/marc_lego_polaroid_prototype.jpg" data-sourcetablet="https://cdn3.vox-cdn.com/thumbor/dkeDEmdejlVmTfdA6ER_kTJTT0Y=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161072/marc_lego_polaroid_prototype.jpg" data-sourcemobile="https://cdn0.vox-cdn.com/thumbor/6Rj9MOT1DlQJaUjwuirKouh7Qgw=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161072/marc_lego_polaroid_prototype.jpg" alt="One of Marcâs physical prototypes, with a different lens idea." src="https://cdn0.vox-cdn.com/thumbor/6Rj9MOT1DlQJaUjwuirKouh7Qgw=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161072/marc_lego_polaroid_prototype.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>One of Marcâs physical prototypes, with a different lens idea.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn0.vox-cdn.com/thumbor/bRDRDH68c8kVIE3R1N4FWIfBP00=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161222/polaroid_marc_corfmat_lego_4_3.gif.gif" data-sourcetablet="https://cdn2.vox-cdn.com/thumbor/4oO45CQm27ZSgM20DHend-XErxY=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161222/polaroid_marc_corfmat_lego_4_3.gif.gif" data-sourcemobile="https://cdn0.vox-cdn.com/thumbor/m433V4pGlapbuRfi5hHvO0vCYOc=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161222/polaroid_marc_corfmat_lego_4_3.gif.gif" alt="Marcâs animation of his Lego Polaroid fan design shows it pushing a photo brick in and out." src="https://cdn.vox-cdn.com/csk/bc589934-607c-4e08-aa73-839ad29e1951/2f7ff42a-850b-48b6-a4a9-9a9d63fecacb/images/placeholder.png">
    	<label tabindex="0">
			<div>
				
				<p><span>Marcâs animation of his Lego Polaroid fan design shows it pushing a photo brick in and out.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
							</div>
		
			<div>
					<p>
		Everything just clicked. âAll the angles were lining up perfectly, everything was working,â he says. âIt very quickly became apparent to me that I was falling in love with this thing.â&nbsp;
</p>


					<p>
		And realizing that, Marc decided to do something differently with his Lego Ideas submission in January 2022: he made it <em>move</em>. His model let you âload filmâ by opening the iconic hinged door, then âejectâ a photo by turning a dial or sliding a hidden lever underneath. For the first time, he <a href="https://ideas.lego.com/projects/200dd32e-8ec8-44aa-8f7d-e4dcc6f74e5c">showed off motion on the web</a> in crisp, clean animations that made the gadgety design look irresistible. It got the âstaff pickâ nod in under two weeks and hit 10,000 supporters in under two months. And this time, Lego finally got in touch.
</p>


					<p>
		Today, Lego is opening preorders for its replica of the classic rainbow stripe Polaroid OneStep SX-70 instant camera, based on Marcâs homegrown build. Lego sent one to <em>The Verge</em> to build and toy with, and as Iâll explain later, the $80 / â¬80 / Â£70 set is a delight. Lego also granted us multiple interviews to discuss <em>how</em> a Lego dream comes to life â&nbsp;and the challenges that come with turning a fan-made design into a ready-to-sell product. 
</p>


			</div>
		
					<div>
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn2.vox-cdn.com/thumbor/FNPiZ6zFEYRlDvwY842AtRGlrfU=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161538/1vpavic_20231012__0030.jpg" data-sourcetablet="https://cdn3.vox-cdn.com/thumbor/COvBNc4ZVL4mAlFCtuFJ0JiVGf8=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161538/1vpavic_20231012__0030.jpg" data-sourcemobile="https://cdn1.vox-cdn.com/thumbor/B5WMvdioR1zcj1H6RYRRQQvY-2w=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161538/1vpavic_20231012__0030.jpg" alt="I hold up the final prototype of Legoâs Polaroid as if to take a photo, with its iconic âOneStepâ and âPolaroid Land Cameraâ badges on display." src="https://cdn1.vox-cdn.com/thumbor/B5WMvdioR1zcj1H6RYRRQQvY-2w=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161538/1vpavic_20231012__0030.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>I hold up the final prototype of Legoâs Polaroid as if to take a photo, with its iconic âOneStepâ and âPolaroid Land Cameraâ badges on display.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn1.vox-cdn.com/thumbor/b_pKsGIA-xY-ieAh3yIb-ScSkyM=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161540/1vpavic_20231012__0016.jpg" data-sourcetablet="https://cdn1.vox-cdn.com/thumbor/w4xpF4R4stZi3RAd4AjxNMHW4hM=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161540/1vpavic_20231012__0016.jpg" data-sourcemobile="https://cdn3.vox-cdn.com/thumbor/huWMQcOyqJiQ7DUX2Mcghfv8vWU=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161540/1vpavic_20231012__0016.jpg" alt="The Lego Ideas Polaroid OneStep in final prototype form, with its film bay open, sitting alongside its brick-built film box and photocards." src="https://cdn3.vox-cdn.com/thumbor/huWMQcOyqJiQ7DUX2Mcghfv8vWU=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161540/1vpavic_20231012__0016.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>The Lego Ideas Polaroid OneStep in final prototype form, with its film bay open, sitting alongside its brick-built film box and photocards.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn2.vox-cdn.com/thumbor/-tX4zBc8N3fkd9B5dFlu74RP_ao=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161746/lego_polaroid_comparo.gif" data-sourcetablet="https://cdn0.vox-cdn.com/thumbor/4SowmjtScUNFi4kufnXxpa0mzqo=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161746/lego_polaroid_comparo.gif" data-sourcemobile="https://cdn2.vox-cdn.com/thumbor/9OLgumhKvRbdtJ94ITnskIEIUT0=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161746/lego_polaroid_comparo.gif" alt="Hereâs a GIF we made that flips back and forth between the Lego Polaroid and the one that takes film. You can catch some of the minute visual differences, like the deeper, wider film bay and wide-angle viewfinder on the original." src="https://cdn.vox-cdn.com/csk/bc589934-607c-4e08-aa73-839ad29e1951/2f7ff42a-850b-48b6-a4a9-9a9d63fecacb/images/placeholder.png">
    	<label tabindex="0">
			<div>
				
				<p><span>Hereâs a GIF we made that flips back and forth between the Lego Polaroid and the one that takes film. You can catch some of the minute visual differences, like the deeper, wider film bay and wide-angle viewfinder on the original.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn0.vox-cdn.com/thumbor/PCFj3M-VFo4EjBLOiIBr5GTUcCE=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163112/1vpavic_20231012__0055.jpg" data-sourcetablet="https://cdn2.vox-cdn.com/thumbor/FrGds2ZAV_GtJzvxuw_zrNqG910=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163112/1vpavic_20231012__0055.jpg" data-sourcemobile="https://cdn1.vox-cdn.com/thumbor/KaSnlw0T_UmMrkKWSUdnIiYvS-M=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163112/1vpavic_20231012__0055.jpg" alt="The setâs brick-built photo box has printed parts â no stickers â and comes with âphotosâ of Polaroid founder Edwin Land, Marcâs sister Mia at a cafe in France, and the Lego House." src="https://cdn1.vox-cdn.com/thumbor/KaSnlw0T_UmMrkKWSUdnIiYvS-M=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163112/1vpavic_20231012__0055.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>The setâs brick-built photo box has printed parts â no stickers â and comes with âphotosâ of Polaroid founder Edwin Land, Marcâs sister Mia at a cafe in France, and the Lego House.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn3.vox-cdn.com/thumbor/u_4A4uu5k0v2ZoL3B-_Rg2IKUoM=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161548/1vpavic_20231012__0037.jpg" data-sourcetablet="https://cdn2.vox-cdn.com/thumbor/jsfsH_7YxVwrIO-o6sptSuDX0FQ=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161548/1vpavic_20231012__0037.jpg" data-sourcemobile="https://cdn0.vox-cdn.com/thumbor/19S4bHku4br2VxeNZCCOmzYkWFQ=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161548/1vpavic_20231012__0037.jpg" alt="Looking through the Lego viewfinder, we get a narrow look at the Lego-ified face of the fan designerâs sister." src="https://cdn0.vox-cdn.com/thumbor/19S4bHku4br2VxeNZCCOmzYkWFQ=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161548/1vpavic_20231012__0037.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>Looking through the Lego viewfinder, we get a narrow look at the Lego-ified face of the fan designerâs sister.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
							</div>
		
			<div>
					<p>
		Each project moving through the Lego Ideas program starts the same way: a Lego designer tries to replicate the original fan creation in the real world to see what works and what doesnât. In Legoâs Billund, Denmark, headquarters, designers walk through a room called the Brick Library thatâs filled with veritable supermarket aisles of parts sorted by color and shape. They can take whatever they need.
</p>


					<p>
		<a href="https://brickset.com/sets/designer-Jordan-Scott/">Jordan David Scott</a>, a creative lead in the Lego Ideas program, says that creating a true Lego set <em>isnât </em>a straightforward series of steps. Though Marcâs Polaroid set was well built, every set must go through stringent quality control that inevitably leads to changes. To pass, even Legoâs seasoned designers head back to the drawing board to swap out parts again and again.&nbsp;
</p>


					<p>
		In addition to production, packing, packaging, and marketing, Lego has a host of teams that work directly with designers, including a function testing department, a safety department, an engineering department, and a textile department. Thereâs even a dedicated âbuilding instructionsâ department and a âmodel qualityâ team, each of which sits with designers and watches them build. They make sure the build process stays fun, the instructions make sense, and the model stays stable enough that thereâs little chance it breaks while you build it. âItâs like the final exam of the design process,â says Lego designer <a href="https://brickset.com/sets/designer-James-May">James May</a>.&nbsp;
</p>


					<p>
		While some designers think in bricks, May tells me he thinks in Legoâs internal design tool. While itâs similar to fan-facing tools like <a href="https://www.bricklink.com/v3/studio/download.page">BrickLink Studio</a>, which lets designers automatically snap together digital bricks, the internal Lego version is linked to the companyâs other projects and systems. That means he can collaborate with fellow designers, see which new Lego elements are becoming available, and even budget how much pieces will cost and how many bags of parts will be created and boxed in the final set.&nbsp;
</p>


					<p>
		May is the primary builder on the Polaroid set, and that means building the Lego camera many, many times over a matter of months â some digitally, some picture-perfect physical sets, and some physical models in random colors just for stress testing. One gets baked in an oven to simulate the set sitting out in a particularly hot country; another gets poked by a robot arm to test its moving parts. May says he doesnât keep track of âdraftsâ because each set is a <a href="https://en.wikipedia.org/wiki/Ship_of_Theseus">Ship of Theseus</a>, the same design constantly evolving as pieces are swapped out to satisfy Legoâs standards.
</p>


			</div>
		
					<div>
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn1.vox-cdn.com/thumbor/GPqRjxqEOGLh5YO2VUZ422drm9U=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163619/lego_polaroid_random_colors_4_3.jpg" data-sourcetablet="https://cdn1.vox-cdn.com/thumbor/igmrjWgz-m4JtKBtD66c7tiaYOY=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163619/lego_polaroid_random_colors_4_3.jpg" data-sourcemobile="https://cdn0.vox-cdn.com/thumbor/RuSRoen9jHazIki2vNQ3GxNDqrg=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163619/lego_polaroid_random_colors_4_3.jpg" alt="This particular red, gray, black, white, and yellow Lego Polaroid prototype was made from the colors that were on hand." src="https://cdn0.vox-cdn.com/thumbor/RuSRoen9jHazIki2vNQ3GxNDqrg=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163619/lego_polaroid_random_colors_4_3.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>This particular red, gray, black, white, and yellow Lego Polaroid prototype was made from the colors that were on hand.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn2.vox-cdn.com/thumbor/ulUK4U6FxPTdwJouMBsyHrP-lTc=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163629/lego_polaroid_internal_prototypes_4_3.jpg" data-sourcetablet="https://cdn3.vox-cdn.com/thumbor/-zUgm7_ngfElCar1L-dSP7e5a0E=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163629/lego_polaroid_internal_prototypes_4_3.jpg" data-sourcemobile="https://cdn3.vox-cdn.com/thumbor/_wQDM8w8SeHDxdrlFceKot7aMgM=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163629/lego_polaroid_internal_prototypes_4_3.jpg" alt="Lego went through many iterations of the Polaroid setâs internal mechanism, seen here without any housing â there are a few different ways to let the shutter button release a spring-loaded lever." src="https://cdn3.vox-cdn.com/thumbor/_wQDM8w8SeHDxdrlFceKot7aMgM=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163629/lego_polaroid_internal_prototypes_4_3.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>Lego went through many iterations of the Polaroid setâs internal mechanism, seen here without any housing â there are a few different ways to let the shutter button release a spring-loaded lever.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn2.vox-cdn.com/thumbor/OG7gM8izSOUXqP71oT-D8EqX9vs=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161562/1vpavic_20231012__0049_4_3.jpg" data-sourcetablet="https://cdn1.vox-cdn.com/thumbor/kDSKxe15J5qhvcc6kdMqnguXCXQ=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161562/1vpavic_20231012__0049_4_3.jpg" data-sourcemobile="https://cdn0.vox-cdn.com/thumbor/hT3y-1yspYivGqQSVi8RrFZtx7M=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161562/1vpavic_20231012__0049_4_3.jpg" alt="The final mechanism uses a simple orange and green linkage to raise a blue tooth, which lets the arm shoot forward. Here, you can see it encased in the Polaroidâs pyramid-like rear shell." src="https://cdn0.vox-cdn.com/thumbor/hT3y-1yspYivGqQSVi8RrFZtx7M=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161562/1vpavic_20231012__0049_4_3.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>The final mechanism uses a simple orange and green linkage to raise a blue tooth, which lets the arm shoot forward. Here, you can see it encased in the Polaroidâs pyramid-like rear shell.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn0.vox-cdn.com/thumbor/qGhLuJKSeMtEaz_xXpEQFsUSF3c=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163123/1vpavic_20231012__0059_4_3.jpg" data-sourcetablet="https://cdn3.vox-cdn.com/thumbor/ueq9BDoqDPQphTZmUc9zUrdUzW8=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163123/1vpavic_20231012__0059_4_3.jpg" data-sourcemobile="https://cdn1.vox-cdn.com/thumbor/SdGVn-7LEr59IoKaITwra5UTwKM=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163123/1vpavic_20231012__0059_4_3.jpg" alt="The result: when you press the shutter button, the Lego Polaroid shoots a photo out of its slot." src="https://cdn1.vox-cdn.com/thumbor/SdGVn-7LEr59IoKaITwra5UTwKM=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163123/1vpavic_20231012__0059_4_3.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>The result: when you press the shutter button, the Lego Polaroid shoots a photo out of its slot.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
							</div>
		
			<div>
					<p>
		In the case of the Lego Polaroid, one particular challenge kept May and his colleagues swapping out parts: a request from the CEO of Polaroid himself.&nbsp;
</p>


					<p>
		When Lego came calling, Polaroid CEO Oskar Smolokowski didnât hesitate. âIâm a (casual) Lego fan building a few sets a year so it wasnât really a decision I had to think about!â he tells me via email. He accepted Legoâs offer almost on the spot, he says, while dodging my question about how much Lego did or didnât pay for the license. âWe didnât feel the need to negotiate anything <span> it felt fair and win-win to us,â he writes.</span>
</p>


					<p>
		But Polaroidâs CEO did have one ask: he wanted the Lego Polaroidâs big red shutter button to <em>do</em> <em>something</em>. âI really wanted the camera to be as much of a camera as possible,â he recalls, and the CEO brought up this idea in the very first Lego / Polaroid kickoff meeting, remembers Scott.
</p>


					<p>
		Lego wasnât quite ready to commit to that. âI said yeahâ¦ we can look into it?â Scott recalls. Marcâs design could already eject a photo by turning a dial, and Lego had already successfully replicated that. The dial would definitely be Plan B.
</p>


					<p>
		But Scott decided to challenge May, who had previously worked on <a href="https://youtu.be/HRrHf57TMa8?si=Jga7xnV53wVzDuIi&amp;t=134">the moving Lego Typewriter</a>, to make the button work. With help from other teams that specialize in Legoâs mechanism-friendly Technic bricks, they landed on using a pair of tiny rubber bands connected to a sliding arm to eject the photo.&nbsp;
</p>


						</div>
						
						<div>
					<p>
		âIt definitely didnât work the first time,â says Scott. âI donât know how many versions James went through.â They had to tinker with tiny details to make the mechanism work â making the contraption half a Lego plate thicker here or moving it over by one brickâs width. âA lot of it came down to nuances,â says Scott, âand all these subtleties you wouldnât necessarily think of like which bricks are better at <em>stopping</em> it from firing out.â
</p>


					<p>
		In the end, the team attached the shutter button to an internal lever that, when pushed, raises an internal tooth, which releases a spring-loaded carriage that pushes the photo out with a satisfying <em>chonk</em> each time.
</p>


					<p>
		âEveryone came together to make this happen, and itâs so much better,â says Scott, adding that colleagues were wowed by the action (and sound) when they came by.
</p>


					<p>
		They also had to make sure the button worked no matter how many times someone pressed it. âA lot of the feedback we got was that the function just isnât triggering after several hundred or several thousand times, itâs failing,â he adds. The function department even rigged up a robot to simulate pushing the shutter button tens of thousands of times â one which, Iâm unreasonably pleased to say, uses Lego to test Lego: 
</p>


					<div><p><iframe src="https://www.youtube.com/embed/UR1Ul9Yn7Rw?rel=0" allowfullscreen="" scrolling="no" allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share;"></iframe></p></div>

			</div>
		
			<div>
					<p>
		The other half of the Polaroid button challenge: figuring out how to create a Polaroid-like âpictureâ worthy of being ejected from the model. Originally, they tried a flat tile like Marc did but decided it wasnât right.&nbsp;
</p>


					<p>
		âIt looked Lego, it felt Lego, but it didnât feel like a Polaroid photo because you want it to be thin; it also meant we couldnât print on the back because you need the tube side; it caused a lot of issues in production because of warping,â says Scott.&nbsp;
</p>


					<p>
		But Legoâs textile department came to the rescue: âWe found this card, could we use this for anything?â Scott remembers them asking. It was a thin sheet of matte polypropylene plastic â a âfoilâ â that had only been used a couple of times before in Lego sets, most prominently <a href="https://jaysbrickblog.com/reviews/review-lego-80109-lunar-new-year-ice-festival/#:~:text=this%20photobooth%20for%20minifigures">in this Chinese Lunar New Year Ice Festival photobooth</a> where minifigures can pop their heads through. It was flexible (though you canât <em>quite</em> â<a href="https://www.cnn.com/2004/TECH/ptech/02/17/polaroid.warns.reut/">shake it like a Polaroid picture</a>â), and it could be easily printed on both sides.&nbsp;
</p>


					<p>
		So, Lego graphics designer Matthew Parsons, who typically works for the Lego City team, embedded himself in the companyâs textile department to help figure out the foils. A photographer himself, he jumped at the chance to be part of the Polaroid project, and he designed the three Easter egg photocards that come in every box.
</p>


					<p>
		Lego got one of the images, choosing to depict the <a href="https://en.wikipedia.org/wiki/Lego_House_(Billund)">Lego House</a>; Polaroid chose an iconic photo of its founder, Edwin Land; and Marc decided to thank his inspirations: the city of La Rochelle, France, where he cultivated his love of Lego and first prototyped the set, and his sister Mia, whose instant photography hobby brought him the idea. You can see some of Parsonsâ sketches in our embedded gallery.
</p>


					<p>
		One of the last challenges was safety. Unlike actual Polaroids, the foils have rounded corners rather than sharp points. But even then, Legoâs safety department had to continually test the launcher during the monthslong project to ensure <em>other </em>unspecified objects couldnât be dangerously blasted. With just a few weeks left in the schedule, they told the team theyâd found one more undesirable object that someone could potentially launch out of the camera. âSo that was another week of testing and building,â Scott says.
</p>


					<p>
		The final design ensures four Lego studs barely brush against the photo every time it ejects thanks to two sets of locking hinges that hold them at just the right angle. Inclined slopes on the edge of the film slot make the photo curve slightly upward as it ejects, too. Put it all together, press the button, and â <em>chonk</em> â the photo extends just far enough for you to easily grab, almost exactly an inch, instead of shooting all the way out. 
</p>


			</div>
		
					<div>
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn1.vox-cdn.com/thumbor/bbyE4HA2epXCiwAsfBHBNd9HKeY=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163655/first_digital_sketch_lego_polaroid.jpg" data-sourcetablet="https://cdn3.vox-cdn.com/thumbor/5a7nifd85hGX-fmL4bFVWXPqJCs=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163655/first_digital_sketch_lego_polaroid.jpg" data-sourcemobile="https://cdn3.vox-cdn.com/thumbor/W96THeP6-UmoV2xhEU-3ln2n9jw=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163655/first_digital_sketch_lego_polaroid.jpg" alt="The first digital mockup of the Lego Polaroid shows how it resembled Marcâs design. You see colorful highlights like the red shutter button, gold film ejector, and rainbow stripe on the film box â before any stickers or printing are added." src="https://cdn3.vox-cdn.com/thumbor/W96THeP6-UmoV2xhEU-3ln2n9jw=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163655/first_digital_sketch_lego_polaroid.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>The first digital mockup of the Lego Polaroid shows how it resembled Marcâs design. You see colorful highlights like the red shutter button, gold film ejector, and rainbow stripe on the film box â before any stickers or printing are added.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn3.vox-cdn.com/thumbor/DYPK4cfN7OlFQ2KUcVpH5-27TeA=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163646/lego_polaroid_sketches_final.jpg" data-sourcetablet="https://cdn1.vox-cdn.com/thumbor/rcrOMGK4JxGGOQoF0ygORsv8aiI=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163646/lego_polaroid_sketches_final.jpg" data-sourcemobile="https://cdn0.vox-cdn.com/thumbor/kvuTFpVCrlN2mwU2Ur1xVhGWG50=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163646/lego_polaroid_sketches_final.jpg" alt="Lego graphics designer Matthew Parsonsâ sketches and art for one included photocard, starting in black and white, then color, then refined." src="https://cdn0.vox-cdn.com/thumbor/kvuTFpVCrlN2mwU2Ur1xVhGWG50=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163646/lego_polaroid_sketches_final.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>Lego graphics designer Matthew Parsonsâ sketches and art for one included photocard, starting in black and white, then color, then refined.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn2.vox-cdn.com/thumbor/BjWJv8j40H6Xyt4KaCj53aApw2A=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163669/lego_polaroid_final_look.jpg" data-sourcetablet="https://cdn3.vox-cdn.com/thumbor/0SzaxksBnfQ_1kizZEJmtcbZAmg=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163669/lego_polaroid_final_look.jpg" data-sourcemobile="https://cdn3.vox-cdn.com/thumbor/JoZYJFvdaDWOJNkVedePGKUzSI0=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163669/lego_polaroid_final_look.jpg" alt="A final image of the set, provided by Lego, with all the decorations and printing complete." src="https://cdn3.vox-cdn.com/thumbor/JoZYJFvdaDWOJNkVedePGKUzSI0=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163669/lego_polaroid_final_look.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>A final image of the set, provided by Lego, with all the decorations and printing complete.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn1.vox-cdn.com/thumbor/S0vPpsOvNhuhjuENT9IMQWYrzrY=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163110/1vpavic_20231012__0058_4_3.jpg" data-sourcetablet="https://cdn3.vox-cdn.com/thumbor/Ddc5ph2rO4A3YgMsMY9z2KarjCE=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163110/1vpavic_20231012__0058_4_3.jpg" data-sourcemobile="https://cdn2.vox-cdn.com/thumbor/-AEXzxXNpSvVCh-pqSyRFRv5pDE=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163110/1vpavic_20231012__0058_4_3.jpg" alt="The final prototype photocards in real life, sitting against the Lego camera." src="https://cdn2.vox-cdn.com/thumbor/-AEXzxXNpSvVCh-pqSyRFRv5pDE=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163110/1vpavic_20231012__0058_4_3.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>The final prototype photocards in real life, sitting against the Lego camera.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn0.vox-cdn.com/thumbor/Lt7xq_y74pFU9jJw_DXiZoyiwGw=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163676/lego_polaroid_studded_vs_semi.jpg" data-sourcetablet="https://cdn0.vox-cdn.com/thumbor/sC5nHTD-PwpOKsrOyPRDARifMv4=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163676/lego_polaroid_studded_vs_semi.jpg" data-sourcemobile="https://cdn3.vox-cdn.com/thumbor/lif7CWHndiHFYnXIxLRvqtCOlUo=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163676/lego_polaroid_studded_vs_semi.jpg" alt="Lego tried both smooth and partially studded backs for the Ideas Polaroid OneStep but settled on fully studded in the end.  " src="https://cdn3.vox-cdn.com/thumbor/lif7CWHndiHFYnXIxLRvqtCOlUo=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163676/lego_polaroid_studded_vs_semi.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>Lego tried both smooth and partially studded backs for the Ideas Polaroid OneStep but settled on fully studded in the end.  </span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn0.vox-cdn.com/thumbor/I2_WN1WfUd8qLoRD8E1ZeCjSxSw=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161773/1vpavic_20231012__0022.jpg" data-sourcetablet="https://cdn2.vox-cdn.com/thumbor/r4xiZN9k5NuBwsgkCqIm_Nj3_5k=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161773/1vpavic_20231012__0022.jpg" data-sourcemobile="https://cdn0.vox-cdn.com/thumbor/ZI9aWeQoxgVSu-ggUrHZGsbCsP8=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161773/1vpavic_20231012__0022.jpg" alt="And hereâs the real Polaroidâs textured back and the Lego Polaroidâs all-studded back, for comparison." src="https://cdn0.vox-cdn.com/thumbor/ZI9aWeQoxgVSu-ggUrHZGsbCsP8=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161773/1vpavic_20231012__0022.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>And hereâs the real Polaroidâs textured back and the Lego Polaroidâs all-studded back, for comparison.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
							</div>
		
			<div>
					<p>
		If youâve ever used an old Polaroid camera, you know that photos tend to pop out quite a bit more than an inch, accompanied by a stretchy black film to slow their roll. Itâs not the only way the Lego Polaroid diverges from the real thing, of course. You wonât find the OneStep SX-70âs trademark camera strap, or the film bayâs stickers with the manufacturerâs warranty support telephone number, or an optional green button that shipped in some markets, things Marc says he asked for when they solicited his input but says understandably didnât make the cut.&nbsp;
</p>


					<p>
		(He also says he would have preferred a smooth, tiled back instead of studs â but Lego did try that, and both Polaroid and Lego agreed they preferred the studded look. And you can swap the âOneStepâ sticker for a â1000â sticker, which is how some versions looked.)
</p>


					<p>
		Overall, Iâm wildly impressed by the result. I bought the actual 1977 camera over a year ago just because <a href="https://www.theverge.com/2022/10/25/23423120/lego-polaroid-land-camera-sx-70-replica-film-ideas">I knew this set was coming</a>, and I sometimes mistake one for the other on my office shelf. The size, shapes, and weight are incredibly close â both weigh approximately one pound, with the Lego setâs nose (and lens) mostly just protruding a little bit more than the actual camera. The body is also a tad narrower.&nbsp;
</p>


			</div>
		
				<div>
	<picture>
		<img data-sourcedesktop="https://cdn0.vox-cdn.com/thumbor/pPhGNxj4t0-JK1Ekg4cLovKU3ro=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161494/polaroid_of_polaroid_1.jpg" data-sourcetablet="https://cdn2.vox-cdn.com/thumbor/VSksGZs_sb6OsvH5i5awTKB5wkg=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161494/polaroid_of_polaroid_1.jpg" data-sourcemobile="https://cdn1.vox-cdn.com/thumbor/7RzM-MGnHz5jzsMlaSvXIyc3ZXE=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161494/polaroid_of_polaroid_1.jpg" alt="We shot some actual Polaroids of the Lego Polaroid with the Polaroid camera that itâs based on. Here it is in front of the Golden Gate Bridge in San Francisco and the historic Dutch Windmill." src="https://cdn1.vox-cdn.com/thumbor/7RzM-MGnHz5jzsMlaSvXIyc3ZXE=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161494/polaroid_of_polaroid_1.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>We shot some actual Polaroids of the Lego Polaroid with the Polaroid camera that itâs based on. Here it is in front of the Golden Gate Bridge in San Francisco and the historic Dutch Windmill.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
			<div>
					<p>
		There actually is a substantial nod to the missing camera strap on the back of the set, too, with openings for a strap cleverly sculpted by the gap in <a href="https://www.bricklink.com/v2/catalog/catalogitem.page?P=39613">heart-shaped Lego plates</a> â ones that meld into the cameraâs smooth corners thanks to a semi-advanced build technique. (If youâre a big Lego fan, youâll be familiar with the phrase âStuds Not On Top.â) The film bay eject lever, film counter, and flash hot shoe are all represented with gaps or bulges, too, and the mechanism inside the black-and-white shell is a hidden rainbow of color, using all the same hues as the rainbow stripe up front. 
</p>


					<p>
		(It inspired me to hunt down a copy of the classic rainbow stripe for the right rail of this <em>Verge</em> story, in fact â Polaroid doesnât really use the deep pink color anymore, and they had to dig it up at my request.)
</p>


					<p>
		The Lego team even splurged on a custom red plate with a white edge to represent Polaroidâs shutter button, plus two printed tiles for the brick-built film pack that reads âPolaroidâ and âTime-Zero Supercolor SX-70 Land Film.â
</p>


					<p>
		I havenât yet gotten to the single most satisfying step in the build, the one Lego saves for last: the iconic Polaroid rainbow stripe on this camera isnât a sticker. Itâs a sideways stack of 1x6 plates and <a href="https://www.newelementary.com/2018/12/lego-35459-1x3-inverted-tile-hole.html">1x3 inverted hole tiles</a> in colors that match up almost perfectly to Polaroidâs original hues, held together by thin Lego pipes. Itâs great â but it made me wonder why Lego still does use some other stickers in this design.
</p>


					<p>
		Many Lego fans are vocal about their preference for printed parts over stickers, and thereâs always annoyance when a set aimed at adults uses any stickers at all. Here, your âPolaroid Land Camera,â âOneStepâ or â1000,â and the exposure dialâs white and black EV marks are all sticky labels, not printed tiles.
</p>


			</div>
		
					<div>
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn2.vox-cdn.com/thumbor/ox0n4tHzoSMw_fKMDPpjWPCBa4Q=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163120/1vpavic_20231012__0060.jpg" data-sourcetablet="https://cdn1.vox-cdn.com/thumbor/OoTfdVle2HB2d7RV2wnyZAKCCrU=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163120/1vpavic_20231012__0060.jpg" data-sourcemobile="https://cdn1.vox-cdn.com/thumbor/dliybiQSMaoglbsFQxFUeGgDiZ0=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163120/1vpavic_20231012__0060.jpg" alt="The brick-built rainbow stripe that adorns the front of the Lego camera. Here it is all together, close enough so you can see the gaps that show how it was made." src="https://cdn1.vox-cdn.com/thumbor/dliybiQSMaoglbsFQxFUeGgDiZ0=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163120/1vpavic_20231012__0060.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>The brick-built rainbow stripe that adorns the front of the Lego camera. Here it is all together, close enough so you can see the gaps that show how it was made.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn3.vox-cdn.com/thumbor/KwlV5S4eJ0Va8k_W8HV4Y73WQbc=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163121/1vpavic_20231012__0057.jpg" data-sourcetablet="https://cdn3.vox-cdn.com/thumbor/9Mvj_ylUu05URHiE5Ne0cLx8Rv0=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163121/1vpavic_20231012__0057.jpg" data-sourcemobile="https://cdn1.vox-cdn.com/thumbor/TWlymZTAfCqnF65_OwfyJyRrONI=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163121/1vpavic_20231012__0057.jpg" alt="Hereâs a look at the rainbow stripe broken apart so you can see the Lego studs on the green plates inside." src="https://cdn1.vox-cdn.com/thumbor/TWlymZTAfCqnF65_OwfyJyRrONI=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25163121/1vpavic_20231012__0057.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>Hereâs a look at the rainbow stripe broken apart so you can see the Lego studs on the green plates inside.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
								<div>
	<picture>
		<img data-sourcedesktop="https://cdn0.vox-cdn.com/thumbor/_7Vu9TQFMz_rsBJLnaOmdaESw_o=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161577/zoom_with_lego_director_2.jpg" data-sourcetablet="https://cdn1.vox-cdn.com/thumbor/nfNyxoTtYbkrSoo7z2EpU350kQ8=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161577/zoom_with_lego_director_2.jpg" data-sourcemobile="https://cdn3.vox-cdn.com/thumbor/J7Lqp-6VThj_ipL5ngb_ftbEhOg=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161577/zoom_with_lego_director_2.jpg" alt="On a video call with&nbsp;The Verge, Lego Ideas creative lead Jordan David Scott holds up the key to the rainbow stripe in front of his eyes â a pair of inverted blue tiles with holes inside." src="https://cdn3.vox-cdn.com/thumbor/J7Lqp-6VThj_ipL5ngb_ftbEhOg=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161577/zoom_with_lego_director_2.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>On a video call with&nbsp;The Verge, Lego Ideas creative lead Jordan David Scott holds up the key to the rainbow stripe in front of his eyes â a pair of inverted blue tiles with holes inside.</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
							</div>
		
			<div>
					<p>
		To my great surprise, Scott was willing to explain how Lego makes those kinds of choices.
</p>


					<p>
		Legoâs picker system requires each printed piece to have its own unique storage bin, so rather than continually opening more warehouses, Lego limits how many custom parts designers can introduce each year.&nbsp;
</p>


					<p>
		âWe canât make everything decorated. We canât change every brick into every color,â Scott says. âOtherwise the portfolio would just explode in complexity, so we have teams that manage the complexity level.â&nbsp;
</p>


					<p>
		And those teams came up with one simple idea to stem the tide of complexity: âframes.â&nbsp;
</p>


					<p>
		Want a part in a different color? That costs designers a frame. A new piece? Spend some frames. Bring back an old out-of-print piece? Thatâs a frame, too. Every year, design leads like Scott are given a limited number of frames that they can spend on their entire portfolio for physical pieces that arenât readily at hand. âIf I have five products or 10 products coming out, I need to allocate where those frames go,â says Scott.&nbsp;
</p>


						</div>
						
						<div>
					<p>
		Doing so is âa bit of a puzzleâ to figure out which sets will need lots of frames â the <a href="https://www.theverge.com/23909975/lego-animal-crossing-pictures-price-release-date-sets">new <em>Animal Crossing</em> sets</a> with their custom minifigures probably ate a few â and which ones can be built mostly out of preexisting parts.&nbsp;
</p>


					<p>
		Designers also try to save frames by sharing brand-new bricks with other teams, giving them a heads-up that they might come in handy for other sets, too. Some of that happens automatically: âWhen someone puts in an order for a particular color change, we can see it showing up in the library of digital bricks,â says Scott.
</p>


					<p>
		Some of it is designers intentionally pooling their resources: âIf Ninjago are making something we could use, we kind of have a dialogue and say, âOh, we can use this as well, that would be great, so maybe we need to get you a frame or something to share it.ââ 
</p>


					<p>
		Designers always want more frames for their sets, May says. But he explains those constraints are just part of the process. When designers donât have as many frames as theyâd like, they have to get creative â just like any other Lego fan.&nbsp;
</p>


					<p>
		For the Lego Polaroid, the team spent a frame on the red and white shutter button â which could now appear in any number of other sets â and two frames for the decorations on the film pack, which are obviously exclusive to Polaroid. Scott planned to spend frames on ejecting photos, too: internally, he and his fellow designers were excited about making a new 8x6 printed photo tile, until the foils came along.
</p>


					<p>
		Polaroidâs CEO remembers one more thing that didnât make the cut: âI think the only other thing I may have mentioned was a little Edwin Land figure,â he says, referencing the founder of Polaroid. âThat wouldâve been awesome.â Instead, Land is on one of the three photocards that come with the set.
</p>


			</div>
		
				<div>
	<picture>
		<img data-sourcedesktop="https://cdn1.vox-cdn.com/thumbor/R2zLBoEnl9-uCdFDS1D49siHaUQ=/0x800/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161722/real_polaroids_polaroid_2.jpg" data-sourcetablet="https://cdn0.vox-cdn.com/thumbor/R6i5QHekqIE_nNEXFtDTL3hSS-A=/0x750/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161722/real_polaroids_polaroid_2.jpg" data-sourcemobile="https://cdn2.vox-cdn.com/thumbor/gJeDDOgBIl74dD2FUlIjgqERtP0=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161722/real_polaroids_polaroid_2.jpg" alt="Two more real, unedited Polaroids we shot of the Lego Polaroid with a Polaroid OneStep SX-70 â the camera itâs based on. One is me, holding the Lego Polaroid up to my eye facing the camera. The other is the Polaroid in its native habitat (on a railing next to the Camera Obscura near San Franciscoâs Cliff House, with the ocean in the background)." src="https://cdn2.vox-cdn.com/thumbor/gJeDDOgBIl74dD2FUlIjgqERtP0=/0x650/filters:no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/25161722/real_polaroids_polaroid_2.jpg">
    	<label tabindex="0">
			<div>
				
				<p><span>Two more real, unedited Polaroids we shot of the Lego Polaroid with a Polaroid OneStep SX-70 â the camera itâs based on. One is me, holding the Lego Polaroid up to my eye facing the camera. The other is the Polaroid in its native habitat (on a railing next to the Camera Obscura near San Franciscoâs Cliff House, with the ocean in the background).</span>
			</p></div>
		</label>
    	
		
	</picture>
</div>
		
			<div>
					<p>
		âJust thinking about the fact that because I submitted an idea like a year and a half ago, that now so many people in the community are going to have a Lego Polaroid set â itâs just insane,â says Marc.
</p>


					<p>
		I get the sense, though, that the process wasnât <em>entirely</em> a dream come true. Lego mostly took his idea and ran with it. It never flew him to Denmark to meet the designers in person, something he says he would have loved, nor did it ship him prototypes during the process; he got to see it on a video call. He assured me it wasnât a big deal â heâll get 10 free copies after all.&nbsp;
</p>


					<p>
		Lego demands a high level of secrecy, too: he felt he couldnât tell his own Lego-loving brother for <em>months</em>. Or his mom. Or his sister Mia, who may not quite know what sheâs gotten into. âLike, I donât think she understands that sheâs going to be in the Lego set, you know, mass-produced,â says Marc. (He says he did ask permission to âsteal her likeness,â and she was âtotally coolâ with it hypothetically being in Lego.)
</p>


					<p>
		But judging by their Lego Ideas page, Marc and his brother Nick donât seem to have been put off one bit. In September, their âMinibrick Productionsâ submitted a brick-built version of <a href="https://ideas.lego.com/projects/7a6d8d85-093d-4f6c-ab7f-48b405115d60/official_comments#content_nav_tabs">the <em>Interstellar</em> space shuttle</a> that took just weeks to become a Lego staff pick and has crossed 6,000 votes. <a href="https://ideas.lego.com/projects/53056645-ba8d-4a35-a219-77d30aa6f733">A set based on Blackpinkâs music video for âLovesick Girlsâ</a> hit 5,000 votes in August.
</p>


					<p>
		If youâre looking to follow in their footsteps with a Lego set of your own, hereâs Marcâs advice: design it like a product youâd want to sell. âShowcase its play features like youâd showcase a final product.â And â though this could be <a href="https://en.wikipedia.org/wiki/Survivorship_bias">survivorship bias</a> â he says you have to keep trying, pointing to his many previous rejections as evidence.&nbsp;
</p>


					<p>
		âI think you really just have to keep going and continue with that spark of hope, that maybe one of your future projects will become an actual set.â
</p>


			</div>
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[WebP is so great except it's not (224 pts)]]></title>
            <link>https://eng.aurelienpierre.com/2021/10/webp-is-so-great-except-its-not/</link>
            <guid>38653110</guid>
            <pubDate>Fri, 15 Dec 2023 11:32:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eng.aurelienpierre.com/2021/10/webp-is-so-great-except-its-not/">https://eng.aurelienpierre.com/2021/10/webp-is-so-great-except-its-not/</a>, See on <a href="https://news.ycombinator.com/item?id=38653110">Hacker News</a></p>
<div id="readability-page-1" class="page">
		<a href="#content">Skip to content</a>

	<div id="boxed-wrapper">
			
							
					
			<header>
				<div>
					<div data-margin-top="0px" data-margin-bottom="0px" data-margin-left="0px" data-margin-right="0px">
			<a href="https://eng.aurelienpierre.com/">

						<!-- standard logo -->
			<img src="https://photo.aurelienpierre.com/wp-content/uploads/sites/3/2017/03/signature-logo-petit.png" srcset="https://photo.aurelienpierre.com/wp-content/uploads/sites/3/2017/03/signature-logo-petit.png 1x, https://photo.aurelienpierre.com/wp-content/uploads/sites/3/2020/10/signature-logo-retina.png 2x" width="" height="" alt="AurÃ©lien PIERRE Engineering Logo" data-retina_logo_url="https://photo.aurelienpierre.com/wp-content/uploads/sites/3/2020/10/signature-logo-retina.png">

			
					</a>
		</div>		<nav aria-label="Main Menu"></nav>	

<nav aria-label="Main Menu Mobile"></nav>

					</div>
				
			</header>
								
							
				
					
							
			<div aria-label="Page Title Bar">

																							<h2>WebP is so greatâ¦ except itâs not</h2>

											
																
				</div>

						<main id="main">
				<div id="content">
					<!-- maths detected --><article><div><p>Iâm a responsible web designer,âand as such,âsince WordPress (finally) accepts media uploads of <code>image/webp</code> MIME type and since <strong>all</strong> <a href="https://caniuse.com/webp">web browsers</a> newer than september 2020 (even Apple Safari \o/) can display it,âI have been moving my <a href="https://photo.aurelienpierre.com/portfolio">photos library</a> to <a href="https://en.wikipedia.org/wiki/WebP">WebP</a>. After all,âwhen you create content,âthe least you can do is to also provide the smoothest user experience around it.</p>

<p>WebP falls close to magicalâ¯: lookie those file weightsâ¯! <a href="https://www.industrialempathy.com/posts/avif-webp-quality-settings/">15% savings</a> compared to JPEG at same qualityâ¯! What are we waiting forâ¯? Google even claims <a href="https://developers.google.com/speed/webp/docs/webp_study">25-34% smaller</a>.</p>

<p>There are dozens of WordPress plugins allowing you to convert your old media library on-the-fly,âmost of them operating as SaaS (Shit as a Software) and doing the conversion on their own servers,âwhich entitles them to make you pay a ridiculous amount for it, <a href="https://imagify.io/">one of them</a> Iâm very unhappy to have actually paid (something about sparing time,âwhich actually led to losing time AND money). All of them claim that their âaggressiveâ compression factor is safe for 99â¯% of your pictures.</p>

<p>The most technical ones will go as far as telling you that WebP quality greater than <code>lossy 80</code> is useless for most pictures,âsustaining their claim with a glorious <a href="https://groups.google.com/a/webmproject.org/forum/#!topic/webp-discuss/0GmxDmlexek">Google logo</a> encoded at various rates.âBecause everyone knows shooting logos is the bread and butter of every photographer,âespecially the Adobe Stock ones.âAlso,âlogos have their gradients following an hyper-laplacian distribution like any other natural image<sup id="fnref:1"><a href="#fn:1" role="doc-noteref">[1]</a></sup>. Or maybe not.âWho cares about gradients stats anywayâ¯? We are only talking about 2D compression heuristics with entropy and high-frequencies thresholding,âafter all.</p>

<p>So,âwhile I may have lost all respect for coding monkeys turned into image dudes just because a position opened (and everyone loves pics,ârightâ¯? They are fun and much easier on the brain than words), especially the internet image dudes,âI still fall every time for that silly assumption:&nbsp;people who are supposed to know,âactually know.âYears pass,âI&nbsp;donât learnâ¯: I&nbsp;read docs,âI&nbsp;do what they say,âI discover it doesnât work as promised,âonly then I remember those guys donât know shit about images.âAnd here I am,âloosing faith in humanity one wrong expert at a time.</p>

<p>In my great silliness,âI set the <a href="https://wordpress.org/plugins/webp-express/">third and last plugin I&nbsp;tried</a> to the advised <code>lossy 80</code> quality and trigger the batch conversion.âI&nbsp;have relative faith in it since it uses server-side <a href="https://en.wikipedia.org/wiki/GraphicsMagick">GraphicsMagic</a> instead of the unfortunate PHP shitstack (GD,âGmagick and the likes) or the laggy HTTP-error connection-timed-out DNS-said-not-today please-retry-later SaaS nonsense.</p>

<p>Everything goes well,âuntil this happensâ¦</p>

<p><a href="https://photo.aurelienpierre.com/wp-content/uploads/sites/3/2017/02/03-WEB-800x971.webp"><img decoding="async" data-orig-src="https://photo.aurelienpierre.com/wp-content/uploads/sites/3/2017/02/03-WEB-800x971.webp" alt="" src="https://photo.aurelienpierre.com/wp-content/uploads/sites/3/2017/02/03-WEB-800x971.webp"></a></p>

<p>To the non-educated eye,âthis might look ok,âbut for a photographer itâs not,âand for several reasons.âSee the posterized ring in the backgroundâ¯? First of all,âitâs not graceful,âbut then it has nothing to do there.âThis comes from a 16 bits scan of an Ilford Delta 400 film shot with a Mamiya RB 67, that is old school analog medium format at 6Ã7â¯cm.âThe silver halide crystals of the Delta 400 emulsion act as a natural dithering which makes high-frequency compressions more difficult and therefore prevent posterization in smooth areas.âSo,âfor any compression algo,âmanaging to posterize a Delta 400 scan is a feat of the wrong kind.</p>

<p>Look at the original JPEG at quality 85â¯:</p>

<p><a href="https://photo.aurelienpierre.com/wp-content/uploads/sites/3/2017/02/03-WEB-800x971.jpg"><img decoding="async" data-orig-src="https://photo.aurelienpierre.com/wp-content/uploads/sites/3/2017/02/03-WEB-800x971.jpg" alt="" src="https://photo.aurelienpierre.com/wp-content/uploads/sites/3/2017/02/03-WEB-800x971.jpg"></a></p>

<p>Itâs not 100â¯% clean either,âbut much better.âGranted,âthis is WebP re-encoding of an already lossy compressed JPEG,âso we stack 2 steps of destructive compression. <strong>But</strong> this is what <a href="https://developers.google.com/speed/pagespeed/insights/">Google Page Speed insights</a> encourage you to do and what a shitload of plugins enable you to do,âwhile pretending itâs completely safe. <strong>Itâs not.</strong></p>

<p>I have seen a similar effect in other similar picturesâ¯: always pictures with large,âsmooth,âgradients in the background,âwhich happens a lot when some punctual-ish light falls off a wall.âThatâs not something accidental,âsmooth fall-off are actively built by photographers to create organic-looking backgrounds with just enough of texture to not get boring,âyet discrete enough to not draw attention off the foreground/subject.</p>

<p>So,âI wondered how bad it was for actual raw photos encoded straight in darktable.âMeaning just one step of encoding.âMeaning real WebP quality comparison for real-life studio head-shots,âwhich are one of the last things customers are willing to pay actual photographers to do (instead of snapping their own iPhone). Meaning real money for real professionals.âMeaning something the image coding douchebags may have not foreseen,âbecause it doesnât happen in VS Code (or Vim,âfor that matter).</p>

<p>Letâs start.âThe following 2 images use <a href="https://en.wikipedia.org/wiki/Floyd%E2%80%93Steinberg_dithering">Floyd-Steinberg dithering</a> in 8 bits,âwith lossy compression set at 90 for both JPEG and WebP (remember,âthe experts recommend 80 for WebP). All images below,âsaved in WebP,âuse the âphotoâ image hint of Jeroen Oomâs <a href="https://cran.r-project.org/web/packages/webp/index.html">libwebp</a> 1.2.1. <em>Click on images to open the full-size version,âor betterâ¯: right-click and open them in a new tab</em></p>

<p>JPEG,âlossy, 90â¯: 227 kiB
<a href="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90.jpg"><img decoding="async" src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90.jpg" data-orig-src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90.jpg" alt="" width="2048" height="1152" srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-200x113.jpg 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-300x169.jpg 300w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-400x225.jpg 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-600x338.jpg 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-768x432.jpg 768w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-800x450.jpg 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-1024x576.jpg 1024w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-1200x675.jpg 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-1536x864.jpg 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90.jpg 2048w" data-srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-200x113.jpg 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-300x169.jpg 300w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-400x225.jpg 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-600x338.jpg 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-768x432.jpg 768w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-800x450.jpg 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-1024x576.jpg 1024w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-1200x675.jpg 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90-1536x864.jpg 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-90.jpg 2048w" data-sizes="auto" data-orig-sizes="(max-width: 2048px) 100vw, 2048px"></a></p>

<p>JPEG,âlossy, 85â¯: 184 kiB 
<a href="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering.webp"><img decoding="async" src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering.webp" data-orig-src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering.webp" alt="" width="2048" height="1152" srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-200x113.webp 200w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-300x169.jpg 300w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-400x225.webp 400w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-600x338.webp 600w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-768x432.jpg 768w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-800x450.webp 800w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-1024x576.jpg 1024w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-1200x675.webp 1200w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-1536x864.webp 1536w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering.webp 2048w" data-srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-200x113.webp 200w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-300x169.jpg 300w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-400x225.webp 400w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-600x338.webp 600w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-768x432.jpg 768w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-800x450.webp 800w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-1024x576.jpg 1024w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-1200x675.webp 1200w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-1536x864.webp 1536w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering.webp 2048w" data-sizes="auto" data-orig-sizes="(max-width: 2048px) 100vw, 2048px"></a></p>

<p>WebP,âlossy, 90â¯: 140 kiB
<a href="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering.webp"><img decoding="async" src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering.webp" data-orig-src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering.webp" alt="" width="2048" height="1152" srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-200x113.webp 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-400x225.webp 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-600x338.webp 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-800x450.webp 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-1200x675.webp 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-1536x864.webp 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering.webp 2048w" data-srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-200x113.webp 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-400x225.webp 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-600x338.webp 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-800x450.webp 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-1200x675.webp 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering-1536x864.webp 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-dithering.webp 2048w" data-sizes="auto" data-orig-sizes="(max-width: 2048px) 100vw, 2048px"></a></p>

<p>JPEG 85 and WebP 90 both fail the test,âlooking like shit.âBut WebP looks more like shitâ¯: the contrast in posterized rings is higher. <strong>And</strong> we are already 10â¯% above the recommended quality that âshould fit 99â¯% of picturesâ. JPEG 90 looks ok though,âbut itâs a lot heavier.</p>

<p>So,âletâs try something else,ânowâ¯: going lossless WebP.âThat should be our ground truth of WebP supremacy.</p>

<p>WebP,âlosslessâ¯: 660 kiB
<a href="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless.webp"><img decoding="async" src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless.webp" data-orig-src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless.webp" alt="" width="2048" height="1152" srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-200x113.webp 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-400x225.webp 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-600x338.webp 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-800x450.webp 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-1200x675.webp 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-1536x864.webp 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless.webp 2048w" data-srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-200x113.webp 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-400x225.webp 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-600x338.webp 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-800x450.webp 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-1200x675.webp 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless-1536x864.webp 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossless.webp 2048w" data-sizes="auto" data-orig-sizes="(max-width: 2048px) 100vw, 2048px"></a></p>

<p>JPEG,âquality 100â¯: 759 kiB
<a href="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100.jpg"><img decoding="async" src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100.jpg" data-orig-src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100.jpg" alt="" width="2048" height="1152" srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-200x113.jpg 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-300x169.jpg 300w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-400x225.jpg 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-600x338.jpg 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-768x432.jpg 768w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-800x450.jpg 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-1024x576.jpg 1024w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-1200x675.jpg 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-1536x864.jpg 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100.jpg 2048w" data-srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-200x113.jpg 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-300x169.jpg 300w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-400x225.jpg 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-600x338.jpg 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-768x432.jpg 768w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-800x450.jpg 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-1024x576.jpg 1024w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-1200x675.jpg 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100-1536x864.jpg 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-100.jpg 2048w" data-sizes="auto" data-orig-sizes="(max-width: 2048px) 100vw, 2048px"></a></p>

<p>JPEG,âquality 95â¯: 363 kiB
<a href="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95.jpg"><img decoding="async" src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95.jpg" data-orig-src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95.jpg" alt="" width="2048" height="1152" srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-200x113.jpg 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-300x169.jpg 300w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-400x225.jpg 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-600x338.jpg 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-768x432.jpg 768w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-800x450.jpg 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-1024x576.jpg 1024w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-1200x675.jpg 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-1536x864.jpg 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95.jpg 2048w" data-srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-200x113.jpg 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-300x169.jpg 300w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-400x225.jpg 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-600x338.jpg 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-768x432.jpg 768w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-800x450.jpg 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-1024x576.jpg 1024w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-1200x675.jpg 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95-1536x864.jpg 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-95.jpg 2048w" data-sizes="auto" data-orig-sizes="(max-width: 2048px) 100vw, 2048px"></a></p>

<p>So,âthe WebP quality is now clean,âbut Iâm not impressed with the weight,âespecially since you need a really good look to distinguish it from JPEG 90, which weighs about a third of that,âand itâs forensically similar to JPEG 95, which is a bit more than half.âOoops.</p>

<p>Letâs try something elseâ¯: redo it,âbut instead of the light Floyd-Steinberg dithering,âuse heavier random noise at -48â¯dB PSNR.âThatâs a very high PSNR,âmeaning it should be almost unnoticeable to human eyes but should give an harder time to the high-frequency filtering which is most of the trick behind image compressing.</p>

<p>JPEG,âlossy, 85â¯: 211 KiB
<a href="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise.webp"><img decoding="async" src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise.webp" data-orig-src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise.webp" alt="" width="2048" height="1152" srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-200x113.webp 200w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-300x169.jpg 300w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-400x225.webp 400w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-600x338.webp 600w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-768x432.jpg 768w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-800x450.webp 800w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-1024x576.jpg 1024w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-1200x675.webp 1200w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-1536x864.webp 1536w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise.webp 2048w" data-srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-200x113.webp 200w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-300x169.jpg 300w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-400x225.webp 400w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-600x338.webp 600w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-768x432.jpg 768w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-800x450.webp 800w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-1024x576.jpg 1024w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-1200x675.webp 1200w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-1536x864.webp 1536w,https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise.webp 2048w" data-sizes="auto" data-orig-sizes="(max-width: 2048px) 100vw, 2048px"></a></p>

<p>WebP,âlossy, 90â¯: 146 kiB
<a href="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise.webp"><img decoding="async" src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise.webp" data-orig-src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise.webp" alt="" width="2048" height="1152" srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-200x113.webp 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-400x225.webp 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-600x338.webp 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-800x450.webp 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-1200x675.webp 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-1536x864.webp 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise.webp 2048w" data-srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-200x113.webp 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-400x225.webp 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-600x338.webp 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-800x450.webp 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-1200x675.webp 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-1536x864.webp 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise.webp 2048w" data-sizes="auto" data-orig-sizes="(max-width: 2048px) 100vw, 2048px"></a></p>

<p>The WebP is still more prone to posterization.âSo,âI wondered what the WebP quality was that would be as smooth as the JPEG 85 with -48â¯dB of noise (which was pretty damn smooth). The answer is somewhere between 95 and 96, even though itâs hard to make an equivalence since the quality and texture of the artifacts differ.</p>

<p>WebP,âlossy, 96â¯: 294 kiB
<a href="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96.webp"><img decoding="async" src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96.webp" data-orig-src="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96.webp" alt="" width="2048" height="1152" srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-200x113.webp 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-400x225.webp 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-600x338.webp 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-800x450.webp 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-1200x675.webp 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-1536x864.webp 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96.webp 2048w" data-srcset="https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-200x113.webp 200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-400x225.webp 400w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-600x338.webp 600w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-800x450.webp 800w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-1200x675.webp 1200w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96-1536x864.webp 1536w, https://eng.aurelienpierre.com/wp-content/uploads/sites/8/2021/10/Shoot-Antoine-0044-_DSC0085-lossy-noise-96.webp 2048w" data-sizes="auto" data-orig-sizes="(max-width: 2048px) 100vw, 2048px"></a></p>

<p>Yeah,âyou read it.âWebP is actually 39â¯% heavier than JPEG 85 plus noise for a similar-ish look on this difficult picture,âand still not totally as smooth as the JPEG (there is still a tiny bit of ringing). Itâs also 30â¯% heavier than JPEG 90 with simple Floyd-Steinberg dithering.</p>

<p>So,âwhat do we take from thatâ¯?</p>

<p>First,âat similar visual quality and for photographs,âWebP is not lighter than JPEG,âitâs actually the opposite.âAll the Google claims rely on measuring the average SSIM and average bit weight over a dataset of images.âCall me crazy,âbut I donât give a shit about averages.âFor a <a href="https://en.wikipedia.org/wiki/Normal_distribution">gaussian "normal" process</a>, probabilities say half of your sample will be above and half will be below the average (which is also the median in a gaussian distribution). If we designed cars for the average load they would have to sustain,âit means we would kill about half of the customers.âInstead,âwe design cars for the worst foreseeable scenario,âadd a safety factor on top,âand they still kill a fair amount of them,âbut a lot fewer than in the past.âMost probabilistic distributions are close to gaussian,âso the assumption that average = median Â± a little something is fair.âAlso the <a href="https://fr.wikipedia.org/wiki/Structural_Similarity">SSIM</a> metric is an incomplete,âbiased,âcontroverted metric of image similarity that takes no actual perceptual metric into account<sup id="fnref:2"><a href="#fn:2" role="doc-noteref">[2]</a></sup>, itâs just averages,âvariances and covariances,âmeaning it is barely a pattern recognition scheme from a machine perspective.</p>

<p>As a photographer,âI&nbsp;care about robustness of the visual output.âWhich means,âas a designer,âdesigning for the worst possible image and taking numerical metrics with a grain of salt.âAnd that whole WebP hype is unjustified,âin this regard.âIt surely performs well in well chosen examples,âno doubt.âThe question isâ¯: what happens when it doesnâtâ¯? I canât fine-tune the WebP quality for each individual image on my website,âthatâs time consuming and WordPress doesnât even allow that.âI canât have a portfolio of pictures with even 25â¯% posterized backgrounds either,âthe whole point of a portfolio is to showcase your skills and results,ânot to take a wild guess on the compression performance of your image backend.âAverage wonât do,âitâs simply not good enough.âAnd in setting the weight vs.âquality ratio,âthe nature of the induced artifacts matters perhaps more than the norm of the deviation.âWe can tolerate higher variance in random noise than in patterned blotches.</p>

<p>Second,âI donât know why all the techies around have a huge kink over sharpness,âbut the most challenging situations I&nbsp;have faced as a photographer were with smooth gradients.âOr more accurately,âgradients that should have been smooth and werenât in the output.âSo there is a real issue with the design priorities of image algos from tech guys who clearly lack historical and artistic background,âand donât talk to artists,âwho anyway have largely decided that they were above science,âmaths and other menial materialistic concerns.âMost test pictures for WebP compression showcase sharp scenes with large depth of field,âso lots of details,âaka high-frequencies,âwhich have zero chance of posterization and are not the pain point of such algorithms.âLack of sharpness has never destroyed a picture,âon the contrary.âPainters took as much trouble to render atmospheric haze and <em><a href="https://en.wikipedia.org/wiki/Sfumato">sfumato</a></em> as photographers take now to revert them.âBut having a staircase in place of a smooth vignette surely <strong>is</strong> damaging to the picture in an unacceptable way.</p>

<p>Third,âbig shout-out to all the morons,âidiots,âdouchebags and monkeys who make big claims all around on matters they donât nearly understand.âWhy the big wordsâ¯? I have been told on my previous article that I&nbsp;was too heavy on insultsâ¦ Well,âwe live in a time where time is the ultimate luxury,âand the idiots-who-should-know-but-didnât are not only causing damages,âthey also cost money and time,âand I really think they should be punished for this.âYou can refund money,âyou canât refund time.âThing is,âas technologies are âimprovingâ, people donât get more free time because the work doesnât get any easier.âInstead,âthe tools become more complex and the customer expect more as the tools get faster,âmeaning workers have as much work as before,âonly with more complex toolkits.âSo,âactually,âbetter tech doesnât mean less or easier work for the actual workers,âit may just mean better result if it is actually better tech,âwhich,âin this case,âit is not.âThe proof has been made here that WebP is simply not robust enough for image makers,âregardless of its average performance,âif lesser (or even similar) data bandwidth is the ultimate goal.âThe test done here is simple enough to have been done by anyone much earlier,âprovided they used image datasets from actual photographers.</p>

<p>Image-making is not just a vocational part-time activity for bored upper-class or retired citizen with enough money to buy 10 kâ¬ camera systems and do mostly nothing out of them.âSome people rely on that to make a living.âAnd they are already in a precarious enough situation (even before COVIDâ¦ how many newspapers still had a photo staff in 2015â¯?) to not take more shit from the people who pretend to help them,âwhen they do the opposite.âI have the ability to double-check the stupid shit I read here and there,âbut the large majority of visual artists donât and will take the word of âexpertsâ for truth even though it contradicts facts they have witnessed themselves for years.</p>

<p>The Google monkeys at Page Speed are idiots when they advise you to move all your content to WebP.âAlso they are dishonest since they commited it themselves,âso they are judge and party.âThe Google monkeys who said WebP has lower weight at similar average SSIM say nothing because neither the SSIM nor the average are meaningfulâ¯: none is robust enough,âat best itâs a 50â50â¯% of satisfying/unacceptable outcome.âThe WordPress plugins monkeys are idiots when they advise and tool you up to convert already lossy JPEGs to WebP.âOh,âthey probably make all their claims in good faith,âthe problem is they didnât see the problems,âprecisely.âAnd itâs super difficult to argue with people who donât â literally â see the problems because itâs their bad eyes against your experience,âand since people believe only what they see,âyou are screwed.âBut then,âa lot of lower-tier websites and blog will repeat everything coming from these âtrustableâ sources,âdoing even more damage.âI have personally lost about a full working week in the past 6 months over that whole WebP migration madness and thanks to all these fake news,âto make it work across URL rewriting and CDN redirections,âand then to understand why it looked so bad at the end.</p>

<p>Finally,âWebP is badly designed.âBeing necessarily RGB or RGBalpha,âthere is no way to save a monochrome grey image on single channel.âWe see that all the posterization here is made worse by magenta and green rings which come solely from the chroma subsampling.âWith a purely monochrome format saved on a single channel,âyou donât introduce any additional chroma shift.âItâs as bad as JPEG,âbut it could have been fixed.âThatâs what AVIF did,âat least,âbut it wonât be a technical reality for at least another decade.</p>

<p>How do we solve thatâ¯?</p>

<ol>
<li>Stick to JPEG at 90 quality (or at least 85) if images matter to you,âe.g.âif you are a visual artist.âIf images are pretty decorations for your textual content,âit doesnât matter.</li>
<li>Always add dithering and/or a tiny bit of noise in your images,âjust to be sure smooth gradients will stay smooth no matter the amount of damage they will take from stupid websites recompressions.</li>
<li>Donât convert your old JPEG to WebP even if every idiot around tells you to,âunless you find the images shown above remotely acceptable.</li>
<li>Serve your images from a fast <a href="https://developer.mozilla.org/en-US/docs/Glossary/CDN">CDN</a>, use <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images">responsive image sizes</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading">image lazy loading</a> to improve loading speed and perceived responsiveness from the user/client side,âbut there is not much more you can do without damaging the quality of your images.</li>
<li>Avoid all the SaaS ways of converting your images on another server.âOn paper,âthey sound great because they relieve your own server from the conversion load,âwhich is good on mutualized hostings.âExcept they cost,âdonât disclose the actual quality factor they use,âand donât work in lots of cases (HTTP connections errors everywhere,âespecially if you have hardened WordPress with a security plugin). You would be better off with a better hosting and running conversions on your server straight with Image Magick/Graphics Magick (not the PHP&nbsp;interfaces,âbut directly the server program). There is a <a href="https://wordpress.org/plugins/imagemagick-engine/">WordPress plugin</a> that does just that.</li>
<li>Devs and techs really need to pull their head out of their arses and start discussing with actual artists to understand their challenges and priorities.</li>
<li>Devs and techs really need to get a grasp at basic probabilities becauseâ¦ average,âreallyâ¯?</li>
<li>We really need people able to have one foot in the tech world and the other in the art world,âand being able to discuss with both worlds,âbecause having them in two separate bubbles is damaging on a large scale right now,âand I donât see it improving.</li>
</ol>


</div></article>
				</div>  <!-- fusion-row -->
				</main>  <!-- #main -->
				
				
								
					
		 <!-- fusion-footer -->

		
					
												</div> <!-- #boxed-wrapper -->
				<a tabindex="-1" href="#" aria-hidden="true">Page load link</a>

		

			<section aria-labelledby="awb-to-top-label">
		<a href="#" id="toTop">
			<span id="awb-to-top-label">Go to Top</span>
		</a>
	</section>
		


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Oxlint â written in Rust â 50-100 Times Faster than ESLint (258 pts)]]></title>
            <link>https://oxc-project.github.io/blog/2023-12-12-announcing-oxlint.html</link>
            <guid>38652887</guid>
            <pubDate>Fri, 15 Dec 2023 10:48:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://oxc-project.github.io/blog/2023-12-12-announcing-oxlint.html">https://oxc-project.github.io/blog/2023-12-12-announcing-oxlint.html</a>, See on <a href="https://news.ycombinator.com/item?id=38652887">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-v-d1cebd69=""><header data-v-6584a84b=""><h2 data-v-6584a84b="">Oxlint General Availability</h2></header><p>We're thrilled to announce that oxlint is now generally available! This milestone signifies our team's ability to promptly address and triage issues.</p><p>Oxlint is a JavaScript linter designed to catch erroneous or useless code without requiring any configurations by default.</p><h2 id="how-to-use" tabindex="-1">How to Use <a href="#how-to-use" aria-label="Permalink to &quot;How to Use&quot;">â</a></h2><p>At this stage, oxlint is <strong>not intended to fully replace ESLint</strong>; it serves as an enhancement when ESLint's slowness becomes a bottleneck in your workflow.</p><p>For faster feedback loops, we recommend running oxlint before ESLint in your lint-staged or CI setup, considering it only takes a few seconds to run on large codebases.</p><p>To test oxlint in your JavaScript / TypeScript codebase, simply execute the following command at the root directory of your repository:</p><div><p><label for="tab-zlT1HlT">npm</label><label for="tab-bS3cme4">pnpm</label><label for="tab-eHmabbt">yarn</label><label for="tab-qvH706H">bun</label><label for="tab-NTSJzp6">deno</label></p><div><div><p><span>sh</span></p><pre><code><span><span>$</span><span> </span><span>npx</span><span> </span><span>oxlint@latest</span></span></code></pre><pre><code><span><span>$</span><span> </span><span>npx</span><span> </span><span>oxlint@latest</span></span></code></pre></div><div><p><span>sh</span></p><pre><code><span><span>$</span><span> </span><span>pnpm</span><span> </span><span>dlx</span><span> </span><span>oxlint@latest</span></span></code></pre><pre><code><span><span>$</span><span> </span><span>pnpm</span><span> </span><span>dlx</span><span> </span><span>oxlint@latest</span></span></code></pre></div><div><p><span>sh</span></p><pre><code><span><span>$</span><span> </span><span>yarn</span><span> </span><span>dlx</span><span> </span><span>oxlint@latest</span></span></code></pre><pre><code><span><span>$</span><span> </span><span>yarn</span><span> </span><span>dlx</span><span> </span><span>oxlint@latest</span></span></code></pre></div><div><p><span>sh</span></p><pre><code><span><span>$</span><span> </span><span>bunx</span><span> </span><span>oxlint@latest</span></span></code></pre><pre><code><span><span>$</span><span> </span><span>bunx</span><span> </span><span>oxlint@latest</span></span></code></pre></div><div><p><span>sh</span></p><pre><code><span><span>$</span><span> </span><span>deno</span><span> </span><span>run</span><span> </span><span>oxlint@latest</span></span></code></pre><pre><code><span><span>$</span><span> </span><span>deno</span><span> </span><span>run</span><span> </span><span>oxlint@latest</span></span></code></pre></div></div></div><p>Alternatively, refer to the <a href="https://oxc-project.github.io/docs/guide/usage/linter.html">installation guide</a> for detailed instructions.</p><h2 id="design" tabindex="-1">Design <a href="#design" aria-label="Permalink to &quot;Design&quot;">â</a></h2><h3 id="_50-100-times-faster-than-eslint" tabindex="-1">50-100 Times Faster than ESLint <a href="#_50-100-times-faster-than-eslint" aria-label="Permalink to &quot;50-100 Times Faster than ESLint&quot;">â</a></h3><p>In real-world scenarios, Shopify reported that their 75 CI minutes ESLint run is now only 10 seconds.</p><p>From Jason Miller, Shopify DX and creator of Preact:</p><blockquote><p>oxlint has been a massive win for us at Shopify. Our previous linting setup took 75 minutes to run, so we were fanning it out across 40+ workers in CI.</p><p>By comparison, oxlint takes around 10 seconds to lint the same codebase on a single worker, and the output is easier to interpret.</p><p>We even caught a few bugs that were hidden or skipped by our old setup when we migrated!</p></blockquote><p>The majority of the performance gains stem from Oxlint being purposefully designed for performance, utilizing Rust and parallel processing as key factors.</p><h3 id="lint-for-correctness" tabindex="-1">Lint for Correctness <a href="#lint-for-correctness" aria-label="Permalink to &quot;Lint for Correctness&quot;">â</a></h3><p>Oxlint defaults to identifying erroneous, redundant, or confusing code â prioritizing correctness over unnecessary nitpicking rules (categorized as <code>perf</code>, <code>suspicious</code>, <code>pedantic</code>, or <code>style</code>), which are disabled by default.</p><h3 id="ease-of-use" tabindex="-1">Ease of Use <a href="#ease-of-use" aria-label="Permalink to &quot;Ease of Use&quot;">â</a></h3><p>Setting up new JavaScript / TypeScript codebases is becoming increasingly complex. There's a high likelihood of encountering compatibility issues among your tools, potentially resulting in hours of wasted time.</p><p>That's why we designed oxlint to be zero-config out of the box; even Node.js is not a requirement. Most adjustments can be made through the command-line, and reading from ESLint configuration file is currently work in progress.</p><h3 id="enhanced-diagnostics" tabindex="-1">Enhanced Diagnostics <a href="#enhanced-diagnostics" aria-label="Permalink to &quot;Enhanced Diagnostics&quot;">â</a></h3><p>Understanding linter messages can be challenging. Oxlint aims to simplify this by pinpointing root causes and providing helpful messages â eliminating the need for lengthy rule documentation reading, saving valuable time.</p><p>Running <code>oxlint -D perf</code> in the <a href="https://github.com/microsoft/vscode" target="_blank" rel="noreferrer">vscode repository</a>:</p><p><img width="100%" src="https://github.com/oxc-project/oxc/assets/1430279/094a3b24-0433-42ae-aad2-48a7dec2b985"></p><h3 id="consolidated-rules" tabindex="-1">Consolidated Rules <a href="#consolidated-rules" aria-label="Permalink to &quot;Consolidated Rules&quot;">â</a></h3><p>Oxlint does not provide a plugin system yet, but we are actively consolidating rules from popular plugins like TypeScript, React, Jest, Unicorn, JSX-a11y and Import.</p><p>We recognize the importance of plugins in the JavaScript ecosystem and are also investigating a DSL-based plugin system.</p><p>However, you might appreciate a standalone linter â no need to manage a list of plugin dependencies, navigate through <a href="https://github.com/antfu/eslint-ts-patch" target="_blank" rel="noreferrer">compatibility issues</a>, or <a href="https://github.com/import-js/eslint-plugin-import/pull/2504#issuecomment-1191057877" target="_blank" rel="noreferrer">resort to forked plugins due to version constraints</a>.</p><hr><p>Happy linting and have a joyful holiday season!</p><p>To get started, follow the <a href="https://oxc-project.github.io/docs/guide/usage/linter.html">installation guide</a>, or <a href="https://oxc-project.github.io/docs/guide/introduction.html">learn more about the oxc project</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[An Interactive Guide to the Fourier Transform (149 pts)]]></title>
            <link>https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/</link>
            <guid>38652794</guid>
            <pubDate>Fri, 15 Dec 2023 10:29:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/">https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/</a>, See on <a href="https://news.ycombinator.com/item?id=38652794">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>The Fourier Transform is one of deepest insights ever made. Unfortunately, the meaning is buried within dense equations:</p>
<p><img src="https://betterexplained.com/wp-content/plugins/wp-latexrender/pictures/45c088dbb767150fc0bacfeb49dd49e5.png" width="189" height="54" alt="\displaystyle{X_k = \sum_{n=0}^{N-1} x_n \cdot e^{-i 2 \pi k n / N}}"></p>
<p><img src="https://betterexplained.com/wp-content/plugins/wp-latexrender/pictures/faeb9c5bf2e60add63ae4a70b293c7b4.png" width="202" height="54" alt="\displaystyle{x_n = \frac{1}{N} \sum_{k=0}^{N-1} X_k \cdot e^{i 2 \pi k n / N}}"></p>
<p>Yikes. Rather than jumping into the symbols, let's experience the key idea firsthand. Here's a plain-English metaphor:</p>
<ul>
<li><strong>What does the Fourier Transform do?</strong> Given a smoothie, it finds the recipe.</li>
<li><strong>How?</strong> Run the smoothie through filters to extract each ingredient.</li>
<li><strong>Why?</strong> Recipes are easier to analyze, compare, and modify than the smoothie itself.</li>
<li><strong>How do we get the smoothie back?</strong> Blend the ingredients.</li>
</ul>
<p>Here's the "math English" version of the above:</p>
<ul>
<li>The Fourier Transform takes a time-based pattern, measures every possible cycle, and returns the overall "cycle recipe" (the amplitude, offset, &amp; rotation speed for every cycle that was found).</li>
</ul>
<p>Time for the equations? No! Let's get our hands dirty and <em>experience</em> how any pattern can be built with cycles, with live simulations.</p>
<p>If all goes well, we'll have an aha! moment and intuitively realize why the Fourier Transform is possible. We'll save the detailed math analysis for the follow-up.</p>
<p>This isn't a force-march through the equations, it's the casual stroll I wish I had. Onward!</p>
<p><iframe src="https://www.youtube.com/embed/iN0VG9N2q0U?ecver=2" width="640" height="360" frameborder="0" allowfullscreen=""></iframe></p>
<h2>From Smoothie to Recipe</h2>
<p>A math transformation is a change of perspective. We change our notion of quantity from "single items" (lines in the sand, tally system) to "groups of 10" (decimal) depending on what we're counting. Scoring a game? Tally it up. Multiplying? Decimals, please.</p>
<p>The Fourier Transform changes our perspective from consumer to producer, turning <em>What do I have?</em> into <em>How was it made?</em></p>
<p>In other words: given a smoothie, let's find the recipe.</p>
<p>Why? Well, recipes are great descriptions of drinks. You wouldn't share a drop-by-drop analysis, you'd say "I had an orange/banana smoothie". A recipe is more easily categorized, compared, and modified than the object itself.</p>
<p>So... given a smoothie, how do we find the recipe?</p>
<p><picture><source srcset="https://betterexplained.com/wp-content/webp-express/webp-images/uploads/images/smoothie-to-recipe-20121030-223058.png.webp" type="image/webp"><img decoding="async" alt="fourier transform analogy smoothie to recipe" src="https://betterexplained.com/wp-content/uploads/images/smoothie-to-recipe-20121030-223058.png" height="300"></picture></p>
<p>Well, imagine you had a few filters lying around:</p>
<ul>
<li>Pour through the "banana" filter. 1 oz of bananas are extracted.</li>
<li>Pour through the "orange" filter. 2 oz of oranges.</li>
<li>Pour through the "milk" filter. 3 oz of milk.</li>
<li>Pour through the "water" filter. 3 oz of water.</li>
</ul>
<p>We can reverse-engineer the recipe by filtering each ingredient. The catch?</p>
<ul>
<li><p><strong>Filters must be independent</strong>. The banana filter needs to capture bananas, and nothing else. Adding more oranges should never affect the banana reading.</p></li>
<li><p><strong>Filters must be complete</strong>. We won't get the real recipe if we leave out a filter ("There were mangoes too!"). Our collection of filters must catch every possible ingredient.</p></li>
<li><p><strong>Ingredients must be combine-able</strong>. Smoothies can be separated and re-combined without issue (A cookie? Not so much. Who wants crumbs?). The ingredients, when separated and combined in any order, must make the same result.</p></li>
</ul>
<h2>See The World As Cycles</h2>
<p>The Fourier Transform takes a specific viewpoint: <strong>What if any signal could be filtered into a bunch of circular paths?</strong></p>
<p>Whoa. This concept is mind-blowing, and poor Joseph Fourier had his idea rejected at first. (<em>Really Joe, even a staircase pattern can be made from circles?</em>)</p>
<p>And despite <a href="http://wiki.answers.com/Q/What_is_the_history_of_fourier_series">decades of debate</a> in the math community, we expect students to internalize the idea without issue. Ugh. Let's walk through the intuition.</p>
<p>The Fourier Transform finds the recipe for a signal, like our smoothie process:</p>
<ul>
<li>Start with a time-based signal</li>
<li>Apply filters to measure each possible "circular ingredient"</li>
<li>Collect the full recipe, listing the amount of each "circular ingredient"</li>
</ul>
<p>Stop. Here's where most tutorials excitedly throw engineering applications at your face. Don't get scared; think of the examples as "Wow, we're finally seeing the source code (DNA) behind previously confusing ideas".</p>
<ul>
<li><p>If earthquake vibrations can be separated into "ingredients" (vibrations of different speeds &amp; amplitudes), buildings can be designed to avoid interacting with the strongest ones.</p></li>
<li><p>If sound waves can be separated into ingredients (bass and treble frequencies), we can boost the parts we care about, and hide the ones we don't. The crackle of random noise can be removed. Maybe similar "sound recipes" can be compared (music recognition services compare recipes, not the raw audio clips).</p></li>
<li><p>If computer data can be represented with oscillating patterns, perhaps the least-important ones can be ignored. This "lossy compression" can drastically shrink file sizes (and why JPEG and MP3 files are much smaller than raw .bmp or .wav files).</p></li>
<li><p>If a radio wave is our signal, we can use filters to listen to a particular channel. In the smoothie world, imagine each person paid attention to a different ingredient: Adam looks for apples, Bob looks for bananas, and Charlie gets cauliflower (sorry bud).</p></li>
</ul>
<p>The Fourier Transform is useful in engineering, sure, but it's a metaphor about finding the root causes behind an observed effect.</p>
<h2>Think With Circles, Not Just Sinusoids</h2>
<p>One of my giant confusions was separating the definitions of "sinusoid" and "circle".</p>
<ul>
<li>A "sinusoid" is a specific back-and-forth pattern (a <a href="https://betterexplained.com/articles/intuitive-understanding-of-sine-waves/">sine</a> or cosine wave), and 99% of the time, it refers to motion in one dimension.</li>
<li>A "circle" is a round, 2d pattern you probably know. If you enjoy using 10-dollar words to describe 10-cent ideas, you might call a circular path a "complex sinusoid".</li>
</ul>
<p>Labeling a circular path as a "complex sinusoid" is like describing a word as a "multi-letter". You zoomed into the wrong level of detail. Words are about concepts, not the letters they can be split into!</p>
<p>The Fourier Transform is about circular paths (not 1-d sinusoids) and <a href="https://betterexplained.com/articles/intuitive-understanding-of-eulers-formula/">Euler's formula</a> is a clever way to generate one:</p>
<p><picture><source srcset="https://betterexplained.com/wp-content/webp-express/webp-images/uploads/euler/equal_paths.png.webp" type="image/webp"><img decoding="async" src="https://betterexplained.com/wp-content/uploads/euler/equal_paths.png" alt="euler path"></picture></p>
<p>Must we use imaginary exponents to move in a circle? Nope. But it's convenient and compact. And sure, we can describe our path as coordinated motion in two dimensions (real and imaginary), but don't forget the big picture: we're just moving in a circle.</p>
<h2>Following Circular Paths</h2>
<p>Let's say we're chatting on the phone and, like usual, I want us to draw the same circle simultaneously. (<em>You promised!</em>) What should I say?</p>
<ul>
<li>How big is the circle? (Amplitude, i.e. size of radius)</li>
<li>How fast do we draw it? (Frequency. 1 circle/second is a frequency of 1 Hertz (Hz) or 2*pi radians/sec)</li>
<li>Where do we start? (Phase angle, where 0 degrees is the x-axis)</li>
</ul>
<p>I could say "2-inch radius, start at 45 degrees, 1 circle per second, go!". After half a second, we should each be pointing to: starting point + amount traveled = 45 + 180 = 225 degrees (on a 2-inch circle).</p>
<p><picture><source srcset="https://betterexplained.com/wp-content/webp-express/webp-images/uploads/images/circular-path-parameters-20121201-203317.png.webp" type="image/webp"><img decoding="async" alt="circular path with parameters" src="https://betterexplained.com/wp-content/uploads/images/circular-path-parameters-20121201-203317.png" width="500"></picture></p>
<p>Every circular path needs a size, speed, and starting angle (amplitude/frequency/phase). We can even combine paths: imagine tiny motorcars, driving in circles at different speeds.</p>
<p>The combined position of <em>all the cycles</em> is our signal, just like the combined flavor of <em>all the ingredients</em> is our smoothie.</p>
<p>Here's a simulation of a basic circular path:</p>

<p>(Based on <a href="http://treeblurb.com/dev_math/sin_canv00.html">this animation</a>, here's <a href="https://gist.github.com/kazad/8bb682da198db597558c">the source code</a>. Modern browser required. Click the graph to pause/unpause.)</p>
<p>The magnitude of each cycle is listed in order, starting at 0Hz. Cycles <code>[0 1]</code> means</p>
<ul>
<li>0 amplitude for the 0Hz cycle (0Hz = a constant cycle, stuck on the x-axis at zero degrees)</li>
<li>1 amplitude for the 1Hz cycle (completes 1 cycle per time interval)</li>
</ul>
<p>Now the tricky part:</p>
<ul>
<li><strong>The blue graph measures the <em>real part</em> of the cycle</strong>. Another lovely math confusion: the real axis of the circle, which is usually horizontal, has its magnitude shown on the vertical axis. You can mentally rotate the circle 90 degrees if you like.</li>
<li><strong>The time points are spaced at the fastest frequency</strong>. A 1Hz signal needs 2 time points for a start and stop (a single data point doesn't have a frequency). The time values <code>[1 -1]</code> shows the amplitude at these equally-spaced intervals.</li>
</ul>
<p>With me? <code>[0 1]</code> is a pure 1Hz cycle.</p>
<p>Now let's add a 2Hz cycle to the mix. <code>[0 1 1]</code> means "Nothing at 0Hz, 1Hz of amplitude 1, 2Hz of amplitude 1":</p>

<p>Whoa. The little motorcars are getting wild: the green lines are the 1Hz and 2Hz cycles, and the blue line is the combined result. Try toggling the green checkbox to see the final result clearly. The combined "flavor" is a sway that starts at the max and dips low for the rest of the interval.</p>
<p>The yellow dots are when we actually measure the signal. With 3 cycles defined (0Hz, 1Hz, 2Hz), each dot is 1/3 of the way through the signal. In this case, cycles <code>[0 1 1]</code> generate the time values <code>[2 -1 -1]</code>, which starts at the max (2) and dips low (-1).</p>
<p>Oh! We can't forget phase, the starting angle! Use <code>magnitude:angle</code> to set the phase. So <code>[0 1:45]</code> is a 1Hz cycle that starts at 45 degrees:</p>

<p>This is a shifted version of <code>[0 1]</code>. On the time side we get <code>[.7 -.7]</code> instead of <code>[1 -1]</code>, because our cycle isn't exactly lined up with our measuring intervals, which are still at the halfway point (this could be desired!).</p>
<p><strong>The Fourier Transform finds the set of cycle speeds, amplitudes and phases to match any time signal.</strong></p>
<p>Our signal becomes an abstract notion that we consider as "observations in the time domain" or "ingredients in the frequency domain".</p>
<p>Enough talk: try it out! In the simulator, type any time or cycle pattern you'd like to see. If it's time points, you'll get a collection of cycles (that combine into a "wave") that matches your desired points.</p>
<p><a href="https://betterexplained.com/wp-content/uploads/images/time-patterns-20121205-164541.png" target="_blank" rel="noopener">
<picture><source srcset="https://betterexplained.com/wp-content/webp-express/webp-images/uploads/images/time-patterns-20121205-164541.png.webp" type="image/webp"><img decoding="async" alt="fourier transform examples" src="https://betterexplained.com/wp-content/uploads/images/time-patterns-20121205-164541.png" width="550px"></picture></a></p>
<p>Butâ¦ doesn't the combined wave have strange values between the yellow time intervals? Sure. But who's to say whether a signal travels in straight lines, or curves, or zips into other dimensions when we aren't measuring it? It behaves exactly as we need at the equally-spaced moments we asked for.</p>
<h2>Making A Spike In Time</h2>
<p>Can we make a spike in time, like <code>(4 0 0 0)</code>, using cycles? I'll use parentheses <code>()</code> for a sequence of time points, and brackets <code>[]</code> for a sequence of cycles.</p>
<p>Although the spike seems boring to us time-dwellers (<em>one data point, that's it?</em>), think about the complexity in the cycle world. Our cycle ingredients must start aligned (at the max value, 4) and then "explode outwards", each cycle with partners that cancel it in the future. Every remaining point is zero, which is a tricky balance with multiple cycles running around (we can't just "turn them off").</p>
<p>Let's walk through each time point:</p>
<ul>
<li><p>At time 0, the first instant, every cycle ingredient is at its max. Ignoring the other time points, <code>(4 ? ? ?)</code> can be made from 4 cycles (0Hz 1Hz 2Hz 3Hz), each with a magnitude of 1 and phase of 0 (i.e., 1 + 1 + 1 + 1 = 4).</p></li>
<li><p>At every future point (t = 1, 2, 3), the sum of all cycles must cancel.</p></li>
</ul>
<p>Here's the trick: when two cycles are on opposites sides of the circle (North &amp; South, East &amp; West, etc.) their combined position is zero (3 cycles can cancel if they're spread evenly at 0, 120, and 240 degrees).</p>
<p>Imagine a constellation of points moving around the circle. Here's the position of each cycle at every instant:</p>
<pre>Time 0 1 2 3 
------------
0Hz: 0 0 0 0 
1Hz: 0 1 2 3
2Hz: 0 2 0 2
3Hz: 0 3 2 1
</pre>
<p>Notice how the the 3Hz cycle starts at 0, gets to position 3, then position "6" (with only 4 positions, 6 <a href="https://betterexplained.com/articles/fun-with-modular-arithmetic/">modulo</a> 4 = 2), then position "9" (9 modulo 4 = 1).</p>
<p>When our cycle is 4 units long, cycle speeds a half-cycle apart (2 units) will either be lined up (difference of 0, 4, 8â¦) or on opposite sides (difference of 2, 6, 10â¦).</p>
<p>OK. Let's drill into each time point:</p>
<ul>
<li>Time 0: All cycles at their max (total of 4)</li>
<li>Time 1: 1Hz and 3Hz cancel (positions 1 &amp; 3 are opposites), 0Hz and 2Hz cancel as well. The net is 0.</li>
<li>Time 2: 0Hz and 2Hz line up at position 0, while 1Hz and 3Hz line up at position 2 (the opposite side). The total is still 0.</li>
<li>Time 3: 0Hz and 2Hz cancel. 1Hz and 3Hz cancel.</li>
<li>Time 4 (repeat of t=0): All cycles line up.</li>
</ul>
<p>The trick is having individual speeds cancel (0Hz vs 2Hz, 1Hz vs 3Hz), or having the lined-up pairs cancel (0Hz + 2Hz vs 1Hz + 3Hz).</p>
<p>When every cycle has equal power and 0 phase, we start aligned and cancel afterwards. (I don't have a nice proof yet -- any takers? -- but you can see it yourself. Try <code>[1 1]</code>, <code>[1 1 1]</code>, <code>[1 1 1 1]</code> and notice the signals we generate: <code>(2 0)</code>, <code>(3 0 0)</code>, <code>(4 0 0 0)</code>).</p>
<p>In my head, I label these signals as "time spikes": they have a value for a single instant, and are zero otherwise (the fancy name is a <a href="https://en.wikipedia.org/wiki/Dirac_delta_function">delta function</a>.)</p>
<p>Here's how I visualize the initial alignment, followed by a net cancellation:</p>
<p><picture><source srcset="https://betterexplained.com/wp-content/webp-express/webp-images/uploads/images/fourier-interference-20121211-171719.png.webp" type="image/webp"><img decoding="async" alt="fourier transform constructive and destructive interference" src="https://betterexplained.com/wp-content/uploads/images/fourier-interference-20121211-171719.png" width="400px"></picture></p>
<h2>Moving The Time Spike</h2>
<p>Not everything happens at t=0. Can we change our spike to <code>(0 4 0 0)</code>?</p>
<p>It seems the cycle ingredients should be similar to <code>(4 0 0 0)</code>, but the cycles must align at t=1 (one second in the future). Here's where phase comes in.</p>
<p>Imagine a race with 4 runners. Normal races have everyone lined up at the starting line, the <code>(4 0 0 0)</code> time pattern. Boring.</p>
<p>What if we want everyone to <em>finish</em> at the same time? Easy. Just move people forward or backwards by the appropriate distance. Maybe granny can start 2 feet in front of the finish line, Usain Bolt can start 100m back, and they can cross the tape holding hands.</p>
<p>Phase shifts, the starting angle, are delays in the cycle universe. Here's how we adjust the starting position to delay every cycle 1 second:</p>
<ul>
<li>A 0Hz cycle doesn't move, so it's already aligned</li>
<li>A 1Hz cycle goes 1 revolution in the entire 4 seconds, so a 1-second delay is a quarter-turn. Phase shift it 90 degrees backwards (-90) and it gets to phase=0, the max value, at t=1.</li>
<li>A 2Hz cycle is twice as fast, so give it twice the angle to cover (-180 or 180 phase shift -- it's across the circle, either way).</li>
<li>A 3Hz cycle is 3x as fast, so give it 3x the distance to move (-270 or +90 phase shift)</li>
</ul>
<p>If time points <code>(4 0 0 0)</code> are made from cycles <code>[1 1 1 1]</code>, then time points <code>(0 4 0 0)</code> are made from <code>[1 1:-90 1:180 1:90]</code>. (Note: I'm using "1Hz", but I mean "1 cycle over the entire time period").</p>
<p>Whoa -- we're working out the cycles in our head!</p>
<p>The interference visualization is similar, except the alignment is at t=1.</p>
<p><picture><source srcset="https://betterexplained.com/wp-content/webp-express/webp-images/uploads/images/delayed-spike-20121214-162623.png.webp" type="image/webp"><img decoding="async" alt="fourier transform time spike" src="https://betterexplained.com/wp-content/uploads/images/delayed-spike-20121214-162623.png" width="400px"></picture></p>
<p>Test your intuition: Can you make <code>(0 0 4 0)</code>, i.e. a 2-second delay? 0Hz has no phase. 1Hz has 180 degrees, 2Hz has 360 (aka 0), and 3Hz has 540 (aka 180), so it's <code>[1 1:180 1 1:180]</code>.</p>
<h2>Discovering The Full Transform</h2>
<p>The big insight: our signal is just a bunch of time spikes! If we merge the recipes for each time spike, we should get the recipe for the full signal.</p>
<p>The Fourier Transform builds the recipe frequency-by-frequency:</p>
<ul>
<li>Separate the full signal (a b c d) into "time spikes": (a 0 0 0) (0 b 0 0) (0 0 c 0) (0 0 0 d)</li>
<li>For any frequency (like 2Hz), the <em>tentative</em> recipe is "a/4 + b/4 + c/4 + d/4" (the amplitude of each spike is split among all frequencies)</li>
<li>Wait! We need to offset each spike with a phase delay (the angle for a "1 second delay" depends on the frequency).</li>
<li>Actual recipe for a frequency = a/4 (no offset) + b/4 (1 second offset) + c/4 (2 second offset) + d/4 (3 second offset).</li>
</ul>
<p>We can then loop through every frequency to get the full transform.</p>
<p>Here's the conversion from "math English" to full math:</p>
<p><picture><source srcset="https://betterexplained.com/wp-content/webp-express/webp-images/uploads/images/fourier-explained-20121219-224649.png.webp" type="image/webp"><img decoding="async" alt="fourier transform plain english" src="https://betterexplained.com/wp-content/uploads/images/fourier-explained-20121219-224649.png" width="500px"></picture></p>
<p>A few notes:</p>
<ul>
<li>N = number of time samples we have</li>
<li>n = current sample we're considering (0 .. N-1)</li>
<li>x<sub>n</sub> = value of the signal at time n</li>
<li>k = current frequency we're considering (0 Hertz up to N-1 Hertz)</li>
<li>X<sub>k</sub> = amount of frequency k in the signal (amplitude and phase, a complex number)</li>
<li>The 1/N factor is usually moved to the <em>reverse transform</em> (going from frequencies back to time). This <a href="http://math.stackexchange.com/questions/58163/dft-why-are-the-definitions-for-inverse-and-forward-commonly-switched">is allowed</a>, though I prefer 1/N in the forward transform since it gives the <em>actual</em> sizes for the time spikes. You can get wild and even use $1/\sqrt{N}$ on both transforms (going forward and back creates the 1/N factor).</li>
<li>n/N is the percent of the time we've gone through. 2 * pi * k is our speed in radians / sec. e^-ix is our backwards-moving circular path. The combination is how far we've moved, for this speed and time.</li>
<li>The raw equations for the Fourier Transform just say "add the complex numbers". Many programming languages cannot handle complex numbers directly, so you convert everything to rectangular coordinates and add those.</li>
</ul>
<h2>Onward</h2>
<p>This was my most challenging article yet. The Fourier Transform has several flavors (discrete/continuous/finite/infinite), covers deep math (Dirac delta functions), and it's easy to get lost in details. I was constantly bumping into the edge of my knowledge.</p>
<p>But there's always simple analogies out there -- I refuse to think otherwise. Whether it's a smoothie or Usain Bolt &amp; Granny crossing the finish line, take a simple understanding and refine it. The analogy is flawed, and that's ok: it's a raft to use, and leave behind once we cross the river.</p>
<p>I realized how feeble my own understanding was when I couldn't work out the transform of <code>(1 0 0 0)</code> in my head. For me, it was like saying I knew addition but, gee whiz, I'm not sure what "1 + 1 + 1 + 1" would be. Why not? Shouldn't we have an intuition for the simplest of operations?</p>
<p>That discomfort led me around the web to build my intuition. In addition to the references in the article, I'd like to thank:</p>
<ul>
<li><a href="http://www.scotthyoung.com/blog/">Scott Young</a>, for the initial impetus for this post</li>
<li><a href="http://shaheengandhi.com/">Shaheen Gandhi</a>, Roger Cheng, and <a href="http://britcruise.com/">Brit Cruise</a> for kicking around ideas &amp; refining the analogy</li>
<li><a href="http://cns-alumni.bu.edu/~slehar/fourier/fourier.html">Steve Lehar</a> for great examples of the Fourier Transform on images</li>
<li><a href="http://www.complextoreal.com/chapters/fft1.pdf">Charan Langton</a> for her detailed walkthrough</li>
<li><a href="https://ccrma.stanford.edu/~jos/log/">Julius Smith</a> for a fantastic walkthrough of the Discrete Fourier Transform (what we covered today)</li>
<li><a href="http://worrydream.com/#!/LearnableProgramming">Bret Victor</a> for his techniques on visualizing learning</li>
</ul>
<p>Today's goal was to <em>experience</em> the Fourier Transform. We'll save the advanced analysis for next time.</p>
<p>Happy math.</p>
<h2>Appendix: Projecting Onto Cycles</h2>
<p>Stuart Riffle has a <a href="https://web.archive.org/web/20120418231513/http://www.altdevblogaday.com/2011/05/17/understanding-the-fourier-transform/">great interpretation</a> of the Fourier Transform:</p>
<p><picture><source srcset="https://betterexplained.com/wp-content/webp-express/webp-images/uploads/images/DerivedDFT.png.webp" type="image/webp"><img decoding="async" alt="fourier transform colorized" src="https://betterexplained.com/wp-content/uploads/images/DerivedDFT.png"></picture></p>
<p>Imagine spinning your signal in a centrifuge and checking for a bias. I have a correction: we must spin <em>backwards</em> (the exponent in the equation above should be $e^{-i 2 \pi...}$). You already know why: we need a phase <em>delay</em> so spikes appear in the <em>future</em>.</p>
<h2>Appendix: Another Awesome Visualization</h2>
<p><a href="http://toxicdump.org/blog/">Lucas Vieira</a>, author of excellent <a href="https://en.wikipedia.org/wiki/User:Kieff/Gallery">Wikipedia animations</a>, was <a href="http://blog.matthen.com/post/42112703604/the-smooth-motion-of-rotating-circles-can-be-used">inspired</a> to make this interactive animation:</p>
<p><a href="https://web.archive.org/web/20170201145911/http://toxicdump.org/stuff/FourierToy.swf">Fourier Toy - Click to download, requires flash</a></p>
<p><a href="http://toxicdump.org/stuff/FourierToy.swf"><picture><source srcset="https://betterexplained.com/wp-content/webp-express/webp-images/uploads/2012/12/Fourier_Toy-300x126.png.webp 300w, https://betterexplained.com/wp-content/webp-express/webp-images/uploads/2012/12/Fourier_Toy-768x323.png.webp 768w, https://betterexplained.com/wp-content/webp-express/webp-images/uploads/2012/12/Fourier_Toy-1024x431.png.webp 1024w, https://betterexplained.com/wp-content/webp-express/webp-images/uploads/2012/12/Fourier_Toy-320x135.png.webp 320w, https://betterexplained.com/wp-content/webp-express/webp-images/uploads/2012/12/Fourier_Toy-200x84.png.webp 200w, https://betterexplained.com/wp-content/webp-express/webp-images/uploads/2012/12/Fourier_Toy-400x168.png.webp 400w, https://betterexplained.com/wp-content/webp-express/webp-images/uploads/2012/12/Fourier_Toy.png.webp 1438w" sizes="(max-width: 300px) 100vw, 300px" type="image/webp"><img loading="lazy" decoding="async" src="https://betterexplained.com/wp-content/uploads/2012/12/Fourier_Toy-300x126.png" alt="Fourier_Toy" width="300" height="126" srcset="https://betterexplained.com/wp-content/uploads/2012/12/Fourier_Toy-300x126.png 300w, https://betterexplained.com/wp-content/uploads/2012/12/Fourier_Toy-768x323.png 768w, https://betterexplained.com/wp-content/uploads/2012/12/Fourier_Toy-1024x431.png 1024w, https://betterexplained.com/wp-content/uploads/2012/12/Fourier_Toy-320x135.png 320w, https://betterexplained.com/wp-content/uploads/2012/12/Fourier_Toy-200x84.png 200w, https://betterexplained.com/wp-content/uploads/2012/12/Fourier_Toy-400x168.png 400w, https://betterexplained.com/wp-content/uploads/2012/12/Fourier_Toy.png 1438w" sizes="(max-width: 300px) 100vw, 300px"></picture></a></p>

<p>(<a href="http://www.reddit.com/r/math/comments/17v8cv/visualized_fourier/c89c3pa">Detailed list</a> of control options)</p>
<p>The Fourier Transform is about cycles added to cycles added to cycles. Try making a "time spike" by setting a amplitude of 1 for every component (press Enter after inputting each number). Fun fact: with enough terms, you can draw any shape, even <a href="https://www.youtube.com/watch?v=QVuU2YCwHjw&amp;feature=youtu.be">Homer Simpson</a>.</p>
<iframe loading="lazy" src="https://www.youtube.com/embed/QVuU2YCwHjw" width="420" height="315" frameborder="0" allowfullscreen="allowfullscreen"></iframe>
<p>Check out <a href="http://www.jezzamon.com/fourier/">http://www.jezzamon.com/fourier/</a> for a great tool to draw any shape using epicycles.</p>
<p><a href="http://www.jezzamon.com/fourier/"><picture><source srcset="https://betterexplained.com/wp-content/webp-express/webp-images/uploads/2019/01/Fourier-Transforms-2019-01-12-15-11-48.png.webp" type="image/webp"><img decoding="async" alt="An Interactive Guide To The Fourier Transform" src="https://betterexplained.com/wp-content/uploads/2019/01/Fourier-Transforms-2019-01-12-15-11-48.png" width="500"></picture>
</a></p>
<h2>Appendix: Article with R code samples</h2>
<p>JoÃ£o Neto made a great writeup, with technical (R) code samples here:</p>
<p><a href="http://www.di.fc.ul.pt/~jpn/r/fourier/fourier.html">http://www.di.fc.ul.pt/~jpn/r/fourier/fourier.html</a></p>
<h2>Appendix: Using the code</h2>
<p>All the code and examples are open source (MIT licensed, do what you like).</p>
<ul>
<li><a href="https://betterexplained.com/examples/fourier/">Interactive example</a> (view source)</li>
<li><a href="https://gist.github.com/129d477ddb1c8025c9ac">Github gist</a></li>
<li><a href="http://www.reddit.com/r/programming/comments/156a9i/an_interactive_guide_to_the_fourier_transform/c7k9b1t?context=3">Reddit discussion</a> on details of the computation, I'm pb_zeppelin</li>
</ul>
<h2>Other Posts In This Series</h2><ol>
<li><a href="https://betterexplained.com/articles/a-visual-intuitive-guide-to-imaginary-numbers/" title="A Visual, Intuitive Guide to Imaginary Numbers">A Visual, Intuitive Guide to Imaginary Numbers</a></li>
<li><a href="https://betterexplained.com/articles/intuitive-arithmetic-with-complex-numbers/" title="Intuitive Arithmetic With Complex Numbers">Intuitive Arithmetic With Complex Numbers</a></li>
<li><a href="https://betterexplained.com/articles/understanding-why-complex-multiplication-works/" title="Understanding Why Complex Multiplication Works">Understanding Why Complex Multiplication Works</a></li>
<li><a href="https://betterexplained.com/articles/intuitive-guide-to-angles-degrees-and-radians/" title="Intuitive Guide to Angles, Degrees and Radians">Intuitive Guide to Angles, Degrees and Radians</a></li>
<li><a href="https://betterexplained.com/articles/intuitive-understanding-of-eulers-formula/" title="Intuitive Understanding Of Euler's Formula">Intuitive Understanding Of Euler's Formula</a></li>
<li><a href="https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/" title="An Interactive Guide To The Fourier Transform">An Interactive Guide To The Fourier Transform</a></li>
<li><a href="https://betterexplained.com/articles/intuitive-convolution/" title="Intuitive Guide to Convolution">Intuitive Guide to Convolution</a></li>
<li><a href="https://betterexplained.com/articles/intuitive-understanding-of-sine-waves/" title="Intuitive Understanding of Sine Waves">Intuitive Understanding of Sine Waves</a></li>
<li><a href="https://betterexplained.com/articles/linear-algebra-guide/" title="An Intuitive Guide to Linear Algebra">An Intuitive Guide to Linear Algebra</a></li>
<li><a href="https://betterexplained.com/articles/matrix-multiplication/" title="A Programmer's Intuition for Matrix Multiplication">A Programmer's Intuition for Matrix Multiplication</a></li>
<li><a href="https://betterexplained.com/articles/imaginary-multiplication-exponents/" title="Imaginary Multiplication vs. Imaginary Exponents">Imaginary Multiplication vs. Imaginary Exponents</a></li>
<li><a href="https://betterexplained.com/articles/hyperbolic-functions/" title="Intuitive Guide to Hyperbolic Functions">Intuitive Guide to Hyperbolic Functions</a></li>
</ol>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: AI/ML papers to catch up with current state of AI? (163 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=38652736</link>
            <guid>38652736</guid>
            <pubDate>Fri, 15 Dec 2023 10:19:14 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=38652736">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="38654772"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38654772" href="https://news.ycombinator.com/vote?id=38654772&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span>The good (and some might say bad thing) is that when it comes to fundamental technologies there are only 2 that are relevant:<p>1. Transformers
2. Diffusion</p><p>The benefit is that, focus on understanding them both reeaaalllyy well and you are at the forefront of research;)</p><p>Also, what is the reason you want to do this? If it is about building some kind of AI enabled app, you don't have to read anything. Get an API key and let's go the barrier has never been lower.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38654200"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38654200" href="https://news.ycombinator.com/vote?id=38654200&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span><a href="https://trendingpapers.com/" rel="nofollow noreferrer">https://trendingpapers.com/</a><p>This tool can help you find what's new &amp; relevant to read. It's updated every day (based on ArXiv).</p><p>You can filter by category (Computer Vision, Machine Learning, NLP, etc), by release date, but most importantly, you can rank by PageRank (proxy of influence/readership), PageRank growth (to see the fastest growing papers in terms of influence), total # of citations, etc...
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38654526"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38654526" href="https://news.ycombinator.com/vote?id=38654526&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span>I'd be wary of programmatic lists that claim to track the most important recent papers. There's a ridiculous amount of <i>hype/propaganda</i> and <i>citation hacking</i> surrounding new AI research, making it hard to discern what will truly stand the test of time. Tomas Mikolov just posted about this:<p><a href="https://news.ycombinator.com/item?id=38654038">https://news.ycombinator.com/item?id=38654038</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="38654264"><td></td></tr>
                <tr id="38654737"><td></td></tr>
                  <tr id="38653719"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38653719" href="https://news.ycombinator.com/vote?id=38653719&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span>My view is to focus on doing stuff. That's what I did. Pick up some task you want the model to do, try finetuning llama, playing with APIs from OpenAI, etc. Googling and asking GPT along the way.<p>Foundational model training got so expensive that unless you can get hired by "owns nuclear power plant of GPUs" you are not going to get any "research" done. And as the area got white-hot those companies have more available talent than hardware nowadays. So just getting into the practitioner area is the best way to get productive with those models. And you improve as a practitioner by practicing, not by reading papers.</p><p>If you're at the computer, your time is best spent writing code and interacting with those models in my opinion. If you cannot (e.g. commute) I listen to some stuff (e.g. <a href="https://www.youtube.com/watch?v=zjkBMFhNj_g" rel="nofollow noreferrer">https://www.youtube.com/watch?v=zjkBMFhNj_g</a> - Anything from Karpathy on youtube, or <a href="https://www.youtube.com/@YannicKilcher" rel="nofollow noreferrer">https://www.youtube.com/@YannicKilcher</a> channel).
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38654704"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38654704" href="https://news.ycombinator.com/vote?id=38654704&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span>Bear in mind that ML skillset is now bifurcating into two components. On the one side are the people who work at places like OpenAI/DeepMind/Mistral/etc, who have billion dollar compute budgets. They are the ones who will create the foundational models. At this point a lot of this work is very technically narrow, dealing with CUDA, GPU issues, numerical stability, etc. On the other side are people who are using the models through the APIs in various ways. This is much more open-ended and potentially creative, but you don't need to know how QLearning works to do this.<p>It's a bit analogous to the situation with microprocessors. There is a ton of deep technical knowledge about how chips work, but most of this knowledge isn't critical for mainstream programming.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38654486"><td></td></tr>
            <tr id="38653406"><td></td></tr>
            <tr id="38653159"><td></td></tr>
                <tr id="38653205"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38653205" href="https://news.ycombinator.com/vote?id=38653205&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span>Thanks! Purchased a copy for myself and a friend.<p>And, Francois could easily report the unauthorized seller to Amazon, or send S&amp;D letter, suing not required.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="38654333"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38654333" href="https://news.ycombinator.com/vote?id=38654333&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span><i>Build something</i> of personal interest to you. Start by looking for similar open-source projects online. Look at the online posts of the authors. <i>Then</i> look for the papers that <i>you</i> think will be useful for <i>your</i> project. Before you know it, you'll become an expert in your area of interest.<p>Above all, be wary of programmatic lists that claim to track the most important recent papers. There's a ridiculous amount of <i>hype/propaganda</i> and <i>citation hacking</i> surrounding new AI research, making it hard to discern what will truly stand the test of time. Tomas Mikolov just posted about this.[a]</p><p>---</p><p>[a] <a href="https://news.ycombinator.com/item?id=38654038">https://news.ycombinator.com/item?id=38654038</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38654256"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38654256" href="https://news.ycombinator.com/vote?id=38654256&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span>I kind of despair of keeping up to date with ML, at least to the extent that I might ever get current enough to be paid to work with it. I did Andrew Ng's Coursera specialisation a few years back - and I've worked through some of the developer-oriented courses, implemented some stuff. read more than a few books, read papers (the ones I might have a hope of understanding), and tried to get a former employer to take it seriously. But its seeming like unless you have a PhD or big-co experience then its very difficult to keep up to date by working in the field.<p>Notwithstanding the above, I'd agree with others here who suggest learning by doing/implementing, not reading papers.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38653228"><td></td></tr>
                <tr id="38654346"><td></td></tr>
                  <tr id="38654362"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38654362" href="https://news.ycombinator.com/vote?id=38654362&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span>Posted in another thread, but sadly I got no replies...<p>Related question: how can I learn how to read the mathematical notation used in AI/ML papers? Is there a definitive work that describes the basics? I am a post-grad Engineer, so I know the fundamentals, but I'm really struggling with a lot of the Arxiv papers. Any pointers hugely appreciated.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38654475"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38654475" href="https://news.ycombinator.com/vote?id=38654475&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span>I particularly enjoyed Kevin Murphy's book [0] for being just rigorous enough to satisfy but not too dry, but also not trying to add humor unnecessarily.  It's not the best introduction text but it's great for someone with a little familiarity in the field who wants to broaden their understanding.  There are proofs to rationalize some approaches, but not to the degree that would satisfy a hardcore mathematicians maybe, but tbh I think that's a good thing for a book of this scope.<p>If you find a sample, it may include the index of symbols in the beginning which is pretty comprehensive and may satisfy your question on its own.</p><p><a href="https://www.goodreads.com/book/show/15857489-machine-learning" rel="nofollow noreferrer">https://www.goodreads.com/book/show/15857489-machine-learnin...</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                      <tr id="38654573"><td></td></tr>
                  <tr id="38653497"><td></td></tr>
            <tr id="38654135"><td></td></tr>
            <tr id="38653865"><td></td></tr>
            <tr id="38653235"><td></td></tr>
            <tr id="38653407"><td></td></tr>
            <tr id="38654078"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38654078" href="https://news.ycombinator.com/vote?id=38654078&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><br><div>
                  <p><span>can I get some insights on ai and robotics some papers to implement and get my hands dirty</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38654107"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38654107" href="https://news.ycombinator.com/vote?id=38654107&amp;how=up&amp;goto=item%3Fid%3D38652736"></a></center>    </td><td><p><span>you donât need papers, Arxiv are self aggrandizement from some meme in East Asia<p>just join communities on discord or locallama on reddit
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Let it snow in your terminal (121 pts)]]></title>
            <link>https://pypi.org/project/snowjob/</link>
            <guid>38652339</guid>
            <pubDate>Fri, 15 Dec 2023 08:56:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pypi.org/project/snowjob/">https://pypi.org/project/snowjob/</a>, See on <a href="https://news.ycombinator.com/item?id=38652339">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">




<div>
      <p>A python script that will make your terminal snow</p>
    </div>

<div data-controller="project-tabs">
        <!-- mobile menu -->
        <nav aria-label="Navigation for snowjob">
          <ul role="tablist">
            <li role="tab">
              <a id="mobile-description-tab" href="#description" data-project-tabs-target="mobileTab" data-action="project-tabs#onTabClick" aria-selected="true" aria-label="Project description. Focus will be moved to the description.">
                
Project description              </a>
            </li>
            <li role="tab">
              <a id="mobile-data-tab" href="#data" data-project-tabs-target="mobileTab" data-action="project-tabs#onTabClick" aria-label="Project details. Focus will be moved to the project details.">
                
Project details              </a>
            </li>
            <li role="tab">
              <a id="mobile-history-tab" href="#history" data-project-tabs-target="mobileTab" data-action="project-tabs#onTabClick" aria-label="Release history. Focus will be moved to the history panel.">
              
Release history            </a>
            </li>
            <li role="tab">
              <a id="mobile-files-tab" href="#files" data-project-tabs-target="mobileTab" data-action="project-tabs#onTabClick" aria-label="Download files. Focus will be moved to the project files.">
                
Download files              </a>
            </li>
          </ul>
        </nav>

        <div id="description" data-project-tabs-target="content" role="tabpanel" aria-labelledby="description-tab mobile-description-tab" tabindex="-1">
          <h2>Project description</h2>
          <div>
            <p>A python script that allows your terminal to snow.</p>
<p>You can find a bash(shell) script version of this here:
<a href="https://gist.github.com/sontek/1505483" rel="nofollow">https://gist.github.com/sontek/1505483</a></p>
<p>You can pass âstack if you want the snow to pile up</p>

          </div>
        </div>

        <div id="data" data-project-tabs-target="content" role="tabpanel" aria-labelledby="mobile-data-tab" tabindex="-1">
          <h2>Project details</h2>









          <br>
        </div>

        

          <div id="files" data-project-tabs-target="content" role="tabpanel" aria-labelledby="files-tab mobile-files-tab" tabindex="-1">
            <h2>Download files</h2>
            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href="https://packaging.python.org/installing/" title="External link" target="_blank" rel="noopener">installing packages</a>.</p>
            <h3>
Source Distribution            </h3>

                  


            <h3>
Built Distributions            </h3>

                
    
    
    

          </div>

<div role="dialog" id="copy-hash-modal-0fa601bd-6da9-41a7-bdf7-1ff6505b0bf8">
    <p><a href="#modal-close" title="Close">
      
      <span>Close</span>
    </a></p><div>
      <h3>
<a href="https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode" title="External link" target="_blank" rel="noopener">Hashes</a> for snowjob-0.0.4.tar.gz      </h3>
      <table>
        <caption>Hashes for snowjob-0.0.4.tar.gz</caption>
        <thead>
          <tr>
            <th scope="col">Algorithm</th>
            <th scope="col">Hash digest</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <tr data-controller="clipboard">
            <th scope="row">SHA256</th>
            <td><code data-clipboard-target="source">a7a261b5f1e65577bdd39ef0f3f595864031deabd1dc6b4c122fb89c4091e1d4</code></td>
            <td>
              
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">MD5</th>
            <td><code data-clipboard-target="source">b70781b90fb9b50ccb2177a3af915e8e</code></td>
            <td>
              
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">BLAKE2b-256</th>
            <td><code data-clipboard-target="source">b9f149240e0627b4d9cc7ff31b2772d646468c24c9776eea8d347def4d291bb2</code></td>
            <td>
              
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    
  </div><div role="dialog" id="copy-hash-modal-5a418f60-57c3-4c32-88b9-538027912bc1">
    <p><a href="#modal-close" title="Close">
      
      <span>Close</span>
    </a></p><div>
      <h3>
<a href="https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode" title="External link" target="_blank" rel="noopener">Hashes</a> for snowjob-0.0.4-py33-none-any.whl      </h3>
      <table>
        <caption>Hashes for snowjob-0.0.4-py33-none-any.whl</caption>
        <thead>
          <tr>
            <th scope="col">Algorithm</th>
            <th scope="col">Hash digest</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <tr data-controller="clipboard">
            <th scope="row">SHA256</th>
            <td><code data-clipboard-target="source">683d863a00d05c64834a44ce6be7fd0d86d9a226fc430fbc610ffbf234e2044d</code></td>
            <td>
              
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">MD5</th>
            <td><code data-clipboard-target="source">ac7935231788306bc49580c3aab0ff53</code></td>
            <td>
              
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">BLAKE2b-256</th>
            <td><code data-clipboard-target="source">ff393b90b00e44dbf52846db60ed6798d26c6eb01f87f471a85c6139fc9d8c63</code></td>
            <td>
              
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    
  </div><div role="dialog" id="copy-hash-modal-1e20c0ed-f61e-4eef-a1ee-cdffd8eeb403">
    <p><a href="#modal-close" title="Close">
      
      <span>Close</span>
    </a></p><div>
      <h3>
<a href="https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode" title="External link" target="_blank" rel="noopener">Hashes</a> for snowjob-0.0.4-py27-none-any.whl      </h3>
      <table>
        <caption>Hashes for snowjob-0.0.4-py27-none-any.whl</caption>
        <thead>
          <tr>
            <th scope="col">Algorithm</th>
            <th scope="col">Hash digest</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <tr data-controller="clipboard">
            <th scope="row">SHA256</th>
            <td><code data-clipboard-target="source">ad72e8351df366640efb9676077d1b2c0908e5162e3250ab135c7a4da62eba9a</code></td>
            <td>
              
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">MD5</th>
            <td><code data-clipboard-target="source">91a80f338103846fd355b189a5a75553</code></td>
            <td>
              
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">BLAKE2b-256</th>
            <td><code data-clipboard-target="source">b162386868fa31bd945497aeaa17716016af9a7b6746955be5bd6d7e8f3034c7</code></td>
            <td>
              
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    
  </div><div role="dialog" id="copy-hash-modal-b2faf18d-c07a-418a-8a1e-e3b69fa997d4">
    <p><a href="#modal-close" title="Close">
      
      <span>Close</span>
    </a></p><div>
      <h3>
<a href="https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode" title="External link" target="_blank" rel="noopener">Hashes</a> for snowjob-0.0.4-py3.3.egg      </h3>
      <table>
        <caption>Hashes for snowjob-0.0.4-py3.3.egg</caption>
        <thead>
          <tr>
            <th scope="col">Algorithm</th>
            <th scope="col">Hash digest</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <tr data-controller="clipboard">
            <th scope="row">SHA256</th>
            <td><code data-clipboard-target="source">8da0d66f7fa4e651c395fcf2dd77308fb2cd42a79daee8491fd9a7b7d789b1e5</code></td>
            <td>
              
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">MD5</th>
            <td><code data-clipboard-target="source">5e5240a9afc85115af601e496e12c022</code></td>
            <td>
              
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">BLAKE2b-256</th>
            <td><code data-clipboard-target="source">0ee9c8a5164fb58274514164b7899115a2e49c543f573e565b523b47f2fd69cf</code></td>
            <td>
              
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    
  </div><div role="dialog" id="copy-hash-modal-0e903c05-cab8-4ce8-8b4c-166df75d2aad">
    <p><a href="#modal-close" title="Close">
      
      <span>Close</span>
    </a></p><div>
      <h3>
<a href="https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode" title="External link" target="_blank" rel="noopener">Hashes</a> for snowjob-0.0.4-py2.7.egg      </h3>
      <table>
        <caption>Hashes for snowjob-0.0.4-py2.7.egg</caption>
        <thead>
          <tr>
            <th scope="col">Algorithm</th>
            <th scope="col">Hash digest</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <tr data-controller="clipboard">
            <th scope="row">SHA256</th>
            <td><code data-clipboard-target="source">60e6936a0e3ae0e806919ee1ad34f49123bdc73a7f322a6c3e7a22c47a56edd0</code></td>
            <td>
              
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">MD5</th>
            <td><code data-clipboard-target="source">1f0bd139f6e88c439264821b87151b95</code></td>
            <td>
              
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">BLAKE2b-256</th>
            <td><code data-clipboard-target="source">e893c6d2f40c7f91899cef931d02f6137e441ef52e122d44719de8c4181057cc</code></td>
            <td>
              
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    
  </div>
      </div>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Godot: A Collaboration with Google and the Forge (132 pts)]]></title>
            <link>https://godotengine.org/article/collaboration-with-google-forge-2023/</link>
            <guid>38651818</guid>
            <pubDate>Fri, 15 Dec 2023 07:16:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://godotengine.org/article/collaboration-with-google-forge-2023/">https://godotengine.org/article/collaboration-with-google-forge-2023/</a>, See on <a href="https://news.ycombinator.com/item?id=38651818">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				<p>We are excited to announce that we have partnered with <a href="https://about.google/">Google</a> and <a href="https://theforge.dev/">The Forge</a> to bring some helpful performance optimizations to our Vulkan mobile backend. This will primarily benefit users targeting Vulkan-capable mobile devices.</p>

<p>Google is committed to enhancing the Android gaming ecosystem by ensuring that Vulkan is well supported across many games, game engines, and devices. Lucky for us, this means that they have decided to help us ensure that our Vulkan mobile renderer is as efficient as possible.</p>

<p>The Forge is one of the premier developers in the world specializing in building custom game engines and rendering solutions as well as optimizing existing game engines.</p>

<p>The Forge will spend the next several months working on Godot and bringing their expertise to our engine. They will be assisted by experts at Google and, of course, Godot contributors.</p>

<p>We are excited to welcome The Forge into the Godot pool of contributors and we are very thankful to Google for their assistance as well!</p>

<p>The end goal for all of us is to create an amazing ecosystem for games on Android. We are happy to already participate in that ecosystem and look forward to allowing game developers to push their ideas even further with Vulkan.</p>

			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AMD's Next GPU Is a 3D-Integrated Superchip (161 pts)]]></title>
            <link>https://spectrum.ieee.org/amd-mi300</link>
            <guid>38650937</guid>
            <pubDate>Fri, 15 Dec 2023 04:18:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://spectrum.ieee.org/amd-mi300">https://spectrum.ieee.org/amd-mi300</a>, See on <a href="https://news.ycombinator.com/item?id=38650937">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-headline="AMDâs Next GPU Is a 3D-Integrated Superchip" data-elid="2666454143" data-post-url="https://spectrum.ieee.org/amd-mi300" data-authors="Samuel K. Moore" data-page-title="AMDâs Next GPU Is a 3D-Integrated Superchip - IEEE Spectrum"><p><a href="https://spectrum.ieee.org/tag/amd">AMD</a> lifted the hood on its next AI accelerator chip, the Instinct MI300, at the<a href="https://www.amd.com/en/corporate/events/advancing-ai.html" target="_blank"> AMD Advancing AI</a> event today, and itâs an unprecedented feat of <a href="https://spectrum.ieee.org/tag/3d-integration" target="_blank">3D integration</a>. MI300, a version of which will power the <a href="https://en.wikipedia.org/wiki/El_Capitan_(supercomputer)" target="_blank">El Capitan</a> supercomputer, is a layer cake of computing, memory, and communication thatâs three slices of silicon high and that can sling as much as 17 terabytes of data vertically between those slices. The result is as much as a 3.4-fold boost in speed for certain machine-learning-critical calculations. The chip offers both contrasts and similarities to competing approaches such as Nvidiaâs <a href="https://spectrum.ieee.org/nvidia-supercomputing-cpu-puts-intel-under-pressure" target="_blank">Grace Hopper superchip</a> and Intelâs supercomputer accelerator <a href="https://spectrum.ieee.org/intel-s-exascale-supercomputer-chip-is-a-master-class-in-3d-integration" target="_self">Ponte Vecchio</a>.<br></p><p>MI300a stacks three CPU <a href="https://spectrum.ieee.org/tag/chiplets" target="_blank">chiplets</a> (called compute complex dies, or CCDs, in AMDâs lingo) and six accelerator chiplets (XCDs) on top of four input-output dies (IODs), all on top of a piece of silicon that links them together to eight stacks of high-bandwidth DRAM that ring the superchip. (The MI300x substitutes the CCDs for two more XCDs, for an accelerator-only system.) With the scaling of transistors in the plane of the silicon slowing down, 3D stacking is seen as a key method to get more transistors into the same area and keep driving Mooreâs Law forward.</p><p><img alt="Grey, labeled rectangles with orange and gold vertical lines connecting them." data-rm-shortcode-id="b87acda6384d54374dd4564223f0574f" data-rm-shortcode-name="rebelmouse-image" data-runner-src="https://spectrum.ieee.org/media-library/grey-labeled-rectangles-with-orange-and-gold-vertical-lines-connecting-them.jpg?id=50661489&amp;width=980" height="240" id="a7fd1" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/grey-labeled-rectangles-with-orange-and-gold-vertical-lines-connecting-them.jpg?id=50661489&amp;width=980" width="1057"><small data-gramm="false" data-lt-tmp-id="lt-246886" placeholder="Add Photo Caption..." spellcheck="false">Compute and AI chiplets are stacked on top of I/O and cache chiplets in the MI300a.</small><small placeholder="Add Photo Credit...">AMD</small></p><p>âItâs a truly amazing silicon stack up that delivers the highest density performance that industry knows how to produce at this time,â says <a href="https://spectrum.ieee.org/chiplet" target="_self">Sam Naffziger</a>, a senior vice president and corporate fellow at AMD. The integration is done using two Taiwan Semiconductor Manufacturing Co. technologies, <a href="https://3dfabric.tsmc.com/english/dedicatedFoundry/technology/SoIC.htm" rel="noopener noreferrer" target="_blank">SoIC (system on integrated chips) and CoWoS (chip on wafer on substrate)</a>. The latter stacks smaller chips on top of larger ones using hybrid bonding, which links copper pads on each chip directly without solder. It is used to produce AMDâs <a href="https://spectrum.ieee.org/amd-3d-stacking-intel-graphcore" target="_self">V-Cache,</a> a cache-memory expanding chiplet that stacks on its highest-end CPU chiplets. The former, CoWos, stacks chiplets on a larger piece of silicon, called an interposer, which is built to contain high-density interconnects.</p><h2>Similarities and differences between AMD and Nvidia</h2><p>There are both similarities and differences to chief rival Nvidiaâs approach. Just as Nvidia did in its Hopper architecture, AMDâs accelerator architecture, CDNA3, added the capability of computing with <a href="https://www.nvidia.com/en-us/data-center/h100/#:~:text=AI%2Dfused%20HPC%20applications%20can,operations%2C%20with%20zero%20code%20changes." rel="noopener noreferrer" target="_blank">truncated 32-bit numbers called TF32</a> and with two different forms of 8-bit floating-point numbers. The latter attribute is used to speed the training of certain parts of transformer neural networks, such as large language models. They also both include a <a href="https://spectrum.ieee.org/nvidia-gpu" target="_self">scheme that reduces the size of the neural network</a>, called 4:2 sparsity.</p><p>Another similarity is the inclusion of both CPU and GPU in the same <a href="https://spectrum.ieee.org/tag/3d-packaging" target="_blank">package</a>. In many AI computer systems, GPUs and CPUs are separately packaged chips deployed in a 4 to 1 ratio. One advantage to joining them together in a single superchip is that both CPU and GPU have high-bandwidth access to the same cache and high-bandwidth DRAM (HBM) in a way that wonât trip each other up as they read and write data.</p><p>Nvidiaâs <a href="https://developer.nvidia.com/blog/nvidia-grace-hopper-superchip-architecture-in-depth/" target="_blank">Grace Hopper</a> is such a superchip combination linking the Grace CPU to the Hopper GPU through Nvidiaâs Nvidia NVLink Chip-2-Chip interconnects. AMDâs MI300a is as well, by integrating three CPU dies designed for its Genoa line and six XCD accelerators using its AMD Infinity Fabric interconnect technology.</p><p>But a casual glance at Grace Hopper and MI300 show some profound differences. Grace and Hopper are each individual dies that integrate all of a system-on-chipâs needed functional blocksâcompute, I/O, and cache. They are linked horizontally, and they are largeânearly at the size limit of photolithography technology.</p><p>AMD took a different approach, one that it has followed for several generations of its CPUs and that rival <a href="https://spectrum.ieee.org/tag/intel">Intel</a> used for its 3D-stacked supercomputer accelerator Ponte Vecchio. The concept is called system-technology-co-optimization, or STCO. That means designers started by breaking the chip down into its functions and decided which functions needed which manufacturing technology.</p><p data-rm-resized-container="25%"><img alt="" data-rm-shortcode-id="824acf053d8de4f6c76ec91569d65c78" data-rm-shortcode-name="rebelmouse-image" data-runner-src="https://spectrum.ieee.org/media-library/a-slice-of-mi300-stack-from-the-carrier-silicon-at-the-top-to-the-solder-ball-at-the-bottom-of-the-package.jpg?id=50682953&amp;width=980" height="3661" id="cde2e" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/a-slice-of-mi300-stack-from-the-carrier-silicon-at-the-top-to-the-solder-ball-at-the-bottom-of-the-package.jpg?id=50682953&amp;width=980" width="1126"><small placeholder="Add Photo Caption...">A slice of MI300 stack from the carrier silicon at the top to the solder ball at the bottom of the package.</small><small placeholder="Add Photo Credit...">AMD</small></p><p>âWhat we wanted to do with MI300 was to scale beyond what was possible in a single monolithic GPU. So we deconstructed it into pieces and then built it back up,â says <a href="https://www.linkedin.com/in/alan-smith-amd/" rel="noopener noreferrer" target="_blank">Alan Smith</a>, a senior fellow and the chief architect for Instinct. Although itâs been doing so for several generations of CPUs, the MI300 is the first time the company has made GPU chiplets and bound them in a single system.</p><p>âBreaking the GPU into chiplets allowed us to put the compute in the most advanced process node while keeping the rest of the chip in technology thatâs more appropriate for cache and I/O,â he says. In the case of the MI300, all the compute was built using TSMCâs N5 process, the most advanced available and the one used for Nvidiaâs top-line GPUs. Neither the I/O functions nor the systemâs cache memory benefit from N5, so AMD chose a less-expensive technology (N6) for those. Therefore, those two functions could then be built together on the same chiplet.</p><p>With the functions broken up, all the pieces of silicon involved in the MI300 are small. The largest, the I/O dies, are not even half the size of Hopper. And the CCDs are only about one-fifth the size of the I/O die. The small sizes make a big difference. Generally, smaller chips yield better. That is, a single wafer will provide a higher proportion of working small chips than it would large chips. â3D integration isnât free,â says Naffziger. But the higher yield offsets the cost, he says.</p><h2>Luck and experience</h2><p>The design involved some clever reuse of existing technologies and designs, a few compromises, and a little luck, according to Naffziger, an IEEE Fellow. The reuse came in two instances. First, AMD was able to do the 3D integration with a degree of confidence because it had already been using the exact same pitch of vertical interconnectsâ9 micrometersâin its V-cache product.</p><p>As an optional add-on that AMD was able to charge extra for, V-cache offers little risk that poor yield or other problems will have a big impact on the company. âItâs been a great thing to enable us to wring out the manufacturing problems and all the design complexities of 3D stacking without endangering the main product line,â says Naffziger.</p><p>The other instance of reuse was a bit chancier. When the MI300 team decided that a CPU/GPU combination was needed, Naffziger âsomewhat sheepishlyâ asked the head of the team designing the Zen4 CCD for the <a href="https://www.amd.com/en/events/epyc4" target="_blank">Genoa CPU</a> if the CCD could be made to fit the MI300âs needs. That team was under pressure to meet an earlier deadline than expected, but a day later they responded. Naffziger was in luck; the Zen4 CCD had a small blank space in just the right spot to make the vertical connections to the MI300 I/O die and their associated circuitry without a disruption to the overall design.</p><p>Nevertheless, there was still some geometry that needed solving. To make all the internal communications work, the four I/O chiplets had to be facing each other on a particular edge. That meant making a mirror-image version of the chiplet. Because it was codesigned with the I/O chiplet, the XCD and its vertical connections were built to link up with both versions of the I/O. But there was no messing with the CCD, which they were lucky to have at all. So instead the I/O was designed with redundant connections, so that no matter which version of the chiplet it sat on, the CCD would connect.</p><p><img alt="Multicolor rectangle with capital lettering in places." data-rm-shortcode-id="fd7dd6159bc9fba3eaf956a11c231d6e" data-rm-shortcode-name="rebelmouse-image" data-runner-src="https://spectrum.ieee.org/media-library/multicolor-rectangle-with-capital-lettering-in-places.jpg?id=50662187&amp;width=980" height="412" id="917d3" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/multicolor-rectangle-with-capital-lettering-in-places.jpg?id=50662187&amp;width=980" width="896"><small placeholder="Add Photo Caption...">To get everything to line up, the IOD chiplets had to be made as mirrors of each other, and the accelerator (XCD) and compute (CCD) chiplets had to be rotated.</small><small placeholder="Add Photo Credit...">AMD</small></p><p>The power grid, which has to deliver hundreds of amperes of current to the compute dies at the top of the stack, faced similar challenges because it too had to accommodate all the various chiplet orientations, Naffziger noted.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pipe Dreams: The life and times of Yahoo Pipes (332 pts)]]></title>
            <link>https://retool.com/pipes</link>
            <guid>38650878</guid>
            <pubDate>Fri, 15 Dec 2023 04:07:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://retool.com/pipes">https://retool.com/pipes</a>, See on <a href="https://news.ycombinator.com/item?id=38650878">Hacker News</a></p>
<div id="readability-page-1" class="page"><div font-family="TiemposText" font-weight="400"><div><p>âHe was very kind to write this very nice review of it,â Sadri reflected, âand that exploded interest, and caused our servers all to melt down.â</p></div><div><p>As launch day went on, usage didnât taper off. The demand for Pipes required vastly more resources than it had available, and Yahoo put all hands on deck to support keeping the nascent system running.</p></div><div><p>Ho remembers âjust sitting in my chair the entire <!-- -->[<!-- -->launch<!-- -->]<!-- --> day until late in the evening, just bringing up machines.â Yahooâs data-center team started shifting servers that they had already prepped for deployment for other groups into service for Pipes.</p></div><div><p>âEvery time it came up, everybody jumped on it and it crashed again, and everybody cycled back into a waiting state,â said Trevor, the lead engineer. âIt felt bad at the time, but in retrospect, it was awesome.â</p></div><div><p>Raffel said Yahoo co-founder Jerry Yang told him to use his name to get whatever he needed to keep Pipes running then: âIâd never done that before. I certainly havenât done that since.â</p></div><div><p>The beta launchâs popularity caught the team so off guard that they hadnât even prepared a crash page. (Though that soon changed: Trevor said that the first thing they created after the beta launch was a page that read something like âour pipes are clogged.â)</p></div><div><p>In the days and weeks following, the team started to see more of the loose threads they hadnât been able to stitch up in the sudden sprint to an unexpectedly momentous launch. Among a variety of issues, once someone created a Pipe, it ran forever.</p></div><div><p>There was no end-time built in or a need for someone to login to refresh or request a feed. (Even if there had been, RSS newsreaders polled for updates automatically.) Raffel said the team didnât consider âjust how many zombie things would get generated. <!-- -->[<!-- -->...<!-- -->]<!-- --> We kind of put ourselves in a situation where, fairly quickly, we had a lot of usage from things that may or may not actually <!-- -->[<!-- -->have been<!-- -->]<!-- --> real users.â</p></div><div><p>Still, many others agreed with OâReillyâs sentiments. The <em>InfoWorld</em> writer turned <a href="https://blog.jonudell.net/2007/02/12/annotate-the-web-then-rewire-it/" target="_blank" rel="noopener noreferrer">Microsoft evangelist Jon Udell</a> blogged about a week after the beta launch, âThe dominant way in which most people will âprogramâ the web is by writing metadata, not code, and weâll need an interface as friendly and powerful as Pipes to help them do that.â</p></div><div><p>Yahoo threw more servers at Pipes, the programmers optimized the least inefficient code, and within a few months, Pipesâ reliability stabilized. But just as it was rising it was alsoâalreadyânearly fixed in amber.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: My Go SQLite driver did poorly on a benchmark, so I fixed it (209 pts)]]></title>
            <link>https://github.com/ncruces/go-sqlite-bench</link>
            <guid>38650570</guid>
            <pubDate>Fri, 15 Dec 2023 02:44:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ncruces/go-sqlite-bench">https://github.com/ncruces/go-sqlite-bench</a>, See on <a href="https://news.ycombinator.com/item?id=38650570">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">Benchmarks for Golang SQLite Drivers</h2>
<div dir="auto"><p dir="auto">Important</p><p dir="auto">I noticed my SQLite driver <a href="https://github.com/ncruces/go-sqlite3"><code>github.com/ncruces/go-sqlite3</code></a>
was doing poorly in this benchmark that got posted on <a href="https://news.ycombinator.com/item?id=38626698" rel="nofollow">Hacker News</a>
and <a href="https://www.reddit.com/r/golang/comments/18hgbyl/i_benchmarked_six_go_sqlite_drivers_and_found_you/" rel="nofollow">reddit</a>.</p>
<p dir="auto">I traced it back to a <a href="https://github.com/ncruces/go-sqlite3/commit/c667a1f469f28879a044807f8ed83e36645977ba">new feature</a>,
and a serious <a href="https://github.com/ncruces/go-sqlite3/commit/d862f47d95d522fb7a63aacf1259714aff986d46">performance regression</a>
(introduced to fix a compiler crash).<br>
I implemented a <a href="https://github.com/ncruces/go-sqlite3/commit/964a42c76deb9c7dcff2dca5c19f0453e062c55f">fix</a>
(a 4x larger, PLRU bit cache), released a new version, and ran the numbers again (different machine, configuration).</p>
<p dir="auto"><strong>The results of the new experiment are below</strong>.</p>
</div>
<p dir="auto">This work is sponsored by Monibot - Easy Server and Application Monitoring.
Try out Monibot at <a href="https://monibot.io/?ref=go-sqlite-bench" rel="nofollow">https://monibot.io</a>.
It's free.</p>
<p dir="auto">For benchmarks I used the following libraries:</p>
<ul dir="auto">
<li>
<p dir="auto">craw, <code>crawshaw.io/sqlite</code>, a CGO-based solution. This is not a <code>database/sql</code> driver.</p>
</li>
<li>
<p dir="auto">mattn, <code>github.com/mattn/go-sqlite3</code>, a CGO-based solution. This library is
(still) the de-facto standard and widely used.</p>
</li>
<li>
<p dir="auto">modernc, <code>modernc.org/sqlite</code>, a pure Go solution. This is a newer library,
based on the SQLite C code re-written in Go.</p>
</li>
<li>
<p dir="auto">ncruces, <code>github.com/ncruces/go-sqlite3</code>, a pure Go solution based on WASM (?).</p>
</li>
<li>
<p dir="auto">sqinn, <code>github.com/cvilsmeier/sqinn-go</code>, a solution without CGO. It uses
<code>github.com/cvilsmeier/sqinn</code> to access SQLite database files.</p>
</li>
<li>
<p dir="auto">zombie, <code>github.com/zombiezen/go-sqlite</code>, a rewrite of the crawshaw driver, using the
modernc libraries. This is not a <code>database/sql</code> driver.</p>
</li>
</ul>
<p dir="auto">The test setup is as follows:</p>
<ul dir="auto">
<li>OS: Debian/GNU Linux amd64 version 12.3</li>
<li>CPU: 11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz, 4 physical cores, 8 logical cores</li>
<li>RAM: 16GB</li>
<li>Disk: 1TB NVME SSD</li>
<li>go version go1.21.5 linux/amd64</li>
</ul>
<p dir="auto">The benchmark was run on 2023-12-09, with then-current library versions.
See go.mod for library versions. Each test was run once for warmup.
The second run was then recorded.</p>
<p dir="auto">A general note on benchmarks:</p>
<p dir="auto">Do not trust benchmarks, write your own. This specific benchmark is modelled
after my very own database usage scenarios. Your scenarios may be totally
different.</p>
<h2 tabindex="-1" dir="auto">Database Schema</h2>
<p dir="auto">The test database consist of the following tables and indizes:</p>
<div data-snippet-clipboard-copy-content="PRAGMA journal_mode=DELETE;
PRAGMA synchronous=FULL;
PRAGMA foreign_keys=1;
PRAGMA busy_timeout=5000;

CREATE TABLE users (
    id INTEGER PRIMARY KEY NOT NULL,
    created INTEGER NOT NULL,
    email TEXT NOT NULL,
    active INTEGER NOT NULL);
CREATE INDEX users_created ON users(created);

CREATE TABLE articles (
    id INTEGER PRIMARY KEY NOT NULL,
    created INTEGER NOT NULL,  
    userId INTEGER NOT NULL REFERENCES users(id),
    text TEXT NOT NULL);
CREATE INDEX articles_created ON articles(created);
CREATE INDEX articles_userId ON articles(userId);

CREATE TABLE comments (
    id INTEGER PRIMARY KEY NOT NULL,
    created INTEGER NOT NULL,
    articleId INTEGER NOT NULL REFERENCES articles(id),
    text TEXT NOT NULL);
CREATE INDEX comments_created ON comments(created);
CREATE INDEX comments_articleId ON comments(articleId);"><pre><code>PRAGMA journal_mode=DELETE;
PRAGMA synchronous=FULL;
PRAGMA foreign_keys=1;
PRAGMA busy_timeout=5000;

CREATE TABLE users (
    id INTEGER PRIMARY KEY NOT NULL,
    created INTEGER NOT NULL,
    email TEXT NOT NULL,
    active INTEGER NOT NULL);
CREATE INDEX users_created ON users(created);

CREATE TABLE articles (
    id INTEGER PRIMARY KEY NOT NULL,
    created INTEGER NOT NULL,  
    userId INTEGER NOT NULL REFERENCES users(id),
    text TEXT NOT NULL);
CREATE INDEX articles_created ON articles(created);
CREATE INDEX articles_userId ON articles(userId);

CREATE TABLE comments (
    id INTEGER PRIMARY KEY NOT NULL,
    created INTEGER NOT NULL,
    articleId INTEGER NOT NULL REFERENCES articles(id),
    text TEXT NOT NULL);
CREATE INDEX comments_created ON comments(created);
CREATE INDEX comments_articleId ON comments(articleId);
</code></pre></div>
<h2 tabindex="-1" dir="auto">Benchmarks</h2>
<p dir="auto">Result times are measured in milliseconds. Lower numbers indicate better
performance.</p>
<h3 tabindex="-1" dir="auto">Simple</h3>
<p dir="auto">Insert 1 million user rows in one database transaction.
Then query all users once.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ncruces/go-sqlite-bench/blob/master/results/simple.svg"><img src="https://github.com/ncruces/go-sqlite-bench/raw/master/results/simple.svg" alt=""></a></p>
<div data-snippet-clipboard-copy-content="                  insert        query
-------------------------------------
craw             1622 ms       908 ms
mattn            2035 ms      1851 ms
modernc          7218 ms      1851 ms
ncruces          4706 ms      1959 ms
sqinn            1337 ms       927 ms
zombie           2623 ms       584 ms"><pre><code>                  insert        query
-------------------------------------
craw             1622 ms       908 ms
mattn            2035 ms      1851 ms
modernc          7218 ms      1851 ms
ncruces          4706 ms      1959 ms
sqinn            1337 ms       927 ms
zombie           2623 ms       584 ms
</code></pre></div>
<h3 tabindex="-1" dir="auto">Complex</h3>
<p dir="auto">Insert 200 users in one database transaction.
Then insert 20000 articles (100 articles for each user) in another transaction.
Then insert 400000 comments (20 comments for each article) in another transaction.
Then query all users, articles and comments in one big JOIN statement.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ncruces/go-sqlite-bench/blob/master/results/complex.svg"><img src="https://github.com/ncruces/go-sqlite-bench/raw/master/results/complex.svg" alt=""></a></p>
<div data-snippet-clipboard-copy-content="                   insert       query
-------------------------------------
craw              1011 ms      972 ms
mattn             1231 ms     2047 ms
modernc           4414 ms     2290 ms
ncruces           2985 ms     2577 ms
sqinn              911 ms     1068 ms
zombie            2187 ms      858 ms"><pre><code>                   insert       query
-------------------------------------
craw              1011 ms      972 ms
mattn             1231 ms     2047 ms
modernc           4414 ms     2290 ms
ncruces           2985 ms     2577 ms
sqinn              911 ms     1068 ms
zombie            2187 ms      858 ms
</code></pre></div>
<h3 tabindex="-1" dir="auto">Many</h3>
<p dir="auto">Insert N users in one database transaction.
Then query all users 1000 times.
This benchmark is used to simluate a read-heavy use case.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ncruces/go-sqlite-bench/blob/master/results/many.svg"><img src="https://github.com/ncruces/go-sqlite-bench/raw/master/results/many.svg" alt=""></a></p>
<div data-snippet-clipboard-copy-content="        query/N=10  query/N=100  query/N=1000
--------------------------------------------------------
craw         58 ms       168 ms       1282 ms
mattn        52 ms       165 ms       2003 ms
modernc      58 ms       186 ms       2335 ms
ncruces      73 ms       375 ms       2665 ms
sqinn       112 ms       331 ms       3071 ms
zombie       34 ms        58 ms        646 ms"><pre><code>        query/N=10  query/N=100  query/N=1000
--------------------------------------------------------
craw         58 ms       168 ms       1282 ms
mattn        52 ms       165 ms       2003 ms
modernc      58 ms       186 ms       2335 ms
ncruces      73 ms       375 ms       2665 ms
sqinn       112 ms       331 ms       3071 ms
zombie       34 ms        58 ms        646 ms
</code></pre></div>
<h3 tabindex="-1" dir="auto">Large</h3>
<p dir="auto">Insert 10000 users with N bytes of row content.
Then query all users.
This benchmark is used to simluate reading of large (gigabytes) databases.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ncruces/go-sqlite-bench/blob/master/results/large.svg"><img src="https://github.com/ncruces/go-sqlite-bench/raw/master/results/large.svg" alt=""></a></p>
<div data-snippet-clipboard-copy-content="      query/N=50000  query/N=100000  query/N=200000
---------------------------------------------------
craw         429 ms          784 ms         1639 ms
mattn        308 ms          624 ms         1098 ms
modernc      599 ms         1054 ms         1983 ms
ncruces      395 ms          678 ms         1271 ms
sqinn       1269 ms         2553 ms         5707 ms
zombie      1064 ms         2057 ms         4115 ms"><pre><code>      query/N=50000  query/N=100000  query/N=200000
---------------------------------------------------
craw         429 ms          784 ms         1639 ms
mattn        308 ms          624 ms         1098 ms
modernc      599 ms         1054 ms         1983 ms
ncruces      395 ms          678 ms         1271 ms
sqinn       1269 ms         2553 ms         5707 ms
zombie      1064 ms         2057 ms         4115 ms
</code></pre></div>
<h3 tabindex="-1" dir="auto">Concurrent</h3>
<p dir="auto">Insert one million users.
Then have N goroutines query all users.
This benchmark is used to simulate concurrent reads.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ncruces/go-sqlite-bench/blob/master/results/concurrent.svg"><img src="https://github.com/ncruces/go-sqlite-bench/raw/master/results/concurrent.svg" alt=""></a></p>
<div data-snippet-clipboard-copy-content="        query/N=2  query/N=4  query/N=8
---------------------------------------
craw       796 ms    1145 ms    1553 ms
mattn     1782 ms    2019 ms    2642 ms
modernc   3554 ms   10789 ms   39959 ms
ncruces   2075 ms    2321 ms    3203 ms
sqinn      910 ms    1327 ms    1965 ms
zombie     509 ms     777 ms    1054 ms"><pre><code>        query/N=2  query/N=4  query/N=8
---------------------------------------
craw       796 ms    1145 ms    1553 ms
mattn     1782 ms    2019 ms    2642 ms
modernc   3554 ms   10789 ms   39959 ms
ncruces   2075 ms    2321 ms    3203 ms
sqinn      910 ms    1327 ms    1965 ms
zombie     509 ms     777 ms    1054 ms
</code></pre></div>
<h2 tabindex="-1" dir="auto">Summary</h2>
<ul dir="auto">
<li>We cannot declare a winner, it all depends on the use case.</li>
<li>Crawshaw and Zombiezen are pretty fast.</li>
<li>Mattn, although the de-facto standard, is not the best overall solution.</li>
<li>SQLite without CGO is possible.</li>
</ul>
<p dir="auto">This work is sponsored by Monibot - Easy Server and Application Monitoring.
Try out Monibot at <a href="https://monibot.io/?ref=go-sqlite-bench" rel="nofollow">https://monibot.io</a>.
It's free.</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google Groups ending support for Usenet (265 pts)]]></title>
            <link>https://support.google.com/groups/answer/11036538?hl=en</link>
            <guid>38649554</guid>
            <pubDate>Fri, 15 Dec 2023 00:37:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://support.google.com/groups/answer/11036538?hl=en">https://support.google.com/groups/answer/11036538?hl=en</a>, See on <a href="https://news.ycombinator.com/item?id=38649554">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="hcfe-content" role="main">            <article class="page" sc-render-smart-button="false" itemscope=""> <div data-stats-ve="35"><p>If you work with Usenet groups in Google Groups, support for these groups is ending soon.</p>

<h2>Whatâs changing?</h2>

<p>Starting on February 22, 2024, you can no longer use Google Groups (at groups.google.com) to post content to Usenet groups, subscribe to Usenet groups, or view new Usenet content. You can continue to view and search for historical Usenet content posted before February 22, 2024 on Google Groups.</p>

<p>In addition, Googleâs Network News Transfer Protocol (NNTP) server and associated peering will no longer be available, meaning Google will not support serving new Usenet content or exchanging content with other NNTP servers.</p>

<p>This change will not impact any non-Usenet content on Google Groups, including all user and organization-created groups. Most of the current Google Groups content&nbsp; is not Usenet content and will not be affected.</p>

<h2>What do I need to do?</h2>

<p>If you donât actively engage with Usenet content, you donât need to do anything. Current Usenet users will need to do two things before February 22, 2024 if they want to continue engaging with Usenet content:</p>

<ol>
  <li><strong>Find a new Usenet client. </strong>Several free and paid alternatives are available, both web-based and application-based. To find a client, do a web search for "how do I find a usenet text client"</li>
  <li><strong>Find a new public Usenet server. </strong>The new client you choose will likely have a default server or a set of curated options for you. If not, to find a server, do a web search for "public NNTP servers."</li>
</ol>

<p>Because Usenet is a distributed system, <strong>you do not need to migrate data</strong>. All of the Usenet content you can access today on Google Groups should already be synced to the new server you choose. After you select a new client and server, you can reselect the groups youâre interested in.</p>

<h2>Why is Google Groups support for Usenet ending?</h2>

<p>Over the last several years, legitimate activity in text-based Usenet groups has declined significantly because users have moved to more modern technologies and formats such as social media and web-based forums. Much of the content being disseminated via Usenet today is binary (non-text) file sharing, which Google Groups does not support, as well as spam.</p>
</div>         <div data-stats-id="11036538" data-stats-ve="20" data-stats-visible-imp="" id="article-survey-container"><h2>Was this helpful?</h2><p>How can we improve it?</p></div>    </article>            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Stanford Prison Experiment was hugely influential. We learned it was a fraud (2018) (164 pts)]]></title>
            <link>https://www.vox.com/2018/6/13/17449118/stanford-prison-experiment-fraud-psychology-replication</link>
            <guid>38648883</guid>
            <pubDate>Thu, 14 Dec 2023 23:26:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.vox.com/2018/6/13/17449118/stanford-prison-experiment-fraud-psychology-replication">https://www.vox.com/2018/6/13/17449118/stanford-prison-experiment-fraud-psychology-replication</a>, See on <a href="https://news.ycombinator.com/item?id=38648883">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p id="ch3SNe">The Stanford Prison Experiment, one of the most famous and compelling psychological studies of all time, told us a tantalizingly simple story about human nature. </p>
<p id="2DE2Gk">The study took paid participants and assigned them to be âinmatesâ or âguardsâ in a mock prison at Stanford University. Soon after the experiment began, the âguardsâ began mistreating the âprisoners,â implying evil is brought out by circumstance. The authors, in their conclusions, suggested innocent people, thrown into a situation where they have power over others, will begin to abuse that power. And people who are put into a situation where they are powerless will be driven to submission, even madness. </p>
<p id="buIC1G">The Stanford Prison Experiment has been <a href="https://www.researchgate.net/publication/278144932_Coverage_of_the_Stanford_Prison_Experiment_in_Introductory_Social_Psychology_Textbooks">included</a> in many, many introductory psychology textbooks and <a href="http://journals.sagepub.com/doi/pdf/10.1177/1475725714568007">is often cited uncritically</a>. Itâs the subject of movies, documentaries, books, television shows, and <a href="https://exhibits.stanford.edu/spe/catalog/gf026hb5740">congressional testimony</a>.</p>
<p id="m7VLu5">But its findings were wrong. Very wrong. And not just due to its questionable ethics <a href="https://twitter.com/david_m_amodio/status/1006958007983460361">or lack of concrete data</a> â but because of deceit. </p>
<p id="cmyBh2">A new <a href="https://medium.com/s/trustissues/the-lifespan-of-a-lie-d869212b1f62">exposÃ©</a> published by Medium based on previously unpublished <a href="https://www.vox.com/science-and-health/2018/6/14/17464516/stanford-prison-experiment-audio">recordings</a> of Philip Zimbardo, the Stanford psychologist who ran the study, and interviews with his participants, <a href="https://medium.com/s/trustissues/the-lifespan-of-a-lie-d869212b1f62">offers</a> convincing evidence that the guards in the experiment were coached to be cruel. It also shows that the experimentâs most memorable moment â of a prisoner descending into a screaming fit, proclaiming, âIâm burning up inside!â â was the result of the prisoner acting. âI took it as a kind of an improv exercise,â one of the guards told reporter <a href="https://twitter.com/benzblum?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Ben Blum</a>. âI believed that I was doing what the researchers wanted me to do.â </p>
<p id="sk2QDd">The findings have long been subject to scrutiny â many think of them <a href="https://twitter.com/david_m_amodio/status/1006958007983460361">as more of a dramatic demonstration</a>, a sort-of academic reality show, than a serious bit of science. But these new revelations incited an immediate response. âWe must stop celebrating this work,â personality psychologist Simine Vazire <a href="https://twitter.com/siminevazire/status/1006070517772607488">tweeted</a>, in response to the <a href="https://medium.com/s/trustissues/the-lifespan-of-a-lie-d869212b1f62">article</a>. âItâs anti-scientific. Get it out of textbooks.â Many other psychologists have expressed similar sentiments. </p>
<p id="8V75RZ">(<strong>Update</strong>: Since this article published, the journal <em>American Psychologist</em> has<a href="https://www.gwern.net/docs/psychology/2019-letexier.pdf"> published a thorough debunking</a> of the Stanford Prison Experiment that goes beyond what Blum found in his piece. Thereâs even more evidence that the âguardsâ knew the results that Zimbardo wanted to produce, and were trained to meet his goals. It also provides evidence that the conclusions of the experiment were predetermined.) </p>
<p id="c8SIec">Many of the classic show-stopping experiments in psychology have lately turned out to be wrong, fraudulent, or outdated. And in recent years, social scientists have begun to reckon with the truth that their old work needs a redo, the â<a href="https://www.vox.com/2016/3/14/11219446/psychology-replication-crisis">replication crisis</a>.â But thereâs been a lag â in the popular consciousness and in how psychology is taught by teachers and textbooks. Itâs time to catch up. </p>
<h3 id="UNdsVO">Many classic findings in psychology have been reevaluated recently </h3>
  <figure>
  <span>
    
    <span data-original="https://cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg">
      
        <picture data-cid="site/picture_element-1702618019_8587_194721" data-cdata="{&quot;asset_id&quot;:11533017,&quot;ratio&quot;:&quot;*&quot;}">
  


  <source srcset="https://cdn.vox-cdn.com/thumbor/rpZt310iAvhW5p4gYqANH5ZzCV8=/0x0:4912x3508/320x0/filters:focal(0x0:4912x3508):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 320w, https://cdn.vox-cdn.com/thumbor/NbI0nCEGMeY6wVmCwzipfoIahiM=/0x0:4912x3508/520x0/filters:focal(0x0:4912x3508):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 520w, https://cdn.vox-cdn.com/thumbor/uBEQbmUpdxsQ-IauH5VgqgPN69I=/0x0:4912x3508/720x0/filters:focal(0x0:4912x3508):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 720w, https://cdn.vox-cdn.com/thumbor/kIV1zd92Usd_jGwzNP5p4Iiaq-I=/0x0:4912x3508/920x0/filters:focal(0x0:4912x3508):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 920w, https://cdn.vox-cdn.com/thumbor/fA-hv31BSeEV9oTOvzCDij4kz3o=/0x0:4912x3508/1120x0/filters:focal(0x0:4912x3508):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 1120w, https://cdn.vox-cdn.com/thumbor/psHz4SyOj8NHCdmVp1f8HJDwzcc=/0x0:4912x3508/1320x0/filters:focal(0x0:4912x3508):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 1320w, https://cdn.vox-cdn.com/thumbor/FaR_bUgYUDtox_G5jM1CwhdnybE=/0x0:4912x3508/1520x0/filters:focal(0x0:4912x3508):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 1520w, https://cdn.vox-cdn.com/thumbor/KXh2zhbRBIzBRwreFWwsC9Nu1Gk=/0x0:4912x3508/1720x0/filters:focal(0x0:4912x3508):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 1720w, https://cdn.vox-cdn.com/thumbor/Hsma2pASoM5y60bIa3zcdVerm8Q=/0x0:4912x3508/1920x0/filters:focal(0x0:4912x3508):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" type="image/webp">


<img srcset="https://cdn.vox-cdn.com/thumbor/U5w4ALHg15_J7-DXB-jni-MIbj8=/0x0:4912x3508/320x0/filters:focal(0x0:4912x3508):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 320w, https://cdn.vox-cdn.com/thumbor/_twvisnyW4hDIqO3Z86NCnEopyQ=/0x0:4912x3508/520x0/filters:focal(0x0:4912x3508):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 520w, https://cdn.vox-cdn.com/thumbor/FD59-zi0mf6R6xe3Dk8GTz92vjI=/0x0:4912x3508/720x0/filters:focal(0x0:4912x3508):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 720w, https://cdn.vox-cdn.com/thumbor/fN4egToY62oLHbqQmnGMbwZUP1Y=/0x0:4912x3508/920x0/filters:focal(0x0:4912x3508):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 920w, https://cdn.vox-cdn.com/thumbor/t7YLXM5VKH8C9JEIEATji_XHwck=/0x0:4912x3508/1120x0/filters:focal(0x0:4912x3508):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 1120w, https://cdn.vox-cdn.com/thumbor/mdnJnUfQqXoBDrBvIeawRR-sFQI=/0x0:4912x3508/1320x0/filters:focal(0x0:4912x3508):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 1320w, https://cdn.vox-cdn.com/thumbor/XuY4IdF0S_wVI5ZPqWilf_lCvuI=/0x0:4912x3508/1520x0/filters:focal(0x0:4912x3508):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 1520w, https://cdn.vox-cdn.com/thumbor/w9MUybJ5NN34xgavweV2h0umN64=/0x0:4912x3508/1720x0/filters:focal(0x0:4912x3508):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 1720w, https://cdn.vox-cdn.com/thumbor/puZA528BnVXkuISyYZaSlgwNH6E=/0x0:4912x3508/1920x0/filters:focal(0x0:4912x3508):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" alt="" loading="lazy" data-upload-width="4912" width="4912" height="3508" src="https://cdn.vox-cdn.com/thumbor/lEu7VEMcHRcXIpfaw1PQ4TtEAJw=/0x0:4912x3508/1200x0/filters:focal(0x0:4912x3508):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/11533017/GettyImages_834859350__1_.jpg">

</picture>

      
    </span>
    
  </span>
  
    <span>
      
      
        <cite>Getty Images</cite>
      
    </span>
  
</figure>

<p id="4jOET1">The Zimbardo prison experiment is not the only classic study that has been recently scrutinized, reevaluated, or outright exposed as a fraud. Recently, <a href="https://www.theguardian.com/science/2018/apr/16/a-real-life-lord-of-the-flies-the-troubling-legacy-of-the-robbers-cave-experiment">science journalist Gina Perry</a> found that the infamous âRobbers Caveâ experiment in the 1950s â in which young boys at summer camp were essentially manipulated into joining warring factions â was a do-over from a failed previous version of an experiment, which the scientists never mentioned in an academic paper. Thatâs a glaring omission. Itâs wrong to throw out data that refutes your hypothesis and only publicize data that supports it. </p>
<p id="tXLsi4">Perry has also revealed inconsistencies in another major early work in psychology: the Milgram electroshock test, in which participants were told by an authority figure to deliver seemingly lethal doses of electricity to an unseen hapless soul. Her investigations show some <a href="https://psmag.com/social-justice/electric-schlock-65377">evidence of</a> researchers going off the study script and possibly coercing participants to deliver the desired results. (Somewhat ironically, the new revelations about the prison experiment also show the power an authority figure â in this case Zimbardo himself and his âwardenâ â has in manipulating others to be cruel.)</p>
<p id="13AnP0">Other studies have been reevaluated for more honest, methodological snafus. Recently, I wrote about the âmarshmallow test,â a series of studies from the early â90s that suggested the ability to delay gratification at a young age <a href="https://www.vox.com/science-and-health/2018/6/6/17413000/marshmallow-test-replication-mischel-psychology">is correlated with success later in life</a>. New research finds that if the original marshmallow test authors had a larger sample size, and greater research controls, their results would not have been the showstoppers they were in the â90s. I can list so many more textbook psychology findings that have either not replicated, or are currently in the midst of a serious reevaluation. </p>
<p id="2sg5OI">Like: </p>
<ul>
<li id="OMhdEa">Social priming: People who read âoldâ-sounding words (like ânursing homeâ) were more likely to walk slowly â showing how our brains can be subtly âprimedâ with thoughts and actions.</li>
<li id="yPoABY">The facial feedback hypothesis: Merely activating muscles around the mouth caused people to become happier â demonstrating how our bodies tell our brains what emotions to feel.</li>
<li id="Bqa2bI">Stereotype threat: Minorities and maligned social groups donât perform as well on tests due to anxieties about becoming a stereotype themselves. </li>
<li id="i75kyS">Ego depletion: The idea that willpower is a finite mental resource.</li>
</ul>
<p id="KsruDx">Alas, the past few years<a href="http://www.vox.com/2016/3/14/11219446/psychology-replication-crisis"> have brought about a reckoning</a> for these ideas and social psychology as a whole. </p>
<p id="L7bU4Q">Many psychological theories have been debunked or diminished in rigorous replication attempts. Psychologists are now realizing it's <a href="https://www.vox.com/science-and-health/2017/7/31/16021654/p-values-statistical-significance-redefine-0005">more likely</a> that false positives will make it through to publication than inconclusive results. And theyâve realized that experimental methods commonly used just a few years ago arenât rigorous enough. For instance, it used to be commonplace for scientists to publish experiments that sampled about 50 undergraduate students. Today, scientists realize this <a href="https://www.vox.com/science-and-health/2017/7/31/16021654/p-values-statistical-significance-redefine-0005">is a recipe for false positives</a>, and strive for sample sizes in the hundreds and ideally from a more representative subject pool.  </p>
<p id="tKajYd">Nevertheless, in so many of these cases, scientists have moved on and corrected errors, and are still doing well-intentioned work to understand the heart of humanity. For instance, work on one of psychologyâs oldest fixations â dehumanization, the ability to see another as less than human â continues with methodological rigor, <a href="https://www.vox.com/science-and-health/2017/3/7/14456154/dehumanization-psychology-explained">helping us understand</a> the modern-day maltreatment of Muslims and immigrants in America.  </p>
<p id="06Yvsy">In some cases, time has shown that flawed original experiments offer worthwhile reexamination. The original Milgram experiment was flawed. But at least its study design â which brings in participants to administer shocks (not actually carried out) to punish others for failing at a memory test â is basically repeatable today with some ethical tweaks.</p>
<p id="TYA1u7"><a href="http://journals.sagepub.com/doi/10.1177/1948550617693060">And</a> it seems like Milgramâs conclusions may hold up: In a recent study, many people found demands from <a href="http://journals.sagepub.com/doi/10.1177/1948550617693060">an authority figure to be a compelling</a> reason to shock another. However, itâs possible, due to something known as the file-drawer effect, that failed replications of the Milgram experiment have not been published. Replication attempts at the Stanford prison study, on the other hand, <a href="http://www.bbcprisonstudy.org/pdfs/bjsp(2006)tyrannny.pdf">have been a mess</a>.</p>
<p id="dTlTu4">In science, too often, the first demonstration of an idea becomes the lasting one â in both pop culture and academia. But this isnât how science is supposed to work at all! </p>
<p id="dC0VT9">Science is a frustrating, iterative process. When we communicate it, we need to get beyond the idea that a single, stunning study ought to last the test of time. Scientists know this as well, but their institutions have often discouraged them from replicating old work, instead of the pursuit of new and exciting, attention-grabbing studies. (Journalists are <a href="https://www.vox.com/2016/7/14/12016710/science-challeges-research-funding-peer-review-process">part of the problem too</a>, imbuing small, insignificant studies with more importance and meaning than theyâre due.)  </p>
<p id="PylPjK">Thankfully, there are researchers thinking very hard, and very earnestly, on trying to make psychology a more replicable, robust science. Thereâs even a whole <a href="https://osf.io/jtcu9/">Society for the Improvement of Psychological Science</a> devoted to these issues.</p>
<p id="8z2Cpw">Follow-up results <a href="https://www.vox.com/2016/3/14/11219446/psychology-replication-crisis">tend to be less dramatic than original findings</a>, but they are more useful in helping discover the truth. And itâs not that the Stanford Prison Experiment has no place in a classroom. Itâs interesting as history. Psychologists like Zimbardo and Milgram were highly influenced by World War II. Their experiments were, in part, an attempt to figure out why ordinary people would fall for Nazism. Thatâs an important question, one that set the agenda for a huge amount of research in psychological science, and is still echoed in papers today. </p>
<h3 id="ZLgDN1">Textbooks need to catch up </h3>
<p id="3yADvM">Psychology has changed tremendously over the past few years. Many studies used to teach the next generation of psychologists have been intensely scrutinized, and found to be in error. But troublingly, <a href="http://nymag.com/scienceofus/2017/01/theres-a-problem-with-a-bunch-of-psychology-textbooks.html">the textbooks have not been updated accordingly</a>.</p>
<p id="WVNuea">Thatâs the conclusion of a <a href="http://christopherjferguson.com/Education%20or%20Indoctrination.pdf">2016 study</a> in <em>Current Psychology. â</em>By and large,â the study explains (emphasis mine):</p>
<blockquote><p id="PhzjQV">introductory textbooks have difficulty accurately portraying controversial topics with care or, in some cases, simply avoid covering them at all. ... <strong>readers of introductory textbooks may be unintentionally misinformed on these topics.</strong></p></blockquote>
<p id="f0osHA">The study authors â from Texas A&amp;M and Stetson universities â gathered a stack of 24 popular introductory psych textbooks and began looking for coverage of 12 contested ideas or myths in psychology.</p>
<p id="DtAEZl">The ideas â like stereotype threat, the <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1281386/">Mozart effect</a>, and whether thereâs a ânarcissism epidemicâ among millennials â have not necessarily been disproven. Nevertheless, there are credible and noteworthy studies that cast doubt on them. The list of ideas also included some urban legends â like the one about the brain only using 10 percent of its potential at any given time, and a <a href="https://www.washingtonpost.com/lifestyle/style/her-shocking-murder-became-the-stuff-of-legend-but-everyone-got-the-story-wrong/2016/06/29/544916d8-3952-11e6-9ccd-d6005beac8b3_story.html?utm_term=.e061b368fd71">debunked</a> story about how bystanders refused to help a woman named Kitty Genovese while she was being murdered.</p>
<p id="bXTNSJ">The researchers then rated the texts on how they handled these contested ideas. The results found a troubling amount of âbiasedâ coverage on many of the topic areas.</p>
  <figure>
  <span>
    
    <span data-original="https://cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png">
      
        <picture data-cid="site/picture_element-1702618019_4386_194722" data-cdata="{&quot;asset_id&quot;:7755711,&quot;ratio&quot;:&quot;*&quot;}">
  


  <source srcset="https://cdn.vox-cdn.com/thumbor/22IB92UP2uND8hHRTV_GBhSbSGE=/0x0:659x328/320x0/filters:focal(0x0:659x328):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 320w, https://cdn.vox-cdn.com/thumbor/C9GAApPC1ZgDubv2_GUXA7s6JPk=/0x0:659x328/520x0/filters:focal(0x0:659x328):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 520w, https://cdn.vox-cdn.com/thumbor/z2UFW7x1ysf-cAZChW_AL1CUXQ0=/0x0:659x328/720x0/filters:focal(0x0:659x328):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 720w, https://cdn.vox-cdn.com/thumbor/mWDpnqdNBy8uOPx-2HmXiyAA8J0=/0x0:659x328/920x0/filters:focal(0x0:659x328):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 920w, https://cdn.vox-cdn.com/thumbor/4RotdIzNHMM5MNJuHXAubqnymm4=/0x0:659x328/1120x0/filters:focal(0x0:659x328):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 1120w, https://cdn.vox-cdn.com/thumbor/PZcMbGJFzkkph_bfNCwG97ST4QE=/0x0:659x328/1320x0/filters:focal(0x0:659x328):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 1320w, https://cdn.vox-cdn.com/thumbor/oF5jyBY1ubtYBpbn7O3Zm-Qir4Q=/0x0:659x328/1520x0/filters:focal(0x0:659x328):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 1520w, https://cdn.vox-cdn.com/thumbor/NTNL1ARx6BTYYjiFQByeiJlBqxk=/0x0:659x328/1720x0/filters:focal(0x0:659x328):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 1720w, https://cdn.vox-cdn.com/thumbor/TewCtbhwv-xppMYjaa0jJAKJI1Q=/0x0:659x328/1920x0/filters:focal(0x0:659x328):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" type="image/webp">


<img srcset="https://cdn.vox-cdn.com/thumbor/gaOxUMCAQe1tzj8IyOgrCydCUfQ=/0x0:659x328/320x0/filters:focal(0x0:659x328):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 320w, https://cdn.vox-cdn.com/thumbor/dK2KIOdTfpjdv-pRa1k_A2RdiVg=/0x0:659x328/520x0/filters:focal(0x0:659x328):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 520w, https://cdn.vox-cdn.com/thumbor/cSBbMvTiefp4I0RHxtKB3d4FHgw=/0x0:659x328/720x0/filters:focal(0x0:659x328):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 720w, https://cdn.vox-cdn.com/thumbor/IetE0tKuo7y7PZw62gNeV9S4euY=/0x0:659x328/920x0/filters:focal(0x0:659x328):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 920w, https://cdn.vox-cdn.com/thumbor/Xo5_aVSE0424wnldKjzhgIqBFo4=/0x0:659x328/1120x0/filters:focal(0x0:659x328):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 1120w, https://cdn.vox-cdn.com/thumbor/vrVFMJYphi29bU4M5rwk7C-OYHo=/0x0:659x328/1320x0/filters:focal(0x0:659x328):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 1320w, https://cdn.vox-cdn.com/thumbor/xZCV2bbquJqbXxmWOKGp2Sht5po=/0x0:659x328/1520x0/filters:focal(0x0:659x328):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 1520w, https://cdn.vox-cdn.com/thumbor/EL_nKYoV_Tnu8odrGgN6kB8nIC0=/0x0:659x328/1720x0/filters:focal(0x0:659x328):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 1720w, https://cdn.vox-cdn.com/thumbor/A9ckVnlni_tmDj5UeqVsIPsMbwY=/0x0:659x328/1920x0/filters:focal(0x0:659x328):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png 1920w" sizes="(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw" alt="" loading="lazy" data-upload-width="659" width="659" height="328" src="https://cdn.vox-cdn.com/thumbor/d44-TJwUXTNeYIzIyBC4ZNyNP1o=/0x0:659x328/1200x0/filters:focal(0x0:659x328):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/7755711/Screen_Shot_2017_01_05_at_11.43.36_AM.png">

</picture>

      
    </span>
    
  </span>
  
</figure>

<p id="IGYwOa">But why wouldnât these textbooks include more doubt? Replication, after all, is a cornerstone of any science. </p>
<p id="chk6i9">One idea is that textbooks, in the pursuit of covering a wide range of topics, arenât meant to be authoritative on these individual controversies. But something else might be going on. The study authors suggest these textbook authors are trying to âoversellâ psychology as a discipline, to get more undergraduates to study it full time. (I have to admit that it might have worked on me back when I was an undeclared undergraduate.) </p>
<p id="mAobmd">There are some caveats to mention with the study: One is that the 12 topics the authors chose to scrutinize are completely arbitrary. âAnd many other potential issues were left out of our analysis,â they note. Also, the textbooks included were printed in the spring of 2012; itâs possible they have been updated since then. </p>
<p id="gWz0Tl">Recently, I asked <a href="https://twitter.com/B_resnick/status/1006197663908487168">on Twitter</a> how intro psychology professors deal with inconsistencies in their textbooks. Their answers were simple. Some say they decided to get rid of textbooks (which save students money) and focus on teaching individual articles. Others have another solution thatâs just as simple: âYou point out the wrong, outdated, and less-than-replicable sections,â <a href="https://twitter.com/lakens">DaniÃ«l Lakens</a>, a professor at Eindhoven University of Technology in the Netherlands, said. He offered a useful example of one of the slides he uses in class.</p>

<p id="TOyfMv">Anecdotally, Illinois State University professor Joe Hilgard said he thinks his students appreciate âthe âcutting-edgeâ feeling from knowing something that the textbook didnât.â (Also, who really, earnestly reads the textbook in an introductory college course?) </p>
<div id="IJeBSP">
<blockquote data-conversation="none">
<p lang="en" dir="ltr">I tried to frame things as four steps:<br>1) here's the big idea <br>2) here's the famous study and how it illustrates<br>3) here are the damning criticisms<br>4) here's what you can do as scholars to figure out what you believe / make a contribution to the literature</p>â Joe Hilgard, that psych prof we all know and love. (@JoeHilgard) <a href="https://twitter.com/JoeHilgard/status/1006199028168712192?ref_src=twsrc%5Etfw">June 11, 2018</a>
</blockquote>

</div>
<p id="3QgI6I">And it seems this type of teaching is catching on. A (not perfectly representative) <a href="https://mfr.osf.io/render?url=https://osf.io/va7jg/?action=download%26mode=render">recent survey of</a> 262 psychology professors found more than half said replication issues <a href="https://mfr.osf.io/render?url=https://osf.io/va7jg/?action=download%26mode=render">impacted their teaching</a>. On the other hand, 40 percent said they hadnât. So whether students are exposed to the recent reckoning is all up to the teachers they have.  </p>
<p id="lpA4to">If itâs true that textbooks and teachers are still neglecting to cover replication issues, then Iâd argue they are actually underselling the science. To teach the âreplication crisisâ is to teach students that science strives to be self-correcting. It would instill in them the value that science ought to be reproducible.</p>
<p id="xCWDnp">Understanding human behavior is a hard problem. Finding out the answers shouldnât be easy. If anything, that should give students more motivation to become the generation of scientists who get it right.</p>
<p id="osnF3b">âTextbooks may be missing an opportunity for myth busting,â the <em>Current Psychology</em> studyâs authors write. Thatâs, ideally, what young scientist ought to learn: how to bust myths and find the truth. </p>
<h3 id="bqLVL4">Further reading: Psychologyâs âreplication crisisâ </h3>
<ul>
<li id="OsOr3Q">
<a href="https://www.vox.com/2016/3/14/11219446/psychology-replication-crisis">The replication crisis, explained. </a>Psychology is currently undergoing a painful period of introspection. It will emerge stronger than before.</li>
<li id="TK1JOq">The âmarshmallow testâ said patience was a key to success.<a href="https://www.vox.com/science-and-health/2018/6/6/17413000/marshmallow-test-replication-mischel-psychology"> A new replication tells us sâmore.</a>
</li>
<li id="eNgm9z">The 7 biggest problems facing science, <a href="https://www.vox.com/2016/7/14/12016710/science-challeges-research-funding-peer-review-process">according to 270 scientists</a>
</li>
<li id="CQH98V">What a nerdy debate about p-values shows about science â <a href="https://www.vox.com/science-and-health/2017/7/31/16021654/p-values-statistical-significance-redefine-0005">and how to fix it</a>
</li>
<li id="4jKvOz">Science is often flawed. <a href="https://www.vox.com/2015/5/13/8591837/how-science-is-broken">Itâs time we embraced that.</a>
</li>
</ul>

  <div data-cid="site/article_footer-1702618019_247_194723" data-cdata="{&quot;base_type&quot;:&quot;Entry&quot;,&quot;id&quot;:17213159,&quot;timestamp&quot;:1528914601,&quot;published_timestamp&quot;:1528914601,&quot;show_published_and_updated_timestamps&quot;:false,&quot;title&quot;:&quot;The Stanford Prison Experiment was massively influential. We just learned it was a fraud.&quot;,&quot;type&quot;:&quot;Article&quot;,&quot;url&quot;:&quot;https://www.vox.com/2018/6/13/17449118/stanford-prison-experiment-fraud-psychology-replication&quot;,&quot;entry_layout&quot;:{&quot;key&quot;:&quot;unison_standard&quot;,&quot;layout&quot;:&quot;unison_main&quot;,&quot;template&quot;:&quot;standard&quot;},&quot;additional_byline&quot;:null,&quot;authors&quot;:[{&quot;id&quot;:3246711,&quot;name&quot;:&quot;Brian Resnick&quot;,&quot;url&quot;:&quot;https://www.vox.com/authors/brian-resnick&quot;,&quot;twitter_handle&quot;:&quot;B_resnick&quot;,&quot;profile_image_url&quot;:&quot;https://cdn.vox-cdn.com/thumbor/2RI8F6UrxnVcWtLHlf8I-YHLgZc=/512x512/cdn.vox-cdn.com/author_profile_images/14855/me.0.png&quot;,&quot;title&quot;:&quot;&quot;,&quot;email&quot;:&quot;brian@vox.com&quot;,&quot;short_author_bio&quot;:&quot;is Voxâs science and health editor, and is the co-creator of Unexplainable, Vox's podcast about unanswered questions in science. Previously, Brian was a reporter at Vox and at National Journal.&quot;}],&quot;byline_enabled&quot;:true,&quot;byline_credit_text&quot;:&quot;By&quot;,&quot;byline_serial_comma_enabled&quot;:true,&quot;comment_count&quot;:0,&quot;comments_enabled&quot;:false,&quot;legacy_comments_enabled&quot;:false,&quot;coral_comments_enabled&quot;:false,&quot;coral_comment_counts_enabled&quot;:false,&quot;commerce_disclosure&quot;:null,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;cross_community&quot;:false,&quot;internal_groups&quot;:[{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:42340,&quot;timestamp&quot;:1702590230,&quot;title&quot;:&quot;The Latest&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;&quot;,&quot;slug&quot;:&quot;latest-news&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:23070,&quot;always_show&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;}],&quot;image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/60051555/GettyImages_2020760.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;Rorschach tests are another old mainstay of psychological science that donât<a href=\&quot;http://moemesto.ru/rorschach_club/file/895917/download/56-3-2000-5%252520Rorschahiana4.pdf\&quot; target=\&quot;_blank\&quot;> actually reveal much about a person. </a>&quot;,&quot;credit&quot;:&quot;Adapted from <a href=\&quot;https://www.gettyimages.com/search/photographer?family=editorial&amp;amp;photographer=Lambert\&quot; target=\&quot;_blank\&quot;>Lambert</a>/Getty Creative Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:1324,&quot;top_left_y&quot;:941,&quot;bottom_right_x&quot;:1828,&quot;bottom_right_y&quot;:1445},&quot;bounds&quot;:[0,0,3152,2385],&quot;uploaded_size&quot;:{&quot;width&quot;:3152,&quot;height&quot;:2385},&quot;focal_point&quot;:null,&quot;image_id&quot;:60051555,&quot;alt_text&quot;:&quot;Rorschach test&amp;nbsp;&quot;},&quot;hub_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/60051555/GettyImages_2020760.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;Rorschach tests are another old mainstay of psychological science that donât<a href=\&quot;http://moemesto.ru/rorschach_club/file/895917/download/56-3-2000-5%252520Rorschahiana4.pdf\&quot; target=\&quot;_blank\&quot;> actually reveal much about a person. </a>&quot;,&quot;credit&quot;:&quot;Adapted from <a href=\&quot;https://www.gettyimages.com/search/photographer?family=editorial&amp;amp;photographer=Lambert\&quot; target=\&quot;_blank\&quot;>Lambert</a>/Getty Creative Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:1324,&quot;top_left_y&quot;:941,&quot;bottom_right_x&quot;:1828,&quot;bottom_right_y&quot;:1445},&quot;bounds&quot;:[0,0,3152,2385],&quot;uploaded_size&quot;:{&quot;width&quot;:3152,&quot;height&quot;:2385},&quot;focal_point&quot;:null,&quot;image_id&quot;:60051555,&quot;alt_text&quot;:&quot;Rorschach test&amp;nbsp;&quot;},&quot;lede_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;Rorschach tests are another old mainstay of psychological science that donât<a href=\&quot;http://moemesto.ru/rorschach_club/file/895917/download/56-3-2000-5%252520Rorschahiana4.pdf\&quot; target=\&quot;_blank\&quot;> actually reveal much about a person. </a>&quot;,&quot;credit&quot;:&quot;Adapted from <a href=\&quot;https://www.gettyimages.com/search/photographer?family=editorial&amp;amp;photographer=Lambert\&quot; target=\&quot;_blank\&quot;>Lambert</a>/Getty Creative Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:1324,&quot;top_left_y&quot;:941,&quot;bottom_right_x&quot;:1828,&quot;bottom_right_y&quot;:1445},&quot;bounds&quot;:[0,0,3152,2385],&quot;uploaded_size&quot;:{&quot;width&quot;:3152,&quot;height&quot;:2385},&quot;focal_point&quot;:null,&quot;image_id&quot;:60051557,&quot;alt_text&quot;:&quot;Rorschach test&amp;nbsp;&quot;},&quot;group_cover_image&quot;:null,&quot;picture_standard_lead_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:&quot;Rorschach tests are another old mainstay of psychological science that donât<a href=\&quot;http://moemesto.ru/rorschach_club/file/895917/download/56-3-2000-5%252520Rorschahiana4.pdf\&quot; target=\&quot;_blank\&quot;> actually reveal much about a person. </a>&quot;,&quot;credit&quot;:&quot;Adapted from <a href=\&quot;https://www.gettyimages.com/search/photographer?family=editorial&amp;amp;photographer=Lambert\&quot; target=\&quot;_blank\&quot;>Lambert</a>/Getty Creative Images&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:1324,&quot;top_left_y&quot;:941,&quot;bottom_right_x&quot;:1828,&quot;bottom_right_y&quot;:1445},&quot;bounds&quot;:[0,0,3152,2385],&quot;uploaded_size&quot;:{&quot;width&quot;:3152,&quot;height&quot;:2385},&quot;focal_point&quot;:null,&quot;image_id&quot;:60051557,&quot;alt_text&quot;:&quot;Rorschach test&amp;nbsp;&quot;,&quot;picture_element&quot;:{&quot;loading&quot;:&quot;eager&quot;,&quot;html&quot;:{},&quot;alt&quot;:&quot;Rorschach test&amp;nbsp;&quot;,&quot;default&quot;:{&quot;srcset&quot;:&quot;https://cdn.vox-cdn.com/thumbor/ygs06BkH-PtXfEZKrI3Vnb8Mxhw=/0x0:3152x2385/320x240/filters:focal(1324x941:1828x1445)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg 320w, https://cdn.vox-cdn.com/thumbor/mSMclNeJBOQR26DicD7MnWmHIJM=/0x0:3152x2385/620x465/filters:focal(1324x941:1828x1445)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg 620w, https://cdn.vox-cdn.com/thumbor/_J5-GxCpJ9oPzHbfsT-4NalWGhY=/0x0:3152x2385/920x690/filters:focal(1324x941:1828x1445)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg 920w, https://cdn.vox-cdn.com/thumbor/hI96TrovXGPMk3j62POOoUGAcc8=/0x0:3152x2385/1220x915/filters:focal(1324x941:1828x1445)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg 1220w, https://cdn.vox-cdn.com/thumbor/OGg0fNJHVrgth0Ykw5KP-5Xxfyw=/0x0:3152x2385/1520x1140/filters:focal(1324x941:1828x1445)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg 1520w&quot;,&quot;webp_srcset&quot;:&quot;https://cdn.vox-cdn.com/thumbor/m3TLEE773U1JSRvjN4_dW8KXwQ4=/0x0:3152x2385/320x240/filters:focal(1324x941:1828x1445):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg 320w, https://cdn.vox-cdn.com/thumbor/KToq0IzmS53xV59iHiMTJ-_I2nY=/0x0:3152x2385/620x465/filters:focal(1324x941:1828x1445):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg 620w, https://cdn.vox-cdn.com/thumbor/hHXY4ARoDa7rji_PgSR246ayoZg=/0x0:3152x2385/920x690/filters:focal(1324x941:1828x1445):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg 920w, https://cdn.vox-cdn.com/thumbor/3ebasHvwCRUBu-Qgy2OOX0uBe2I=/0x0:3152x2385/1220x915/filters:focal(1324x941:1828x1445):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg 1220w, https://cdn.vox-cdn.com/thumbor/QBmXdYMb2ciWIrgFc36cHyJKpxE=/0x0:3152x2385/1520x1140/filters:focal(1324x941:1828x1445):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg 1520w&quot;,&quot;media&quot;:null,&quot;sizes&quot;:&quot;(min-width: 809px) 485px, (min-width: 600px) 60vw, 100vw&quot;,&quot;fallback&quot;:&quot;https://cdn.vox-cdn.com/thumbor/b_AdjXVeuKlUsIUqGT39gIZvgXc=/0x0:3152x2385/1200x900/filters:focal(1324x941:1828x1445)/cdn.vox-cdn.com/uploads/chorus_image/image/60051557/GettyImages_2020760.0.jpg&quot;},&quot;art_directed&quot;:[]}},&quot;image_is_placeholder&quot;:false,&quot;image_is_hidden&quot;:false,&quot;network&quot;:&quot;vox&quot;,&quot;omits_labels&quot;:false,&quot;optimizable&quot;:false,&quot;promo_headline&quot;:&quot;The Stanford Prison Experiment was massively influential. We just learned it was a fraud.&quot;,&quot;recommended_count&quot;:0,&quot;recs_enabled&quot;:false,&quot;slug&quot;:&quot;2018/6/13/17449118/stanford-prison-experiment-fraud-psychology-replication&quot;,&quot;dek&quot;:&quot;The most famous psychological studies are often wrong, fraudulent, or outdated. Textbooks need to catch up.&amp;nbsp;&quot;,&quot;homepage_title&quot;:&quot;The Stanford Prison Experiment was massively influential. We just learned it was a fraud.&quot;,&quot;homepage_description&quot;:&quot;The most famous psychological studies are often wrong, fraudulent, or outdated. Textbooks need to catch up.&quot;,&quot;show_homepage_description&quot;:false,&quot;title_display&quot;:&quot;The Stanford Prison Experiment was massively influential. We just learned it was a fraud.&quot;,&quot;pull_quote&quot;:null,&quot;voxcreative&quot;:false,&quot;show_entry_time&quot;:true,&quot;show_dates&quot;:true,&quot;paywalled_content&quot;:false,&quot;paywalled_content_box_logo_url&quot;:&quot;&quot;,&quot;paywalled_content_page_logo_url&quot;:&quot;&quot;,&quot;paywalled_content_main_url&quot;:&quot;&quot;,&quot;article_footer_body&quot;:&quot;Readers rely on Vox for clear, nuanced coverage that not only illuminates the issues, but poses solutions, too. And we rely on help from our readers: Advertising and grants cover the majority of our costs, but we count on contributions to help us close the gaps in our budget. In fact, weâre looking to reach 95,000 individual contributions before the end of the year. <a href=\&quot;http://vox.com/pages/support-now?itm_campaign=eoy-2023&amp;itm_medium=site&amp;itm_source=footer\r\n\&quot;>Will you make the next contribution right now?</a> Our average gift is just $20 â and it goes a long way in helping us keep our work free. Vox is here to help everyone understand whatâs shaping the world â not just the people who can afford to pay for a subscription. We believe thatâs an important part of building a more equal society. <a href=\&quot;http://vox.com/pages/support-now?itm_campaign=eoy-2023&amp;itm_medium=site&amp;itm_source=footer\r\n\&quot;>Join that mission by making a contribution today.</a> \r\n&quot;,&quot;article_footer_header&quot;:&quot;<a href=\&quot;http://vox.com/pages/support-now?itm_campaign=eoy-2023&amp;itm_medium=site&amp;itm_source=footer\r\n\&quot;>Contributions are a key part of the future of Vox</a>&quot;,&quot;use_article_footer&quot;:true,&quot;article_footer_cta_annual_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 1,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 99546\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 100,\r\n      \&quot;plan_id\&quot;: 99547\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 150,\r\n      \&quot;plan_id\&quot;: 99548\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 200,\r\n      \&quot;plan_id\&quot;: 99549\r\n    }\r\n  ]\r\n}&quot;,&quot;article_footer_cta_button_annual_copy&quot;:&quot;year&quot;,&quot;article_footer_cta_button_copy&quot;:&quot;Yes, I'll give&quot;,&quot;article_footer_cta_button_monthly_copy&quot;:&quot;month&quot;,&quot;article_footer_cta_default_frequency&quot;:&quot;monthly&quot;,&quot;article_footer_cta_monthly_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 0,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 5,\r\n      \&quot;plan_id\&quot;: 99543\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 10,\r\n      \&quot;plan_id\&quot;: 99544\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 25,\r\n      \&quot;plan_id\&quot;: 99545\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 46947\r\n    }\r\n  ]\r\n}&quot;,&quot;article_footer_cta_once_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 0,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 20,\r\n      \&quot;plan_id\&quot;: 69278\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 48880\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 100,\r\n      \&quot;plan_id\&quot;: 46607\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 250,\r\n      \&quot;plan_id\&quot;: 46946\r\n    }\r\n  ]\r\n}&quot;,&quot;use_article_footer_cta_read_counter&quot;:true,&quot;use_article_footer_cta&quot;:true,&quot;groups&quot;:[{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:30772,&quot;timestamp&quot;:1702555472,&quot;title&quot;:&quot;Science&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/science&quot;,&quot;slug&quot;:&quot;science&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:5751,&quot;always_show&quot;:false,&quot;description&quot;:&quot;News and updates from the science team. Topics include genetics, infectious disease, psychology, and more.&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:true},{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:24365,&quot;timestamp&quot;:1702385104,&quot;title&quot;:&quot;Explainers&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/explainers&quot;,&quot;slug&quot;:&quot;explainers&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:5143,&quot;always_show&quot;:false,&quot;description&quot;:&quot;We live in a world of too much information and too little context. Too much noise and too little insight. That's where Vox's explainers come in.&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false},{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:65787,&quot;timestamp&quot;:1701432004,&quot;title&quot;:&quot;Psychology&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/psychology&quot;,&quot;slug&quot;:&quot;psychology&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:134,&quot;always_show&quot;:false,&quot;description&quot;:&quot;Human behavior is fascinating â and we still have a lot to learn. Keep up with news and updates from the field of psychology. &quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false},{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:112369,&quot;timestamp&quot;:1702565101,&quot;title&quot;:&quot;Health&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/health&quot;,&quot;slug&quot;:&quot;health&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:622,&quot;always_show&quot;:false,&quot;description&quot;:&quot;Vox's coverage of all things health, including personal health, public health, mental health, and more. &quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false}],&quot;featured_placeable&quot;:false,&quot;video_placeable&quot;:false,&quot;disclaimer&quot;:null,&quot;volume_placement&quot;:&quot;lede&quot;,&quot;video_autoplay&quot;:false,&quot;youtube_url&quot;:&quot;http://bit.ly/voxyoutube&quot;,&quot;facebook_video_url&quot;:&quot;&quot;,&quot;play_in_modal&quot;:true,&quot;user_preferences_for_privacy_enabled&quot;:false,&quot;show_branded_logos&quot;:true}">

  <div>
    
      
    

    
      <p><strong><a href="http://vox.com/pages/support-now?itm_campaign=eoy-2023&amp;itm_medium=site&amp;itm_source=footer%0D%0A">Contributions are a key part of the future of Vox</a></strong></p>
    

    <p>
      Readers rely on Vox for clear, nuanced coverage that not only illuminates the issues, but poses solutions, too. And we rely on help from our readers: Advertising and grants cover the majority of our costs, but we count on contributions to help us close the gaps in our budget. In fact, weâre looking to reach 95,000 individual contributions before the end of the year. <a href="http://vox.com/pages/support-now?itm_campaign=eoy-2023&amp;itm_medium=site&amp;itm_source=footer%0D%0A">Will you make the next contribution right now?</a> Our average gift is just $20 â and it goes a long way in helping us keep our work free. Vox is here to help everyone understand whatâs shaping the world â not just the people who can afford to pay for a subscription. We believe thatâs an important part of building a more equal society. <a href="http://vox.com/pages/support-now?itm_campaign=eoy-2023&amp;itm_medium=site&amp;itm_source=footer%0D%0A">Join that mission by making a contribution today.</a> 

    </p>
  </div> <!-- end of .left-column -->

  <div>
       <!-- end of .contribute--frequency-container -->

      <div>
        <p><label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$5</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$10</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$25</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$50</span><span>/month</span>
                </p>
              </label>
            

            <label tabindex="0">
              
              <span>Other</span>
            </label>
          </p>
        </div>

        

        <a href="https://vox.memberful.com/checkout?plan=" id="contribute--submit">
          <p>
            Yes, I'll give $5<span>/month</span>
          </p>
        </a>

        <p>
          Yes, I'll give $5<span>/month</span>
        </p>

        <div>
            <p>
              <span>
                We accept credit card, Apple Pay, and
              </span>
              <span>
                Google Pay. You can also contribute via
              </span>
            </p>
            <p><a href="https://www.paypal.com/donate/?hosted_button_id=VSP4PYJX98SHL" target="_blank">
              <img src="https://cdn.vox-cdn.com/uploads/chorus_asset/file/22734206/paypal_logo.png" alt="" width="136" height="42">
            </a>
          </p></div>

      </div> <!-- end of .cta-container -->
  </div> <!-- end of .right-column -->

 <!-- end of .c-article-footer-cta -->

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Airdraw (250 pts)]]></title>
            <link>https://www.airdraw.io/</link>
            <guid>38647938</guid>
            <pubDate>Thu, 14 Dec 2023 22:02:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.airdraw.io/">https://www.airdraw.io/</a>, See on <a href="https://news.ycombinator.com/item?id=38647938">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Mitchell reflects as he departs HashiCorp (655 pts)]]></title>
            <link>https://www.hashicorp.com/blog/mitchell-reflects-as-he-departs-hashicorp</link>
            <guid>38647484</guid>
            <pubDate>Thu, 14 Dec 2023 21:27:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.hashicorp.com/blog/mitchell-reflects-as-he-departs-hashicorp">https://www.hashicorp.com/blog/mitchell-reflects-as-he-departs-hashicorp</a>, See on <a href="https://news.ycombinator.com/item?id=38647484">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><section><p><em>Earlier this week, I sent this note to HashiCorp employees and am posting it here to let the entire HashiCorp community know about my plans:</em></p>
<p>I have some bittersweet news to share with you all today: I've decided to move on from HashiCorp, and I'll soon no longer be an employee with the company. I recently celebrated 11 years since starting HashiCorp, and as I reflect back on the last decade I couldn't have asked for a better way to spend that part of my life.</p>
<p>My departure from HashiCorp is something Iâve been thinking about and planning for a long time. Ever since founding HashiCorp, I've felt it's important to build a company where I'm not required for day-to-day operations and where other leaders can carry the torch over time. I have been very intentional about this as time went on: stepping down from being CEO in 2016, iterating over time on a culture of leadership autonomy that didn't require my involvement to make decisions, and finally <a href="https://www.hashicorp.com/blog/mitchell-s-new-role-at-hashicorp">departing the leadership team and board of directors in 2021</a>. Since then, I've had the pleasure of working where Iâm happiest â as a full-time, hands-on engineer.</p>
<p>My passion as an engineer reaches beyond infrastructure and I always knew that at some point â when the company and I were ready â I'd move on and take on new, different challenges. My family recently welcomed our first child, and while reflecting during my time off I felt now was a fitting time to complete this transition. The world of cloud automation and infrastructure tooling is still ripe with opportunities and growth, but after nearly 15 years of working exclusively on tooling in this space, I'm ready to dabble in new areas.</p>
<p>While my departure from HashiCorp is exactly what I've planned for, it's still a poignant moment. Nearly my entire adult life has revolved around the company. Many of my most formative memories happened in the context of this company. There are far too many to recount here, but I'd like to highlight just a few.</p>
<p>Years before we started HashiCorp, Armon [Dadgar, HashiCorp Co-Founder and CTO] and I would talk about cloud, automation, and distributed systems incessantly. We were teenagers, and we'd playfully â not seriously â say things like, "What if one day the biggest companies used our software?" At one point, though, we took the first step and made some of our ideas into actual code. Next thing we knew, we had thousands of users. So, we took another step and started a company. A little later we took the next step and decided to raise funding. And thatâs how HashiCorp became what it is today: we took many small little steps like this until we found that that playful, teenage idealism had become reality.</p></section><div><p><img alt="Mitchell and Armon in 2013" loading="lazy" width="3264" height="1736" decoding="async" data-nimg="1" srcset="https://www.hashicorp.com/_next/image?url=https%3A%2F%2Fwww.datocms-assets.com%2F2885%2F1671228946-2013-mitchell-armon.jpg&amp;w=3840&amp;q=75 1x" src="https://www.hashicorp.com/_next/image?url=https%3A%2F%2Fwww.datocms-assets.com%2F2885%2F1671228946-2013-mitchell-armon.jpg&amp;w=3840&amp;q=75"></p><p>Mitchell and Armon in 2013.</p></div><section><p>As we got going, I felt like some âfirstsâ were particularly significant. The <a href="https://www.hashicorp.com/blog/hashiconf-2015-wrap-up">first HashiConf in 2015</a> will always be a special memory. It was the first time that the digital world really firmly crossed over into the physical world for me, and it was hard to believe that any of it was real. I knew that our download numbers were high and I knew I interacted daily with community members online, but it's something entirely different to see hundreds of people willingly choose to physically show up. I felt incredibly proud, but it was also one of the earliest moments that I felt a real weight of responsibility. I felt the internal struggle of wanting to build, but also needing to shepherd this company Armon and I were creating. I'm so thankful to all of those early adopters and employees who joined us for that first event.</p></section><div><p><img alt="First HashiConf" loading="lazy" width="1920" height="1281" decoding="async" data-nimg="1" srcset="https://www.hashicorp.com/_next/image?url=https%3A%2F%2Fwww.datocms-assets.com%2F2885%2F1702507478-first-hashiconf-2015.jpg&amp;w=1920&amp;q=75 1x, https://www.hashicorp.com/_next/image?url=https%3A%2F%2Fwww.datocms-assets.com%2F2885%2F1702507478-first-hashiconf-2015.jpg&amp;w=3840&amp;q=75 2x" src="https://www.hashicorp.com/_next/image?url=https%3A%2F%2Fwww.datocms-assets.com%2F2885%2F1702507478-first-hashiconf-2015.jpg&amp;w=3840&amp;q=75"></p><p>The audience at HashiConf 2015.</p></div><section><p>Just a few short years later, our first internal, full-company offsite was the next major "whoa" experience for me. We had more people present than at that first HashiConf! I started this company with Armon, focused on my excitement around the technology, but moments like this taught me how important the people are, too. The people and our shared experiences are what I now look back on most fondly.</p>
<p>There are many more similarly impactful moments throughout my history with HashiCorp, and I'm so grateful for all of them. Although it may sometimes seem like some events are bigger than others, I value each experience (even the tough ones) as a necessary step toward achieving each individual milestone.</p>
<p>I've worked alongside Armon for almost 15 years (since before HashiCorp!), and worked with Dave [McJannet, HashiCorp CEO] for over 7. We led the company together up until I stepped off the leadership team in 2021. Beyond being coworkers, weâve grown to be close friends. I continue to trust their leadership and will miss working with them dearly.</p></section><div><p><img alt="Mitchell, Dave and Armon" loading="lazy" width="1832" height="1218" decoding="async" data-nimg="1" srcset="https://www.hashicorp.com/_next/image?url=https%3A%2F%2Fwww.datocms-assets.com%2F2885%2F1702495672-screenshot-2023-12-13-at-2-26-55-pm.png&amp;w=1920&amp;q=75 1x, https://www.hashicorp.com/_next/image?url=https%3A%2F%2Fwww.datocms-assets.com%2F2885%2F1702495672-screenshot-2023-12-13-at-2-26-55-pm.png&amp;w=3840&amp;q=75 2x" src="https://www.hashicorp.com/_next/image?url=https%3A%2F%2Fwww.datocms-assets.com%2F2885%2F1702495672-screenshot-2023-12-13-at-2-26-55-pm.png&amp;w=3840&amp;q=75"></p><p>Armon, Mitchell, and Dave.</p></div><section><p>The controversial worldviews such as <em>multi-cloud</em> that we founded this company on are now mainstream and <a href="https://www.hashicorp.com/state-of-the-cloud/2021">broadly accepted</a>. The software that I helped start is used industry-wide from hobbyists to professionals at the world's largest companies. And, most recently, the <a href="https://solutionshub.epam.com/blog/post/programming-language-popularity-on-github">GitHub Octoverse report</a> found that HashiCorp Configuration Language (HCL) has once again emerged as one of the top languages used in open source projects. These are just some of the examples that show the impact, growth, and promising future HashiCorp continues to have in the industry. This is all beyond what I could've hoped for, and I'm leaving proud of the small role I played in making this happen.</p>
<p>As I said earlier, nearly my entire adult life has revolved around HashiCorp. This company has made such an impact on not just my life, but on the lives of so many, including our passionate community, our valued customers, our many close ecosystem partners, and our amazing employees. Thanks to all of you for your energy and your trust. Finally, my heartfelt wishes go out to the entire company. I will be cheering you on, grateful to have contributed to the journey of shaping HashiCorp, and excited to see what you will do next.</p>
<p>All the best.</p></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Journal of Universal Rejection (114 pts)]]></title>
            <link>https://universalrejection.org/</link>
            <guid>38647101</guid>
            <pubDate>Thu, 14 Dec 2023 20:54:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://universalrejection.org/">https://universalrejection.org/</a>, See on <a href="https://news.ycombinator.com/item?id=38647101">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="wholepage">
<p><img src="https://universalrejection.org/NewBanner.png"></p>

<hr color="blue"><big><a href="#about">About the Journal</a> | <a href="#editorialboard">Editorial Board</a> | <a href="#instructions">Instructions for Authors</a> | <a href="#subscriptions">Subscriptions</a> | <a href="#archives">Archives</a> | <a href="http://www.universalrejection.org/conference/">Conference</a></big>

<hr color="blue">

<!--<P> <font color="#ED2939"><BIG><B>
SPECIAL ANNOUNCEMENT</B>:</font> <BR>The Journal of Universal Rejection is pleased to announce the <a href="http://www.universalrejection.org/conference/"> Conference of Universal Rejection</a>.
</BIG></P>-->

<big> <b>About the Journal</b><a name="about"></a> </big>

<p><big>The founding principle of the Journal of Universal Rejection (JofUR) is rejection. Universal rejection. That is to say, all submissions, regardless of quality, will be rejected. Despite that apparent drawback, here are a number of reasons you may choose to submit to the JofUR:</big></p>
<big> </big>

<blockquote>
<ul>
	<li><big>You can send your manuscript here without suffering waves of anxiety regarding the eventual fate of your submission. You know with 100% certainty that it will not be accepted for publication.</big></li>
	<li><big>There are no page-fees.</big></li>
	<li><big>You may claim to have submitted to the most prestigious journal (judged by acceptance rate).</big></li>
	<li><big>The JofUR is one-of-a-kind. Merely submitting work to it may be considered a badge of honor.</big></li>
	<li><big>You retain complete rights to your work, and are free to resubmit to other journals <i>even before our review process is complete.</i></big></li>
	<li><big>Decisions are often (though not always) rendered within hours of submission.</big></li>
</ul>
</blockquote>
<big> <b>Editorial Board</b><a name="editorialboard"></a> </big>

<p><big><b>Founder and Editor-in-Chief</b><br>
<a href="http://www.universalrejection.org/cje.html">Caleb Emmons</a>, (Mathematics and Poetry).<p>

<b>Associate Editors</b><br>
Michael Baranowski, Northern Kentucky University, USA (Political Science)<br>
Sarah Bracking, University of Manchester, UK (Political Economy)<br>
Lois A. Butcher-Poffley, Temple University, USA (Kinesiology and Sport Psychology)<br>
Michael M. Chemers, Carnegie Mellon University, USA (Theatre and Performance Studies)<br>
Eric Chicken, Florida State University, USA (Statistics)<br>
David Deane, Atlantic School of Theology, Canada (Theology and Religious Studies)<br>
Ramon P. DeGennaro, University of Tennessee at Knoxville, USA (Finance)<br>
Matt J. Duffy, Kennesaw State University, USA (Communications)<br>
Carsten Elbro, University of Copenhagen, Denmark (Linguistics)<br>
David J. Elton, Auburn University, USA (Civil Engineering)<br>
Jason Eriksen, University of Houston, USA (Pharmacology and Pharmacy)<br>
Silvia Florea, Lucian Blaga University of Sibiu, Romania (British and American Studies)<br>
Omar Ha-Redeye, Ryerson University, Canada (Law)<br>
Hanjo Hamann, Max Planck Institute Bonn, Germany (Jurisprudence)<br>
Louise Heslop, Carleton University, Canada (Business)<br>
Jeffrey Hoch, University of Toronto, Canada (Health Policy, Management and Evaluation)<br>
Manfred J. Holler, UniversitÃ¤t Hamburg, Germany (Economics)<br>
Jeffrey Lacasse, Florida State University, USA (Social Work)<br>
Charlotte P. Lee, University of Washington, USA (Human Centered Design &amp; Engineering)<br>
Samuel R. Lucas, University of California-Berkeley, USA (Sociology)<br>
Sonia Lyris, (Short Fiction)<br>
Karl Maton, University of Sydney, Australia (Education)<br>
Alexander Maxwell, Victoria University of Wellington, New Zealand (History)<br>
Luca Moretti, University of Aberdeen, Scotland, UK (Philosophy)<br>
Axel H. E. MÃ¼ller, Johannes Gutenberg University Mainz (Chemistry)<br>
Judith Ogilvie, Saint Louis University, USA (Biology)<br>
Karl M. Petruso, University of Texas at Arlington, USA (Archaeology)<br>
Maurice Preter, Columbia University, USA (Clinical Psychiatry)<br>
CÃ©sar A. RodrÃ­guez-Rosari, UniversitÃ¤t Bremen, Germany (Physics)<br>
David W. Rosenthal, Miami University, USA (Marketing)<br>
Daniele Scarpi, University of Bologna, Italy (Geology)<br>
Charles M. Shub, University of Colorado at Colorado Springs, USA (Computer Science)<br>
Christophe Tzourio, University of Bordeaux 2, France (Neurology and Epidemiology)<br>
Kip Williams, Purdue University, USA (Psychology)<br>
Ghil'ad Zuckermann, University of Adelaide, Australia (Endangered Languages, Jewish Studies)  </p></big></p>
<big> <b>Instructions for Authors</b><a name="instructions"></a> </big>

<p><big>The JofUR solicits any and all types of manuscript: poetry, prose, visual art, and research articles. You name it, we take it, and reject it. Your manuscript may be formatted however you wish. Frankly, we don't care.</big></p>
<big> </big>

<p><big>After submitting your work, the decision process varies. Often the Editor-in-Chief will reject your work out-of-hand, without even reading it! However, he might read it. Probably he'll skim. At other times your manuscript may be sent to anonymous referees. Unless they are the Editor-in-Chief's wife or graduate school buddies, it is unlikely that the referees will even understand what is going on. Rejection will follow as swiftly as a bird dropping from a great height after being struck by a stone. At other times, rejection may languish like your email buried in the Editor-in-Chief's inbox. But it will come, swift or slow, as surely as death. Rejection.</big></p>
<big> </big>

<p><big>Submissions should be emailed to <a href="mailto:j.universal.rejection@gmail.com">j.universal.rejection@gmail.com</a>. Small files only, please. Why not just send the first couple pages if it is long? If you are lucky, your eventual rejection letter will appear on the Journal's blog. Please let us know in your cover letter if you would not mind being identified, otherwise most identifying information will be redacted.</big></p>
<big> <b>Subscriptions</b><a name="subscriptions"></a> </big>

<p><big>An individual subscription may be secured for $9,999.99 per year (one issue). Institutional and library subscriptions are also available; prices will be provided upon enquiry. It is unknown whether the subscription will be delivered in print or as electronic content, because no one has yet ordered one. </big></p>
<big> </big>

<!-- Or you can donate to our cause: <form action="https://www.paypal.com/cgi-bin/webscr" method="post">
<input type="hidden" name="cmd" value="_s-xclick">
<input type="hidden" name="hosted_button_id" value="AR9MFVFK2FAGU">
<input type="image" src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif" border="0" name="submit" alt="PayPal - The safer, easier way to pay online!">
<img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1">
</form>
--> 
<big> <b>Archives</b><a name="archives"></a> </big>



<ul>
	<li><big>March 2009 (Vol 1, No 1) contents: </big>

	<blockquote><big><i>(empty)</i> </big></blockquote>
	</li>
	<li><big>June 2009 (Vol 1, No 2) contents: </big>
	<blockquote><big><i>(empty)</i> </big></blockquote>
	</li>
	<li><big>September 2009 (Vol 1, No 3) contents: </big>
	<blockquote><big><i>(empty)</i> </big></blockquote>
	</li>
	<li><big>December 2009 (Vol 1, No 4) contents: </big>
	<blockquote><big><i>(empty - because we were on holiday)</i> </big></blockquote>
	</li>
	<li><big>March 2010 (Vol 2, No 1) contents: </big>
	<blockquote><big><i>(empty)</i> </big></blockquote>
	</li>
	<li><big>June 2010 (Vol 2, No 2) contents: </big>
	<blockquote><big><i>(empty)</i> </big></blockquote>
	</li>
	<li><big>September 2010 (Vol 2, No 3) contents: </big>
	<blockquote><big><i>(empty)</i> </big></blockquote>
	</li>
	<li><big>December 2010 (Vol 2, No 4) contents: </big>
	<blockquote><big><i>(lost when server crashed - presumed empty) </i> </big></blockquote>
	</li>
	<li><big>March 2011 (Vol 3, No 1) contents: </big>
	<blockquote><big><i>(empty - 352 submissions rejected)</i> </big></blockquote>
	</li>
	<li><big>June 2011 (Vol 3, No 2) contents: </big>
	<blockquote><big><i>(empty)</i> </big></blockquote>
	</li>
	<li><big>2012 (Vol 4) contents: </big>
	<blockquote><big><i>(empty - switched to yearly publication)</i> </big></blockquote>
	</li>
	<li><big>2013 (Vol 5) contents: </big>
	<blockquote><big><i>(empty)</i> </big></blockquote>
	</li>
</ul>
<big> <!--
<B>News Room</B><A name="newsroom"></a>

<P>

</P>
--><br>
<big> <b>Advertisement</b><a name="advertisement"></a> </big>
<p><a href="https://www.4kdownload.com/products/product-stogram"><img src="https://universalrejection.org/212.png" alt="Instagram downloader"></a></p>
</big></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[After getting $824M in state aid, GM to cut 900 jobs at Orion Assembly (123 pts)]]></title>
            <link>https://www.michigancapitolconfidential.com/news/after-getting-824m-in-state-aid-gm-to-cut-900-jobs-at-orion-assembly</link>
            <guid>38647097</guid>
            <pubDate>Thu, 14 Dec 2023 20:54:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.michigancapitolconfidential.com/news/after-getting-824m-in-state-aid-gm-to-cut-900-jobs-at-orion-assembly">https://www.michigancapitolconfidential.com/news/after-getting-824m-in-state-aid-gm-to-cut-900-jobs-at-orion-assembly</a>, See on <a href="https://news.ycombinator.com/item?id=38647097">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="article_header">
			<p><a href="https://www.michigancapitolconfidential.com/news">News Story</a></p><p data-edit-url="/articles/31604">
				
				<h2>GM CEO claimed investment would not have been possible, except for corporate welfare</h2>
		</p>

		

			
	</div><div data-field="body">
		<p>General Motors Corp. will lay off 900 workers from Orion Assembly in January 2024.</p>
<p>The company&nbsp;received&nbsp;roughly $824 million in corporate welfare from Michigan lawmakers less than two years ago, in January 2022. Taxpayers spent&nbsp;$600 million to create 4,000 jobs, up to $158 million for renewable energy projects&nbsp;(as the factory would build electric vehicles), and $66.1 million in site readiness.</p>
<p>âThe Michigan Economic Development Corporation also authorized a State Education Tax abatement to be used in conjunction with the locally approved Orion Township abatement in support of the GM expansion,â the state announced at the time.</p>
<p>Orion Township threw in property tax abatements.</p>
<p>Gov. Gretchen Whitmer joined GM CEO Mary Barra in the announcement, touting the good-paying jobs the plant would create.</p>
<p>"GM's $7 billion investment in Michigan â&nbsp;the largest in their history â&nbsp;will create and retain 5,000 good-paying jobs and enable us to build on our legacy as the place that put the world on wheels," <a target="" href="https://www.michigan.gov/whitmer/news/press-releases/2022/01/25/secures-historic-7-billion-investment-by-gm-to-create-thousands-of-manufacturing-jobs-">Whitmer said</a> at the time.</p>
<p>"When it comes to investing in Michigan, GM and I have the same philosophy: 'Everybody In.' Michigan's future is bright, and I will continue working with anyone to make transformational investments in our economy, create good-paying jobs, and empower working families."</p>
<p>Barra runs the no. 21 company on the Fortune 500 list. But in her public statement, she said the Orion investment would not have been possible&nbsp;if not for corporate welfare.</p>
<p>"These important investments would not have been possible without the strong support from the governor, Michigan Legislature, Orion Township, the City of Lansing, Delta Township,â Barra said, before mentioning the United Auto Workers union.</p>
<p>UAW officials spoke of the General Motors investment&nbsp;as one that would âbenefit families for decades to come.â</p>
<p>Two years later, 911 Orion Township factory workers will start the year in need of work.</p>
<h3><a target="" href="https://www.michigan.gov/leo/-/media/Project/Websites/leo/Documents/WD-DATA_PUBLIC_WARN_NOTICES4/2023/2023-10-24_WARN-Notice_GM-Lake-Orion.pdf?rev=c3d3e77c003849a08005f1276058bc6f">Read the General Motors&nbsp;WARN Notice for yourself</a></h3>
	</div><p>Michigan Capitol Confidential is the news source produced by the Mackinac Center for Public Policy. Michigan Capitol Confidential reports with a free-market news perspective.</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Postfix 25 years old today (107 pts)]]></title>
            <link>https://marc.info/?l=postfix-users&amp;m=170256002601828&amp;w=2</link>
            <guid>38647053</guid>
            <pubDate>Thu, 14 Dec 2023 20:50:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://marc.info/?l=postfix-users&#x26;m=170256002601828&#x26;w=2">https://marc.info/?l=postfix-users&#x26;m=170256002601828&#x26;w=2</a>, See on <a href="https://news.ycombinator.com/item?id=38647053">Hacker News</a></p>
<div id="readability-page-1" class="page">
<pre><b>[<a href="https://marc.info/?l=postfix-users&amp;m=170255408229650&amp;w=2">prev in list</a>] [<a href="https://marc.info/?l=postfix-users&amp;m=170256090002466&amp;w=2">next in list</a>] [<span color="#c0c0c0">prev in thread</span>] [<a href="https://marc.info/?l=postfix-users&amp;m=170256090002466&amp;w=2">next in thread</a>] </b>
<b><span size="+1">
List:       <a href="https://marc.info/?l=postfix-users&amp;r=1&amp;w=2">postfix-users</a>
Subject:    <a href="https://marc.info/?t=170256019600001&amp;r=1&amp;w=2">[pfx] 25 years today</a>
From:       <a href="https://marc.info/?a=167820008700002&amp;r=1&amp;w=2">Wietse Venema via Postfix-users &lt;postfix-users () postfix ! org&gt;</a>
Date:       <a href="https://marc.info/?l=postfix-users&amp;r=1&amp;w=2&amp;b=202312">2023-12-14 13:20:26</a>
Message-ID: <a href="https://marc.info/?i=4SrXyy1HSLzJrP1%20()%20spike%20!%20porcupine%20!%20org">4SrXyy1HSLzJrP1 () spike ! porcupine ! org</a></span>
[Download RAW <a href="https://marc.info/?l=postfix-users&amp;m=170256002601828&amp;q=mbox">message</a> or <a href="https://marc.info/?l=postfix-users&amp;m=170256002601828&amp;q=raw">body</a>]</b>

As a few on this list may recall, it is 25 years ago today that the
"IBM secure mailer" had its public beta release. This was accompanied
by a nice article in the New York Times business section.

There is some literature at <a href="https://www.postfix.org/press.html" rel="nofollow">https://www.postfix.org/press.html</a> that
attests how this project accelerated open-source adoption by a very
large company.

At the time there were several efforts by people inside IBM to do
open-source projects, but it was the NY Times article that brought
open source on the radar of the CEO. He then tasked people to come
up with an open-source strategy for IBM.

As for the name Postfix, my colleagues and I had come up with
multiple names that were rejected each time (I still have some
Internet domains names from that time). We decided that this was
not going to work, released it as "IBM secure mailer", and then,
after IBM was no longer in control, changed the name to Postfix.

That was a long time ago. Postfix has evolved as the Internet has
changed. I am continuing the overhaul of this software, motivated
by people like you on this mailing list.

	Wietse
_______________________________________________
Postfix-users mailing list -- postfix-users@postfix.org
To unsubscribe send an email to postfix-users-leave@postfix.org
<b>[<a href="https://marc.info/?l=postfix-users&amp;m=170255408229650&amp;w=2">prev in list</a>] [<a href="https://marc.info/?l=postfix-users&amp;m=170256090002466&amp;w=2">next in list</a>] [<span color="#c0c0c0">prev in thread</span>] [<a href="https://marc.info/?l=postfix-users&amp;m=170256090002466&amp;w=2">next in thread</a>] </b>
</pre>
  <br><center>
    <a href="https://marc.info/?q=configure">Configure</a> | 

    <a href="https://marc.info/?q=about">About</a> |
    <a href="https://marc.info/?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[OnnxStream: Stable Diffusion XL 1.0 Base on a Raspberry Pi Zero 2 (103 pts)]]></title>
            <link>https://github.com/vitoplantamura/OnnxStream/tree/c0cb4b3d7b419e4b10129904fbe16b850ca5d385</link>
            <guid>38646969</guid>
            <pubDate>Thu, 14 Dec 2023 20:43:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/vitoplantamura/OnnxStream/tree/c0cb4b3d7b419e4b10129904fbe16b850ca5d385">https://github.com/vitoplantamura/OnnxStream/tree/c0cb4b3d7b419e4b10129904fbe16b850ca5d385</a>, See on <a href="https://news.ycombinator.com/item?id=38646969">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h4 tabindex="-1" dir="auto">News ð£</h4>
<ul dir="auto">
<li>December 14, 2023: Added support for <strong>Stable Diffusion XL Turbo 1.0</strong>! (thanks to @AeroX2)</li>
<li>October 3, 2023: Added support for <strong>Stable Diffusion XL 1.0 Base</strong>!</li>
</ul>
<h4 tabindex="-1" dir="auto">Index ð</h4>
<ul dir="auto">
<li><a href="https://github.com/vitoplantamura/OnnxStream#onnxstream">Introduction</a></li>
<li><strong><a href="https://github.com/vitoplantamura/OnnxStream#stable-diffusion-15">Stable Diffusion 1.5</a></strong></li>
<li><strong><a href="https://github.com/vitoplantamura/OnnxStream#stable-diffusion-xl-10-base">Stable Diffusion XL 1.0 Base</a></strong></li>
<li><strong><a href="https://github.com/vitoplantamura/OnnxStream#stable-diffusion-xl-turbo-10">Stable Diffusion XL Turbo 1.0</a></strong></li>
<li><a href="https://github.com/vitoplantamura/OnnxStream#features-of-onnxstream">Features of OnnxStream</a></li>
<li><a href="https://github.com/vitoplantamura/OnnxStream#performance">Performance</a></li>
<li><a href="https://github.com/vitoplantamura/OnnxStream#attention-slicing-and-quantization">Attention Slicing and Quantization</a></li>
<li><a href="https://github.com/vitoplantamura/OnnxStream#how-onnxstream-works">How OnnxStream Works</a></li>
<li><strong><a href="https://github.com/vitoplantamura/OnnxStream#how-to-build-the-stable-diffusion-example-on-linuxmacwindowstermux">How to Build</a></strong></li>
<li><a href="https://github.com/vitoplantamura/OnnxStream#how-to-convert-and-run-a-custom-stable-diffusion-15-model-with-onnxstream-by-gaelicthunder">How to Convert SD 1.5 Model</a></li>
<li><a href="https://github.com/vitoplantamura/OnnxStream#related-projects">Related Projects</a></li>
<li><a href="https://github.com/vitoplantamura/OnnxStream#credits">Credits</a></li>
</ul>
<h2 tabindex="-1" dir="auto">OnnxStream</h2>
<p dir="auto">The challenge is to run <a href="https://github.com/CompVis/stable-diffusion">Stable Diffusion</a> 1.5, which includes a large transformer model with almost 1 billion parameters, on a <a href="https://www.raspberrypi.com/products/raspberry-pi-zero-2-w/" rel="nofollow">Raspberry Pi Zero 2</a>, which is a microcomputer with 512MB of RAM, without adding more swap space and without offloading intermediate results on disk. The recommended minimum RAM/VRAM for Stable Diffusion 1.5 is typically 8GB.</p>
<p dir="auto">Generally major machine learning frameworks and libraries are focused on minimizing inference latency and/or maximizing throughput, all of which at the cost of RAM usage. So I decided to write a super small and hackable inference library specifically focused on minimizing memory consumption: OnnxStream.</p>
<p dir="auto">OnnxStream is based on the idea of decoupling the inference engine from the component responsible of providing the model weights, which is a class derived from <code>WeightsProvider</code>. A <code>WeightsProvider</code> specialization can implement any type of loading, caching and prefetching of the model parameters. For example a custom <code>WeightsProvider</code> can decide to download its data from an HTTP server directly, without loading or writing anything to disk (hence the word "Stream" in "OnnxStream"). Three default <code>WeightsProviders</code> are available: <code>DiskNoCache</code>, <code>DiskPrefetch</code> and <code>Ram</code>.</p>
<p dir="auto"><strong>OnnxStream can consume even 55x less memory than OnnxRuntime with only a 50% to 200% increase in latency</strong> (on CPU, with a good SSD, with reference to the SD 1.5's UNET - see the Performance section below).</p>
<h2 tabindex="-1" dir="auto">Stable Diffusion 1.5</h2>
<p dir="auto">These images were generated by the Stable Diffusion example implementation included in this repo, using OnnxStream, at different precisions of the VAE decoder. The VAE decoder is the only model of Stable Diffusion 1.5 that could not fit into the RAM of the Raspberry Pi Zero 2 in single or half precision. This is caused by the presence of residual connections and very big tensors and convolutions in the model. The only solution was static quantization (8 bit). The third image was generated by my RPI Zero 2 in about <del>3 hours</del> 1.5 hours (using the MAX_SPEED option when compiling). The first image was generated on my PC using the same latents generated by the RPI Zero 2, for comparison:</p>
<p dir="auto">VAE decoder in W16A16 precision:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/output_W16A16.png"><img src="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/output_W16A16.png" alt="W16A16 VAE Decoder"></a></p>
<p dir="auto">VAE decoder in W8A32 precision:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/output_W8A32.png"><img src="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/output_W8A32.png" alt="W8A32 VAE Decoder"></a></p>
<p dir="auto">VAE decoder in W8A8 precision, generated by my RPI Zero 2 in about <del>3 hours</del> 1.5 hours (using the MAX_SPEED option when compiling):</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/output_W8A8.png"><img src="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/output_W8A8.png" alt="W8A8 VAE Decoder"></a></p>
<h2 tabindex="-1" dir="auto">Stable Diffusion XL 1.0 (base)</h2>
<p dir="auto">The OnnxStream Stable Diffusion example implementation now supports SDXL 1.0 (without the Refiner). The ONNX files were exported from the SDXL 1.0 implementation of the Hugging Face's <a href="https://github.com/huggingface/diffusers">Diffusers</a> library (version 0.19.3).</p>
<p dir="auto">SDXL 1.0 is significantly more computationally expensive than SD 1.5. The most significant difference is the ability to generate 1024x1024 images instead of 512x512. To give you an idea, generating a 10-steps image with HF's Diffusers takes 26 minutes on my 12-core PC with 32GB of RAM. The minimum recommended VRAM for SDXL is typically 12GB.</p>
<p dir="auto"><strong>OnnxStream can run SDXL 1.0 in less than 300MB of RAM and therefore is able to run it comfortably on a RPI Zero 2</strong>, without adding more swap space and without writing anything to disk during inference. Generating a 10-steps image takes about 11 hours on my RPI Zero 2.</p>
<h4 tabindex="-1" dir="auto">SDXL Specific Optimizations</h4>
<p dir="auto">The same set of optimizations for SD 1.5 has been used for SDXL 1.0, but with the following differences.</p>
<p dir="auto">As for the UNET model, in order to make it run in less than 300MB of RAM on the RPI Zero 2, UINT8 dynamic quantization is used, but limited to a specific subset of large intermediate tensors.</p>
<p dir="auto">The situation for the VAE decoder is more complex than for SD 1.5. SDXL 1.0's VAE decoder is 4x the size of SD 1.5's, and consumes 4.4GB of RAM when run with OnnxStream in FP32 precision.</p>
<p dir="auto">In the case of SD 1.5 the VAE decoder is statically quantized (UINT8 precision) and this is enough to reduce RAM consumption to 260MB. Instead, the SDXL 1.0's VAE decoder overflows when run with FP16 arithmetic and the numerical ranges of its activations are too large to get good quality images with UINT8 quantization.</p>
<p dir="auto">So we are stuck with a model that consumes 4.4GB of RAM, which cannot be run in FP16 precision and which cannot be quantized in UINT8 precision. (NOTE: there is at least <a href="https://huggingface.co/madebyollin/sdxl-vae-fp16-fix" rel="nofollow">one solution</a> to the FP16 problem, but I have not investigated further since even running the VAE decoder in FP16 precision, the total memory consumed would be divided by 2, so the model would ultimately consume 2.2GB instead of 4.4GB, which is still way too much for the RPI Zero 2)</p>
<p dir="auto">The inspiration for the solution came from the implementation of the VAE decoder of the Hugging Face's <a href="https://github.com/huggingface/diffusers/blob/main/src/diffusers/models/autoencoder_kl.py">Diffusers</a> library, i.e. using tiled decoding. The final result is absolutely indistinguishable from an image decoded by the full decoder and in this way it is possible to reduce RAM memory consumption from 4.4GB to 298MB!</p>
<p dir="auto">The idea is simple. The result of the diffusion process is a tensor with shape (1,4,128,128). The idea is to split this tensor into 5x5 (therefore 25) overlapping tensors with shape (1,4,32,32) and to decode these tensors separately. Each of these tensors is overlapped by 25% on the tile to its left and the one above. The decoding result is a tensor with shape (1,3,256,256) which is then appropriately blended into the final image.</p>
<p dir="auto">For example, this is an image generated by the tiled decoder with blending manually turned off in the code. <strong>You can clearly see the tiles in the image:</strong></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/sdxl_tiles.png"><img src="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/sdxl_tiles.png" alt="SDXL Output with Tiles"></a></p>
<p dir="auto">While this is the same image with blending turned on. <strong>This is the final result:</strong></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/sdxl_without_tiles.png"><img src="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/sdxl_without_tiles.png" alt="SDXL Output without Tiles"></a></p>
<p dir="auto">This is another image generated by my RPI Zero 2 in about 11 hours: (10 steps, Euler Ancestral)</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/sdxl_out_1.png"><img src="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/sdxl_out_1.png" alt="SDXL Output generated by RPI Zero 2"></a></p>
<h2 tabindex="-1" dir="auto">Stable Diffusion XL Turbo 1.0</h2>
<p dir="auto">Support for SDXL Turbo was contributed by the kind <a href="https://github.com/AeroX2">@AeroX2</a>.</p>
<p dir="auto">The main difference between SDXL and SDXL Turbo is that the Turbo version generates 512x512 images instead of 1024x1024, but with a much lower number of steps. It is possible to get good quality images even with just one step!</p>
<p dir="auto">No additional optimizations compared to SDXL 1.0 were required to run SDXL Turbo on the RPI Zero 2. SDXL and SDXL Turbo share the same text encoder and VAE decoder: tiled decoding is required to keep memory consumption under 300MB.</p>
<p dir="auto">This image was generated by my Raspberry PI Zero 2 in <strong>29 minutes</strong> (<strong>1 step</strong>):</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/sdxlturbo_steps1.png"><img src="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/sdxlturbo_steps1.png" alt="sdxlturbo steps 1"></a></p>
<p dir="auto">This image is an example of <strong>3 step</strong> generation, and took <strong>50 minutes</strong> on my RPI Zero 2. The quality is the same as the 1 step generated image:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/sdxlturbo_steps3.png"><img src="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/sdxlturbo_steps3.png" alt="sdxlturbo steps 3"></a></p>
<p dir="auto">A comparison between SDXL 1.0 and SDXL Turbo run in OnnxStream with respect to the number of steps is available in the <a href="https://huggingface.co/AeroX2/stable-diffusion-xl-turbo-1.0-onnxstream" rel="nofollow">model card</a> of the model (by @AeroX2).</p>
<h2 tabindex="-1" dir="auto">Features of OnnxStream</h2>
<ul dir="auto">
<li>Inference engine decoupled from the <code>WeightsProvider</code></li>
<li><code>WeightsProvider</code> can be <code>DiskNoCache</code>, <code>DiskPrefetch</code>, <code>Ram</code> or custom</li>
<li>Attention slicing</li>
<li>Dynamic quantization (8 bit unsigned, asymmetric, percentile)</li>
<li>Static quantization (W8A8 unsigned, asymmetric, percentile)</li>
<li>Easy calibration of a quantized model</li>
<li>FP16 support (with or without FP16 arithmetic)</li>
<li>25 ONNX operators implemented (the most common)</li>
<li>Operations executed sequentially but all operators are multithreaded</li>
<li>Single implementation file + header file</li>
<li>XNNPACK calls wrapped in the <code>XnnPack</code> class (for future replacement)</li>
</ul>
<p dir="auto">OnnxStream depends on <a href="https://github.com/google/XNNPACK">XNNPACK</a> for some (accelerated) primitives: MatMul, Convolution, element-wise Add/Sub/Mul/Div, Sigmoid and Softmax.</p>
<h2 tabindex="-1" dir="auto">Performance</h2>
<p dir="auto">Stable Diffusion 1.5 consists of three models: <strong>a text encoder</strong> (672 operations and 123 million parameters), the <strong>UNET model</strong> (2050 operations and 854 million parameters) and the <strong>VAE decoder</strong> (276 operations and 49 million parameters). Assuming that the batch size is equal to 1, a full image generation with 10 steps, which yields good results (with the Euler Ancestral scheduler), requires 2 runs of the text encoder, 20 (i.e. 2*10) runs of the UNET model and 1 run of the VAE decoder.</p>
<p dir="auto">This table shows the various inference times of the three models of Stable Diffusion 1.5, together with the memory consumption (i.e. the <code>Peak Working Set Size</code> in Windows or the <code>Maximum Resident Set Size</code> in Linux).</p>
<table>
<thead>
<tr>
<th>Model / Library</th>
<th>1st run</th>
<th>2nd run</th>
<th>3rd run</th>
</tr>
</thead>
<tbody>
<tr>
<td>FP16 UNET / OnnxStream</td>
<td>0.133 GB - 18.2 secs</td>
<td>0.133 GB - 18.7 secs</td>
<td>0.133 GB - 19.8 secs</td>
</tr>
<tr>
<td>FP16 UNET / OnnxRuntime</td>
<td>5.085 GB - 12.8 secs</td>
<td>7.353 GB - 7.28 secs</td>
<td>7.353 GB - 7.96 secs</td>
</tr>
<tr>
<td>FP32 Text Enc / OnnxStream</td>
<td>0.147 GB - 1.26 secs</td>
<td>0.147 GB - 1.19 secs</td>
<td>0.147 GB - 1.19 secs</td>
</tr>
<tr>
<td>FP32 Text Enc / OnnxRuntime</td>
<td>0.641 GB - 1.02 secs</td>
<td>0.641 GB - 0.06 secs</td>
<td>0.641 GB - 0.07 secs</td>
</tr>
<tr>
<td>FP32 VAE Dec / OnnxStream</td>
<td>1.004 GB - 20.9 secs</td>
<td>1.004 GB - 20.6 secs</td>
<td>1.004 GB - 21.2 secs</td>
</tr>
<tr>
<td>FP32 VAE Dec / OnnxRuntime</td>
<td>1.330 GB - 11.2 secs</td>
<td>2.026 GB - 10.1 secs</td>
<td>2.026 GB - 11.1 secs</td>
</tr>
</tbody>
</table>
<p dir="auto">In the case of the UNET model (when run in FP16 precision, with FP16 arithmetic enabled in OnnxStream), OnnxStream can consume even 55x less memory than OnnxRuntime with a 50% to 200% increase in latency.</p>
<p dir="auto">Notes:</p>
<ul dir="auto">
<li>The first run for OnnxRuntime is a warm up inference, since its <code>InferenceSession</code> is created before the first run and reused for all the subsequent runs. No such thing as a warm up exists for OnnxStream since it is purely eager by design (however subsequent runs can benefit from the caching of the weights files by the OS).</li>
<li>At the moment OnnxStream doesn't support inputs with a batch size != 1, unlike OnnxRuntime, which can greatly speed up the whole diffusion process using a batch size = 2 when running the UNET model.</li>
<li>In my tests, changing OnnxRuntime's <code>SessionOptions</code> (like <code>EnableCpuMemArena</code> and <code>ExecutionMode</code>) produces no significant difference in the results.</li>
<li>Performance of OnnxRuntime is very similar to that of NCNN (the other framework I evaluated), both in terms of memory consumption and inference time. I'll include NCNN benchmarks in the future, if useful.</li>
<li>Tests were run on my development machine: Windows Server 2019, 16GB RAM, 8750H cpu (AVX2), 970 EVO Plus SSD, 8 virtual cores on VMWare.</li>
</ul>
<h2 tabindex="-1" dir="auto">Attention Slicing and Quantization</h2>
<p dir="auto">The use of "attention slicing" when running the UNET model and the use of W8A8 quantization for the VAE decoder were crucial in reducing memory consumption to a level that allowed execution on a RPI Zero 2.</p>
<p dir="auto">While there is a lot of information on the internet about quantizing neural networks, little can be found about "attention slicing". The idea is simple: the goal is to avoid materializing the full <code>Q @ K^T</code> matrix when calculating the scaled dot-product attention of the various multi-head attentions in the UNET model. With an attention head count of 8 in the UNET model, <code>Q</code> has a shape of (8,4096,40), while <code>K^T</code> has a shape of (8,40,4096): so the result of the first MatMul has a final shape of (8,4096,4096), which is a 512MB tensor (in FP32 precision):</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/attention_mem_consumpt.png"><img src="https://raw.githubusercontent.com/vitoplantamura/OnnxStream/master/assets/attention_mem_consumpt.png" alt="Attention Slicing"></a></p>
<p dir="auto">The solution is to split <code>Q</code> vertically and then to proceed with the attention operations normally on each chunk of <code>Q</code>. <code>Q_sliced</code> has a shape of (1,x,40), where x is 4096 (in this case) divided by <code>onnxstream::Model::m_attention_fused_ops_parts</code> (which has a default value of 2, but can be customized). This simple trick allows to lower the overall consumed memory of the UNET model from 1.1GB to 300MB (when the model is run in FP32 precision). A possible alternative, certainly more efficient, would be to use FlashAttention, however FlashAttention would require writing a custom kernel for each supported architecture (AVX, NEON etc), bypassing XnnPack in our case.</p>
<h2 tabindex="-1" dir="auto">How OnnxStream works</h2>
<p dir="auto">This code can run a model defined in the <code>path_to_model_folder/model.txt</code>: (all the model operations are defined in the <code>model.txt</code> text file; OnnxStream expects to find all the weights files in that same folder, as a series of <code>.bin</code> files)</p>
<div dir="auto" data-snippet-clipboard-copy-content="#include &quot;onnxstream.h&quot;

using namespace onnxstream;

int main()
{
    Model model;

    //
    // Optional parameters that can be set on the Model object:
    //
    // model.set_weights_provider( ... ); // specifies a different weights provider (default is DiskPrefetchWeightsProvider)
    // model.read_range_data( ... ); // reads a range data file (which contains the clipping ranges of the activations for a quantized model)
    // model.write_range_data( ... ); // writes a range data file (useful after calibration)
    // model.m_range_data_calibrate = true; // calibrates the model
    // model.m_use_fp16_arithmetic = true; // uses FP16 arithmetic during inference (useful if weights are in FP16 precision)
    // model.m_use_uint8_arithmetic = true; // uses UINT8 arithmetic during inference
    // model.m_use_uint8_qdq = true; // uses UINT8 dynamic quantization (can reduce memory consumption of some models)
    // model.m_fuse_ops_in_attention = true; // enables attention slicing
    // model.m_attention_fused_ops_parts = ... ; // see the &quot;Attention Slicing&quot; section above
    //

    model.read_file(&quot;path_to_model_folder/model.txt&quot;);

    tensor_vector<float> data;
    
    ... // fill the tensor_vector with the tensor data. &quot;tensor_vector&quot; is just an alias to a std::vector with a custom allocator.

    Tensor t;
    t.m_name = &quot;input&quot;;
    t.m_shape = { 1, 4, 64, 64 };
    t.set_vector(std::move(data));
    model.push_tensor(std::move(t));

    model.run();
    
    auto&amp; result = model.m_data[0].get_vector<float>();
    
    ... // process the result: &quot;result&quot; is a reference to the first result of the inference (a tensor_vector<float> as well).

    return 0;
}"><pre>#<span>include</span> <span><span>"</span>onnxstream.h<span>"</span></span>

<span>using</span> <span>namespace</span> <span>onnxstream</span><span>;</span>

<span>int</span> <span>main</span>()
{
    Model model;

    <span><span>//</span></span>
    <span><span>//</span> Optional parameters that can be set on the Model object:</span>
    <span><span>//</span></span>
    <span><span>//</span> model.set_weights_provider( ... ); // specifies a different weights provider (default is DiskPrefetchWeightsProvider)</span>
    <span><span>//</span> model.read_range_data( ... ); // reads a range data file (which contains the clipping ranges of the activations for a quantized model)</span>
    <span><span>//</span> model.write_range_data( ... ); // writes a range data file (useful after calibration)</span>
    <span><span>//</span> model.m_range_data_calibrate = true; // calibrates the model</span>
    <span><span>//</span> model.m_use_fp16_arithmetic = true; // uses FP16 arithmetic during inference (useful if weights are in FP16 precision)</span>
    <span><span>//</span> model.m_use_uint8_arithmetic = true; // uses UINT8 arithmetic during inference</span>
    <span><span>//</span> model.m_use_uint8_qdq = true; // uses UINT8 dynamic quantization (can reduce memory consumption of some models)</span>
    <span><span>//</span> model.m_fuse_ops_in_attention = true; // enables attention slicing</span>
    <span><span>//</span> model.m_attention_fused_ops_parts = ... ; // see the "Attention Slicing" section above</span>
    <span><span>//</span></span>

    model.<span>read_file</span>(<span><span>"</span>path_to_model_folder/model.txt<span>"</span></span>);

    tensor_vector&lt;<span>float</span>&gt; data;
    
    ... <span><span>//</span> fill the tensor_vector with the tensor data. "tensor_vector" is just an alias to a std::vector with a custom allocator.</span>

    Tensor t;
    t.<span>m_name</span> = <span><span>"</span>input<span>"</span></span>;
    t.<span>m_shape</span> = { <span>1</span>, <span>4</span>, <span>64</span>, <span>64</span> };
    t.<span>set_vector</span>(<span>std::move</span>(data));
    model.<span>push_tensor</span>(<span>std::move</span>(t));

    model.<span>run</span>();
    
    <span>auto</span>&amp; result = model.<span>m_data</span>[<span>0</span>].<span>get_vector</span>&lt;<span>float</span>&gt;();
    
    ... <span><span>//</span> process the result: "result" is a reference to the first result of the inference (a tensor_vector&lt;float&gt; as well).</span>

    <span>return</span> <span>0</span>;
}</pre></div>
<p dir="auto">The <code>model.txt</code> file contains all the model operations in ASCII format, as exported from the original ONNX file. Each line corresponds to an operation: for example this line represents a convolution in a quantized model:</p>
<div data-snippet-clipboard-copy-content="Conv_4:Conv*input:input_2E_1(1,4,64,64);post_5F_quant_5F_conv_2E_weight_nchw.bin(uint8[0.0035054587850383684,134]:4,4,1,1);post_5F_quant_5F_conv_2E_bias.bin(float32:4)*output:input(1,4,64,64)*dilations:1,1;group:1;kernel_shape:1,1;pads:0,0,0,0;strides:1,1"><pre><code>Conv_4:Conv*input:input_2E_1(1,4,64,64);post_5F_quant_5F_conv_2E_weight_nchw.bin(uint8[0.0035054587850383684,134]:4,4,1,1);post_5F_quant_5F_conv_2E_bias.bin(float32:4)*output:input(1,4,64,64)*dilations:1,1;group:1;kernel_shape:1,1;pads:0,0,0,0;strides:1,1
</code></pre></div>
<p dir="auto">In order to export the <code>model.txt</code> file and its weights (as a series of <code>.bin</code> files) from an ONNX file for use in OnnxStream, a notebook (with a single cell) is provided (<code>onnx2txt.ipynb</code>).</p>
<p dir="auto">Some things must be considered when exporting a Pytorch <code>nn.Module</code> (in our case) to ONNX for use in OnnxStream:</p>
<ol dir="auto">
<li>When calling <code>torch.onnx.export</code>, <code>dynamic_axes</code> should be left empty, since OnnxStream doesn't support inputs with a dynamic shape.</li>
<li>It is strongly recommended to run the excellent <a href="https://github.com/daquexian/onnx-simplifier">ONNX Simplifier</a> on the exported ONNX file before its conversion to a <code>model.txt</code> file.</li>
</ol>
<h2 tabindex="-1" dir="auto">How to Build the Stable Diffusion example on Linux/Mac/Windows/Termux</h2>
<ul dir="auto">
<li><strong>Windows only</strong>: start the following command prompt: <code>Visual Studio Tools</code> &gt; <code>x64 Native Tools Command Prompt</code>.</li>
<li><strong>Mac only</strong>: make sure to install cmake: <code>brew install cmake</code>.</li>
</ul>
<p dir="auto">First you need to build <a href="https://github.com/google/XNNPACK">XNNPACK</a>.</p>
<p dir="auto">Since the function prototypes of XnnPack can change at any time, I've included a <code>git checkout</code> ââthat ensures correct compilation of OnnxStream with a compatible version of XnnPack at the time of writing:</p>
<div data-snippet-clipboard-copy-content="git clone https://github.com/google/XNNPACK.git
cd XNNPACK
git rev-list -n 1 --before=&quot;2023-06-27 00:00&quot; master
git checkout <COMMIT_ID_FROM_THE_PREVIOUS_COMMAND>
mkdir build
cd build
cmake -DXNNPACK_BUILD_TESTS=OFF -DXNNPACK_BUILD_BENCHMARKS=OFF ..
cmake --build . --config Release"><pre><code>git clone https://github.com/google/XNNPACK.git
cd XNNPACK
git rev-list -n 1 --before="2023-06-27 00:00" master
git checkout &lt;COMMIT_ID_FROM_THE_PREVIOUS_COMMAND&gt;
mkdir build
cd build
cmake -DXNNPACK_BUILD_TESTS=OFF -DXNNPACK_BUILD_BENCHMARKS=OFF ..
cmake --build . --config Release
</code></pre></div>
<p dir="auto">Then you can build the Stable Diffusion example.</p>
<p dir="auto"><code>&lt;DIRECTORY_WHERE_XNNPACK_WAS_CLONED&gt;</code> is for example <code>/home/vito/Desktop/XNNPACK</code> or <code>C:\Projects\SD\XNNPACK</code> (on Windows):</p>
<div data-snippet-clipboard-copy-content="git clone https://github.com/vitoplantamura/OnnxStream.git
cd OnnxStream
cd src
mkdir build
cd build
cmake -DMAX_SPEED=ON -DXNNPACK_DIR=<DIRECTORY_WHERE_XNNPACK_WAS_CLONED> ..
cmake --build . --config Release"><pre><code>git clone https://github.com/vitoplantamura/OnnxStream.git
cd OnnxStream
cd src
mkdir build
cd build
cmake -DMAX_SPEED=ON -DXNNPACK_DIR=&lt;DIRECTORY_WHERE_XNNPACK_WAS_CLONED&gt; ..
cmake --build . --config Release
</code></pre></div>
<p dir="auto"><strong>Important:</strong> the MAX_SPEED option allows to increase performance by about 10% in Windows, but by more than 50% on the Raspberry Pi. This option consumes much more memory at build time and the produced executable may not work (as was the case with Termux in my tests). So in case of problems, the first attempt to make is to set MAX_SPEED to OFF.</p>
<p dir="auto">Now you can run the Stable Diffusion example.</p>
<p dir="auto">In the case of <strong>Stable Diffusion 1.5</strong>, the weights for the example can be downloaded from the Releases of this repo (about 2GB). In the case of <strong>Stable Diffusion XL 1.0 Base</strong>, the weights can be downloaded from Hugging Face (about 8GB):</p>
<div data-snippet-clipboard-copy-content="git lfs install
git clone --depth=1 https://huggingface.co/vitoplantamura/stable-diffusion-xl-base-1.0-onnxstream"><pre><code>git lfs install
git clone --depth=1 https://huggingface.co/vitoplantamura/stable-diffusion-xl-base-1.0-onnxstream
</code></pre></div>
<p dir="auto">In the case of <strong>Stable Diffusion XL Turbo 1.0</strong>, the weights can be downloaded here (about 8GB):</p>
<div data-snippet-clipboard-copy-content="git lfs install
git clone --depth=1 https://huggingface.co/AeroX2/stable-diffusion-xl-turbo-1.0-onnxstream"><pre><code>git lfs install
git clone --depth=1 https://huggingface.co/AeroX2/stable-diffusion-xl-turbo-1.0-onnxstream
</code></pre></div>
<p dir="auto">These are the command line options of the Stable Diffusion example:</p>
<div data-snippet-clipboard-copy-content="--xl                Runs Stable Diffusion XL 1.0 instead of Stable Diffusion 1.5.
--turbo             Runs Stable Diffusion Turbo 1.0 instead of Stable Diffusion 1.5.
--models-path       Sets the folder containing the Stable Diffusion models.
--ops-printf        During inference, writes the current operation to stdout.
--output            Sets the output PNG file.
--decode-latents    Skips the diffusion, and decodes the specified latents file.
--prompt            Sets the positive prompt.
--neg-prompt        Sets the negative prompt.
--steps             Sets the number of diffusion steps.
--seed              Sets the seed.
--save-latents      After the diffusion, saves the latents in the specified file.
--decoder-calibrate (ONLY SD 1.5) Calibrates the quantized version of the VAE decoder.
--not-tiled         (ONLY SDXL 1.0) Don't use the tiled VAE decoder.
--ram               Uses the RAM WeightsProvider (Experimental).
--rpi               Configures the models to run on a Raspberry Pi.
--rpi-lowmem        Configures the models to run on a Raspberry Pi Zero 2."><pre><code>--xl                Runs Stable Diffusion XL 1.0 instead of Stable Diffusion 1.5.
--turbo             Runs Stable Diffusion Turbo 1.0 instead of Stable Diffusion 1.5.
--models-path       Sets the folder containing the Stable Diffusion models.
--ops-printf        During inference, writes the current operation to stdout.
--output            Sets the output PNG file.
--decode-latents    Skips the diffusion, and decodes the specified latents file.
--prompt            Sets the positive prompt.
--neg-prompt        Sets the negative prompt.
--steps             Sets the number of diffusion steps.
--seed              Sets the seed.
--save-latents      After the diffusion, saves the latents in the specified file.
--decoder-calibrate (ONLY SD 1.5) Calibrates the quantized version of the VAE decoder.
--not-tiled         (ONLY SDXL 1.0) Don't use the tiled VAE decoder.
--ram               Uses the RAM WeightsProvider (Experimental).
--rpi               Configures the models to run on a Raspberry Pi.
--rpi-lowmem        Configures the models to run on a Raspberry Pi Zero 2.
</code></pre></div>
<h2 tabindex="-1" dir="auto">How to Convert and Run a Custom Stable Diffusion 1.5 Model with OnnxStream (by @GaelicThunder)</h2>
<details>
<summary>Click to expand</summary>
<p dir="auto">This guide aims to assist you in converting a custom Stable Diffusion model for use with OnnxStream. Whether you're starting from <code>.safetensors</code> or <code>.onnx</code>, this guide has you covered.</p>
<h3 tabindex="-1" dir="auto">Prerequisites</h3>
<ul dir="auto">
<li>Python 3.x</li>
<li>ONNX</li>
<li>ONNX Simplifier</li>
<li>Linux environment (tested on Ubuntu, Windows WSL also works)</li>
<li>Swap space (amount varies depending on your approach)</li>
</ul>
<h3 tabindex="-1" dir="auto">Why Specific Steps?</h3>
<h4 tabindex="-1" dir="auto">Understanding Einsum and Other Operations</h4>
<p dir="auto">AUTO1111's Stable Diffusion implementation uses operations like Einsum, which are not supported by OnnxStream (yet). Hence, it's advised to use the Hugging Face implementation, which is more compatible.</p>
<h3 tabindex="-1" dir="auto">Optional: Converting .safetensors to ONNX</h3>
<p dir="auto">If you're starting with a <code>.safetensors</code> file, you can convert it to <code>.onnx</code> using the tool available at <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui-tensorrt">this GitHub repository</a>.</p>
<p dir="auto">However, it is recommended to follow the approach in section "Option A" below.</p>
<h3 tabindex="-1" dir="auto">Exporting Your Model</h3>
<h4 tabindex="-1" dir="auto">Option A: Exporting from Hugging Face (Recommended)</h4>
<div dir="auto" data-snippet-clipboard-copy-content="from diffusers import StableDiffusionPipeline
import torch

pipe = StableDiffusionPipeline.from_single_file(&quot;https://huggingface.co/YourUsername/YourModel/blob/main/Model.safetensors&quot;)

dummy_input = (torch.randn(1, 4, 64, 64), torch.randn(1), torch.randn(1, 77, 768))
input_names = [&quot;sample&quot;, &quot;timestep&quot;, &quot;encoder_hidden_states&quot;]
output_names = [&quot;out_sample&quot;]

torch.onnx.export(pipe.unet, dummy_input, &quot;/path/to/save/unet_temp.onnx&quot;, verbose=False, input_names=input_names, output_names=output_names, opset_version=14, do_constant_folding=True, export_params=True)"><pre><span>from</span> <span>diffusers</span> <span>import</span> <span>StableDiffusionPipeline</span>
<span>import</span> <span>torch</span>

<span>pipe</span> <span>=</span> <span>StableDiffusionPipeline</span>.<span>from_single_file</span>(<span>"https://huggingface.co/YourUsername/YourModel/blob/main/Model.safetensors"</span>)

<span>dummy_input</span> <span>=</span> (<span>torch</span>.<span>randn</span>(<span>1</span>, <span>4</span>, <span>64</span>, <span>64</span>), <span>torch</span>.<span>randn</span>(<span>1</span>), <span>torch</span>.<span>randn</span>(<span>1</span>, <span>77</span>, <span>768</span>))
<span>input_names</span> <span>=</span> [<span>"sample"</span>, <span>"timestep"</span>, <span>"encoder_hidden_states"</span>]
<span>output_names</span> <span>=</span> [<span>"out_sample"</span>]

<span>torch</span>.<span>onnx</span>.<span>export</span>(<span>pipe</span>.<span>unet</span>, <span>dummy_input</span>, <span>"/path/to/save/unet_temp.onnx"</span>, <span>verbose</span><span>=</span><span>False</span>, <span>input_names</span><span>=</span><span>input_names</span>, <span>output_names</span><span>=</span><span>output_names</span>, <span>opset_version</span><span>=</span><span>14</span>, <span>do_constant_folding</span><span>=</span><span>True</span>, <span>export_params</span><span>=</span><span>True</span>)</pre></div>
<h4 tabindex="-1" dir="auto">Option B: Manually Fixing Input Shapes</h4>
<div dir="auto" data-snippet-clipboard-copy-content="python -m onnxruntime.tools.make_dynamic_shape_fixed --input_name sample --input_shape 1,4,64,64 model.onnx model_fixed1.onnx
python -m onnxruntime.tools.make_dynamic_shape_fixed --input_name timestep --input_shape 1 model_fixed1.onnx model_fixed2.onnx
python -m onnxruntime.tools.make_dynamic_shape_fixed --input_name encoder_hidden_states --input_shape 1,77,768 model_fixed2.onnx model_fixed3.onnx"><pre>python -m onnxruntime.tools.make_dynamic_shape_fixed --input_name sample --input_shape 1,4,64,64 model.onnx model_fixed1.onnx
python -m onnxruntime.tools.make_dynamic_shape_fixed --input_name timestep --input_shape 1 model_fixed1.onnx model_fixed2.onnx
python -m onnxruntime.tools.make_dynamic_shape_fixed --input_name encoder_hidden_states --input_shape 1,77,768 model_fixed2.onnx model_fixed3.onnx</pre></div>
<p dir="auto">Note by Vito: This can be achieved simply by following the approach outlined in "Option A" above, which remains the recommended approach. Making the input shapes fixed might be useful if your starting point is already an ONNX file.</p>
<h3 tabindex="-1" dir="auto">Running ONNX Simplifier</h3>
<div dir="auto" data-snippet-clipboard-copy-content="python -m onnx_simplifier model_fixed3.onnx model_simplified.onnx"><pre>python -m onnx_simplifier model_fixed3.onnx model_simplified.onnx</pre></div>
<p dir="auto"><strong>Note</strong>:</p>
<ul dir="auto">
<li>If you exported your model from Hugging Face, you'll need around 100GB of swap space.</li>
<li>If you manually fixed the input shapes, 16GB of RAM should suffice.</li>
<li>The process may take some time; please be patient.</li>
</ul>
<h3 tabindex="-1" dir="auto">Final Steps and Running the Model</h3>
<p dir="auto">Once you have the final model from <code>onnx2txt</code>, move it into the <code>unet_fp16</code> folder of the standard SD 1.5 model, which can be found in the Windows release of OnnxStream.</p>
<p dir="auto">The command to run the model might look like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="./sd --models-path ./Converted/ --prompt &quot;space landscape&quot; --steps 28 --rpi"><pre>./sd --models-path ./Converted/ --prompt <span><span>"</span>space landscape<span>"</span></span> --steps 28 --rpi</pre></div>
<h3 tabindex="-1" dir="auto">Note on the "Shape" Operator</h3>
<p dir="auto">If you see the "Shape" operator in the output of Onnx Simplifier or in <code>onnx2txt.ipynb</code>, it indicates that Onnx Simplifier may not be functioning as expected. This issue is often not caused by Onnx Simplifier itself but rather by Onnx's Shape Inference.</p>
<h4 tabindex="-1" dir="auto">Alternative Solution</h4>
<p dir="auto">In such cases, you have the alternative to re-export the model by modifying the parameters of <code>torch.onnx.export</code>. Locate this file on your computer:</p>
<p dir="auto"><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui-tensorrt/blob/master/export_onnx.py">export_onnx.py from GitHub</a></p>
<p dir="auto">And make sure to:</p>
<ul dir="auto">
<li>Set <code>opset_version</code> to 14</li>
<li>Remove <code>dynamic_axes</code></li>
</ul>
<p dir="auto">After making these changes, you can rerun Onnx Simplifier and <code>onnx2txt</code>.</p>
<p dir="auto">Note by Vito: This solution, although working, generates ONNX files with Einsum operations. When OnnxStream supports the Einsum operator, this solution will become the recommended one.</p>
<h3 tabindex="-1" dir="auto">Conclusion</h3>
<p dir="auto">This guide is designed to be a comprehensive resource for those looking to run a custom Stable Diffusion 1.5 model with OnnxStream. Additional contributions are welcome!</p>
</details>
<h2 tabindex="-1" dir="auto">Related Projects</h2>
<ul dir="auto">
<li><a href="https://github.com/ThomAce/OnnxStreamGui">OnnxStreamGui</a> by @ThomAce: a web and desktop user interface for OnnxStream.</li>
<li><a href="https://github.com/rvdveen/epaper-slow-generative-art">Auto epaper art</a> by @rvdveen: a self-contained image generation picture frame showing news.</li>
</ul>
<h2 tabindex="-1" dir="auto">Credits</h2>
<ul dir="auto">
<li>The Stable Diffusion 1.5 implementation in <code>sd.cpp</code> is based on <a href="https://github.com/fengwang/Stable-Diffusion-NCNN">this project</a>, which in turn is based on <a href="https://github.com/EdVince/Stable-Diffusion-NCNN">this project</a> by @EdVince. The original code was modified in order to use OnnxStream instead of NCNN.</li>
</ul>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple partly halts Beeper's iMessage app again, suggesting a long fight ahead (273 pts)]]></title>
            <link>https://arstechnica.com/gadgets/2023/12/apple-partly-halts-beepers-imessage-app-again-suggesting-a-long-fight-ahead/</link>
            <guid>38646903</guid>
            <pubDate>Thu, 14 Dec 2023 20:37:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/gadgets/2023/12/apple-partly-halts-beepers-imessage-app-again-suggesting-a-long-fight-ahead/">https://arstechnica.com/gadgets/2023/12/apple-partly-halts-beepers-imessage-app-again-suggesting-a-long-fight-ahead/</a>, See on <a href="https://news.ycombinator.com/item?id=38646903">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2023/12/beeper_group_chat-800x475.png" alt="Beeper group chat illustration">
      <figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2023/12/beeper_group_chat.png" data-height="600" data-width="1010">Enlarge</a> <span>/</span> The dream of everybody having blue bubbles, and epic photos of perfectly digestible meals, as proffered by Beeper.</p><p>Beeper</p></figcaption>  </figure>

  




<!-- cache hit 53:single/related:f609da48f8c974c21f5a1a7129fdec49 --><!-- empty -->
<p>A friend of mine had been using <a href="https://arstechnica.com/gadgets/2023/12/beeper-mini-on-android-claims-to-have-reverse-engineered-imessage-compatibility/">Beeper's iMessage-for-Android app, Beeper Mini</a> to keep up on group chats where she was the only Android user. It worked great until last Friday, when <a href="https://arstechnica.com/gadgets/2023/12/beeper-minis-imessage-app-for-android-is-broken-possibly-by-apple/">it didn't work at all</a>.</p>
<p>What stung her wasn't the return to being the Android interloper in the chats again. It wasn't the resulting lower-quality images, loss of encryption, and strange "Emphasized your message" reaction texts. It was losing messages during the outage and never being entirely certain they had been sent or received. There was a gathering on Saturday, and she had to double-check with a couple people about the details after showing up inadvertently early at the wrong spot.</p>
<p>That kind of grievance is why, after Apple on Wednesday appeared to have blocked what Beeper described as "~5% of Beeper Mini users" from accessing iMessages, both co-founder <a href="https://twitter.com/ericmigi/status/1735131934484029914">Eric Migicovksy</a> and the app told users <a href="https://twitter.com/onbeeper/status/1735315504880123995">they understood if people wanted out</a>. The app had already suspended its plans to charge customers $1.99 per month, following the first major outage. But this was something more about "how ridiculously annoying this uncertainty is for our users," Migicovsky posted.</p>                                            
                                                        
<h2>Fighting on two fronts</h2>
<p>But Beeper would keep working to ensure access and keep fighting on other fronts. Migicovsky pointed to <a href="https://arstechnica.com/gaming/2023/12/googles-android-app-store-monopoly-violates-antitrust-law-jury-finds/">Epic's victory at trial against Google's Play Store</a> ("big tech") as motivation. "We have a chance. We're not giving up." Over the weekend, Migicovsky reposted shows of support from Senators <a href="https://twitter.com/ewarren/status/1734983766492184886">Elizabeth Warren</a> (D-Mass.) and <a href="https://twitter.com/ericmigi/status/1734363711769546873">Amy Klobuchar</a> (D-Minn.), who have focused on reigning in and regulating large technology company's powers.</p>
<p>Apple previously issued a (somewhat uncommon) statement about Beeper's iMessage access, stating that it "took steps to protect our users by blocking techniques that exploit fake credentials in order to gain access to iMessage." Citing privacy, security, and spam concerns, Apple stated it would "continue to make updates in the future" to protect users. Migicovsky previously denied to Ars that Beeper used "fake credentials" or in any way made iMessages less secure.</p>
<p>I asked Migicovsky by direct message if, given Apple's stated plan to continually block it, there could ever be a point at which Beeper's access was "settled," or "back up and running," as he put it in his post on X (formerly Twitter). He wrote that it was up to the press and the community. "If there's enough pressure on Apple, they will have to quit messing with us." "Us," he clarified, meant both Apple's customers using iMessage and Android users trying to chat securely with iPhone friends.</p>
<p>"That's who they're penalizing," he wrote. "It's not a Beeper vs. Apple fight, it's Apple versus customers."</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Magic: The Gathering Is Turing Complete (2019) (129 pts)]]></title>
            <link>https://arxiv.org/abs/1904.09828</link>
            <guid>38646892</guid>
            <pubDate>Thu, 14 Dec 2023 20:35:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/1904.09828">https://arxiv.org/abs/1904.09828</a>, See on <a href="https://news.ycombinator.com/item?id=38646892">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/1904.09828.pdf">Download PDF</a></p><blockquote>
            <span>Abstract:</span>$\textit{Magic: The Gathering}$ is a popular and famously complicated trading card game about magical combat. In this paper we show that optimal play in real-world $\textit{Magic}$ is at least as hard as the Halting Problem, solving a problem that has been open for a decade. To do this, we present a methodology for embedding an arbitrary Turing machine into a game of $\textit{Magic}$ such that the first player is guaranteed to win the game if and only if the Turing machine halts. Our result applies to how real $\textit{Magic}$ is played, can be achieved using standard-size tournament-legal decks, and does not rely on stochasticity or hidden information. Our result is also highly unusual in that all moves of both players are forced in the construction. This shows that even recognising who will win a game in which neither player has a non-trivial decision to make for the rest of the game is undecidable. We conclude with a discussion of the implications for a unified computational theory of games and remarks about the playability of such a board in a tournament setting.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Alex Churchill [<a href="https://arxiv.org/show-email/3e3e4b47/1904.09828">view email</a>]      <br>            <strong><a href="https://arxiv.org/abs/1904.09828v1">[v1]</a></strong>
        Sun, 24 Mar 2019 23:48:09 UTC (17 KB)<br>
    <strong>[v2]</strong>
        Tue, 23 Apr 2019 10:16:57 UTC (458 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Open and portable Postgres-as-a-service. Also available on Hetzner (208 pts)]]></title>
            <link>https://www.ubicloud.com/blog/open-and-portable-managed-postgresql-avail-hetzner</link>
            <guid>38646872</guid>
            <pubDate>Thu, 14 Dec 2023 20:33:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ubicloud.com/blog/open-and-portable-managed-postgresql-avail-hetzner">https://www.ubicloud.com/blog/open-and-portable-managed-postgresql-avail-hetzner</a>, See on <a href="https://news.ycombinator.com/item?id=38646872">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-animation="default" data-collapse="medium" data-duration="400" data-easing="ease" data-easing2="ease" data-doc-height="1" role="banner"><p><a href="https://www.ubicloud.com/"><img src="https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/64fe48116c52fe1a51e17279_ubicolud%20logo.png" loading="lazy" alt=""></a></p></div><div id="w-node-decdb48f-56e8-4c35-c577-932285e9b439-68343a58"><p>December 14, 2023 Â· 3 min read</p><div><p><img src="https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/657a516845397682d9b27b9f_Umur%20Cubukcu-lowres.PNG" loading="lazy" alt=""></p><div><p>Umur Cubukcu</p><p>Founder / Co-CEO</p></div></div><div><p>At Ubicloud, we are building an open and portable cloud. You can use our managed service to reduce your AWS spend to a fraction, or self-host Ubicloud to control your own cloud.<br>â<br>With <a href="https://www.ubicloud.com/use-cases/postgresql">Ubicloud PostgreSQL</a>, we are excited to release an open and managed PostgreSQL implementation, and cut your cloud database spend by 3x.<br></p><p><img src="https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579b8a05fb17cf50c0d40fc_Screenshot%202023-12-13%20at%202.56.55%E2%80%AFPM.png" loading="lazy" sizes="(max-width: 479px) 93vw, (max-width: 767px) 92vw, (max-width: 991px) 94vw, (max-width: 1439px) 72vw, 864px" srcset="https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579b8a05fb17cf50c0d40fc_Screenshot%202023-12-13%20at%202.56.55%E2%80%AFPM-p-500.png 500w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579b8a05fb17cf50c0d40fc_Screenshot%202023-12-13%20at%202.56.55%E2%80%AFPM-p-800.png 800w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579b8a05fb17cf50c0d40fc_Screenshot%202023-12-13%20at%202.56.55%E2%80%AFPM-p-1080.png 1080w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579b8a05fb17cf50c0d40fc_Screenshot%202023-12-13%20at%202.56.55%E2%80%AFPM-p-1600.png 1600w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579b8a05fb17cf50c0d40fc_Screenshot%202023-12-13%20at%202.56.55%E2%80%AFPM-p-2000.png 2000w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579b8a05fb17cf50c0d40fc_Screenshot%202023-12-13%20at%202.56.55%E2%80%AFPM-p-2600.png 2600w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579b8a05fb17cf50c0d40fc_Screenshot%202023-12-13%20at%202.56.55%E2%80%AFPM.png 2894w" alt="Ubicloud Managed PostgreSQL on Hetzner"></p></div><div id="sign-up-and-sign-in"><h3>The Problem</h3><div><p>We love the cloud. But we think the prices from the big cloud vendors like AWS, Azure, GCP get too high, with closed source solutions that lock users in. It gets worse once credits expire.</p><p>The cloud evolved over the years towards a few players that charge high premiums, for increasingly complex products for standard, essential services. Each player optimizing for their walled-gardens leaves customers stuck across incompatible clouds. </p><p>We believe a simpler, portable, and open version of the cloud will make a lasting difference.</p></div><h3>The Solution</h3><div><p>Ubicloud is an open and portable alternative, reduces your costs, and returns control of your infrastructure back to you. We started with VMs, virtual networking, block storage (non-replicated), and powerful IAM. We are now adding Managed PostgreSQL, in preview.</p><p><strong>Open and Portable</strong><br>There are two parts to our release today: First, for the first time, we are making the control plane for a managed PostgreSQL solution open, using the Elastic v2 license for it. While PostgreSQL has been open and portable since its inception, managed cloud services that simplify its management have remained closed source until now. </p><p>Weâve built several of those services ourselves as the Ubicloud founding team, including the PostgreSQL services at Citus Data, Microsoft and Heroku. Our open implementation emphasizes transparency and portability:<br> <a href="https://github.com/ubicloud/ubicloud">https://github.com/ubicloud/ubicloud</a></p><p><strong>Costs 3x less</strong><br>Second, we are previewing a managed version of Ubicloud PostgreSQL, which costs 3x less compared to AWS RDS, Azure PostgreSQL, and other major providers:</p></div><p><img src="https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579045bf4a0d1ee95387b2a_Screenshot%202023-12-13%20at%202.03.46%E2%80%AFAM.png" loading="lazy" sizes="(max-width: 479px) 93vw, (max-width: 767px) 92vw, (max-width: 991px) 94vw, (max-width: 1439px) 72vw, 864px" srcset="https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579045bf4a0d1ee95387b2a_Screenshot%202023-12-13%20at%202.03.46%E2%80%AFAM-p-500.png 500w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579045bf4a0d1ee95387b2a_Screenshot%202023-12-13%20at%202.03.46%E2%80%AFAM-p-800.png 800w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579045bf4a0d1ee95387b2a_Screenshot%202023-12-13%20at%202.03.46%E2%80%AFAM-p-1080.png 1080w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/6579045bf4a0d1ee95387b2a_Screenshot%202023-12-13%20at%202.03.46%E2%80%AFAM.png 1266w" alt=""></p><p>Pricing <a href="https://www.ubicloud.com/docs/managed-postgresql/price-performance">scales</a> linearly from our &lt;standard-2&gt; to &lt;standard-16&gt; instances, with billing in minutely increments.</p><h3>Key features and performance</h3><div><p>We run our open and portable Ubicloud PostgreSQL control plane, on Hetzner data centers in Germany. The low cost of the bare metal instances from Hetzner allows us to pass those low prices to you. We are also working to introduce more regions in the new year.&nbsp;</p><p>Performance matters for databases, and Ubicloud PostgreSQL is competitive with the big cloud vendors âsometimes faster, depending on your workload. Here are the numbers using the standard pgbench benchmark <a href="https://www.ubicloud.com/docs/managed-postgresql/price-performance">(more here)</a>.</p></div><p><img src="https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/657904d9dc6cb18dfca17808_Screenshot%202023-12-13%20at%202.05.37%E2%80%AFAM.png" loading="lazy" sizes="(max-width: 479px) 93vw, (max-width: 767px) 92vw, (max-width: 991px) 94vw, (max-width: 1439px) 72vw, 864px" srcset="https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/657904d9dc6cb18dfca17808_Screenshot%202023-12-13%20at%202.05.37%E2%80%AFAM-p-500.png 500w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/657904d9dc6cb18dfca17808_Screenshot%202023-12-13%20at%202.05.37%E2%80%AFAM-p-800.png 800w, https://assets-global.website-files.com/64f9d9b4e737e7b37d4e39a4/657904d9dc6cb18dfca17808_Screenshot%202023-12-13%20at%202.05.37%E2%80%AFAM.png 1066w" alt=""></p></div><p>While running fast at a lower cost, we provide a managed database experience on the latest version of PostgreSQL, v16.1, with automatic backups, point-in-time-restore to the minute. We use dedicated VMs for each database, with encryption at-rest and in-transit to keep your data secure.</p><div id="enter-billing"><h3><strong>What workloads are best suited for Ubicloud PostgreSQL today?</strong></h3><p>We are building Ubicloud Postgres as a general purpose PostgreSQL service. Even in its earliest and current version, it can be particularly useful when:<br></p><ul role="list"><li>You are already using Hetzner data centers, where there is currently no managed PostgreSQL offering.<br></li><li>Your cloud PostgreSQL bill is going up; and you want to offload your dev and/or analytics-heavy instances to a fast, inexpensive cloud&nbsp;</li></ul></div><p id="create-vm"><h3>Getting started</h3></p><div><p>Weâd love to have you try Ubicloud Postgres, and share your feedback with us. For our managed Postgres service, we are offering the first 10 companies that sign up 50% off for the first 3 months. We will also be happy to take a look at your PostgreSQL setup, and give you any feedback for improving your Postgres usage.&nbsp;</p><p>You can use our docs to get started; then send us an email at support@ubicloud.com to claim your credit.<a href="https://www.ubicloud.com/docs/managed-postgresql/quickstart-copy"><br>â</a><a href="https://www.ubicloud.com/docs/managed-postgresql/quickstart">https://www.ubicloud.com/docs/managed-postgresql/quickstart<p>â</p></a>To talk about your PostgreSQL setup on RDS, Heroku, other providers, and see whether complementing it with Ubicloud PostgreSQL makes sense, you can set up time with the founders <a href="https://calendly.com/ubicloud/postgres">here.</a> <a href="https://calendly.com/ubicloud/postgres"><p>â</p></a>Building an open cloud, with all its key services, will require your help. If you'd like to contribute to the Ubicloud project, please take a look at <a href="https://github.com/ubicloud/ubicloud">our repo</a> on Github. If you have any use-cases where you think Ubicloud could be particularly helpful, just drop us a line at <a href="mailto:support@ubicloud.com">support@ubicloud.com</a>. Weâd love to talk!</p></div></div></div>]]></description>
        </item>
    </channel>
</rss>