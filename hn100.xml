<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 04 May 2025 22:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[I'd rather read the prompt (283 pts)]]></title>
            <link>https://claytonwramsey.com/blog/prompt/</link>
            <guid>43888803</guid>
            <pubDate>Sun, 04 May 2025 19:17:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://claytonwramsey.com/blog/prompt/">https://claytonwramsey.com/blog/prompt/</a>, See on <a href="https://news.ycombinator.com/item?id=43888803">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>When I grade students’ assignments, I sometimes see answers like this:</p>
<blockquote>
<p>Utilizing Euler angles for rotation representation could have the following possible downsides:</p>
<ul>
<li><strong>Gimbal lock</strong>: In certain positions, orientations can reach a singularity, which prevents them from continuously rotating without a sudden change in the coordinate values.</li>
<li><strong>Numeric instability</strong>: Using Euler angles could cause numeric computations to be less precise, which can add up and produce inaccuracies if used often.</li>
<li><strong>Non-unique coordinates</strong>: Another downside of Euler angles is that some rotations do not have a unique representation in Euler angles, particularly at singularities.</li>
</ul>
<p>The downsides of Euler angles make them difficult to utilize in robotics.
It’s important to note that very few implementations employ Euler angles for robotics.
Instead, one could use rotation matrices or quaternions to facilitate more efficient rotation representation.</p>
<p><em>[Not a student’s real answer, but my handmade synthesis of the style and content of many answers]</em></p>
</blockquote>
<p>You only have to read one or two of these answers to know exactly what’s up: the students just copy-pasted the output from a large language model, most likely ChatGPT.
They are invariably verbose, interminably waffly, and insipidly fixated on the bullet-points-with-bold style.
The prose rarely surpasses the sixth-grade book report, constantly repeating the prompt, presumably to prove that they’re staying on topic.</p>
<p>As an instructor, I am always saddened to read this.
The ChatGPT rhetorical style is distinctive enough that I can catch it, but not so distinctive to be worth passing along to an honor council.
Even if I did, I’m not sure the marginal gains in the integrity of the class would be worth the hours spent litigating the issue.</p>
<p>I write this article as a plea to everyone: not just my students, but the blog posters and Reddit commenters and weak-accept paper authors and Reviewer 2.
<strong>Don’t let a computer write for you!</strong>
I say this not for reasons of intellectual honesty, or for the spirit of fairness.
I say this because I believe that your original thoughts are far more interesting, meaningful, and valuable than whatever a large language model can transform them into.
For the rest of this piece, I’ll briefly examine some guesses as to why people write with large language models so often, and argue that there’s no good reason to use one for creative expression.</p>
<h2 id="why-do-people-do-this">Why do people do this?</h2>
<p>I’m not much of a generative-model user myself, but I know many people who heavily rely upon them.
From my own experience, I see a few reasons why people use such models to speak for them.</p>
<p><strong>It doesn’t matter.</strong>
I think this belief is most common in classroom settings.
A typical belief among students is that classes are a series of hurdles to be overcome; at the end of this obstacle course, they shall receive a degree as testament to their completion of these assignments.
I think this is also the source of increasing language model use in in <a href="https://arxiv.org/abs/2403.07183">paper reviews</a>.
Many researchers consider reviewing ancillary to their already-burdensome jobs; some feel they cannot spare time to write a good review and so pass the work along to a language model.</p>
<p><strong>The model produces better work.</strong>
Some of my peers believe that large language models produce strictly better writing than they could produce on their own.
Anecdotally, this phenomenon seems more common among English-as-a-second-language speakers.
I also see it a lot with first-time programmers, for whom programming is a set of mysterious incantations to be memorized and recited.
I think this is also the cause of language model use in some forms of <a href="https://arxiv.org/abs/2404.01268">academic writing</a>: it differs from the prior case with paper reviews in that, presumably, the authors believe that their paper matters, but don’t believe they can produce sufficient writing.</p>
<p><strong>There’s skin in the game.</strong>
This last cause is least common among individuals, but probably accounts for the overwhelming majority of language pollution on the Internet.
Examples of skin-in-the-game writing include astroturfing, customer service chatbots, and the rambling prologues found in online baking recipes.
This writing is never meant to be read by a human and does not carry any authorial intent at all.
For this essay, I’m primarily interested in the motivations for private individuals, so I’ll avoid discussing this much; however, I have included it for sake of completeness.</p>
<h2 id="why-do-we-write-anyway">Why do we write, anyway?</h2>
<p>I believe that the main reason a human should write is to <em>communicate original thoughts</em>.
To be clear, I don’t believe that these thoughts need to be special or academic.
Your vacation, your dog, and your favorite color are all fair game.
However, these thoughts should be <em>yours</em>: there’s no point in wasting ink to communicate someone else’s thoughts.</p>
<p>In that sense, using a language model to write is worse than plagiarism.
When copying another person’s words, one doesn’t communicate their own original thoughts, but at least they are communicating a human’s thoughts.
A language model, by construction, has no original thoughts of its own; publishing its output is a pointless exercise.</p>
<p>Returning to our reasons for using a language model, we can now examine them once more with this definition in mind.</p>
<h3 id="if-it-s-not-worth-doing-it-s-not-worth-doing-well">If it’s not worth doing, it’s not worth doing well</h3>
<p>The model output in the doesn’t-matter category falls under two classes to me: the stuff that actually doesn’t matter and the stuff that actually does matter.
I’ll start with the things that don’t matter.
When someone comments under a Reddit post with a computer-generated summary of the original text, I honestly believe that everyone in the world would be better off had they not done so.
Either the article is so vapid that a summary provides all of its value, in which case, it does not merit the engagement of a comment, or it demands a real reading by a real human for comprehension, in which case the summary is pointless.
In essence, writing such a comment wastes everyone’s time.
This is the case for all of the disposable uses of a model.</p>
<p>Meanwhile, there are uses which seem disposable at a surface-level and which in practice are not so disposable (the actually-does-matter category).
I should hope that the purpose of a class writing exercise is not to create an artifact of text but force the student to think; a language model produces the former, not the latter.
For paper reviewers, it’s worse: a half-assed review will produce little more than make-work for the original authors and tell the editor nothing they didn’t already know.</p>
<h3 id="if-it-s-worth-doing-it-s-worth-doing-badly">If it’s worth doing, it’s worth doing badly</h3>
<p>I’ll now cover the opposite case: my peers who see generative models as superior to their own output.
I see this most often in professional communication, typically to produce fluff or fix the tone of their original prompts.
Every single time, the model obscures the original meaning and adds layers of superfluous nonsense to even the simplest of ideas.
If you’re lucky, it at least won’t be wrong, but most often the model will completely fabricate critical details of the original writing and produce something completely incomprehensible.
No matter how bad any original human’s writing is, I can (hopefully?) trust that they have some kind of internal understanding to share; with a language model, there is no such luck.</p>
<p>I have a little more sympathy for programmers, but the long-term results are more insidious.
You might recall Peter Naur’s <cite>Programming as Theory Building</cite>: writing a sufficiently complex program requires not only the artifact of code (that is, the program source), but a <dfn>theory</dfn> of the program, in which an individual must fully understand the logical structure behind the code.
Vibe coding; that is, writing programs almost exclusively by language-model generation; produces an artifact with no theory behind it.
The result is simple: with no theory, the produced code is practically useless.
In Naur’s terms, such a program is <dfn>dead</dfn>; in our case, it’s stillborn.
It should come as no surprise that nearly every vibe-coded app on the Internet struggles with security issues; look no further than <a href="https://news.ycombinator.com/item?id=43553031#43554611">the vibe-coded recipe app that leaks its OpenAI keys</a>.
Every time one generates code by prompt, they create a new stillborn program; vibe coding is the art of stitching together their corpses into Frankenstein’s monster.</p>
<h2 id="an-annotated-exercise">An annotated exercise</h2>
<p>As an experiment, I copied the thesis statement of this essay into Google Gemini and prompted it to complete the essay.
Below the spoiler is its complete response.</p>
<details>
  <summary>The complete prompt and output.</summary>
<p>Prompt:</p>
<blockquote>
<p>The following is an introduction to a short essay which I have written. Complete the essay by writing 2 short paragraphs.</p>
<p>I write this article as a plea to everyone: not just my students, but the blog posters and Reddit commenters and weak-accept paper authors and Reviewer 2.
<strong>Don’t let a computer write for you!</strong>
I say this not for reasons of intellectual honesty, or for the spirit of fairness.
I say this because I believe that your original thoughts are far more interesting, meaningful, and valuable than whatever a large language model can transform them into.
For the rest of this piece, I’ll briefly examine some guesses as to why people write with large language models so often, and argue that there’s no good reason to use one for creative expression.</p>
</blockquote>
<p>Output:</p>
<blockquote>
<p>It’s fascinating to consider why so many are turning to large language models for writing. Perhaps it stems from a desire for efficiency, a wish to quickly generate text without the perceived effort of crafting each sentence. The allure of instant output can be strong, especially in a world that often prioritizes speed. For students facing deadlines, or blog posters needing content, the temptation to shortcut the writing process might feel overwhelming. There could also be a sense of insecurity, a feeling that one’s own writing isn’t “good enough” and that a language model can somehow elevate it. This might be particularly true for those navigating the often critical world of academic reviews or the sometimes harsh landscape of online commentary.</p>
<p>However, this reliance on artificial intelligence fundamentally misunderstands the very essence of creative expression. Your individual voice, shaped by your unique experiences, perspectives, and even your struggles to articulate an idea, is what makes your writing resonate. A language model, trained on vast datasets of existing text, can only ever produce a pastiche, a reflection of what has already been said. It lacks the spark of genuine insight, the unexpected turn of phrase that comes from wrestling with a concept until it becomes your own. To surrender your voice to an algorithm is to diminish the potential for true connection and the profound satisfaction of communicating your own original thoughts to the world.</p>
</blockquote>
</details>
<p>The resulting text is, put plainly, <em>boring</em>.
In its 234-word output, the model produces merely a lengthy rehash of the same prompt.
Tonally, it provides no more than sweeping and pointless generality, and any points earned for its brobdingnagian vocabulary are immediately lost to its total lack of taste in using it.
For example, consider the following sentence:</p>
<blockquote>
<p>Perhaps it stems from a desire for efficiency, a wish to quickly generate text without the perceived effort of crafting each sentence.</p>
</blockquote>
<p>Gemini has produced a big sentence for a small thought.
I can trivially cut two-thirds of it and remove nothing of substance:</p>
<blockquote>
<p>Perhaps it stems from a desire for efficiency.</p>
</blockquote>
<p>With some care, I can trim it a little more.</p>
<blockquote>
<p>Perhaps people do it for efficiency.</p>
</blockquote>
<p>So, in short, a language model is great for making nonsense, and not so great for anything else.</p>
<h2 id="just-show-me-the-prompt">Just show me the prompt</h2>
<p>I now circle back to my main point: I have never seen any form of create generative model output (be that image, text, audio, or video) which I would rather see than the original prompt.
The resulting output has less substance than the prompt and lacks any human vision in its creation.
The whole point of making creative work is to share one’s own experience - if there’s no experience to share, why bother?
If it’s not worth writing, it’s not worth reading.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AI code is legacy code (123 pts)]]></title>
            <link>https://text-incubation.com/AI+code+is+legacy+code+from+day+one</link>
            <guid>43888225</guid>
            <pubDate>Sun, 04 May 2025 17:53:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://text-incubation.com/AI+code+is+legacy+code+from+day+one">https://text-incubation.com/AI+code+is+legacy+code+from+day+one</a>, See on <a href="https://news.ycombinator.com/item?id=43888225">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Design for 3D-Printing (284 pts)]]></title>
            <link>https://blog.rahix.de/design-for-3d-printing/</link>
            <guid>43888117</guid>
            <pubDate>Sun, 04 May 2025 17:38:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.rahix.de/design-for-3d-printing/">https://blog.rahix.de/design-for-3d-printing/</a>, See on <a href="https://news.ycombinator.com/item?id=43888117">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-div">
  <p>Over the past years, I have gotten deeper and deeper into 3d-printing.  One
thing that fascinates me a lot is how different it is from other manufacturing
methods.  And how this, in turn, means a completely different design philosophy
is needed to create good designs for 3d-printing.</p>
<p>As such, I have been collecting the little tricks and rules for designing
well-printable parts.  And of course I am always on the hunt for more.  In this
blog post I want to share all that I have learned.</p>

<p><span>
  <p><img alt="Design for 3d-printing" src="https://blog.rahix.de/design-for-3d-printing/title.jpg">
    
  </p>
</span>
<span id="continue-reading"></span></p><h2 id="introduction">Introduction<a href="#introduction"><i></i></a>
</h2>
<p>While a lot can be found online about the basics of design for 3d-printing,
there is not that much material that dives into it in-depth.  And even less
common are good overviews that collect all the little tricks that people have
discovered.</p>
<p>I believe the best format for teaching the rules of well-printable design is a
format that is built on rules of thumb and many practical examples.  While such
heuristic rules will never encompass the whole complexity of the real world, I
think they can provide a tangible guide towards the best solution in each
situation.  They also provide a starting point for building your own intuition
about the topic.</p>
<p>This approach is close in spirit to the german book <em>Konstruktionspraxis im
Maschinenbau</em> by Gerhard Hoenow and Thomas Meißner (<a href="https://www.hanser-kundencenter.de/fachbuch/artikel/9783446464858">Hanser
Fachbuch</a>, ISBN 978-3-446-46485-8). The book follows
the same philosophy, but for traditional manufacturing methods.  If you like
this style, that book might interest you as well.</p>
<h4 id="scope">Scope<a href="#scope"><i></i></a>
</h4>
<p>Before diving in, a few words about the scope of this blog post:  First, I am
explicitly focusing on FDM/FFF printing (<a href="https://en.wikipedia.org/wiki/Fused_filament_fabrication">Wikipedia</a>).  A lot of
the rules are specifically tied to the restrictions of this process and do not
apply to other additive manufacturing methods.</p>
<p>Second, I am focusing on designing functional parts with optimal mechanical
properties.  These parts should be easy to print, without requiring much
printer fine-tuning.  They should be easy to produce in higher quantity, which
means they should require as little post-processing and waste as little
material as possible.  Aesthetics do not play a primary role, although I firmly
believe that great mechanical design just looks incredibly beautiful :)</p>
<h4 id="goals-of-design-engineering">Goals of Design Engineering<a href="#goals-of-design-engineering"><i></i></a>
</h4>
<p>Any mechanical design ultimately must be optimized for a large number of
objectives and constraints.  Your job as the designer is to create a part that
fits best between them all.</p>
<p>The most universal objectives are:</p>
<ul>
<li><strong>Design according to force</strong> — Parts should be designed such that their
geometry is optimal for the forces it has to transmit and withstand.</li>
<li><strong>Design according to manufacturing method</strong> — Often called <em>DFM</em>
(Design For Manufacturing), parts should be designed such that they are
easy to produce.  Little changes, which usually don't affect functionality,
can often make a part <em>much</em> simpler to manufacture.</li>
<li><strong>Design according to cost</strong> — Parts should be as cheap as possible.
With 3d-printing, this means minimizing material use and print time.</li>
</ul>
<p>Of course, any real world project will have many more objectives and a lot of
other constraints that the design must comply with.</p>
<p>In this blog post, I will focus on topics related to design for manufacturing
with a 3d-printer.  In general, the rules for other objectives are the same,
regardless of manufacturing process.  However, there are some places where
3d-printing does influence these other objectives and I will also highlight
such cases.</p>
<p>An important distinction that I need to make at this point is how the approach
of design engineering attacks the problem from the completely opposite side
compared to, for example, slicer developers and 3d-printer manufacturers.
While they aim for improving the manufacturing process itself, to better print
any possible part geometry, a design engineer instead aims for adapting the
part geometry to best work with the current state of the the manufacturing
processes.</p>
<p>To give an example, a design engineer aims to use the most coarse tolerance on
each dimension that still allows the part to function.  A 3d-printer
manufacturer wants their machine to print with the most tight tolerance they
can achieve.  While the design engineer could try making use of this most tight
tolerance, this will make the part impossible to manufacture using cheaper
printers and thus drive up cost and limit possible suppliers for a part.</p>
<p>This can be summarized as aiming for <em>portable design</em>.  A portably designed
part can be printed by anyone on any printer with ease.  If you intend to share
your designs online, this should definitely be a priority.</p>
<p>Finally, it is also important to keep in mind that due to the rapid innovation
in the 3d-printing scene, we are working with a moving target.  As the
3d-printers and slicer software get improved, some of the design rules will
become less important.</p>
<h4 id="terminology">Terminology<a href="#terminology"><i></i></a>
</h4>
<p>To make sure everyone is on the same page, let's quickly review the most
important terminology of FFF 3d-printing that will be used in the following
chapters:</p>
<ul>
<li><strong>Layers</strong> — The horizontal cross-sections of a part that are stacked
on top of one another to create the part (<a href="https://help.prusa3d.com/article/layers-and-perimeters_1748#layer-height">Layer height — Prusa
Knowledge Base</a>).</li>
<li><strong>Perimeters</strong> — On each layer, the 3d-printer will first print the
outline of the cross-section.  This outline consists of a number of perimeter
lines (<a href="https://help.prusa3d.com/article/layers-and-perimeters_1748#perimeters">Perimeters — Prusa Knowledge Base</a>).</li>
<li><strong>Shell</strong> — If you think of only the perimeters on each layer, you get
a completely hollow object:  The <em>shell</em> of the part.</li>
<li><strong>Infill</strong> — Inside the perimeters, the 3d-printer "fills" the space
using a partially hollow pattern.  This is the infill pattern (<a href="https://help.prusa3d.com/article/infill_42">Infill
— Prusa Knowledge Base</a>).</li>
<li><strong>Infill Percentage</strong> — How much of the infill pattern is solid vs.
empty space (<a href="https://help.prusa3d.com/article/infill_42">Infill — Prusa Knowledge Base</a>).</li>
<li><strong>Overhang</strong> — When the cross-section of a layer gets larger than the
previous layer, a part of the perimeter lines will not be supported by
material from below.  This is called an <em>overhang</em> and is actually possible
as long as the overhang is not too large.  Mostly, people talk about the
angle of an overhang when looking at the layers from the side.</li>
<li><strong>Bridges</strong> — While overhangs can become problematic, one thing
3d-printers are surprisingly good at is bridging gaps between two supporting
surfaces.  This is called a <em>bridge</em>.</li>
<li><strong>Seam</strong> — The <em>seam</em> is the point where the printer starts and stops
laying a perimeter.  This point is usually well visible as a perfectly smooth
transition is very hard to achieve (<a href="https://help.prusa3d.com/article/seam-position_151069">Seam position — Prusa Knowledge
Base</a>)</li>
</ul>
<h4 id="the-standard-printer-profile">The Standard Printer Profile<a href="#the-standard-printer-profile"><i></i></a>
</h4>
<p>One final topic before we can dive in.  To achieve the aforementioned <em>portable
designs</em>, it is useful to define a design target for your work.  Namely a rough
outline of the 3d-printer and profile that the design will be printed with.</p>
<p>While most of the following rules are relevant regardless, I will need to make
some assumptions.  Especially for all the numbers I will mention, a design
target is needed for context.  Otherwise values for expectable tolerances and
empirical dimensional recommendations will have no meaning.</p>
<p>As such, here is my definition of the <em>standard printer profile</em>.  Cutting
across the current market of 3d-printers, the vast majority are compatible with
the following expectations.  A lot of the expectations are intentionally kept
quite vague — we must not assume too much, to keep the designs
<em>portable</em>.</p>
<ul>
<li>The standard 3d-printer is using an 0.4&nbsp;mm nozzle.</li>
<li>The standard profile prints at 0.2&nbsp;mm layer height.</li>
<li>The standard 3d-printer is calibrated such that no considerable dimensional
deviation is caused by error in the steps/mm setting.  Skew between the axes
is negligible.</li>
<li>Print speeds are tuned to an adequate level but we cannot assume the printer
to be free of artifacts like slight overshoot and ringing.</li>
<li>Bridging across reasonable distances is reliable.</li>
<li>Overhangs print fine.</li>
<li>Bed adhesion is adequate and does not pose an issue for non-extreme geometry.</li>
</ul>
<h2 id="design-rules">Design Rules<a href="#design-rules"><i></i></a>
</h2>
<p>Table of Contents</p>
<ol>
<li><a href="https://blog.rahix.de/design-for-3d-printing/#1-designing-for-part-strength">Designing for Part Strength</a></li>
<li><a href="https://blog.rahix.de/design-for-3d-printing/#2-manufacturing-tolerance-and-part-finish">Manufacturing Tolerance and Part Finish</a></li>
<li><a href="https://blog.rahix.de/design-for-3d-printing/#3-process-optimization">Process Optimization</a></li>
<li><a href="https://blog.rahix.de/design-for-3d-printing/#4-functional-integration">Functional Integration</a></li>
<li><a href="https://blog.rahix.de/design-for-3d-printing/#5-beyond-plastic-machine-elements">Beyond plastic - Machine Elements</a></li>
<li><a href="https://blog.rahix.de/design-for-3d-printing/#6-appearance">Appearance</a></li>
<li><a href="https://blog.rahix.de/design-for-3d-printing/#7-extra-vase-mode-design">Extra: Vase Mode Design</a></li>
</ol>
<h2 id="1-designing-for-part-strength">1. Designing for Part Strength<a href="#1-designing-for-part-strength"><i></i></a>
</h2>
<p>The first rules I will present are related to designing parts that are as
strong as possible.  In 3d-printing, the strength of a part is inherently tied
to the manufacturing process.  For one, the parts are partly hollow and thus
behave quite differently than a solid block of plastic.  Second, the layered
manufacturing process leads to anisotropic parts — meaning their
mechanical properties differ depending on direction (<a href="https://en.wikipedia.org/wiki/Anisotropy#Materials_science_and_engineering">Wikipedia</a>).</p>
<p>Thus, beyond general design rules for part strength, a few additional
considerations should be made when designing parts for 3d-printing.</p>
<h4 id="part-orientation">Part Orientation<a href="#part-orientation"><i></i></a>
</h4>
<p>Let's start with the most obvious:  3d-printed parts are much weaker in the
direction of pulling apart the layers.  Thus, before starting on a design, you
should first consider the direction of tensile forces in your part and use them
to decide on a print orientation.  All further design should then be done with
this print orientation in mind.</p>
<p>
    <a href="#rule-R1.1"><i></i></a>
    <strong>R1.1</strong> 
    —
    Tensile forces should be aligned parallel to the print surface.
  </p>
<p>This is probably the number one rule that everyone talks about in design for
3d-printing.  And that is for good reason because the difference it makes is
substantial.  Tests performed by My Tech Fun indicate roughly 3 times more strength in
ideal orientation (<a href="https://www.youtube.com/watch?v=ZiQek0wei1g">YouTube</a>).  While the exact ratio
will depend heavily on the individual part, I think this is a good indicator of
how important this topic is.</p>

<p><span>
  <div>
    <p><img alt="good and bad print orientation" src="https://blog.rahix.de/design-for-3d-printing/Screw-Thread-Orientation.png"></p><p>A threaded part designed for upright printing (not ideal for tensile loading)
and one designed for printing flat on the bed.  By cutting away a part of the
thread, it can be printed lying flat on the print bed, without supports.</p>
    
  </div>
</span></p><p>You should also keep in mind that tensile forces are exerted to some cross
section of a part when bending it.  This means that you should also align any
bending moments parallel to the print surface.  A place where this often fails
is printed clips, which bend slightly to clip into their counterpart.  Such
features will break easily when not oriented correctly.</p>

<p><span>
  <div>
    <p><img alt="good and bad orientation of printed clip" src="https://blog.rahix.de/design-for-3d-printing/Clip-Orientation.png"></p><p>Clips like the one on the left do not survive many uses before breaking.</p>
    
  </div>
</span></p><p>I also want to give a small tip here about sharing your designs on platforms
like <a href="https://www.printables.com/">Printables</a>:  Make sure you upload your
models in the correct print orientation.  While the correct orientation may
seem obvious to you, others might not know and they will try printing your part
without reorienting it first.  You'll do them a small favor by uploading
correctly oriented files 🙂</p>
<h4 id="when-no-orientation-works">When no orientation works<a href="#when-no-orientation-works"><i></i></a>
</h4>
<p>Especially with complex parts, in some cases, no print
orientation is ideal.  While it is often fine to make a trade-off and accept
limited strength in certain locations, one alternative should always be kept in
mind:</p>
<p>
    <a href="#rule-R1.2"><i></i></a>
    <strong>R1.2</strong> 
    —
    Split a part into multiple pieces when no orientation is ideal for all loads.
  </p>
<p>As each piece gets printed individually, you are completely free to choose
the optimal orientation for each one.  Clever joints can be used to easily
assemble the whole part afterwards.  Just to mention one:  Dovetail joints have
proven themselves for 3d-printing, as they are well-printable in most orientations.</p>

<p><span>
  <div>
    <p><img alt="two parts with a dovetail joint" src="https://blog.rahix.de/design-for-3d-printing/Dovetail.png"></p><p>A dovetail joint is used to attach two halves of a part so that each piece
can be printed in an improved orientation.</p>
    
  </div>
</span></p><h4 id="to-infill-or-not-to-infill">To infill or not to infill<a href="#to-infill-or-not-to-infill"><i></i></a>
</h4>
<p>Contrary to the first rule, a topic that is not talked about enough in my eyes
is the role of infill in part strength.  There is a big misconception that you
can magically give your part ultimate strength by just using 100% infill.  While you
will certainly see an increase in strength, this method is not efficient at all
— most of the additional material does not contribute to part strength
and is just waste and an unnecessary increase of print time.</p>
<p>Why?  It all has to do with the distribution of force inside of a part.
Generally, most parts are not stressed in pure tension or compression.  Instead,
a lot of stress is applied in the form of bending moments and those distribute
the force unevenly.  The force will be greatest in places furthest away from
the center (neutral axis).  Thus, it is generally more effective for additional
material to be added at the surface, not the center of a part.</p>

<p><span>
  <div>
    <p><img alt="bending stress" src="https://blog.rahix.de/design-for-3d-printing/stress-concentration.png"></p><p>Stress is highest directly beneath the surface of the part.  Notice the blue
neutral axis in the middle, where stress is lowest.</p>
    
  </div>
</span></p><p>In 3d-printer speak, this means you should increase the number of
perimeters/shells rather than the infill percentage.  Stefan from CNC Kitchen
has done a thorough analysis of this (<a href="https://www.youtube.com/watch?v=AmEaNAwFSfI">YouTube</a>).</p>
<p>In general, his work is a great resource for in-depth information about the
mechanical behavior of 3d-printed parts (CNC Kitchen <a href="https://www.cnckitchen.com/">Blog/Website</a>
and <a href="https://www.youtube.com/@CNCKitchen">YouTube</a>).</p>
<p>
    <a href="#rule-R1.3"><i></i></a>
    <strong>R1.3</strong> 
    —
    Most strength comes from the part's surface, not the infill.
  </p>
<h4 id="the-flow-of-forces">The Flow of Forces<a href="#the-flow-of-forces"><i></i></a>
</h4>
<p>However, there is more to this.  We can actually influence the amount of stress
at the surface by changing the shape of the part.  This is often much more
effective than optimizing print settings.  A way to conceptualize the stress
inside of a part is to think about the forces "flowing" through it. The visual
representation of this is called a <em>force lines drawing</em>
(<a href="https://en.wikipedia.org/wiki/Force_lines">Wikipedia</a>).</p>

<p><span>
  <div>
    <p><img alt="force lines around a crack" src="https://blog.rahix.de/design-for-3d-printing/crack-force-lines.png"></p>
    
  </div>
</span></p><p>Stress will concentrate in places where the force lines are close together.
You can see how the sharp corners of the crack in the image above lead to
regions of particularly high stress and thus will probably lead to part failure
in these locations.</p>
<p>This isn't specific to 3d-printing but as it is such an important topic, I want
to include it here anyway.  The rules are generally the same for any
manufacturing method: We want to minimize stress and the best way to do it is
this:</p>
<p>
    <a href="#rule-R1.4"><i></i></a>
    <strong>R1.4</strong> 
    —
    Guide forces on the most direct path possible.
  </p>
<p>Or in other words, keep the force lines as short and straight as possible.</p>
<p>One example where this matters a lot are sharp corners.  They impact part
strength very negatively and are usually easy to avoid by simply adding a
fillet.  You can see how a fillet allows a much more direct path for the force
than a sharp corner:</p>

<p><span>
  <div>
    <p><img alt="force lines around corner and fillet" src="https://blog.rahix.de/design-for-3d-printing/force-lines-fillet.svg"></p><p>Force lines around a sharp corner vs. a corner with a fillet.</p>
    
  </div>
</span></p><h4 id="cross-sectional-considerations">Cross-sectional Considerations<a href="#cross-sectional-considerations"><i></i></a>
</h4>
<p>The inhomogeneous nature of 3d-printed parts with their shell and infill has
yet more implications for part strength that are worth talking about.  In
traditional design engineering, you are taught to reduce cross-sectional area
of a part as much as possible.  You should only keep material in places where
it has the highest effect on increasing part strength. The reason for this is
that reduced volume directly leads to reduced material usage and thus cost and
weight savings.</p>
<p>With 3d-printing, things work differently.  You can usually increase the
cross-sectional area quite a bit, without a noticeable increase in material
usage, as the infill is mostly empty space.  You should rather strive to reduce
the surface area of a part, because that is where most material is used.</p>
<p>This means that you can get away with much thicker shapes in 3d-printed parts,
which obviously benefits part strength a lot.  Don't try to work against this
artificially — if a design allows for it, go for the fattest shape
possible.</p>
<p>
    <a href="#rule-R1.5"><i></i></a>
    <strong>R1.5</strong> 
    —
    Use large cross sections.  Prefer thick shapes over thin shapes.
  </p>
<p>To give an example, think about the traditional I-beam
(<a href="https://en.wikipedia.org/wiki/I-beam">Wikipedia</a>) cross-section. The idea is that material is only kept in
the regions far away from the neutral axis of the bending moment, where it has
the highest impact on part strength.  This allows for significant weight
savings.</p>
<p>While the I-beam profile works wonders for homogeneous materials, it is not a
good idea for 3d-printing. A square cross-section of the same outer dimensions
will have comparable or better strength but usually does not lead to an
increase in material usage and print-time.  It might actually perform better in
those areas, as shown below.</p>

<p><span>
  <div>
    <p><img alt="i-beam vs square profile comparison" src="https://blog.rahix.de/design-for-3d-printing/Profile-Comparison.png"></p><p>Comparison of print times and material usage for I-beam profile and square profile.</p>
    
  </div>
</span></p><h4 id="simulation-struggles">Simulation Struggles<a href="#simulation-struggles"><i></i></a>
</h4>
<p>In traditional mechanical engineering, whenever a part needs to be evaluated
for its strength, the tool of choice is simulation.  Simulation allows making
accurate prediction of a part's behavior under load without needing to
manufacture it.  Especially for parts made from expensive materials or made using
expensive manufacturing methods, performing simulations beforehand is critical
for the project's budget.</p>
<p>Unfortunately, simulation quickly breaks down when trying to analyze 3d-printed
parts.  The problem is, once again, the inhomogeneous nature of 3d-printing.
While stress analysis may still be useful to find critical areas to give
attention to, extracting realistic values for limiting forces is a lost cause.</p>
<p>Luckily, there is an alternative to simulations that 3d-printing offers.  The
exceptionally low cost of manufacturing 3d-printed parts means that printing
prototypes for testing mechanical properties is often the most cost-effective
solution.  Need to find yield strength of a design?  Just print a few copies
and empirically determine it.</p>
<p>However, there is one things to be careful with: While I see test-prints as a
great way to determine mechanical properties, I advise to not rely on them for
determining dimensional accuracy.  I will go into more detail on my reasons for
this in the next chapter.</p>
<p>Finally, an implication of the above is that <em>topology optimization</em>
(<a href="https://en.wikipedia.org/wiki/Topology_optimization">Wikipedia</a>) is not really well suited for FFF 3d-printing.
While it is amazing for other additive manufacturing processes, current tools
are usually not able to produce designs that would truly be optimal for FFF
3d-printing.  Not to speak of the often less-than-ideal printability of such
parts.</p>
<h2 id="2-manufacturing-tolerance-and-part-finish">2. Manufacturing Tolerance and Part Finish<a href="#2-manufacturing-tolerance-and-part-finish"><i></i></a>
</h2>
<p>Next, I want to talk about optimizing your design to improve manufacturing
tolerances.  Certain shapes will generally print cleaner than others.
If you take this into consideration during design, you can achieve parts that
fit on first print and won't need endless tweaking of the slicer settings and
printer.  A welcome side-effect of improved tolerance is a cleaner part finish
as well.  Thus, the following chapter covers both: Manufacturing tolerance and
part finish.</p>
<h4 id="chamfers-vs-fillets">Chamfers vs. Fillets<a href="#chamfers-vs-fillets"><i></i></a>
</h4>
<p>To start, let's talk about edges.  Generally, mechanical parts should avoid
sharp edges because they are unpleasant to touch.  Any good design breaks edges
by either adding a round fillet or a 45° chamfer of appropriate size.</p>
<p>While the choice between the two is often made for stylistic reasons, there are
actually some rather important printability aspects to it.  There are two
situations that we have to look at, distinguished by the print orientation of
the edge:</p>
<p>Adding a fillet or chamfer to edges <em>parallel</em> to the print surface means the
feature will be built up from multiple layers, potentially with overhang.
Fillets are not well suited for this. They start with an incredibly steep
overhang that will not print well.  Often, such fillets will have large
surface deviations.  Even if no overhang is involved, when the
fillet sits on top, the changing curvature will make the layer steps very
visible, degrading the part finish.  Chamfers are much better suited in this
orientation.  They have a constant overhang angle, leading to a very consistent
layer stepping, which looks a lot more pleasing.</p>

<p><span>
  <div>
    <p><img alt="fillets and chamfers horizontal" src="https://blog.rahix.de/design-for-3d-printing/Chamfer-And-Fillet-Vertical.png"></p><p>Fillets and chamfers on edges parallel to the print surface.  The blue
perimeter on the bottom of the fillet marks an unsupported overhang.</p>
    
  </div>
</span></p><p>Contrary, edges <em>vertical</em> to the print surface are much better suited for
fillets.  A fillet means that the printer does not have to make sharp corners
while laying the perimeters.  This reduces print-head acceleration and thus
reduces surface artifacts (ringing, overshoot).  A chamfer on such edges will
have two sharp corners, which will never look as pretty and will never achieve
the same tolerances as a round fillet.</p>

<p><span>
  <div>
    <p><img alt="fillets and chamfers vertical" src="https://blog.rahix.de/design-for-3d-printing/Chamfer-And-Fillet-Horizontal.png"></p><p>Fillets and chamfers on edges vertical to the print surface.  The print speed
significantly decreases for the chamfer corners while the fillets can almost
keep the same velocity.</p>
    
  </div>
</span></p><p>Thus, unless stylistic choices dictate something else, the cleanest prints will
be achieved by following this rule:</p>
<p>
    <a href="#rule-R2.1"><i></i></a>
    <strong>R2.1</strong> 
    —
    Use chamfers on edges parallel to the print surface.  Use fillets on edges
vertical to the print surface.
  </p>
<h4 id="horizontal-holes">Horizontal Holes<a href="#horizontal-holes"><i></i></a>
</h4>
<p>With horizontal fillets, a major problem is the steep overhang.  There are
other design features where similar problems arise. For example, horizontally
oriented circular holes.  The larger they get, the bigger the problem will be.
The solution is to deviate from the perfect circle for a more optimized shape.
For smaller holes, a teardrop shape with a 90° angle works well.  Larger holes
can be extended to have a flat "roof".  Keep in mind that a slight amount of
additional clearance will be needed beneath the roof, due to the bridges
drooping slightly.</p>

<p><span>
  <div>
    <p><img alt="alternative horizontal holes" src="https://blog.rahix.de/design-for-3d-printing/Horizontal-Holes.png"></p><p>On the left: A ⌀4&nbsp;mm hole with a 90° teardrop.  On the right: A ⌀10&nbsp;mm hole
with a flat roof.  The roof sits 0.4&nbsp;mm above the theoretical circle so slight
drooping of the bridge won't affect the fit.</p>
    
  </div>
</span></p><p>
    <a href="#rule-R2.2"><i></i></a>
    <strong>R2.2</strong> 
    —
    Improve horizontal holes by using a teardrop shape or giving the hole a flat roof.
  </p>
<h4 id="seemingly-seamless">Seemingly Seamless<a href="#seemingly-seamless"><i></i></a>
</h4>
<p>A topic that is very important for both part finish and dimensional
tolerances is the placement of the perimeter seams.  Perimeter seams are the
point where a perimeter line starts and ends.  It is very hard to tune a
printer such that there won't be any seam artifacts.  Thus, let's put thought
into the placement of this seam so it does not interfere with any functionality
or aesthetics.</p>
<p>Usually, the seam placement is chosen automatically by the slicer.  For each
layer, it searches for the sharpest corner (concave or convex) and then places
the seam right into it.  This has proven to be a very reliable way to
produce good results without requiring any explicit user input.</p>
<p>However, this algorithm breaks down in two situations:</p>
<ol>
<li>On perfectly round perimeters, like those of a circular hole or outline.</li>
<li>When all corners have the same angle or when the sharpest corner requires
tight tolerances.</li>
</ol>
<p>Especially the first case is very relevant. This effect has severe consequences
for the tolerances you can achieve with a circular hole.  While the rest of the
perimeter may deviate by less than 0.1&nbsp;mm, the seam artifacts can easily
bump that up to 0.4&nbsp;mm.  And worse, it shifts the centerline of the hole
because the seam is only in one place.</p>
<p>The solution is simple: Add a corner where the seam can be placed without
interfering.  Instead of a perfect circle, shape the hole like a teardrop where
the corner has a 120° angle.  Note the difference to the horizontal holes
discussed previously.</p>

<p><span>
  <div>
    <p><img alt="teardrop for perimeter seam placement" src="https://blog.rahix.de/design-for-3d-printing/Teardrop-Vertical.png"></p><p>This teardrop shape allows the seam to not interfere with the circular hole
(white dots/line indicates seam placement).</p>
    
  </div>
</span></p><p>
    <a href="#rule-R2.3"><i></i></a>
    <strong>R2.3</strong> 
    —
    Use a teardrop shape for vertical holes to avoid inaccuracy due to perimeter
seams.
  </p>
<p>Similarly, if other corners must not be used for seam placement, add a small
notch somewhere that will serve as the "sharpest corner" and thus take the
seam automatically.  While you can of course also manually place the seam using
the slicer software, this trick means no slicer tweaking is needed.</p>

<p><span>
  <div>
    <p><img alt="aesthetic difference with optimized seam placement" src="https://blog.rahix.de/design-for-3d-printing/aesthetic-seam.jpg"></p><p>Difference of forcing the seam placement.  On the left, the seam destroys the
appearance of the groove in the center.  On the right, a small notch on the
back of the part takes the seam and the groove looks much better.</p>
    
  </div>
</span></p><p>To summarize:</p>
<p>
    <a href="#rule-R2.4"><i></i></a>
    <strong>R2.4</strong> 
    —
    Consider where the seam will be placed.  If tolerances are tight, provide a
sharp concave corner for the seam the hide in.
  </p>
<h4 id="expectable-tolerances-of-fff-fdm">Expectable Tolerances of FFF/FDM<a href="#expectable-tolerances-of-fff-fdm"><i></i></a>
</h4>
<p>A fundamental building block of any "design for manufacturing" is knowing the
accuracy limits of the manufacturing process.  As stated in the beginning, the
goal is to build <em>portable</em> designs, so we should assume conservative limits
instead of exhausting the capabilities of a particular printer.  Note that this
is backwards to the traditional workflow: Instead of <em>specifying</em> tolerances
that someone else then has to achieve during manufacturing, you <em>accept</em>
certain tolerances of the manufacturing process and design accordingly.</p>
<p>It also needs to be noted that a base assumption here is that the 3d-printers in
question are well-calibrated.  A machine that is out of calibration will have
an additional constant error on top of its tolerances.  For example, badly
configured <em>steps/mm</em> values will lead to a constant factor deviation of
measurements along a certain axis. Part design cannot and should not
accommodate for this — there wouldn't be much left if we tried.</p>

<p><span>
  <div>
    <p><img alt="visualization of tolerances and calibration error" src="https://blog.rahix.de/design-for-3d-printing/Tolerance-Calibration.png"></p><p>A miscalibrated printer will have a constant error on top of its general
manufacturing tolerances.</p>
    
  </div>
</span></p><p>Before we can talk about tolerance values, it is important to understand what
causes these deviations in the first place.  A tolerance value means nothing
without the context that it applies to.  In 3d-printing especially, tolerances
will vary widely depending on specific part geometry.  This topic is quite
far-reaching, as a very large number of factors play into it.  As such, this
chapter will only contain the most important things to consider.</p>
<p>Starting from the bottom, the lower bound on accuracy is due to the <em>step
resolution</em> of the printer's stepper motors and their drivers.  Fundamentally,
there is no way to get more accurate than this, as dimensions will always fall
somewhere between two step locations.  However, on state-of-the-art
3d-printers, the theoretical step resolution is around 0.01&nbsp;mm.  Whether
this value is actually achievable is debatable, but the takeaway is that step
resolution is well below the deviations caused by other effects.</p>
<p>Continuing on, there are more effects of the printer's motion system on
dimensional accuracy.  They all have to do with mechanical unrigidness of the
printer. Tuning the slicer settings and advanced motion control (input shaping)
can bring large improvements here.  However, an equally big role is played by
the geometry the print-head is printing.  Sharp corners are the worst offender
as they force the printer to maximum acceleration.  By optimizing a part for
"easy motion", tolerances of printed parts can often be improved a lot.</p>

<p><span>
  <div>
    <p><img alt="speeds around different corners" src="https://blog.rahix.de/design-for-3d-printing/Chamfer-And-Fillet-Horizontal.png"></p><p>Once again, fillets and chamfers show quite spectacularly how different the
print-head acceleration will be in different scenarios.  Sharper corners
lead to higher acceleration and will thus have worse tolerance.</p>
    
  </div>
</span></p><p>
    <a href="#rule-R2.5"><i></i></a>
    <strong>R2.5</strong> 
    —
    Design part geometry for easy motion paths while printing, to improve dimensional accuracy.
  </p>
<p>The next anti-accuracy component of a 3d-printer is the extruder and hotend.
Uneven extrusion makes the line width vary, which has an impact on the outer
dimensions of a part.  Additionally, the nozzle of the printer always slightly
drags the extruded line behind it.  This leads to circles always being slightly
undersized.  On inner circles (vertical holes), assume deviation to make the
hole smaller.  On outer circles, assume deviation to make the outer diameter
smaller, but to a lesser degree.</p>
<p>As a rule of thumb, for current popular FFF 3d-printers with an 0.4&nbsp;mm
nozzle at 0.2&nbsp;mm layer height, these effects lead to deviations in the
range of ±0.1&nbsp;mm for each surface. The deviations are shifted for circular
paths, as mentioned.  While many surfaces will be more accurate, this value is
a safe bet for surface deviation.</p>
<p>Unfortunately, while 3d-printers usually do not have a noteworthy growth in
tolerance for larger dimensions, other effects take over here: Especially
warping and shrinkage of the 3d-printed parts as they cool down.</p>
<p>Warping and shrinkage depend heavily on the choice of material, but there are
also part geometries that experience it more than others. In general, the more
voluminous a part is and the less sharp its edges are, the less warping can be
expected.  Think about the forces exerted when the material shrinks and how
the geometry can resist those forces.</p>
<p>
    <a href="#rule-R2.6"><i></i></a>
    <strong>R2.6</strong> 
    —
    Prevent warping by making parts voluminous and their surfaces smooth and rounded.  The ideal shape is a sphere.
  </p>
<h4 id="perfect-precision">Perfect Precision<a href="#perfect-precision"><i></i></a>
</h4>
<p>The previous chapter discussed what tolerances can be expected from the FFF
3d-printing process.  However, there are of course situations where more
accuracy is required.  One approach that is often used to deal with this is
experimentally determining a CAD dimension where the final part fits perfectly.
3d-printing makes this very easy because test prints are cheap and fast.
Often, 3d-printers have surprisingly good repeatability so a dimension that was
optimized using test prints can achieve quite incredible tolerances.  Some call
this the <em>goldilocks approach</em> (<a href="https://hackaday.com/2020/06/09/finding-perfect-part-fits-with-the-goldilocks-approach-and-openscad/">Hackaday</a>).</p>
<p>However, this empirical approach has a huge drawback:  It makes your design
depend heavily on the slicer settings that were used and the specific printer
that the part was printed on.  As discussed in the beginning, the goal is to
avoid such dependence as it makes the design less <em>portable</em>.</p>
<p>Luckily, there are other approaches that you can use to achieve the same goal,
but without requiring tight tolerances.  Of course, these approaches also have
their limitations.  So what is best in a given situation needs to be evaluated
on a case-by-case basis.</p>
<p>The first approach I want to discuss here is ingeniously simple.  It is best
summarized like this (and I wish I had a proper source for this quote):</p>
<p>
    <a href="#rule-R2.7"><i></i></a>
    <strong>R2.7</strong> 
    —
    If you can't make it precise, make it adjustable.
  </p>
<p>The idea is that in places where accuracy is needed, you should design your
part such that the dimension can be adjusted.  There is a huge variety of
adjustment mechanisms to choose from.  The following four examples should serve
to demonstrate the possibilities:</p>
<p><strong>Oblong holes for screws</strong> allow sliding a part into alignment.  This allows
for a large range of motion, but makes adjustments of less than 1&nbsp;mm very
difficult.  This method can also be used quite well to correct for angular
errors.</p>

<p><span>
  <div>
    <p><img alt="oblong holes for adjustment" src="https://blog.rahix.de/design-for-3d-printing/oblong-hole-adjustment.jpg"></p><p>An oblong hole is used to allow adjusting the position of a part.</p>
    
  </div>
</span></p><p><strong>Opposing screws for height adjustment</strong> allow fixing a dimension in place
quite permanently.  The natural reduction of the screws make tiny adjustments
easy to perform.  A downside is that access from both sides is needed, which is
not always easily achievable.  Adjusting such a mechanism is unfortunately a
bit tedious, because it is a constant back and forth between loosening one
screw a bit and then tightening the opposing screw again.</p>

<p><span>
  <div>
    <p><img alt="opposing screws holes for adjustment" src="https://blog.rahix.de/design-for-3d-printing/opposing-screws.png"></p><p>The two screws in the center oppose each other to finely adjust the height of the block between them.</p>
    
  </div>
</span></p><p><strong>(Grub)screws opposed by a spring or flexure</strong> are great for making adjustments
very easy.  The spring tension counteracting the screw means that turning the
screw either direction adjusts the dimension accordingly.  If required, a
second (grub)screw can be used to fix the part in place after adjusting.</p>

<p><span>
  <div>
    <p><img alt="screw with spring for adjustment" src="https://blog.rahix.de/design-for-3d-printing/spring-adjustment.jpg"></p><p>A height adjustment using a long M5 screw opposed by a spring.</p>
    
  </div>
</span></p><p><strong>Shimming with spring steel shims</strong> is the industry favorite for small
adjustments that only need to be changed very seldomly.  Premade shims in
various thicknesses are stacked to achieve the precise offset that is required.
Industrial shims are usually made from spring steel, but 3d-printed shims may be
conceivable for some applications.  However, especially for rather small
heights, small surface defects from the printing process could negatively
affect accuracy.</p>

<p><span>
  <div>
    <p><img alt="example of shimming" src="https://blog.rahix.de/design-for-3d-printing/shimming.jpg"></p><p>Crude example of a small 0.2&nbsp;mm shim being used for levelling a fixture.</p>
    
  </div>
</span></p><h4 id="engineering-fits">Engineering Fits<a href="#engineering-fits"><i></i></a>
</h4>
<p>In traditional mechanical engineering, when two parts need to fit each other
geometrically, a so-called <em>engineering fit</em> is used.  An engineering fit is a
systematic classification of the allowed dimensions for the two parts.
Usually, this system of fits is applied to holes and shafts, but it can be applied
to other shapes equally well.</p>
<p>The most important distinction is between</p>
<ul>
<li><strong>clearance fits</strong> where there is always some play between the parts, for any
of the allowed dimensions,</li>
<li><strong>transition fits</strong> where they might be play or interference,</li>
<li>and <strong>interference fits</strong> where the two parts will always interfere and thus
(significant) force is required to join them.  This is also referred to as a
<em>press fit</em>.</li>
</ul>

<p><span>
  <div>
    <p><img alt="illustrations of the different fit types" src="https://blog.rahix.de/design-for-3d-printing/engineering-fits.png"></p>
    
  </div>
</span></p><p>ISO 286 then goes on to define specific classes of fits with distinct tolerance
bands for the dimensions of the shaft and hole (<a href="https://en.wikipedia.org/wiki/Engineering_fit">Wikipedia</a>).
These are great for traditional manufacturing, but unfortunately, they are
mostly useless for 3d-printing.  We can't really print parts to a specific
tolerance — instead, the 3d-printer has an inherent tolerance that we have
to design for.</p>
<p>If tight tolerance engineering fits are required regardless, an option that
should not go unmentioned is post-processing of printed parts.  Especially for
printed holes, there is the possibility of reaming (<a href="https://en.wikipedia.org/wiki/Reamer">Wikipedia</a>)
them, to achieve, for example, an H6 fit.  That said, this option only makes
sense where absolutely required.  Otherwise, the additional effort is hard to
justify.</p>
<p>For any other cases, the choice is essentially between a clearance fit and an
interference fit.  Clearance fits are easy — a gap between the parts
that is larger than 2x the printer tolerance does the trick.  Interference fits,
on the other hand, are more difficult.  The problem is that large print
tolerances mean the forces in the interference fit vary wildly between
different parts.  In the worst case, this can even lead to joints breaking due
to excessive forces.</p>
<p>To counteract this, designs need to tolerate the large tolerances of
3d-printing.  There are a few tricks one can use here, which I will share
next.</p>
<h6 id="circles-considered-harmful">Circles Considered Harmful<a href="#circles-considered-harmful"><i></i></a>
</h6>
<p>The seemingly obvious solution for transition- or interference-fitting a
circular shape is a circular hole in your design.  However, I want to make the
point that this is rarely the best solution for 3d-printing.  Especially when
the aforementioned tolerance issues become relevant, circular holes should be
avoided.</p>
<p>Other shapes, like squares or hexagons can fit the mating part just as well but
are much more forgiving in regards to tolerance.  The reason for this can be
seen when considering how each shape deforms in interference situations.  A
circle can only widen by stretching along its circumference.  This quickly
leads to material failure when large amounts of interference need to be
compensated.  A square or hexagon, on the other hand, can bend to accommodate
the bigger diameter.  Little to no stretching of the material is present in
this case.</p>

<p><span>
  <div>
    <p><img alt="visualization of circle vs hexagon interference fit" src="https://blog.rahix.de/design-for-3d-printing/Interference-Visualization.png"></p><div>
      <p>red: oversized shaft / green: undersized circle or hexagon / grey hatching: interference regions</p>
<p>A circle has to stretch significantly while a hexagon just bends a little bit.</p>
    </div>
    
  </div>
</span></p><p>Another point in favor or the square or hexagon is the seam problem, as
discussed before.  A perfect circle will be heavily distorted by the seam while
a square can hide the seam neatly in one of its corners.</p>

<p><span>
  <div>
    <p><img alt="a hexagonal hole fits a cylinder pin" src="https://blog.rahix.de/design-for-3d-printing/Hex-Holes.png"></p><p>Hexagonal holes are used for a light press-fit with cylindrical stubs.  This
design also has two pockets to the sides of each stub that help with easy
removal.</p>
    
  </div>
</span></p><p>
    <a href="#rule-R2.8"><i></i></a>
    <strong>R2.8</strong> 
    —
    Do not use circular holes for interference fits.  Use hexagon or square holes instead.
  </p>
<p>This technique is mostly useful for smaller diameters.  The additional space
occupied by the corners can become problematic for lager holes and as such,
different design approaches should be preferred.</p>
<h6 id="crush-ribs">Crush Ribs<a href="#crush-ribs"><i></i></a>
</h6>
<p>For bigger diameters, there is another trick that can be borrowed from
injection molding. <em>Crush ribs</em> are features that are meant to be plastically
deformed during assembly. Usually, a ribbing structure is added to a hole where
the ribs can be crushed into the "valleys" between them.</p>
<p>In injection molding, these crush ribs are mainly used to work around the
required draft angle.  For 3d-printing, we can repurpose them to compensate
the printer tolerance, as described by Dan Royer (<a href="https://hackaday.com/2020/10/15/adding-crush-ribs-to-3d-printed-parts-for-a-better-press-fit/">Hackaday</a>).</p>

<p><span>
  <div>
    <p><img alt="example of crush ribs in a design" src="https://blog.rahix.de/design-for-3d-printing/Crush-Rib.png"></p><p>A blind bore with crush-ribs designed for a press-fit with a shaft.</p>
    
  </div>
</span></p><p>The ribs are dimensioned such that they still achieve the required interference
at either end of the tolerance band.  Because deforming the small ribs is much
easier than deforming an entire contact surface, the joining force is kept
within limits across the entire tolerance band.</p>

<p><span>
  <div>
    <p><img alt="tolerance considerations with crush ribs" src="https://blog.rahix.de/design-for-3d-printing/Crush-Rib-Tolerance.png"></p><p>To achieve a secure fit, the force of the minimum and maximum press-fit must be considered.</p>
    
  </div>
</span></p><p>When designing crush ribs, keep in mind that such small features are prone to
have much worse tolerance than larger features.  This has two effects:</p>
<ul>
<li>The tolerance of the crush rib shown in the drawing above will be larger than usual.</li>
<li>As the crush-rib is a convex shape, it is likely to be more undersized than oversized.</li>
</ul>
<p>To give some numbers, undersizing the crush ribs by 0.2&nbsp;mm and oversizing
the bore by 0.4&nbsp;mm lead to good results for me.</p>
<p>Something to keep in mind with crush ribs is that they should not be
reassembled more than once.  Their reliance on plastic deformation means that
the joint force will significantly decrease on reassembly.</p>
<p>
    <a href="#rule-R2.9"><i></i></a>
    <strong>R2.9</strong> 
    —
    Use crush ribs for press fits that are only assembled once.
  </p>
<h6 id="grip-fins">Grip Fins<a href="#grip-fins"><i></i></a>
</h6>
<p>Another interesting approach presented by Slant 3D is called <em>grip fins</em>
(<a href="https://www.youtube.com/watch?v=yzg_NXM-NRs">YouTube</a>).  Instead of plastic deformation, like with crush ribs,
grip fins only deform elastically.  The big advantage is of course, that such a
joint can be reassembled repeatedly, which crush ribs do not really allow for.</p>

<p><span>
  <div>
    <p><img alt="example of grip fins" src="https://blog.rahix.de/design-for-3d-printing/Grip-Fins.png"></p><p>Grip fins are an approach for tolerance compensation that use elastic deformation.</p>
    
  </div>
</span></p><p>
    <a href="#rule-R2.10"><i></i></a>
    <strong>R2.10</strong> 
    —
    Use grip fins for press fits that need to be reassembled more than once.
  </p>
<h2 id="3-process-optimization">3. Process Optimization<a href="#3-process-optimization"><i></i></a>
</h2>
<p>We have talked about designing for strength and designing for accuracy.  Let's
move closer to the manufacturing process itself.  The following chapter will
investigate ways to improve parts such that 3d-printing them gets easier,
faster, and to make parts less likely to result in failed prints.</p>
<h4 id="support-material">Support Material<a href="#support-material"><i></i></a>
</h4>
<p>The elephant in the room is certainly the topic of support material.  Support
material is used as scaffolding for features of a part that would otherwise
hang in thin air.  After printing, it is removed, to reveal the final
shape.</p>

<p><span>
  <div>
    <p><img alt="support material" src="https://blog.rahix.de/design-for-3d-printing/support-material.png"></p><p>Support material (shown in green) is used to help print an overhang that
would not be possible otherwise.</p>
    
  </div>
</span></p><p>Unfortunately, the use of support material comes with a number of drawbacks:</p>
<ul>
<li>It adds an additional post-processing step after printing.  The removal of
supports can be quite time-consuming.</li>
<li>It consumes additional material, which later turns to waste.</li>
<li>It leads to bad tolerances on supported surfaces, much worse than for the rest of the part.</li>
<li>It leaves a worse surface finish on supported surfaces.</li>
</ul>
<p>For the designer, the implication is simple:</p>
<p>
    <a href="#rule-R3.1"><i></i></a>
    <strong>R3.1</strong> 
    —
    Avoid the necessity of support material.
  </p>
<p>Yes, there are certainly many situations where using supports is the
appropriate choice.  But more often than not, slight design changes can
eliminate features that would otherwise require supports.</p>

<p><span>
  <div>
    <p><img alt="support material" src="https://blog.rahix.de/design-for-3d-printing/Support-Optimization.png"></p><p>Example of a feature that can be optimized to not require support material.</p>
    
  </div>
</span></p><p>A big role in this is played by the overall orientation of a part on the
print bed.  This was discussed previously, for part strength considerations, but
has equal effect on support requirement.  Balancing between these two is often
quite tricky.</p>

<p><span>
  <div>
    <p><img alt="showcase for the dilemma between support material and strength" src="https://blog.rahix.de/design-for-3d-printing/Support-Strength-Dilemma.png"></p><div>
      <p>The dilemma of optimizing for part strength or for avoiding supports:  The
orientation of the hook on the left part needs no supports but the force on
the hook can rip the layers apart.  The orientation on the right is ideal for
strength but needs support material.</p>
<p>In this case, the left option was chosen anyway because the forces are small
enough to not break the layers.</p>
    </div>
    
  </div>
</span></p><p>One design trick that is surprisingly powerful is the exploitation of diagonal
orientation.  Rather than keeping the rectangular shapes of a part aligned to
the printer axes, tilt the part upwards by 45°.</p>

<p><span>
  <div>
    <p><img alt="example of diagonal part orientation" src="https://blog.rahix.de/design-for-3d-printing/Diagonal-Orientation.png"></p><p>The left orientation leads to a large bridge which will leave inaccuracy and
visible artifacts.  Simply tilting the part so all the straight edges get
printed diagonally leads to all sides getting printed equally well.</p>
    
  </div>
</span></p><p>Not only does this method avoid supports or overly long bridges, it also leads to a
more uniform part finish as all faces now get printed with the same
orientation.  The easily discernible top and bottom surfaces are elegantly
avoided.</p>
<p>Of course print stability is affected by this.  You may need to include a brim
to keep such parts from falling over.  Slant 3D explores this concept of
diagonal orientation in more depth (<a href="https://www.youtube.com/watch?v=8TIhkxQNINY">YouTube</a>).</p>
<p>
    <a href="#rule-R3.2"><i></i></a>
    <strong>R3.2</strong> 
    —
    Clever part orientation on the print surface can eliminate the need for
supports.
  </p>
<h4 id="divide-and-conquer">Divide and Conquer<a href="#divide-and-conquer"><i></i></a>
</h4>
<p>Even with the best intentions, it is not always possible to make a part work
without requiring any support material.  While this may mean that it is time to
accept defeat and just print using supports, there is one last option that
should be evaluated.  It certainly isn't always the way to go, but it is worth
considering:</p>
<p>
    <a href="#rule-R3.3"><i></i></a>
    <strong>R3.3</strong> 
    —
    Split a part into multiple pieces when no orientation can avoid supports.
  </p>
<p>The trade-off here is between accepting the downsides of support material or
making assembly more complex.  Both solutions will require some amount of
post-print work, but which solution is better will always depend on the exact
circumstances.  Especially for one-off or low-volume designs, a slightly more
complex assembly is easy to justify.</p>

<p><span>
  <div>
    <p><img alt="a design where multiple parts were used to avoid supports" src="https://blog.rahix.de/design-for-3d-printing/multiple-parts.jpg"></p><p>The hooks were printed separately and then attached using screws.  This
allowed avoiding supports and also helped with optimizing print orientation
for better surface finish in critical locations (for example, the taper of
the hook).</p>
    
  </div>
</span></p><h4 id="sacrificial-layers">Sacrificial Layers<a href="#sacrificial-layers"><i></i></a>
</h4>
<p>A large number of situations where avoiding supports gets tricky are caused by
the need for printing counterbored holes upside-down.</p>

<p><span>
  <div>
    <p><img alt="counterbored hole upside-down" src="https://blog.rahix.de/design-for-3d-printing/Upside-Down-Counterbore.png"></p><p>An upside-down counterbore is problematic to print due to unsupported overhangs.</p>
    
  </div>
</span></p><p>Taking a cross-section, the problem is easily visible: The step of the
counterbore is unsupported.  Bridges won't work, because the hole in the middle
gets in the way. Using support material to help would be particularly nasty
here, because removing it from inside the hole can be very difficult.</p>
<p>One solution for this problem is the use of a <em>sacrificial layer</em>.  The idea is
simple:  Instead of an unsupported overhang, a bridge across the entire hole is
created.  This bridge is only a single layer high and only serves to
support the smaller diameter hole on top.</p>

<p><span>
  <div>
    <p><img alt="sacrificial layer" src="https://blog.rahix.de/design-for-3d-printing/Sacrificial-Layer.png"></p><p>A one layer thick bridge was added to the upside-down counterbore.  This
layer enables clean printing of the feature and can be removed easily after
printing.</p>
    
  </div>
</span></p><p>After printing, this thin layer is cut or drilled out of the part, leaving
behind the desired geometry.</p>

<p><span>
  <div>
    <p><img alt="sacrificial layer after printing" src="https://blog.rahix.de/design-for-3d-printing/sacrificial-layer-real.jpg"></p><p>This is what a sacrificial layer looks like right of the print bed.  The next
step is to cut it out using a knife or to remove it with a drill.</p>
    
  </div>
</span></p><p>Of course, upside-down counterbores aren't the only place where this trick can
be useful.  In fact, the next chapter will show an even better solution for
upside-down counterbores.  But to give an example, I have often used
sacrificial layers for the counterbore equivalent of an oblong hole.</p>
<p>
    <a href="#rule-R3.4"><i></i></a>
    <strong>R3.4</strong> 
    —
    Use sacrificial layers to avoid internal overhangs that would otherwise require supports.
  </p>
<h4 id="the-overhanging-counterbore-trick">The Overhanging Counterbore Trick<a href="#the-overhanging-counterbore-trick"><i></i></a>
</h4>
<p>Sacrificial layers are a useful tool, but they come with an additional
post-processing step.  There can also be problems with strands from the
bridging becoming loose while cutting out the sacrificial layer.  Lucky for us,
there is an even more clever way to deal with overhanging counterbores in
particular.</p>
<p>Instead of bridging over the entire hole and thus closing the through-hole on
top, bridges are only placed where they don't interfere.  Layer by layer, more
bridges are added to finally achieve the circular inner hole.</p>

<p><span>
  <p><img alt="counterbore trick stackup" src="https://blog.rahix.de/design-for-3d-printing/counterbore.png">
    
  </p>
</span></p><p>The layers of this design are as follows, from the bottom up:</p>
<ol>
<li>First, simply cut the circular counterbore to the desired depth.</li>
<li>Then, make a one layer thick cut (typically 0.2&nbsp;mm) such that only
material remains where the bridges do not run across the inner hole.  Two
strips of bridges will be left, running left and right of the inner hole.</li>
<li>On the next layer, make another one layer thick square cut with the
side length matching the inner hole diameter.  This will only leave bridges
running top and bottom of the inner hole, perpendicular to the bridges on
the layer before.</li>
<li>Finally, from the next layer on, the inner hole will be printed as a circle.
This works because the remaining bridges are small enough to not cause
issues.</li>
</ol>

<p><span>
  <div>
    <p><img alt="counterbore trick result" src="https://blog.rahix.de/design-for-3d-printing/counterbore-real.jpg"></p><p>This is what the overhanging counterbore trick looks like from below after
printing.  You can see the bridges crossing perpendicularly.</p>
    
  </div>
</span></p><p>This trick is particularly elegant because it does not require any
post-processing and it prints exceptionally cleanly.  Of course, there is a
limit to this, mostly with increasing diameters.  But unless there is a good
reason against it, this method should be your go-to for any overhanging
counterbores.</p>
<p>
    <a href="#rule-R3.5"><i></i></a>
    <strong>R3.5</strong> 
    —
    Use the overhanging counterbore trick.
  </p>
<p>For transparency, I tried finding an original source for this, but
unfortunately it isn't clear who first came up with it...</p>
<h4 id="layers-of-bridges">Layers of Bridges<a href="#layers-of-bridges"><i></i></a>
</h4>
<p>The concept from the overhanging counterbores can be generalized to an even
more powerful method.  The basic idea of bridges that support further bridges
can be used for quite advanced geometry that does not need any supports.
You will also see this called <em>sequential bridging</em> in some places.</p>
<p>An impressive example is the OpenFlexure microscope
(<a href="https://openflexure.org/projects/microscope/">Website</a>), where this design approach is used
extensively. The best way to understand how it works is to download their
models and view the layers after running the model through a slicer
(<a href="https://build.openflexure.org/openflexure-microscope/v7.0.0-beta1/models/main_body.html">STL Download</a>).</p>


<p>Especially for large bridges, it is a good idea to first build up the bridge
for a few layers before starting the next one. This gives the lower bridge more
strength and more time to cool before it gets loaded with the features on top.</p>
<p>
    <a href="#rule-R3.6"><i></i></a>
    <strong>R3.6</strong> 
    —
    Bridges on top of other bridges allow for advanced geometry, without
requiring additional support structure.
  </p>
<h4 id="well-meant-material-saving">Well Meant Material Saving<a href="#well-meant-material-saving"><i></i></a>
</h4>
<p>We have previously evaluated the I-beam shape in the context of 3d-printing.
The conclusion was that simply shaving off volume is a traditional design
approach that does not map well to 3d-printing.  There are more cases where
this topic pops up.  Cutouts, that are meant to save material, are commonly
added, while really not achieving their purpose in 3d-printed designs.  In fact,
they can lead to the opposite: More material usage and longer print times.</p>

<p><span>
  <div>
    <p><img alt="comparison of print time for a part with and without holes" src="https://blog.rahix.de/design-for-3d-printing/Adapter-Comparison.png"></p><p>A real world example of a part where holes were added with the intent of
saving material.  But after comparing the models it gets clear that the holes
actually increased the material usage and print time.</p>
    
  </div>
</span></p><p>It is necessary to shift the focus from volume to surface area, as that is
where material is most dense in 3d-printed parts.  You should strive to reduce
surface area by making shapes fat and voluminous.</p>
<p>
    <a href="#rule-R3.7"><i></i></a>
    <strong>R3.7</strong> 
    —
    Keep surface area minimal.  Design voluminous.  Do not make cutouts in an attempt to save material.
  </p>
<h4 id="optimizing-bed-adhesion">Optimizing Bed Adhesion<a href="#optimizing-bed-adhesion"><i></i></a>
</h4>
<p>Finally, a topic that mostly becomes relevant when many parts are to be
printed.  To optimize the removal of the final part from the print surface,
certain considerations can be made.</p>
<p>First of all, the surface area that is touching the bed should be carefully
balanced.  Too little will lead to parts toppling over during printing.  Too
much will make detaching the part more difficult.  Slant 3D has some nice tips
about this (<a href="https://www.youtube.com/watch?v=SZwXREFoWKA">YouTube</a>).</p>
<p>
    <a href="#rule-R3.8"><i></i></a>
    <strong>R3.8</strong> 
    —
    Reduce the surface area that is touching the print-bed when aiming for mass production.
  </p>
<h5 id="mouse-ears">Mouse Ears<a href="#mouse-ears"><i></i></a>
</h5>
<p>Related, if you are using brims to counteract parts coming loose, the mouse ear
approach presented by Slant 3D (<a href="https://www.youtube.com/watch?v=MCcFMDv_4eo">YouTube</a>) is a portable
alternative to consider that also reduces post-processing effort.</p>

<p><span>
  <div>
    <p><img alt="mouse ear as a brim alternative" src="https://blog.rahix.de/design-for-3d-printing/Mouse-Ears.png"></p><p>Two types of mouse ears: The right one is placed directly on the part.  The
left one has a small stub which makes removal even easier.</p>
    
  </div>
</span></p><p>Mouse ears are directly designed into the CAD shape of the part so they do not
need to be added later during slicing.</p>
<p>
    <a href="#rule-R3.9"><i></i></a>
    <strong>R3.9</strong> 
    —
    Add mouse ears to parts that have problems with bed adhesion.
  </p>
<h2 id="4-functional-integration">4. Functional Integration<a href="#4-functional-integration"><i></i></a>
</h2>
<h4 id="general-considerations">General Considerations<a href="#general-considerations"><i></i></a>
</h4>
<p>Functional integration is the art of designing such that each part performs as
many of the required functions as possible.  The goal is to reduce part count.
This speeds up assembly and thus often leads to decreased manufacturing cost.</p>
<p>A ubiquitous example of functional integration are clips in injection molded
plastic parts.  They replace the additional joining element that would be
required otherwise.  For this reason, they play a large role in making
products cheaper and easier to manufacture.  Clips will be discussed in more
detail later.</p>
<p>3d-printing is suited especially well for functional integration, because
additional geometric complexity does not really impact manufacturing cost.
This is in contrast to, for example, subtractive machining, where additional
geometric features generally drive up the cost.  So striving for maximum
functional integration is usually a good idea with 3d-printing.</p>
<p>However, there are some nuances to this.  Printing everything in a single part
limits the print orientation for some features. This can negatively affect
strength, tolerances, and geometric freedom.  Additionally, a highly integrated
part is more difficult to prototype because each iteration requires reprinting
a large model.  And later in the life cycle, repair of a broken part also
requires replacement of a bigger component than what would have been necessary
with a design of many smaller parts that are joined together.  More than once,
I have explicitly kept certain functions in separated parts to facilitate
easier prototyping or repair.</p>
<p>Nevertheless, the following chapters will demonstrate some design ideas that
allow integration of certain features.</p>
<h4 id="zip-tie-channels">Zip tie Channels<a href="#zip-tie-channels"><i></i></a>
</h4>
<p>The first idea that I will demonstrate is a rather simple trick.  You can add
small channels to surfaces of your part that allow fastening a zip tie to fix
some cables or wires in place.  There is a great video by Alan Reiner where I
learned about this (<a href="https://www.youtube.com/watch?v=qgt9P6jsyaY">YouTube</a>).  The <em>Zip Tie City</em> demo model
is available for download (<a href="https://www.printables.com/model/248291-zip-tie-city">Printables</a>).</p>

<p><span>
  <div>
    <p><img alt="zip tie channels on a real part" src="https://blog.rahix.de/design-for-3d-printing/ziptie-channels.jpg"></p><p>Zip tie channels are used to fix cables to a moving assembly.  You can spot
one unused zip tie channel to the left.</p>
    
  </div>
</span></p><p>The channel design is quite simply a section of a hollow cylinder.  Dimensions
that work well for smaller zip ties (100&nbsp;mm) can be taken from the drawing below.</p>

<p><span>
  <div>
    <p><img alt="zip tie channel dimensions" src="https://blog.rahix.de/design-for-3d-printing/ziptie-channels.png"></p><p>Zip tie channel dimensions for typical 100&nbsp;mm zip ties.</p>
    
  </div>
</span></p><p>An important note is that orientation of the zip tie channels should be
considered.  When the channel is printed such that no perimeters bridge across
it, it gets much weaker.  In this orientation, the bridge can easily get ripped
out which I have already seen happening in practice.</p>
<p>
    <a href="#rule-R4.1"><i></i></a>
    <strong>R4.1</strong> 
    —
    Use zip tie channels to fasten cables to a part.
  </p>
<h4 id="flexures">Flexures<a href="#flexures"><i></i></a>
</h4>
<p>Usually, mechanical parts are designed such that they can be considered
completely stiff in approximation.  Flexures are design features that
explicitly use elasticity of a part to integrate certain freedoms of
movement (<a href="https://en.wikipedia.org/wiki/Flexure">Wikipedia</a>).</p>
<p>Overall, 3d-printing is perfect for designs that incorporate flexures.  The
thin features required by flexures are easy to print, while complex to create
with other manufacturing methods.</p>
<p>
    <a href="#rule-R4.2"><i></i></a>
    <strong>R4.2</strong> 
    —
    Use flexures to integrate moving features into a part.
  </p>
<p>Two types of flexures that are very common will be discussed in more detail
below: Clips and so-called "living hinges".  But first, a few general points
about flexures in 3d-printing are presented.</p>
<p>The amount of movement allowed by a flexure is mostly limited by how much
deflection is possible without plastic deformation.  A thicker flexure will
start plastically deforming much earlier.  Thus, it is very important to keep
flexures as thin as possible when large movements are intended.  Force can be
increased by stacking multiple thin flexures, rather than creating a single
thick one.  Alternatively, the travel distance of a thicker flexure can be
increased by increasing its length — maybe even in a snaking pattern.</p>

<p><span>
  <div>
    <p><img alt="double flexure for more stiffness" src="https://blog.rahix.de/design-for-3d-printing/cable-comb-hooks.jpg"></p><p>The hooks on this cable comb are made from two parallel flexures.  This is
more stiff than a single flexure, but has the same travel in the elastic
region.</p>
    
  </div>
</span></p><p>
    <a href="#rule-R4.3"><i></i></a>
    <strong>R4.3</strong> 
    —
    Design flexures such that they only deform elastically when used.
  </p>
<p>To make flexures long-lived, it is important to ensure they cannot be moved too
far.  Features should be strategically placed as end-stops to a flexures
movement.  This way, the movement is always kept in the elastic region and the
flexure will live much longer.</p>
<p>
    <a href="#rule-R4.4"><i></i></a>
    <strong>R4.4</strong> 
    —
    Ensure that flexures have hard limits that prevent breaking them.
  </p>
<p>Another use for flexures is sidestepping tolerance issues.  This only works
when no significant force is exerted on the joint, but can be a nice tool to
cheaply solve accuracy issues.  An example of this are the previously
discussed <a href="https://blog.rahix.de/design-for-3d-printing/#grip-fins">"grip fins"</a>.</p>
<h4 id="clips">Clips<a href="#clips"><i></i></a>
</h4>
<p>Arguably the largest amount of flexures show up in the form of clips.  Clips
have revolutionized the mass-production industry because they provide a
fastener-free way of joining together parts.  Either permanently or in a way
that can be repeatedly opened and closed again.  For the same reason, clips are
popular for 3d-printed designs — avoiding additional fastening hardware
is often desirable.</p>
<p>However, care must exercised with design of clips.  The travel distance of the
clip, retention force, and feature size must be carefully balanced.  Another
significant factor is the orientation of the clip relative to the print
surface.  Especially clips built across layers are very fragile.  In many cases
it is better to keep travel minimal and instead work with a larger clip force
for retention.</p>
<p>
    <a href="#rule-R4.5"><i></i></a>
    <strong>R4.5</strong> 
    —
    Ensure clips won't break from use.  Optimize designs for minimal clip movement.
  </p>
<p>For clips that retain by form-locking the other part geometrically, it is a
great idea to include a way to undo the clip.  Usually, this can be achieved by
providing space to reach the clip with a tool like a screw-driver to push it
backwards.</p>
<p>
    <a href="#rule-R4.6"><i></i></a>
    <strong>R4.6</strong> 
    —
    Provide a way to undo form-locking clips.
  </p>
<h4 id="living-hinges">Living Hinges<a href="#living-hinges"><i></i></a>
</h4>
<p>One more type of flexure that has exploded in popularity as part of optimizing
for mass-production are "living hinges".  These are hinges which move by
plastic deformation rather than disjoint parts rotating on an axis.  Any cheap
plastic container with a lid probably uses one or two of these hinges, because
they are so much more cost-effective and simple than proper hinged joints.</p>
<p>We can also make use of living hinges in 3d-printed design, but there are a few
limitations:  The hinge absolutely needs to to lie flat on the print bed to
achieve the thin sheet of plastic that reliably deforms.  Experiments have been
done with living hinges made from bridging layers, but these do not perform
nearly as good.</p>

<p>Engineers Grow has discussed living hinges for 3d-printing
(<a href="https://www.youtube.com/watch?v=E2CqXgaQsyI">YouTube</a>) and so has Slant 3D (<a href="https://www.youtube.com/watch?v=TiEyFle6lTM">YouTube</a>).</p>
<h4 id="printed-bearings">Printed Bearings<a href="#printed-bearings"><i></i></a>
</h4>
<p>Another design element that's sometimes suited for integration are bearings.
Especially where large diameter bearings are required, it can be more effective
to integrate the bearing into the design of the mating parts instead of using
an off-the-shelf component.</p>
<p>To integrate a bearing, the races become features of the part design.  During
assembly, standard steel bearing balls are inserted.  Optionally, a printed
cage may be necessary to ensure correct spacing between the balls.</p>

<p><span>
  <div>
    <p><img alt="printed bearing" src="https://blog.rahix.de/design-for-3d-printing/printed-bearing.jpg"></p>
    
  </div>
</span></p><p>Positive Altitude has published a video where printed bearing design is
discussed in a lot more detail (<a href="https://youtu.be/0KhV6JW2sHg">YouTube</a>).</p>
<h4 id="print-in-place-mechanisms">Print-in-place Mechanisms<a href="#print-in-place-mechanisms"><i></i></a>
</h4>
<p>As the final type of functional integration that will be discussed,
<em>print-in-place mechanisms</em> are another unique possibility of 3d-printing.
Multiple parts of an interlocking mechanism can be printed at the same time.
No post-print assembly is required.</p>
<p>Print-in-place mechanisms can include joints that would be impossible to
assemble after printing.  The trick is that interlocking parts are printed in
their already joined position.  This can be an incredibly useful design tool to
make strong mechanisms without complicated assembly.</p>

<p><span>
  <div>
    <p><img alt="herringbone planetary gear set" src="https://blog.rahix.de/design-for-3d-printing/Herringbone-Gears.jpg"></p><div>
      <p>Standard example of a print-in-place mechanism is the herringbone planetary
gear set.  This model could not be assembled from its parts after printing.</p>
<p>Design by <a href="https://www.thingiverse.com/thing:53451">Emmett Lalish</a> and picture by <a href="https://www.printables.com/model/3119-herringbone-planetary-gear">Prusa Research</a>.</p>
    </div>
    
  </div>
</span></p><p>The big downside of print-in-place mechanisms is the additional design
complexity.  Part orientation is fixed, making avoiding supports and design for
strength difficult to achieve.  Especially where interlocking parts meet, it
can be difficult to adequately support floating geometry.  Sometimes, special
<em>break-away surfaces</em> are placed between parts.  These then have to be broken
with force after printing.</p>
<p>
    <a href="#rule-R4.7"><i></i></a>
    <strong>R4.7</strong> 
    —
    Use break-away surfaces to support floating geometry in print-in-place designs.
  </p>
<p>Another critical topic for print-in-place design is the necessary clearance
between interfacing parts.  Printing multiple surfaces very close to each other
can be difficult for some printers.  It seems that a clearance of 0.3&nbsp;mm
should allow most current printers to print a design.</p>
<p>
    <a href="#rule-R4.8"><i></i></a>
    <strong>R4.8</strong> 
    —
    Ensure sufficient clearance between features in print-in-place designs.
  </p>
<h2 id="5-beyond-plastic-machine-elements">5. Beyond plastic - Machine Elements<a href="#5-beyond-plastic-machine-elements"><i></i></a>
</h2>
<p>After discussing the peculiarities of 3d-printed parts for so long, it is time
to widen the horizon.  Most functional designs will not be entirely 3d-printed,
but also include other components.  The largest number of them are most likely
going to be <em>machine elements</em>.  Screws, nuts, bearings, and all the other
standard parts optimized for certain functions.  In the following chapter,
design considerations related to the use of such machine elements will be
evaluated.</p>
<h4 id="nuts-and-bolts">Nuts and bolts<a href="#nuts-and-bolts"><i></i></a>
</h4>
<p>Arguably the most ubiquitous machine elements are screws.  For the most part,
they are used to fasten different components to each other.  While it is easy
to just pick the next best screw and design your parts around it, there is more
to it if the joint is meant to last.  In traditional mechanical design,
selection of screws can be a science of itself. Especially, when the screw is
heavily loaded or safety critical.  With design for 3d-printing, it is
technically no different — but fortunately, you can usually get away with
ignoring a lot of the complexity involved.  Nonetheless, I think it is
important to at least know the limits and some general guidance on what is good
or bad for a screwed connection of 3d-printed parts.</p>
<h6 id="screw-preload">Screw Preload<a href="#screw-preload"><i></i></a>
</h6>
<p>In screw theory, one of the most important values is the preload force
(<a href="https://en.wikipedia.org/wiki/Bolted_joint#Theory">Wikipedia</a>).  That's the clamping force exerted by
the screw at rest after tightening.  For a screwed joint to work, the preload
force must be greater than any forces experienced by the joint during
operation.</p>

<p><span>
  <div>
    <p><img alt="spring analogy for a bolted joint" src="https://blog.rahix.de/design-for-3d-printing/Spring_Analogy_for_a_Bolted_Joint.jpg"></p><div>
      <p>A bolted or screwed joint can be modelled using springs.  Preload compresses
the parts and elongates the screw.  As long as the external load never
becomes greater than the preload, the joint is fixed in place.</p>
<p>Image by <a href="https://commons.wikimedia.org/wiki/File:Spring_Analogy_for_a_Bolted_Joint.jpg">Stephen Mckelvey</a>.</p>
    </div>
    
  </div>
</span></p><p>In metal to metal joints, this preload is achieved by elongation of the screw.
In 3d-printing and other thermoplastics applications, the joint members are much
less stiff than the screw, leading to the preload mostly coming from compression
of the plastic parts instead.  The implication is that any of the traditional
preload calculation methods are mostly useless here.</p>
<p>Attempting to reach the required preload force, one quickly reaches the yield
strength limit of the printed parts, leading to deformation or worse.  While
the achievable preload is usually enough to deal with static loads of an
application, it is often not possible to counteract the dynamic loads.
Vibrations or shocks are usually the worst offenders.</p>
<p>The solution is one that's also often used for additional security of metal
joints as well:  Use additional screw locking measures, like lock-nuts or a
threadlocking adhesive.</p>
<p>
    <a href="#rule-R5.1"><i></i></a>
    <strong>R5.1</strong> 
    —
    Protect dynamically loaded screws with additional locking measures like threadlocking adhesive.
  </p>
<h6 id="screw-length">Screw Length<a href="#screw-length"><i></i></a>
</h6>
<p>Another noteworthy parameter of screwed joints is the length of the screw, or
more precisely the length of the compressed section of the 3d-printed parts. As
a rule of thumb, you should design the joint such that the screw is as long as
possible.</p>
<p>There are two effects at play that make this a reasonable choice:</p>
<ol>
<li>A long screw ensures the part is preloaded entirely in compression rather
than tension.  When an external load is then applied, it counteracts the
compression.  With a short screw, the external load would just add more
tension which printed parts often cannot take well anyway.</li>
<li>A longer screw has to be tightened with more turns to compress the part past
its yield strength.  This means it becomes less likely to accidentally
overtighten the joint.</li>
</ol>
<p>
    <a href="#rule-R5.2"><i></i></a>
    <strong>R5.2</strong> 
    —
    Design screwed connections for maximum screw length.
  </p>
<h6 id="threads-in-printed-parts">Threads in Printed Parts<a href="#threads-in-printed-parts"><i></i></a>
</h6>
<p>With screws and thermoplastics, an important consideration is the thread for the
screw to fasten to.  In metal applications, the thread is often simply cut into
the mating part.  With 3d-printed parts, the same is possible, but threads made
from thermoplastics are a lot weaker.  This means the threads can be easily
stripped by overtightening the screw.</p>
<p>Nonetheless, plastic threads are an option.  They can be tapped into a part if
an adequately sized hole is printed and wall thickness is high enough.  For
bigger diameter threads (M8 and up), modelling the threads in CAD and printing
them is an option, although quality of such threads is not always good.  The
strength of thermoplastic threads is surprisingly good — however
they do not like repeated assembly and the aforementioned overtightening problem
should not be underestimated.</p>

<p><span>
  <div>
    <p><img alt="tapping a thread into a printed part" src="https://blog.rahix.de/design-for-3d-printing/thread-tapping.jpg"></p><p>Tapping a thread into a printed part.</p>
    
  </div>
</span></p><p>
    <a href="#rule-R5.3"><i></i></a>
    <strong>R5.3</strong> 
    —
    Cut threads into printed parts with a thread tap for quick design of low-reuse joints.
  </p>
<h6 id="rib-thread-forming">Rib Thread Forming<a href="#rib-thread-forming"><i></i></a>
</h6>
<p>An alternative to thread tapping is to combine the previously discussed concept
of <a href="https://blog.rahix.de/design-for-3d-printing/#crush-ribs">Crush Ribs</a> with a standard threaded screw.  The screw can
deform the crush ribs to create its own thread.  This rib thread forming works
surprisingly well, as demonstrated by Thomas Sanladerer
(<a href="https://www.youtube.com/watch?v=HgEEtk85rAY">YouTube</a>).</p>

<p><span>
  <div>
    <p><img alt="rib threads in a part" src="https://blog.rahix.de/design-for-3d-printing/rib-threads.png"></p><p>A part designed for rib thread forming, next to through holes with the
teardrop trick discussed earlier.  The rib threads start tapered to make it
easy to get the screw in.</p>
    
  </div>
</span></p><p>
    <a href="#rule-R5.4"><i></i></a>
    <strong>R5.4</strong> 
    —
    Use rib thread forming for no-postprocessing low-reuse threads in printed parts.
  </p>
<h6 id="threaded-inserts">Threaded Inserts<a href="#threaded-inserts"><i></i></a>
</h6>
<p>As the downsides of plastic threads are well known from injection molding,
alternative solutions have emerged.  Most popular are small metal threaded
inserts which are added to the part as a strong and long-lasting thread.
Usually, these inserts are heat-set into an appropriately dimensioned hole.</p>

<p><span>
  <div>
    <p><img alt="threaded inserts" src="https://blog.rahix.de/design-for-3d-printing/threaded-inserts.jpg"></p><p>M5 heat-set threaded inserts in a 3d-printed part.</p>
    
  </div>
</span></p><p>Threaded inserts are much stronger than plastic threads.  They are not easily
stripped by overtightening and they survive repeated reassembly many times
over.</p>
<p>Such threaded inserts have become very popular in the 3d-printing community.
Stefan from CNC Kitchen has a nice writeup about the use of heat-set inserts
(<a href="https://www.cnckitchen.com/blog/tipps-amp-tricks-fr-gewindeeinstze-im-3d-druck-3awey">CNC Kitchen</a>).</p>
<p>
    <a href="#rule-R5.5"><i></i></a>
    <strong>R5.5</strong> 
    —
    Use heat-set threaded inserts to add highly reusable and robust threads to a part.
  </p>
<p>A design limitation of threaded inserts is that they are not reliably usable
for screws inserted from the back side.  During insertion, heat-set inserts
often push some molten plastic into the hole beneath them, preventing easy
insertion of a screw from the back side.  While the hole diameter can be tuned
to prevent this, my experience is that this is not really portable to other
3d-printers.</p>
<h6 id="embedded-nuts">Embedded Nuts<a href="#embedded-nuts"><i></i></a>
</h6>
<p>A more cost effective alternative to threaded insert is embedding standard nuts
into 3d-printed parts.  Usually, this is done by preparing an appropriate
cutout into which the nut can be inserted after or during printing.</p>

<p><span>
  <div>
    <p><img alt="embedded nuts" src="https://blog.rahix.de/design-for-3d-printing/embedded-nut.jpg"></p><p>A standard M4 nut embedded into a part.  It was inserted through the sideface
cutout visible in the picture.</p>
    
  </div>
</span></p><p>Embedded nuts are not only cheap, they are also a great alternative for the
mentioned design limitation of threaded inserts.  A nut is predestined to be
placed on the far side of a part, making through-joints with long screws easy
to realize.  This also plays into the benefits of using long screws again.</p>
<p>Two kinds of cutouts have emerged in my designs:</p>
<ul>
<li>Sideface cutouts are rectangular cutouts reaching in from a side of the part to insert the nut horizontally.</li>
<li>Backface cutouts are hexagonal pockets on the exit of the screw through-hole.</li>
</ul>

<p><span>
  <div>
    <p><img alt="embedded nuts" src="https://blog.rahix.de/design-for-3d-printing/Nut-Slot-Options.png"></p><p>Cross-section view of different cutouts for embedded nuts.  On the left, the
cutouts are from the side.  On the right, the they are from the back of the
screw.</p>
    
  </div>
</span></p><p>
    <a href="#rule-R5.6"><i></i></a>
    <strong>R5.6</strong> 
    —
    Make cutouts to embed standard nuts into a part.
  </p>
<p>The big downside of the embedded nuts approach is that they often fall out of
their cutouts during assembly.  Tuning the cutout dimensions usually does not
work well — the only real solution is to "plug" the cutouts by inserting
the nuts halfway through the print.  This does, however, complicate the
printing and assembly complexity considerably, so it often is not a desirable
choice either.</p>
<h6 id="thread-strength">Thread Strength<a href="#thread-strength"><i></i></a>
</h6>
<p>With all these options for adding threads and the many design considerations
surrounding them, one last factor that does play a role is the strength of the
threads.  Lucky for us, all of the discussed options almost always have
strength beyond the design requirements, with the other factors being more
prevalent.</p>
<p>Again, Stefan from CNC Kitchen has a nice writeup on his experiments
on the topic (<a href="https://www.cnckitchen.com/blog/helicoils-threaded-insets-and-embedded-nuts-in-3d-prints-strength-amp-strength-assessment">CNC Kitchen</a>).</p>
<h4 id="dowel-pins">Dowel Pins<a href="#dowel-pins"><i></i></a>
</h4>
<p>Let's look at machine elements beyond screws next.  While the use of dowel pins
is quite rare in 3d-printed design, they should still get mentioned.  In
traditional mechanical design, they are the go-to solution for accurately and
repeatedly locating one part to another.</p>
<p>As the tolerances of 3d-printing often make such accuracy superfluous, the uses
of dowel pins here are limited.  Additionally, such pins need an engineering
fit which is difficult to achieve in 3d-printing.  The best solution are the
<a href="https://blog.rahix.de/design-for-3d-printing/#circles-considered-harmful">hexagonal holes</a> or <a href="https://blog.rahix.de/design-for-3d-printing/#crush-ribs">crush ribs</a>
mentioned before, or post processing of the printed parts.</p>

<p><span>
  <div>
    <p><img alt="embedded nuts" src="https://blog.rahix.de/design-for-3d-printing/engraving-jig.png"></p><p>A fixture for precisely aligning a part for laser engraving.  Dowel pins were
used as reliable locating features.</p>
    
  </div>
</span></p><h4 id="embedded-hardware">Embedded Hardware<a href="#embedded-hardware"><i></i></a>
</h4>
<p>With the <a href="https://blog.rahix.de/design-for-3d-printing/#embedded-nuts">embedded nuts</a>, we already discussed one element that
can be inserted into a part mid-print.  This concept can be used for many
other things as well — many designs have been published that use this
method in some way.</p>
<p>To quickly discuss the concept again, it works like this:</p>
<ol>
<li>In the design, a cavity is left for the component to occupy.</li>
<li>During slicing, a pause is configured right before the layer above the cavity.</li>
<li>When the printer reaches the pause, the hardware is inserted.</li>
<li>Then the print is resumed, enclosing the hardware and often permanently fusing the part with it.</li>
</ol>
<p>To get some inspiration, take a look at the window in this <a href="https://www.printables.com/model/894202-modern-gridfinity-case">Modern Gridfinity
Case</a> by Matthew.  It is made from a transparent
PETG sheet that gets inserted into the print.  The design even includes small
tabs to hold the sheet in place, right as it is inserted.  This makes for a very
robust design and the result is hard to achieve with any other methods.</p>
<div>


  <p><img alt="modern gridfinity case" src="https://blog.rahix.de/design-for-3d-printing/modern-gridfinity-case.jpg">
    
  </p>




  <p><img alt="inserting the window sheet" src="https://blog.rahix.de/design-for-3d-printing/insert-transparent-sheet.gif">
    
  </p>


</div>
<p>Of course, many other components can be inserted into 3d-prints.  To name a few more:</p>
<ul>
<li>"Trapped fasteners" are inserted such that they cannot fall out of the part, making it hard to loose them.</li>
<li>Magnets</li>
<li>Metal mesh</li>
</ul>
<p>Of course the big advantage of embedded hardware is that additional joining or
fastening means can be avoided.  Do, however, consider the downside that
embedded hardware can only be extracted destructively and replacement is
usually impossible.</p>
<p>
    <a href="#rule-R5.7"><i></i></a>
    <strong>R5.7</strong> 
    —
    Embed hardware into 3d-printed parts to avoid more complex fastening or joining methods.
  </p>
<h4 id="printing-on-fabric">Printing on Fabric<a href="#printing-on-fabric"><i></i></a>
</h4>
<p>A technique that is very similar to inserted hardware, but deserves attention on
its own, is incorporating fabric into a 3d-print.  This produces parts with
unique flexibility, especially interesting for wearable applications.  For this
reason, 3d-printing onto fabric is quite popular in the cosplay scene.</p>
<p>The gist is that a print consisting of many individual pieces is paused roughly
2 to 3 layers in.  Then a piece of tulle fabric is draped across the initial
layers.  When resuming the print, the new layers on top will fuse into the lower
ones, securing each part to the fabric.</p>

<p><span>
  <div>
    <p><img alt="Printing on Fabric" src="https://blog.rahix.de/design-for-3d-printing/print-on-fabric.jpg"></p><div>
      <p>Showcase of some cosplay parts printed onto fabric.</p>
<p>Image by <a href="https://www.youtube.com/@UncleJessy">Uncle Jessy</a>.</p>
    </div>
    
  </div>
</span></p><p>The flexibility of the resulting design can be finely controlled by the geometry
of the solid 3d-printed shapes.  Other people have already experimented with this
technique a lot, for example you can check out the video tutorial from UncleJessy
(<a href="https://www.youtube.com/watch?v=CjH5KGw3Psw">YouTube</a>).</p>
<h2 id="6-appearance">6. Appearance<a href="#6-appearance"><i></i></a>
</h2>
<h4 id="complex-shapes">Complex Shapes<a href="#complex-shapes"><i></i></a>
</h4>
<p>While appearance isn't the main concern of functional design, no parts should
be designed without consideration of their appearance.  3d-printing uniquely
allows complex surface shapes to be added "for free".  Suddenly, the
consideration is no longer about increased manufacturing cost, the only
remaining factor is the time it takes to design such shapes.</p>
<p>Of course, complex shapes should still follow the basic constraints of the
process — avoiding overhangs and not mandating support material.  But
beyond that, there is no reason to limit designs to the straight and
rectangular shapes of traditional functional parts.</p>
<p>There are even places where complex, maybe organic, shapes have a use beyond
appearance: For ergonomic design, such shapes are usually much better suited.</p>
<p>
    <a href="#rule-R6.1"><i></i></a>
    <strong>R6.1</strong> 
    —
    Complex shapes are often "for free" in 3d-printing.  Use them to improve
appearance or ergonomics.
  </p>
<h4 id="shadow-lines">Shadow Lines<a href="#shadow-lines"><i></i></a>
</h4>
<p>One trick we can borrow from traditional product design practices are <em>shadow
lines</em>.  They improve the appearance of seams between mating surfaces of
multiple joined parts.  When two surfaces are pressed directly against each
other, the result will never look great due to the imperfections on both sides
leading to an uneven seam.</p>
<p><em>Shadow lines</em> improve on this by leaving a controlled larger gap between the
surfaces and hiding the actual mechanical connection behind a small lip.  The
larger gap is wide enough such that the small surface imperfections are no
longer distinguishable.  This leaves the result with a very even look without
requiring extreme precision.</p>

<p><span>
  <div>
    <p><img alt="Example of a part with a shadow line" src="https://blog.rahix.de/design-for-3d-printing/shadow-line-valve.jpg"></p><p>The upper and lower half of the valve actuator body have an evenly sized gap
between them.  The real seam is actually hidden behind the shadow line.</p>
    
  </div>
</span></p><p>It may be enough to place a single lip on the shadow line to hide the real seam.
If dust protection is of concern, a second lip on the inner side can transform
the shadow line into a sort of labyrinth seal, providing for more than just
aesthetics.</p>
<p>Shadow lines can also be used on parts joined at an angle, like a lid placed
flat onto a box.  In this case, a constant offset is left between the size of
the lid and the surrounding box, with alignment tabs on the inside ensuring the
lid stays centered.</p>

<p><span>
  <div>
    <p><img alt="Shadow line on the lid of an electronics enclosure" src="https://blog.rahix.de/design-for-3d-printing/shadow-line-electronics.jpg"></p><p>The lid is surrounded by yet another evenly sized gap.  To ensure it stays
centered, alignment ribs on the inside locate it quite precisely.</p>
    
  </div>
</span></p><p>To learn even more about this concept, Teaching Tech has made a video about the
topic (<a href="https://youtu.be/8dhFhU7Nl_0">YouTube</a>).</p>
<p>
    <a href="#rule-R6.2"><i></i></a>
    <strong>R6.2</strong> 
    —
    Create shadow lines along the joining edge between two parts.
  </p>
<h4 id="surface-texture">Surface Texture<a href="#surface-texture"><i></i></a>
</h4>
<p>Another significant factor for appearance is surface texture.  With
3d-printing, we generally do not have much control about them.  Especially
vertical surfaces will always prominently display the layer lines inherent to
the process.</p>
<p>With special print beds, like textured steel sheets, the bottom surface of parts
can be refined.  This allows for a very clean texture, but is of course quite
limited because only one surface of each part can get this treatment.
Sometimes, it is actually desirable to avoid having a bed surface on a part, to
keep all sides looking more even.  One way to do this is rotating parts to a
diagonal angle relative to the print bed.</p>
<p>For vertical surfaces, where the layer lines are sometimes destroying the
aesthetics of a part, a trick has been developed to help hiding them.  <em>Fuzzy
skin</em> adds irregularities to each layer perimeter, building up to a surface that
appears more rough, but without prominent layer lines.</p>
<p>Fuzzy skin also has a pleasant feel to it, if tuned correctly, which has made it
a popular choice for 3d-printed grips and handles.</p>

<p><span>
  <div>
    <p><img alt="Part with fuzzy skin" src="https://blog.rahix.de/design-for-3d-printing/fuzzy_skin_preview.jpg"></p><div>
      <p>Fuzzy skin on a tool grip makes for a nice appearance and pleasant feeling while holding.</p>
<p>Image by <a href="https://help.prusa3d.com/article/fuzzy-skin_246186">Prusa Research</a></p>
    </div>
    
  </div>
</span></p><p>
    <a href="#rule-R6.3"><i></i></a>
    <strong>R6.3</strong> 
    —
    Use surface texture to make parts appear less 3d-printed.
  </p>
<h4 id="printed-text">Printed Text<a href="#printed-text"><i></i></a>
</h4>
<p>Another nice side-effect of the nature of 3d-printing is the fact that it is
laughably simple to add text or symbols to a part.  No need for stickers,
decals, or labor-intensive engravings.  There is no excuse to not add text to a
printed part.</p>
<p>A starting point is to make it a habit to add part numbers into each part of a
larger design.  This way it is easy to keep everything organized.  Especially
when iterating on a part a lot, having the revision index printed onto it can
reduce confusion quite a lot.</p>

<p><span>
  <div>
    <p><img alt="part with text printed on it" src="https://blog.rahix.de/design-for-3d-printing/engraved-text.jpg"></p><p>An enclosure with a label text engraved into it.</p>
    
  </div>
</span></p><p>There are two ways to add text or symbols:  Either the text gets cut into the
surface, which is called engraving.  Or the text can be raised over the
surface, called embossing.  For the most part, engraving leads to much cleaner
results with 3d-printing.  This is especially true as the font size gets
smaller.</p>
<p>
    <a href="#rule-R6.4"><i></i></a>
    <strong>R6.4</strong> 
    —
    Prefer engraving text over embossing.
  </p>
<p>Regarding orientation, the best results will be achieved by placing the text such
that it is vertical to the print surface.  This way it gets printed as part of
the perimeter lines where the printer can achieve the most detail.</p>
<p>
    <a href="#rule-R6.5"><i></i></a>
    <strong>R6.5</strong> 
    —
    Place engraved/embossed text vertical to the print surface.
  </p>
<p>Experience has shown that most printers can print a text with 0.6&nbsp;mm
minimum stroke width and engraved to 0.5&nbsp;mm depth without issues.</p>

<p>For the final chapter, I want to investigate a completely different design
approach for 3d-printing — vase mode design.  Inherently, the FFF
3d-printing process is not volumetric.  Volumetric parts are only achieved by
using lines of plastic, fused together such that a volume emerges.  But
whether this is the most efficient way to make use of the 3d-printing process
is a question worth asking.</p>
<p>Vase mode is an alternative approach where only a hollow shell of a part is
printed, using a single perimeter line.  Instead of individual layers, the Z
height slowly increases such that filament is laid down in a spiral. This has
a number of advantageous consequences:</p>
<ul>
<li>It is very efficient because 100% of the print time is spent extruding filament.</li>
<li>Due to the lack of individual layers, there is no seam in the surface.</li>
<li>As the printer never stops printing, no stringing issues can occur.</li>
<li>It is very fast because the least amount of plastic is used to represent a part's shape.</li>
<li>It can also leads to very light parts due to the decreased filament usage.</li>
</ul>
<p>The big downside is of course that parts become very unstable due to the
missing internal support.  For certain kinds of parts, especially artistic
ones, this may not be a problem.  Even for functional parts, like vases —
where this technique got its name — the strength might already be
sufficient.</p>

<p><span>
  <div>
    <p><img alt="Vase mode vase" src="https://blog.rahix.de/design-for-3d-printing/vase.png"></p>
    
  </div>
</span></p><p>With vase mode, the most important factor to part strength is surface geometry.
Surfaces that are flat or only bend in only one direction perform the worst.
Intricate shapes often show much more strength.  This can be seen especially
with the impressive strength some vase designs manage to achieve.</p>
<h4 id="beading-patterns">Beading Patterns<a href="#beading-patterns"><i></i></a>
</h4>
<p>What those vases achieve through style can be used for technical designs in
the form of <em>beading patterns</em>.  They describe features that are added to thin
sheet-material parts to give them additional strength.  CNC-Kitchen has made a
video about using beading patterns for 3d-printing where this concept is
explored in more detail (<a href="https://www.youtube.com/watch?v=3-ygdNQThAs">YouTube</a>).  There is also a german
web-book going into detail about beading patterns in general
(<a href="https://4ming.de/de/forming-handbuch/leichtbau-durch-sicken-fachbuch">4ming.de</a>).</p>

<p>
    <a href="#rule-R7.1"><i></i></a>
    <strong>R7.1</strong> 
    —
    Use beading patterns to make vase mode parts more stiff.
  </p>
<h4 id="unconventional-vase-mode">Unconventional Vase Mode<a href="#unconventional-vase-mode"><i></i></a>
</h4>
<p>Interestingly, it is possible to adapt vase mode for even more uses.  The trick
is in viewing vase mode as a way to have very tight control over the way that a
printer extrudes filament.  A part is designed such that its surface perimeters
describe a path for the printer which ultimately results in the intended
geometry.  An impressive example of this is the stackable tray designed by
FPacheco (<a href="https://www.printables.com/model/514142-vase-mode-stackable-hextray-60-mm-hexagons">Printables</a>).</p>

<p><span>
  <div>
    <p><img alt="vase mode stackable tray" src="https://blog.rahix.de/design-for-3d-printing/vase-mode-tray.jpg"></p><p>This tray looks nothing like a vase-mode part but is the result of very careful and clever design.</p>
    
  </div>
</span></p><p>While the resulting part for such designs looks nothing like a normal vase mode
part, it still gets the 100% print time benefit of vase mode.  Especially when
a part shall be produced in high quantity, this may have significant impact.</p>
<h2 id="conclusion">Conclusion<a href="#conclusion"><i></i></a>
</h2>
<p>Alright, you have made it to the end.  Below, you will find a final summary of
all the design rules discussed in this blog post.  Use them as a reference for
your designs, as "sane defaults" when there is no good reason to deviate.  But
at the same time, these are no laws — there are many situations where
doing things differently is the better choice.  It is your job as the design
engineer to make these decisions.</p>
<p>I have thought long about where I should publish this information.  For now,
placing it here on my blog felt like the easiest choice.  But such "rules" live
from discussion and I would love to hear your opinions and to get talking about
them.  If enough interest emerges, I would be interested in turning this into an
"open-source book" where others can contribute their own rules or suggest
changes to the existing ones.  My ultimate goal is finding the best approaches
for design for 3d-printing.  And such a feat is only achievable by the community
at large.</p>
<h2 id="checklist">Checklist<a href="#checklist"><i></i></a>
</h2>
<p>As promised, here is a summary of all the rules from the blog post.  With
checkboxes, in case you like them :)</p>
<!-- START RULES LIST -->
<ol>
<li><strong>Designing for Part Strength</strong>
<ul>
<li><label>
  
  <a href="#rule-R1.1"><strong>R1.1</strong></a> 
  —
  Tensile forces should be aligned parallel to the print surface.
</label>
</li>
<li><label>
  
  <a href="#rule-R1.2"><strong>R1.2</strong></a> 
  —
  Split a part into multiple pieces when no orientation is ideal for all loads.
</label>
</li>
<li><label>
  
  <a href="#rule-R1.3"><strong>R1.3</strong></a> 
  —
  Most strength comes from the part's surface, not the infill.
</label>
</li>
<li><label>
  
  <a href="#rule-R1.4"><strong>R1.4</strong></a> 
  —
  Guide forces on the most direct path possible.
</label>
</li>
<li><label>
  
  <a href="#rule-R1.5"><strong>R1.5</strong></a> 
  —
  Use large cross sections.  Prefer thick shapes over thin shapes.
</label>
</li>
</ul>
</li>
<li><strong>Manufacturing Tolerance and Part Finish</strong>
<ul>
<li><label>
  
  <a href="#rule-R2.1"><strong>R2.1</strong></a> 
  —
  Use chamfers on edges parallel to the print surface.  Use fillets on edges
vertical to the print surface.
</label>
</li>
<li><label>
  
  <a href="#rule-R2.2"><strong>R2.2</strong></a> 
  —
  Improve horizontal holes by using a teardrop shape or giving the hole a flat roof.
</label>
</li>
<li><label>
  
  <a href="#rule-R2.3"><strong>R2.3</strong></a> 
  —
  Use a teardrop shape for vertical holes to avoid inaccuracy due to perimeter
seams.
</label>
</li>
<li><label>
  
  <a href="#rule-R2.4"><strong>R2.4</strong></a> 
  —
  Consider where the seam will be placed.  If tolerances are tight, provide a
sharp concave corner for the seam the hide in.
</label>
</li>
<li><label>
  
  <a href="#rule-R2.5"><strong>R2.5</strong></a> 
  —
  Design part geometry for easy motion paths while printing, to improve dimensional accuracy.
</label>
</li>
<li><label>
  
  <a href="#rule-R2.6"><strong>R2.6</strong></a> 
  —
  Prevent warping by making parts voluminous and their surfaces smooth and rounded.  The ideal shape is a sphere.
</label>
</li>
<li><label>
  
  <a href="#rule-R2.7"><strong>R2.7</strong></a> 
  —
  If you can't make it precise, make it adjustable.
</label>
</li>
<li><label>
  
  <a href="#rule-R2.8"><strong>R2.8</strong></a> 
  —
  Do not use circular holes for interference fits.  Use hexagon or square holes instead.
</label>
</li>
<li><label>
  
  <a href="#rule-R2.9"><strong>R2.9</strong></a> 
  —
  Use crush ribs for press fits that are only assembled once.
</label>
</li>
<li><label>
  
  <a href="#rule-R2.10"><strong>R2.10</strong></a> 
  —
  Use grip fins for press fits that need to be reassembled more than once.
</label>
</li>
</ul>
</li>
<li><strong>Process Optimization</strong>
<ul>
<li><label>
  
  <a href="#rule-R3.1"><strong>R3.1</strong></a> 
  —
  Avoid the necessity of support material.
</label>
</li>
<li><label>
  
  <a href="#rule-R3.2"><strong>R3.2</strong></a> 
  —
  Clever part orientation on the print surface can eliminate the need for
supports.
</label>
</li>
<li><label>
  
  <a href="#rule-R3.3"><strong>R3.3</strong></a> 
  —
  Split a part into multiple pieces when no orientation can avoid supports.
</label>
</li>
<li><label>
  
  <a href="#rule-R3.4"><strong>R3.4</strong></a> 
  —
  Use sacrificial layers to avoid internal overhangs that would otherwise require supports.
</label>
</li>
<li><label>
  
  <a href="#rule-R3.5"><strong>R3.5</strong></a> 
  —
  Use the overhanging counterbore trick.
</label>
</li>
<li><label>
  
  <a href="#rule-R3.6"><strong>R3.6</strong></a> 
  —
  Bridges on top of other bridges allow for advanced geometry, without
requiring additional support structure.
</label>
</li>
<li><label>
  
  <a href="#rule-R3.7"><strong>R3.7</strong></a> 
  —
  Keep surface area minimal.  Design voluminous.  Do not make cutouts in an attempt to save material.
</label>
</li>
<li><label>
  
  <a href="#rule-R3.8"><strong>R3.8</strong></a> 
  —
  Reduce the surface area that is touching the print-bed when aiming for mass production.
</label>
</li>
<li><label>
  
  <a href="#rule-R3.9"><strong>R3.9</strong></a> 
  —
  Add mouse ears to parts that have problems with bed adhesion.
</label>
</li>
</ul>
</li>
<li><strong>Functional Integration</strong>
<ul>
<li><label>
  
  <a href="#rule-R4.1"><strong>R4.1</strong></a> 
  —
  Use zip tie channels to fasten cables to a part.
</label>
</li>
<li><label>
  
  <a href="#rule-R4.2"><strong>R4.2</strong></a> 
  —
  Use flexures to integrate moving features into a part.
</label>
</li>
<li><label>
  
  <a href="#rule-R4.3"><strong>R4.3</strong></a> 
  —
  Design flexures such that they only deform elastically when used.
</label>
</li>
<li><label>
  
  <a href="#rule-R4.4"><strong>R4.4</strong></a> 
  —
  Ensure that flexures have hard limits that prevent breaking them.
</label>
</li>
<li><label>
  
  <a href="#rule-R4.5"><strong>R4.5</strong></a> 
  —
  Ensure clips won't break from use.  Optimize designs for minimal clip movement.
</label>
</li>
<li><label>
  
  <a href="#rule-R4.6"><strong>R4.6</strong></a> 
  —
  Provide a way to undo form-locking clips.
</label>
</li>
<li><label>
  
  <a href="#rule-R4.7"><strong>R4.7</strong></a> 
  —
  Use break-away surfaces to support floating geometry in print-in-place designs.
</label>
</li>
<li><label>
  
  <a href="#rule-R4.8"><strong>R4.8</strong></a> 
  —
  Ensure sufficient clearance between features in print-in-place designs.
</label>
</li>
</ul>
</li>
<li><strong>Beyond plastic - Machine Elements</strong>
<ul>
<li><label>
  
  <a href="#rule-R5.1"><strong>R5.1</strong></a> 
  —
  Protect dynamically loaded screws with additional locking measures like threadlocking adhesive.
</label>
</li>
<li><label>
  
  <a href="#rule-R5.2"><strong>R5.2</strong></a> 
  —
  Design screwed connections for maximum screw length.
</label>
</li>
<li><label>
  
  <a href="#rule-R5.3"><strong>R5.3</strong></a> 
  —
  Cut threads into printed parts with a thread tap for quick design of low-reuse joints.
</label>
</li>
<li><label>
  
  <a href="#rule-R5.4"><strong>R5.4</strong></a> 
  —
  Use rib thread forming for no-postprocessing low-reuse threads in printed parts.
</label>
</li>
<li><label>
  
  <a href="#rule-R5.5"><strong>R5.5</strong></a> 
  —
  Use heat-set threaded inserts to add highly reusable and robust threads to a part.
</label>
</li>
<li><label>
  
  <a href="#rule-R5.6"><strong>R5.6</strong></a> 
  —
  Make cutouts to embed standard nuts into a part.
</label>
</li>
<li><label>
  
  <a href="#rule-R5.7"><strong>R5.7</strong></a> 
  —
  Embed hardware into 3d-printed parts to avoid more complex fastening or joining methods.
</label>
</li>
</ul>
</li>
<li><strong>Appearance</strong>
<ul>
<li><label>
  
  <a href="#rule-R6.1"><strong>R6.1</strong></a> 
  —
  Complex shapes are often "for free" in 3d-printing.  Use them to improve
appearance or ergonomics.
</label>
</li>
<li><label>
  
  <a href="#rule-R6.2"><strong>R6.2</strong></a> 
  —
  Create shadow lines along the joining edge between two parts.
</label>
</li>
<li><label>
  
  <a href="#rule-R6.3"><strong>R6.3</strong></a> 
  —
  Use surface texture to make parts appear less 3d-printed.
</label>
</li>
<li><label>
  
  <a href="#rule-R6.4"><strong>R6.4</strong></a> 
  —
  Prefer engraving text over embossing.
</label>
</li>
<li><label>
  
  <a href="#rule-R6.5"><strong>R6.5</strong></a> 
  —
  Place engraved/embossed text vertical to the print surface.
</label>
</li>
</ul>
</li>
<li><strong>Extra: Vase Mode Design</strong>
<ul>
<li><label>
  
  <a href="#rule-R7.1"><strong>R7.1</strong></a> 
  —
  Use beading patterns to make vase mode parts more stiff.
</label>
</li>
</ul>
</li>
</ol>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dummy's Guide to Modern LLM Sampling (126 pts)]]></title>
            <link>https://rentry.co/samplers</link>
            <guid>43887637</guid>
            <pubDate>Sun, 04 May 2025 16:26:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rentry.co/samplers">https://rentry.co/samplers</a>, See on <a href="https://news.ycombinator.com/item?id=43887637">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    
                    <article>
                        
                        <div><h2 id="dummys-guide-to-modern-llm-sampling">Dummy's Guide to Modern LLM Sampling<a href="#dummys-guide-to-modern-llm-sampling" title="Permanent link"> </a></h2>
<div>
<ol>
<li><a href="#intro-knowledge">Intro Knowledge</a><ol>
<li><a href="#short-glossary">Short Glossary</a></li>
<li><a href="#why-tokens">Why tokens?</a><ol>
<li><a href="#why-not-letters">Why not letters?</a></li>
<li><a href="#why-not-whole-words">Why not whole words?</a></li>
<li><a href="#how-are-the-sub-words-chosen">How are the sub-words chosen?</a></li>
</ol>
</li>
<li><a href="#how-does-the-model-generate-text">How does the model generate text?</a></li>
<li><a href="#from-tokens-to-text-how-llms-generate-content">From Tokens to Text: How LLMs Generate Content</a></li>
</ol>
</li>
<li><a href="#sampling">Sampling</a><ol>
<li><a href="#notes-on-algorithm-presentations">Notes on Algorithm Presentations</a><ol>
<li><a href="#notation-guide">Notation Guide</a></li>
<li><a href="#implementation-considerations">Implementation Considerations</a></li>
</ol>
</li>
<li><a href="#temperature">Temperature</a></li>
<li><a href="#presence-penalty">Presence Penalty</a></li>
<li><a href="#frequency-penalty">Frequency Penalty</a></li>
<li><a href="#repetition-penalty">Repetition Penalty</a></li>
<li><a href="#dry-dont-repeat-yourself">DRY (Don't Repeat Yourself)</a></li>
<li><a href="#top-k">Top-K</a></li>
<li><a href="#top-p">Top-P</a></li>
<li><a href="#min-p">Min-P</a></li>
<li><a href="#top-a">Top-A</a></li>
<li><a href="#xtc-exclude-top-choices">XTC (eXclude Top Choices)</a></li>
<li><a href="#top-n-sigma">Top-N-Sigma</a></li>
<li><a href="#tail-free-sampling">Tail-Free Sampling</a></li>
<li><a href="#eta-cutoff">Eta Cutoff</a></li>
<li><a href="#epsilon-cutoff">Epsilon Cutoff</a></li>
<li><a href="#locally-typical-sampling">Locally Typical Sampling</a></li>
<li><a href="#quadratic-sampling">Quadratic Sampling</a></li>
<li><a href="#mirostat-sampling">Mirostat Sampling</a></li>
<li><a href="#dynamic-temperature-sampling">Dynamic Temperature Sampling</a></li>
<li><a href="#beam-search">Beam Search</a></li>
<li><a href="#contrastive-search">Contrastive Search</a></li>
</ol>
</li>
<li><a href="#sampler-order">Sampler Order</a><ol>
<li><a href="#the-typical-sampling-pipeline">The Typical Sampling Pipeline</a></li>
<li><a href="#effects-and-interactions-of-samplers-with-each-other">Effects and Interactions of Samplers with Each Other</a><ol>
<li><a href="#how-samplers-transform-distributions">How Samplers Transform Distributions</a></li>
<li><a href="#critical-order-dependent-interactions">Critical Order-Dependent Interactions</a><ol>
<li><a href="#temperature-before-vs-after-filtering">Temperature Before vs. After Filtering</a></li>
<li><a href="#penalties-before-vs-after-other-samplers">Penalties Before vs. After Other Samplers</a></li>
<li><a href="#drys-position-matters">DRY's Position Matters</a></li>
</ol>
</li>
<li><a href="#synergies-and-conflicts">Synergies and Conflicts</a><ol>
<li><a href="#synergistic-combos">Synergistic Combos</a></li>
<li><a href="#conflicting-combos">Conflicting Combos</a></li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
</ol>
</div>
<h2 id="intro-knowledge">Intro Knowledge<a href="#intro-knowledge" title="Permanent link"> </a></h2>
<p>Large Language Models (LLMs) work by taking a piece of text (e.g. user prompt) and calculating the next word. In more technical terms, <em>tokens</em>. LLMs have a vocabulary, or a dictionary, of valid tokens, and will reference those in training and inference (the process of generating text). More on that below. You need to understand why we use tokens (sub-words) instead of words or letters first. But first, a short glossary of some technical terms that aren't explained in the sections below in-depth:</p>
<h3 id="short-glossary">Short Glossary<a href="#short-glossary" title="Permanent link"> </a></h3>
<p><strong>Logits</strong>: The raw, unnormalized scores output by the model for each token in its vocabulary. Higher logits indicate tokens the model considers more likely to come next.<br>
<strong>Softmax</strong>: A mathematical function that converts logits into a proper probability distribution - values between 0 and 1 that sum to 1.<br>
<strong>Entropy</strong>: A measure of uncertainty or randomness in a probability distribution. Higher entropy means the model is less certain about which token should come next.<br>
<strong>Perplexity</strong>: Related to entropy, perplexity measures how "surprised" the model is by the text. Lower perplexity indicates higher confidence.<br>
<strong>n-gram</strong>: A contiguous sequence of n tokens. For example, "once upon a" is a 3-gram.<br>
<strong>Context window</strong> (or sequence length): The maximum number of tokens an LLM can process at once, including both the prompt and generated output.<br>
<strong>Probability distribution</strong>: A function that assigns probabilities to all possible outcomes (tokens) such that they sum to 1. Think of it like percentages: if 1% was 0.01, 50% was 0.5, and 100% was 1.0.</p>
<h3 id="why-tokens">Why tokens?<a href="#why-tokens" title="Permanent link"> </a></h3>
<p>Your first instinct might be using a vocabulary of words or letters for an LLM. But instead, we use sub-words: some common words are preserved as whole in the vocabulary (e.g. <code>the</code>, or <code>apple</code> might be a single token due to how common they are in the English language), but others are fragmented into common sub-words (e.g. <code>bi-fur-cat-ion</code> Why is this? There are several, very good reasons:</p>
<h5 id="why-not-letters">Why not letters?<a href="#why-not-letters" title="Permanent link"> </a></h5>
<p>Many reasons. To name a few: LLMs have a limited context window (amount of tokens it can process at once). With character-level tokenization, even a moderate amount of text would lead to sequence length explosion (too many tokens for too little text). The word <code>tokenization</code> would be 12 tokens instead of, for example, 2 or 3 in a sub-word system. Longer sequences also require much more computation for <a href="https://arxiv.org/abs/1706.03762" rel="" target="_blank">self-attention</a>. But more importantly, the model would need to learn higher-level patterns spanning <em>a lot</em> more positions. Understanding that <code>t-h-e</code> represents a single concept requires connecting information across three positions instead of one. This may also lead to meaningful relationships becoming more distant. Related concepts might be dozens or hundreds of positions apart.</p>
<h5 id="why-not-whole-words">Why not whole words?<a href="#why-not-whole-words" title="Permanent link"> </a></h5>
<p>A pure world-level tokenization would need us to create a vocabulary spanning the entire possible word list in the English language, and if we're doing multiple languages, then many times that. This would make our embedding matrix unreasonably large and expensive. It would also struggle with <strong>new</strong> or <strong>rare</strong> words. When a model encounters a word not in its vocabulary, it typically replaces it with an "unknown" token, losing virtually all semantic information. Sub-word tokenization would represent new words by combining existing subword tokens. For example, if we invent a new word called "grompuficious", a sub-word tokenizer might represent it as <code>g-romp-u-ficious</code>, depending on the tokenizer. <br>
Another thing to mention is morphological awareness: many languages create words by combining morphemes (prefixes, roots, suffixes). E.g., as demonstrated earlier, <code>unhappiness</code> can be broken into <code>un-happi-ness</code>; sub-word tokenization can naturally capture these relationships. It also allows us to perform cross-lingual transfer. For languages with complex morphology or compounding (e.g. German or Finnish where words can be extremely long combinations). </p>
<h4 id="how-are-the-sub-words-chosen">How are the sub-words chosen?<a href="#how-are-the-sub-words-chosen" title="Permanent link"> </a></h4>
<p>If a language model uses a new tokenizer, the development team may decide to take a representative sample of their training data, and <em>train</em> a tokenizer to find the most commond sub-words in the dataset. They will set a vocabulary size beforehand, and then the tokenizer will try and find enough sub-words to fill up the list.</p>
<h3 id="how-does-the-model-generate-text">How does the model generate text?<a href="#how-does-the-model-generate-text" title="Permanent link"> </a></h3>
<p>During training, the model sees many terabytes worth of text and builds an internal probability map for tokens. For example, after it's seen the tokens for <code>How are</code> are usually followed by the tokens <code>you?</code>, it will learn that to be the most probable next set of tokens. Once this map has been built internally to a satisfactory degree, the training is stopped and a checkpoint is released to the public (or kept private and served from an API, e.g. OpenAI). During inference, the user will provide the LLM with a text, and the LLM, based on the probabilities it's learned through training, will decide what token comes next. <strong>However</strong>, it will not decide just one token: it will take into consideration <em>every possible token</em> that exists in its vocabulary, assigns a probability score to each, and (depending on your sampler) will only output the most probable token, i.e. the one with the highest score. This would make for a rather boring output (unless you need determinism), so this is where Sampling comes in.</p>
<h3 id="from-tokens-to-text-how-llms-generate-content">From Tokens to Text: How LLMs Generate Content<a href="#from-tokens-to-text-how-llms-generate-content" title="Permanent link"> </a></h3>
<p>Now that we understand how LLMs break down and represent text using tokens, let's explore how they actually generate content. The process of text generation in LLMs involve two key steps:</p>
<ol>
<li><strong>Prediction</strong>: For each position, the model calculates the probability distribution over all possible next tokens in its vocabulary.</li>
<li><strong>Selection</strong>: The model must choose one token from this distribution to add to the growing text.</li>
</ol>
<p>The first step is fixed - determined by the model's parameters after training. However, the second step - token selection - is where  <strong>sampling</strong> occurs. While we could simply always choose the most likely token (known as "greedy" sampling), this tends to produce repetitive, deterministic text. Sampling introduces controlled randomness to make outputs more varied.</p>
<h2 id="sampling">Sampling<a href="#sampling" title="Permanent link"> </a></h2>
<p>As explained above, LLMs will pick the most probable token to generate. Sampling is the practice of introducing <em>controlled randomness</em>. With pure "greedy" sampling, it would pick the #1 option every time, but that's boring! We use sampling methods like temperature, penalties, or truncation to allow for a bit of creative variation. This document will go through every popular sampling method, and explains how all of them word; both from a simple-to-understand and technical perspectives.</p>
<h3 id="notes-on-algorithm-presentations">Notes on Algorithm Presentations<a href="#notes-on-algorithm-presentations" title="Permanent link"> </a></h3>
<p>Throughout this document, algorithms are presented in pseudo-code format that combines mathematical notation with programming concepts. Here are some guidelines to help interpret these:</p>
<h5 id="notation-guide">Notation Guide<a href="#notation-guide" title="Permanent link"> </a></h5>
<ul>
<li><strong>L</strong>: the logits tensor (raw scores output by the model)</li>
<li><strong>P</strong>: probabilities (after applying softmax to logits)</li>
<li><strong>←</strong>: assignment operation (equal to <code>=</code> in programming)</li>
<li><strong>∑</strong>: summation</li>
<li><strong>|x|</strong>: either absolute value or length/size of <code>x</code>, depending on context</li>
<li><strong>x[i]</strong>: accessing the <code>i</code>-th element of <code>x</code></li>
<li><strong>v</strong>: logical OR operation</li>
<li><strong>¬</strong>: logical NOT operation</li>
<li><strong>∞</strong>: infinity (often used to mask out tokens by setting logits to negative infinity)</li>
<li><strong>argmax(x)</strong>: returns the index of the maximum value in <code>x</code></li>
<li><strong>∈</strong>: "element of" (e.g., <code>x ∈ X</code> means <code>x</code> is an element of set <code>X</code>)</li>
</ul>
<h5 id="implementation-considerations">Implementation Considerations<a href="#implementation-considerations" title="Permanent link"> </a></h5>
<p>The algorithms provided are written for clarity rather than optimization. Production implementations would typically:</p>
<ol>
<li>Vectorize operations where possible for efficiency</li>
<li>handle edge cases and numerical stability issues (though parts that need this have occasionally been highlighted in the algorithms below)</li>
<li>Incorporate batch processing for multiple sequences, if necessary for the framework</li>
<li>Cache intermediate results where beneficial</li>
</ol>
<h3 id="temperature">Temperature<a href="#temperature" title="Permanent link"> </a></h3>
<p>Think of this as the "creativity knob" on your LLM. At low temperatures (close to 0), the model becomes very cautious and predictable - it almost always picks the most likely next word. It's like ordering the same dish at your favourite restaurant every time because you know you'll like it (or maybe you don't know any better). At higher temperatures (like 0.7-1.0), the model gets very creative and willing to take chances. It may choose the 3rd or 4th most likely word instead of always the top choice. This makes text more varied and interesting, but also increases the chance of errors. Very high temperatures (above 1.0) make the model wild and unpredictable, unless you use it in conjunction with other sampling methods (e.g. min-p) to reign it in.</p>
<p><strong>Technical</strong>:<br>
Temperature works by directly manipulating the probability distribution over the vocabulary. The model produces logits (unnormalized scores) for each token in the vocabulary, which are then divided by the temperature value. When temperature is less than 1, this makes high logits relatively higher and low logits relatively lower, giving us a more peaked distribution where the highest-scoring tokens become even more likely. When temperature exceeds 1, this flattens the distribution, making the probability gap between high and low scoring tokens smaller, thus increasing randomness. After applying temperature, the modified logits are converted to a probability distribution (using softmax) and a token is randomly sampled from this distribution. The mathematical effect is that Temperature <code>T</code> transformers probabilities by essentially raising each probability to the power of <code>1/T</code> before renormalizing.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td></td><td><div><pre><span></span><span id="L-1-1"><a id="L-1-1" name="L-1-1"></a><span>Algorithm</span> <span>1</span> <span>Temperature</span> <span>Sampling</span>
</span><span id="L-1-2"><a id="L-1-2" name="L-1-2"></a><span>Required</span>: <span>Logits</span> <span>tensor</span> <span>L</span>, <span>temperature</span> <span>parameter</span> <span>T</span>
</span><span id="L-1-3"><a id="L-1-3" name="L-1-3"></a><span>Output</span>: <span>Modified</span> <span>logits</span> <span>with</span> <span>adjusted</span> <span>probability</span> <span>distribution</span>
</span><span id="L-1-4"><a id="L-1-4" name="L-1-4"></a><span>1</span>: <span>T</span> ← <span>max</span><span>(</span><span>T</span>, ε<span>)</span>  <span>//</span> <span>Prevent</span> <span>numerical</span> <span>issues</span> <span>with</span> <span>extremely</span> <span>low</span> <span>temperatures</span>
</span><span id="L-1-5"><a id="L-1-5" name="L-1-5"></a><span>2</span>: <span>if</span> <span>T</span> <span>&lt;</span> <span>0</span>.<span>1</span> <span>then</span>
</span><span id="L-1-6"><a id="L-1-6" name="L-1-6"></a><span>3</span>:     <span>L</span> ← <span>L</span> <span>-</span> <span>max</span><span>(</span><span>L</span><span>)</span> <span>+</span> <span>1</span>  <span>//</span> <span>Shift</span> <span>range</span> <span>to</span> [<span>-</span><span>inf</span>, <span>1</span>] <span>for</span> <span>numerical</span> <span>stability</span>
</span><span id="L-1-7"><a id="L-1-7" name="L-1-7"></a><span>4</span>: <span>end</span> <span>if</span>
</span><span id="L-1-8"><a id="L-1-8" name="L-1-8"></a><span>5</span>: <span>L</span> ← <span>L</span> <span>/</span> <span>T</span>  <span>//</span> <span>Apply</span> <span>temperature</span> <span>scaling</span>
</span><span id="L-1-9"><a id="L-1-9" name="L-1-9"></a><span>6</span>: <span>return</span> <span>L</span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="presence-penalty">Presence Penalty<a href="#presence-penalty" title="Permanent link"> </a></h3>
<p>This discourages the model from repeating any token that has appeared before, regardless of how many times it's been used. Think of it like a party host who wants to make sure everyone gets a turn to speak. If Tim has already spoken once, he gets slightly discouraged from speaking again, whether he spoke once or ten times before. This is generally not recommend, since better penalty strategies exist (see: DRY).</p>
<p><strong>Technical</strong>:<br>
Presence Penalty works by applying a fixed penalty to any token that has appeared in the generated text. We first identify which tokens have been used before using the output mask (which is True for tokens that appear <em>at least once</em>). It then subtracts the presence penalty value from the logits to those tokens. This makes previously used tokens less likely to be selected again, regardless of how frequently they've appeared. The penalty is applied uniformly to any token that has been used at least once.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td></td><td><div><pre><span></span><span id="L-2-1"><a id="L-2-1" name="L-2-1"></a><span>Algorithm</span> <span>2</span> <span>Presence</span> <span>Penalty</span>
</span><span id="L-2-2"><a id="L-2-2" name="L-2-2"></a><span>Required</span><span>:</span> <span>Logits</span> <span>tensor</span> <span>L</span><span>,</span> <span>output</span> <span>tokens</span> <span>O</span><span>,</span> <span>penalty</span> <span>weight</span> <span>λp</span>
</span><span id="L-2-3"><a id="L-2-3" name="L-2-3"></a><span>Output</span><span>:</span> <span>Modified</span> <span>logits</span> <span>with</span> <span>penalty</span> <span>applied</span> <span>for</span> <span>token</span> <span>presence</span>
</span><span id="L-2-4"><a id="L-2-4" name="L-2-4"></a><span>1</span><span>:</span> <span>Vsize</span> <span>←</span> <span>|</span><span>L</span><span>[</span><span>0</span><span>]</span><span>|</span>  <span>//</span> <span>Vocabulary</span> <span>size</span> <span>from</span> <span>logits</span> <span>dimension</span>
</span><span id="L-2-5"><a id="L-2-5" name="L-2-5"></a><span>2</span><span>:</span> <span>Moutput</span> <span>←</span> <span>BinaryMask</span><span>(</span><span>O</span><span>,</span> <span>Vsize</span><span>)</span>  <span>//</span> <span>Create</span> <span>binary</span> <span>mask</span> <span>where</span> <span>token</span> <span>has</span> <span>appeared</span> <span>at</span> <span>least</span> <span>once</span>
</span><span id="L-2-6"><a id="L-2-6" name="L-2-6"></a><span>3</span><span>:</span> <span>P</span> <span>←</span> <span>λp</span> <span>·</span> <span>Moutput</span>  <span>//</span> <span>Calculate</span> <span>penalty</span> <span>matrix</span>
</span><span id="L-2-7"><a id="L-2-7" name="L-2-7"></a><span>4</span><span>:</span> <span>L</span> <span>←</span> <span>L</span> <span>-</span> <span>P</span>  <span>//</span> <span>Apply</span> <span>presence</span> <span>penalty</span> <span>to</span> <span>logits</span>
</span><span id="L-2-8"><a id="L-2-8" name="L-2-8"></a><span>5</span><span>:</span> <span>return</span> <span>L</span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="frequency-penalty">Frequency Penalty<a href="#frequency-penalty" title="Permanent link"> </a></h3>
<p>Discourages tokens based on how many times they've already been used. This is simply Presence Penalty but with the number of occurrences being taken into account. The more frequently a word has appeared, the less likely it will appear again.</p>
<p><strong>Technical</strong>:<br>
The frequency penalty multiplies the count of each token's previous occurrences by the penalty value and subtracts this from that token's logit score. We track how many times each token has appeared in the generated output, and if it's appeared three times, its logit is reduced <code>3 x (frequency penalty)</code>. This creates a progressive penalty that increases with each repeated use of a token.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td></td><td><div><pre><span></span><span id="L-3-1"><a id="L-3-1" name="L-3-1"></a><span>Algorithm</span> <span>3</span> <span>Frequency</span> <span>Penalty</span>
</span><span id="L-3-2"><a id="L-3-2" name="L-3-2"></a><span>Required</span>: <span>Logits</span> <span>tensor</span> <span>L</span>, <span>output</span> <span>tokens</span> <span>O</span>, <span>penalty</span> <span>weight</span> λ<span>f</span>
</span><span id="L-3-3"><a id="L-3-3" name="L-3-3"></a><span>Output</span>: <span>Modified</span> <span>logits</span> <span>with</span> <span>penalty</span> <span>applied</span> <span>proportional</span> <span>to</span> <span>token</span> <span>frequency</span>
</span><span id="L-3-4"><a id="L-3-4" name="L-3-4"></a><span>1</span>: <span>Vsize</span> ← <span>|</span><span>L</span>[<span>0</span>]<span>|</span>  <span>//</span> <span>Vocabulary</span> <span>size</span> <span>from</span> <span>logits</span> <span>dimension</span>
</span><span id="L-3-5"><a id="L-3-5" name="L-3-5"></a><span>2</span>: <span>Coutput</span> ← <span>TokenCounts</span><span>(</span><span>O</span>, <span>Vsize</span><span>)</span>  <span>//</span> <span>Count</span> <span>occurrences</span> <span>of</span> <span>each</span> <span>token</span> <span>in</span> <span>output</span>
</span><span id="L-3-6"><a id="L-3-6" name="L-3-6"></a><span>3</span>: <span>P</span> ← λ<span>f</span> · <span>Coutput</span>  <span>//</span> <span>Calculate</span> <span>penalty</span> <span>matrix</span> <span>proportional</span> <span>to</span> <span>counts</span>
</span><span id="L-3-7"><a id="L-3-7" name="L-3-7"></a><span>4</span>: <span>L</span> ← <span>L</span> <span>-</span> <span>P</span>  <span>//</span> <span>Apply</span> <span>frequency</span> <span>penalty</span> <span>to</span> <span>logits</span>
</span><span id="L-3-8"><a id="L-3-8" name="L-3-8"></a><span>5</span>: <span>return</span> <span>L</span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="repetition-penalty">Repetition Penalty<a href="#repetition-penalty" title="Permanent link"> </a></h3>
<p>The repetition penalty works a bit differently from the other two: it penalizes both tokens from the prompt and generated output, affecting positive and negative logits differently. For positive scores, it divides the score by the penalty (making it smaller); for negative scores, it multiplies by the penalty (making it more negative). Useful for breaking out of loops, with the cost of coherency at more aggressive values.</p>
<p><strong>Technical</strong>:<br>
The penalty is applied to tokens that have appeared in either prompt or the generated text so far. We create a mask combining both prompt and output masks. for tokens in this combined mask, we apply the penalty by either dividing or multiplying the logits depending on whether they're positive or negative. This approach avoids over-penalizing already unlikely tokens while effectively reducing the probability of tokens with higher scores. The most distinctive feature is its different treatment of positive and negative logits, which helps maintain a more balanced probability distribution.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-4-1"> 1</a></span>
<span><a href="#L-4-2"> 2</a></span>
<span><a href="#L-4-3"> 3</a></span>
<span><a href="#L-4-4"> 4</a></span>
<span><a href="#L-4-5"> 5</a></span>
<span><a href="#L-4-6"> 6</a></span>
<span><a href="#L-4-7"> 7</a></span>
<span><a href="#L-4-8"> 8</a></span>
<span><a href="#L-4-9"> 9</a></span>
<span><a href="#L-4-10">10</a></span>
<span><a href="#L-4-11">11</a></span>
<span><a href="#L-4-12">12</a></span>
<span><a href="#L-4-13">13</a></span>
<span><a href="#L-4-14">14</a></span>
<span><a href="#L-4-15">15</a></span>
<span><a href="#L-4-16">16</a></span>
<span><a href="#L-4-17">17</a></span></pre></div></td><td><div><pre><span></span><span id="L-4-1"><a id="L-4-1" name="L-4-1"></a><span>Algorithm</span> <span>4</span> <span>Repetition</span> <span>Penalty</span>
</span><span id="L-4-2"><a id="L-4-2" name="L-4-2"></a><span>Required</span>: <span>Logits</span> <span>tensor</span> <span>L</span>, <span>prompt</span> <span>tokens</span> <span>P</span>, <span>output</span> <span>tokens</span> <span>O</span>, <span>penalty</span> <span>factor</span> λ<span>r</span>
</span><span id="L-4-3"><a id="L-4-3" name="L-4-3"></a><span>Output</span>: <span>Modified</span> <span>logits</span> <span>with</span> <span>asymmetric</span> <span>penalty</span> <span>for</span> <span>repeated</span> <span>tokens</span>
</span><span id="L-4-4"><a id="L-4-4" name="L-4-4"></a><span>1</span>: <span>Vsize</span> ← <span>|</span><span>L</span>[<span>0</span>]<span>|</span>  <span>//</span> <span>Vocabulary</span> <span>size</span> <span>from</span> <span>logits</span> <span>dimension</span>
</span><span id="L-4-5"><a id="L-4-5" name="L-4-5"></a><span>2</span>: <span>Mprompt</span> ← <span>BinaryMask</span><span>(</span><span>P</span>, <span>Vsize</span><span>)</span>  <span>//</span> <span>Create</span> <span>binary</span> <span>mask</span> <span>for</span> <span>tokens</span> <span>in</span> <span>prompt</span>
</span><span id="L-4-6"><a id="L-4-6" name="L-4-6"></a><span>3</span>: <span>Moutput</span> ← <span>BinaryMask</span><span>(</span><span>O</span>, <span>Vsize</span><span>)</span>  <span>//</span> <span>Create</span> <span>binary</span> <span>mask</span> <span>for</span> <span>tokens</span> <span>in</span> <span>output</span>
</span><span id="L-4-7"><a id="L-4-7" name="L-4-7"></a><span>4</span>: <span>M</span> ← <span>Mprompt</span> ∨ <span>Moutput</span>  <span>//</span> <span>Combined</span> <span>mask</span> <span>for</span> <span>tokens</span> <span>in</span> <span>either</span> <span>prompt</span> <span>or</span> <span>output</span>
</span><span id="L-4-8"><a id="L-4-8" name="L-4-8"></a><span>5</span>: <span>R</span> ← <span>matrix</span> <span>of</span> <span>size</span> <span>|</span><span>L</span><span>|</span> × <span>Vsize</span> <span>filled</span> <span>with</span> λ<span>r</span>
</span><span id="L-4-9"><a id="L-4-9" name="L-4-9"></a><span>6</span>: <span>R</span>[¬<span>M</span>] ← <span>1</span>.<span>0</span>  <span>//</span> <span>No</span> <span>penalty</span> <span>for</span> <span>tokens</span> <span>not</span> <span>previously</span> <span>seen</span>
</span><span id="L-4-10"><a id="L-4-10" name="L-4-10"></a><span>7</span>: <span>for</span> <span>each</span> <span>position</span> <span>(</span><span>i</span>,<span>j</span><span>)</span> <span>in</span> <span>L</span> <span>do</span>
</span><span id="L-4-11"><a id="L-4-11" name="L-4-11"></a><span>8</span>:     <span>if</span> <span>L</span>[<span>i</span>,<span>j</span>] <span>&gt;</span> <span>0</span> <span>then</span>
</span><span id="L-4-12"><a id="L-4-12" name="L-4-12"></a><span>9</span>:         <span>L</span>[<span>i</span>,<span>j</span>] ← <span>L</span>[<span>i</span>,<span>j</span>] <span>/</span> <span>R</span>[<span>i</span>,<span>j</span>]  <span>//</span> <span>Divide</span> <span>positive</span> <span>logits</span>
</span><span id="L-4-13"><a id="L-4-13" name="L-4-13"></a><span>10</span>:     <span>else</span>
</span><span id="L-4-14"><a id="L-4-14" name="L-4-14"></a><span>11</span>:         <span>L</span>[<span>i</span>,<span>j</span>] ← <span>L</span>[<span>i</span>,<span>j</span>] <span>*</span> <span>R</span>[<span>i</span>,<span>j</span>]  <span>//</span> <span>Multiply</span> <span>negative</span> <span>logits</span>
</span><span id="L-4-15"><a id="L-4-15" name="L-4-15"></a><span>12</span>:     <span>end</span> <span>if</span>
</span><span id="L-4-16"><a id="L-4-16" name="L-4-16"></a><span>13</span>: <span>end</span> <span>for</span>
</span><span id="L-4-17"><a id="L-4-17" name="L-4-17"></a><span>14</span>: <span>return</span> <span>L</span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="dry-dont-repeat-yourself">DRY (Don't Repeat Yourself)<a href="#dry-dont-repeat-yourself" title="Permanent link"> </a></h3>
<p>DRY sampling is like having an editor who watches for repetitive patterns in your writing. Let's say you're writing a story and you've already used the phrase "once upon a time" - DRY will discourage you from using that exact same phrase again. But it's much smarter than simple word repetition prevention (like the 3 penalties above).</p>
<p>DRY looks for repeating patterns (called n-grams) in your text. If it notices you've written something like "the cat sat on the" before and you're about to repeat this pattern, it discourages the next word that would continue the repetition. The longer the repeating pattern, the stronger the discouragement. This prevents the text from falling into loops or recycling the same phrases and keeps the output fresh and varied. What makes DRY special is that it considers existing patterns. It's particularly useful for creative writing where repetitive text would sound unnatural.</p>
<p><strong>Technical</strong>:<br>
DRY sampling works by detecting n-gram repetitions and penalizing tokens that would continue these patterns. The algorithm examines the sequence of tokens generated so far and identifies repeating patterns that end with the most recently generated token. We track where the last token appears elsewhere in the text, then compares the contexts before these appearances. When it finds matching contexts (repeated n-grams), it identifies which tokens followed these patterns previously and penalizes them in the current logits distribution. Key parameters include the multiplier (strength of the penalty), base (how much stronger the penalty becomes for longer n-grams), minimum n-gram length to consider, and maximum n-gram length to check. The algorithm also respects "sequence breakers" (like punctuation) that reset pattern matching, and has range limits to only consider recent text for efficiency.</p>
<p>The penalty is applied exponentially based on the length of the matching pattern, with longer matches receiving stronger penalties. This creates a dynamic system that prevents repetition while still allowing natural text flow, making output text more diverse and human-like by avoiding the repetitive patterns that often plague language models.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-5-1"> 1</a></span>
<span><a href="#L-5-2"> 2</a></span>
<span><a href="#L-5-3"> 3</a></span>
<span><a href="#L-5-4"> 4</a></span>
<span><a href="#L-5-5"> 5</a></span>
<span><a href="#L-5-6"> 6</a></span>
<span><a href="#L-5-7"> 7</a></span>
<span><a href="#L-5-8"> 8</a></span>
<span><a href="#L-5-9"> 9</a></span>
<span><a href="#L-5-10">10</a></span>
<span><a href="#L-5-11">11</a></span>
<span><a href="#L-5-12">12</a></span>
<span><a href="#L-5-13">13</a></span>
<span><a href="#L-5-14">14</a></span>
<span><a href="#L-5-15">15</a></span>
<span><a href="#L-5-16">16</a></span>
<span><a href="#L-5-17">17</a></span>
<span><a href="#L-5-18">18</a></span>
<span><a href="#L-5-19">19</a></span>
<span><a href="#L-5-20">20</a></span>
<span><a href="#L-5-21">21</a></span>
<span><a href="#L-5-22">22</a></span>
<span><a href="#L-5-23">23</a></span>
<span><a href="#L-5-24">24</a></span>
<span><a href="#L-5-25">25</a></span>
<span><a href="#L-5-26">26</a></span>
<span><a href="#L-5-27">27</a></span>
<span><a href="#L-5-28">28</a></span>
<span><a href="#L-5-29">29</a></span>
<span><a href="#L-5-30">30</a></span>
<span><a href="#L-5-31">31</a></span>
<span><a href="#L-5-32">32</a></span>
<span><a href="#L-5-33">33</a></span>
<span><a href="#L-5-34">34</a></span>
<span><a href="#L-5-35">35</a></span>
<span><a href="#L-5-36">36</a></span>
<span><a href="#L-5-37">37</a></span>
<span><a href="#L-5-38">38</a></span>
<span><a href="#L-5-39">39</a></span>
<span><a href="#L-5-40">40</a></span>
<span><a href="#L-5-41">41</a></span>
<span><a href="#L-5-42">42</a></span>
<span><a href="#L-5-43">43</a></span>
<span><a href="#L-5-44">44</a></span>
<span><a href="#L-5-45">45</a></span>
<span><a href="#L-5-46">46</a></span>
<span><a href="#L-5-47">47</a></span>
<span><a href="#L-5-48">48</a></span>
<span><a href="#L-5-49">49</a></span>
<span><a href="#L-5-50">50</a></span>
<span><a href="#L-5-51">51</a></span>
<span><a href="#L-5-52">52</a></span>
<span><a href="#L-5-53">53</a></span>
<span><a href="#L-5-54">54</a></span>
<span><a href="#L-5-55">55</a></span>
<span><a href="#L-5-56">56</a></span>
<span><a href="#L-5-57">57</a></span>
<span><a href="#L-5-58">58</a></span>
<span><a href="#L-5-59">59</a></span>
<span><a href="#L-5-60">60</a></span>
<span><a href="#L-5-61">61</a></span>
<span><a href="#L-5-62">62</a></span>
<span><a href="#L-5-63">63</a></span>
<span><a href="#L-5-64">64</a></span>
<span><a href="#L-5-65">65</a></span>
<span><a href="#L-5-66">66</a></span>
<span><a href="#L-5-67">67</a></span>
<span><a href="#L-5-68">68</a></span>
<span><a href="#L-5-69">69</a></span>
<span><a href="#L-5-70">70</a></span>
<span><a href="#L-5-71">71</a></span>
<span><a href="#L-5-72">72</a></span>
<span><a href="#L-5-73">73</a></span>
<span><a href="#L-5-74">74</a></span>
<span><a href="#L-5-75">75</a></span>
<span><a href="#L-5-76">76</a></span>
<span><a href="#L-5-77">77</a></span>
<span><a href="#L-5-78">78</a></span>
<span><a href="#L-5-79">79</a></span>
<span><a href="#L-5-80">80</a></span></pre></div></td><td><div><pre><span></span><span id="L-5-1"><a id="L-5-1" name="L-5-1"></a><span>Algorithm</span> <span>5</span> <span>DRY</span> <span>(</span><span>Don</span><span>'</span><span>t</span> <span>Repeat</span> <span>Yourself</span><span>)</span> <span>Sampling</span>
</span><span id="L-5-2"><a id="L-5-2" name="L-5-2"></a><span>Required</span><span>:</span> <span>Logits</span> <span>tensor</span> <span>L</span><span>,</span> <span>input</span> <span>tokens</span> <span>I</span><span>,</span> <span>output</span> <span>tokens</span> <span>O</span><span>,</span> <span>multiplier</span> <span>λ</span><span>,</span> <span>base</span> <span>b</span><span>,</span> 
</span><span id="L-5-3"><a id="L-5-3" name="L-5-3"></a>         <span>minimum</span> <span>n</span><span>-</span><span>gram</span> <span>length</span> <span>Nmin</span><span>,</span> <span>sequence</span> <span>breaker</span> <span>tokens</span> <span>B</span><span>,</span> <span>range</span> <span>limit</span> <span>r</span><span>,</span>
</span><span id="L-5-4"><a id="L-5-4" name="L-5-4"></a>         <span>maximum</span> <span>n</span><span>-</span><span>gram</span> <span>length</span> <span>Nmax</span><span>,</span> <span>maximum</span> <span>occurrences</span> <span>M</span><span>,</span> <span>early</span> <span>exit</span> <span>threshold</span> <span>E</span>
</span><span id="L-5-5"><a id="L-5-5" name="L-5-5"></a><span>Output</span><span>:</span> <span>Modified</span> <span>logits</span> <span>with</span> <span>penalties</span> <span>for</span> <span>repeating</span> <span>patterns</span>
</span><span id="L-5-6"><a id="L-5-6" name="L-5-6"></a>
</span><span id="L-5-7"><a id="L-5-7" name="L-5-7"></a><span>1</span><span>:</span> <span>for</span> <span>each</span> <span>sequence</span> <span>s</span> <span>where</span> <span>λ</span> <span>&gt;</span> <span>0</span> <span>do</span>
</span><span id="L-5-8"><a id="L-5-8" name="L-5-8"></a><span>2</span><span>:</span>     <span>//</span> <span>Prepare</span> <span>token</span> <span>sequence</span> <span>by</span> <span>concatenating</span> <span>prompt</span> <span>and</span> <span>generated</span> <span>tokens</span>
</span><span id="L-5-9"><a id="L-5-9" name="L-5-9"></a><span>3</span><span>:</span>     <span>p</span> <span>←</span> <span>Length</span> <span>of</span> <span>valid</span> <span>tokens</span> <span>in</span> <span>I</span><span>[</span><span>s</span><span>]</span>
</span><span id="L-5-10"><a id="L-5-10" name="L-5-10"></a><span>4</span><span>:</span>     <span>q</span> <span>←</span> <span>Length</span> <span>of</span> <span>valid</span> <span>tokens</span> <span>in</span> <span>O</span><span>[</span><span>s</span><span>]</span>
</span><span id="L-5-11"><a id="L-5-11" name="L-5-11"></a><span>5</span><span>:</span>     <span>T</span> <span>←</span> <span>Concatenate</span><span>(</span><span>I</span><span>[</span><span>s</span><span>][</span><span>1</span><span>:p</span><span>],</span> <span>O</span><span>[</span><span>s</span><span>][</span><span>1</span><span>:q</span><span>])</span>
</span><span id="L-5-12"><a id="L-5-12" name="L-5-12"></a><span>6</span><span>:</span>
</span><span id="L-5-13"><a id="L-5-13" name="L-5-13"></a><span>7</span><span>:</span>     <span>if</span> <span>r</span> <span>&gt;</span> <span>0</span> <span>then</span>
</span><span id="L-5-14"><a id="L-5-14" name="L-5-14"></a><span>8</span><span>:</span>         <span>T</span> <span>←</span> <span>T</span><span>[</span><span>-</span><span>r</span><span>:]</span>  <span>//</span> <span>Consider</span> <span>only</span> <span>the</span> <span>last</span> <span>r</span> <span>tokens</span> <span>if</span> <span>range</span> <span>limit</span> <span>is</span> <span>set</span>
</span><span id="L-5-15"><a id="L-5-15" name="L-5-15"></a><span>9</span><span>:</span>     <span>end</span> <span>if</span>
</span><span id="L-5-16"><a id="L-5-16" name="L-5-16"></a><span>10</span><span>:</span>
</span><span id="L-5-17"><a id="L-5-17" name="L-5-17"></a><span>11</span><span>:</span>     <span>if</span> <span>|</span><span>T</span><span>|</span> <span>&lt;</span> <span>2</span> <span>then</span> <span>continue</span> <span>end</span> <span>if</span>  <span>//</span> <span>Skip</span> <span>if</span> <span>sequence</span> <span>too</span> <span>short</span>
</span><span id="L-5-18"><a id="L-5-18" name="L-5-18"></a><span>12</span><span>:</span>
</span><span id="L-5-19"><a id="L-5-19" name="L-5-19"></a><span>13</span><span>:</span>     <span>last</span> <span>←</span> <span>T</span><span>[</span><span>-</span><span>1</span><span>]</span>  <span>//</span> <span>Last</span> <span>token</span> <span>in</span> <span>sequence</span>
</span><span id="L-5-20"><a id="L-5-20" name="L-5-20"></a><span>14</span><span>:</span>     <span>if</span> <span>last</span> <span>∈</span> <span>B</span> <span>then</span> <span>continue</span> <span>end</span> <span>if</span>  <span>//</span> <span>Skip</span> <span>if</span> <span>last</span> <span>token</span> <span>is</span> <span>a</span> <span>sequence</span> <span>breaker</span>
</span><span id="L-5-21"><a id="L-5-21" name="L-5-21"></a><span>15</span><span>:</span>
</span><span id="L-5-22"><a id="L-5-22" name="L-5-22"></a><span>16</span><span>:</span>     <span>//</span> <span>Create</span> <span>mask</span> <span>for</span> <span>sequence</span> <span>breaker</span> <span>positions</span>
</span><span id="L-5-23"><a id="L-5-23" name="L-5-23"></a><span>17</span><span>:</span>     <span>breakMask</span> <span>←</span> <span>ZeroVector</span><span>(|</span><span>T</span><span>|)</span>
</span><span id="L-5-24"><a id="L-5-24" name="L-5-24"></a><span>18</span><span>:</span>     <span>for</span> <span>each</span> <span>token</span> <span>id</span> <span>b</span> <span>∈</span> <span>B</span> <span>do</span>
</span><span id="L-5-25"><a id="L-5-25" name="L-5-25"></a><span>19</span><span>:</span>         <span>breakMask</span> <span>←</span> <span>breakMask</span> <span>∨</span> <span>(</span><span>T</span> <span>=</span> <span>b</span><span>)</span>
</span><span id="L-5-26"><a id="L-5-26" name="L-5-26"></a><span>20</span><span>:</span>     <span>end</span> <span>for</span>
</span><span id="L-5-27"><a id="L-5-27" name="L-5-27"></a><span>21</span><span>:</span>
</span><span id="L-5-28"><a id="L-5-28" name="L-5-28"></a><span>22</span><span>:</span>     <span>//</span> <span>Find</span> <span>maximum</span> <span>allowed</span> <span>n</span><span>-</span><span>gram</span> <span>length</span> <span>before</span> <span>hitting</span> <span>a</span> <span>sequence</span> <span>breaker</span>
</span><span id="L-5-29"><a id="L-5-29" name="L-5-29"></a><span>23</span><span>:</span>     <span>maxN</span> <span>←</span> <span>0</span>
</span><span id="L-5-30"><a id="L-5-30" name="L-5-30"></a><span>24</span><span>:</span>     <span>for</span> <span>i</span> <span>from</span> <span>1</span> <span>to</span> <span>min</span><span>(|</span><span>breakMask</span><span>|,</span> <span>Nmax</span><span>)</span> <span>do</span>
</span><span id="L-5-31"><a id="L-5-31" name="L-5-31"></a><span>25</span><span>:</span>         <span>if</span> <span>breakMask</span><span>[</span><span>-</span><span>i</span><span>]</span> <span>then</span> <span>break</span> <span>end</span> <span>if</span>
</span><span id="L-5-32"><a id="L-5-32" name="L-5-32"></a><span>26</span><span>:</span>         <span>maxN</span> <span>←</span> <span>i</span>
</span><span id="L-5-33"><a id="L-5-33" name="L-5-33"></a><span>27</span><span>:</span>     <span>end</span> <span>for</span>
</span><span id="L-5-34"><a id="L-5-34" name="L-5-34"></a><span>28</span><span>:</span>
</span><span id="L-5-35"><a id="L-5-35" name="L-5-35"></a><span>29</span><span>:</span>     <span>if</span> <span>maxN</span> <span>≤</span> <span>Nmin</span> <span>then</span> <span>continue</span> <span>end</span> <span>if</span>  <span>//</span> <span>Skip</span> <span>if</span> <span>maximum</span> <span>n</span><span>-</span><span>gram</span> <span>too</span> <span>short</span>
</span><span id="L-5-36"><a id="L-5-36" name="L-5-36"></a><span>30</span><span>:</span>
</span><span id="L-5-37"><a id="L-5-37" name="L-5-37"></a><span>31</span><span>:</span>     <span>//</span> <span>Initialize</span> <span>array</span> <span>to</span> <span>track</span> <span>longest</span> <span>matching</span> <span>n</span><span>-</span><span>gram</span> <span>for</span> <span>each</span> <span>token</span>
</span><span id="L-5-38"><a id="L-5-38" name="L-5-38"></a><span>32</span><span>:</span>     <span>ngramLengths</span> <span>←</span> <span>ZeroVector</span><span>(</span><span>VocabularySize</span><span>)</span>
</span><span id="L-5-39"><a id="L-5-39" name="L-5-39"></a><span>33</span><span>:</span>
</span><span id="L-5-40"><a id="L-5-40" name="L-5-40"></a><span>34</span><span>:</span>     <span>//</span> <span>Find</span> <span>all</span> <span>positions</span> <span>where</span> <span>the</span> <span>last</span> <span>token</span> <span>appears</span>
</span><span id="L-5-41"><a id="L-5-41" name="L-5-41"></a><span>35</span><span>:</span>     <span>endpoints</span> <span>←</span> <span>FindIndices</span><span>(</span><span>T</span> <span>=</span> <span>last</span><span>)</span>
</span><span id="L-5-42"><a id="L-5-42" name="L-5-42"></a><span>36</span><span>:</span>     <span>if</span> <span>|</span><span>endpoints</span><span>|</span> <span>&lt;</span> <span>2</span> <span>then</span> <span>continue</span> <span>end</span> <span>if</span>
</span><span id="L-5-43"><a id="L-5-43" name="L-5-43"></a><span>37</span><span>:</span>
</span><span id="L-5-44"><a id="L-5-44" name="L-5-44"></a><span>38</span><span>:</span>     <span>//</span> <span>Remove</span> <span>the</span> <span>last</span> <span>occurrence</span> <span>(</span><span>current</span> <span>position</span><span>)</span>
</span><span id="L-5-45"><a id="L-5-45" name="L-5-45"></a><span>39</span><span>:</span>     <span>endpoints</span> <span>←</span> <span>endpoints</span><span>[:-</span><span>1</span><span>]</span>
</span><span id="L-5-46"><a id="L-5-46" name="L-5-46"></a><span>40</span><span>:</span>
</span><span id="L-5-47"><a id="L-5-47" name="L-5-47"></a><span>41</span><span>:</span>     <span>//</span> <span>Limit</span> <span>number</span> <span>of</span> <span>previous</span> <span>occurrences</span> <span>to</span> <span>check</span>
</span><span id="L-5-48"><a id="L-5-48" name="L-5-48"></a><span>42</span><span>:</span>     <span>if</span> <span>|</span><span>endpoints</span><span>|</span> <span>&gt;</span> <span>M</span> <span>then</span>
</span><span id="L-5-49"><a id="L-5-49" name="L-5-49"></a><span>43</span><span>:</span>         <span>endpoints</span> <span>←</span> <span>endpoints</span><span>[</span><span>-</span><span>M</span><span>:</span><span>]</span>
</span><span id="L-5-50"><a id="L-5-50" name="L-5-50"></a><span>44</span><span>:</span>     <span>end</span> <span>if</span>
</span><span id="L-5-51"><a id="L-5-51" name="L-5-51"></a><span>45</span><span>:</span>
</span><span id="L-5-52"><a id="L-5-52" name="L-5-52"></a><span>46</span><span>:</span>     <span>//</span> <span>Check</span> <span>each</span> <span>previous</span> <span>occurrence</span> <span>of</span> <span>the</span> <span>last</span> <span>token</span> <span>for</span> <span>matching</span> <span>contexts</span>
</span><span id="L-5-53"><a id="L-5-53" name="L-5-53"></a><span>47</span><span>:</span>     <span>for</span> <span>each</span> <span>idx</span> <span>in</span> <span>Reverse</span><span>(</span><span>endpoints</span><span>)</span> <span>do</span>
</span><span id="L-5-54"><a id="L-5-54" name="L-5-54"></a><span>48</span><span>:</span>         <span>if</span> <span>idx</span> <span>=</span> <span>|</span><span>T</span><span>|</span> <span>-</span> <span>1</span> <span>then</span> <span>continue</span> <span>end</span> <span>if</span>
</span><span id="L-5-55"><a id="L-5-55" name="L-5-55"></a><span>49</span><span>:</span>
</span><span id="L-5-56"><a id="L-5-56" name="L-5-56"></a><span>50</span><span>:</span>         <span>matchLen</span> <span>←</span> <span>0</span>
</span><span id="L-5-57"><a id="L-5-57" name="L-5-57"></a><span>51</span><span>:</span>         <span>//</span> <span>Look</span> <span>backward</span> <span>to</span> <span>find</span> <span>matching</span> <span>context</span>
</span><span id="L-5-58"><a id="L-5-58" name="L-5-58"></a><span>52</span><span>:</span>         <span>for</span> <span>u</span> <span>from</span> <span>1</span> <span>to</span> <span>min</span><span>(</span><span>idx</span><span>,</span> <span>maxN</span><span>)</span> <span>do</span>
</span><span id="L-5-59"><a id="L-5-59" name="L-5-59"></a><span>53</span><span>:</span>             <span>if</span> <span>breakMask</span><span>[</span><span>idx</span> <span>-</span> <span>u</span><span>]</span> <span>then</span> <span>break</span> <span>end</span> <span>if</span>
</span><span id="L-5-60"><a id="L-5-60" name="L-5-60"></a><span>54</span><span>:</span>             <span>if</span> <span>T</span><span>[</span><span>idx</span> <span>-</span> <span>u</span><span>]</span> <span>≠</span> <span>T</span><span>[</span><span>-</span><span>u</span> <span>-</span> <span>1</span><span>]</span> <span>then</span> <span>break</span> <span>end</span> <span>if</span>
</span><span id="L-5-61"><a id="L-5-61" name="L-5-61"></a><span>55</span><span>:</span>             <span>matchLen</span> <span>←</span> <span>u</span>
</span><span id="L-5-62"><a id="L-5-62" name="L-5-62"></a><span>56</span><span>:</span>         <span>end</span> <span>for</span>
</span><span id="L-5-63"><a id="L-5-63" name="L-5-63"></a><span>57</span><span>:</span>
</span><span id="L-5-64"><a id="L-5-64" name="L-5-64"></a><span>58</span><span>:</span>         <span>if</span> <span>matchLen</span> <span>&gt;</span> <span>0</span> <span>then</span>
</span><span id="L-5-65"><a id="L-5-65" name="L-5-65"></a><span>59</span><span>:</span>             <span>nextToken</span> <span>←</span> <span>T</span><span>[</span><span>idx</span> <span>+</span> <span>1</span><span>]</span>  <span>//</span> <span>Token</span> <span>that</span> <span>followed</span> <span>this</span> <span>pattern</span> <span>before</span>
</span><span id="L-5-66"><a id="L-5-66" name="L-5-66"></a><span>60</span><span>:</span>             <span>newLen</span> <span>←</span> <span>matchLen</span> <span>+</span> <span>1</span>
</span><span id="L-5-67"><a id="L-5-67" name="L-5-67"></a><span>61</span><span>:</span>             <span>ngramLengths</span><span>[</span><span>nextToken</span><span>]</span> <span>←</span> <span>max</span><span>(</span><span>ngramLengths</span><span>[</span><span>nextToken</span><span>],</span> <span>newLen</span><span>)</span>
</span><span id="L-5-68"><a id="L-5-68" name="L-5-68"></a><span>62</span><span>:</span>             
</span><span id="L-5-69"><a id="L-5-69" name="L-5-69"></a><span>63</span><span>:</span>             <span>if</span> <span>newLen</span> <span>≥</span> <span>E</span> <span>then</span> <span>break</span> <span>end</span> <span>if</span>  <span>//</span> <span>Early</span> <span>exit</span> <span>if</span> <span>match</span> <span>is</span> <span>long</span> <span>enough</span>
</span><span id="L-5-70"><a id="L-5-70" name="L-5-70"></a><span>64</span><span>:</span>         <span>end</span> <span>if</span>
</span><span id="L-5-71"><a id="L-5-71" name="L-5-71"></a><span>65</span><span>:</span>     <span>end</span> <span>for</span>
</span><span id="L-5-72"><a id="L-5-72" name="L-5-72"></a><span>66</span><span>:</span>     
</span><span id="L-5-73"><a id="L-5-73" name="L-5-73"></a><span>67</span><span>:</span>     <span>//</span> <span>Apply</span> <span>penalties</span> <span>to</span> <span>tokens</span> <span>that</span> <span>would</span> <span>continue</span> <span>repeating</span> <span>patterns</span>
</span><span id="L-5-74"><a id="L-5-74" name="L-5-74"></a><span>68</span><span>:</span>     <span>penaltyMask</span> <span>←</span> <span>(</span><span>ngramLengths</span> <span>&gt;</span> <span>0</span><span>)</span>
</span><span id="L-5-75"><a id="L-5-75" name="L-5-75"></a><span>69</span><span>:</span>     <span>if</span> <span>any</span><span>(</span><span>penaltyMask</span><span>)</span> <span>then</span>
</span><span id="L-5-76"><a id="L-5-76" name="L-5-76"></a><span>70</span><span>:</span>         <span>scales</span> <span>←</span> <span>b</span> <span>^</span> <span>(</span><span>ngramLengths</span><span>[</span><span>penaltyMask</span><span>]</span> <span>-</span> <span>Nmin</span><span>)</span>  <span>//</span> <span>Exponential</span> <span>scaling</span> <span>by</span> <span>pattern</span> <span>length</span>
</span><span id="L-5-77"><a id="L-5-77" name="L-5-77"></a><span>71</span><span>:</span>         <span>L</span><span>[</span><span>s</span><span>][</span><span>penaltyMask</span><span>]</span> <span>←</span> <span>L</span><span>[</span><span>s</span><span>][</span><span>penaltyMask</span><span>]</span> <span>-</span> <span>λ</span> <span>*</span> <span>scales</span>
</span><span id="L-5-78"><a id="L-5-78" name="L-5-78"></a><span>72</span><span>:</span>     <span>end</span> <span>if</span>
</span><span id="L-5-79"><a id="L-5-79" name="L-5-79"></a><span>73</span><span>:</span> <span>end</span> <span>for</span>
</span><span id="L-5-80"><a id="L-5-80" name="L-5-80"></a><span>74</span><span>:</span> <span>return</span> <span>L</span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="top-k">Top-K<a href="#top-k" title="Permanent link"> </a></h3>
<p>Instead of considering all possible next words (which could be tens of thousands), the model narrows down to only the K most likely candidates. If K is 40, the model will only choose from the top 40 most likely next words. This approach prevents the model from selecting extremely unlikely words while still maintaining some randomness.</p>
<p><strong>Technical</strong>:<br>
This method works by sorting the logits for all possible next tokens and keeping only the K highest values while setting all others to negative infinity. We first sort the logits in ascending order and get their indices. Then, we identify the Kth highest value and create a mask for all values below this threshold. Any logit below this threshold is set to <code>-inf</code>, ensuring these tokens have effectively zero probability after applying softmax. The filtered logits are then returned to their original order using the saved indices.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td></td><td><div><pre><span></span><span id="L-6-1"><a id="L-6-1" name="L-6-1"></a><span>Algorithm</span><span> </span><span>6</span><span> </span><span>Top</span><span>-</span><span>K</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-6-2"><a id="L-6-2" name="L-6-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>parameter</span><span> </span><span>k</span><span></span>
</span><span id="L-6-3"><a id="L-6-3" name="L-6-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>all</span><span> </span><span>but</span><span> </span><span>top</span><span>-</span><span>k</span><span> </span><span>options</span><span> </span><span>filtered</span><span> </span><span>out</span><span></span>
</span><span id="L-6-4"><a id="L-6-4" name="L-6-4"></a><span>1</span><span>:</span><span> </span><span>Lsorted</span><span>,</span><span> </span><span>Lidx</span><span> </span><span>←</span><span> </span><span>Sort</span><span>(</span><span>L</span><span>,</span><span> </span><span>descending</span><span>=</span><span>False</span><span>)</span><span>  </span><span>//</span><span> </span><span>Sort</span><span> </span><span>logits</span><span> </span><span>in</span><span> </span><span>ascending</span><span> </span><span>order</span><span></span>
</span><span id="L-6-5"><a id="L-6-5" name="L-6-5"></a><span>2</span><span>:</span><span> </span><span>kth</span><span> </span><span>←</span><span> </span><span>Lsorted</span><span>[</span><span>|Lsorted| - k</span><span>]</span><span>  </span><span>//</span><span> </span><span>Find</span><span> </span><span>the</span><span> </span><span>kth</span><span> </span><span>largest</span><span> </span><span>logit</span><span> </span><span>value</span><span></span>
</span><span id="L-6-6"><a id="L-6-6" name="L-6-6"></a><span>3</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>Lsorted</span><span> </span><span>&lt;</span><span> </span><span>kth</span><span>  </span><span>//</span><span> </span><span>Create</span><span> </span><span>mask</span><span> </span><span>for</span><span> </span><span>values</span><span> </span><span>below</span><span> </span><span>the</span><span> </span><span>threshold</span><span></span>
</span><span id="L-6-7"><a id="L-6-7" name="L-6-7"></a><span>4</span><span>:</span><span> </span><span>Lsorted</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span>  </span><span>//</span><span> </span><span>Filter</span><span> </span><span>out</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-6-8"><a id="L-6-8" name="L-6-8"></a><span>5</span><span>:</span><span> </span><span>L</span><span> </span><span>←</span><span> </span><span>Unsort</span><span>(</span><span>Lsorted</span><span>,</span><span> </span><span>Lidx</span><span>)</span><span>  </span><span>//</span><span> </span><span>Restore</span><span> </span><span>original</span><span> </span><span>ordering</span><span></span>
</span><span id="L-6-9"><a id="L-6-9" name="L-6-9"></a><span>6</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="top-p">Top-P<a href="#top-p" title="Permanent link"> </a></h3>
<p>Instead of picking a fixed number of options like Top-K, Top-P selects the smallest set of words whose combined probability exceeds threshold <code>P</code>. It's like saying "I'll only consider dishes that make up 90% of all orders at this restaurant." If <code>P</code> is 0.9, the model includes just enough of the highest-probability words to reach 90% cumulative probability, whether that's 5 words or 500. In situations where the model is very confident, it might only need a few options, but when uncertainty is high, it can consider more possibilities.</p>
<p><strong>Technical</strong>:<br>
Top-P works by selecting the smallest set of tokens whose cumulative probability exceeds the threshold <code>P</code>. After applying Top-K filtering, we convert logits to probabilities using softmax and calculates their cumulative sum in ascending order. It then creates a mask identifying tokens where the cumulative probability is still below 1-P (i.e. these tokens aren't part of the "nucleus" that makes up <code>P</code> of the total probability mass). These tokens are masked out by setting their logits to <code>-inf</code>. We need to ensure that at least one token remains viable by always keeping the highest-probability token (setting its mask to False). Finally, the filtered logits are returned to their original order using the saved indices from the initial sorting.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td></td><td><div><pre><span></span><span id="L-7-1"><a id="L-7-1" name="L-7-1"></a><span>Algorithm</span><span> </span><span>7</span><span> </span><span>Top</span><span>-</span><span>P</span><span> </span><span>(</span><span>Nucleus</span><span>)</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-7-2"><a id="L-7-2" name="L-7-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>probability</span><span> </span><span>threshold</span><span> </span><span>p</span><span> </span><span>∈</span><span> </span><span>[</span><span>0,1</span><span>]</span><span></span>
</span><span id="L-7-3"><a id="L-7-3" name="L-7-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>smallest</span><span> </span><span>probability</span><span> </span><span>tokens</span><span> </span><span>filtered</span><span> </span><span>out</span><span></span>
</span><span id="L-7-4"><a id="L-7-4" name="L-7-4"></a><span>1</span><span>:</span><span> </span><span>Lsorted</span><span>,</span><span> </span><span>Lidx</span><span> </span><span>←</span><span> </span><span>Sort</span><span>(</span><span>L</span><span>,</span><span> </span><span>descending</span><span>=</span><span>False</span><span>)</span><span>  </span><span>//</span><span> </span><span>Sort</span><span> </span><span>logits</span><span> </span><span>in</span><span> </span><span>ascending</span><span> </span><span>order</span><span></span>
</span><span id="L-7-5"><a id="L-7-5" name="L-7-5"></a><span>2</span><span>:</span><span> </span><span>Psorted</span><span> </span><span>←</span><span> </span><span>Softmax</span><span>(</span><span>Lsorted</span><span>)</span><span>  </span><span>//</span><span> </span><span>Convert</span><span> </span><span>to</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-7-6"><a id="L-7-6" name="L-7-6"></a><span>3</span><span>:</span><span> </span><span>Pcum</span><span> </span><span>←</span><span> </span><span>CumulativeSum</span><span>(</span><span>Psorted</span><span>)</span><span>  </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>cumulative</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-7-7"><a id="L-7-7" name="L-7-7"></a><span>4</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>Pcum</span><span> </span><span>≤</span><span> </span><span>(</span><span>1</span><span> </span><span>-</span><span> </span><span>p</span><span>)</span><span>  </span><span>//</span><span> </span><span>Create</span><span> </span><span>mask</span><span> </span><span>for</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-7-8"><a id="L-7-8" name="L-7-8"></a><span>5</span><span>:</span><span> </span><span>mask</span><span>[</span><span>|mask| - 1</span><span>]</span><span> </span><span>←</span><span> </span><span>False</span><span>  </span><span>//</span><span> </span><span>Always</span><span> </span><span>keep</span><span> </span><span>at</span><span> </span><span>least</span><span> </span><span>one</span><span> </span><span>token</span><span></span>
</span><span id="L-7-9"><a id="L-7-9" name="L-7-9"></a><span>6</span><span>:</span><span> </span><span>Lsorted</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span>  </span><span>//</span><span> </span><span>Filter</span><span> </span><span>out</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-7-10"><a id="L-7-10" name="L-7-10"></a><span>7</span><span>:</span><span> </span><span>L</span><span> </span><span>←</span><span> </span><span>Unsort</span><span>(</span><span>Lsorted</span><span>,</span><span> </span><span>Lidx</span><span>)</span><span>  </span><span>//</span><span> </span><span>Restore</span><span> </span><span>original</span><span> </span><span>ordering</span><span></span>
</span><span id="L-7-11"><a id="L-7-11" name="L-7-11"></a><span>8</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="min-p">Min-P<a href="#min-p" title="Permanent link"> </a></h3>
<p>Min-P sets a quality threshold relative to these best option. Using the restaurant analogy again, imagine you're at a restaurant with your friend who always orders the most popular dish. You decide you'll only consider dishes that are at least 20% as popular as their top choice. If the most popular dish gets ordered 100 times a day, you set Min-P to 0.2, you'll only consider dishes ordered at least 20 times a day. When the model is very confident about the best choice, the threshold becomes higher, and fewer alternatives are considered. When the model is uncertain, more alternatives pass the threshold.</p>
<p>Min-P is usually used in conjunction with higher temperature values (1.0-1.2), and used in very low values (0.1).</p>
<p><strong>Technical</strong>:<br>
Min-P filters out tokens whose probabilities fall below a certain fraction of the highest probability token. We first convert logits to probabilities using softmax and identify the maximum probability value for each sequence. Then, create a threshold by multiplying this maximum probability by the Min-P value. For example, if the highest probability is 0.6 and Min-P is 0.1, the threshold would be 0.06.</p>
<p>Any token with a probability below this threshold is masked out by setting its logit to <code>-inf</code>. This creates a dynamic filtering mechanism where the cutoff adapts to the confidence level of the model for each prediction. Min-P doesn't require sorting the entire vocabulary like Top-K or Top-P, so it ends up being more efficient as well.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td></td><td><div><pre><span></span><span id="L-8-1"><a id="L-8-1" name="L-8-1"></a><span>Algorithm</span><span> </span><span>8</span><span> </span><span>Min</span><span>-</span><span>P</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-8-2"><a id="L-8-2" name="L-8-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>threshold</span><span> </span><span>fraction</span><span> </span><span>min_p</span><span> </span><span>∈</span><span> </span><span>[</span><span>0,1</span><span>]</span><span></span>
</span><span id="L-8-3"><a id="L-8-3" name="L-8-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>low</span><span> </span><span>probability</span><span> </span><span>tokens</span><span> </span><span>filtered</span><span> </span><span>out</span><span></span>
</span><span id="L-8-4"><a id="L-8-4" name="L-8-4"></a><span>1</span><span>:</span><span> </span><span>P</span><span> </span><span>←</span><span> </span><span>Softmax</span><span>(</span><span>L</span><span>)</span><span>  </span><span>//</span><span> </span><span>Convert</span><span> </span><span>logits</span><span> </span><span>to</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-8-5"><a id="L-8-5" name="L-8-5"></a><span>2</span><span>:</span><span> </span><span>Pmax</span><span> </span><span>←</span><span> </span><span>Max</span><span>(</span><span>P</span><span>)</span><span>  </span><span>//</span><span> </span><span>Find</span><span> </span><span>maximum</span><span> </span><span>probability</span><span></span>
</span><span id="L-8-6"><a id="L-8-6" name="L-8-6"></a><span>3</span><span>:</span><span> </span><span>threshold</span><span> </span><span>←</span><span> </span><span>min_p</span><span> </span><span>×</span><span> </span><span>Pmax</span><span>  </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>dynamic</span><span> </span><span>threshold</span><span></span>
</span><span id="L-8-7"><a id="L-8-7" name="L-8-7"></a><span>4</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>P</span><span> </span><span>&lt;</span><span> </span><span>threshold</span><span>  </span><span>//</span><span> </span><span>Create</span><span> </span><span>mask</span><span> </span><span>for</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-8-8"><a id="L-8-8" name="L-8-8"></a><span>5</span><span>:</span><span> </span><span>L</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span>  </span><span>//</span><span> </span><span>Filter</span><span> </span><span>out</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-8-9"><a id="L-8-9" name="L-8-9"></a><span>6</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="top-a">Top-A<a href="#top-a" title="Permanent link"> </a></h3>
<p>This one applies a filter that gets stricter when the model is more confident. Top-A creates a threshold that's proportional to the square of the highest probability token. When the model is very confident, the threshold becomes much higher due to the squaring effect, dramatically limiting options only to the very best alternatives. When the model is less confident, the threshold drops more rapidly.</p>
<p><strong>Technical</strong>:</p>
<p>Top-A is essentially if min-p was squared instead of linear. Note that Top-A predates Min-P.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td></td><td><div><pre><span></span><span id="L-9-1"><a id="L-9-1" name="L-9-1"></a><span>Algorithm</span><span> </span><span>9</span><span> </span><span>Top</span><span>-</span><span>A</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-9-2"><a id="L-9-2" name="L-9-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>parameter</span><span> </span><span>a</span><span></span>
</span><span id="L-9-3"><a id="L-9-3" name="L-9-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>options</span><span> </span><span>below</span><span> </span><span>squared</span><span> </span><span>threshold</span><span> </span><span>filtered</span><span> </span><span>out</span><span></span>
</span><span id="L-9-4"><a id="L-9-4" name="L-9-4"></a><span>1</span><span>:</span><span> </span><span>P</span><span> </span><span>←</span><span> </span><span>Softmax</span><span>(</span><span>L</span><span>)</span><span>  </span><span>//</span><span> </span><span>Convert</span><span> </span><span>logits</span><span> </span><span>to</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-9-5"><a id="L-9-5" name="L-9-5"></a><span>2</span><span>:</span><span> </span><span>Pmax</span><span> </span><span>←</span><span> </span><span>Max</span><span>(</span><span>P</span><span>)</span><span>  </span><span>//</span><span> </span><span>Find</span><span> </span><span>maximum</span><span> </span><span>probability</span><span></span>
</span><span id="L-9-6"><a id="L-9-6" name="L-9-6"></a><span>3</span><span>:</span><span> </span><span>threshold</span><span> </span><span>←</span><span> </span><span>Pmax²</span><span> </span><span>×</span><span> </span><span>a</span><span>  </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>squared</span><span> </span><span>threshold</span><span></span>
</span><span id="L-9-7"><a id="L-9-7" name="L-9-7"></a><span>4</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>P</span><span> </span><span>&lt;</span><span> </span><span>threshold</span><span>  </span><span>//</span><span> </span><span>Create</span><span> </span><span>mask</span><span> </span><span>for</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-9-8"><a id="L-9-8" name="L-9-8"></a><span>5</span><span>:</span><span> </span><span>L</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span>  </span><span>//</span><span> </span><span>Filter</span><span> </span><span>out</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-9-9"><a id="L-9-9" name="L-9-9"></a><span>6</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="xtc-exclude-top-choices">XTC (eXclude Top Choices)<a href="#xtc-exclude-top-choices" title="Permanent link"> </a></h3>
<p>XTC works by occasionally excluding the most likely option based on two parameters: a probability of activation, and a threshold for determining which choices to exclude. When XTC activates (based on random chance), it looks at all the top choices whose probabilities exceed the threshold and removes all but the lowest-scoring one among them.</p>
<p>This forces the model to occasionally "think outside the box" and select words it wouldn't normally. Unlike other samplers that just filter out unlikely options, XTC specifically targets the most predictable choices.</p>
<p><strong>Technical</strong>:<br>
XTC occasionally excludes the most likely token from consideration, keeping only the least likely token among those that exceed a specified threshold. We first determine whether to apply XTC for each sequence based on a random draw against the specified probability. For sequences where XTC activates, we convert logits to probs, sort them in descending order, and identify tokens whose probabilities exceed the threshold (skipping the very top choices initially). If tokens above the threshold are found, we count how many tokens qualify (including the top choice that was initially skipped). We then mask out all these high-prob tokens except for the last/lowest one in the sorted list. This effectively removes the most obvious choices. You can call this sampler a contrarian.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-10-1"> 1</a></span>
<span><a href="#L-10-2"> 2</a></span>
<span><a href="#L-10-3"> 3</a></span>
<span><a href="#L-10-4"> 4</a></span>
<span><a href="#L-10-5"> 5</a></span>
<span><a href="#L-10-6"> 6</a></span>
<span><a href="#L-10-7"> 7</a></span>
<span><a href="#L-10-8"> 8</a></span>
<span><a href="#L-10-9"> 9</a></span>
<span><a href="#L-10-10">10</a></span>
<span><a href="#L-10-11">11</a></span>
<span><a href="#L-10-12">12</a></span>
<span><a href="#L-10-13">13</a></span>
<span><a href="#L-10-14">14</a></span>
<span><a href="#L-10-15">15</a></span>
<span><a href="#L-10-16">16</a></span>
<span><a href="#L-10-17">17</a></span>
<span><a href="#L-10-18">18</a></span>
<span><a href="#L-10-19">19</a></span>
<span><a href="#L-10-20">20</a></span>
<span><a href="#L-10-21">21</a></span>
<span><a href="#L-10-22">22</a></span>
<span><a href="#L-10-23">23</a></span>
<span><a href="#L-10-24">24</a></span>
<span><a href="#L-10-25">25</a></span>
<span><a href="#L-10-26">26</a></span></pre></div></td><td><div><pre><span></span><span id="L-10-1"><a id="L-10-1" name="L-10-1"></a><span>Algorithm</span><span> </span><span>10</span><span> </span><span>XTC</span><span> </span><span>(</span><span>eXclude</span><span> </span><span>Top</span><span> </span><span>Choices</span><span>)</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-10-2"><a id="L-10-2" name="L-10-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>threshold</span><span> </span><span>t</span><span>,</span><span> </span><span>activation</span><span> </span><span>probability</span><span> </span><span>p</span><span></span>
</span><span id="L-10-3"><a id="L-10-3" name="L-10-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>top</span><span> </span><span>choices</span><span> </span><span>filtered</span><span> </span><span>out</span><span> </span><span>except</span><span> </span><span>for</span><span> </span><span>the</span><span> </span><span>lowest</span><span>-</span><span>scoring</span><span> </span><span>one</span><span></span>
</span><span id="L-10-4"><a id="L-10-4" name="L-10-4"></a><span>1</span><span>:</span><span> </span><span>apply</span><span> </span><span>←</span><span> </span><span>RandomBernoulli</span><span>(</span><span>p</span><span>)</span><span>  </span><span>//</span><span> </span><span>Determine</span><span> </span><span>which</span><span> </span><span>sequences</span><span> </span><span>to</span><span> </span><span>apply</span><span> </span><span>XTC</span><span> </span><span>to</span><span></span>
</span><span id="L-10-5"><a id="L-10-5" name="L-10-5"></a><span>2</span><span>:</span><span> </span><span>if</span><span> </span><span>not</span><span> </span><span>any</span><span>(</span><span>apply</span><span>)</span><span> </span><span>then</span><span> </span><span>return</span><span> </span><span>L</span><span> </span><span>end</span><span> </span><span>if</span><span></span>
</span><span id="L-10-6"><a id="L-10-6" name="L-10-6"></a><span>3</span><span>:</span><span></span>
</span><span id="L-10-7"><a id="L-10-7" name="L-10-7"></a><span>4</span><span>:</span><span> </span><span>P</span><span> </span><span>←</span><span> </span><span>Softmax</span><span>(</span><span>L</span><span>)</span><span>  </span><span>//</span><span> </span><span>Convert</span><span> </span><span>logits</span><span> </span><span>to</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-10-8"><a id="L-10-8" name="L-10-8"></a><span>5</span><span>:</span><span> </span><span>Psorted</span><span>,</span><span> </span><span>Pidx</span><span> </span><span>←</span><span> </span><span>Sort</span><span>(</span><span>P</span><span>,</span><span> </span><span>descending</span><span>=</span><span>True</span><span>)</span><span>  </span><span>//</span><span> </span><span>Sort</span><span> </span><span>probabilities</span><span> </span><span>in</span><span> </span><span>descending</span><span> </span><span>order</span><span></span>
</span><span id="L-10-9"><a id="L-10-9" name="L-10-9"></a><span>6</span><span>:</span><span></span>
</span><span id="L-10-10"><a id="L-10-10" name="L-10-10"></a><span>7</span><span>:</span><span> </span><span>for</span><span> </span><span>each</span><span> </span><span>sequence</span><span> </span><span>i</span><span> </span><span>where</span><span> </span><span>apply</span><span>[</span><span>i</span><span>]</span><span> </span><span>=</span><span> </span><span>True</span><span> </span><span>do</span><span></span>
</span><span id="L-10-11"><a id="L-10-11" name="L-10-11"></a><span>8</span><span>:</span><span>     </span><span>//</span><span> </span><span>Find</span><span> </span><span>tokens</span><span> </span><span>above</span><span> </span><span>threshold</span><span> </span><span>(</span><span>starting</span><span> </span><span>from</span><span> </span><span>second</span><span>-</span><span>highest</span><span>)</span><span></span>
</span><span id="L-10-12"><a id="L-10-12" name="L-10-12"></a><span>9</span><span>:</span><span>     </span><span>aboveThreshold</span><span> </span><span>←</span><span> </span><span>Psorted</span><span>[</span><span>i, 1:</span><span>]</span><span> </span><span>≥</span><span> </span><span>t</span><span></span>
</span><span id="L-10-13"><a id="L-10-13" name="L-10-13"></a><span>10</span><span>:</span><span></span>
</span><span id="L-10-14"><a id="L-10-14" name="L-10-14"></a><span>11</span><span>:</span><span>     </span><span>//</span><span> </span><span>Count</span><span> </span><span>how</span><span> </span><span>many</span><span> </span><span>tokens</span><span> </span><span>qualify</span><span> </span><span>(</span><span>including</span><span> </span><span>the</span><span> </span><span>top</span><span> </span><span>one</span><span>)</span><span></span>
</span><span id="L-10-15"><a id="L-10-15" name="L-10-15"></a><span>12</span><span>:</span><span>     </span><span>count</span><span> </span><span>←</span><span> </span><span>Sum</span><span>(</span><span>aboveThreshold</span><span>)</span><span> </span><span>+</span><span> </span><span>1</span><span></span>
</span><span id="L-10-16"><a id="L-10-16" name="L-10-16"></a><span>13</span><span>:</span><span></span>
</span><span id="L-10-17"><a id="L-10-17" name="L-10-17"></a><span>14</span><span>:</span><span>     </span><span>if</span><span> </span><span>count</span><span> </span><span>&gt;</span><span> </span><span>1</span><span> </span><span>then</span><span></span>
</span><span id="L-10-18"><a id="L-10-18" name="L-10-18"></a><span>15</span><span>:</span><span>         </span><span>//</span><span> </span><span>Get</span><span> </span><span>indices</span><span> </span><span>of</span><span> </span><span>the</span><span> </span><span>high</span><span>-</span><span>probability</span><span> </span><span>tokens</span><span> </span><span>to</span><span> </span><span>remove</span><span></span>
</span><span id="L-10-19"><a id="L-10-19" name="L-10-19"></a><span>16</span><span>:</span><span>         </span><span>tokensToRemove</span><span> </span><span>←</span><span> </span><span>Pidx</span><span>[</span><span>i, 0:count-1</span><span>]</span><span></span>
</span><span id="L-10-20"><a id="L-10-20" name="L-10-20"></a><span>17</span><span>:</span><span></span>
</span><span id="L-10-21"><a id="L-10-21" name="L-10-21"></a><span>18</span><span>:</span><span>         </span><span>//</span><span> </span><span>Mask</span><span> </span><span>out</span><span> </span><span>all</span><span> </span><span>high</span><span>-</span><span>probability</span><span> </span><span>tokens</span><span> </span><span>except</span><span> </span><span>the</span><span> </span><span>lowest</span><span>-</span><span>scoring</span><span> </span><span>one</span><span></span>
</span><span id="L-10-22"><a id="L-10-22" name="L-10-22"></a><span>19</span><span>:</span><span>         </span><span>L</span><span>[</span><span>i, tokensToRemove</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span></span>
</span><span id="L-10-23"><a id="L-10-23" name="L-10-23"></a><span>20</span><span>:</span><span>     </span><span>end</span><span> </span><span>if</span><span></span>
</span><span id="L-10-24"><a id="L-10-24" name="L-10-24"></a><span>21</span><span>:</span><span> </span><span>end</span><span> </span><span>for</span><span></span>
</span><span id="L-10-25"><a id="L-10-25" name="L-10-25"></a><span>22</span><span>:</span><span></span>
</span><span id="L-10-26"><a id="L-10-26" name="L-10-26"></a><span>23</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="top-n-sigma">Top-N-Sigma<a href="#top-n-sigma" title="Permanent link"> </a></h3>
<p>This one sets a statistical quality bar for word choices. Think of it like selecting players for a sports team and decide to take anyone who scores within 2 standard deviations of the top performer.</p>
<p>The sampler uses basic statistics to create a more adaptive threshold. It looks at how spread out (standard deviation) the scores for all possible next words are, then sets a cutoff at <code>N</code> standard deviations below the highest-scoring word. In situations where the model has a few very strong preferences and many mediocre options, the standard deviation will be small, creating a stricter threshold. But when there are many similarly good options, the standard deviation increases. Essentially, when the model is certain about a few good choices, it stays focused on those. When there are multiple reasonable options (like in creative writing), it allows for more variety without including truly poor choices.</p>
<p><strong>Technical</strong>:<br>
Top-N-Sigma creates a threshold based on statistical properties of the distribution of logits, specifically the maximum value and standard deviation. We calculate the standard deviation of logits across the vocabulary for each sequence. Then, set a threshold by subtracting <code>N</code> times this standard deviation from the maximum logit value. any logit below this threshold is set to <code>-inf</code>. The approach is mathematically elegant because it adapts to the shape of the distribution rather than just its absolute values. In distributions with high variance, the threshold will be lower, allowing more tokens in. It accounts for both the absolute best score and the overall distribution of scores.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td></td><td><div><pre><span></span><span id="L-11-1"><a id="L-11-1" name="L-11-1"></a><span>Algorithm</span><span> </span><span>11</span><span> </span><span>Top</span><span>-</span><span>N</span><span>-</span><span>Sigma</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-11-2"><a id="L-11-2" name="L-11-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>parameter</span><span> </span><span>n</span><span> </span><span>(</span><span>number</span><span> </span><span>of</span><span> </span><span>standard</span><span> </span><span>deviations</span><span>)</span><span></span>
</span><span id="L-11-3"><a id="L-11-3" name="L-11-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>values</span><span> </span><span>below</span><span> </span><span>statistical</span><span> </span><span>threshold</span><span> </span><span>filtered</span><span> </span><span>out</span><span></span>
</span><span id="L-11-4"><a id="L-11-4" name="L-11-4"></a><span>1</span><span>:</span><span> </span><span>σ</span><span> </span><span>←</span><span> </span><span>StandardDeviation</span><span>(</span><span>L</span><span>)</span><span>  </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>standard</span><span> </span><span>deviation</span><span> </span><span>of</span><span> </span><span>logits</span><span> </span><span>across</span><span> </span><span>vocabulary</span><span></span>
</span><span id="L-11-5"><a id="L-11-5" name="L-11-5"></a><span>2</span><span>:</span><span> </span><span>Lmax</span><span> </span><span>←</span><span> </span><span>Max</span><span>(</span><span>L</span><span>)</span><span>  </span><span>//</span><span> </span><span>Find</span><span> </span><span>maximum</span><span> </span><span>logit</span><span> </span><span>value</span><span></span>
</span><span id="L-11-6"><a id="L-11-6" name="L-11-6"></a><span>3</span><span>:</span><span> </span><span>threshold</span><span> </span><span>←</span><span> </span><span>Lmax</span><span> </span><span>-</span><span> </span><span>n</span><span> </span><span>×</span><span> </span><span>σ</span><span>  </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>threshold</span><span> </span><span>n</span><span> </span><span>standard</span><span> </span><span>deviations</span><span> </span><span>below</span><span> </span><span>maximum</span><span></span>
</span><span id="L-11-7"><a id="L-11-7" name="L-11-7"></a><span>4</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>L</span><span> </span><span>&lt;</span><span> </span><span>threshold</span><span>  </span><span>//</span><span> </span><span>Create</span><span> </span><span>mask</span><span> </span><span>for</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-11-8"><a id="L-11-8" name="L-11-8"></a><span>5</span><span>:</span><span> </span><span>L</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span>  </span><span>//</span><span> </span><span>Filter</span><span> </span><span>out</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-11-9"><a id="L-11-9" name="L-11-9"></a><span>6</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="tail-free-sampling">Tail-Free Sampling<a href="#tail-free-sampling" title="Permanent link"> </a></h3>
<p>TFS is like looking at the slope change in a graph of word probabilities and cutting it off where there's a significant drop. For example, you're lining up candidates for a job based on their scores - instead of using a fixed cutoff, you look for where there's a big gap between consecutive scores and say "everyone past this point is significantly worse."</p>
<p>TFS examines how the probability distribution changes by looking at second derivatives (the "curvature" or rate of change in the slope). It focues on points where the distribution starts to flatten out, marking the transition from "good" candidates to "the long tail of mediocre options." What makes it special is that it adapts to the natural structure of the distribution rather than imposing arbitrary thresholds. It finds the "elbow point" where good options end and the less relevant ones begin.</p>
<p><strong>Technical</strong>:<br>
TFS works by analyzing the curvature of the probability distribution to identify where the "tail" begins. We first sort the logits in descending order and convert them to probs. Then, calculate the absolute value of the second derivative (<code>diff().diff().abs()</code>), which captures how quickly the slope of the probability distribution changes. This identifies points where there are significant kinks in the curve - often indicating the transition between meaningful tokens and the long tail. The second derivatives are normalized to create a probability distribution of the curvature, and a cumulative distribution function (CDF) is calculated. The TFS parameter serves as a threshold on this CDF - when the cumulative curvature exceeds the threshold, tokens beyond that point are masked out. Of course, there needs to be boundary conditions to make sure at least one token always remains viable, and finally, return filtered logits to their original order.</p>
<p>TFS ultimately focues on the shape of the distribution rather than absolute values.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-12-1"> 1</a></span>
<span><a href="#L-12-2"> 2</a></span>
<span><a href="#L-12-3"> 3</a></span>
<span><a href="#L-12-4"> 4</a></span>
<span><a href="#L-12-5"> 5</a></span>
<span><a href="#L-12-6"> 6</a></span>
<span><a href="#L-12-7"> 7</a></span>
<span><a href="#L-12-8"> 8</a></span>
<span><a href="#L-12-9"> 9</a></span>
<span><a href="#L-12-10">10</a></span>
<span><a href="#L-12-11">11</a></span>
<span><a href="#L-12-12">12</a></span>
<span><a href="#L-12-13">13</a></span>
<span><a href="#L-12-14">14</a></span>
<span><a href="#L-12-15">15</a></span></pre></div></td><td><div><pre><span></span><span id="L-12-1"><a id="L-12-1" name="L-12-1"></a><span>Algorithm</span><span> </span><span>12</span><span> </span><span>Tail</span><span>-</span><span>Free</span><span> </span><span>Sampling</span><span> </span><span>(</span><span>TFS</span><span>)</span><span></span>
</span><span id="L-12-2"><a id="L-12-2" name="L-12-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>threshold</span><span> </span><span>t</span><span> </span><span>∈</span><span> </span><span>[</span><span>0,1</span><span>]</span><span></span>
</span><span id="L-12-3"><a id="L-12-3" name="L-12-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>"tail"</span><span> </span><span>of</span><span> </span><span>distribution</span><span> </span><span>filtered</span><span> </span><span>out</span><span></span>
</span><span id="L-12-4"><a id="L-12-4" name="L-12-4"></a><span>1</span><span>:</span><span> </span><span>Lsorted</span><span>,</span><span> </span><span>Lidx</span><span> </span><span>←</span><span> </span><span>Sort</span><span>(</span><span>L</span><span>,</span><span> </span><span>descending</span><span>=</span><span>True</span><span>)</span><span>  </span><span>//</span><span> </span><span>Sort</span><span> </span><span>logits</span><span> </span><span>in</span><span> </span><span>descending</span><span> </span><span>order</span><span></span>
</span><span id="L-12-5"><a id="L-12-5" name="L-12-5"></a><span>2</span><span>:</span><span> </span><span>P</span><span> </span><span>←</span><span> </span><span>Softmax</span><span>(</span><span>Lsorted</span><span>)</span><span>  </span><span>//</span><span> </span><span>Convert</span><span> </span><span>to</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-12-6"><a id="L-12-6" name="L-12-6"></a><span>3</span><span>:</span><span> </span><span>D1</span><span> </span><span>←</span><span> </span><span>Diff</span><span>(</span><span>P</span><span>)</span><span>  </span><span>//</span><span> </span><span>First</span><span> </span><span>differences</span><span> </span><span>(</span><span>slope</span><span>)</span><span></span>
</span><span id="L-12-7"><a id="L-12-7" name="L-12-7"></a><span>4</span><span>:</span><span> </span><span>D2</span><span> </span><span>←</span><span> </span><span>|</span><span>Diff</span><span>(</span><span>D1</span><span>)</span><span>|</span><span>  </span><span>//</span><span> </span><span>Absolute</span><span> </span><span>second</span><span> </span><span>differences</span><span> </span><span>(</span><span>change</span><span> </span><span>in</span><span> </span><span>slope</span><span>)</span><span></span>
</span><span id="L-12-8"><a id="L-12-8" name="L-12-8"></a><span>5</span><span>:</span><span> </span><span>D2norm</span><span> </span><span>←</span><span> </span><span>D2</span><span> </span><span>/</span><span> </span><span>Sum</span><span>(</span><span>D2</span><span>)</span><span>  </span><span>//</span><span> </span><span>Normalize</span><span> </span><span>curvature</span><span></span>
</span><span id="L-12-9"><a id="L-12-9" name="L-12-9"></a><span>6</span><span>:</span><span> </span><span>CurvatureCDF</span><span> </span><span>←</span><span> </span><span>CumulativeSum</span><span>(</span><span>D2norm</span><span>)</span><span>  </span><span>//</span><span> </span><span>Cumulative</span><span> </span><span>distribution</span><span> </span><span>of</span><span> </span><span>curvature</span><span></span>
</span><span id="L-12-10"><a id="L-12-10" name="L-12-10"></a><span>7</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>CurvatureCDF</span><span> </span><span>&gt;</span><span> </span><span>t</span><span>  </span><span>//</span><span> </span><span>Create</span><span> </span><span>mask</span><span> </span><span>where</span><span> </span><span>curvature</span><span> </span><span>CDF</span><span> </span><span>exceeds</span><span> </span><span>threshold</span><span></span>
</span><span id="L-12-11"><a id="L-12-11" name="L-12-11"></a><span>8</span><span>:</span><span> </span><span>//</span><span> </span><span>Add</span><span> </span><span>boundary</span><span> </span><span>conditions</span><span> </span><span>(</span><span>keep</span><span> </span><span>top</span><span> </span><span>token</span><span>,</span><span> </span><span>mask</span><span> </span><span>after</span><span> </span><span>end</span><span> </span><span>of</span><span> </span><span>vocabulary</span><span>)</span><span></span>
</span><span id="L-12-12"><a id="L-12-12" name="L-12-12"></a><span>9</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>Concatenate</span><span>(</span><span>[</span><span>False</span><span>]</span><span>,</span><span> </span><span>mask</span><span>,</span><span> </span><span>[</span><span>True</span><span>]</span><span>)</span><span></span>
</span><span id="L-12-13"><a id="L-12-13" name="L-12-13"></a><span>10</span><span>:</span><span> </span><span>Lsorted</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span>  </span><span>//</span><span> </span><span>Filter</span><span> </span><span>out</span><span> </span><span>tokens</span><span> </span><span>in</span><span> </span><span>the</span><span> </span><span>"tail"</span><span></span>
</span><span id="L-12-14"><a id="L-12-14" name="L-12-14"></a><span>11</span><span>:</span><span> </span><span>L</span><span> </span><span>←</span><span> </span><span>Unsort</span><span>(</span><span>Lsorted</span><span>,</span><span> </span><span>Lidx</span><span>)</span><span>  </span><span>//</span><span> </span><span>Restore</span><span> </span><span>original</span><span> </span><span>ordering</span><span></span>
</span><span id="L-12-15"><a id="L-12-15" name="L-12-15"></a><span>12</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="eta-cutoff">Eta Cutoff<a href="#eta-cutoff" title="Permanent link"> </a></h3>
<p>Eta Cutoff adapts to how certain or uncertain the model is. Using the previous analogy again, let's say you have a stack of resumes. If there's one clearly outstanding candidate, you might be very selective about who else gets an interview. But if all candidates are similarly qualified, you might interview more of them. Eta cutoff works on this principle by looking at both the individual probability of each word and the overall entropy (uncertainty) of the distribution. When the model is very certain about what comes next (low entropy), the cutoff threshold becomes stricter, keeping only the most probable options. When the model is uncertain (high entropy), the threshold becomes more lenient.</p>
<p><strong>Technical</strong>:<br>
We create a dynamic probability threshold that considers both the <code>eta</code> parameter and the entropy of the distribution. We calculate logprobs and then compute the negative entropy (perplexity) of the distribution. Then, determine the threshold (<code>eps</code>) as the minimum between <code>eta</code> and a function of <code>eta</code> modified by entropy: <code>sqrt(eta) * exp(neg_entropy)</code>. This creates a dynamic threshold for us that decreases when entropy is high and vice versa.</p>
<p>Any token with a probability below this threshold is masked out.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-13-1"> 1</a></span>
<span><a href="#L-13-2"> 2</a></span>
<span><a href="#L-13-3"> 3</a></span>
<span><a href="#L-13-4"> 4</a></span>
<span><a href="#L-13-5"> 5</a></span>
<span><a href="#L-13-6"> 6</a></span>
<span><a href="#L-13-7"> 7</a></span>
<span><a href="#L-13-8"> 8</a></span>
<span><a href="#L-13-9"> 9</a></span>
<span><a href="#L-13-10">10</a></span>
<span><a href="#L-13-11">11</a></span>
<span><a href="#L-13-12">12</a></span></pre></div></td><td><div><pre><span></span><span id="L-13-1"><a id="L-13-1" name="L-13-1"></a><span>Algorithm</span><span> </span><span>13</span><span> </span><span>Eta</span><span> </span><span>Cutoff</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-13-2"><a id="L-13-2" name="L-13-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>parameter</span><span> </span><span>η</span><span> </span><span>∈</span><span> </span><span>(</span><span>0</span><span>,</span><span>1</span><span>)</span><span></span>
</span><span id="L-13-3"><a id="L-13-3" name="L-13-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>dynamic</span><span> </span><span>low</span><span>-</span><span>probability</span><span> </span><span>filtering</span><span></span>
</span><span id="L-13-4"><a id="L-13-4" name="L-13-4"></a><span>1</span><span>:</span><span> </span><span>LN</span><span> </span><span>←</span><span> </span><span>LogSoftmax</span><span>(</span><span>L</span><span>)</span><span>  </span><span>//</span><span> </span><span>Log</span><span>-</span><span>normalized</span><span> </span><span>logits</span><span></span>
</span><span id="L-13-5"><a id="L-13-5" name="L-13-5"></a><span>2</span><span>:</span><span> </span><span>P</span><span> </span><span>←</span><span> </span><span>Exp</span><span>(</span><span>LN</span><span>)</span><span>  </span><span>//</span><span> </span><span>Convert</span><span> </span><span>to</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-13-6"><a id="L-13-6" name="L-13-6"></a><span>3</span><span>:</span><span> </span><span>H</span><span> </span><span>←</span><span> </span><span>-</span><span>Sum</span><span>(</span><span>P</span><span> </span><span>×</span><span> </span><span>LN</span><span>)</span><span>  </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>negative</span><span> </span><span>entropy</span><span> </span><span>(</span><span>higher</span><span> </span><span>means</span><span> </span><span>more</span><span> </span><span>certainty</span><span>)</span><span></span>
</span><span id="L-13-7"><a id="L-13-7" name="L-13-7"></a><span>4</span><span>:</span><span> </span><span>threshold</span><span> </span><span>←</span><span> </span><span>Min</span><span>(</span><span>η</span><span>,</span><span> </span><span>√</span><span>η</span><span> </span><span>×</span><span> </span><span>Exp</span><span>(</span><span>H</span><span>))</span><span>  </span><span>//</span><span> </span><span>Dynamic</span><span> </span><span>threshold</span><span> </span><span>based</span><span> </span><span>on</span><span> </span><span>certainty</span><span></span>
</span><span id="L-13-8"><a id="L-13-8" name="L-13-8"></a><span>5</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>P</span><span> </span><span>&lt;</span><span> </span><span>threshold</span><span>  </span><span>//</span><span> </span><span>Create</span><span> </span><span>mask</span><span> </span><span>for</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-13-9"><a id="L-13-9" name="L-13-9"></a><span>6</span><span>:</span><span> </span><span>topIdx</span><span> </span><span>←</span><span> </span><span>ArgMax</span><span>(</span><span>P</span><span>)</span><span>  </span><span>//</span><span> </span><span>Find</span><span> </span><span>index</span><span> </span><span>of</span><span> </span><span>highest</span><span> </span><span>probability</span><span> </span><span>token</span><span></span>
</span><span id="L-13-10"><a id="L-13-10" name="L-13-10"></a><span>7</span><span>:</span><span> </span><span>mask</span><span>[</span><span>topIdx</span><span>]</span><span> </span><span>←</span><span> </span><span>False</span><span>  </span><span>//</span><span> </span><span>Always</span><span> </span><span>keep</span><span> </span><span>highest</span><span> </span><span>probability</span><span> </span><span>token</span><span></span>
</span><span id="L-13-11"><a id="L-13-11" name="L-13-11"></a><span>8</span><span>:</span><span> </span><span>L</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span>  </span><span>//</span><span> </span><span>Filter</span><span> </span><span>out</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-13-12"><a id="L-13-12" name="L-13-12"></a><span>9</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="epsilon-cutoff">Epsilon Cutoff<a href="#epsilon-cutoff" title="Permanent link"> </a></h3>
<p>Like setting a minimum vote threshold in an election - any candidate who doesn't get at least a certain percentage of votes is eliminated. Basically a simpler version of filtering that removes all options below a fixed probability threshold.</p>
<p>It's a straightforward approach that removes extremely unlikely words without affecting the relative probabilities of the remaining options. It's useful for cleaning up the long tail of improbable tokens that might otherwise occasionally be selected due to random chance. Not as adaptive as other methods, but it's simple and predictable, and removes undesirables without dramatically changing the distribution's shape.</p>
<p><strong>Technical</strong>:<br>
A fixed probability threshold to eliminate unlikely tokens. Convert logits to probs using softmax, create a mask identifying tokens whose probabilities fall below the <code>epsilon</code> threshold. Any token below this threshold has its logits set to negative infinity.</p>
<p>its difference with eta cutoff is that epsilon uses a fixed threshold <em>regardless</em> of the distribution's properties. Both methods are ultimately a way to prune the vocabulary space without complex sorting operations, which may make inference slower.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td></td><td><div><pre><span></span><span id="L-14-1"><a id="L-14-1" name="L-14-1"></a><span>Algorithm</span><span> </span><span>14</span><span> </span><span>Epsilon</span><span> </span><span>Cutoff</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-14-2"><a id="L-14-2" name="L-14-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>threshold</span><span> </span><span>ε</span><span> </span><span>∈</span><span> </span><span>(</span><span>0</span><span>,</span><span>1</span><span>)</span><span></span>
</span><span id="L-14-3"><a id="L-14-3" name="L-14-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>fixed</span><span> </span><span>low</span><span>-</span><span>probability</span><span> </span><span>filtering</span><span></span>
</span><span id="L-14-4"><a id="L-14-4" name="L-14-4"></a><span>1</span><span>:</span><span> </span><span>P</span><span> </span><span>←</span><span> </span><span>Softmax</span><span>(</span><span>L</span><span>)</span><span>  </span><span>//</span><span> </span><span>Convert</span><span> </span><span>logits</span><span> </span><span>to</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-14-5"><a id="L-14-5" name="L-14-5"></a><span>2</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>P</span><span> </span><span>&lt;</span><span> </span><span>ε</span><span>  </span><span>//</span><span> </span><span>Create</span><span> </span><span>mask</span><span> </span><span>for</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>fixed</span><span> </span><span>threshold</span><span></span>
</span><span id="L-14-6"><a id="L-14-6" name="L-14-6"></a><span>3</span><span>:</span><span> </span><span>topIdx</span><span> </span><span>←</span><span> </span><span>ArgMax</span><span>(</span><span>P</span><span>)</span><span>  </span><span>//</span><span> </span><span>Find</span><span> </span><span>index</span><span> </span><span>of</span><span> </span><span>highest</span><span> </span><span>probability</span><span> </span><span>token</span><span></span>
</span><span id="L-14-7"><a id="L-14-7" name="L-14-7"></a><span>4</span><span>:</span><span> </span><span>mask</span><span>[</span><span>topIdx</span><span>]</span><span> </span><span>←</span><span> </span><span>False</span><span>  </span><span>//</span><span> </span><span>Always</span><span> </span><span>keep</span><span> </span><span>highest</span><span> </span><span>probability</span><span> </span><span>token</span><span></span>
</span><span id="L-14-8"><a id="L-14-8" name="L-14-8"></a><span>5</span><span>:</span><span> </span><span>L</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span>  </span><span>//</span><span> </span><span>Filter</span><span> </span><span>out</span><span> </span><span>tokens</span><span> </span><span>below</span><span> </span><span>threshold</span><span></span>
</span><span id="L-14-9"><a id="L-14-9" name="L-14-9"></a><span>6</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="locally-typical-sampling">Locally Typical Sampling<a href="#locally-typical-sampling" title="Permanent link"> </a></h3>
<p>This sampler is like focusing on the most "average" word choices rather than the most probable ones. Like you're writing a story and want it to sound natural but not predictable. Instead of always picking the most obvious words or completely random ones, you'd choose words that are neither too surprising nor too boring — words that feel "typically human."</p>
<p>The method itself works by measuring how much each potential word deviates from the average surprisal (unexpectedness) of all options. Words that are extremely predictable or extremely surprising are considered less "typical" than those with middle-of-the-road surprisal values. Typical sampling keeps tokens whose surprisal is close to the average, and might make the text feel more "balanced." It doesn't look at raw probabilities but at how predictable each word is within the context.</p>
<p><strong>Technical</strong>:<br>
Typical sampling selects tokens based on how close their "surprisal" (negative logprob) is to the average surprisal across all tokens. Calculate logprobs and then compute the negative entropy. For each token, calculate the absolute difference between its surprisal and this average — this is the "surprisal deviation" that measures how typical or atypical each token is. Tokens are then sorted by their surprisal deviation (most typical to least typical). The <code>typical-p</code> parameter determines what portion of the cumulative probability mass to keep.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-15-1"> 1</a></span>
<span><a href="#L-15-2"> 2</a></span>
<span><a href="#L-15-3"> 3</a></span>
<span><a href="#L-15-4"> 4</a></span>
<span><a href="#L-15-5"> 5</a></span>
<span><a href="#L-15-6"> 6</a></span>
<span><a href="#L-15-7"> 7</a></span>
<span><a href="#L-15-8"> 8</a></span>
<span><a href="#L-15-9"> 9</a></span>
<span><a href="#L-15-10">10</a></span>
<span><a href="#L-15-11">11</a></span>
<span><a href="#L-15-12">12</a></span>
<span><a href="#L-15-13">13</a></span>
<span><a href="#L-15-14">14</a></span>
<span><a href="#L-15-15">15</a></span></pre></div></td><td><div><pre><span></span><span id="L-15-1"><a id="L-15-1" name="L-15-1"></a><span>Algorithm</span><span> </span><span>15</span><span> </span><span>Locally</span><span> </span><span>Typical</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-15-2"><a id="L-15-2" name="L-15-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>threshold</span><span> </span><span>p</span><span> </span><span>∈</span><span> </span><span>[</span><span>0,1</span><span>]</span><span></span>
</span><span id="L-15-3"><a id="L-15-3" name="L-15-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>tokens</span><span> </span><span>furthest</span><span> </span><span>from</span><span> </span><span>mean</span><span> </span><span>surprisal</span><span> </span><span>filtered</span><span> </span><span>out</span><span></span>
</span><span id="L-15-4"><a id="L-15-4" name="L-15-4"></a><span>1</span><span>:</span><span> </span><span>LN</span><span> </span><span>←</span><span> </span><span>LogSoftmax</span><span>(</span><span>L</span><span>)</span><span>  </span><span>//</span><span> </span><span>Log</span><span>-</span><span>normalized</span><span> </span><span>logits</span><span></span>
</span><span id="L-15-5"><a id="L-15-5" name="L-15-5"></a><span>2</span><span>:</span><span> </span><span>P</span><span> </span><span>←</span><span> </span><span>Exp</span><span>(</span><span>LN</span><span>)</span><span>  </span><span>//</span><span> </span><span>Convert</span><span> </span><span>to</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-15-6"><a id="L-15-6" name="L-15-6"></a><span>3</span><span>:</span><span> </span><span>H</span><span> </span><span>←</span><span> </span><span>Sum</span><span>(</span><span>P</span><span> </span><span>×</span><span> </span><span>LN</span><span>)</span><span>  </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>negative</span><span> </span><span>entropy</span><span> </span><span>(</span><span>expected</span><span> </span><span>surprisal</span><span>)</span><span></span>
</span><span id="L-15-7"><a id="L-15-7" name="L-15-7"></a><span>4</span><span>:</span><span> </span><span>S</span><span> </span><span>←</span><span> </span><span>|</span><span>H</span><span> </span><span>-</span><span> </span><span>LN</span><span>|</span><span>  </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>surprisal</span><span> </span><span>deviation</span><span> </span><span>for</span><span> </span><span>each</span><span> </span><span>token</span><span></span>
</span><span id="L-15-8"><a id="L-15-8" name="L-15-8"></a><span>5</span><span>:</span><span> </span><span>Sidx</span><span> </span><span>←</span><span> </span><span>ArgsortAscending</span><span>(</span><span>S</span><span>)</span><span>  </span><span>//</span><span> </span><span>Sort</span><span> </span><span>indices</span><span> </span><span>by</span><span> </span><span>surprisal</span><span> </span><span>deviation</span><span> </span><span>(</span><span>most</span><span> </span><span>typical</span><span> </span><span>first</span><span>)</span><span></span>
</span><span id="L-15-9"><a id="L-15-9" name="L-15-9"></a><span>6</span><span>:</span><span> </span><span>Preordered</span><span> </span><span>←</span><span> </span><span>GatherByIndices</span><span>(</span><span>P</span><span>,</span><span> </span><span>Sidx</span><span>)</span><span>  </span><span>//</span><span> </span><span>Reorder</span><span> </span><span>probabilities</span><span> </span><span>by</span><span> </span><span>typicality</span><span></span>
</span><span id="L-15-10"><a id="L-15-10" name="L-15-10"></a><span>7</span><span>:</span><span> </span><span>Pcum</span><span> </span><span>←</span><span> </span><span>CumulativeSum</span><span>(</span><span>Preordered</span><span>)</span><span>  </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>cumulative</span><span> </span><span>sum</span><span> </span><span>of</span><span> </span><span>reordered</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-15-11"><a id="L-15-11" name="L-15-11"></a><span>8</span><span>:</span><span> </span><span>maskSorted</span><span> </span><span>←</span><span> </span><span>Pcum</span><span> </span><span>≥</span><span> </span><span>p</span><span>  </span><span>//</span><span> </span><span>Create</span><span> </span><span>mask</span><span> </span><span>where</span><span> </span><span>cumulative</span><span> </span><span>typical</span><span> </span><span>probability</span><span> </span><span>exceeds</span><span> </span><span>threshold</span><span></span>
</span><span id="L-15-12"><a id="L-15-12" name="L-15-12"></a><span>9</span><span>:</span><span> </span><span>maskSorted</span><span>[</span><span>0:MinTokensToKeep</span><span>]</span><span> </span><span>←</span><span> </span><span>False</span><span>  </span><span>//</span><span> </span><span>Always</span><span> </span><span>keep</span><span> </span><span>at</span><span> </span><span>least</span><span> </span><span>MinTokensToKeep</span><span> </span><span>tokens</span><span></span>
</span><span id="L-15-13"><a id="L-15-13" name="L-15-13"></a><span>10</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>ScatterByIndices</span><span>(</span><span>maskSorted</span><span>,</span><span> </span><span>Sidx</span><span>)</span><span>  </span><span>//</span><span> </span><span>Restore</span><span> </span><span>original</span><span> </span><span>ordering</span><span> </span><span>of</span><span> </span><span>mask</span><span></span>
</span><span id="L-15-14"><a id="L-15-14" name="L-15-14"></a><span>11</span><span>:</span><span> </span><span>L</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span>  </span><span>//</span><span> </span><span>Filter</span><span> </span><span>out</span><span> </span><span>tokens</span><span> </span><span>that</span><span> </span><span>are</span><span> </span><span>least</span><span> </span><span>typical</span><span></span>
</span><span id="L-15-15"><a id="L-15-15" name="L-15-15"></a><span>12</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="quadratic-sampling">Quadratic Sampling<a href="#quadratic-sampling" title="Permanent link"> </a></h3>
<p>Whereas most sampling techniques either filter out tokens (like Top-K) or simply adjust randomness (like Temperature), Quadratic Sampling takes a more nuanced approach by reshaping the entire probability distribution using mathematical transformations.</p>
<p>Quadratic works by applying a mathematical transformation that adjusts the gap between high and low prob tokens using quadratic and cubic equations (it was actually called Cubic sampling before the quadratic function was added later). The transformation is centered around the highest-scoring token, with two key params controlling the effect: the smoothing factor determines the overall strength of the adjustment, while the smoothing curve controls the shape of the transformation. It can essentially make the highest probability tokens more prominent while gently supressing the lower ones, or it can flatten the distribution to give more tokens a chance.</p>
<p><strong>Technical</strong>:<br>
Quadratic transforms the logits using a combination of quadratic and cubic terms. We calculate two coefficients: <code>k</code> and <code>s</code>, derived from the smoothing factor and curve params. Those coefficients control the balance between quadratic and cubic terms in the transformation. For each affected sequence, we identify the maximum logit value and calculate the difference between each logit and this maximum. Then, apply a transformation that adjusts this based on the quadratic equation: <code>diff -= diff²(s·diff - k)</code>. This creates a non-linear adjustment that varies depending on how far each logit is from the maximum. Because of that, the highest probability token is unchanged while others are adjusted relative to it. When <code>s</code> is positive, the cubic term increases the contrast between high and low logits (making the distribution more peaked). When <code>k</code> is positive, the quadratic term works to flatten the distribution.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-16-1"> 1</a></span>
<span><a href="#L-16-2"> 2</a></span>
<span><a href="#L-16-3"> 3</a></span>
<span><a href="#L-16-4"> 4</a></span>
<span><a href="#L-16-5"> 5</a></span>
<span><a href="#L-16-6"> 6</a></span>
<span><a href="#L-16-7"> 7</a></span>
<span><a href="#L-16-8"> 8</a></span>
<span><a href="#L-16-9"> 9</a></span>
<span><a href="#L-16-10">10</a></span>
<span><a href="#L-16-11">11</a></span>
<span><a href="#L-16-12">12</a></span>
<span><a href="#L-16-13">13</a></span>
<span><a href="#L-16-14">14</a></span>
<span><a href="#L-16-15">15</a></span>
<span><a href="#L-16-16">16</a></span>
<span><a href="#L-16-17">17</a></span>
<span><a href="#L-16-18">18</a></span>
<span><a href="#L-16-19">19</a></span>
<span><a href="#L-16-20">20</a></span>
<span><a href="#L-16-21">21</a></span>
<span><a href="#L-16-22">22</a></span>
<span><a href="#L-16-23">23</a></span>
<span><a href="#L-16-24">24</a></span>
<span><a href="#L-16-25">25</a></span>
<span><a href="#L-16-26">26</a></span>
<span><a href="#L-16-27">27</a></span></pre></div></td><td><div><pre><span></span><span id="L-16-1"><a id="L-16-1" name="L-16-1"></a><span>Algorithm</span><span> </span><span>16</span><span> </span><span>Quadratic</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-16-2"><a id="L-16-2" name="L-16-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>smoothing</span><span> </span><span>factor</span><span> </span><span>α</span><span>,</span><span> </span><span>smoothing</span><span> </span><span>curve</span><span> </span><span>β</span><span></span>
</span><span id="L-16-3"><a id="L-16-3" name="L-16-3"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>non</span><span>-</span><span>linear</span><span> </span><span>transformation</span><span> </span><span>applied</span><span></span>
</span><span id="L-16-4"><a id="L-16-4" name="L-16-4"></a><span>1</span><span>:</span><span> </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>coefficients</span><span> </span><span>for</span><span> </span><span>quadratic</span><span> </span><span>and</span><span> </span><span>cubic</span><span> </span><span>terms</span><span></span>
</span><span id="L-16-5"><a id="L-16-5" name="L-16-5"></a><span>2</span><span>:</span><span> </span><span>k</span><span> </span><span>←</span><span> </span><span>α</span><span> </span><span>×</span><span> </span><span>(</span><span>3</span><span> </span><span>-</span><span> </span><span>β</span><span>)</span><span> </span><span>/</span><span> </span><span>2</span><span>  </span><span>//</span><span> </span><span>Quadratic</span><span> </span><span>coefficient</span><span></span>
</span><span id="L-16-6"><a id="L-16-6" name="L-16-6"></a><span>3</span><span>:</span><span> </span><span>s</span><span> </span><span>←</span><span> </span><span>α</span><span> </span><span>×</span><span> </span><span>(</span><span>β</span><span> </span><span>-</span><span> </span><span>1</span><span>)</span><span> </span><span>/</span><span> </span><span>2</span><span>  </span><span>//</span><span> </span><span>Cubic</span><span> </span><span>coefficient</span><span></span>
</span><span id="L-16-7"><a id="L-16-7" name="L-16-7"></a><span>4</span><span>:</span><span></span>
</span><span id="L-16-8"><a id="L-16-8" name="L-16-8"></a><span>5</span><span>:</span><span> </span><span>//</span><span> </span><span>Apply</span><span> </span><span>transformation</span><span> </span><span>only</span><span> </span><span>where</span><span> </span><span>smoothing</span><span> </span><span>factor</span><span> </span><span>is</span><span> </span><span>non</span><span>-</span><span>zero</span><span></span>
</span><span id="L-16-9"><a id="L-16-9" name="L-16-9"></a><span>6</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>(</span><span>α</span><span> </span><span>≠</span><span> </span><span>0</span><span>)</span><span></span>
</span><span id="L-16-10"><a id="L-16-10" name="L-16-10"></a><span>7</span><span>:</span><span> </span><span>if</span><span> </span><span>not</span><span> </span><span>any</span><span>(</span><span>mask</span><span>)</span><span> </span><span>then</span><span> </span><span>return</span><span> </span><span>L</span><span> </span><span>end</span><span> </span><span>if</span><span></span>
</span><span id="L-16-11"><a id="L-16-11" name="L-16-11"></a><span>8</span><span>:</span><span></span>
</span><span id="L-16-12"><a id="L-16-12" name="L-16-12"></a><span>9</span><span>:</span><span> </span><span>Ltarget</span><span> </span><span>←</span><span> </span><span>L</span><span>[</span><span>mask</span><span>]</span><span>  </span><span>//</span><span> </span><span>Select</span><span> </span><span>logits</span><span> </span><span>to</span><span> </span><span>transform</span><span></span>
</span><span id="L-16-13"><a id="L-16-13" name="L-16-13"></a><span>10</span><span>:</span><span> </span><span>Lmax</span><span> </span><span>←</span><span> </span><span>Max</span><span>(</span><span>Ltarget</span><span>)</span><span>  </span><span>//</span><span> </span><span>Find</span><span> </span><span>maximum</span><span> </span><span>logit</span><span> </span><span>value</span><span></span>
</span><span id="L-16-14"><a id="L-16-14" name="L-16-14"></a><span>11</span><span>:</span><span> </span>
</span><span id="L-16-15"><a id="L-16-15" name="L-16-15"></a><span>12</span><span>:</span><span> </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>differences</span><span> </span><span>from</span><span> </span><span>maximum</span><span> </span><span>and</span><span> </span><span>apply</span><span> </span><span>transformation</span><span></span>
</span><span id="L-16-16"><a id="L-16-16" name="L-16-16"></a><span>13</span><span>:</span><span> </span><span>Δ</span><span> </span><span>←</span><span> </span><span>Ltarget</span><span> </span><span>-</span><span> </span><span>Lmax</span><span>  </span><span>//</span><span> </span><span>Distance</span><span> </span><span>from</span><span> </span><span>maximum</span><span> </span><span>logit</span><span></span>
</span><span id="L-16-17"><a id="L-16-17" name="L-16-17"></a><span>14</span><span>:</span><span></span>
</span><span id="L-16-18"><a id="L-16-18" name="L-16-18"></a><span>15</span><span>:</span><span> </span><span>//</span><span> </span><span>Apply</span><span> </span><span>quadratic</span><span> </span><span>transformation</span><span>:</span><span> </span><span>Δ</span><span> </span><span>-=</span><span> </span><span>Δ²</span><span>(</span><span>s</span><span>·</span><span>Δ</span><span> </span><span>-</span><span> </span><span>k</span><span>)</span><span></span>
</span><span id="L-16-19"><a id="L-16-19" name="L-16-19"></a><span>16</span><span>:</span><span> </span><span>Δnew</span><span> </span><span>←</span><span> </span><span>Δ</span><span> </span><span>-</span><span> </span><span>(</span><span>Δ²</span><span> </span><span>×</span><span> </span><span>(</span><span>s</span><span> </span><span>×</span><span> </span><span>Δ</span><span> </span><span>-</span><span> </span><span>k</span><span>))</span><span></span>
</span><span id="L-16-20"><a id="L-16-20" name="L-16-20"></a><span>17</span><span>:</span><span></span>
</span><span id="L-16-21"><a id="L-16-21" name="L-16-21"></a><span>18</span><span>:</span><span> </span><span>//</span><span> </span><span>Handle</span><span> </span><span>potential</span><span> </span><span>numerical</span><span> </span><span>issues</span><span></span>
</span><span id="L-16-22"><a id="L-16-22" name="L-16-22"></a><span>19</span><span>:</span><span> </span><span>Δnew</span><span>[</span><span>isNaN(Δnew)</span><span>]</span><span> </span><span>←</span><span> </span><span>0</span><span></span>
</span><span id="L-16-23"><a id="L-16-23" name="L-16-23"></a><span>20</span><span>:</span><span></span>
</span><span id="L-16-24"><a id="L-16-24" name="L-16-24"></a><span>21</span><span>:</span><span> </span><span>//</span><span> </span><span>Apply</span><span> </span><span>transformed</span><span> </span><span>differences</span><span></span>
</span><span id="L-16-25"><a id="L-16-25" name="L-16-25"></a><span>22</span><span>:</span><span> </span><span>L</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>Ltarget</span><span> </span><span>-</span><span> </span><span>Δnew</span><span></span>
</span><span id="L-16-26"><a id="L-16-26" name="L-16-26"></a><span>23</span><span>:</span><span></span>
</span><span id="L-16-27"><a id="L-16-27" name="L-16-27"></a><span>24</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="mirostat-sampling">Mirostat Sampling<a href="#mirostat-sampling" title="Permanent link"> </a></h3>
<p>Mirostat is like an adaptive thermostat for text generation that automatically adjusts to maintain a consistent level of "surprise" or unpredictability. Just as a thermostat keeps your room temperature stable by turning heating on and off, Mirostat keeps text generation at a consistent level of unpredictability by dynamically adjusting how conservative or creative the sampling is. It works by measuring the "surprisal" (how unexpected each token is) and comparing it to a target value. If recent text has been to predictable, Mirostat allows more surprising tokens to be selected. If it's been too chaotic, Mirostat tightens the constraints to focus on more predictable ones. This creates a feedback loop that maintains a consistent perplexity throughput the generated text. </p>
<p>Mirostat's main selling point is that it's self-regulating, adapting to different contexts without requiring manual parameter adjustment. </p>
<p><strong>Technical</strong>:<br>
Mirostat works as an adaptive token filtering method with a feedback control loop to maintain consistent perplexity.</p>
<p>The core algorithm has two main phases:</p>
<ol>
<li><strong>Filtering phase</strong>:<br>
</li>
</ol>
<ul>
<li>Calculate the "surprisal" (negative logprob, converted to bits) for each potential token.</li>
<li>Use an adaptive threshold ("mu") to filter out tokens that are too surprising.</li>
<li>Ensure at least one token (the most likely) remains available for selection.</li>
<li>Effectively create a dynamic Top-K filter where K varies based on the current <code>mu</code> value.</li>
</ul>
<ol start="2">
<li><strong>Update phase</strong>:<br>
</li>
</ol>
<ul>
<li>After a token is selected, calculate the actual surprisal of the chosen token.</li>
<li>Compare this surprisal to a target value ("tau").</li>
<li>Update the <code>mu</code> threshold based on the difference between actual and target surprisal.</li>
<li>An <code>eta</code> parameter controls how quickly <code>mu</code> adjusts (learning rate).</li>
</ul>
<p>The mathematical foundation is a control system using the equation <code>mu_{t+1} = mu_t - η × (surprisal_t - τ)</code></p>
<p>Where:</p>
<ul>
<li><code>mu</code> is the adaptively changing surprisal threshold</li>
<li><code>τ</code> (tau) is the target surprisal (perplexity)</li>
<li><code>η</code> (eta) is the learning rate</li>
<li><code>surprisal_t</code> is the surprisal of the chosen token</li>
</ul>
<p>This gives us a negative feedback loop that pushes generation towards the target surprisal level. If tokens are too surprising, <code>mu</code> decreases. If tokens are too precitable, <code>mu</code> increases. This sampling method is likely the most sophisticated and complex to exist.</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-17-1"> 1</a></span>
<span><a href="#L-17-2"> 2</a></span>
<span><a href="#L-17-3"> 3</a></span>
<span><a href="#L-17-4"> 4</a></span>
<span><a href="#L-17-5"> 5</a></span>
<span><a href="#L-17-6"> 6</a></span>
<span><a href="#L-17-7"> 7</a></span>
<span><a href="#L-17-8"> 8</a></span>
<span><a href="#L-17-9"> 9</a></span>
<span><a href="#L-17-10">10</a></span>
<span><a href="#L-17-11">11</a></span>
<span><a href="#L-17-12">12</a></span>
<span><a href="#L-17-13">13</a></span>
<span><a href="#L-17-14">14</a></span>
<span><a href="#L-17-15">15</a></span>
<span><a href="#L-17-16">16</a></span>
<span><a href="#L-17-17">17</a></span>
<span><a href="#L-17-18">18</a></span>
<span><a href="#L-17-19">19</a></span>
<span><a href="#L-17-20">20</a></span></pre></div></td><td><div><pre><span></span><span id="L-17-1"><a id="L-17-1" name="L-17-1"></a><span>Algorithm</span><span> </span><span>17</span><span> </span><span>Mirostat</span><span> </span><span>v2</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-17-2"><a id="L-17-2" name="L-17-2"></a><span>Required</span><span>:</span><span> </span><span>Logits</span><span> </span><span>tensor</span><span> </span><span>L</span><span>,</span><span> </span><span>mu</span><span> </span><span>parameter</span><span> </span><span>(</span><span>surprisal</span><span> </span><span>threshold</span><span>),</span><span> </span>
</span><span id="L-17-3"><a id="L-17-3" name="L-17-3"></a><span>          </span><span>tau</span><span> </span><span>parameter</span><span> </span><span>(</span><span>target</span><span> </span><span>surprisal</span><span>),</span><span> </span><span>eta</span><span> </span><span>parameter</span><span> </span><span>(</span><span>learning</span><span> </span><span>rate</span><span>)</span><span></span>
</span><span id="L-17-4"><a id="L-17-4" name="L-17-4"></a><span>Output</span><span>:</span><span> </span><span>Modified</span><span> </span><span>logits</span><span> </span><span>with</span><span> </span><span>dynamic</span><span> </span><span>filtering</span><span> </span><span>based</span><span> </span><span>on</span><span> </span><span>surprisal</span><span> </span><span>control</span><span></span>
</span><span id="L-17-5"><a id="L-17-5" name="L-17-5"></a>
</span><span id="L-17-6"><a id="L-17-6" name="L-17-6"></a><span>//</span><span> </span><span>Phase</span><span> </span><span>1</span><span>:</span><span> </span><span>Filter</span><span> </span><span>tokens</span><span> </span><span>based</span><span> </span><span>on</span><span> </span><span>current</span><span> </span><span>surprisal</span><span> </span><span>threshold</span><span></span>
</span><span id="L-17-7"><a id="L-17-7" name="L-17-7"></a><span>1</span><span>:</span><span> </span><span>LN</span><span> </span><span>←</span><span> </span><span>LogSoftmax</span><span>(</span><span>L</span><span>)</span><span>  </span><span>//</span><span> </span><span>Log</span><span>-</span><span>normalized</span><span> </span><span>logits</span><span></span>
</span><span id="L-17-8"><a id="L-17-8" name="L-17-8"></a><span>2</span><span>:</span><span> </span><span>S</span><span> </span><span>←</span><span> </span><span>-</span><span>LN</span><span> </span><span>/</span><span> </span><span>log</span><span>(</span><span>2</span><span>)</span><span>  </span><span>//</span><span> </span><span>Convert</span><span> </span><span>to</span><span> </span><span>surprisal</span><span> </span><span>in</span><span> </span><span>bits</span><span></span>
</span><span id="L-17-9"><a id="L-17-9" name="L-17-9"></a><span>3</span><span>:</span><span> </span><span>mask</span><span> </span><span>←</span><span> </span><span>S</span><span> </span><span>&gt;</span><span> </span><span>μ</span><span>  </span><span>//</span><span> </span><span>Create</span><span> </span><span>mask</span><span> </span><span>for</span><span> </span><span>tokens</span><span> </span><span>with</span><span> </span><span>surprisal</span><span> </span><span>exceeding</span><span> </span><span>threshold</span><span></span>
</span><span id="L-17-10"><a id="L-17-10" name="L-17-10"></a><span>4</span><span>:</span><span> </span><span>topIdx</span><span> </span><span>←</span><span> </span><span>ArgMax</span><span>(</span><span>L</span><span>)</span><span>  </span><span>//</span><span> </span><span>Find</span><span> </span><span>index</span><span> </span><span>of</span><span> </span><span>highest</span><span> </span><span>probability</span><span> </span><span>token</span><span></span>
</span><span id="L-17-11"><a id="L-17-11" name="L-17-11"></a><span>5</span><span>:</span><span> </span><span>mask</span><span>[</span><span>topIdx</span><span>]</span><span> </span><span>←</span><span> </span><span>False</span><span>  </span><span>//</span><span> </span><span>Always</span><span> </span><span>keep</span><span> </span><span>highest</span><span> </span><span>probability</span><span> </span><span>token</span><span></span>
</span><span id="L-17-12"><a id="L-17-12" name="L-17-12"></a><span>6</span><span>:</span><span> </span><span>L</span><span>[</span><span>mask</span><span>]</span><span> </span><span>←</span><span> </span><span>-</span><span>∞</span><span>  </span><span>//</span><span> </span><span>Filter</span><span> </span><span>out</span><span> </span><span>tokens</span><span> </span><span>above</span><span> </span><span>surprisal</span><span> </span><span>threshold</span><span></span>
</span><span id="L-17-13"><a id="L-17-13" name="L-17-13"></a><span>7</span><span>:</span><span> </span><span>//</span><span> </span><span>At</span><span> </span><span>this</span><span> </span><span>point</span><span>,</span><span> </span><span>token</span><span> </span><span>selection</span><span> </span><span>would</span><span> </span><span>occur</span><span> </span><span>using</span><span> </span><span>the</span><span> </span><span>filtered</span><span> </span><span>logits</span><span></span>
</span><span id="L-17-14"><a id="L-17-14" name="L-17-14"></a>
</span><span id="L-17-15"><a id="L-17-15" name="L-17-15"></a><span>//</span><span> </span><span>Phase</span><span> </span><span>2</span><span>:</span><span> </span><span>Update</span><span> </span><span>mu</span><span> </span><span>based</span><span> </span><span>on</span><span> </span><span>selected</span><span> </span><span>token</span><span> </span><span>(</span><span>performed</span><span> </span><span>after</span><span> </span><span>token</span><span> </span><span>selection</span><span>)</span><span></span>
</span><span id="L-17-16"><a id="L-17-16" name="L-17-16"></a><span>8</span><span>:</span><span> </span><span>t</span><span> </span><span>←</span><span> </span><span>SelectedToken</span><span>  </span><span>//</span><span> </span><span>Token</span><span> </span><span>chosen</span><span> </span><span>after</span><span> </span><span>filtering</span><span></span>
</span><span id="L-17-17"><a id="L-17-17" name="L-17-17"></a><span>9</span><span>:</span><span> </span><span>St</span><span> </span><span>←</span><span> </span><span>-</span><span>LogProb</span><span>(</span><span>t</span><span>)</span><span> </span><span>/</span><span> </span><span>log</span><span>(</span><span>2</span><span>)</span><span>  </span><span>//</span><span> </span><span>Surprisal</span><span> </span><span>of</span><span> </span><span>selected</span><span> </span><span>token</span><span> </span><span>in</span><span> </span><span>bits</span><span></span>
</span><span id="L-17-18"><a id="L-17-18" name="L-17-18"></a><span>10</span><span>:</span><span> </span><span>μnew</span><span> </span><span>←</span><span> </span><span>μ</span><span> </span><span>-</span><span> </span><span>η</span><span> </span><span>×</span><span> </span><span>(</span><span>St</span><span> </span><span>-</span><span> </span><span>τ</span><span>)</span><span>  </span><span>//</span><span> </span><span>Update</span><span> </span><span>mu</span><span> </span><span>using</span><span> </span><span>control</span><span> </span><span>equation</span><span></span>
</span><span id="L-17-19"><a id="L-17-19" name="L-17-19"></a><span>11</span><span>:</span><span> </span><span>StoreForNextStep</span><span>(</span><span>μnew</span><span>)</span><span>  </span><span>//</span><span> </span><span>Save</span><span> </span><span>updated</span><span> </span><span>mu</span><span> </span><span>for</span><span> </span><span>next</span><span> </span><span>token</span><span> </span><span>generation</span><span></span>
</span><span id="L-17-20"><a id="L-17-20" name="L-17-20"></a><span>12</span><span>:</span><span> </span><span>return</span><span> </span><span>L</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="dynamic-temperature-sampling">Dynamic Temperature Sampling<a href="#dynamic-temperature-sampling" title="Permanent link"> </a></h3>
<p>This method adjusts the temperature value based on the entropy (uncertainty) of the current token distribution. When the model is very certain about what comes next (low entropy), it uses a higher temperature to introduce more diversity. When the model is already uncertain (high entropy), it uses a lower temperature to keep the output more focused and coherent. You simply set a minimum and maximum temperature, then an exponent that controls how quickly it transitions between them based on the context's entropy, and the sampler will do the rest.</p>
<p><strong>Technical</strong>:<br>
Dynatemp automatically adjusts the temp param based on the normalized entropy of the prob distribution. We calculate the probability distribution and compute its entropy, which measures how spread out or concentrated the probabilities are.</p>
<p>This entropy is then normalized by dividing the maximum possible entropy (log of the number of tokens with finite logits). This gives us a value between 0 and 1, where 0 represents minimum entropy and 1 represents maximum entropy. The normalized entropy is raised to a power controlled by the exponent parameter, allowing for non-linear mapping between entropy and temperature. This transformed value is then used to interpolate between the min and max temp settings:</p>
<p><code>temperature = min_temp + (max_temp - min_temp) * (normalized_entropy ^ exponent)</code></p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-18-1"> 1</a></span>
<span><a href="#L-18-2"> 2</a></span>
<span><a href="#L-18-3"> 3</a></span>
<span><a href="#L-18-4"> 4</a></span>
<span><a href="#L-18-5"> 5</a></span>
<span><a href="#L-18-6"> 6</a></span>
<span><a href="#L-18-7"> 7</a></span>
<span><a href="#L-18-8"> 8</a></span>
<span><a href="#L-18-9"> 9</a></span>
<span><a href="#L-18-10">10</a></span>
<span><a href="#L-18-11">11</a></span>
<span><a href="#L-18-12">12</a></span></pre></div></td><td><div><pre><span></span><span id="L-18-1"><a id="L-18-1" name="L-18-1"></a><span>Algorithm</span> <span>18</span> <span>Dynamic</span> <span>Temperature</span> <span>Sampling</span>
</span><span id="L-18-2"><a id="L-18-2" name="L-18-2"></a><span>Required</span>: <span>Logits</span> <span>tensor</span> <span>L</span>, <span>minimum</span> <span>temperature</span> <span>Tmin</span>, <span>maximum</span> <span>temperature</span> <span>Tmax</span>, <span>exponent</span> α
</span><span id="L-18-3"><a id="L-18-3" name="L-18-3"></a><span>Output</span>: <span>Temperature</span> <span>value</span> <span>T</span> <span>dynamically</span> <span>calculated</span> <span>based</span> <span>on</span> <span>distribution</span> <span>entropy</span>
</span><span id="L-18-4"><a id="L-18-4" name="L-18-4"></a><span>1</span>: <span>P</span> ← <span>softmax</span><span>(</span><span>L</span><span>)</span>  <span>//</span> <span>Calculate</span> <span>probability</span> <span>distribution</span>
</span><span id="L-18-5"><a id="L-18-5" name="L-18-5"></a><span>2</span>: <span>H</span> ← <span>-</span>∑<span>(</span><span>P</span> · <span>log</span><span>(</span><span>P</span><span>))</span>  <span>//</span> <span>Calculate</span> <span>entropy</span> <span>of</span> <span>the</span> <span>distribution</span>
</span><span id="L-18-6"><a id="L-18-6" name="L-18-6"></a><span>3</span>: <span>Vvalid</span> ← <span>|</span>{<span>l</span> ∈ <span>L</span> <span>|</span> <span>l</span> <span>&gt;</span> <span>-</span>∞}<span>|</span>  <span>//</span> <span>Count</span> <span>tokens</span> <span>with</span> <span>finite</span> <span>logits</span>
</span><span id="L-18-7"><a id="L-18-7" name="L-18-7"></a><span>4</span>: <span>Hmax</span> ← <span>log</span><span>(</span><span>Vvalid</span><span>)</span>  <span>//</span> <span>Maximum</span> <span>possible</span> <span>entropy</span>
</span><span id="L-18-8"><a id="L-18-8" name="L-18-8"></a><span>5</span>: <span>Hnorm</span> ← <span>H</span> <span>/</span> <span>Hmax</span>  <span>//</span> <span>Normalize</span> <span>entropy</span> <span>to</span> <span>range</span> [<span>0</span>,<span>1</span>]
</span><span id="L-18-9"><a id="L-18-9" name="L-18-9"></a><span>6</span>: <span>Htrans</span> ← <span>Hnorm</span><span>^</span>α  <span>//</span> <span>Apply</span> <span>non</span><span>-</span><span>linear</span> <span>transformation</span> <span>based</span> <span>on</span> <span>exponent</span>
</span><span id="L-18-10"><a id="L-18-10" name="L-18-10"></a><span>7</span>: <span>T</span> ← <span>Tmin</span> <span>+</span> <span>(</span><span>Tmax</span> <span>-</span> <span>Tmin</span><span>)</span> · <span>Htrans</span>  <span>//</span> <span>Interpolate</span> <span>between</span> <span>min</span> <span>and</span> <span>max</span> <span>temperature</span>
</span><span id="L-18-11"><a id="L-18-11" name="L-18-11"></a><span>8</span>: <span>T</span> ← <span>max</span><span>(</span><span>T</span>, ε<span>)</span>  <span>//</span> <span>Ensure</span> <span>temperature</span> <span>is</span> <span>within</span> <span>valid</span> <span>bounds</span>
</span><span id="L-18-12"><a id="L-18-12" name="L-18-12"></a><span>9</span>: <span>return</span> <span>T</span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="beam-search">Beam Search<a href="#beam-search" title="Permanent link"> </a></h3>
<p>Beam search is like exploring multiple paths on a map simultaneously to find the best overall route. Instead of making a single choice at each step and hoping it leads to a good outcome (as in greedy, i.e. 0 temperature, or random sampling, i.e. every other sampling method described here), beam search maintains multiple "parallel universes" of text generation and continuously evaluates which ones are most promising. Imagine you're writing a story and reach a point where you could continue in several different ways. Rather than committing to just one direction, beam search would explore, say, the top 5 continuations simultaneously. At the next decision point, it'd consider possible continuations for all 5 paths, then keep only the 5 best paths overall. This process repeats until the generation is complete.</p>
<p>Beam search isn't used much anymore, because it's expensive, and there are better sampling methods out there.</p>
<p><strong>Technical</strong>:<br>
Beam search maintains and expands a fixed number of candidate sequences (the beam width) at each decoding step, selecting the overall most probable sequences.<br>
We implement it in two phases: the <strong>prompt phase</strong>, and the <strong>generation phase</strong>. When processing the initial prompt, we simply select the top <code>2k</code> (twice the beam width) most likely tokens from the probability distribution. This creates our initial set of candidate sequences. Then in the next phase, during ongoing generation, we take each of the current beam sequences and their accumulated logprobs, add the logprobs of each possible next token to create combined scores, flatten these scores across all beam sequences and vocabs, select the top <code>2k</code> combinations of <code>(parent sequence, next token)</code>, and then finally extract the parent indices and next token IDs from these combinations. </p>
<p>Typically, we sample twice the beam width candidates at each step to ensure enough valid candidates remain after filtering out completed sequence. This approach was popularized by Google's Tensor2Tensor library and is now the standard. Mathematically, beam search chooses the <code>k</code> sequences with the highest scores, where the score for a sequence is the sum of logprobs of all tokens in that sequence. This maximizes the joint probability of the entire sequence rather than making locally optimal choices at each step, which is what greedy decoding does. </p>
<p>Unlike random sampling, beam search is deterministic and will always produce the same output given the same input (assuming ties are broken consistently).</p>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-19-1"> 1</a></span>
<span><a href="#L-19-2"> 2</a></span>
<span><a href="#L-19-3"> 3</a></span>
<span><a href="#L-19-4"> 4</a></span>
<span><a href="#L-19-5"> 5</a></span>
<span><a href="#L-19-6"> 6</a></span>
<span><a href="#L-19-7"> 7</a></span>
<span><a href="#L-19-8"> 8</a></span>
<span><a href="#L-19-9"> 9</a></span>
<span><a href="#L-19-10">10</a></span>
<span><a href="#L-19-11">11</a></span>
<span><a href="#L-19-12">12</a></span>
<span><a href="#L-19-13">13</a></span>
<span><a href="#L-19-14">14</a></span>
<span><a href="#L-19-15">15</a></span>
<span><a href="#L-19-16">16</a></span>
<span><a href="#L-19-17">17</a></span>
<span><a href="#L-19-18">18</a></span>
<span><a href="#L-19-19">19</a></span>
<span><a href="#L-19-20">20</a></span>
<span><a href="#L-19-21">21</a></span>
<span><a href="#L-19-22">22</a></span>
<span><a href="#L-19-23">23</a></span>
<span><a href="#L-19-24">24</a></span>
<span><a href="#L-19-25">25</a></span>
<span><a href="#L-19-26">26</a></span>
<span><a href="#L-19-27">27</a></span>
<span><a href="#L-19-28">28</a></span>
<span><a href="#L-19-29">29</a></span>
<span><a href="#L-19-30">30</a></span>
<span><a href="#L-19-31">31</a></span>
<span><a href="#L-19-32">32</a></span>
<span><a href="#L-19-33">33</a></span>
<span><a href="#L-19-34">34</a></span>
<span><a href="#L-19-35">35</a></span>
<span><a href="#L-19-36">36</a></span>
<span><a href="#L-19-37">37</a></span>
<span><a href="#L-19-38">38</a></span>
<span><a href="#L-19-39">39</a></span>
<span><a href="#L-19-40">40</a></span>
<span><a href="#L-19-41">41</a></span>
<span><a href="#L-19-42">42</a></span>
<span><a href="#L-19-43">43</a></span>
<span><a href="#L-19-44">44</a></span>
<span><a href="#L-19-45">45</a></span>
<span><a href="#L-19-46">46</a></span>
<span><a href="#L-19-47">47</a></span>
<span><a href="#L-19-48">48</a></span>
<span><a href="#L-19-49">49</a></span>
<span><a href="#L-19-50">50</a></span>
<span><a href="#L-19-51">51</a></span>
<span><a href="#L-19-52">52</a></span>
<span><a href="#L-19-53">53</a></span>
<span><a href="#L-19-54">54</a></span>
<span><a href="#L-19-55">55</a></span>
<span><a href="#L-19-56">56</a></span>
<span><a href="#L-19-57">57</a></span></pre></div></td><td><div><pre><span></span><span id="L-19-1"><a id="L-19-1" name="L-19-1"></a><span>Algorithm</span><span> </span><span>19</span><span> </span><span>Beam</span><span> </span><span>Search</span><span> </span><span>Sampling</span><span></span>
</span><span id="L-19-2"><a id="L-19-2" name="L-19-2"></a><span>Required</span><span>:</span><span> </span><span>Input</span><span> </span><span>sequence</span><span>(</span><span>s</span><span>),</span><span> </span><span>beam</span><span> </span><span>width</span><span> </span><span>k</span><span>,</span><span> </span><span>vocabulary</span><span> </span><span>size</span><span> </span><span>V</span><span>,</span><span> </span><span>language</span><span> </span><span>model</span><span> </span><span>LM</span><span></span>
</span><span id="L-19-3"><a id="L-19-3" name="L-19-3"></a><span>Output</span><span>:</span><span> </span><span>Top</span><span> </span><span>k</span><span> </span><span>most</span><span> </span><span>likely</span><span> </span><span>sequence</span><span> </span><span>continuations</span><span></span>
</span><span id="L-19-4"><a id="L-19-4" name="L-19-4"></a>
</span><span id="L-19-5"><a id="L-19-5" name="L-19-5"></a><span>//</span><span> </span><span>Phase</span><span> </span><span>1</span><span>:</span><span> </span><span>Initialization</span><span></span>
</span><span id="L-19-6"><a id="L-19-6" name="L-19-6"></a><span>1</span><span>:</span><span> </span><span>Initialize</span><span> </span><span>empty</span><span> </span><span>beam</span><span> </span><span>B</span><span> </span><span>=</span><span> </span><span>[]</span><span></span>
</span><span id="L-19-7"><a id="L-19-7" name="L-19-7"></a><span>2</span><span>:</span><span> </span><span>Initialize</span><span> </span><span>first</span><span> </span><span>sequence</span><span> </span><span>with</span><span> </span><span>empty</span><span> </span><span>text</span><span> </span><span>and</span><span> </span><span>score</span><span> </span><span>0</span><span></span>
</span><span id="L-19-8"><a id="L-19-8" name="L-19-8"></a>
</span><span id="L-19-9"><a id="L-19-9" name="L-19-9"></a><span>//</span><span> </span><span>Phase</span><span> </span><span>2</span><span>:</span><span> </span><span>Prompt</span><span> </span><span>Processing</span><span></span>
</span><span id="L-19-10"><a id="L-19-10" name="L-19-10"></a><span>3</span><span>:</span><span> </span><span>logprobs</span><span> </span><span>←</span><span> </span><span>LM</span><span>(</span><span>prompt</span><span>)</span><span>  </span><span>//</span><span> </span><span>Get</span><span> </span><span>logprobs</span><span> </span><span>for</span><span> </span><span>next</span><span> </span><span>token</span><span> </span><span>given</span><span> </span><span>prompt</span><span></span>
</span><span id="L-19-11"><a id="L-19-11" name="L-19-11"></a><span>4</span><span>:</span><span> </span><span>candidates</span><span> </span><span>←</span><span> </span><span>[]</span><span></span>
</span><span id="L-19-12"><a id="L-19-12" name="L-19-12"></a><span>5</span><span>:</span><span> </span><span>//</span><span> </span><span>Select</span><span> </span><span>2</span><span>k</span><span> </span><span>tokens</span><span> </span><span>to</span><span> </span><span>ensure</span><span> </span><span>enough</span><span> </span><span>valid</span><span> </span><span>candidates</span><span> </span><span>remain</span><span></span>
</span><span id="L-19-13"><a id="L-19-13" name="L-19-13"></a><span>6</span><span>:</span><span> </span><span>tokens</span><span>,</span><span> </span><span>scores</span><span> </span><span>←</span><span> </span><span>TopK</span><span>(</span><span>logprobs</span><span>,</span><span> </span><span>2</span><span>k</span><span>)</span><span></span>
</span><span id="L-19-14"><a id="L-19-14" name="L-19-14"></a><span>7</span><span>:</span><span> </span><span>for</span><span> </span><span>each</span><span> </span><span>token</span><span> </span><span>t</span><span>,</span><span> </span><span>score</span><span> </span><span>s</span><span> </span><span>in</span><span> </span><span>(</span><span>tokens</span><span>,</span><span> </span><span>scores</span><span>)</span><span> </span><span>do</span><span></span>
</span><span id="L-19-15"><a id="L-19-15" name="L-19-15"></a><span>8</span><span>:</span><span>     </span><span>candidates</span><span>.</span><span>append</span><span>((</span><span>prompt</span><span> </span><span>+</span><span> </span><span>t</span><span>,</span><span> </span><span>s</span><span>,</span><span> </span><span>0</span><span>))</span><span>  </span><span>//</span><span> </span><span>(</span><span>sequence</span><span>,</span><span> </span><span>score</span><span>,</span><span> </span><span>parent_idx</span><span>)</span><span></span>
</span><span id="L-19-16"><a id="L-19-16" name="L-19-16"></a><span>9</span><span>:</span><span> </span><span>end</span><span> </span><span>for</span><span></span>
</span><span id="L-19-17"><a id="L-19-17" name="L-19-17"></a><span>10</span><span>:</span><span> </span><span>Sort</span><span> </span><span>candidates</span><span> </span><span>by</span><span> </span><span>score</span><span> </span><span>(</span><span>descending</span><span>)</span><span></span>
</span><span id="L-19-18"><a id="L-19-18" name="L-19-18"></a><span>11</span><span>:</span><span> </span><span>B</span><span> </span><span>←</span><span> </span><span>candidates</span><span>[</span><span>:k</span><span>]</span><span>  </span><span>//</span><span> </span><span>Keep</span><span> </span><span>top</span><span> </span><span>k</span><span> </span><span>candidates</span><span></span>
</span><span id="L-19-19"><a id="L-19-19" name="L-19-19"></a>
</span><span id="L-19-20"><a id="L-19-20" name="L-19-20"></a><span>//</span><span> </span><span>Phase</span><span> </span><span>3</span><span>:</span><span> </span><span>Generation</span><span> </span><span>Phase</span><span></span>
</span><span id="L-19-21"><a id="L-19-21" name="L-19-21"></a><span>12</span><span>:</span><span> </span><span>for</span><span> </span><span>each</span><span> </span><span>decoding</span><span> </span><span>step</span><span> </span><span>do</span><span></span>
</span><span id="L-19-22"><a id="L-19-22" name="L-19-22"></a><span>13</span><span>:</span><span>     </span><span>candidates</span><span> </span><span>←</span><span> </span><span>[]</span><span></span>
</span><span id="L-19-23"><a id="L-19-23" name="L-19-23"></a><span>14</span><span>:</span><span>     </span><span>//</span><span> </span><span>For</span><span> </span><span>each</span><span> </span><span>sequence</span><span> </span><span>in</span><span> </span><span>the</span><span> </span><span>beam</span><span></span>
</span><span id="L-19-24"><a id="L-19-24" name="L-19-24"></a><span>15</span><span>:</span><span>     </span><span>for</span><span> </span><span>i</span><span> </span><span>from</span><span> </span><span>0</span><span> </span><span>to</span><span> </span><span>|</span><span>B</span><span>|-</span><span>1</span><span> </span><span>do</span><span></span>
</span><span id="L-19-25"><a id="L-19-25" name="L-19-25"></a><span>16</span><span>:</span><span>         </span><span>seq</span><span>,</span><span> </span><span>cum_score</span><span>,</span><span> </span><span>_</span><span> </span><span>←</span><span> </span><span>B</span><span>[</span><span>i</span><span>]</span><span></span>
</span><span id="L-19-26"><a id="L-19-26" name="L-19-26"></a><span>17</span><span>:</span><span>         </span><span>logprobs</span><span> </span><span>←</span><span> </span><span>LM</span><span>(</span><span>seq</span><span>)</span><span>  </span><span>//</span><span> </span><span>Get</span><span> </span><span>logprobs</span><span> </span><span>for</span><span> </span><span>next</span><span> </span><span>token</span><span> </span><span>given</span><span> </span><span>sequence</span><span></span>
</span><span id="L-19-27"><a id="L-19-27" name="L-19-27"></a><span>18</span><span>:</span><span>         </span><span>//</span><span> </span><span>Add</span><span> </span><span>cumulative</span><span> </span><span>score</span><span> </span><span>to</span><span> </span><span>current</span><span> </span><span>logprobs</span><span></span>
</span><span id="L-19-28"><a id="L-19-28" name="L-19-28"></a><span>19</span><span>:</span><span>         </span><span>full_scores</span><span> </span><span>←</span><span> </span><span>logprobs</span><span> </span><span>+</span><span> </span><span>cum_score</span><span></span>
</span><span id="L-19-29"><a id="L-19-29" name="L-19-29"></a><span>20</span><span>:</span><span>         </span><span>//</span><span> </span><span>Flatten</span><span> </span><span>scores</span><span> </span><span>across</span><span> </span><span>all</span><span> </span><span>beam</span><span> </span><span>sequences</span><span> </span><span>and</span><span> </span><span>vocabulary</span><span></span>
</span><span id="L-19-30"><a id="L-19-30" name="L-19-30"></a><span>21</span><span>:</span><span>         </span><span>all_scores</span><span>.</span><span>append</span><span>(</span><span>full_scores</span><span>)</span><span></span>
</span><span id="L-19-31"><a id="L-19-31" name="L-19-31"></a><span>22</span><span>:</span><span>     </span><span>end</span><span> </span><span>for</span><span></span>
</span><span id="L-19-32"><a id="L-19-32" name="L-19-32"></a><span>23</span><span>:</span><span></span>
</span><span id="L-19-33"><a id="L-19-33" name="L-19-33"></a><span>24</span><span>:</span><span>     </span><span>//</span><span> </span><span>Select</span><span> </span><span>2</span><span>k</span><span> </span><span>highest</span><span> </span><span>scoring</span><span> </span><span>(</span><span>sequence</span><span>,</span><span> </span><span>next_token</span><span>)</span><span> </span><span>combinations</span><span></span>
</span><span id="L-19-34"><a id="L-19-34" name="L-19-34"></a><span>25</span><span>:</span><span>     </span><span>flat_scores</span><span> </span><span>←</span><span> </span><span>Flatten</span><span>(</span><span>all_scores</span><span>)</span><span>  </span><span>//</span><span> </span><span>Size</span><span>:</span><span> </span><span>(</span><span>beam_width</span><span> </span><span>×</span><span> </span><span>vocab_size</span><span>)</span><span></span>
</span><span id="L-19-35"><a id="L-19-35" name="L-19-35"></a><span>26</span><span>:</span><span>     </span><span>top_indices</span><span>,</span><span> </span><span>top_scores</span><span> </span><span>←</span><span> </span><span>TopK</span><span>(</span><span>flat_scores</span><span>,</span><span> </span><span>2</span><span>k</span><span>)</span><span></span>
</span><span id="L-19-36"><a id="L-19-36" name="L-19-36"></a><span>27</span><span>:</span><span></span>
</span><span id="L-19-37"><a id="L-19-37" name="L-19-37"></a><span>28</span><span>:</span><span>     </span><span>//</span><span> </span><span>Extract</span><span> </span><span>parent</span><span> </span><span>sequence</span><span> </span><span>index</span><span> </span><span>and</span><span> </span><span>token</span><span> </span><span>id</span><span> </span><span>from</span><span> </span><span>flat</span><span> </span><span>indices</span><span></span>
</span><span id="L-19-38"><a id="L-19-38" name="L-19-38"></a><span>29</span><span>:</span><span>     </span><span>for</span><span> </span><span>each</span><span> </span><span>idx</span><span>,</span><span> </span><span>score</span><span> </span><span>in</span><span> </span><span>(</span><span>top_indices</span><span>,</span><span> </span><span>top_scores</span><span>)</span><span> </span><span>do</span><span></span>
</span><span id="L-19-39"><a id="L-19-39" name="L-19-39"></a><span>30</span><span>:</span><span>         </span><span>parent_idx</span><span> </span><span>←</span><span> </span><span>idx</span><span> </span><span>÷</span><span> </span><span>V</span><span>  </span><span>//</span><span> </span><span>Integer</span><span> </span><span>division</span><span></span>
</span><span id="L-19-40"><a id="L-19-40" name="L-19-40"></a><span>31</span><span>:</span><span>         </span><span>token_id</span><span> </span><span>←</span><span> </span><span>idx</span><span> </span><span>mod</span><span> </span><span>V</span><span></span>
</span><span id="L-19-41"><a id="L-19-41" name="L-19-41"></a><span>32</span><span>:</span><span>         </span><span>parent_seq</span><span>,</span><span> </span><span>parent_score</span><span>,</span><span> </span><span>_</span><span> </span><span>←</span><span> </span><span>B</span><span>[</span><span>parent_idx</span><span>]</span><span></span>
</span><span id="L-19-42"><a id="L-19-42" name="L-19-42"></a><span>33</span><span>:</span><span>         </span><span>candidates</span><span>.</span><span>append</span><span>((</span><span>parent_seq</span><span> </span><span>+</span><span> </span><span>token_id</span><span>,</span><span> </span><span>score</span><span>,</span><span> </span><span>parent_idx</span><span>))</span><span></span>
</span><span id="L-19-43"><a id="L-19-43" name="L-19-43"></a><span>34</span><span>:</span><span>     </span><span>end</span><span> </span><span>for</span><span></span>
</span><span id="L-19-44"><a id="L-19-44" name="L-19-44"></a><span>35</span><span>:</span><span></span>
</span><span id="L-19-45"><a id="L-19-45" name="L-19-45"></a><span>36</span><span>:</span><span>     </span><span>//</span><span> </span><span>Handle</span><span> </span><span>completed</span><span> </span><span>sequences</span><span> </span><span>separately</span><span> </span><span>(</span><span>if</span><span> </span><span>needed</span><span>)</span><span></span>
</span><span id="L-19-46"><a id="L-19-46" name="L-19-46"></a><span>37</span><span>:</span><span>     </span><span>...</span><span> </span>
</span><span id="L-19-47"><a id="L-19-47" name="L-19-47"></a><span>38</span><span>:</span><span></span>
</span><span id="L-19-48"><a id="L-19-48" name="L-19-48"></a><span>39</span><span>:</span><span>     </span><span>//</span><span> </span><span>Update</span><span> </span><span>beam</span><span> </span><span>with</span><span> </span><span>top</span><span> </span><span>k</span><span> </span><span>candidates</span><span></span>
</span><span id="L-19-49"><a id="L-19-49" name="L-19-49"></a><span>40</span><span>:</span><span>     </span><span>Sort</span><span> </span><span>candidates</span><span> </span><span>by</span><span> </span><span>score</span><span> </span><span>(</span><span>descending</span><span>)</span><span></span>
</span><span id="L-19-50"><a id="L-19-50" name="L-19-50"></a><span>41</span><span>:</span><span>     </span><span>B</span><span> </span><span>←</span><span> </span><span>candidates</span><span>[</span><span>:k</span><span>]</span><span></span>
</span><span id="L-19-51"><a id="L-19-51" name="L-19-51"></a><span>42</span><span>:</span><span></span>
</span><span id="L-19-52"><a id="L-19-52" name="L-19-52"></a><span>43</span><span>:</span><span>     </span><span>if</span><span> </span><span>stopping_criteria_met</span><span> </span><span>then</span><span></span>
</span><span id="L-19-53"><a id="L-19-53" name="L-19-53"></a><span>44</span><span>:</span><span>         </span><span>break</span><span></span>
</span><span id="L-19-54"><a id="L-19-54" name="L-19-54"></a><span>45</span><span>:</span><span>     </span><span>end</span><span> </span><span>if</span><span></span>
</span><span id="L-19-55"><a id="L-19-55" name="L-19-55"></a><span>46</span><span>:</span><span> </span><span>end</span><span> </span><span>for</span><span></span>
</span><span id="L-19-56"><a id="L-19-56" name="L-19-56"></a>
</span><span id="L-19-57"><a id="L-19-57" name="L-19-57"></a><span>47</span><span>:</span><span> </span><span>return</span><span> </span><span>B</span><span>  </span><span>//</span><span> </span><span>Return</span><span> </span><span>top</span><span> </span><span>k</span><span> </span><span>sequences</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h3 id="contrastive-search">Contrastive Search<a href="#contrastive-search" title="Permanent link"> </a></h3>
<p>When choosing the next word, CS balances two competing goals: picking words that make sense in context (high probability) while avoiding repetivie patterns (low similarity to what's already been written). Similar to beam search, this sampling method is not widely used anymore.</p>
<p>CS was invented to address a fundamental limitation of likelihood-based sampling: the tendency to either be too repetitive (at low temps) or too incoherent (at high temps). Instead of just adjusting randomness, it explicitly rewards diversity.</p>
<p><strong>Technical</strong>:<br>
CS introduces a degeneration penalty based on the similarity between candidate tokens and the existing context. We first select top-k most probable tokens based on logits. Then, extract vector representations of the existing context and each candidate continuation from the model's hidden states. For each candidate token, calculate a score that balances: 1) its probability (how likely it is according to the model), 2) its degeneration penalty (how similar it is to the existing context). The alpha parameter controls the trade-off between likelihood and diversity.</p>
<p>Mathematically, it is:<br>
<code>score(x) = α * P(x) - (1-α) * sim(x, context)</code></p>
<p>Where:</p>
<ul>
<li><code>P(x)</code> is the probability of token <code>x</code></li>
<li><code>sim(x, context)</code> is the semantic similarity between <code>x</code> and the context</li>
<li><code>α</code> is the balancing coefficient.</li>
</ul>
<p><strong>Algorithm</strong><br>
</p><div>

<table><tbody><tr><td><div><pre><span><a href="#L-20-1"> 1</a></span>
<span><a href="#L-20-2"> 2</a></span>
<span><a href="#L-20-3"> 3</a></span>
<span><a href="#L-20-4"> 4</a></span>
<span><a href="#L-20-5"> 5</a></span>
<span><a href="#L-20-6"> 6</a></span>
<span><a href="#L-20-7"> 7</a></span>
<span><a href="#L-20-8"> 8</a></span>
<span><a href="#L-20-9"> 9</a></span>
<span><a href="#L-20-10">10</a></span>
<span><a href="#L-20-11">11</a></span>
<span><a href="#L-20-12">12</a></span>
<span><a href="#L-20-13">13</a></span>
<span><a href="#L-20-14">14</a></span>
<span><a href="#L-20-15">15</a></span>
<span><a href="#L-20-16">16</a></span>
<span><a href="#L-20-17">17</a></span>
<span><a href="#L-20-18">18</a></span>
<span><a href="#L-20-19">19</a></span>
<span><a href="#L-20-20">20</a></span>
<span><a href="#L-20-21">21</a></span>
<span><a href="#L-20-22">22</a></span>
<span><a href="#L-20-23">23</a></span>
<span><a href="#L-20-24">24</a></span>
<span><a href="#L-20-25">25</a></span>
<span><a href="#L-20-26">26</a></span>
<span><a href="#L-20-27">27</a></span>
<span><a href="#L-20-28">28</a></span>
<span><a href="#L-20-29">29</a></span>
<span><a href="#L-20-30">30</a></span>
<span><a href="#L-20-31">31</a></span>
<span><a href="#L-20-32">32</a></span>
<span><a href="#L-20-33">33</a></span>
<span><a href="#L-20-34">34</a></span>
<span><a href="#L-20-35">35</a></span>
<span><a href="#L-20-36">36</a></span>
<span><a href="#L-20-37">37</a></span>
<span><a href="#L-20-38">38</a></span>
<span><a href="#L-20-39">39</a></span>
<span><a href="#L-20-40">40</a></span>
<span><a href="#L-20-41">41</a></span>
<span><a href="#L-20-42">42</a></span>
<span><a href="#L-20-43">43</a></span>
<span><a href="#L-20-44">44</a></span>
<span><a href="#L-20-45">45</a></span>
<span><a href="#L-20-46">46</a></span>
<span><a href="#L-20-47">47</a></span>
<span><a href="#L-20-48">48</a></span>
<span><a href="#L-20-49">49</a></span>
<span><a href="#L-20-50">50</a></span></pre></div></td><td><div><pre><span></span><span id="L-20-1"><a id="L-20-1" name="L-20-1"></a><span>Algorithm</span><span> </span><span>20</span><span> </span><span>Contrastive</span><span> </span><span>Search</span><span></span>
</span><span id="L-20-2"><a id="L-20-2" name="L-20-2"></a><span>Required</span><span>:</span><span> </span><span>Input</span><span> </span><span>prompt</span><span>,</span><span> </span><span>model</span><span> </span><span>M</span><span>,</span><span> </span><span>top</span><span>-</span><span>k</span><span> </span><span>parameter</span><span> </span><span>k</span><span>,</span><span> </span><span>alpha</span><span> </span><span>parameter</span><span> </span><span>α</span><span> </span><span>∈</span><span> </span><span>[</span><span>0,1</span><span>]</span><span></span>
</span><span id="L-20-3"><a id="L-20-3" name="L-20-3"></a><span>Output</span><span>:</span><span> </span><span>Generated</span><span> </span><span>text</span><span> </span><span>that</span><span> </span><span>balances</span><span> </span><span>likelihood</span><span> </span><span>and</span><span> </span><span>diversity</span><span></span>
</span><span id="L-20-4"><a id="L-20-4" name="L-20-4"></a>
</span><span id="L-20-5"><a id="L-20-5" name="L-20-5"></a><span>1</span><span>:</span><span> </span><span>seq</span><span> </span><span>←</span><span> </span><span>prompt</span><span>  </span><span>//</span><span> </span><span>Initialize</span><span> </span><span>with</span><span> </span><span>input</span><span> </span><span>prompt</span><span></span>
</span><span id="L-20-6"><a id="L-20-6" name="L-20-6"></a><span>2</span><span>:</span><span></span>
</span><span id="L-20-7"><a id="L-20-7" name="L-20-7"></a><span>3</span><span>:</span><span> </span><span>for</span><span> </span><span>each</span><span> </span><span>decoding</span><span> </span><span>step</span><span> </span><span>do</span><span></span>
</span><span id="L-20-8"><a id="L-20-8" name="L-20-8"></a><span>4</span><span>:</span><span>     </span><span>//</span><span> </span><span>Get</span><span> </span><span>logits</span><span> </span><span>from</span><span> </span><span>the</span><span> </span><span>model</span><span> </span><span>for</span><span> </span><span>next</span><span> </span><span>token</span><span></span>
</span><span id="L-20-9"><a id="L-20-9" name="L-20-9"></a><span>5</span><span>:</span><span>     </span><span>logits</span><span> </span><span>←</span><span> </span><span>M</span><span>(</span><span>seq</span><span>)</span><span></span>
</span><span id="L-20-10"><a id="L-20-10" name="L-20-10"></a><span>6</span><span>:</span><span></span>
</span><span id="L-20-11"><a id="L-20-11" name="L-20-11"></a><span>7</span><span>:</span><span>     </span><span>//</span><span> </span><span>Get</span><span> </span><span>top</span><span>-</span><span>k</span><span> </span><span>most</span><span> </span><span>likely</span><span> </span><span>tokens</span><span></span>
</span><span id="L-20-12"><a id="L-20-12" name="L-20-12"></a><span>8</span><span>:</span><span>     </span><span>topk_logits</span><span>,</span><span> </span><span>topk_indices</span><span> </span><span>←</span><span> </span><span>TopK</span><span>(</span><span>logits</span><span>,</span><span> </span><span>k</span><span>)</span><span></span>
</span><span id="L-20-13"><a id="L-20-13" name="L-20-13"></a><span>9</span><span>:</span><span></span>
</span><span id="L-20-14"><a id="L-20-14" name="L-20-14"></a><span>10</span><span>:</span><span>     </span><span>//</span><span> </span><span>Convert</span><span> </span><span>to</span><span> </span><span>probabilities</span><span></span>
</span><span id="L-20-15"><a id="L-20-15" name="L-20-15"></a><span>11</span><span>:</span><span>     </span><span>topk_probs</span><span> </span><span>←</span><span> </span><span>Softmax</span><span>(</span><span>topk_logits</span><span>)</span><span></span>
</span><span id="L-20-16"><a id="L-20-16" name="L-20-16"></a><span>12</span><span>:</span><span></span>
</span><span id="L-20-17"><a id="L-20-17" name="L-20-17"></a><span>13</span><span>:</span><span>     </span><span>//</span><span> </span><span>Get</span><span> </span><span>hidden</span><span> </span><span>representations</span><span> </span><span>from</span><span> </span><span>the</span><span> </span><span>model</span><span>'</span><span>s</span><span> </span><span>last</span><span> </span><span>layer</span><span></span>
</span><span id="L-20-18"><a id="L-20-18" name="L-20-18"></a><span>14</span><span>:</span><span>     </span><span>H</span><span> </span><span>←</span><span> </span><span>GetHiddenStates</span><span>(</span><span>M</span><span>,</span><span> </span><span>seq</span><span>)</span><span></span>
</span><span id="L-20-19"><a id="L-20-19" name="L-20-19"></a><span>15</span><span>:</span><span>     </span><span>h_last</span><span> </span><span>←</span><span> </span><span>H</span><span>[</span><span>-1</span><span>]</span><span>  </span><span>//</span><span> </span><span>Hidden</span><span> </span><span>state</span><span> </span><span>for</span><span> </span><span>the</span><span> </span><span>last</span><span> </span><span>token</span><span></span>
</span><span id="L-20-20"><a id="L-20-20" name="L-20-20"></a><span>16</span><span>:</span><span></span>
</span><span id="L-20-21"><a id="L-20-21" name="L-20-21"></a><span>17</span><span>:</span><span>     </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>degeneration</span><span> </span><span>penalty</span><span> </span><span>for</span><span> </span><span>each</span><span> </span><span>candidate</span><span> </span><span>token</span><span></span>
</span><span id="L-20-22"><a id="L-20-22" name="L-20-22"></a><span>18</span><span>:</span><span>     </span><span>penalties</span><span> </span><span>←</span><span> </span><span>[]</span><span></span>
</span><span id="L-20-23"><a id="L-20-23" name="L-20-23"></a><span>19</span><span>:</span><span>     </span><span>for</span><span> </span><span>each</span><span> </span><span>candidate</span><span> </span><span>token</span><span> </span><span>t</span><span> </span><span>in</span><span> </span><span>topk_indices</span><span> </span><span>do</span><span></span>
</span><span id="L-20-24"><a id="L-20-24" name="L-20-24"></a><span>20</span><span>:</span><span>         </span><span>//</span><span> </span><span>Get</span><span> </span><span>hidden</span><span> </span><span>representation</span><span> </span><span>if</span><span> </span><span>we</span><span> </span><span>were</span><span> </span><span>to</span><span> </span><span>append</span><span> </span><span>this</span><span> </span><span>token</span><span></span>
</span><span id="L-20-25"><a id="L-20-25" name="L-20-25"></a><span>21</span><span>:</span><span>         </span><span>h_candidate</span><span> </span><span>←</span><span> </span><span>GetHiddenState</span><span>(</span><span>M</span><span>,</span><span> </span><span>seq</span><span> </span><span>+</span><span> </span><span>t</span><span>)</span><span>[</span><span>-1</span><span>]</span><span></span>
</span><span id="L-20-26"><a id="L-20-26" name="L-20-26"></a><span>22</span><span>:</span><span></span>
</span><span id="L-20-27"><a id="L-20-27" name="L-20-27"></a><span>23</span><span>:</span><span>         </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>similarity</span><span> </span><span>between</span><span> </span><span>candidate</span><span> </span><span>and</span><span> </span><span>context</span><span></span>
</span><span id="L-20-28"><a id="L-20-28" name="L-20-28"></a><span>24</span><span>:</span><span>         </span><span>sim</span><span> </span><span>←</span><span> </span><span>CosineSimilarity</span><span>(</span><span>h_candidate</span><span>,</span><span> </span><span>h_last</span><span>)</span><span></span>
</span><span id="L-20-29"><a id="L-20-29" name="L-20-29"></a><span>25</span><span>:</span><span></span>
</span><span id="L-20-30"><a id="L-20-30" name="L-20-30"></a><span>26</span><span>:</span><span>         </span><span>//</span><span> </span><span>Store</span><span> </span><span>similarity</span><span> </span><span>as</span><span> </span><span>the</span><span> </span><span>degeneration</span><span> </span><span>penalty</span><span></span>
</span><span id="L-20-31"><a id="L-20-31" name="L-20-31"></a><span>27</span><span>:</span><span>         </span><span>penalties</span><span>.</span><span>append</span><span>(</span><span>sim</span><span>)</span><span></span>
</span><span id="L-20-32"><a id="L-20-32" name="L-20-32"></a><span>28</span><span>:</span><span>     </span><span>end</span><span> </span><span>for</span><span></span>
</span><span id="L-20-33"><a id="L-20-33" name="L-20-33"></a><span>29</span><span>:</span><span></span>
</span><span id="L-20-34"><a id="L-20-34" name="L-20-34"></a><span>30</span><span>:</span><span>     </span><span>//</span><span> </span><span>Calculate</span><span> </span><span>final</span><span> </span><span>scores</span><span> </span><span>using</span><span> </span><span>weighted</span><span> </span><span>combination</span><span></span>
</span><span id="L-20-35"><a id="L-20-35" name="L-20-35"></a><span>31</span><span>:</span><span>     </span><span>//</span><span> </span><span>Higher</span><span> </span><span>alpha</span><span> </span><span>weights</span><span> </span><span>likelihood</span><span> </span><span>more</span><span>,</span><span> </span><span>lower</span><span> </span><span>alpha</span><span> </span><span>weights</span><span> </span><span>diversity</span><span> </span><span>more</span><span></span>
</span><span id="L-20-36"><a id="L-20-36" name="L-20-36"></a><span>32</span><span>:</span><span>     </span><span>scores</span><span> </span><span>←</span><span> </span><span>α</span><span> </span><span>*</span><span> </span><span>topk_probs</span><span> </span><span>-</span><span> </span><span>(</span><span>1</span><span>-</span><span>α</span><span>)</span><span> </span><span>*</span><span> </span><span>penalties</span><span></span>
</span><span id="L-20-37"><a id="L-20-37" name="L-20-37"></a><span>33</span><span>:</span><span></span>
</span><span id="L-20-38"><a id="L-20-38" name="L-20-38"></a><span>34</span><span>:</span><span>     </span><span>//</span><span> </span><span>Select</span><span> </span><span>token</span><span> </span><span>with</span><span> </span><span>highest</span><span> </span><span>combined</span><span> </span><span>score</span><span></span>
</span><span id="L-20-39"><a id="L-20-39" name="L-20-39"></a><span>35</span><span>:</span><span>     </span><span>best_idx</span><span> </span><span>←</span><span> </span><span>ArgMax</span><span>(</span><span>scores</span><span>)</span><span></span>
</span><span id="L-20-40"><a id="L-20-40" name="L-20-40"></a><span>36</span><span>:</span><span>     </span><span>next_token</span><span> </span><span>←</span><span> </span><span>topk_indices</span><span>[</span><span>best_idx</span><span>]</span><span></span>
</span><span id="L-20-41"><a id="L-20-41" name="L-20-41"></a><span>37</span><span>:</span><span></span>
</span><span id="L-20-42"><a id="L-20-42" name="L-20-42"></a><span>38</span><span>:</span><span>     </span><span>//</span><span> </span><span>Append</span><span> </span><span>to</span><span> </span><span>sequence</span><span></span>
</span><span id="L-20-43"><a id="L-20-43" name="L-20-43"></a><span>39</span><span>:</span><span>     </span><span>seq</span><span> </span><span>←</span><span> </span><span>seq</span><span> </span><span>+</span><span> </span><span>next_token</span><span></span>
</span><span id="L-20-44"><a id="L-20-44" name="L-20-44"></a><span>40</span><span>:</span><span></span>
</span><span id="L-20-45"><a id="L-20-45" name="L-20-45"></a><span>41</span><span>:</span><span>     </span><span>if</span><span> </span><span>stopping_criteria_met</span><span> </span><span>then</span><span></span>
</span><span id="L-20-46"><a id="L-20-46" name="L-20-46"></a><span>42</span><span>:</span><span>         </span><span>break</span><span></span>
</span><span id="L-20-47"><a id="L-20-47" name="L-20-47"></a><span>43</span><span>:</span><span>     </span><span>end</span><span> </span><span>if</span><span></span>
</span><span id="L-20-48"><a id="L-20-48" name="L-20-48"></a><span>44</span><span>:</span><span> </span><span>end</span><span> </span><span>for</span><span></span>
</span><span id="L-20-49"><a id="L-20-49" name="L-20-49"></a><span>45</span><span>:</span><span></span>
</span><span id="L-20-50"><a id="L-20-50" name="L-20-50"></a><span>46</span><span>:</span><span> </span><span>return</span><span> </span><span>seq</span><span></span>
</span></pre></div>
</td></tr></tbody></table>
</div>
<h2 id="sampler-order">Sampler Order<a href="#sampler-order" title="Permanent link"> </a></h2>
<p>The document thus far has explained individual sampling methods, but in real-world LLM implementations, these techniques are often applied in a carefully orchestrated sequence. Some libraries allow for the user to customize the order of samplers per-request, but most do not.</p>
<h3 id="the-typical-sampling-pipeline">The Typical Sampling Pipeline<a href="#the-typical-sampling-pipeline" title="Permanent link"> </a></h3>
<p>A typical sampling pipeline in production LLM systems follow these sequential steps:</p>
<ol>
<li><strong>Generate Raw Logits</strong>: The model produces unnormalized logits for each token in the vocabulary.</li>
<li><strong>Apply Token Filtering/Banning</strong>: Remove tokens that shouldn't be considred at all.</li>
<li><strong>Apply Penalties</strong>: Apply repetition, frequency, and presence penalties to discourage repetitive outputs.</li>
<li><strong>Apply Pattern-Based Techniques</strong>: Methods like DRY (Don't Repeat Yourself) are applied to identify and penalize repetitive patterns.</li>
<li><strong>Apply Temperature Scaling</strong>: Temperature is either applied as the first or the last sampler (outside penalties and post-softmax samplers), depending on the implementation. For most tasks, temperature is applied first. For creative writing, it is usually last.</li>
<li><strong>Apply Distribution-Shaping Methods</strong>: Techniques like Top-K, Top-P, Min-P, etc. that filter or reshape the probability distribution.</li>
<li><strong>Sample from the Final Distribution</strong>: After all modifications, select a token from the resulting probability distribution.</li>
</ol>
<h3 id="effects-and-interactions-of-samplers-with-each-other">Effects and Interactions of Samplers with Each Other<a href="#effects-and-interactions-of-samplers-with-each-other" title="Permanent link"> </a></h3>
<p>The order in which sampling techniques are applied have serious implications for text generation. This is an oft-unexplored topic, and libraries usually follow a somewhat standardized order without any flexibility. Each sampler modifies the probability distribution, creating a transformed landscape that subsequent samplers work with. Understanding these is very crucial.</p>
<h4 id="how-samplers-transform-distributions">How Samplers Transform Distributions<a href="#how-samplers-transform-distributions" title="Permanent link"> </a></h4>
<p>To understand sampler interaction, let's first visualize it:</p>
<ol>
<li><strong>Original Distribution</strong>: A typical token distribution has a few high-probability tokens followed by a long tail of increasingly unlikely options.</li>
<li><strong>After Penalties</strong>: Penalties flatten peaks for previously used tokens, so they elevate alternatives that haven't appeared yet.</li>
<li><strong>After Temperature</strong>: Lower temperatures (&lt;1.0) sharpen the distribution, making peaks higher and valleys lower. Higher temperatures (&gt;1.0) flatten the distribution.</li>
<li><strong>After Filtering (Top-K/P/etc.)</strong>: These truncate the distribution, removing lowest-probability tokens and often renormalizing the remaining probs.</li>
</ol>
<p>Each transformation, as you may guess, fundamentally changes what subsequent samplers <strong>see</strong> and can dramatically influence the final output.</p>
<h4 id="critical-order-dependent-interactions">Critical Order-Dependent Interactions<a href="#critical-order-dependent-interactions" title="Permanent link"> </a></h4>
<h5 id="temperature-before-vs-after-filtering">Temperature Before vs. After Filtering<a href="#temperature-before-vs-after-filtering" title="Permanent link"> </a></h5>
<p>One of the most important ordering decisions is whether to apply temperature scaling before or after filtering methods:</p>
<p><strong>Temperature → Filtering</strong>:</p>
<ul>
<li>Temperature first reshapes the entire distribution</li>
<li>Low temperature concentrates probability mass on fewer tokens before filtering</li>
<li>High temperature spreads probability mass more evenly before filtering</li>
<li>Filtering then operates on this reshaped distribution</li>
</ul>
<p><strong>Filtering → Temperature</strong>:</p>
<ul>
<li>Filtering first truncates the distribution to only the most likely tokens</li>
<li>Temperature then only affects the relative probabilities among these filtered tokens</li>
<li>Can produce more constrained outputs even with high temperatures</li>
</ul>
<p>Example: With a Top-K of 40 and temperature of 1.5, applying temperature first might allow some tokens from outside the original top 40 to become likely enough to survive filtering. Applying filtering first ensures only the original top 40 tokens remain, regardless of temperature.</p>
<h5 id="penalties-before-vs-after-other-samplers">Penalties Before vs. After Other Samplers<a href="#penalties-before-vs-after-other-samplers" title="Permanent link"> </a></h5>
<p><strong>Penalties → Temperature</strong>:</p>
<ul>
<li>Penalties first reduce probabilities of repeated tokens</li>
<li>Temperature then amplifies or diminishes these adjustments</li>
<li>With high temperatures, penalties may be effectively erased</li>
<li>With low temperatures, penalties may be excessively amplified</li>
</ul>
<p><strong>Temperature → Penalties</strong>:</p>
<ul>
<li>Temperature first reshapes the entire distribution</li>
<li>Penalties then operate on this temperature-modified distribution</li>
<li>Can lead to more balanced and predictable penalty effects</li>
</ul>
<h5 id="drys-position-matters">DRY's Position Matters<a href="#drys-position-matters" title="Permanent link"> </a></h5>
<p>The DRY (Don't Repeat Yourself) sampler, which penalizes continuing n-gram patterns, is particularly sensitive to positioning:</p>
<p><strong>DRY Early in Pipeline</strong>:</p>
<ul>
<li>Applied to the raw or lightly modified distribution</li>
<li>Has strong effect on preventing repetition</li>
<li>Subsequent samplers may still introduce repetition by elevating penalized tokens</li>
</ul>
<p><strong>DRY Late in Pipeline</strong>:</p>
<ul>
<li>Applied after other samplers have modified the distribution</li>
<li>May have weaker effect if previous samplers have already eliminated some options</li>
<li>Final arbiter against repetition before token selection</li>
</ul>
<h4 id="synergies-and-conflicts">Synergies and Conflicts<a href="#synergies-and-conflicts" title="Permanent link"> </a></h4>
<h5 id="synergistic-combos">Synergistic Combos<a href="#synergistic-combos" title="Permanent link"> </a></h5>
<ol>
<li><strong>Top-K + Top-P</strong>: Top-K provides a hard limit on tokens considered, while Top-P adapts to the confidence of the model. Together they give us guardrails and enough flexibility.</li>
<li><strong>Temperature + Min-P</strong>: High temperature flattens the distribution, while Min-P establishes a quality floor relative to the best token. This combination increases creativity while filtering out truly poor options.</li>
</ol>
<h5 id="conflicting-combos">Conflicting Combos<a href="#conflicting-combos" title="Permanent link"> </a></h5>
<ol>
<li><strong>High Temperature + Low Top-K</strong>: High temperature tries to flatten the distribution, while low Top-K severely restricts options. The Top-K will essentially override much of the temperature's effect.</li>
<li><strong>Multiple Filtering Methods</strong>: Applying Top-K, Top-P, Min-P, and TFS together often results in the most restrictive one dominating, making the others redundant.</li>
<li><strong>XTC + Top-A</strong>: Both methods aim to exclude top choices but in different ways. Using both can overly restrict the sampling space.</li>
</ol></div>
                    </article>
                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[TScale – distributed training on consumer GPUs (106 pts)]]></title>
            <link>https://github.com/Foreseerr/TScale</link>
            <guid>43886601</guid>
            <pubDate>Sun, 04 May 2025 13:29:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Foreseerr/TScale">https://github.com/Foreseerr/TScale</a>, See on <a href="https://news.ycombinator.com/item?id=43886601">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">TScale</h2><a id="user-content-tscale" aria-label="Permalink: TScale" href="#tscale"></a></p>
<p dir="auto">This repo contains transformer train and inference code written in C++ and CUDA.</p>
<p dir="auto">TScale is designed to run on consumer hardware. To achive best results it features</p>
<ul dir="auto">
<li>Optimized transformer architecture with faster convergence and ~2x reduced attention costs</li>
<li>Support for fp8 and int8 model weights and activations precision</li>
<li>Optimized for consumer nVidia GPUs including fast reduced precision training without sacrificing model quality</li>
<li>CPU offload reduces GPU memory requirements for training</li>
<li>Sync distributed training on several same config hosts</li>
<li>1-bit gradient compression allowing using regular ethernet links for interconnect</li>
<li>Async distributed training on arbitrary hosts with negligible network traffic. In this mode training can be run on geographically separated hosts</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Distributed training of 1.5B model on consumer GPU</h2><a id="user-content-distributed-training-of-15b-model-on-consumer-gpu" aria-label="Permalink: Distributed training of 1.5B model on consumer GPU" href="#distributed-training-of-15b-model-on-consumer-gpu"></a></p>
<p dir="auto">By using inexpensive GPUs and async distributed mode TScale trains LLMs fast and affordable. Log loss for the 1.5B model trained on fineweb-edu for 2 days and $500 on several spot instances with 4090:
<a target="_blank" rel="noopener noreferrer" href="https://github.com/Foreseerr/TScale/blob/main/img/fed_hellaswag.png"><img src="https://github.com/Foreseerr/TScale/raw/main/img/fed_hellaswag.png" alt="Nice train loss graph"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Training your own 1T model at home</h2><a id="user-content-training-your-own-1t-model-at-home" aria-label="Permalink: Training your own 1T model at home" href="#training-your-own-1t-model-at-home"></a></p>
<p dir="auto">1T model size sounds beyond reach for most people and even organisations. However if we consider creative ways to count model size then there is nothing impossible. In this case we build a model with 1T index which we lookup for every token to make prediction with much smaller model. In terms of logloss/perplexity this construction easily achieves stellar results. Index for fineweb-edu occupies about 1T of disk space. Training run of 125M model with this ~1T index achieves <strong>x8</strong> perplexity reduction:</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Model</th>
<th>Perplexity</th>
</tr>
</thead>
<tbody>
<tr>
<td>125M</td>
<td>19.02</td>
</tr>
<tr>
<td>125M + 1T index</td>
<td>2.28</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Read more</h2><a id="user-content-read-more" aria-label="Permalink: Read more" href="#read-more"></a></p>
<p dir="auto"><a href="https://github.com/Foreseerr/TScale/blob/main/doc/125M_model.md">Training 125M model</a></p>
<p dir="auto"><a href="https://github.com/Foreseerr/TScale/blob/main/doc/1.5B_model.md">Training 1.5B model</a></p>
<p dir="auto"><a href="https://github.com/Foreseerr/TScale/blob/main/doc/1T_model.md">Training 1T (!) model in your kitchen</a></p>
<p dir="auto"><a href="https://github.com/Foreseerr/TScale/blob/main/doc/fed.md">Async distributed train</a></p>
<p dir="auto"><a href="https://github.com/Foreseerr/TScale/blob/main/doc/precision.md">Notes on model and compute precision</a></p>
<p dir="auto"><a href="https://github.com/Foreseerr/TScale/blob/main/doc/model.md">TScale transformer model</a></p>
<p dir="auto"><a href="https://github.com/Foreseerr/TScale/blob/main/doc/lm_search.md">Data indexing</a></p>
<p dir="auto"><a href="https://github.com/Foreseerr/TScale/blob/main/doc/tokenizer.md">Tokenizer</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Build</h2><a id="user-content-build" aria-label="Permalink: Build" href="#build"></a></p>
<p dir="auto">To build the the code CUDA v12.3 and C++ compiler are required, msvc for windows,  cmake+clang for Linux. To support cross platform build files generation this repo uses <a href="https://github.com/Foreseerr/TScale/blob/main/doc/fo.md">fo</a>, lightweight solution/build files generator. To generate build files you need to compile fo/fo.cpp and run it with two arguments. First argument is root of source tree, second argument is directory to store build files to.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Windows</h2><a id="user-content-windows" aria-label="Permalink: Windows" href="#windows"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="D:\TScale>fo.exe code sln"><pre>D:<span>\T</span>Scale<span>&gt;</span>fo.exe code sln</pre></div>
<p dir="auto">Then open code.sln from d:\TScale\sln\code.sln.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Linux</h2><a id="user-content-linux" aria-label="Permalink: Linux" href="#linux"></a></p>
<p dir="auto">To compile TScale for linux you need to compile fo.cpp, generate CMakeLists.txt file, run cmake, run make.</p>
<div dir="auto" data-snippet-clipboard-copy-content="~/TScale/fo$ clang++17 fo.cpp -o fo
~/TScale/fo$ cd ..
~/TScale$ ./fo/fo code make.dir
~/TScale$ cd make.dir
~/TScale/make.dir$ cmake -D CMAKE_BUILD_TYPE=RelWithDebInfo .
~/TScale/make.dir$ make"><pre><span>~</span>/TScale/fo$ clang++17 fo.cpp -o fo
<span>~</span>/TScale/fo$ <span>cd</span> ..
<span>~</span>/TScale$ ./fo/fo code make.dir
<span>~</span>/TScale$ <span>cd</span> make.dir
<span>~</span>/TScale/make.dir$ cmake -D CMAKE_BUILD_TYPE=RelWithDebInfo <span>.</span>
<span>~</span>/TScale/make.dir$ make</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Get train data</h2><a id="user-content-get-train-data" aria-label="Permalink: Get train data" href="#get-train-data"></a></p>
<p dir="auto">Examples in the code use <a href="https://mattmahoney.net/dc/textdata.html" rel="nofollow">enwik9</a> dataset and its truncacted version enwik8. Also Hugging Face hosted datasets openwebtext, ontocord/CulturaY, danasone/librusec are used in examples. To import them use <a href="https://github.com/Foreseerr/TScale/blob/main/pysrc/hf_import/import.py">hf_import</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Train model</h2><a id="user-content-train-model" aria-label="Permalink: Train model" href="#train-model"></a></p>
<p dir="auto"><a href="https://github.com/Foreseerr/TScale/blob/main/code/gpt/train">gpt_train</a> is used to train a model. It is controlled by the <a href="https://github.com/Foreseerr/TScale/blob/main/doc/train_script.md">train script</a> and <a href="https://github.com/Foreseerr/TScale/blob/main/doc/data_script.md">data script</a>. Default scripts are stored in <a href="https://github.com/Foreseerr/TScale/blob/main/code/gpt/train/main_gpt.cpp">main_gpt.cpp</a>. To load train script from file run gpt_train with '-d data_script.txt -s train_script.txt' arguments.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">quick run</h2><a id="user-content-quick-run" aria-label="Permalink: quick run" href="#quick-run"></a></p>
<p dir="auto">Compile gpt-train. Run it in the root directory:</p>
<div dir="auto" data-snippet-clipboard-copy-content="~/TScale$ ./make.dir/gpt-train"><pre><span>~</span>/TScale$ ./make.dir/gpt-train</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">sync distributed run</h2><a id="user-content-sync-distributed-run" aria-label="Permalink: sync distributed run" href="#sync-distributed-run"></a></p>
<p dir="auto">Currently training can be distributed only among pow2 number of worker hosts.</p>
<p dir="auto">To start a worker process run gpt_train with '-w 10000' argument. 10000 specifies port number to use.</p>
<p dir="auto">To run master process call net_train('worker.txt') function in train script. List worker IP addresses in the file provided to net_train().</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">multiple GPU</h2><a id="user-content-multiple-gpu" aria-label="Permalink: multiple GPU" href="#multiple-gpu"></a></p>
<p dir="auto">To use multiple GPU devices set DEVICE_COUNT variable in train script to number of GPUs to use. For distributed runs DEVICE_COUNT is applied on each worker, heterogeneous configurations are not supported.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">scripts</h2><a id="user-content-scripts" aria-label="Permalink: scripts" href="#scripts"></a></p>
<p dir="auto">Description of scripts used in training: <a href="https://github.com/Foreseerr/TScale/blob/main/doc/data_script.md">data script</a>, <a href="https://github.com/Foreseerr/TScale/blob/main/doc/train_script.md">train script</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Inference test</h2><a id="user-content-inference-test" aria-label="Permalink: Inference test" href="#inference-test"></a></p>
<p dir="auto">To try inferencing from the trained model you can use <a href="https://github.com/Foreseerr/TScale/blob/main/code/gpt/infer">gpt_infer</a>. It runs basic http server on 11311 port and allows sampling continuations from the model. Current implementation is slow and designed for demonstration purposes only.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">MIT</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Alabama Landline That Keeps Ringing (239 pts)]]></title>
            <link>https://oxfordamerican.org/oa-now/the-alabama-landline-that-keeps-ringing</link>
            <guid>43886243</guid>
            <pubDate>Sun, 04 May 2025 12:02:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://oxfordamerican.org/oa-now/the-alabama-landline-that-keeps-ringing">https://oxfordamerican.org/oa-now/the-alabama-landline-that-keeps-ringing</a>, See on <a href="https://news.ycombinator.com/item?id=43886243">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>


          <div>


    <div>

      
      <h3>Auburn University’s help desk is still answering the public’s calls 70 years on</h3>

              
      
      <p>April 23, 2025</p>

    </div>

    <div>
              <p><img src="https://oxfordamerican.org/media/pages/oa-now/the-alabama-landline-that-keeps-ringing/099259767a-1744917496/foy-information-desk-at-auburn-university.jpg"></p><p>Foy Information Desk at Auburn University, Photo by Emily McCrary</p>
                          
    </div>


  </div>
    
    
                  <div>
    <p><span lang="EN"><sub><strong>I</strong></sub>f you sit at the James E. Foy Information Desk in the Melton Student Center at Auburn University, answering the phones on a Wednesday night, you might be responsible for answering a question like this: “If you died on the operating table and they declared you legally dead and wrote out a death certificate and everything, but then you came back to life, what are the legal ramifications? Do you technically no longer exist? Do you have to be declared undead by a judge?”</span></p>
<p><span lang="EN">A little later, the phone will ring again, and the caller might ask, “Who is the most famous person in the world?” Your next question: “How do you get the Super Serum in Call of Duty?” And finally, when you pick up the phone close to eleven o’clock, quitting time, you might hear someone blow a giant raspberry then hang up.</span></p>
<p><span lang="EN">I spent the better part of two days and nights listening to students answer questions at the Foy desk, where phones have been ringing since 1953, when James E. Foy, Auburn’s then dean of students, opened the line as a resource for students and then as a service to the public. For just as long, students who sit there have been answering any question asked of them—or at least tried their best.</span></p>  </div>
              <div>
      <h2><p>By nine o’clock, the student center is quiet. That’s when people like Beulah call.</p></h2>
      
    </div>
              <div>
    <p><span lang="EN"><sub><strong>T</strong></sub>he desk looks different today than it did seventy years ago. For starters, it’s in an expensive</span><span lang="EN">, modern-looking student center. The old Foy Hall still exists, and now houses a few small student-engagement offices; but it’s got low ceilings and could use an update. There used to be stacks of books at the desk—encyclopedias and dictionaries, reference texts, phone books, the <em>Farmers’ Almanac</em>, the <em>Guinness Book of World Records</em>, and Emily Post’s <em>Etiquette</em>—but they’ve been replaced by three desktop iMacs, the really nice ones, whose backs are blue and orange, like the school’s colors. As for the phone number, that’s still the same: (334) 844-4244.</span></p>
<p><span lang="EN">A day’s worth of calls to Foy would look a lot like someone’s browser history: What is cefuroxime prescribed for? What’s the average cost of an acre of land in Texas? What’s the cheapest property in New Jersey? How much is Elon Musk worth? What’s the customer service phone number for Costco? How much is a ticket to the Super Bowl? What is watercress? What is that weird smell? Are AirPods Pro 2 waterproof? What do I do if there’s a snake in my house? What are all the names for female genitals? (Foy student workers won’t respond to that last question, but that doesn’t stop callers from asking it.<a>)&nbsp;</a></span></p>
<p><span lang="EN">About <a>13 million people in the US </a><!-- [if !supportAnnotations]-->&nbsp;and <a>2.6 billion people globally </a><!-- [if !supportAnnotations]-->don’t use the internet, whether for reasons of availability, desire, cost, or religion. Some may have it but don’t feel confident using it. To their callers, who dial from all over the world, these students are the internet. And lucky for callers, these students are remarkably non-judgmental when it comes to the questions they’re asked. </span></p>
<p><span lang="EN">The employee manual for the Foy desk is ten sheets of 8.5x11, with instructions on how to clock in and out and pick up shifts. Training for the phones is minimal. More or less, the rules are these: Be as polite as possible, end the call if the question is offensive, don’t answer anything that sounds like a homework question, and if someone makes a threat, hang up and dial *57 (that helps the police trace the call), then tell your supervisor.</span></p>
<p><span lang="EN">During the day, the phones ring about ten to fifteen times an hour. Most of the calls are from the general public. Occasionally, an Auburn student calls to ask about basketball tickets or whether their brown jacket ended up in the lost and found. As classes wrap up for the afternoon and the sun sets, the big windows that filter sunlight turn into mirrors. Calls become less frequent, so students working at the desk settle into their homework. It’s a perk of the job. By nine o’clock, the student center is quiet. That’s when people like Beulah call.</span></p>  </div>
              <div>
      <h2><p>Foy student workers have exceptional manners, and they don’t go poking around in someone else’s business.</p></h2>
      
    </div>
              <div>
    <p><span lang="EN"><sub><strong>B</strong></sub>eulah has a lot of pets and an affinity for bearded dragons. She seems to attract wild animals too: There’s been a fox in her yard, a snake in her house, a spider on her curtains. She’s called to ask for the phone number for an exterminator more than once. While most callers are off the line in less than two minutes, Beulah’s calls last at least fifteen. But who she is, the students hardly know. Accents are sometimes a giveaway, but hers isn’t Southern, nor is it apparently from the Northeast, where her area code suggests she lives. Kamran Kimber, an overachieving junior studying business management, loves getting Beulah’s calls. “She sounds like—oh, my goodness—who was the lady who played in <em>White Lotus</em>?” He stops to think. “Jennifer Coolidge. She sounds like her.” </span></p>
<p><span lang="EN">Students glean information about their regular callers slowly. They’re not expressly forbidden to ask questions, but this is Alabama, and many of the students working at the desk were born and raised here or come from neighboring southern states. Even when drunk people from frat parties call, many student workers don’t hang up unless the partiers say something inappropriate. After all, being intoxicated doesn’t mean you don’t have a legitimate question. Foy student workers have exceptional manners, and they don’t go poking around in someone else’s business.</span></p>
<p><span lang="EN">With so little information, students are left to imagine who their callers might be. They stitch together an image informed by the caller’s voice, their accent, their area code, and their questions. In the 2010s, there was the Care Home Lady, who called every night. Matt Sheorn was picking up the phone back then, when he was an undergrad. He can’t remember the nature of Care Home Lady’s questions, just that he imagined her sitting alone in a nursing home, and that he was always happy to stay on the phone as long as she needed. “You can’t help but imagine what they’re like and in what setting,” he told me. “Is she just sitting in a rocking chair at night and just picks up that phone and keeps dialing Foy?” He wonders: Did she spend all day thinking about what question to ask?</span></p>  </div>
              <div>
              <p><img src="https://oxfordamerican.org/media/pages/oa-now/the-alabama-landline-that-keeps-ringing/028a8ef7cf-1744917494/photo-by-emily-mccrary-7.jpeg"></p><p>The Melton Student Center at Auburn University, home of the Foy Information Desk; Photo by Emily McCrary</p>
                          </div>


              <div>
      <h2><p><em>Why</em> someone calls doesn’t matter. It’s just their job to help.</p></h2>
      
    </div>
              <div>
    <p><span lang="EN"><sub><strong>E</strong></sub>ven though they don’t know much about the lives of their regulars, the students miss them if they don’t call. I asked some of the students about the last time they heard from Beulah, and no one could name a recent call. “I really hope she’s OK,” one of them told me, looking a little grave. </span></p>
<p><span lang="EN">Braxton Stacey is a senior studying industrial and systems engineering. He comes from Muscle Shoals, Alabama, a small town on the Tennessee River close to the borders of Mississippi and Tennessee. He has the pleasing and hard-to-identify southern accent of someone who comes from a border town. </span></p>
<p><span lang="EN">He’s a supervisor at the desk, which means he mostly <a>checks people into reserved conference rooms </a></span><span lang="EN"><!-- [if !supportAnnotations]--></span><span lang="EN">in the student center and locks up the building at the end of the night. He’s also backup for the three students answering calls. But before his promotion, he worked the phones.</span></p>
<p><span lang="EN">He told me that, one night, “this old woman called, and this is the only time I ever talked to her, but she talked for about an hour. She honestly wasn’t asking much of anything. But she told me—and I don’t know how true this is—she told me that one of her friends had recently passed away, and so she was just calling to talk. That felt good just to let her talk to me. I didn’t have to say much. She was just—she needed somebody.” She told Braxton about her grandkids and her house needing repairs and how she was getting them done. Ordinary things. “It wasn’t anything too specific,” he said. “Except for her friend.” </span></p>
<p><span lang="EN">Calls like these don’t come in as often as ones about, say, whether a certain type of rocking chair is on sale at Lowe’s or what the weather will be this weekend in Elkins Park, Pennsylvania. But every single one gets the same amount of respect.</span></p>
<p><span lang="EN">Call after call comes in during the hours that I sit at the desk. Someone calls to ask about the net worth of a real estate investor named David Lichtenstein. Another, who sounds like a tiny child, asks how far it is from Earth to Pluto. The questions are so varied, so unique, I ask the students, <a>“Don’t you wonder why these people call?” Sometimes, they tell me, but as far as they’re concerned, it’s none of their business. </a></span><span lang="EN">They admit that some people feel the need to explain why they call so often—that they live out in the sticks or can’t afford the internet. But to these students, <em>why</em> someone calls doesn’t matter. It’s just their job to help.</span></p>  </div>
              <div>
      <h2><p>Cora says she believes the calls she answers are the ones she’s meant to answer.</p></h2>
      
    </div>
              <div>
    <p><span lang="EN"><sub><strong>O</strong></sub>n my first night at the desk, a student supervisor comes out to shake my hand. It’s Cora Baldwin, a senior about to finish her degree in software engineering. Her voice is soft and gentle, maybe a little nervous, like she’s afraid she might be intruding. She shows me around the desk and introduces me to the students answering the phones. “I’m not really sure how to host you,” she says, “but I want to make you feel welcome. What can we do?”</span></p>
<p><span lang="EN">The students let me hover over their shoulders while they do their jobs. There’s a lot of “yes, ma’am” and “no, ma’am.” Students say they know which callers expect to be addressed that way. The thicker the southern accent, the greater the expectation.</span></p>
<p><span lang="EN">Hours later, the building is quiet, Foy is about to close for the night, and we’ve likely heard the last of the calls. The students and I are circled up in our rolling chairs, and they’re telling stories about their favorite calls. Many they’ve never shared before. Like late-night conversations in college tend to do, the mood becomes confessional. Cora says she believes the calls she answers are the ones she’s meant to answer. No coincidences. I want to know whether there have been any calls that the students just can’t get out of their heads. One of them talks about the hour they spent on the phone with a caller, helping her plan a trip from Arizona to Canada. Another talks about a kid who called to complain that he was bored, but clearly he was alone and very, very lonely. That was a long call.</span></p>
<p><span lang="EN">Then Cora tells us this: Two years ago, while working a day shift, she answered a call from an older gentleman. He had a list of celebrities and wanted her to look up their birthdays, month and day. “As I read out the dates, he would say something like ‘Mmmhmm, OK. OK, that makes sense.’” He told her that he could deduce things about people with no more information than that. They chatted about what Cora was studying, and what kind of career she had in mind. Another caller who needed someone to talk to, she figured. “Then he asked for my birthday.” When Cora told him, “He says, ‘Oh, you don’t want to be a software engineer, you want to work with people.’”</span></p>
<p><span lang="EN">He was right, though Cora had never said it out loud. “Really, I’ve always had an affinity toward broken people,” she says. “I’d like to set up a commune for runaway girls. Growing up in my small town, people really didn’t go into protective services. They just stayed in their bad situations. I’d like to do that.” This is news to her colleagues on the desk, who have always pictured her as a coder. But it makes sense, they tell me. Cora is exactly the kind of person who should be taking in people who need help. “But I probably won’t,” she says, and shrugs. “I need a job.”</span></p>
<p><span lang="EN">I say to her, “Still, when I asked you to name a call you can’t forget, that’s the one you brought up. It must have meant something to you.” It did, Cora admits. Like she said before, she doesn’t really believe in coincidences. But how that fits into her life, she can’t picture yet</span></p>  </div>
              </article><div>
        <h2><a href="https://oxfordamerican.org/authors/emily-mccrary">Emily McCrary</a></h2>
        <p>Emily McCrary is an independent journalist based in Richmond, VA, whose work has appeared in the <em>Economist</em>, the BBC, the <em>Washington Post</em>, Lit Hub, JSTOR Daily, and <em>Discover</em>, among many others. She is the recipient of a Virginia Press Association award for business and financial journalism.</p>      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Oberon Pi (151 pts)]]></title>
            <link>http://pascal.hansotten.com/niklaus-wirth/project-oberon/oberon-pi/</link>
            <guid>43885478</guid>
            <pubDate>Sun, 04 May 2025 08:54:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://pascal.hansotten.com/niklaus-wirth/project-oberon/oberon-pi/">http://pascal.hansotten.com/niklaus-wirth/project-oberon/oberon-pi/</a>, See on <a href="https://news.ycombinator.com/item?id=43885478">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
         <div>

            <ol>
                <li><a title="Home" href="http://pascal.hansotten.com/"><span>Home</span></a><span>»</span></li>
    <li><a title="Niklaus Wirth" href="http://pascal.hansotten.com/niklaus-wirth/"><span>Niklaus Wirth</span></a><span>»</span></li>
    <li><a title="Project Oberon" href="http://pascal.hansotten.com/niklaus-wirth/project-oberon/"><span>Project Oberon</span></a><span>»</span></li>
    <li><a title="Oberon Pi" href="http://pascal.hansotten.com/niklaus-wirth/project-oberon/oberon-pi/"><span>Oberon Pi</span></a><span>»</span></li>
                </ol>
        </div>    
    
    
        
    
 
			<div id="content" role="main">

				
					
<article id="post-2662" class="page">
	<!-- .entry-header -->

	<div>
		<p>Oberon, the jewel by Niklaus Wirth and Jürg Gutknecht: Operating System, Compiler and Computer.</p>
<p>Oberon Pi is a port of Peter de Wachter’s Project Oberon emulator to the Raspberry Pi OS by Richard Gleaves.<br>
Richard Gleaves is a former UCSD Pascal Project member, and author of the 1984 Springer book “Modula-2 for Pascal Programmers”.</p>
<p>The software changes were mostly limited to the UI, with the goal of flattening out the learning curve for new users of the Oberon system, not only read about in a few places online, but also experienced firsthand after bringing the system up.</p>
<p>Richard also added <a href="https://github.com/andreaspirklbauer">Andreas Pirklbauer</a>’s changes to the Oberon compiler, to fully implement CASE statements and fix a few compiler bugs.</p>
<p>The main feature in Oberon Pi is its documentation, which includes new user guides Richard wrote for the Oberon operating system and draw application, along with a complete set of Wirth’s original PDF documents on the Oberon language, now made more usable with the addition of TOCs to the PDFs.<br>
<img fetchpriority="high" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-154012_1920x1080_scrot-1024x576.png" alt="" width="654" height="368" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-154012_1920x1080_scrot-1024x576.png 1024w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-154012_1920x1080_scrot-350x197.png 350w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-154012_1920x1080_scrot-150x84.png 150w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-154012_1920x1080_scrot-1536x864.png 1536w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-154012_1920x1080_scrot-2x1.png 2w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-154012_1920x1080_scrot.png 1920w" sizes="(max-width: 654px) 100vw, 654px"></p>
<p>Here an uptodate downloadable list of relevant Oberon documents:</p>
<table>
<tbody>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20article.pdf"><img decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-article-308x350.jpg" alt="" width="308" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-article-308x350.jpg 308w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-article-132x150.jpg 132w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-article-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-article.jpg 636w" sizes="(max-width: 308px) 100vw, 308px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20article.pdf">Oberon – The Overlooked Jewel, Michael Franz</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20compiler%20internals.pdf"><img decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-compiler-internals-255x350.jpg" alt="" width="255" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-compiler-internals-255x350.jpg 255w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-compiler-internals-109x150.jpg 109w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-compiler-internals-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-compiler-internals.jpg 565w" sizes="(max-width: 255px) 100vw, 255px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20compiler%20internals.pdf">Compiler Construction, 2017, Niklaus Wirth</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20language%20differences.pdf"><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-differences-256x350.jpg" alt="" width="256" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-differences-256x350.jpg 256w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-differences-110x150.jpg 110w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-differences-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-differences.jpg 596w" sizes="(max-width: 256px) 100vw, 256px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20language%20differences.pdf">Differences between Revised Oberon and Oberon, 2008, Niklaus Wirth</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20language%20reference.pdf"><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-reference-266x350.jpg" alt="" width="266" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-reference-266x350.jpg 266w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-reference-114x150.jpg 114w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-reference-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-reference.jpg 627w" sizes="(max-width: 266px) 100vw, 266px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20language%20reference.pdf">The Programming Language Oberon, 2013/2026</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20language%20tutorial.pdf"><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-tutorial-276x350.jpg" alt="" width="276" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-tutorial-276x350.jpg 276w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-tutorial-118x150.jpg 118w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-tutorial-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-language-tutorial.jpg 409w" sizes="(max-width: 276px) 100vw, 276px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20language%20tutorial.pdf">Programming A Tutorial, 1982/2015, Niklaus Wirth</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20philosopy.pdf"><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-philosopy-258x350.jpg" alt="" width="258" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-philosopy-258x350.jpg 258w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-philosopy-111x150.jpg 111w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-philosopy-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-philosopy.jpg 541w" sizes="(max-width: 258px) 100vw, 258px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20philosopy.pdf">A Plea for Lean Software, Niklaus Wirth</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20system%20internals.pdf"><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-internals-242x350.jpg" alt="" width="242" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-internals-242x350.jpg 242w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-internals-104x150.jpg 104w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-internals-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-internals.jpg 510w" sizes="(max-width: 242px) 100vw, 242px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20system%20internals.pdf">Project Oberon<br>
The Design of an Operating System, a Compiler and a Computer<br>
Revised Edition 2013<br>
Niklaus Wirth, Jurg Gutknecht</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/oberon-pi-setup-guide.pdf"><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/oberon-pi-setup-guide-303x350.jpg" alt="" width="303" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/oberon-pi-setup-guide-303x350.jpg 303w, http://pascal.hansotten.com/wp-content/uploads/2025/01/oberon-pi-setup-guide-130x150.jpg 130w, http://pascal.hansotten.com/wp-content/uploads/2025/01/oberon-pi-setup-guide-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/oberon-pi-setup-guide.jpg 742w" sizes="(max-width: 303px) 100vw, 303px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/oberon-pi-setup-guide.pdf">Oberon Pi Setup Guide</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20system%20quick%20reference.pdf"><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-quick-reference-270x350.jpg" alt="" width="270" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-quick-reference-270x350.jpg 270w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-quick-reference-116x150.jpg 116w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-quick-reference-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-quick-reference.jpg 609w" sizes="(max-width: 270px) 100vw, 270px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20system%20quick%20reference.pdf">Oberon Pi Quick Reference</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20system%20user%20guide.pdf"><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-user-guide-233x350.jpg" alt="" width="233" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-user-guide-233x350.jpg 233w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-user-guide-100x150.jpg 100w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-user-guide-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-system-user-guide.jpg 542w" sizes="(max-width: 233px) 100vw, 233px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20system%20user%20guide.pdf">Oberon Pi System User Guide</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20draw%20quick%20reference.pdf"><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-draw-quick-reference-318x350.jpg" alt="" width="318" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-draw-quick-reference-318x350.jpg 318w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-draw-quick-reference-136x150.jpg 136w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-draw-quick-reference-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-draw-quick-reference.jpg 721w" sizes="(max-width: 318px) 100vw, 318px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20draw%20quick%20reference.pdf">Oberon Pi Draw Quick Reference</a></td>
</tr>
<tr>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20draw%20user%20guide.pdf"><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-draw-user-guide-268x350.jpg" alt="" width="268" height="350" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-draw-user-guide-268x350.jpg 268w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-draw-user-guide-115x150.jpg 115w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-draw-user-guide-1x1.jpg 1w, http://pascal.hansotten.com/wp-content/uploads/2025/01/Oberon-draw-user-guide.jpg 661w" sizes="(max-width: 268px) 100vw, 268px"></a></td>
<td><a href="http://pascal.hansotten.com/uploads/oberonpi/Oberon%20draw%20user%20guide.pdf">Oberon Pi Draw User Guide</a></td>
</tr>
</tbody>
</table>
<p><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-162551_1920x1080_scrot-1024x576.png" alt="" width="654" height="368" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-162551_1920x1080_scrot-1024x576.png 1024w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-162551_1920x1080_scrot-350x197.png 350w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-162551_1920x1080_scrot-150x84.png 150w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-162551_1920x1080_scrot-1536x864.png 1536w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-162551_1920x1080_scrot-2x1.png 2w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-162551_1920x1080_scrot.png 1920w" sizes="(max-width: 654px) 100vw, 654px"></p>
<p><img loading="lazy" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-165228_1920x1080_scrot-1024x576.png" alt="" width="654" height="368" srcset="http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-165228_1920x1080_scrot-1024x576.png 1024w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-165228_1920x1080_scrot-350x197.png 350w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-165228_1920x1080_scrot-150x84.png 150w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-165228_1920x1080_scrot-1536x864.png 1536w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-165228_1920x1080_scrot-2x1.png 2w, http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-165228_1920x1080_scrot.png 1920w" sizes="(max-width: 654px) 100vw, 654px"></p>
<p>See the github at <a href="https://github.com/richardgleaves/Oberon-Pi">https://github.com/richardgleaves/Oberon-Pi</a> for Oberon Pi, ready to run on the Raspberry Pi OS.<br>
See below how to run Oberon Pi on a 64 bit architecture Raspberry Pi OS.</p>
<h3>Oberon Pi</h3>
<p><strong>Author</strong>: Richard Gleaves</p>
<p>This version of Oberon, named Oberon Pi, emulates the Oberon system on a Raspberry Pi 400, using the Raspberry Pi OS as the host operating system.<br>
Oberon Pi runs as an application in the Raspberry Pi OS. When you execute the Oberon Pi command, a window opens on the Pi OS desktop. This window is the Oberon *display*, and it works like a separate computer running the Oberon system, with its own windows, command menus, and file system.</p>
<p><strong>Goals</strong><br>
The original Oberon system includes many unusual user interface elements. These elements make the system worthy of study, both as a historical software artifact, and as a case study in user interface design.<br>
But the original system also includes a few non-key features (such as *mouse interclicking* and opaque command names) which make the system difficult to learn.<br>
The primary goal and purpose of Oberon Pi is instructional: to make the original Oberon system more accessible, by updating the non-key user interface elements to contemporary software standards, while preserving the key elements that make Oberon unique.<br>
Oberon Pi includes source code and full documentation of the Oberon system and language. The system user guide is provided as both a standalone PDF file and as integrated help in the Oberon system.</p>
<p><strong>System Requirements</strong></p>
<p>    –  Raspberry Pi computer (Pi4 or Pi 5 preferred)<br>
    –  32 bit or 64 bit Raspberry Pi OS desktop vrsion(Bookworm or Bullseye)<br>
    –  Desktop computer monitor (large preferred)</p>
<p><strong>Installation</strong><br>
For details see the *Oberon Pi Setup Guide*.</p>
<p><strong>History</strong><br>
The Oberon system was originally developed in the late 1980s by Niklaus Wirth and Jürg Gutknecht. In 2013 the system was re-implemented by Wirth and Paul Reed to run on a custom RISC processor. In 2014 an emulator for the RISC processor was developed by Peter De Wachter. Oberon Pi is a port of the emulator to the Raspberry Pi OS.</p>
<p><strong>Install and run on 64 bit Raspberry Pi OS</strong><br>
The github distribution is for the 32 bit Raspberry Pi OS.</p>
<p>Make these changes to run Oberon Pi on a 64 bit Raspberry Pi OS after the initial setup but before launching Oberon Pi:</p>
<pre title="">cd Oberon\Emulator
mv risc risc.pi400
sudo apt install libsdl2-dev
make
</pre>
<p>which will produce (silently) a new ‘risc’ executable and follow the ‘Oberon Pi Setup Guide’.</p>
<p><a href="http://pascal.hansotten.com/uploads/oberonpi/32%20and%2064%20bit%20versions%20of%20oberon%20pi.zip">Here an archive with both 32 bit and 64 bit ‘risc’ executables.</a></p>
		        <!-- .entry-meta -->
	</div><!-- .entry-content -->
</article><!-- #post-2662 -->

					
				
			</div><!-- #content .site-content -->
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Brian Eno's Theory of Democracy (157 pts)]]></title>
            <link>https://www.programmablemutter.com/p/brian-enos-theory-of-democracy</link>
            <guid>43884635</guid>
            <pubDate>Sun, 04 May 2025 05:12:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.programmablemutter.com/p/brian-enos-theory-of-democracy">https://www.programmablemutter.com/p/brian-enos-theory-of-democracy</a>, See on <a href="https://news.ycombinator.com/item?id=43884635">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg" width="1200" height="796" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:796,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Brian Eno, 77 Million Paintings, Image courtesy of the artist and Lumen London | Brian Eno: 77 Million Paintings | Friday 18 January – Sunday 24 February 2019 | Royal Hibernian Academy&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null}" alt="Brian Eno, 77 Million Paintings, Image courtesy of the artist and Lumen London | Brian Eno: 77 Million Paintings | Friday 18 January – Sunday 24 February 2019 | Royal Hibernian Academy" title="Brian Eno, 77 Million Paintings, Image courtesy of the artist and Lumen London | Brian Eno: 77 Million Paintings | Friday 18 January – Sunday 24 February 2019 | Royal Hibernian Academy" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3fe93b6-fd36-4c63-88f9-55a434046baf_1200x796.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>[image by Brian Eno, from “77 Million Paintings.” Eno says </span><a href="https://www.youtube.com/watch?v=Dfc-DQorohc" rel="">in this dialogue</a><span> that he doesn’t mind people using these images for non-commercial purposes]</span></p><p>This post’s title is a little cheeky. Brian Eno does not have an explicit theory of democracy that I know of, although he is visibly and emphatically committed to its practice. But Eno’s arguments about the arts tell us important things about how democracy ought work, and what kinds of democratic stability and variety we ought aspire to.</p><p><span>The back story to this post doesn’t start with Brian Eno. Back in 1991, the political scientist Adam Przeworski published a book, </span><em><a href="https://www.cambridge.org/core/books/democracy-and-the-market/8BB2B73D2DBB302B681B61D622F9B4BB" rel="">Democracy and the Market</a></em><span>. Most of the book was about the democratic transition in Central and Eastern Europe, and it was very good as best as I can judge these things. But the first chapter was much, </span><em>much</em><span> better than very good. It laid out a brief theory of democracy that reshaped the ways in which political scientists think about it. </span></p><p><span>Przeworski’s theory </span><a href="https://goodauthority.org/news/why-do-election-losers-accept-their-losses/" rel="">starts from a simple seeming claim</a><span>: that “democracy is a system in which parties lose elections.” It then uses a combination of game theory and informal argument to lay out the implications. If we assume (as Przeworski assumes) that parties and political decision makers are self-centered, why would the ruling party ever accept that they had lost and relinquish control of government? Przeworski argues that it must somehow be in their self-interest to so. He argues that they will admit defeat if they see that the alternative is worse, and (this is crucial) because democracy generates sufficient uncertainty about the future that they believe they might win in some future election. They know that they will hurt their interests if they refuse to give in, and they have some (unquantifiable but real) prospect of coming back into power again. Democracy, then, will be stable so long as the expectation of costs and the uncertainty of the future give the losers sufficient incentive to accept that they have lost.</span></p><p>This is a more beautiful idea than I am able to explain in a brief post, and certainly much more beautiful than any argument I will ever come up with myself. It compresses a vast and turbid system of enmeshed ambitions and behaviors into a deceptively simple nine word thesis. That thesis can then be unfolded into a variety of more detailed models of how democracy may sustain itself through the interlocking ambitions of politicians who strive to win office, but grudgingly accept that they must leave it if they lose. If Przeworski’s argument is not well known outside political science, it is likely because it is a chapter in a book that is mostly about different questions from a different time. But within political science, it is rightly regarded as a classic. If you have a Ph.D. in comparative politics, or even a good undergraduate degree, you will likely have been required to read it as a photocopy or a PDF. </p><p>Equally, Przeworski’s argument leads you to think about democracy in some ways, and not others. It suggests that the central elements of democracy are a set of self-reinforcing expectations about the alternation of power, which can be mapped with game theory. Many political scientists were inspired by Przeworski’s ideas to come up with more formal models of democracy, ditching Przeworski’s claims about uncertainty and informal arguments in favor of greater determinacy and cleaner math. Personally, I think that Przeworski’s initial, messier formulation better captures some of the dynamics of the system,.</p><p>This understanding implies that as soon as democracy has become established, it will continue to work into the indefinite future, because everyone’s expectations converge in ways that reinforce each other.  Once a democracy has become sufficiently wealthy and established, parties and leaders should recognize that they have too much to lose from destabilizing the system. It would take a massive external shock (e.g. a major economic crisis), remaking the environment that democracy works in, to shift people out of their ordinary beliefs and behaviors. </p><p><span>These assumptions mostly stem from the way that game theorists think about the world. In their language, democracy is a self enforcing equilibrium, which will just keep on going so long as the parameter values don’t shift too radically. You don’t have to worry too much about destabilizing forces emerging from </span><em>within</em><span> democracy. </span></p><p><span>Unfortunately, it has become clear to many (including Przeworski himself) that this understanding can’t really explain why democracy is degenerating in the U.S. and elsewhere. Look around you: there are visibly circumstances under which democracy can be self-destabilizing rather than self-reinforcing, but standard game theory has little to say about this. As a result, Przeworski has begun to </span><a href="https://www.cambridge.org/core/journals/perspectives-on-politics/article/formal-models-of-authoritarian-regimes-a-critique/AED030168CCBB46CAB879D4A380954AA#:~:text=https%3A//doi.org,a%20new%20window%5D" rel="">ask</a><span> different questions about people’s expectations than he used to. People’s preferences and beliefs about democracy can change for </span><em>endogenous</em><span> reasons, as they are affected by the back-and-forth within the democratic system. Whether they are stabilizing or not will depend on circumstances that aren’t easy to capture with game theory.</span></p><p><span>That is why I think that Brian Eno’s ideas are politically as well as artistically valuable. To be clear, this is a notion that I’ve come to slowly. I’m a third generation product of the loose school that Przeworski and others </span><a href="https://as.nyu.edu/content/dam/nyu-as/faculty/documents/munck.pdf" rel="">founded</a><span> in the 1980s.* But like Przeworski himself, I’ve begun to think over the last several years that the standard understanding misses a lot of what is happening. We need a different way of thinking about democracy. In a 2019 </span><em>Boston Review</em><span> </span><a href="https://www.bostonreview.net/forum/forum-henry-farrell-bruce-schneier-democracys-dilemma/" rel="">article with Bruce Schneier</a><span>, I waved towards this (other parts of the article are mostly Bruce; as best as I remember, this single sentence was mostly me):</span></p><blockquote><p>What we really need is what complex systems theorists would call a “dynamical” model of democracy, which would capture how democratic systems can remain stable in the face of deep disagreements and the changing needs of a complex environment.</p></blockquote><p><span>A little over a year ago, I came across Eno’s </span><a href="https://monoskop.org/images/8/8c/Eno_Brian_1976_2015_Generating_and_Organizing_Variety_in_the_Arts.pdf" rel="">shortened essay</a><span>,** “Organizing and Generating Variety in the Arts.” As the title makes clear, it is not an essay about politics, and it doesn’t mention the word ‘democracy’ once. It is still the best brief description of such a “dynamical model of democracy” that I’ve ever read. </span></p><p>Eno writes about music, drawing out the distinction between classical composition, and the forms of composition that interest him. As I interpret him,*** the differences have to do with how to interpret the score. In classical music, the score flattens out variety. Musicians perform the score as it is written - virtuosity consists of interpreting a score that is fixed in advance in compelling ways within a prescribed and narrow band of variations. The kinds of music that Eno wants to talk about treat the score in very different ways: as a set of simple instructions for generating variety rather than constraining it.</p><blockquote><p>Cardew's score is very simple. It is written for any group of performers (it does not require trained singers). There is a piece of text (from Confucius) which is divided into 24 separate short phrases, each of one to three words in length. Beside each phrase is a number, which specifies the number of repetitions for that line, and then another number telling you how many times that line should be sung loudly. The singing is mostly soft.</p><p> All singers use exactly the same set of instructions. They are asked to sing each line of the text the given number of times, each time for the length of a breath, and on one note. The singers start together at a signal, and each singer chooses a note for the first line randomly, staying on it until the completion of the repetitions of the line. </p><p>The singer then moves on to the next line, choosing a new note. The choice of this note is the important thing. The score says: 'Choose a note that you can hear being sung by a colleague. If there is no note, or only the note you have just been singing, or only notes that you are unable to sing, choose your note for the next line freely. Do not sing the same note on two consecutive lines. Each singer progresses through the text at his own speed.'</p></blockquote><p>A remarkable amount of order emerges from this seemingly unconstrained process.</p><blockquote><p>A cursory examination of the score will probably create the impression that the piece would differ radically from one performance to another, because the score appears to supply very few precise (that is, quantifiable) constraints on the nature of each performer's behaviour, and because the performers themselves (being of variable ability) are not 'reliable' in the sense that a group of trained musicians might be. The fact that this does not happen is of considerable interest, because it suggests that somehow a set of controls that are not stipulated in the score arise in performance and that these 'automatic' controls are the real determinants of the nature of the piece.</p></blockquote><p><span>There’s a </span><a href="https://www.programmablemutter.com/p/cybernetics-is-the-science-of-the" rel="">cybernetic logic</a><span> behind this argument.</span></p><blockquote><p>Perhaps the most concise description of this kind of composition, which characterizes much experimental music, is offered in a statement made by the cybernetician Stafford Beer. He writes: ‘Instead of trying to specify it in full detail, you specify it only somewhat. You then ride on the dynamics of the system in the direction you want to go.' In the case of the Cardew piece, the 'dynamics of the system' is its interaction with the environmental, physiological and cultural climate surrounding its performance. The English composer Michael Parsons provides another view on this kind of composition: … This is an example of making use of 'hidden resources' in the sense of natural individual differences (rather than talents or abilities), which is completely neglected in classical concert music, though not in folk music.</p></blockquote><p><span>Again, these are arguments about </span><em>music</em><span>. Still, as Eno acknowledges, they could just as easily be arguments about any form of social organization. </span></p><p>What I want to argue is that these ideas hold particular force for democracy, which more intimately resembles the collective creation and performance of music than most observers of either recognize.*** Both combine the production of variety with large scale coordination. Doing this well requires continuous adaptation both to the environment and to the endogenous and spontaneous variations that emerge from within the coordinating process. This is quite different from the usual static ways in which we think about organizations.</p><blockquote><p>At one extreme, then, is this type of organization: a rigidly ranked, skill-oriented structure moving sequentially through an environment assumed to be passive (static) toward a resolution already outlined and specified. This type of organization regards the environment (and its variety) as a set of emergencies and seeks to neutralize or disregard this variety. … Proposing an organizational structure opposite to the one described above is valueless because we would probably not accord it the name organization: whatever the term does connote, it must include some idea of constraint and some idea of identity. So what I shall now describe is the type of organization that typifies certain organic systems and whose most important characteristics hinge on this fact: that changing environments require adaptive organisms. … An organism operating in this way must have something more than a centralized control structure. It must have a responsive network of subsystems capable of autonomous behaviour, and it must regard the irregularities of the environment as a set of opportunities around which it will shape and adjust its own identity.</p></blockquote><p>I don’t want to press too hard on the resemblance between Eno’s analogies and my own ideas, but I think it’s fair to say that game theoretic accounts of democracy as a self-enforcing equilibrium are more like a rigid structure moving through an environment that it ignores except in crisis, than an adaptive organism with responsive subsystems. Again (and apologies for the technical language),  game theorists treat the environment as a set of parameters in which (if the game is indefinitely iterated), an enormous number of equilibria will be possible, so that there is no good way of predicting whether one equilibrium or another will come about. The primary channel of information from the environment to the organization conveys just one single bit: is a particular equilibrium possible or not given the parameters? That feedback only changes when some external shock shifts the environmental parameters so far that the existing equilibrium can’t be sustained any more. And even then, all you can plausibly say with game theory is that some new equilibrium (likely one of many possible equilibria) will arise. Hence, the action involves self-reinforcing expectations which keep on going, and going, and going until suddenly they can’t. </p><p><span>Even game theoretic models that play with the math to provide a somewhat </span><a href="https://web.stanford.edu/~avner/Greif_Papers/2004%20A%20Theory%20of%20Endogenous%20Instituitonal%20Change.pdf" rel="">more complex account</a><span> of the relationship between the environment and the democratic equilibrium tend to assume that expectations rapidly converge on stable outcomes. It’s no surprise that such models don’t do well at explaining change: they’re designed to simplify away most of the processes through which change might occur.</span></p><p><span>That’s why I think that Eno’s approach to thinking about the world is better suited to understand what has gone wrong, and how to set it right. That does not mean that we want to throw away Przeworski’s central insights about stability. But it suggests that we need to think about stability in different ways. Brian Eno’s account of organization is explicitly not a recipe for an </span><em>unconstrained</em><span> system - democracy needs, in some real sense, to remain democratic. But ‘stable’ and ‘static’ mean different things.</span></p><blockquote><p>just as it is evident that an organism will (by its material nature) and must (for its survival) generate variety, it is also true that this variety must not be unlimited. That is to say, we require for successful evolution the transmission of identity as well as the transmission of mutation. Or conversely, in a transmission of evolutionary information, what is important is not only that you get it right but also that you get it slightly wrong, and that the deviations or mutations that are useful can be encouraged and reinforced.</p></blockquote><p>In an electoral democracy, for example, it is absolutely true that parties that lose elections need to recognize that they have lost, and slink away to lick their wounds and prepare for the next electoral battle. But this will require a perpetual process of adjustment. Parties will - given their incentives - keep trying to push the boundaries of what is possible and allowed, looking for enduring advantages and means to rig the game in their favor. Responding to those behaviors will equally require dynamic responses, many of which will leverage the desires of their opponents to remain competitive. </p><p>In other words, we should treat Przeworski’s requirements as the score for a dynamic rather than a equilibrium based account of electoral democracy. Ensuring that parties leave office when they are defeated - and that they do not gimmick the rules to ensure their rapid return to power - is really important, but it will require continual adjustment as ruling parties discover new tricks. Doing that well will involve figuring out what the “set of controls that are not stipulated in the score” might be, how to make sure that they “arise in performance” and how to ensure that they are as effective as possible. The score sets out broad objectives, and some loose machinery for how to achieve them, but it is in the performance that most of the real action happens.</p><p><span>And not just that. On Eno’s arguments, organizations need to be interested in generating variety as well as stability. A successful social organization is not a machine for keeping things the same, or for that matter, for generating randomness, but a means of generating </span><em>useful variety</em><span> that can help to match the variety and changes in the environment that the organization lives in. This has obvious implications for democracy. It is through harvesting the variety of perspectives - the “natural individual differences” if you like - among its citizens that democracy can </span><a href="http://the production of variety" rel="">discover solutions to complex problems</a><span>, and it is through coordination that it can address them. But doing both well involves figuring out difficult tradeoffs with stability. As Jenna Bednar </span><a href="https://www.pnas.org/doi/epub/10.1073/pnas.2113843118" rel="">argues</a><span>:</span></p><blockquote><p>Diversity—of interests, of issues—is a source of new ideas in the system. If a system of safeguards is too rigid, there is no exploration of ideas and practices that might provide a vision forward when a system needs to adapt. Additionally, if it lacks interest dispersion, there is no potential for cross-cutting cleavages to develop. The success of the architecture is measured by its capacity to manage the perturbations, avoiding maladaptation or system collapse.</p></blockquote><p>Bednar advocates “distributed, simple safeguards rather than a single, complex, catchall structure” in a federal system that ‘modularizes’ politics. The idea here is to create a democratic system in which a variety of different ideas and solutions can be developed and tested out, and where if they fail, their failures will be limited. You want, on her account, loosely connected federal politics: sufficient for basic rights to be protected, and for safeguards to work, but not so strong as to impose a single vision on constituent parts that may experiment in diverse directions. Or, to repeat Eno’s description:</p><blockquote><p>An organism operating in this way must have something more than a centralized control structure. It must have a responsive network of subsystems capable of autonomous behaviour, and it must regard the irregularities of the environment as a set of opportunities around which it will shape and adjust its own identity.</p></blockquote><p><span>Bednar is more admiring of the wisdom of America’s founders than I am - there is a lot that can go wrong with their conception of politics and has done so. Others, like Jake Grumbach, are much more skeptical about </span><a href="https://press.princeton.edu/books/hardcover/9780691218458/laboratories-against-democracy?srsltid=AfmBOop1mH5YcC28NRdMKb9EAPETtbgnPiQqL-B5I9IyKuAGNYf9DLxh" rel="">American federalism and variety</a><span>. But Bednar provides an excellent sense of what a democratic system that prioritizes discovery and adaptation might look like, and of why political polarization threatens these aspects of American democracy. As she explains:</span></p><blockquote><p>A third consequence of affective polarization is particularly threatening: the compression of the information space, including the suppression of diverse interests and issues. Polarization does more than divide a population; it simplifies it. When people conform to one another, they let go of their differences … not only are groups becoming more sharply divided, but they do so by becoming more like those in their in-group. At the system level, information is lost. When agents conform, the dimensionality of the issue or identity space is reduced. …</p><p>Democracy is like a social information processor; at best, it takes the breadth of human interests and ideas and turns them into useful policy to promote social welfare. Democracy relies on the free flow of diverse information to be innovative and productive. Diversity is an asset, and polarization with conformity burns that asset. Additionally, … it also undermines the supports girding our democracy against a slide toward autocracy.</p></blockquote><p><span>Bringing Bednar and Grumbach together, the problem with actually existing federalism is that has been polarized into two opposing networks of political action with little internal variety. Remaking that will not only require breaking the existing gridlock, but a lot of practical experimentation. My co-authors and I lay out one agenda for doing that </span><a href="https://doi.org/10.1017/S0003055422000715" rel="">here</a><span>, which focuses on the level of small group decision making. That is certainly insufficient on its own to reverse the larger positive feedback loop of polarization that Bednar and others have identified.</span></p><p>Both Eno’s essay and Przeworski’s chapter are beautiful, but in different ways. Eno’s emphasis on organizing and generating variety is less likely by its nature to generate precise claims than useful heuristics. Plausibly though, we need heuristics more than we need science right now: useful general guideposts to action rather than law-like statements about the causes of democratic stability.******  </p><p><span>Indeed, this also fits better with Przeworski’s </span><a href="https://adamprzeworski.substack.com/" rel="">recent writing</a><span>, which implicitly stresses the need for social scientists to show humility: we got an awful lot wrong. We’re in a moment of rapid ferment and change, where the fountains of accepted wisdom have mostly run dry. What social scientists may be able to provide is our own combination of uncertainty and variety. We do not have a stronger claim than anyone else to absolute knowledge of what is happening, but we do have a variety of more or less imperfect models, which can clarify thinking and channel it in more useful directions. Eno’s account of variety is not only a valuable model in its own right, but a justification for drawing on the multitude of differences that we need to draw on, turning hidden resources into visible and usable ones. </span></p><p><span>* It is always when the third generation comes along that </span><a href="https://www.britannica.com/topic/Buddenbrooks-novel-by-Mann" rel="">things start going badly wrong</a><span>.</span></p><p>** The ellipses in the text suggest that there is a longer version somewhere, which I haven’t read, but would love to.</p><p>*** I could be mistaken! Since the shortened essay is less than five pages long, I recommend you read it for yourself.</p><p><span>**** One person who </span><em>did</em><span> draw this kind of connection was the </span><a href="https://www.theguardian.com/books/2022/jul/25/ghosts-of-my-life-by-mark-fisher-ferociously-intelligent-cultural-insights" rel="">late critic Mark Fisher</a><span>. Riffing on Fisher, you could tell a story about perceived changes in the possibilities of collective action by tracing the three decade change from the ecstatic communion of the </span><a href="https://www.youtube.com/watch?v=NwMOpaxroTg" rel="">Weatherall mix</a><span> of ‘Come Together’ to the noctilucent fractures of Burial’s ‘</span><a href="https://www.youtube.com/watch?v=nORcDjx-Dvg" rel="">Dark Gethsemane</a><span>.’</span></p><p><span>***** This is the “folk theorem” of game theory, summarized by Dan Davies </span><a href="https://crookedtimber.org/2006/11/29/reputations-are-made-of/" rel="">as follows</a><span>: “The Folk Theorem in game theory states that any outcome of a repeated game can be sustained as an equilibrium if the minimax condition for both players is satisfied. In plain language, it can be summarised as stating that ‘if we take strategic considerations into account, there is a game-theoretic rationale for practically anything.’ This formulation leads on to my contribution, the Davies-Folk Theorem, which states that ‘if we take strategic considerations into account, there is a game-theoretic rationale for practically </span><em>fucking</em><span> anything’ (it’s a fairly simple corollary; proof available from author on request).”</span></p><p>****** Though as already noted, law-like generalizations can provide the broad outlines of a score.</p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What went wrong with wireless USB (300 pts)]]></title>
            <link>http://oldvcr.blogspot.com/2025/05/what-went-wrong-with-wireless-usb.html</link>
            <guid>43883902</guid>
            <pubDate>Sun, 04 May 2025 02:03:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://oldvcr.blogspot.com/2025/05/what-went-wrong-with-wireless-usb.html">http://oldvcr.blogspot.com/2025/05/what-went-wrong-with-wireless-usb.html</a>, See on <a href="https://news.ycombinator.com/item?id=43883902">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-7882684022484049781" itemprop="description articleBody"><p>
(Hat tip to the late Bill Strauss and The Capitol Steps' Lirty Dies.)

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiPtKJoGOsceibxhKgVuugKyZe_yZ374dDqXsa-x0jtwIHrbtOE6-szJCU1FokLYM01_GjCTk-PpKWv4M80sExwh-CtXgqVvvPr2c_NqLAOf0kuPu7H3V_slffGhwJHmZE0_IJH2ndB8-glKMPU81pB12z_t115-e5Y4N8FJ9k02ZUP3zlmNSjdtJxfuKI/s2700/wusb.png"><img alt="" data-original-height="1500" data-original-width="2700" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiPtKJoGOsceibxhKgVuugKyZe_yZ374dDqXsa-x0jtwIHrbtOE6-szJCU1FokLYM01_GjCTk-PpKWv4M80sExwh-CtXgqVvvPr2c_NqLAOf0kuPu7H3V_slffGhwJHmZE0_IJH2ndB8-glKMPU81pB12z_t115-e5Y4N8FJ9k02ZUP3zlmNSjdtJxfuKI/s320/wusb.png" width="320"></a></p><p>

A few moons ago I was thinking of ways to <a href="http://oldvcr.blogspot.com/2023/09/the-fossil-wrist-pda-becomes-tiny.html">take my Palm OS Fossil Wrist PDA smartwatch mobile</a>. It has no on-board networking libraries but can be coerced into doing PPP over its serial port (via USB) by using the libraries from my Palm m505. Of course, that then requires it be constantly connected to a USB port, which is rather inconvenient for a wristwatch.
</p><p>
But what if the USB connection could be made <em>wirelessly</em>? For a few years, real honest-to-goodness wireless USB devices were actually a thing. Competing standards led to market fracture and the technologies fizzled out relatively quickly in the marketplace, but like the <a href="http://oldvcr.blogspot.com/2021/06/the-parallel-universe-of-firewire-hubs.html">parallel universe of FireWire hubs</a> there was another parallel world of wireless USB devices, at least for a few years. As it happens, we now have a couple of them here, so it's worth exploring what wireless USB was and what happened to it, how the competing standards worked (and how well), and if it would have helped.
</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgyZUkH34lWymKYo-u1CnWx4n8HZUFd9cd-14tQdM7IX7Z3No4hZp6en_PCPwvLKpH_Pxn6dluWxJKEX4jGNlJD1S-7bTNI6s4_xDKHgY7IfWs2LG5LoJh4KCPXtvX2IcicUB3zeub4SaBpA35YOrSanD3fyKx8qV5-BPulVkJIHcjW9XmUp7WPw9OD7Vs/s3077/schillerplunge.jpg"><img alt="" data-original-height="1775" data-original-width="3077" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgyZUkH34lWymKYo-u1CnWx4n8HZUFd9cd-14tQdM7IX7Z3No4hZp6en_PCPwvLKpH_Pxn6dluWxJKEX4jGNlJD1S-7bTNI6s4_xDKHgY7IfWs2LG5LoJh4KCPXtvX2IcicUB3zeub4SaBpA35YOrSanD3fyKx8qV5-BPulVkJIHcjW9XmUp7WPw9OD7Vs/s320/schillerplunge.jpg" width="320"></a></p><p>

You can probably blame Wi-Fi for this: while early patents for Wi-Fi existed as far back as 1991, after the introduction of 802.11 in 1997 and Apple's use of 802.11b <a href="https://www.youtube.com/watch?v=1MR4R5LdrJw">for the iBook G3 in 1999</a> people really started to believe a completely wireless future was possible — for <em>any</em> device. This was nevertheless another type of network, just one involving only one computer and one user over a short range, which was grandiosely dubbed the "personal area network," or PAN, or WPAN, depending on executive and blood alcohol level. Although initial forms of Bluetooth were the first to arrive in this space, Bluetooth was never intended to handle the very high data rates that some wireless peripherals might require, and even modern high-speed Bluetooth isn't specced beyond 50 megabits/sec (though hold that thought for a later digression). The key basis technology instead was the concept of ultra wide-band, or UWB, which in modern parlance collectively refers to technologies allowing very weak, very wide-spectrum (in excess of 500MHz) signals to become a short range yet high bandwidth communications channel.
</p><p>
Wideband, in this case, is contrasted against the more typical narrowband. In general radio transmission works by modulating a carrier wave of a specified frequency, changing its amplitude (AM), phase, and/or the frequency itself (FM), to encode a signal to be communicated. For terrestrial analogue broadcasting, a good example of narrowband radio, this might be an audio signal carrying some specified frequency range; for FM radio in the United States this audio signal ranges from 30Hz to 15kHz, enough to capture much of the human-audible range, plus various higher frequencies not intended for listening. This collective signal effectively becomes encoded into <i>sidebands</i> on one or both sides of the carrier frequency (even with AM), and per Carson's rule the higher the maximum modulated frequency of the encoded signal then the larger the sidebands (ergo, its <i>bandwidth</i>) must be. As a result, commercial radio stations in particular are often heavily filtered for coexistence to allow many stations to share the band: in the United States, within ITU Region 2, the Federal Communications Commission (FCC) divides the FM band from 88.0MHz to 108.0MHz into 100 "channels" of 200kHz each, putting the nominal carrier frequency in the middle of the channel to provide sufficient sideband width for modulation, and strictly regulates any spillover outside those channel boundaries. In practice, most adjacent U.S. FM stations are no closer than 400kHz, a balance between spectrum capacity and signal strength. This typically permits a maximum FM stereo modulated frequency of about 53kHz; frequencies in the aggregate range being transmitted that are unused or unnecessary can be repurposed as <i>subcarriers</i> to emit additional information, such as FM stereo's 19kHz pilot tone subcarrier used to signal receivers, or Microsoft's brief flirtation with one-way transmissions to SPOT smartwatches. Doing so is "free" because the subcarrier frequency is already part of the frequency range.
</p><p>
By contrast, signals like 802.11 Wi-Fi are wideband radio, or at least comparatively wid-<em>er</em> band, because they pass much higher bandwidths. Although 802.11 frequencies (except for the very highest 45/60GHz band) are generally divided into 5MHz channels, people typically only use channels 1, 6 and 11 with 2.4GHz Wi-Fi, for example (or, in later standards, 1, 5, 9 and maybe 13), which spaces them by 20MHz or more. Compare this with medium-wave AM radio, where channel spacing in the United States is just 10kHz and even 9kHz in some countries like Australia, or shortwave radio with only 5kHz spacing.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjDMot6lx8dkzOpfcvjuvjUzPSie0EdrHLiBN0z7iLMZQS9i9YzYfYRZecL-c0V-z9u6Txs42J8xzEOTWzpmumL2axh3vZNHB0uKuD7jcSPsLWlSQRg2KC4XkiBbj0Sd-uCB97gd8NFr-GNPtEslWuviO0nRksvvvrAPljGlJ-7YJwofkzFIVPDLMqvmsc/s2000/uwbdiag.png"><img alt="" data-original-height="2000" data-original-width="2000" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjDMot6lx8dkzOpfcvjuvjUzPSie0EdrHLiBN0z7iLMZQS9i9YzYfYRZecL-c0V-z9u6Txs42J8xzEOTWzpmumL2axh3vZNHB0uKuD7jcSPsLWlSQRg2KC4XkiBbj0Sd-uCB97gd8NFr-GNPtEslWuviO0nRksvvvrAPljGlJ-7YJwofkzFIVPDLMqvmsc/s320/uwbdiag.png" width="320"></a></p><p>

That brings us to UWB. Ultra wideband has its roots in <i>impulse radar</i>, which is a form of the more familiar pulsed radar (such as the traffic cop at the corner) using much briefer radio pulses. Radar also works on a carrier wave model, but instead of FM or AM, the radar carrier wave is merely pulsed on and off. This is necessary so that the detector during the "off" phase can pick up echoes of the radio pulse transmitted during the "on" phase, and for most applications of radar, the <i>pulse-repetition frequency</i> (PRF) is much less than the frequency of the carrier wave being pulsed. Shorter, more frequent pulses would have theoretically yielded greater precision at close range, but such capability was beyond the electronics available to early radar researchers who were more concerned with long-range detection anyway, where the off phase had to be of sufficient length to detect a distant reflection. By the 1970s, however, the technology had sufficiently advanced that the radar's PRF could approach its carrier frequency, making things like ground-penetrating radar possible. While higher frequencies couldn't travel through ground for great distances, they did yield much better resolution and therefore meaningful data.
</p><p>
To a basic approximation UWB uses the same principle as impulse radar: a series of pulses, potentially as short as picoseconds long, of a particular carrier wave. As the carrier wave itself isn't changing, all of the information is necessarily being encoded in the pulses' timing. Being discontinuous waves, Carson's rule doesn't directly apply to most forms of UWB, but the analogous Shannon capacity limit indicates that rapid modulation from a high PRF would also require significant bandwidth — hence, ultra wide-band. To mitigate UWB transmissions from interfering with narrower-band transmissions on the same frequencies, the pulsed transmissions can be made at very low power, often below the typical noise floor for other transmissions. Naturally this also necessarily limits its range to perhaps a hundred or so metres at most but also makes battery-powered operation highly practical. Its utility in location-finding is because time-of-flight can be measured very quickly and exactly due to the short pulse lengths; when fully active, an Apple AirTag typically transmits a pulse about every other nanosecond.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgwTQT0tQiPKTeCzFnwa5tDsuERAKQ0ryDNGPv7A_Ggg0wdTsWeIxQok1gKhPkCYA0GC5LIZPZsyaaa-7VMADRuBeB23joEt2AsmdM7U4_dg4wyqznV0oZQKwpeHnADmEIfHNH6y4osBCfVyalYlw0Cazld_Kgs2wdXcR2Pbh50DVoyJ_9n5CSKXdgfxwA/s2415/wusb-20020218-nw.png"><img alt="" data-original-height="2415" data-original-width="1905" height="320" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgwTQT0tQiPKTeCzFnwa5tDsuERAKQ0ryDNGPv7A_Ggg0wdTsWeIxQok1gKhPkCYA0GC5LIZPZsyaaa-7VMADRuBeB23joEt2AsmdM7U4_dg4wyqznV0oZQKwpeHnADmEIfHNH6y4osBCfVyalYlw0Cazld_Kgs2wdXcR2Pbh50DVoyJ_9n5CSKXdgfxwA/s320/wusb-20020218-nw.png"></a></p><p>
  
The FCC first approved UWB for low-power unlicensed use in February 2002 (for comparison, the first commercial Bluetooth device arrived in 1999), though communication systems were only allowed on the upper range from 3.1GHz to 10.6GHz and the FCC also made <a href="https://www.federalregister.gov/documents/2002/05/16/02-11929/ultra-wideband-transmission-systems">subsequent amendments</a>. A standards group quickly emerged at the IEEE called the IEEE 802.15 Working Group for WPANs, addressing not only UWB but other WPAN-enabling technologies generally. The 802.15 WG had two arms, 802.15.4 for low bandwidth applications which we will not discuss further in this article (Zigbee is probably the most well-known in this category), and 802.15.3 for high bandwidth applications. Subsequently, the WiMedia Alliance was established that summer to capitalize on the new high-bandwidth technology, counting among other early members Eastman Kodak, Motorola, Hewlett-Packard, Intel, Philips, Samsung, Sharp and STMicroelectronics. 802.15.3 had obvious utility in determining precise location, but an extension called 802.15.3a in December 2002 sought to further enhance the standard for high-speed transmission of image and multimedia data. This team started with 23 proposals and whittled them down to two, DS-UWB (alternatively DS-CDMA) and MB-OFDM.
</p><p>
DS-UWB stands for <i>direct sequence ultra wide-band</i>, where the data is simply sent as pulses (as in binary pulse AM) over the entire frequency range in use. However, although the low power of UWB prevents it from interfering with higher-power narrowband signals, an additional layer is needed to prevent UWB transmissions from interfering with each other (i.e., <i>multiple access</i>). DS-UWB uses a system similar to cellular CDMA (code-division multiple access) where each transmitter modulates the data signal with an even higher frequency pseudorandom code known to the receiver, hence its alternative name of DS-CDMA. An interfering transmitter without the same code will have its signals attenuated during the decoding (<i>despreading</i>) process and be ignored. Additionally, by making the transmitted signal require more bandwidth than the original one, the composite signal becomes spread over an even larger frequency range and thus more resistant to narrow-band interference (i.e., <i>direct sequence spread spectrum</i>).
</p><p>
On the other hand, MB-OFDM (<i>multiband orthogonal frequency-division multiplexing</i>) instead employs a massive number of subcarriers to send its data. The basic principle of OFDM, which dates back to Bell Labs in 1966, is to divide up the desired digital signal into multiple bits transmitted in parallel on multiple simultaneous subcarriers. OFDM has many current applications, among others various standards for Wi-Fi and digital TV such as DVB-T and 802.11a/g/n/ac/ah. To avoid interference between the subcarriers yet maximize the channel's capacity, each subcarrier is separated by a minimum frequency distance usually computed as the reciprocal of the useful symbol duration, making each subcarrier <i>orthogonal</i> to the others surrounding it and easily discriminated. MB-OFDM as used here divides the approved range into fourteen 528MHz subbands of 128 subcarriers each, 100 of which are used for data transmission and the remainder for zeroes, guard tones and pilot signals. It solves the multiple access problem by hopping between transmission subfrequencies in a defined pattern (<i>time-frequency coding</i>), meaning each user ideally is on a different one at any given time while also avoiding narrowband intrusion on any one particular frequency. In practice the spec doesn't use all of the subbands simultaneously, bundling them into four <i>bandgroups</i> of three (with a fifth group of two, and a sixth group overlapping two others) and selecting a group as required by local regulation or to compensate for existing sources of interference.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgP71M3ocrFS_kNKoW5fntjp3n4nG2NdhmgZf5zPNfg3MtpTht8cIL6aaAtFbStXBM7qYBI5HDNDONl1G6k_xQNiVg4aEPqdqWE7QVnMdhS9A9uLL5qFKc9WHGY_QcFshIFl3kwCUTVYJ8ad4U-qstECwPoi7ZFoF6g2jLCc_RefvooiMv_w2D2dqrULYQ/s2500/wusb-20030811-iw-1.jpg"><img alt="" data-original-height="2500" data-original-width="1794" height="320" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgP71M3ocrFS_kNKoW5fntjp3n4nG2NdhmgZf5zPNfg3MtpTht8cIL6aaAtFbStXBM7qYBI5HDNDONl1G6k_xQNiVg4aEPqdqWE7QVnMdhS9A9uLL5qFKc9WHGY_QcFshIFl3kwCUTVYJ8ad4U-qstECwPoi7ZFoF6g2jLCc_RefvooiMv_w2D2dqrULYQ/s320/wusb-20030811-iw-1.jpg"></a></p><p>
  
Both technologies are mutually incompatible, and both received substantial and opposing corporate backing largely along the lines of existing patents. The MB-OFDM camp came together as the <a href="https://www.multibandofdm.org/about.html">MultiBand OFDM Alliance</a> in June 2003, founded by Texas Instruments and crucially joined by Intel, while the DS-UWB camp was largely led by Motorola and subsequently Freescale, its inheritor, who had significant investment in CDMA. Although MB-OFDM demanded obviously greater technical complexity, it also presented the prospect of much faster data rates, and as a result the MBOA continued to accrete members despite Motorola's protests. Motorola attempted to develop a compromise lower-speed Common Signaling Mode ("UWB CSM") so DS-UWB and MB-OFDM devices could coexist, but the process descended into squabble, and Motorola pulled out of the WiMedia Alliance to establish the competing <a href="https://web.archive.org/web/20040410183724/http://www.uwbforum.org:80/Membership.html">UWB Forum</a> in 2004 exclusively focused on DS-UWB with CSM.
</p><p>
As the standards argument raged in the background, OEMs meanwhile started evaluating potential market applications. After all, just about any potential short-range interconnect could be built on it; proposals to replace or reimplement Bluetooth with UWB were considered, as well as transports for IPv4 networking and FireWire (IEEE 1394). The original wireless USB concept in particular came from Motorola's new spinoff Freescale, who was determined to win the war anyway by getting their chipset to retail first, but also from Intel, who through its heavy influence on the USB Implementers Forum (USB-IF) persuaded the organization to adopt WiMedia's version of MB-OFDM as their officially blessed USB solution for high-speed wireless devices. In February 2004 Intel announced the formation of the Wireless USB (W-USB) Promoter Group, composed of themselves, Agere (now part of Broadcom via the former LSI Logic), Hewlett-Packard, Microsoft, NEC, Philips and Samsung, with an aim for products within the next year. Because the W-USB name clashed with Freescale's initial branding, Intel and the USB-IF eventually settled on CW-USB ("Certified Wireless USB") and the MBOA was merged into the WiMedia Alliance in 2005. Now that the attempt to make an IEEE standard had clearly stalled for good, WiMedia submitted its own specification to Ecma instead, published as ECMA-368, and the 802.15.3a Task Group subsequently disbanded in January 2006.<!-- https://spectrum.ieee.org/no-strings-attached -->
</p><p>
Both Freescale W-USB (later changed to Cord-Free USB and then Cable-Free USB,<!-- https://web.archive.org/web/20061006143735/http://www.uwbforum.org/index.php?option=com_content&task=view&id=120&Itemid=2 --> both of which we'll call CF-USB for short) and Intel CW-USB conceptually replicate the host-centric nature of USB 2.0, hewing more or less to the same basic topology but obviously without wires. Both systems supported up to 127 devices and necessarily the over-the-air connection was encrypted, both with AES-128.<!-- https://www.eetimes.com/making-usb-without-wires-work-for-consumers/ --> There were of course no compliant devices yet, nor compliant computers, so both competing standards required a dongle on the PC side and offered wireless USB hubs to connect existing peripherals. The main user-facing difference between Cable-Free and Certified Wireless USB was that CF-USB was intentionally, and in this case ironically, much closer to the wired USB spec. In particular, although CF-USB connections could only go point-to-point — just like a single cord — all USB features and transfer types were supported, even isochronous transfers for real-time data. CF-USB also had the compatibility edge in that the other end would look just like a regular USB hub to the computer, so no software update was necessary. CW-USB, on the other hand, although its virtual bus was much more flexible and devices could be hosts to other devices, wasn't fully backwards-compatible with all USB devices and needed new drivers and operating system support.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj4A3Tk-WYmn6sgkDFSwwPMqbv5D8w2fQ4RcUPWpgEVGvRpsOXyvSL0KstokZFnXmXuG0b-el4qew0EyKVPI9OD88CO8UgunWv9aC5rLunBs63zeBgdYHGXyKIf-stC5xGn5ar7Az4AdpQnA4CHH39cILN0om7jrOd0s8SVgKBBlhSB_YzMZFkULg0j1nk/s2500/wusb-20060307-pcmag.jpg"><img alt="" data-original-height="2500" data-original-width="1888" height="320" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj4A3Tk-WYmn6sgkDFSwwPMqbv5D8w2fQ4RcUPWpgEVGvRpsOXyvSL0KstokZFnXmXuG0b-el4qew0EyKVPI9OD88CO8UgunWv9aC5rLunBs63zeBgdYHGXyKIf-stC5xGn5ar7Az4AdpQnA4CHH39cILN0om7jrOd0s8SVgKBBlhSB_YzMZFkULg0j1nk/s320/wusb-20060307-pcmag.jpg"></a></p><p>

CW-USB's new approach predictably yielded new bugs, slowing development. As a result, the simpler CF-USB devices did indeed progress faster, most notably Belkin's Cable-Free USB kit and Gefen's Wireless USB Extender which were demonstrated in 2006 at Winter CES and Macworld. These units used both Freescale's UWB radio and Canadian startup Icron's ExtremeUSB extender chipset, another UWB Forum member, presenting a reportedly perfect USB facsimile to the computer. The Belkin device as presented was a typical dongle-hub affair, but the Gefen set used smaller one-to-one transceivers between a computer and a target device, shown to attendees linking a Mac and a digital camera.
</p><p>
And that was it for CF-USB, because just a couple months later Freescale and parent Motorola unexpectedly pulled out of the UWB Forum in April, citing a desire to focus on their own CF-USB products. Neither of these CF-USB devices reached store shelves: Belkin was forced to retool around MB-OFDM after all, and Gefen completely abandoned their units in lieu of a new, <em>non-</em>UWB wireless USB system that I'll come back to later on. Freescale's team eventually suffered management departures and failed to release any future CF-USB hardware,<!-- https://www.edn.com/uwb-gets-black-eye-review-freescale-quietly-pulls-plug/ --> after which the UWB Forum itself imploded in 2007.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiwxErLiMvumvGpYkeVe1HXRmUPhKyVo8LkMx8pCEc2ardApjPqjPFOUZxf4tue9TznXfixvPBwSf4ZmO8PlTDLF7FcdpIiir-N1EmYepD9u4xH52gxXcgP72oi4xgDX51U-VFQWXt-fO4Y0UnZeSdhPSHuUsASjavg5e1kjbCeBQ6WvKGzbds7UV3dZjI/s2500/wusbad2008.jpg"><img alt="" data-original-height="2500" data-original-width="1844" height="320" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiwxErLiMvumvGpYkeVe1HXRmUPhKyVo8LkMx8pCEc2ardApjPqjPFOUZxf4tue9TznXfixvPBwSf4ZmO8PlTDLF7FcdpIiir-N1EmYepD9u4xH52gxXcgP72oi4xgDX51U-VFQWXt-fO4Y0UnZeSdhPSHuUsASjavg5e1kjbCeBQ6WvKGzbds7UV3dZjI/s320/wusbad2008.jpg"></a></p><p>

In the meantime the hype around CW-USB grew, as shown in this period advertisement. Intel, startup Alereon and Kodak made the first public demonstration of CW-USB at the Intel Developer's Forum in September 2006.</p><!-- https://www.cnet.com/culture/wireless-usb-poised-to-cut-the-cable/ --><p> Using a USB PC dongle made by Taiwanese OEM Gemtek, exhibitors were shown a PC and a digital camera associating with each other and the PC downloading images from the camera to its desktop, which Intel claimed could run at up to USB 2.0's full 480Mb/s at three metres (110Mb/sec up to 10). One heavily anticipated application was as a docking station you could just walk up to: if you had been previously associated, then boom, you were connected. The bandwidth, Intel promised, would be real and it would be spectacular.
</p><p>
A few months later, Belkin's reworked dongle-hub kit — initially still called "Cable-Free" until Freescale objected — finally emerged for retail sale in 2007. Unfortunately, the chipset switch eliminated Belkin's Mac compatibility and it only came with Windows drivers. Worse, Belkin's hub took it on the chin in <a href="https://www.smallnetbuilder.com/everything-else/other-reviews/belkin-cable-free-usb-slow-expensive-cutting-edge-technology/">various</a> <a href="https://www.engadget.com/2006-12-05-hands-on-with-belkins-cable-free-usb-hub.html">reviews</a>, citing an <em>eighty percent</em> reduction in throughput if the devices were just a foot away, and another 30% on top of that at four feet, with a maximum range of somewhere around six (or one big wall). This probably made it more secure, but definitely not more convenient, and far short of the claimed 10 <em>metre</em> maximum range. It doesn't look like Belkin sold very many.
</p><p>
Another vendor was D-Link, who produced both dongles and hubs along with a starter kit containing one of each. This NOS example, utterly unused in a sealed box, had an original MSRP of about $170 ($225 in 2025 dollars) but showed up on eBay for $12. I couldn't resist picking it up and a couple other cheap CW-USB products to play with, all of which carried the proud and official Certified Wireless USB logo. I made sure one of them was a docking station since that was intended to be the killer app.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjn1SEvfrcQ4NC8XW-31nyZswwNljdlKlA7LC-x_58xoX9A7_dyDvQa9f-YuHL0VgZxEMuz5SB5Z5gM2kS_LXJ6XnwdHCHI7tlojzxcPbqdgiZZND4leSReOo_zX56ja3lxH_1v2WP99JlmIzneS4NjvMo7ajkLImG_gC68Fx2wFksKjsmicpxRVlOI5Xc/s4080/PXL_20250418_234354422.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjn1SEvfrcQ4NC8XW-31nyZswwNljdlKlA7LC-x_58xoX9A7_dyDvQa9f-YuHL0VgZxEMuz5SB5Z5gM2kS_LXJ6XnwdHCHI7tlojzxcPbqdgiZZND4leSReOo_zX56ja3lxH_1v2WP99JlmIzneS4NjvMo7ajkLImG_gC68Fx2wFksKjsmicpxRVlOI5Xc/s320/PXL_20250418_234354422.jpg" width="320"></a></p>

<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjFMsUBRHFEkB4L_ilh42imPKc7PR2fEsQmrDtZH4cmnDnCxm_xnGrIRtXu5PG052eev6a9q8ECPThQy3qZHYChCpG3y2PZReljo826E-UXva2b9tTsGKkR37ArvCOcLF2e2pNR1e_p7WdVyzIpmq5VB_oXYpywz9ZL-v9xg4umKsIfRDJoXY0OAKZ1nhw/s4080/PXL_20250418_234457216.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjFMsUBRHFEkB4L_ilh42imPKc7PR2fEsQmrDtZH4cmnDnCxm_xnGrIRtXu5PG052eev6a9q8ECPThQy3qZHYChCpG3y2PZReljo826E-UXva2b9tTsGKkR37ArvCOcLF2e2pNR1e_p7WdVyzIpmq5VB_oXYpywz9ZL-v9xg4umKsIfRDJoXY0OAKZ1nhw/s320/PXL_20250418_234457216.jpg" width="320"></a></p><p>

In CW-USB parlance for "legacy" wired devices, the computer side is called an HWA (Host Wireless Adapter) and the device side, which could be a hub or an actual device, is called a DWA (Device Wireless Adapter), both of which could be built-in to compliant hardware. What's notable about these packages is that <em>all</em> of them come with an HWA, even though only one of them actually has a DWA <em>hub</em>: the D-Link starter kit (model DUB-9240), consisting of a DUB-2240 4-port DWA USB 2.0 hub and a DUB-1210 HWA. The TRULink #29596 Wireless USB to VGA and Audio Kit has two downstream devices with on-board DWAs, one for a VGA monitor (up to 1600x1200 or 1680x1050) and one for analogue audio, plus its own HWA; the Atlona AT-PCLink Wireless USB DisplayDock offers DVI video, 3.5mm (1/8") audio and two USB ports, officially for your mouse and keyboard. The dock base, interestingly enough, is <em>not</em> a CW-USB device itself: you have to plug a DWA into it (included) which can go in one of two ports depending on physical configuration. In the package Atlona also includes <em>another</em> HWA.
</p><p>
However, since they're all allegedly CW-USB 1.0 compliant, you should be able to use any HWA you want. (Theoretically. That's called "foreshadowing.") The D-Link and TRULink HWAs only support Windows XP SP3 and Vista — there was a short-lived Linux implementation that Intel themselves wrote, but it was very incomplete and eventually removed — and the Atlona HWA does too, but it also claims support for Windows 7 and even Mac OS X (Leopard and Snow Leopard). So our test system will be ...

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiA95Mh9uM3gXm9SYGmTVK_l_YkANgu94dz2uJojkw73FhQwgpXbB9_tRSZysq_MlZOtIzvVblF7sTESf-bFcIQ46YJqfeqiS_duvxxvNkbNsIpiwfROoxJr798h3KFAuhST0rNx5CGx8BMpCI9nsKPnFgUpH2yZgAOV6IA_YPeBIooQzGgIfIbsYsm46Q/s4080/PXL_20250503_184252618.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiA95Mh9uM3gXm9SYGmTVK_l_YkANgu94dz2uJojkw73FhQwgpXbB9_tRSZysq_MlZOtIzvVblF7sTESf-bFcIQ46YJqfeqiS_duvxxvNkbNsIpiwfROoxJr798h3KFAuhST0rNx5CGx8BMpCI9nsKPnFgUpH2yZgAOV6IA_YPeBIooQzGgIfIbsYsm46Q/s320/PXL_20250503_184252618.jpg" width="320"></a></p><p>

... my late sister-in-law's black MacBook, the most powerful spec of the A1181 polycarbonate Intel models, a 2.4GHz Penryn Core 2 Duo T8300 running Snow Leopard 10.6.8. We'll use it to run the native Mac drivers as well as the Windows drivers. Unfortunately the optical drive in this laptop is shot and I haven't gotten around to replacing it, and this is one of the models where Boot Camp will not start the installer from an external drive, so we'll be running 64-bit Windows Vista Business — just because it's what I have around, no other particular reason — under VMware Fusion 4. This will limit our testing options a little bit but the native support will still be a good test of performance. (I'll have a note about its PowerPC support a little later, but you can completely forget about it on modern Apple silicon as it relies on forbidden unsigned not-notarized bad-for-ya don't-make-Tim-Cook-cry kernel extensions that will certainly blow up your computer and cause it to sing <a href="https://www.youtube.com/watch?v=zvfD5rnkTws">Virus Alert</a> by Weird Al. Get out your Intel if you want to try this.)
</p><p>
That covers the HWA and the HWA-DWA link, but being "USB" (after a fashion) you also need a driver for the device it's connecting to. Fortunately the TRULink and Atlona video systems are both DisplayLink-based, supporting screen mirroring and spanning, for which (Intel) Mac drivers also exist.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjMUeu6ikPMa7BAcLbPlaY3jLzromv8_gjf4ed-jn7K6thn4LMr4FJgHNjNz-9d3yvaHRLeU_-K00KzxZoHskRTR2-ZZVt7-QOrfF3lGCSbYwOop-oLpm9v2ZgWy_Ma8lNTRdt3CR5KA_ru5EEXQm9ScE4rTu23znUFzGAr4edkrxkSMVvC6rN0ZFJUSn4/s4080/PXL_20250418_234915684.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjMUeu6ikPMa7BAcLbPlaY3jLzromv8_gjf4ed-jn7K6thn4LMr4FJgHNjNz-9d3yvaHRLeU_-K00KzxZoHskRTR2-ZZVt7-QOrfF3lGCSbYwOop-oLpm9v2ZgWy_Ma8lNTRdt3CR5KA_ru5EEXQm9ScE4rTu23znUFzGAr4edkrxkSMVvC6rN0ZFJUSn4/s320/PXL_20250418_234915684.jpg" width="320"></a></p><p>

In the D-Link box is the HWA-dongle, the DWA-hub and a power adapter for the DWA (5V, 3A). All three HWAs here are bus-powered.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjOQGGuPS-HDdjfMQhBrd685qrfH9QfJXi9gMChAZnJbLgmHyhzPbTAwR9MT__1oCoul97n3dOo052my7AzsSQaR_GHd7lC4i44RA4Qi7-mBBbZMbR2YVKzuxB6eIBNxgYC8hml-8PUjaonON5kftn-bIJP7zZjMCtK91Uk2WoukZkegplc8OMTvyv2WIA/s4080/PXL_20250418_235006574.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjOQGGuPS-HDdjfMQhBrd685qrfH9QfJXi9gMChAZnJbLgmHyhzPbTAwR9MT__1oCoul97n3dOo052my7AzsSQaR_GHd7lC4i44RA4Qi7-mBBbZMbR2YVKzuxB6eIBNxgYC8hml-8PUjaonON5kftn-bIJP7zZjMCtK91Uk2WoukZkegplc8OMTvyv2WIA/s320/PXL_20250418_235006574.jpg" width="320"></a></p><p>

Interestingly, the D-Link DWA-hub has a sticker on the back warning you about insecure wireless access. This is commendable, but CW-USB does not use WEP, WPA or WPA2. (We'll get to something that <em>does</em> later on.)

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8iqs0Jbwm2Qf9LuYNKW6Fum5xwSUKlP8bttdlUBSeb7C6B5Lx7_viftZKchcYXCmXsqrxrMxfUAGMLIQlQr7bhxh-Ss3-rQ6rQKbL8pbBK64EdQM3iMZub3l35hI7JkbV4Og4wdSGgxCG3K-U72cr1JQEM9A0J3vzyZJyZFhH8K7t9YfISuuFeuN-Emk/s4080/PXL_20250419_001416938.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8iqs0Jbwm2Qf9LuYNKW6Fum5xwSUKlP8bttdlUBSeb7C6B5Lx7_viftZKchcYXCmXsqrxrMxfUAGMLIQlQr7bhxh-Ss3-rQ6rQKbL8pbBK64EdQM3iMZub3l35hI7JkbV4Og4wdSGgxCG3K-U72cr1JQEM9A0J3vzyZJyZFhH8K7t9YfISuuFeuN-Emk/s320/PXL_20250419_001416938.jpg" width="320"></a></p><p>

As CW-USB is effectively a network, there are MACs and PHYs, and so the HWA and any DWAs have MAC addresses.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAusbzw9dDjQk-bqg1l6caFWuMy0xQHgKBstZmAd7acT_lr_J1I04JHUPCLFzmuqOEFlDUkQlyxWZYMZIBnA9l-HakSuH991yCtspAWrwkUOhyphenhyphen7DxEnyipZHq77AhOZ-Xi0ztv96hNo0s1JwILA8Fw5kOn__ZQZ5Hf_OZtydwqpgyUshkGoCOYceWBMMI/s4080/PXL_20250419_001514595~3.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAusbzw9dDjQk-bqg1l6caFWuMy0xQHgKBstZmAd7acT_lr_J1I04JHUPCLFzmuqOEFlDUkQlyxWZYMZIBnA9l-HakSuH991yCtspAWrwkUOhyphenhyphen7DxEnyipZHq77AhOZ-Xi0ztv96hNo0s1JwILA8Fw5kOn__ZQZ5Hf_OZtydwqpgyUshkGoCOYceWBMMI/s320/PXL_20250419_001514595~3.jpg" width="320"></a></p><p>

You'll also note that D-Link's DWA-hub has a PIN. This is part of the CW-USB <i>association</i> process, which is necessary because obviously you don't want malicious USB devices trying to talk to you, and you don't want your next-door neighbour possibly being able to use your printer or read tax returns on your thumb drive. (I didn't know that was deductable!) The process of association generates a new AES-128 session key and records both 128-bit host and device IDs for future recognition. This shared 384-bit association context remains in effect until explicitly disabled: the associated device now won't interact with HWAs it doesn't know, other than to potentially associate with them also, and the HWA will only talk to devices with which it has been associated. It is possible, and absolutely supported, for a device to be associated with multiple HWAs.
</p><p>
Association in CW-USB can be done one of three ways, either by factory pre-association (the TRULink and Atlona devices come pre-associated with their HWAs, for example), numeric association where the device provides an on-screen code (like Bluetooth pairing) or the PIN on the underside of the device can be manually entered (an alpha-numeric code like <tt>D0NTH4CKM3</tt>), or, uniquely, by cable association.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEizgxOjaAo8Fhix9HiKOWcry_28Oz2fNJwcvb05Hl4bg8K1PWH-93hnM8bpuPqDW8s-XULkiPvYFqQ2PMTX_cFxIRWvFqkN0adC165mP1CX-xb0_XSEopi4DBAfDXjuWsHpORYkLG6ZUxtLgmF6FgWH0CdfZoQn5tkaXl1HSHaQUvnZUpQyo6kV1VFXquM/s4080/PXL_20250419_001623448.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEizgxOjaAo8Fhix9HiKOWcry_28Oz2fNJwcvb05Hl4bg8K1PWH-93hnM8bpuPqDW8s-XULkiPvYFqQ2PMTX_cFxIRWvFqkN0adC165mP1CX-xb0_XSEopi4DBAfDXjuWsHpORYkLG6ZUxtLgmF6FgWH0CdfZoQn5tkaXl1HSHaQUvnZUpQyo6kV1VFXquM/s320/PXL_20250419_001623448.jpg" width="320"></a></p><p>

Cable association is where you <em>physically</em> connect the CW-USB device to your PC or Mac via USB cable, let it be recognized by the HWA's driver, and then disconnect it. It then continues to act connected, just via the HWA. The D-Link DWA-hub is cable-associated as part of the installation process, or can be associated by PIN; it is the only one of these three that is not pre-associated. All devices support pre-association and some sort of numeric association, but a physical USB port is naturally required for cable association. It is nevertheless the most secure of the three methods, first because you have to have physical custody of both the device and the computer, second because it's a new and unique key, and third because key creation and distribution occurs entirely via the cable and never over the air. Unfortunately it's not possible to blacklist the other association methods, so you'd better not let your neighbour get your PIN. (You pay <em>how much</em> in mortgage interest??) Some devices like the TRUlinks mercifully do support changing it, but that ability didn't seem universal in the devices I looked at.
</p><p>
In this case, all three devices support cable-association. The D-Link hub and the TRULink devices do so via their USB ports, but the Atlona dock does it by plugging the DWA into the computer instead of the docking base itself.
</p><p>
The reverse process is also obviously possible to de-associate a device, and you can outright block devices as well, though this may require some fiddling if they were pre-associated. Similarly, most devices, including this one, have a reset button which will clear the association context(s) stored in them, removing any undesired linkages.
</p><p>
Let's get the D-Link kit installed in the Vista VM.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgf673QniAXUslSE4PO0GMRmWURpDwRAu3CgQxkM5adDdiMqipxCaxzKe5lAxuf_Ai43qVyWpccZRaeq6qP4qJVQssSNeY5KJd56BrzmyEIfff7-q2BDrwNxpsLPNKMsogMznpL5tOqULZ5VNUE6yuNx0TAAXUYF7sjRrokJOMrh9F3qgd58xdpL4WSgY8/s1280/dub9240-0.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgf673QniAXUslSE4PO0GMRmWURpDwRAu3CgQxkM5adDdiMqipxCaxzKe5lAxuf_Ai43qVyWpccZRaeq6qP4qJVQssSNeY5KJd56BrzmyEIfff7-q2BDrwNxpsLPNKMsogMznpL5tOqULZ5VNUE6yuNx0TAAXUYF7sjRrokJOMrh9F3qgd58xdpL4WSgY8/s320/dub9240-0.png" width="320"></a></p><p>

With the CD inserted, the D-Link splash screen comes up.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEigFFv6L5bcfJiQShgJShsZWEgW8GVzhusZIVMX39ehrLdOTjvP3sJtMO0f7Jepj_agvcCJ097cIk8DRGoo8Inyax9gUujl1pvGkwfqGOmDd7osu3pYPoA1BPdsKrrTq2c2l5azRcI_xOK2dm6I4LOLzKxa8qjykPsBMcMIbbXXjS1i5_AsBBjCTWp40U8/s1280/dub9240-1-wiquest.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEigFFv6L5bcfJiQShgJShsZWEgW8GVzhusZIVMX39ehrLdOTjvP3sJtMO0f7Jepj_agvcCJ097cIk8DRGoo8Inyax9gUujl1pvGkwfqGOmDd7osu3pYPoA1BPdsKrrTq2c2l5azRcI_xOK2dm6I4LOLzKxa8qjykPsBMcMIbbXXjS1i5_AsBBjCTWp40U8/s320/dub9240-1-wiquest.png" width="320"></a></p><p>

The HWA appears to have been made by WiQuest. They were possibly the biggest of the WiMedia startups, booting up in Texas in 2003, yet despite their chipsets having an 85% share of the wireless USB market flamed out in 2008 — a pretty damning summation of how <em>not</em> big the wireless USB market ultimately got. A few pieces of WiQuest and their IP are now part of modern Staccato Communications.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgkFQFsCt-5bgDezeJDrOJ-zhI7-CJX9pyPzsX9tkCTAEXyOK7rb5_X7qbqGybHJy8I5sFa3mGiZ8ktoW601P7pErbtZI1JRNgY_TGZCVuCSWmx24WUYBdb80Jdij0w-PC8aPsjSDmbTQthOF4B94sfIjwAzEbhL0s1u6pJJyMVgl7eimP6G6bNZGnEZVM/s1280/dub9240-1.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgkFQFsCt-5bgDezeJDrOJ-zhI7-CJX9pyPzsX9tkCTAEXyOK7rb5_X7qbqGybHJy8I5sFa3mGiZ8ktoW601P7pErbtZI1JRNgY_TGZCVuCSWmx24WUYBdb80Jdij0w-PC8aPsjSDmbTQthOF4B94sfIjwAzEbhL0s1u6pJJyMVgl7eimP6G6bNZGnEZVM/s320/dub9240-1.png" width="320"></a></p><p>

The installer is very clear that you are <em>not</em> to plug in either the dongle or the hub until installation is complete and the hub has been cable-associated.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEisCjDehthLFdJg3wSLU9TyTC_fEsn24eBqQsO4sPin_dea0PZjflvAgTZiKdzDnJqcPYpOnGT7JxYOEi_SfIQZXBkXLYg5YLpRmtOAEP1zK4WD6r77ojM57KyCyp1iRzkQQDlTfofPEgmhyphenhyphenbVBWAxAmanNIE5U6_GFPohM1646q-xdVkYo5982_Ri3btU/s1280/dub9240-2.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEisCjDehthLFdJg3wSLU9TyTC_fEsn24eBqQsO4sPin_dea0PZjflvAgTZiKdzDnJqcPYpOnGT7JxYOEi_SfIQZXBkXLYg5YLpRmtOAEP1zK4WD6r77ojM57KyCyp1iRzkQQDlTfofPEgmhyphenhyphenbVBWAxAmanNIE5U6_GFPohM1646q-xdVkYo5982_Ri3btU/s320/dub9240-2.png" width="320"></a></p><p>

After the files are written, cable association begins. Here we plug the hub (DWA)'s association port directly into the MacBook with a regular USB cable. VMware will pass this through to the Windows guest.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhWQU67qZRzR3pmp-ZiJUyB9tDwdKJH9XXC6kHdQpzL-hy8YsRigOQ-eR0KWfHguO0wWkfIMPDExu7qm7RoQ1HR5A7ENXIp1z2V4b4yfmwjVeZH5H-7JTrbqry9xvwiNW1oPjnwMrMluiHN_LIx3EVqrX8pvWtDqW4tGpqKbpq6_vpR3eYp0o49r1Gbvus/s1280/dub9240-3.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhWQU67qZRzR3pmp-ZiJUyB9tDwdKJH9XXC6kHdQpzL-hy8YsRigOQ-eR0KWfHguO0wWkfIMPDExu7qm7RoQ1HR5A7ENXIp1z2V4b4yfmwjVeZH5H-7JTrbqry9xvwiNW1oPjnwMrMluiHN_LIx3EVqrX8pvWtDqW4tGpqKbpq6_vpR3eYp0o49r1Gbvus/s320/dub9240-3.png" width="320"></a></p><p>

Windows Vista recognizes the hub ...

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjIfjg-zcN8-dBNx1mslEOJoOvbNfWzUxwunCup_bYuEdObLB7HmHNSzr6_8yJ7Oczc4PT117Iw5OO0HeX7X9G9qV3_OXlGt4GOWMvxrIMo0CAF_nU0IWmiCUM4mvTaGhosFiSzaOLMCtcwDW1gb0QHonUdoKWv1kS4lkCCEl8H4p-sohAueJGJpr7yXFc/s1280/dub9240-4.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjIfjg-zcN8-dBNx1mslEOJoOvbNfWzUxwunCup_bYuEdObLB7HmHNSzr6_8yJ7Oczc4PT117Iw5OO0HeX7X9G9qV3_OXlGt4GOWMvxrIMo0CAF_nU0IWmiCUM4mvTaGhosFiSzaOLMCtcwDW1gb0QHonUdoKWv1kS4lkCCEl8H4p-sohAueJGJpr7yXFc/s320/dub9240-4.png" width="320"></a></p><p>

... and cable association is complete. 

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjqI15lX4NTBJ52rpdq1sOsuk2SucLrU4F__OpFkmzo6vjEozi02icPNtXUbGaZe1sgt7izP1aphVn3aLajiNTWsaNnSdV_ys_VAz8RsaKYgKPrab8hrz-xDYOtUoefuvXotA2Y23JBecvF4BEIQPngI_0Di8jI7qNVsTgg1yBcURgCzmpPaCmuw9X2gUE/s1280/dub9240-5.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjqI15lX4NTBJ52rpdq1sOsuk2SucLrU4F__OpFkmzo6vjEozi02icPNtXUbGaZe1sgt7izP1aphVn3aLajiNTWsaNnSdV_ys_VAz8RsaKYgKPrab8hrz-xDYOtUoefuvXotA2Y23JBecvF4BEIQPngI_0Di8jI7qNVsTgg1yBcURgCzmpPaCmuw9X2gUE/s320/dub9240-5.png" width="320"></a></p><p>

The Wireless USB Control Center is a fairly simplistic application showing all associated devices and their statuses. As we don't have the dongle-HWA installed yet, the hub-DWA is listed as associated but not connected.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJ2rBAQiEV0jkYnFhewPwGCYPg_3ORfYVM_R-EIMg-UQ3OBXrY0nCjCTmcFMnA7QJtnlQ8vysulmd3ggUphR1z-DG2DixsCre_C2_R41OaH3b5OkHpvGyM3ywtX_9F6eHrmNA1ZqH8nysgKmPBrO70Ayg1CmalhJli2D_ma6GKrIamDNnSyhAnhmF49-8/s4080/PXL_20250502_225754631.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJ2rBAQiEV0jkYnFhewPwGCYPg_3ORfYVM_R-EIMg-UQ3OBXrY0nCjCTmcFMnA7QJtnlQ8vysulmd3ggUphR1z-DG2DixsCre_C2_R41OaH3b5OkHpvGyM3ywtX_9F6eHrmNA1ZqH8nysgKmPBrO70Ayg1CmalhJli2D_ma6GKrIamDNnSyhAnhmF49-8/s320/PXL_20250502_225754631.jpg" width="320"></a></p><p>

The dongles get better reception if they are oriented vertically, so a stiff bendy USB cable is included in the package which you can plug the dongle into. We connect that, which is also passed through to the Vista guest, and its bright orange light illuminates ...

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiKYTapnBaJT0vxdUKh5-xtrF7AJdpaojXPF3-MW6-xm_5j73J5hYTa9ZZf0o9VeLrwrwYYRje3FP7gG8aFI5oUsxn43YA01SgrOXgHXffWax1Q_7nfI1i6iwkkRLvABE5jw-9SN5GToEO-DHfEEJuwdM2AhZnTU-w6zdd7xBqOpCBiL887FEra7ytlfcw/s1280/dub9240-6.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiKYTapnBaJT0vxdUKh5-xtrF7AJdpaojXPF3-MW6-xm_5j73J5hYTa9ZZf0o9VeLrwrwYYRje3FP7gG8aFI5oUsxn43YA01SgrOXgHXffWax1Q_7nfI1i6iwkkRLvABE5jw-9SN5GToEO-DHfEEJuwdM2AhZnTU-w6zdd7xBqOpCBiL887FEra7ytlfcw/s320/dub9240-6.png" width="320"></a></p><p>

... Vista sets up the new device driver after approximately 83,481 UAC prompts ...

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhIycSSUAYYAdFTKGNJYQLSfKfAoHRLzydGNltc2hpqCHsODVDPaBr37E-Yb3y38E4_ctIw_n14tMGZc385CrOGu4vdY4TuZV79zetE_l1dcwjr2EQ2x2ggiFbcKmaIjqyqNG292IXownMeXNtFJwZpk2eppi5NoKn_rYeyY1nEMWKIm_y-Tk17aYIO-f8/s1280/dub9240-7.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhIycSSUAYYAdFTKGNJYQLSfKfAoHRLzydGNltc2hpqCHsODVDPaBr37E-Yb3y38E4_ctIw_n14tMGZc385CrOGu4vdY4TuZV79zetE_l1dcwjr2EQ2x2ggiFbcKmaIjqyqNG292IXownMeXNtFJwZpk2eppi5NoKn_rYeyY1nEMWKIm_y-Tk17aYIO-f8/s320/dub9240-7.png" width="320"></a></p><p>

... and the hub is connected.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0o5ZYjuK2o4FWVwpqfWSEMYF8yG_y9hKhDFkmF_eSqEhPAn1lTc9mdA13Flmnr75WSESNVLNrJJj6UKZ2e3SD_zUsq7uW2FWM3UA2ZCuB2pE1XtwOjKX2EabBqxKVpjp7YiULNMY5jUKmd2BaQD7sJqmQErSVwgdj2WuKGOX55IYTbB4ohwVKBvugxkU/s1280/dub9240-8.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0o5ZYjuK2o4FWVwpqfWSEMYF8yG_y9hKhDFkmF_eSqEhPAn1lTc9mdA13Flmnr75WSESNVLNrJJj6UKZ2e3SD_zUsq7uW2FWM3UA2ZCuB2pE1XtwOjKX2EabBqxKVpjp7YiULNMY5jUKmd2BaQD7sJqmQErSVwgdj2WuKGOX55IYTbB4ohwVKBvugxkU/s320/dub9240-8.png" width="320"></a></p><p>

There isn't much else you can do here except deassociate the device, or, if a new device appears in the list, attempt to associate with it.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhXR2MdkHbwYU4ujrCzfznxrcSAZ3P2ObbYJHi454LDXMbh9MY2-9vn1Ctxs0o4-E4BsHmrJsijt0PMj1soTAUYoVnZRV8GhX5NTaHbKrzGV7H8LY2tBHJIjJ3hfuToIUdqPZMxx2fxuJb2-CBMTlPow5qeHk4mqpsyKSJYaGC5xPK8MKLVbTkHjoIalrs/s1280/dub9240-9.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhXR2MdkHbwYU4ujrCzfznxrcSAZ3P2ObbYJHi454LDXMbh9MY2-9vn1Ctxs0o4-E4BsHmrJsijt0PMj1soTAUYoVnZRV8GhX5NTaHbKrzGV7H8LY2tBHJIjJ3hfuToIUdqPZMxx2fxuJb2-CBMTlPow5qeHk4mqpsyKSJYaGC5xPK8MKLVbTkHjoIalrs/s320/dub9240-9.png" width="320"></a></p><p>

Likewise, the Advanced tab doesn't let you do much more other than change the channels in use. Here, on a United States system, all of the ones we'll explore in this article defaulted to channel 13.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiDjuQ0nufPJbeqbTAJiVzhbux_OYK2QwCJlACZ2-SOoXrfB14tlBdwY0bci2enjfBRWc6tuQUMXSkV368uXKleF_CGu4sTT_4Qc8yD0I9h3HLyUzOcI-7dojs-nr_R8hMT9Ui5QWvYgzrv1iMK0a43-LKoySg_oAN7bfJqGdVtVl5ar4XpdGu62rKEnhg/s4080/PXL_20250502_230110467.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiDjuQ0nufPJbeqbTAJiVzhbux_OYK2QwCJlACZ2-SOoXrfB14tlBdwY0bci2enjfBRWc6tuQUMXSkV368uXKleF_CGu4sTT_4Qc8yD0I9h3HLyUzOcI-7dojs-nr_R8hMT9Ui5QWvYgzrv1iMK0a43-LKoySg_oAN7bfJqGdVtVl5ar4XpdGu62rKEnhg/s320/PXL_20250502_230110467.jpg" width="320"></a></p><p>

As a first test, we'll just plug in a regular old USB thumb drive, the exact same drive we were using to copy things into Vista, so we know it works directly connected. Active ports on the hub glow orange. I expected to see Windows configure the device, but instead we got a very surprising error:

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAIzOyPu1_xQ3l9jyZLa7utmfyHs9c-rvI9w7tbMT_KS4oXYUregqT70-Mgn6Ht6cBtJL1dgnbOj7NUpomLWt43RKbxD50PsIJUMjKmckk4IUvoOI1H0ZxrE0qRFfERclL-wQ4w9nP8hnL40zK3oLJ4xdpUmD5Tavob7IBy8jUUODzCu98cT4Db32v9n4/s1280/dub9240-9-fail.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAIzOyPu1_xQ3l9jyZLa7utmfyHs9c-rvI9w7tbMT_KS4oXYUregqT70-Mgn6Ht6cBtJL1dgnbOj7NUpomLWt43RKbxD50PsIJUMjKmckk4IUvoOI1H0ZxrE0qRFfERclL-wQ4w9nP8hnL40zK3oLJ4xdpUmD5Tavob7IBy8jUUODzCu98cT4Db32v9n4/s320/dub9240-9-fail.png" width="320"></a></p><p>

Windows couldn't even determine what the device was. I'm prepared to admit this might be the VM. In fact, my first attempt at this was with Virtual PC 7 running the included Windows XP SP3 on the Quad G5, and while Windows XP under VPC7 would associate the hub and see the HWA, the HWA kept stuttering and dropping off the bus, even with the G5's performance cranked up to cheesegrater tornado. 
</p><p>
But this wasn't true for all the devices I tried.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLrwiUcrmsajRJHhXMKj90TE4ho520-AiIIl4w31qW4nYxL0knj8irPKEVjPJHbCskzcrTxkeWPtOS9gqWIVKqApgmK_Gb2WZc8IhhPhMUMgYIhZxYBU51U6SR6lAMDT4GmkdqpnxnatShHwqp02R0pDWNBelLL_6Pbtvq11n-mRN2HHGfE27dD0NrLhg/s1280/dub9240-9-fail2.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLrwiUcrmsajRJHhXMKj90TE4ho520-AiIIl4w31qW4nYxL0knj8irPKEVjPJHbCskzcrTxkeWPtOS9gqWIVKqApgmK_Gb2WZc8IhhPhMUMgYIhZxYBU51U6SR6lAMDT4GmkdqpnxnatShHwqp02R0pDWNBelLL_6Pbtvq11n-mRN2HHGfE27dD0NrLhg/s320/dub9240-9-fail2.png" width="320"></a></p><p>

For example, I plugged in a iConcepts PDA adapter, which is better understood as a Prolific PL-2303 RS232-to-USB converter, and it was immediately recognized. 

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjHtV-U3x1ykWou39FVtehziNplEF0lTpOH41hY9FymTeyJbAScCalj7cH63hLuLwGjXSypVkoUSNFLHkLNt9Gt4NvjuuGdZTz5Gh6QnyltyMyPj-XLYZDPFyPL9o2Y_3HsjnOM69gkZw_tf88X5s-6-9BnoGZGC5FTIW-rWsFh4V262PB4ks2FJ78f_sc/s1280/Screen%20shot%202025-05-02%20at%204.21.58%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjHtV-U3x1ykWou39FVtehziNplEF0lTpOH41hY9FymTeyJbAScCalj7cH63hLuLwGjXSypVkoUSNFLHkLNt9Gt4NvjuuGdZTz5Gh6QnyltyMyPj-XLYZDPFyPL9o2Y_3HsjnOM69gkZw_tf88X5s-6-9BnoGZGC5FTIW-rWsFh4V262PB4ks2FJ78f_sc/s320/Screen%20shot%202025-05-02%20at%204.21.58%20PM.png" width="320"></a></p><p>

However, note well: the device is completely unseen by Mac OS and thus by the VMware Fusion host, even though its guest <em>can</em> see it. Although I found it initially surprising that VMware didn't ask me about the device when I connected it, upon reflection it's perfectly logical that wireless USB devices wouldn't be seen at all by the Mac because we've effectively constructed a new and separate USB bus completely outside of it. For all the devices I connected to the hub-DWA, VMware was absolutely unaware of all of them, including the hub itself; the only device the MacBook and therefore VMware saw was the HWA. This is probably good from a performance view though possibly bad from a device control view.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEicGld1LFBizOKoJ0-fBfQ6lGqeiacwwP_48K7ufMGcay1gl3G2Nin5OFumYakBdnyYAkF6VVGjwvYtpfmitHc__RxZWRRnMehjE76fKMHDA_6CHzzf6HNVv7-rh7t1aU2gRjFbEokWsWjWUy0EncEMonC-ygWkQ6ALMTEY71h4B6Ty7u2GMtz0RQi07oY/s1280/dub9240-9-fail2suc.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEicGld1LFBizOKoJ0-fBfQ6lGqeiacwwP_48K7ufMGcay1gl3G2Nin5OFumYakBdnyYAkF6VVGjwvYtpfmitHc__RxZWRRnMehjE76fKMHDA_6CHzzf6HNVv7-rh7t1aU2gRjFbEokWsWjWUy0EncEMonC-ygWkQ6ALMTEY71h4B6Ty7u2GMtz0RQi07oY/s320/dub9240-9-fail2suc.png" width="320"></a></p><p>

After scaring up a signed Vista x86_64 driver for Prolific devices, Windows now sees and installs the device, connected to the wireless hub.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg2ZUtaUc3waQecrCY0guTkqqLoeNBqsk873UHz3ExOLRQu7UvlFL7f1tZdIpK8N9d8NN7OCott1107UbHft-tybBFIdkdPfuO4xgSbbL9DH8an7fzagCHUau1cMvUwCF7GsV7l7wMdlD3dhEwJOtZ01vozFPS9yQ-FBaY9uCUtGlW1JuXhU254G3kQHWQ/s1280/dub9240-9-fail2suc2.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg2ZUtaUc3waQecrCY0guTkqqLoeNBqsk873UHz3ExOLRQu7UvlFL7f1tZdIpK8N9d8NN7OCott1107UbHft-tybBFIdkdPfuO4xgSbbL9DH8an7fzagCHUau1cMvUwCF7GsV7l7wMdlD3dhEwJOtZ01vozFPS9yQ-FBaY9uCUtGlW1JuXhU254G3kQHWQ/s320/dub9240-9-fail2suc2.png" width="320"></a></p><p>

And as proof of operation, Prolific's chip tester correctly identifies the chipset on the new </p><tt>COM3:</tt><p> we just installed (the others are provided by VMware).

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiAz2IBR8LCHgoU9Z5Cs0cZUvnJtjRjElqtOy7AxgxFiUEMKcsWNR0Kmka76rPbDWlxJxBm_AsZiqI5agQ-JT7wDxFTQ0Mo3_dVjqsqOgEjHbJ6oOxcj92FTWfDIVidFPVA85z0mJDsttAD23hKO4xuxtK9Np4Cr9tgMob9Tv9InME-cRfZvKJ8igyhyrs/s4080/PXL_20250502_235853603.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiAz2IBR8LCHgoU9Z5Cs0cZUvnJtjRjElqtOy7AxgxFiUEMKcsWNR0Kmka76rPbDWlxJxBm_AsZiqI5agQ-JT7wDxFTQ0Mo3_dVjqsqOgEjHbJ6oOxcj92FTWfDIVidFPVA85z0mJDsttAD23hKO4xuxtK9Np4Cr9tgMob9Tv9InME-cRfZvKJ8igyhyrs/s320/PXL_20250502_235853603.jpg" width="320"></a></p><p>

That's good news, because the original task that caused us to embark on all this was getting the Palm smartwatch both networked and mobile. USB Palms <a href="http://oldvcr.blogspot.com/2023/09/the-fossil-wrist-pda-becomes-tiny.html">emulate a serial port</a> but only appear on the USB bus when there is activity, such as kicking off a HotSync. Notice the only thing connected to the MacBook is the HWA (all ports are on the left side of this model), but with the watch connected to the hub-DWA the Vista VM sees the new USB device appear.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEip71P8lr1Lq2sXCAwzTB9-AjGgP88pTQNzFGnHTGnF7ANn1c4BYSChJSoQqhqpdOCmsjlzjisDFAWMg8C3Qc_E_gRMqrA3LV7nVUe4N6MovRUfJu71fdCSXz87VPUqAhj1PuJl3sBHzBsNzy8zB7xUOohFOo1kuHcT02TvCL51mCQhuMDIh0E-2pSkv1w/s1280/dub9240-9-fail2suc3.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEip71P8lr1Lq2sXCAwzTB9-AjGgP88pTQNzFGnHTGnF7ANn1c4BYSChJSoQqhqpdOCmsjlzjisDFAWMg8C3Qc_E_gRMqrA3LV7nVUe4N6MovRUfJu71fdCSXz87VPUqAhj1PuJl3sBHzBsNzy8zB7xUOohFOo1kuHcT02TvCL51mCQhuMDIh0E-2pSkv1w/s320/dub9240-9-fail2suc3.png" width="320"></a></p><p>

For the driver we'll pull out Fossil's Wrist PDA CD. Unfortunately, this is circa 2001, so some of you may already have guessed what's going to happen.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiZgJ8Qpcvaj8C07S5Y3-n489PauqAL2bIJZum983JiH8dEInZPkVVstyEZoLBLRfIR8NyoRP98OneJ69RxI2Y8q4gOg9Q68xV4qhiXWe09XXxwa-iUAhCap4wqobSN6WgGAkUIGYgkLJa8uL71imk_4l2qUx1i4kSZShLcLMskdRLDTWLheOZpMcAYS0c/s1280/dub9240-9-palm0.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiZgJ8Qpcvaj8C07S5Y3-n489PauqAL2bIJZum983JiH8dEInZPkVVstyEZoLBLRfIR8NyoRP98OneJ69RxI2Y8q4gOg9Q68xV4qhiXWe09XXxwa-iUAhCap4wqobSN6WgGAkUIGYgkLJa8uL71imk_4l2qUx1i4kSZShLcLMskdRLDTWLheOZpMcAYS0c/s320/dub9240-9-palm0.png" width="320"></a></p><p>

The installer runs, and installs Palm Desktop and the HotSync software successfully, buuuuut ...

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiUtfLtXsPQ0vcAiwsxqfg6gr_kLCjm8f7J7Nh927J91Yb-QV_Rt9yI-z1Ms3yCvJ_tGvrJfyrhdKD2DfRJV3wuzIiFsbGqtLAPXH03u0eZezrlQ88QAsX2tjO9NDc2d7h7e5B39Pbv7Zl1KCeDE8AX_ndlJ_XV5669RGvbgUgQSh1xexY_YaT4eYEKEU4/s1280/dub9240-9-palm1.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiUtfLtXsPQ0vcAiwsxqfg6gr_kLCjm8f7J7Nh927J91Yb-QV_Rt9yI-z1Ms3yCvJ_tGvrJfyrhdKD2DfRJV3wuzIiFsbGqtLAPXH03u0eZezrlQ88QAsX2tjO9NDc2d7h7e5B39Pbv7Zl1KCeDE8AX_ndlJ_XV5669RGvbgUgQSh1xexY_YaT4eYEKEU4/s320/dub9240-9-palm1.png" width="320"></a></p><p>

... because it's an unsigned driver, Windows Vista refuses to load it, and HotSyncing still won't work. I didn't feel like futzing with this more and a regular user would have likely have given up at this point. However, the fact the Prolific did connect and <em>does</em> appear to work suggests this should work on, say, Windows XP.
</p><p>
Let's see if the Atlona AT-PCLink natively in Snow Leopard can do any better. It's time to bring on the docking station.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEglOfQyP0I_x1V19ovNYJwYOFUM3B-cB3-htbg5_OfFOee6G5qAj2Qu2iyp1NKNRyQX4eyhMfK1dtD_xjujs5HeJvGg_GTQXPDpSzxfhoTsh1hIfLcP4PQafzu1B14YiHJ0MyP_6pfDonEGbnepCIHAaJDCSLDE4BSKw2proxeLLRAfz2kXKs0-vpSJUEA/s4080/PXL_20250418_235654610.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEglOfQyP0I_x1V19ovNYJwYOFUM3B-cB3-htbg5_OfFOee6G5qAj2Qu2iyp1NKNRyQX4eyhMfK1dtD_xjujs5HeJvGg_GTQXPDpSzxfhoTsh1hIfLcP4PQafzu1B14YiHJ0MyP_6pfDonEGbnepCIHAaJDCSLDE4BSKw2proxeLLRAfz2kXKs0-vpSJUEA/s320/PXL_20250418_235654610.jpg" width="320"></a></p><p>

Opening the box, which was also an NOS unit.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg0IjilaV0uddh2iYbePUohT1CrepWYU4kAwgDaJAMlgoCT-xoejgTldz1AcKwtEG3BBKADre8gbyEbXoesODk_L1XiSZydenR8W7y_ZGagMBtyozVHN3EVv42oXovW580dRI_JAnhHWrdBxh7I0A4RQUm2FbMZhwweZTS6Z3xM7we3zsKGZODUbu_VXCs/s4080/PXL_20250418_235756101.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg0IjilaV0uddh2iYbePUohT1CrepWYU4kAwgDaJAMlgoCT-xoejgTldz1AcKwtEG3BBKADre8gbyEbXoesODk_L1XiSZydenR8W7y_ZGagMBtyozVHN3EVv42oXovW580dRI_JAnhHWrdBxh7I0A4RQUm2FbMZhwweZTS6Z3xM7we3zsKGZODUbu_VXCs/s320/PXL_20250418_235756101.jpg" width="320"></a></p><p>

The PCLink's dock base has two USB ports and two USB ports. The two USB ports (on the top and front) are for where you want to put the DWA, since if you mount this somewhere you'll still want to keep the DWA vertical for best reception. The two USB ports (on the rear) are for your devices, officially the keyboard and mouse, but other low-speed devices will also work since internally it's just a hub (a wired printer would likely be a common application). The DVI video port and 3.5mm audio port are here too, along with the wallwart power port.
</p><p>
The DWA and HWA are on the left, both based on the Wisair WSR601 single-chip system. Wisair was a 2001 startup enterprise of the Israeli RAD Group specifically oriented around UWB, and as such was one of the earliest chipset designers for CW-USB. Indeed, the revised Belkin wireless hub also reportedly used a WSR601, so it's possible this Mac driver could work with that device too. RAD eventually spun Wisair off but its fortunes foundered along with the rest of the wireless USB ecosystem, and it went into receivership in 2012.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEghao_Lx41a1Cp0R4eAcBEqlQXJopzkZJO56RXMdpv2C-3e_dALPTIVjp4dNkv9kf29HSAX8JXwTfeXvhJEnadTh16O5Km_jH35kb7lvBlE4wS16rhkAHekQXb8KDFMhHhegqgE9WrgOQjnWecZVBC1-NWOeH3sTBMkmv6DM5Mzp2HgKMAA6hIP1Ma1sxk/s4080/PXL_20250503_001852417.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEghao_Lx41a1Cp0R4eAcBEqlQXJopzkZJO56RXMdpv2C-3e_dALPTIVjp4dNkv9kf29HSAX8JXwTfeXvhJEnadTh16O5Km_jH35kb7lvBlE4wS16rhkAHekQXb8KDFMhHhegqgE9WrgOQjnWecZVBC1-NWOeH3sTBMkmv6DM5Mzp2HgKMAA6hIP1Ma1sxk/s320/PXL_20250503_001852417.jpg" width="320"></a></p><p>

The HWA dongle fits nicely in the MacBook's ports, and the jet black colour matches nicely too. A green LED blinks with activity: no blinking indicates no paired device, and blinking rate generally correlates with throughput. 

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjhE7GQxuwo2oGRv3PAR-1JqVfMjAqhaZSdkOH4x5_eBMHczMV7UrVMb1sQ83yYWM2_pd5na261syqbhCG2KR-dYYiS8ESiEE5KONHUrmG4CpyTC2_ZbP6MjKcK7x55jIwRbsci74X7nCa774bgQP_RnHmiKgU_60AUA_2OxT2GKh0B_ACD8-Y9K88BdII/s4080/PXL_20250503_011055619.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjhE7GQxuwo2oGRv3PAR-1JqVfMjAqhaZSdkOH4x5_eBMHczMV7UrVMb1sQ83yYWM2_pd5na261syqbhCG2KR-dYYiS8ESiEE5KONHUrmG4CpyTC2_ZbP6MjKcK7x55jIwRbsci74X7nCa774bgQP_RnHmiKgU_60AUA_2OxT2GKh0B_ACD8-Y9K88BdII/s320/PXL_20250503_011055619.jpg" width="320"></a></p>

<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEggLEi_JmBGvXomTblUzeohwuRPWAsM63l3T3fJEpe6F3b08a6ln1T08gRBmNGGilxweKtwi5gKs6Ec_XlsHX-S7A4SWX-WABeIwK_wjNEX6WL6aAwO-i_73BfVm5q-TWNQ_bzH1iH7pB9FR30EuG6i7q8nw-8rAnVJloIdhEiZoGV5B6urS1Pz2eX1Pwc/s4080/PXL_20250503_003351564.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEggLEi_JmBGvXomTblUzeohwuRPWAsM63l3T3fJEpe6F3b08a6ln1T08gRBmNGGilxweKtwi5gKs6Ec_XlsHX-S7A4SWX-WABeIwK_wjNEX6WL6aAwO-i_73BfVm5q-TWNQ_bzH1iH7pB9FR30EuG6i7q8nw-8rAnVJloIdhEiZoGV5B6urS1Pz2eX1Pwc/s320/PXL_20250503_003351564.jpg" width="320"></a></p><p>

The DWA's twin configurations. Since we were using it on a table, I put the DWA in the top slot instead of the front one.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgC1WsGIu4bIjctkeEJpHV1oiOGwTaha1qMhBU5uKGrQjRjiA7RaBm0HfjMycXiU_wpz6ijvKNQ8zX74Tsxi5ZfegCYkNmcrlzcRLbduvNhTgIOeHFB1p_jeeLlZD0qLpzn2v7Ft0EXESe9K8_d_DpJlD_8glK6FuWIOozlkrMODVC5cgEGJduw7NbxBcs/s1280/Screen%20shot%202025-05-02%20at%205.12.05%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgC1WsGIu4bIjctkeEJpHV1oiOGwTaha1qMhBU5uKGrQjRjiA7RaBm0HfjMycXiU_wpz6ijvKNQ8zX74Tsxi5ZfegCYkNmcrlzcRLbduvNhTgIOeHFB1p_jeeLlZD0qLpzn2v7Ft0EXESe9K8_d_DpJlD_8glK6FuWIOozlkrMODVC5cgEGJduw7NbxBcs/s320/Screen%20shot%202025-05-02%20at%205.12.05%20PM.png" width="320"></a></p><p>

The most recent set of drivers I could get was version 120.36.1.0. No more obviously recent version appeared on Atlona's Wayback copy. I noted with amusement that an old version of the installer was in the Trash, making the </p><tt>.dmg</tt><p> double the size it needed to be. A </p><tt>help</tt><p> alias points to a small HTML-based manual, but the Windows version has a full PDF available on the disc.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhUxK0HXnXchMZx9T4c9mJvuCHE1GPV-H6puJiNZZ-5gMAVrSyCcvSIsh1fHYGsU4h5AdphaMi7ljLRQ4YO1DCT5hMGt0HjXAEn0O12DWfeAAaQPdFBTg4lZkzjWJpocxLvHnn8PY2ewLf1m4EAPRbmQjc21j6bEcG9fZWX0d8b32ZXpvhByRcF6D-_-yM/s1280/Screen%20shot%202025-05-02%20at%205.12.39%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhUxK0HXnXchMZx9T4c9mJvuCHE1GPV-H6puJiNZZ-5gMAVrSyCcvSIsh1fHYGsU4h5AdphaMi7ljLRQ4YO1DCT5hMGt0HjXAEn0O12DWfeAAaQPdFBTg4lZkzjWJpocxLvHnn8PY2ewLf1m4EAPRbmQjc21j6bEcG9fZWX0d8b32ZXpvhByRcF6D-_-yM/s320/Screen%20shot%202025-05-02%20at%205.12.39%20PM.png" width="320"></a></p><p>

Installation complete.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiBMPp8bHVMaQ_2Nau0Wyqc2pwl2V8oEPjXrwvgX8GzPsmmzoZRsHhqrUEEI-xqQw_TZlPybRciJRaSUc5dM-bp0loAqYUkxI8c_kn2t2Z8EXi-REjzXc4JnmchD9Kylnxsl66w_gsVPm5TDaKnL-sA3pByw3wEa2XXztQ-3moiou9iwvDsilrHwTn1mt0/s1280/Screen%20shot%202025-05-02%20at%205.14.38%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiBMPp8bHVMaQ_2Nau0Wyqc2pwl2V8oEPjXrwvgX8GzPsmmzoZRsHhqrUEEI-xqQw_TZlPybRciJRaSUc5dM-bp0loAqYUkxI8c_kn2t2Z8EXi-REjzXc4JnmchD9Kylnxsl66w_gsVPm5TDaKnL-sA3pByw3wEa2XXztQ-3moiou9iwvDsilrHwTn1mt0/s320/Screen%20shot%202025-05-02%20at%205.14.38%20PM.png" width="320"></a></p><p>

When we restart, a new menubar icon appears which I can well imagine some users confused with Wi-Fi. It has two arcs and a dot. When all are hollow, no HWA has been detected.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjNKXm-EsoIdPnly7guwiwCsBecM8QSwVNRXcKjsJU_ztLeNHhRUbfG5Xk33PLnlpX26Ek9ddKF9SKKpfdvCs_-lk3srds5JOiED3IPO5aTsBNRtFdwnCuzvpnFdt0kxD1PYDHYwUJ-nyMz4BJ58FSNUmDqrNWlBFbBKVLeTaXJA3YZJilYoK-tb0rmjsM/s1280/Screen%20shot%202025-05-02%20at%205.20.00%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjNKXm-EsoIdPnly7guwiwCsBecM8QSwVNRXcKjsJU_ztLeNHhRUbfG5Xk33PLnlpX26Ek9ddKF9SKKpfdvCs_-lk3srds5JOiED3IPO5aTsBNRtFdwnCuzvpnFdt0kxD1PYDHYwUJ-nyMz4BJ58FSNUmDqrNWlBFbBKVLeTaXJA3YZJilYoK-tb0rmjsM/s320/Screen%20shot%202025-05-02%20at%205.20.00%20PM.png" width="320"></a></p><p>

Upon plugging in the HWA, the dot at the corner goes solid and the HWA starts hunting for a device in range. Since it comes pre-paired with the dock and the dock was barely six inches away, it didn't have long to wait.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiL0lzfgyvz670-s1biCLncREBYjttM2no9Sq_h15oSoUWPeUN_tUuy6DqpvWYF98qzHXmquqnhSGnNBM9pgrnRTmDfFsFV9s8BVRljOkfpOO30QkouGJUDBpKKfyQEzWnJGkD_lBQ1WVaAhLPtX0y6N6DTl7jWge-vKVYxrIsNUyLZV7GMYM5aWV98pYA/s1280/Screen%20shot%202025-05-02%20at%205.23.18%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiL0lzfgyvz670-s1biCLncREBYjttM2no9Sq_h15oSoUWPeUN_tUuy6DqpvWYF98qzHXmquqnhSGnNBM9pgrnRTmDfFsFV9s8BVRljOkfpOO30QkouGJUDBpKKfyQEzWnJGkD_lBQ1WVaAhLPtX0y6N6DTl7jWge-vKVYxrIsNUyLZV7GMYM5aWV98pYA/s320/Screen%20shot%202025-05-02%20at%205.23.18%20PM.png" width="320"></a></p><p>

Now connected, the rings all go solid, and you are hooked up to the dock base.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgPG97bQNFR2dxcDYLlZQsHIpqSQ-fQ1YXa74BDFDCCmc7pPz5EkCq2mjDa7dJPUPW-FJphl95qnraFk36ob_PeR-JadJQV1IEOzig_9JvUrjzvNlyZJyRkfTTc0TkvAmVB1UFJ0wAcK1vyhr1WYZVjPOeD0H3x4P69P50mA42mGeIkc_hu5DsjNQmEG6s/s1280/Screen%20shot%202025-05-02%20at%205.25.15%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgPG97bQNFR2dxcDYLlZQsHIpqSQ-fQ1YXa74BDFDCCmc7pPz5EkCq2mjDa7dJPUPW-FJphl95qnraFk36ob_PeR-JadJQV1IEOzig_9JvUrjzvNlyZJyRkfTTc0TkvAmVB1UFJ0wAcK1vyhr1WYZVjPOeD0H3x4P69P50mA42mGeIkc_hu5DsjNQmEG6s/s320/Screen%20shot%202025-05-02%20at%205.25.15%20PM.png" width="320"></a></p><p>

If we look at the status in the System Profiler, we can see the difference when the dock is connected. With the HWA plugged in, we see the dongle (and a suspicious serial number).

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjUlGhcQ1nArAqxmLY5OtgGEwDCFhrNsZCwHac5XtXKYtHfz51y0ptnvr7fa9lRhXVR94M9PNLXY6j2pmeD8YBdgD5kILJHb1LjDPosPafoGZKdONGarDFpnRpMAacgan83uJ-Ixr_1sswapMZ52WkZ4Gqjm4STNiATaF4Jkf2F77hMa9aENipBtCJEwv8/s1280/Screen%20shot%202025-05-02%20at%205.25.55%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjUlGhcQ1nArAqxmLY5OtgGEwDCFhrNsZCwHac5XtXKYtHfz51y0ptnvr7fa9lRhXVR94M9PNLXY6j2pmeD8YBdgD5kILJHb1LjDPosPafoGZKdONGarDFpnRpMAacgan83uJ-Ixr_1sswapMZ52WkZ4Gqjm4STNiATaF4Jkf2F77hMa9aENipBtCJEwv8/s320/Screen%20shot%202025-05-02%20at%205.25.55%20PM.png" width="320"></a></p><p>

With the HWA connected to the dock, however, the driver sets up — as we observed in VMware with Vista — a whole new USB bus of its own, because of course it is, headed by the HWA. While both devices are called a "Wireless HWA Dongle" (you can change this), their USB product IDs differ and this entry is in fact for the DWA.
</p><p>
To my great delight, while installing it on the MacBook I noticed that the installer was Universal (even to 10.2! but that's because it's a BitRock InstallBuilder package) <em>and</em> had a Universal payload, even though Atlona said explicitly it wasn't compatible with PowerPC. I grabbed my great big A1139 17" DLSD PowerBook G4 1.67GHz, the last and mightiest PowerBook which I use as a portable DVD player and Leopard 10.5.8 test system, to see if it would work.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhcMRoOX9R7h53bkdmDgM5Y9SdBVGnuPd9-OhpuQL_KFFoJvKitFoh9A9jnZq8CH9isIB3nrIGiCf-dpsxYqELNSd4tPwNTxSzgMJE4ZP0VelUSokPgWqBXdd_zzHjSNBkX0GDs2qRqJS86l9eFcSVjXAEW-jvKjlQWZ-0_zBp_DSC3uTqsw6rJPED88-8/s1680/Picture%201.png"><img alt="" data-original-height="1050" data-original-width="1680" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhcMRoOX9R7h53bkdmDgM5Y9SdBVGnuPd9-OhpuQL_KFFoJvKitFoh9A9jnZq8CH9isIB3nrIGiCf-dpsxYqELNSd4tPwNTxSzgMJE4ZP0VelUSokPgWqBXdd_zzHjSNBkX0GDs2qRqJS86l9eFcSVjXAEW-jvKjlQWZ-0_zBp_DSC3uTqsw6rJPED88-8/s320/Picture%201.png" width="320"></a></p><p>

The installer does indeed run. Being BitRock, it's actually Tcl under the hood. Fun fact.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhR6cqZESrlFg9IArDq-ktvT6zdqrJU2jBh6ZG9NXfiq_wZHu4N5Ir3icPRSMYHKvRHtTaf-lHw_59UeJK40pgdimPLIr2k0rdTmxkbXBU783Q43_1W7swM3aDXOu34yhofeAwVybiW3-lcEGVWu77f5Ks68jGRWxTBOEEHq9u4vOSNhyWBJ9UZY_h-QM8/s1680/Picture%201f.png"><img alt="" data-original-height="1050" data-original-width="1680" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhR6cqZESrlFg9IArDq-ktvT6zdqrJU2jBh6ZG9NXfiq_wZHu4N5Ir3icPRSMYHKvRHtTaf-lHw_59UeJK40pgdimPLIr2k0rdTmxkbXBU783Q43_1W7swM3aDXOu34yhofeAwVybiW3-lcEGVWu77f5Ks68jGRWxTBOEEHq9u4vOSNhyWBJ9UZY_h-QM8/s320/Picture%201f.png" width="320"></a></p><p>

And the menubar icon does indeed appear. However, despite the HWA being visible in System Profiler, it's never recognized by the kernel extension and both the menubar icon and the preference pane insist no host is present. I suspect this is endian-related.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjDy_JyAiGzaIlcDqjFX4-SRBuL47hAsBeJfn5d1djXQuZSr9pmcyef9ADxtITNZyppveoXuJ7ZTyadlE2OIu3RwhANXDU8DSgurhO4RlVYnlpiPuFmOcq1rh_P1YRiJg8rPl6C1BJ1fpFc5QSKo4AyHBkKFTaYpMqacF2i_aaHNjVM9Dkg27sfullLT2w/s1680/Picture%201u.png"><img alt="" data-original-height="1050" data-original-width="1680" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjDy_JyAiGzaIlcDqjFX4-SRBuL47hAsBeJfn5d1djXQuZSr9pmcyef9ADxtITNZyppveoXuJ7ZTyadlE2OIu3RwhANXDU8DSgurhO4RlVYnlpiPuFmOcq1rh_P1YRiJg8rPl6C1BJ1fpFc5QSKo4AyHBkKFTaYpMqacF2i_aaHNjVM9Dkg27sfullLT2w/s320/Picture%201u.png" width="320"></a></p><p>

So here's the uninstaller. That works too.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjI7cbD7V7fqF1kyGCvPt3BfzWrr0-h0tdNjzbemkJco2pEy5Svphyxf1Ik80GGOQ5dVF4jt6M08kR_vfawjBo3aC7OIpjWzwNXQg1rqUo2H_To4iNJg5o7ZGTdLUNoBVseED4bJ-ZEzTpMgVWtsgajVCQ9Z7gupAbClgkLhBl58zGKROS_b_obSpgO1mY/s1280/Screen%20shot%202025-05-02%20at%205.29.47%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjI7cbD7V7fqF1kyGCvPt3BfzWrr0-h0tdNjzbemkJco2pEy5Svphyxf1Ik80GGOQ5dVF4jt6M08kR_vfawjBo3aC7OIpjWzwNXQg1rqUo2H_To4iNJg5o7ZGTdLUNoBVseED4bJ-ZEzTpMgVWtsgajVCQ9Z7gupAbClgkLhBl58zGKROS_b_obSpgO1mY/s320/Screen%20shot%202025-05-02%20at%205.29.47%20PM.png" width="320"></a></p><p>

Back on the MacBook, we'll go ahead and install the DisplayLink driver now. I used the most recent one I could get from Atlona's Wayback, which was version 1.7. It's a regular Installer package.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjHbDNzs3btVqrCtejDXvV3eaSED_7uCQUepEIbcLCOas2_y-7GYkIuF61aW3WOGdJNvG-wgyRoNeooVfiU9KTE3-qTRUnA4ZJJ-0_lRodyYerILKIGGToMpF0-6_f-d4ZnvmhmukmmoXGWJKx9Z6aYnBqC5gDMxc3CuBqzdsviaEplWgyWBb6jhg2X79c/s1280/Screen%20shot%202025-05-02%20at%205.30.07%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjHbDNzs3btVqrCtejDXvV3eaSED_7uCQUepEIbcLCOas2_y-7GYkIuF61aW3WOGdJNvG-wgyRoNeooVfiU9KTE3-qTRUnA4ZJJ-0_lRodyYerILKIGGToMpF0-6_f-d4ZnvmhmukmmoXGWJKx9Z6aYnBqC5gDMxc3CuBqzdsviaEplWgyWBb6jhg2X79c/s320/Screen%20shot%202025-05-02%20at%205.30.07%20PM.png" width="320"></a></p>

<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiNzqts65cD-tA_dfVYHIn01evplFCgYNrO54x8Uz6gWWYVIE1euFOlHIlf-HcYb80NiqG7L0mDSu4cqLbMbdd5S_i-jL-wqndwnhrlasifmF6Hcp74sHR4-AvEz3TSCugrlArmf19jeFmkeaHkeguwyllFrIGFI8KkgbjhKf6uiazR6RBVJIitVWYLIAw/s1280/Screen%20shot%202025-05-02%20at%205.37.10%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiNzqts65cD-tA_dfVYHIn01evplFCgYNrO54x8Uz6gWWYVIE1euFOlHIlf-HcYb80NiqG7L0mDSu4cqLbMbdd5S_i-jL-wqndwnhrlasifmF6Hcp74sHR4-AvEz3TSCugrlArmf19jeFmkeaHkeguwyllFrIGFI8KkgbjhKf6uiazR6RBVJIitVWYLIAw/s320/Screen%20shot%202025-05-02%20at%205.37.10%20PM.png" width="320"></a></p><p>

After a restart, when the Mac gets in range of the dock, the screen flashes like a second monitor has been connected (because, as far as Snow Leopard is concerned, one has been) and a new "virtual monitor" appears. We'll come back to this in a little bit when we talk about performance. For now, let's proceed with our original mission: can we get the Fossil Abacus smartwatch to sync <em>this</em> way?

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEibGt4KPYiYI3de_RwHaz9w9qgOBqi7QhYgCb-v256PLR53HNwFx44cJ6LELHHR8-xEaZV5DQrSwE7XyFypFyAlIdjMUj-zFvko1ApvSZM3Mr_D35E7eGNOskyv1m37eoN5tAJ-QqFzu5DI9hgZ9Pea5jfPC4fbwpPSZaUUaV4NllPpMHNvL3haAa43coI/s1280/Screen%20shot%202025-05-02%20at%205.39.24%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEibGt4KPYiYI3de_RwHaz9w9qgOBqi7QhYgCb-v256PLR53HNwFx44cJ6LELHHR8-xEaZV5DQrSwE7XyFypFyAlIdjMUj-zFvko1ApvSZM3Mr_D35E7eGNOskyv1m37eoN5tAJ-QqFzu5DI9hgZ9Pea5jfPC4fbwpPSZaUUaV4NllPpMHNvL3haAa43coI/s320/Screen%20shot%202025-05-02%20at%205.39.24%20PM.png" width="320"></a></p><p>

To the best of my knowledge there never was a first-party Palm Desktop that ran natively on Intel. (You can, of course, compile </p><tt>pilot-xfer</tt><p>, but that doesn't give you the rest of the PIM, and Mark/Space's Missing Sync <a href="https://discussions.apple.com/thread/5741192">does not run on Mavericks or later</a>.) Fortunately, this is Snow Leopard, so we have O.G. Rosetta. 

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgFi20qMxJOjJlJT0HwyqAipgvyOnbIZVeaCSVrhPA9pBFUFYnuKxZBUGZyxZ_iohqlibFwTW3vJtgBgsP4W1Wyh2siGvaRpJ8GJhIRWvsGVBsdWql1oLLOT_BGuVnAh261MJ2XNSUMDAJ59EN8WiJOQ6CiTdE_vUEcp4yPsWk43SJd0snbQYAGwhbs-TE/s1280/Screen%20shot%202025-05-02%20at%205.39.41%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgFi20qMxJOjJlJT0HwyqAipgvyOnbIZVeaCSVrhPA9pBFUFYnuKxZBUGZyxZ_iohqlibFwTW3vJtgBgsP4W1Wyh2siGvaRpJ8GJhIRWvsGVBsdWql1oLLOT_BGuVnAh261MJ2XNSUMDAJ59EN8WiJOQ6CiTdE_vUEcp4yPsWk43SJd0snbQYAGwhbs-TE/s320/Screen%20shot%202025-05-02%20at%205.39.41%20PM.png" width="320"></a></p><p>

I just installed the version that came on the Fossil CD.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj7FdL4NEZABh7YIR2UNTOfAxFor4__EujcdZb86VSKMjtnxs7P3Z-pvHT7u7KQSOlb0wuH8IRO7O2v6gQcYZWV2ilS5x645j0672AsgOjjGPJuDJJaiathh1jnEUNe2AVuyljjtMoHeKKlrbGAr41Y8PlBrIts7RxftgHMQ9aqVYMmVH80xHKt9Q6u4hc/s1280/Screen%20shot%202025-05-02%20at%205.40.01%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj7FdL4NEZABh7YIR2UNTOfAxFor4__EujcdZb86VSKMjtnxs7P3Z-pvHT7u7KQSOlb0wuH8IRO7O2v6gQcYZWV2ilS5x645j0672AsgOjjGPJuDJJaiathh1jnEUNe2AVuyljjtMoHeKKlrbGAr41Y8PlBrIts7RxftgHMQ9aqVYMmVH80xHKt9Q6u4hc/s320/Screen%20shot%202025-05-02%20at%205.40.01%20PM.png" width="320"></a></p>

<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEihEMwQWJuzuf2a_DbzrMm9l-v_VSjOlNudxrr8jIxTnyaPm8qqxxFbMtRuTtjMe_uuAuWezQHsKzUAJu-Vd2IOiME9PTuWHI4acmuu6D-y-ywMCacTtwU5Q1S0qeZVKiSDxTFIaB9d4SPhmnNH7pbF6pWGK4rXHcoqW53zT4rjfBj4WoygrHbhKmVqfUI/s1280/Screen%20shot%202025-05-02%20at%205.42.00%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEihEMwQWJuzuf2a_DbzrMm9l-v_VSjOlNudxrr8jIxTnyaPm8qqxxFbMtRuTtjMe_uuAuWezQHsKzUAJu-Vd2IOiME9PTuWHI4acmuu6D-y-ywMCacTtwU5Q1S0qeZVKiSDxTFIaB9d4SPhmnNH7pbF6pWGK4rXHcoqW53zT4rjfBj4WoygrHbhKmVqfUI/s320/Screen%20shot%202025-05-02%20at%205.42.00%20PM.png" width="320"></a></p><p>

Installation and setup all went pretty uneventfully.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg4QkbEHIHL0riJSW7QHEjyazqWcv7vdepSefJFhe3Ib33KRSj80LGRuF7zKIo6XWgXG9lHmn2xyKQA4IFIDS-ssoesFzp5R_SzABZKiMAkLC-d-S6advy9XzCL5emNTqBZ90mmsx2_hYakfdU8mp-HBWTYqQM9h755U0e2A4ZHSb533b7mExAedezcxZ4/s1280/Screen%20shot%202025-05-02%20at%205.58.04%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg4QkbEHIHL0riJSW7QHEjyazqWcv7vdepSefJFhe3Ib33KRSj80LGRuF7zKIo6XWgXG9lHmn2xyKQA4IFIDS-ssoesFzp5R_SzABZKiMAkLC-d-S6advy9XzCL5emNTqBZ90mmsx2_hYakfdU8mp-HBWTYqQM9h755U0e2A4ZHSb533b7mExAedezcxZ4/s320/Screen%20shot%202025-05-02%20at%205.58.04%20PM.png" width="320"></a></p><p>

And here we are in Palm Desktop, which works perfectly under Rosetta.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjQqn-QrYjboB-u13RtNwcl9z-sncEs7dHX-a-_LMEyAyrzxhwVqRB6d_t5eBfAlDDg3IodalLo4mWB-QV5o1I0fqPps-JDvyFs14dtP7dnbwL3VR-ZxOZHRW1udzMZjVxn2FeVr0GeKGXr1YfXzYE8qzP5yNT2ZN73EhlFpQGaLxbJ8iNDzH03kJIbhEg/s4080/PXL_20250503_010848584.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjQqn-QrYjboB-u13RtNwcl9z-sncEs7dHX-a-_LMEyAyrzxhwVqRB6d_t5eBfAlDDg3IodalLo4mWB-QV5o1I0fqPps-JDvyFs14dtP7dnbwL3VR-ZxOZHRW1udzMZjVxn2FeVr0GeKGXr1YfXzYE8qzP5yNT2ZN73EhlFpQGaLxbJ8iNDzH03kJIbhEg/s320/PXL_20250503_010848584.jpg" width="320"></a></p><p>

We can just plug the watch's sync cable into the back of the dock ...

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhzzg3rNMqcJH1THjuYPwgB-s-r3haRBEZhIO3l-rk_LPG5vqTvuEmyI6FkJ449BmUnq-x2HQAxpxWr9kGSbluE_Az5-8PSUOtEaYvLR19FVcFEqBTf3Ott19fs3o5532TzIV3vdAhZBMDRZc19wLQPUZgfpjZabLnVlQZCCYPvIq2HlOkeNA67oleSdxQ/s4080/PXL_20250503_005845369.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhzzg3rNMqcJH1THjuYPwgB-s-r3haRBEZhIO3l-rk_LPG5vqTvuEmyI6FkJ449BmUnq-x2HQAxpxWr9kGSbluE_Az5-8PSUOtEaYvLR19FVcFEqBTf3Ott19fs3o5532TzIV3vdAhZBMDRZc19wLQPUZgfpjZabLnVlQZCCYPvIq2HlOkeNA67oleSdxQ/s320/PXL_20250503_005845369.jpg" width="320"></a></p><p>

... kick off a HotSync from the watch ...

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEioCslAvbzw4XSNsgDPMvLwgHMOm-8WgkMTJIY6xnrrDSzBxbddyYH5ErSLDCfFHyWJJfKGhVZppyE1-8abwAM3uEnenlfskHJXHGAydysJsEbU4fVGXzna5nK604Nv5vTVLMPfDbvcq6srx80zGok2LcOEKX9DmoYqapiUwVR_1CI_SCGzxvSWlhxo1h8/s1280/Screen%20shot%202025-05-02%20at%205.58.22%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEioCslAvbzw4XSNsgDPMvLwgHMOm-8WgkMTJIY6xnrrDSzBxbddyYH5ErSLDCfFHyWJJfKGhVZppyE1-8abwAM3uEnenlfskHJXHGAydysJsEbU4fVGXzna5nK604Nv5vTVLMPfDbvcq6srx80zGok2LcOEKX9DmoYqapiUwVR_1CI_SCGzxvSWlhxo1h8/s320/Screen%20shot%202025-05-02%20at%205.58.22%20PM.png" width="320"></a></p><p>

... the HotSync conduit answers ...

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj1fIfKgQRa6eouGNFarRLTlDKiO8xyqKUOQ2xrLpHLPJg8tl92PuWiLFywFk1QGXd6j3YAssXgTWTYM1_g5TMH5bWcuHQHVmwEom0vOqMxZISDeDDVTDbPzzpbN3jvXEMAqQPX2E-FD2sQznb1XNBtMzzY3n6BiwflaKQuTsEGsox4hfkyztrYoSummKY/s4080/PXL_20250503_005954634.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj1fIfKgQRa6eouGNFarRLTlDKiO8xyqKUOQ2xrLpHLPJg8tl92PuWiLFywFk1QGXd6j3YAssXgTWTYM1_g5TMH5bWcuHQHVmwEom0vOqMxZISDeDDVTDbPzzpbN3jvXEMAqQPX2E-FD2sQznb1XNBtMzzY3n6BiwflaKQuTsEGsox4hfkyztrYoSummKY/s320/PXL_20250503_005954634.jpg" width="320"></a></p><p>

... and the sync runs and completes with no errors. Yay! Again, look, Ma: no wires! (From the watch to the MacBook, anyway.)

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiaehrMqNClcbBCfV_DxiKfp4jgdhX51pWE6TEf4tCK3fLcLHvrapRUkCLAsby_a3eAZF6fd3K2NbnuAmGnMZOk_polhCDI3qkVPilxTiZih1F9-d82I7vggfbVT72H7Whfkpu0HFV5re_ZdbOEnm3LZt5h4NMMW_iNIXy-D6EM0Sffl9Y8h0ZAhi2CuX8/s1280/Screen%20shot%202025-05-02%20at%206.02.21%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiaehrMqNClcbBCfV_DxiKfp4jgdhX51pWE6TEf4tCK3fLcLHvrapRUkCLAsby_a3eAZF6fd3K2NbnuAmGnMZOk_polhCDI3qkVPilxTiZih1F9-d82I7vggfbVT72H7Whfkpu0HFV5re_ZdbOEnm3LZt5h4NMMW_iNIXy-D6EM0Sffl9Y8h0ZAhi2CuX8/s320/Screen%20shot%202025-05-02%20at%206.02.21%20PM.png" width="320"></a></p><p>

Periodically and possibly coincidentally, the icon started occasionally flashing a "1" in the menu bar during and after the test sync. This seems to indicate other interfering activity on the WiMedia bandgroup in use (we'll get to how we know the bandgroup is 1 in a moment). I didn't notice much slowing when this happened, but a HotSync isn't a particularly high-speed transaction either.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgY-GGF8ZEQlwSDmnt9xKNRLPK10RH1ROcQZXYUZUND6HfvG0AnHoNv3VtDDmqXJom81cGAggPWwmCQT47DzOVoKo9DfmNmLxS9Cp0ypS_89GdGaPH2IozC1AMKACjtn4UBgF0yNCH3f4uIxCtIRB8L4bTre8Jd6eH-xni6NlguhXA397kseYX1yaQeGAk/s1280/Screen%20shot%202025-05-02%20at%206.03.14%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgY-GGF8ZEQlwSDmnt9xKNRLPK10RH1ROcQZXYUZUND6HfvG0AnHoNv3VtDDmqXJom81cGAggPWwmCQT47DzOVoKo9DfmNmLxS9Cp0ypS_89GdGaPH2IozC1AMKACjtn4UBgF0yNCH3f4uIxCtIRB8L4bTre8Jd6eH-xni6NlguhXA397kseYX1yaQeGAk/s320/Screen%20shot%202025-05-02%20at%206.03.14%20PM.png" width="320"></a></p><p>

Besides the menubar icon, the Atlona driver package also installs a Wireless USB Manager prefpane in System Preferences. (This, too, is Universal and has a PowerPC executable, and it, too, didn't work.) The Wireless USB Dongle appears, which is actually the DWA in the dock, and no other devices.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiCdIIR9aNoMTnMqNUB9U-z3ohaoglD6x64aPBFX1UTJwlUrUbHQGjFrClGXhN7JElz2ounke5Qjtr0OnUMf3vjk533EJ0fz_BfPjMOEdpWe8J2HWmAVR8f91qyQZt_NraX8PfT8dW039_o3SIWkVV_HIGPCikCvUL0YWmFAbErmPV5fan3QlHCLjAa3lk/s1280/Screen%20shot%202025-05-02%20at%206.03.23%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiCdIIR9aNoMTnMqNUB9U-z3ohaoglD6x64aPBFX1UTJwlUrUbHQGjFrClGXhN7JElz2ounke5Qjtr0OnUMf3vjk533EJ0fz_BfPjMOEdpWe8J2HWmAVR8f91qyQZt_NraX8PfT8dW039_o3SIWkVV_HIGPCikCvUL0YWmFAbErmPV5fan3QlHCLjAa3lk/s320/Screen%20shot%202025-05-02%20at%206.03.23%20PM.png" width="320"></a></p><p>

While you can rename them, and even block them, you cannot disassociate the default device. More importantly, there is no option to actually <em>associate</em> or pair a <em>new</em> device. (Remember what I said about foreshadowing?) This restriction appears to be entirely due to the software and isn't unique to the Mac version; the Atlona manual indicates that the Windows version can't associate new devices either, other than possibly another Atlona dock. Officially it can be re-paired with its original DWA and that's it.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgFhfRRbCG7wK5h1SNNxHHuyqfOh1BrD2Nsx7Q5hEBQ10apk_SAjXC0L0ExpLIfm5MGP7pCu4Bj_e_88HFzsypXCnzI7OYLmpGQhGTnarcpS8yguQiq11djHXM_msGBioUYst_4rUmFQaw-WFYWrcZ4pp1kd_makGTbFoj7sJ9UOEvF5TvVu0Ooz77wtU8/s1280/Screen%20shot%202025-05-02%20at%206.03.30%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgFhfRRbCG7wK5h1SNNxHHuyqfOh1BrD2Nsx7Q5hEBQ10apk_SAjXC0L0ExpLIfm5MGP7pCu4Bj_e_88HFzsypXCnzI7OYLmpGQhGTnarcpS8yguQiq11djHXM_msGBioUYst_4rUmFQaw-WFYWrcZ4pp1kd_makGTbFoj7sJ9UOEvF5TvVu0Ooz77wtU8/s320/Screen%20shot%202025-05-02%20at%206.03.30%20PM.png" width="320"></a></p><p>

The Advanced menu, like the D-Link control centre, is mostly for changing radio frequencies. There's no pairing option there ...

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgjw7pVnxWVY3pdmfTca1b-l1kZ02UITYCBXot_tP8ZEheMu_hTzDbvhoXL_AkqtU4aKFW1t3Wg-pJn-98rh1Ygd4N01gQmw74FACsjkMn3ZrPoYpIlg6CIqiDw2l1hJy8Mte6WCbFpqerrg-0WWvPpb7w8k99rtDcitEbmT-BDsoeH-znBX44WdsDgX08/s1280/Screen%20shot%202025-05-02%20at%206.03.42%20PM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgjw7pVnxWVY3pdmfTca1b-l1kZ02UITYCBXot_tP8ZEheMu_hTzDbvhoXL_AkqtU4aKFW1t3Wg-pJn-98rh1Ygd4N01gQmw74FACsjkMn3ZrPoYpIlg6CIqiDw2l1hJy8Mte6WCbFpqerrg-0WWvPpb7w8k99rtDcitEbmT-BDsoeH-znBX44WdsDgX08/s320/Screen%20shot%202025-05-02%20at%206.03.42%20PM.png" width="320"></a></p><p>

... and no other candidate devices are listed, even when I plugged in and turned on the D-Link hub-DWA. I also tried connecting the D-Link hub with a cable to see if it would associate that way, and still nothing happened. You could plug in a hub into the dock itself, I suppose, but you can't add any additional devices directly.
</p><p>
I did search the hard disk to see if I could figure out where the pairing data was stored and maybe forge an entry of my own, and after some digging around I found <tt>/System/Library/WUSB/CBA.app/Contents/Resources/DB.plist</tt>, which lists associated devices. (The very location of this <tt>.plist</tt> again suggests it wasn't intended for user modification.) Here is the relevant portion, with keys suppressed:
</p><div><pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
&lt;plist version="1.0"&gt;
&lt;dict&gt;
	&lt;key&gt;Association&lt;/key&gt;
	&lt;dict&gt;
		&lt;key&gt;[128-bit hex host ID]&lt;/key&gt;
		&lt;dict&gt;
			&lt;key&gt;BANDGROUP&lt;/key&gt;
			&lt;integer&gt;1&lt;/integer&gt;
			&lt;key&gt;FACTORY ASSOCIATION ONLY&lt;/key&gt;
			&lt;false/&gt;
			&lt;key&gt;FRIENDLY NAME&lt;/key&gt;
			&lt;string&gt;WSR 601 WUSB Device&lt;/string&gt;
			&lt;key&gt;[128-bit hex device ID]&lt;/key&gt;
			&lt;dict&gt;
				&lt;key&gt;BLOCKED&lt;/key&gt;
				&lt;integer&gt;0&lt;/integer&gt;
				&lt;key&gt;CC&lt;/key&gt;
				&lt;data&gt;
				[384-bit Base64]
				&lt;/data&gt;
				&lt;key&gt;FACTORY&lt;/key&gt;
				&lt;true/&gt;
				&lt;key&gt;FRIENDLY NAME&lt;/key&gt;
				&lt;string&gt;Wireless USB Dongle&lt;/string&gt;
			&lt;/dict&gt;
		&lt;/dict&gt;
	&lt;/dict&gt;
</pre></div>
<p>
You can identify the WiMedia bandgroup (1, 3.1GHz to 4.8GHz), the 128-bit host and device IDs, and the 384-bit association context (which includes both IDs) in the key-value pairs. Yes, I could insert another device entry easily enough, but I wouldn't know the AES key the other end is using, so I couldn't compute a valid context.
</p><p>
Since this driver is running natively and we're not paying a VM tax, let's see how well video streaming worked since oodles of cableless bandwidth was just about the entire use case for wireless USB.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhm2R5HCsydo_Sj5JWI0E1pHTj53YmPwGCGc8_MD18-xR5C3yFD1So9XpaAlec0RQ2rw7ABlIwFxXu6kYfwMuaVdEdyKaVjxGSoJBwEHvD3zw7LvMfkpGGlFoIviqiDBcQ8pOZMEvjgj38eWii19-dJSalcjHUeu-bihdqKioOhyphenhyphenWe1meNaIJfvBluSwHc/s4080/PXL_20250503_171523887.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhm2R5HCsydo_Sj5JWI0E1pHTj53YmPwGCGc8_MD18-xR5C3yFD1So9XpaAlec0RQ2rw7ABlIwFxXu6kYfwMuaVdEdyKaVjxGSoJBwEHvD3zw7LvMfkpGGlFoIviqiDBcQ8pOZMEvjgj38eWii19-dJSalcjHUeu-bihdqKioOhyphenhyphenWe1meNaIJfvBluSwHc/s320/PXL_20250503_171523887.jpg" width="320"></a></p><p>

Here I've simply mirrored the MacBook to my wife's Samsung secondary monitor. The dock is about a foot from the MacBook, out of frame to the left. 

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhjIzJCmC5JyYx2bixnelNCeeCsv5xjtMic9y3qvIIUzL-tLavLgm5sjqBoFSP7qhUrr4pO9F7osDRFYV1522bwdeDaOpYx-k_v62qQBPHS-hfslNMdn0Cal_lAFqfaPLlC-r58y1zp4JQekA8rSYLWvtq5Y6BLKH9WgIEE0xwPfwzEsXCddkQK6KAxHig/s1280/Screen%20shot%202025-05-03%20at%2010.16.45%20AM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhjIzJCmC5JyYx2bixnelNCeeCsv5xjtMic9y3qvIIUzL-tLavLgm5sjqBoFSP7qhUrr4pO9F7osDRFYV1522bwdeDaOpYx-k_v62qQBPHS-hfslNMdn0Cal_lAFqfaPLlC-r58y1zp4JQekA8rSYLWvtq5Y6BLKH9WgIEE0xwPfwzEsXCddkQK6KAxHig/s320/Screen%20shot%202025-05-03%20at%2010.16.45%20AM.png" width="320"></a></p><p>

The Samsung doesn't support exactly the native resolution of the MacBook which is why it looks squashed, but you can see it correctly detected the model. How well does it perform? A good stress test is high-resolution video, which the manual warns you against because it would be choppy. We don't let manuals tell us what to do in this house. Manuals are suggestions. Manuals can sometimes be wrong. Let's play the <a href="http://www.macyourself.com/2008/11/13/grab-the-source-files-for-that-snazzy-leopard-welcome-video/">Snow Leopard welcome video</a> and prove it wrong. (The Snow Leopard welcome video has audio in a separate file, so this comparison movie has no sound.)
</p>
<p>
And, well, the manual wasn't wrong. There is a slight but noticeable lag and there are many dropped frames of video on the mirrored side; the best that could be said is it's watchable. Think "playing YouTube videos over Microsoft Teams screen share" and that would be about right.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi57Gv2DSZcG8frjsnAUX3NAeUc84IO-Lgn_YIOH0VUl4WphGUJoQx5KwHPR6nyQZVmiay8eq4fHVj3k0xwLksRwp9N0zSbHCoOJ1hpWyll9AcjtM8LMTL-Y4KeO5jef4H3DBT6sF8asHnlaWfW_P_iw8AxUdwJa1cIosIkA8zQ8WEYjBIHvAdscf1VKFY/s4080/PXL_20250503_172217419.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi57Gv2DSZcG8frjsnAUX3NAeUc84IO-Lgn_YIOH0VUl4WphGUJoQx5KwHPR6nyQZVmiay8eq4fHVj3k0xwLksRwp9N0zSbHCoOJ1hpWyll9AcjtM8LMTL-Y4KeO5jef4H3DBT6sF8asHnlaWfW_P_iw8AxUdwJa1cIosIkA8zQ8WEYjBIHvAdscf1VKFY/s320/PXL_20250503_172217419.jpg" width="320"></a></p><p>

On the other hand, it does work rather better as a separate monitor you can span to. This was probably its strongest suit, and I could see myself absolutely using it this way were it not for the fact that other things are also too slow. Let's plug that same USB drive in and try copying the 10.6.8 combo installer, which is a 1.09GB file. With the USB thumb drive connected directly to the MacBook, it takes roughly a minute, give or take. (System rebooted between attempts to ensure no caching.)

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjO1LUchkiFuusJFks7kkJdoik78Per9thLLOC-f07VkFkV1J1cRazT8naS9243SYLLITtl2kA9dgqY_9mO3IpdYYxpQsS9fHs9rKhOFQqbATdTi4UM4vaQyS75yoUhPw9xL8shf5LMzV5H0AE6BQ0benjLLfT-epno5KgYVMGldL9-sx4BExv0UKrH8G4/s1280/Screen%20shot%202025-05-03%20at%2010.59.58%20AM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjO1LUchkiFuusJFks7kkJdoik78Per9thLLOC-f07VkFkV1J1cRazT8naS9243SYLLITtl2kA9dgqY_9mO3IpdYYxpQsS9fHs9rKhOFQqbATdTi4UM4vaQyS75yoUhPw9xL8shf5LMzV5H0AE6BQ0benjLLfT-epno5KgYVMGldL9-sx4BExv0UKrH8G4/s320/Screen%20shot%202025-05-03%20at%2010.59.58%20AM.png" width="320"></a></p><p>

With the AT-PCLink, not so much.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEitt8robdGrpZUSVNM8Hpl9NiqcHq7HCPki4Hv-hRtQLww1GwW87RRTz0ySuQPEWCCF3jwDQQ767co8xz7Mk1VYOslLEfIM3T8cxFufTW67EtARUlNPbYQw75gLrDyQcXCFwdyxqe0ONEgaKAeIXSbBxFz6I0qBghdzVS_r3YxIkqg0YB-ULn1kv2Y_4uY/s1280/Screen%20shot%202025-05-03%20at%2011.00.47%20AM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEitt8robdGrpZUSVNM8Hpl9NiqcHq7HCPki4Hv-hRtQLww1GwW87RRTz0ySuQPEWCCF3jwDQQ767co8xz7Mk1VYOslLEfIM3T8cxFufTW67EtARUlNPbYQw75gLrDyQcXCFwdyxqe0ONEgaKAeIXSbBxFz6I0qBghdzVS_r3YxIkqg0YB-ULn1kv2Y_4uY/s320/Screen%20shot%202025-05-03%20at%2011.00.47%20AM.png" width="320"></a></p><p>

Dum de dum.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjdvaukjDdbXVZaipJilVqPCHLWLfBkbzLDDDfFlen8K6Wu2FbMCfQFUwoXIHf1h-T0Ix484ZXtdPEcAi3Lf7JIUALzGtVVFdQKYaE_CqaYvNcKOEnpTpy-TIxz4SzfiG6YFGVF8PMW2PjJ3GJ3HDAO_RI_PGrZGiANW0rsv_b_q4h6Y7flikeY3U3L-WA/s1280/Screen%20shot%202025-05-03%20at%2011.01.39%20AM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjdvaukjDdbXVZaipJilVqPCHLWLfBkbzLDDDfFlen8K6Wu2FbMCfQFUwoXIHf1h-T0Ix484ZXtdPEcAi3Lf7JIUALzGtVVFdQKYaE_CqaYvNcKOEnpTpy-TIxz4SzfiG6YFGVF8PMW2PjJ3GJ3HDAO_RI_PGrZGiANW0rsv_b_q4h6Y7flikeY3U3L-WA/s320/Screen%20shot%202025-05-03%20at%2011.01.39%20AM.png" width="320"></a></p>

<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhGih01M5UVgvcqqhpsj2obNZe6C921jf3SqMb8eOOH0EVHoi1gttTfIjl6868GBBw8931GaHcWaqOOXtL8kicMhtmFPb0WTXPVaTr1rSREafRrP8xrxRWVQ2O9uw2mikGgqmPMpKNAq1yhotNlaVcfNe9M1U_0cwFivbpgI2AhBas3_rZ0CL8WcukbLyA/s1280/Screen%20shot%202025-05-03%20at%2011.09.59%20AM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhGih01M5UVgvcqqhpsj2obNZe6C921jf3SqMb8eOOH0EVHoi1gttTfIjl6868GBBw8931GaHcWaqOOXtL8kicMhtmFPb0WTXPVaTr1rSREafRrP8xrxRWVQ2O9uw2mikGgqmPMpKNAq1yhotNlaVcfNe9M1U_0cwFivbpgI2AhBas3_rZ0CL8WcukbLyA/s320/Screen%20shot%202025-05-03%20at%2011.09.59%20AM.png" width="320"></a></p><p>

The estimated time warbled a bit even though the laptop wasn't moving, and was about six inches from the dock, but was pretty close to the original estimate; my two tries came in at around 10 minutes or roughly 1.9 megabytes (15 megabits) per second in this very unscientific analysis. That's not even close to the promised maximum speed, let alone USB 2.0 directly connected. No wonder these things didn't fly off the shelves.
</p><p>
That said, in my testing the effective range came out better than I thought, even though it remained far short of the promise; it still maintained a connection even around the corner through a couple walls about 10 feet away. Speeds started suffering but it did generally work. When I got down the hall from it, though, the link was lost. It recovered pretty well from this when I moved back into range, considering, but if you stay out of range too long then the Mac may think the devices are gone which is not something you want happening with mounted filesystems.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEioBRWnTOTbqHRXTxfk-VtomYejejK8pZhlGqayH_ibWhXDRT_n84S9aRBPN2_AQm4tO_W_JAztBI6fr8Ee33XWL81qgfG4VpbcbyLngCMoOO85kVrx8Atc09yLRdPTUTkCixrg5UJE2XllCoInWOkGMH4MDE81S_2V14eU9kZIVpdCIG1h5wme2HjoCYI/s4080/PXL_20250503_184442582.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEioBRWnTOTbqHRXTxfk-VtomYejejK8pZhlGqayH_ibWhXDRT_n84S9aRBPN2_AQm4tO_W_JAztBI6fr8Ee33XWL81qgfG4VpbcbyLngCMoOO85kVrx8Atc09yLRdPTUTkCixrg5UJE2XllCoInWOkGMH4MDE81S_2V14eU9kZIVpdCIG1h5wme2HjoCYI/s320/PXL_20250503_184442582.jpg" width="320"></a></p><p>

I'm not going to say much about the TRULink package here except that it also has its own HWA, but unlike Atlona's, its driver lets it associate with other devices and this is supported and documented in the manual. However, I can't tell what chipset it has; the System Profiler identifies it as a "Cables To Go HWA" with vendor $10aa (Cables To Go, TRULink being their brand) and product $0001. Regardless, the Atlona Mac driver will not talk to it. I think their HWA is more professional looking with the screw-on antenna, but that also makes it a bit bulkier than Atlona's HWA, and it only does screen and audio sharing with no USB hub functionality at all — if you want that, you'll have to go get one separately. A nice touch are the PIN association labels and the ability to change them, though the supported PINs are only four digits (cue Spaceballs luggage joke) and the change tool doesn't work in Vista 64-bit.
</p><p>
Were there alternatives to CW-USB at the time other than CF-USB? Surprisingly, at least one, which was sold by two companies. You'll remember I mentioned that when Freescale bailed out on CF-USB Gefen bailed out too, but unlike Belkin Gefen exited UWB completely. Instead, when released in 2007 the revised Gefen Wireless USB Extender, now branded the Gefen Wireless USB <em>2.0</em> Extender, used a much more familiar wireless transport: 802.11g. Yup — it's USB over <em>Wi-Fi</em>.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEio_GDKhtsSj-Iyx27TtRmo313mCt1aQK0R8zFJQ3IAIz37OLjSdemYV0TZbLMX2deNbNXhmy9l2-kNOUSlruRjoULRIUVi04hfDhbxqxGrp55xyt2cDU4oiTVDe_Up4V0-aoMJmq7NDytzk6inZpZ_nXvge8OURZ_6tG8s8-gOlciKFTw5Aq6nhtRFaD0/s4080/PXL_20250503_184733610.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEio_GDKhtsSj-Iyx27TtRmo313mCt1aQK0R8zFJQ3IAIz37OLjSdemYV0TZbLMX2deNbNXhmy9l2-kNOUSlruRjoULRIUVi04hfDhbxqxGrp55xyt2cDU4oiTVDe_Up4V0-aoMJmq7NDytzk6inZpZ_nXvge8OURZ_6tG8s8-gOlciKFTw5Aq6nhtRFaD0/s320/PXL_20250503_184733610.jpg" width="320"></a></p><p>

Completely dispensing with the device-to-device single port original, the 2.0 version was totally redesigned and, with a four-port hub instead, bigger. In a functional sense the new Gefen is yet another dongle-hub kit, except the "dongle" (which Gefen calls the "sender") is the same size as the hub (which Gefen calls the "receiver"), and both also require their own individual power supplies — you'd only have a net reduction in the cables on your desk by moving nearly everything to the receiver. On the other hand, the build quality is excellent and the metal cases are as tough and rugged as its $400 MSRP (about $600 in 2025 dollars).

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhDef4UzX2ntuc5e8rULUGyW1fa9ZA1VyGZCM2v3H2XkRR161PseZ-yo07rXBSmFlsk6_N1kwzed5S14TklYr5uvZeN1sYyaA2C3KfXLZ0kyOQKEXhFX5M1nmHet8F5fCq6O71tk8PpASJqPPt6gPYbgFO-EjF5cM8Wi75HHDA2rrnMpf95xlWlcTkR32w/s3296/icroncfu.jpg"><img alt="" data-original-height="1728" data-original-width="3296" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhDef4UzX2ntuc5e8rULUGyW1fa9ZA1VyGZCM2v3H2XkRR161PseZ-yo07rXBSmFlsk6_N1kwzed5S14TklYr5uvZeN1sYyaA2C3KfXLZ0kyOQKEXhFX5M1nmHet8F5fCq6O71tk8PpASJqPPt6gPYbgFO-EjF5cM8Wi75HHDA2rrnMpf95xlWlcTkR32w/s320/icroncfu.jpg" width="320"></a></p><p>

The Gefen kit, however, is actually a rebadge — of Icron's second attempt at the market, the same Canadian company that created the ExtremeUSB chipset for the doomed original CF-USB units. After the UWB Forum cratered, Icron looked for another wireless option to pair with their chips and found it in 802.11g, creating the Icron WiRanger extender in 2007 which they themselves also sold at retail and licensed to Gefen. Even the physical layout, ports and LEDs are exactly the same; only the case and labels differ, though the Gefen-badged version seems to be more common. Icron calls the sender the LEX ("Local EXtender") and the receiver the REX ("Remote EXtender"). Interestingly, the WiRanger is badged as a "Cable Free USB 2.0 Hub" — no dash, mind you — despite not actually being real Slim Shady Cable-Free USB.
</p><p>
In some ways the new system was less functional than the CF-USB prototype, in some ways more. It remained OS-agnostic and required no new drivers, simply appearing as a regular USB hub to the computer the sender is connected to. Being 802.11g, however, you're still limited to 54 Mbit/sec and indeed half the minimum 110 Mbit/sec claimed by CF-USB, so you might wonder how it can support the full 480 Mbit/s of USB 2.0. The answer is, it doesn't — you get 54 Mbit/s, which all fourteen potentially connected devices must share, and what can't be buffered or retransmitted gets dropped on the ground. Gefen's and Icron's documentation differ on what's not supported — Gefen says no isochronous transfers, Icron says no <em>bulk</em> transfers, and I tend to believe Icron because it's <em>their</em> hardware — but both are clear that high-bandwidth devices like UVC webcams are going to have a bad time: "Icron Technologies Corporation does not guarantee that all USB devices are compatible with the WiRanger and only recommends the product be used with keyboard, mouse, and some flash drives."

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhDv3a1R7c7OKu6tLXWuzEp2vcksYJEzl5fMFk2ocSZHiOvwE0FuSKgYiP35w9oELyaH4PHb_pj9MncPHNbM8mOojghm_HV0A6Ct-eZb_BtqVKSZ-LiHjzB2XoF97bJBpkdLZhLcuRMBb0y-8WzHn_zACX2ARReCfRVTioulZ0WYmFMxuRf4gqqt8ixRZo/s4080/PXL_20250503_200628466.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhDv3a1R7c7OKu6tLXWuzEp2vcksYJEzl5fMFk2ocSZHiOvwE0FuSKgYiP35w9oELyaH4PHb_pj9MncPHNbM8mOojghm_HV0A6Ct-eZb_BtqVKSZ-LiHjzB2XoF97bJBpkdLZhLcuRMBb0y-8WzHn_zACX2ARReCfRVTioulZ0WYmFMxuRf4gqqt8ixRZo/s320/PXL_20250503_200628466.jpg" width="320"></a></p><p>

Unlike CW-USB's association mating ritual, these devices ship paired, or they can be paired in the field by pointing their IR windows at each other to generate a new shared key. The code stays internal to the devices, so you don't have to junk them if someone got your PIN. (You thought your A/C qualified for a tax credit?) Unfortunately, the encryption is limited to achingly insecure 64-bit WEP despite the fact pretty much any 802.11g radio would have supported at least WPA. It can be placed on other 2.4GHz channels to avoid interference and has much better range than the CW-USB transceivers did (about 100 feet), but in this case that would be a minus because now a wardriver could potentially crack into your device traffic and — worse than your nosy neighbour — remotely fuzz your USB stack at will. Fun, huh?

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYGV7RK_ublo5XFAKjgawmhRVt0nSqg6EEnP7YhRDqIjAIc7tazNgO7-RwQUUFq89UuqQQfhvbBpzL9G_TQ8wWSL_FtPPMGpDSx7gHzmjYxaoMzfUOmQrOJTkfatrX6o8siAORf-diR4qxDzCp7RGxA-3QcsoOgVmLCCPCpre-QScNxdy8uxdbNaR2Ws0/s4080/PXL_20250503_012144099.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYGV7RK_ublo5XFAKjgawmhRVt0nSqg6EEnP7YhRDqIjAIc7tazNgO7-RwQUUFq89UuqQQfhvbBpzL9G_TQ8wWSL_FtPPMGpDSx7gHzmjYxaoMzfUOmQrOJTkfatrX6o8siAORf-diR4qxDzCp7RGxA-3QcsoOgVmLCCPCpre-QScNxdy8uxdbNaR2Ws0/s320/PXL_20250503_012144099.jpg" width="320"></a></p><p>

For this go-around, we're going to hook it up to the 15" 1.25GHz iMac G4 running Tiger 10.4.11 hulking near the kitchen. This is the machine I usually do my Palm OS work on since all my old build tools are on it and it's near the Belkin Bluetooth PAN that <a href="http://oldvcr.blogspot.com/2022/05/gopher-on-palm-pilot-and-pitfalls-of.html">some of my devices use</a>.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhknmhUz8BEp12UlkUIYCVpp083K6h9MpX6oPstgkGbG389qrQYKfOjXmpmaOhI2szGEAxCG7WnjLcGCJf1qRywpm8DuN9ZXm7LvHWUG19ry7YQp6e-IQm9zkFvJXki_4kjHXZ9be-QK1ns-1Cceh5vdgrtINKSUa1EE2R4GVmdZ9mkRisNxXEWosQAt60/s1024/Picture%2023.png"><img alt="" data-original-height="768" data-original-width="1024" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhknmhUz8BEp12UlkUIYCVpp083K6h9MpX6oPstgkGbG389qrQYKfOjXmpmaOhI2szGEAxCG7WnjLcGCJf1qRywpm8DuN9ZXm7LvHWUG19ry7YQp6e-IQm9zkFvJXki_4kjHXZ9be-QK1ns-1Cceh5vdgrtINKSUa1EE2R4GVmdZ9mkRisNxXEWosQAt60/s320/Picture%2023.png" width="320"></a></p><p>

Here's the base USB tree before everything comes up.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjOBNlDnGrAc3DNxYyTpczQPNQI0bpQvMXqOFFxwzl6UreW31Hwk0ndbL2XC9GO4tSnG2uCBuWTz216cBLgLu7tcy1Sid-9fS-n4g1UaIog8UDeHB-rAFca-C0n7qDfmWk8v5CVgYmvXg1EHIPOoJAwozqhyphenhyphenxM6Ekqj0m_1csJa0RIe4WenQJYbfU1s2L0/s4080/PXL_20250503_012638562.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjOBNlDnGrAc3DNxYyTpczQPNQI0bpQvMXqOFFxwzl6UreW31Hwk0ndbL2XC9GO4tSnG2uCBuWTz216cBLgLu7tcy1Sid-9fS-n4g1UaIog8UDeHB-rAFca-C0n7qDfmWk8v5CVgYmvXg1EHIPOoJAwozqhyphenhyphenxM6Ekqj0m_1csJa0RIe4WenQJYbfU1s2L0/s320/PXL_20250503_012638562.jpg" width="320"></a></p><p>

When the receiver and sender are in range of each other, they will automatically link. This can take up to thirty seconds according to the manual, but here it took about ten.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhK_B1j9n6zO92i9ZC4PTJNQ427pUC73SegmRk7s0_qKxxr7l4IX-1AwCjC_AIO32IBOT0lnXt6zRYint3Iqd47MwvufhEILjwcon_17adZPI0ZgQ01QYgDkwtPqQO8kndO-II3mmqJdocY5wbLnMtO83QKJ4N1281I0NAWJW8UxjTcKESOVduAw9izgC4/s1024/Picture%2024.png"><img alt="" data-original-height="768" data-original-width="1024" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhK_B1j9n6zO92i9ZC4PTJNQ427pUC73SegmRk7s0_qKxxr7l4IX-1AwCjC_AIO32IBOT0lnXt6zRYint3Iqd47MwvufhEILjwcon_17adZPI0ZgQ01QYgDkwtPqQO8kndO-II3mmqJdocY5wbLnMtO83QKJ4N1281I0NAWJW8UxjTcKESOVduAw9izgC4/s320/Picture%2024.png" width="320"></a></p><p>

At that point, a new hub appears, like any other USB hub. That's all there is to it.
</p><p>
I wanted to do some performance tests with it, but strangely macOS Sequoia will not recognize the sender when connected to my M1 MacBook Air, even though it worked fine connected to the Raptor POWER9 in Fedora 41 and was seen as a hub there too. So we'll do the tests on the MacBook as well, which also had no problem seeing and using the pair. Again, we'll just copy that same 1.09GB combo installer and see how long it takes.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhx9XeFsG_5GqjYLwgI60Qf6wEwOYKL3QJZB70BvKw8bfY59ifEVlK0YBX2RZZZO2RRpVBpaseXqEAsWeCh-EXQzl-JsKxaPZcLuQjK9n9cnxEvQEHNP_orr4TAq9aKTPpcfemHYmBUqmYJYjqYy6C_bYhh-RQqlO61Op0vPkR_PmUpXKMJ29ErvXbHwHw/s1280/Screen%20shot%202025-05-03%20at%2010.43.59%20AM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhx9XeFsG_5GqjYLwgI60Qf6wEwOYKL3QJZB70BvKw8bfY59ifEVlK0YBX2RZZZO2RRpVBpaseXqEAsWeCh-EXQzl-JsKxaPZcLuQjK9n9cnxEvQEHNP_orr4TAq9aKTPpcfemHYmBUqmYJYjqYy6C_bYhh-RQqlO61Op0vPkR_PmUpXKMJ29ErvXbHwHw/s320/Screen%20shot%202025-05-03%20at%2010.43.59%20AM.png" width="320"></a></p><p>

Because it's a 54Mbit/s radio, I was prepared to see it take substantially longer than the Atlona, but it came up with an 11-minute estimate ...

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgGevBVqFheiDjc00mpByk6AFAym_L5dkjFK2zhUD9Y-oziaoKC_rYnKvpS90EyZf-GRIPWlSpA2QAKRpcIaQ-dp_V1gT9dDY8lFVGDPb7aJnJKnfHsqQClxKe5xGwabKTLreOJLDaDpR85mov6yjN-BVOqDnenV2fkeASudHtfGz25nUQEe6g6UNX4ZVg/s1280/Screen%20shot%202025-05-03%20at%2010.54.50%20AM.png"><img alt="" data-original-height="800" data-original-width="1280" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgGevBVqFheiDjc00mpByk6AFAym_L5dkjFK2zhUD9Y-oziaoKC_rYnKvpS90EyZf-GRIPWlSpA2QAKRpcIaQ-dp_V1gT9dDY8lFVGDPb7aJnJKnfHsqQClxKe5xGwabKTLreOJLDaDpR85mov6yjN-BVOqDnenV2fkeASudHtfGz25nUQEe6g6UNX4ZVg/s320/Screen%20shot%202025-05-03%20at%2010.54.50%20AM.png" width="320"></a></p><p>

... and took 11 minutes with the sender about three feet away from the receiver. That's not much slower than the Atlona, which supposedly could do the full 480Mbit/s at that short distance yet here it never did. Let's try the watch now.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgCU1mpjKN0qCepqs1VHbN1zv-fVVg2PMBKKaZIaCDPSsQcyaFODQt9bF_PcdJI8a9Vk3xW6LOYnH7dg6EfiUh06PesuGV1E1XpZE6tqUYge5P16sDn-c9D-7Ilfo2kb5b-avsCB1oKJo3buj8Du_08BYq2xjIwOkxw77sUG7_MZ6-UqIKFTz2Ez-VMi58/s4080/PXL_20250503_015026885.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgCU1mpjKN0qCepqs1VHbN1zv-fVVg2PMBKKaZIaCDPSsQcyaFODQt9bF_PcdJI8a9Vk3xW6LOYnH7dg6EfiUh06PesuGV1E1XpZE6tqUYge5P16sDn-c9D-7Ilfo2kb5b-avsCB1oKJo3buj8Du_08BYq2xjIwOkxw77sUG7_MZ6-UqIKFTz2Ez-VMi58/s320/PXL_20250503_015026885.jpg" width="320"></a></p><p>

Kicking off a HotSync with the watch connected to the receiver. Here we're using </p><tt>pilot-xfer</tt><p> from the command line instead of Palm Desktop.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjzn7ByYdCnFxwP9KNwNboMbTnjyNrAev5nYEZefpuMlarKIEYXsshQawzseTtPMT-9v7SiiN4gogrmVagaK7IZTI9oWlCZgSg5tWHTrEAvugeu5T5jjPSjZQxKQhUKLtyiLuSukvSzefkhpsmakV6X6pkLhxxu4cU1SHzQn8Hd6NOOPoIMqIo3Lo4M39c/s1024/Picture%2026.png"><img alt="" data-original-height="768" data-original-width="1024" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjzn7ByYdCnFxwP9KNwNboMbTnjyNrAev5nYEZefpuMlarKIEYXsshQawzseTtPMT-9v7SiiN4gogrmVagaK7IZTI9oWlCZgSg5tWHTrEAvugeu5T5jjPSjZQxKQhUKLtyiLuSukvSzefkhpsmakV6X6pkLhxxu4cU1SHzQn8Hd6NOOPoIMqIo3Lo4M39c/s320/Picture%2026.png" width="320"></a></p><p>

This isn't particularly fast, even at close range. It transfered 1777K in 132 seconds, i.e., 13.46KB/sec (107.68Kbit/sec). Compared to a wired sync it's about ten times slower, and transmission tended to be rather bursty. Still, it completed successfully.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjH59Xc3vzykqFM9_icevqX53Cxw3neJ68TqVrZ_swzha_YHpCloRR1pxRefTeeaC39_tALYEOT4koCO20dfyTvNJxabMUEV1LKiHCLmvwYMwgQLhSfWQMGQOewIwocKoKEApVTChYNkttJCh3-KQK74LgzQVehsETyEeggiCycf_lAFAj5f1E4MESPIkI/s1024/Picture%2027.png"><img alt="" data-original-height="768" data-original-width="1024" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjH59Xc3vzykqFM9_icevqX53Cxw3neJ68TqVrZ_swzha_YHpCloRR1pxRefTeeaC39_tALYEOT4koCO20dfyTvNJxabMUEV1LKiHCLmvwYMwgQLhSfWQMGQOewIwocKoKEApVTChYNkttJCh3-KQK74LgzQVehsETyEeggiCycf_lAFAj5f1E4MESPIkI/s320/Picture%2027.png" width="320"></a></p><p>

So let's try for the brass ring and have the watch completely networked through the iMac, since it's already set up to provide PPP-over-USB to a connected device. We'll use the trusty USB-TCP Bridge here, with its code modified for the Fossil's product and vendor IDs, though you could also use <a href="http://oldvcr.blogspot.com/2025/04/lets-give-provenix-barely-adequate-pre.html">Slirp</a> or </p><a href="http://oldvcr.blogspot.com/2023/06/o-brother-geobook-lets-get-thou-back-on.html"><tt>usb2ppp</tt></a><p>. 

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEicn2RPG2ZVfg5Hh0q_xSNBJtu5psr5uQ6G_3I_xHp3-nX13ElIo3eWd3V1bOu88rqQKZ193ZU1LGF-3qkif8W2uiMhneadbelRpI4imf7W-IU3I0AGV1bEs_c-eV3SW-JM0A3ouco7_Rt3CH-xsLMNtVvGkjydQd4KmPnoeGf0J0As6xjWa8oOrA99GUQ/s4080/PXL_20250503_020105621.jpg"><img alt="" data-original-height="3072" data-original-width="4080" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEicn2RPG2ZVfg5Hh0q_xSNBJtu5psr5uQ6G_3I_xHp3-nX13ElIo3eWd3V1bOu88rqQKZ193ZU1LGF-3qkif8W2uiMhneadbelRpI4imf7W-IU3I0AGV1bEs_c-eV3SW-JM0A3ouco7_Rt3CH-xsLMNtVvGkjydQd4KmPnoeGf0J0As6xjWa8oOrA99GUQ/s320/PXL_20250503_020105621.jpg" width="320"></a></p><p>

I'm able to trigger PPP from the watch in the other room and surf Gopherspace from the watch, just <a href="http://oldvcr.blogspot.com/2023/09/the-fossil-wrist-pda-becomes-tiny.html">as before</a>. It actually doesn't feel much different in terms of speed from a direct connect and I didn't find it particularly unstable. Of what we've explored here, the Gefen box seems the least complicated solution, though the receiver pulled a bit more battery power and of course you'd need a host around to connect through. As such I'm still using the "Raspberry Pi in a camera bag" notion for the time being, but it's nice to see it can work other ways.
</p><p>
My experience with the Gefen/Icron extender was generally consistent with other reviews that found it adequate for undemanding tasks <a href="https://www.mymac.com/gefen-wireless-2-0-usb-extender-review/">like printing</a>. However, it doesn't look like either Icron or Gefen sold many of them, likely due to their unattractive price tag. Icron did announce plans for a much faster wireless USB solution on the 60GHz band using 802.11ad, which with its 7 Gbit/s capacity would easily handle USB 2.0 and even 5 Gbit/s 3.0, but it doesn't seem like the device was ever offered for sale. (A couple people have mentioned to me that there were other ≥802.11ad wireless USB products out there, including WiGig. Their bandwidth was reportedly more than sufficient for video but I don't have any of those devices here, and they are better understood as Wi-Fi routers that also do USB device sharing.) Although Icron still <a href="https://www.icron.com/product-category/usb-extenders/">sells extenders</a>, now as a division of Analog Devices, all of their current products are wired-only.
</p><p>
As for CW-USB, by 2008 few laptops on the market offered the feature, and even for those that did like the Lenovo ThinkPad X200, it was always an extra option. That meant most computers that wanted to connect to a CW-USB device still needed a HWA-dongle, so they still took up a port, and HWAs never got produced in enough numbers to be cheap. On top of that, it further didn't help matters that anything close to the promised maximum bandwidth was hardly ever observed in real-world situations. Device makers, meanwhile, mostly chose to wait out greater availability of CW-USB capable computers, and since that never happened, neither a large number of computers with built-in CW-USB nor CW-USB devices were ever made before the standard was abandoned.
</p><p>
The last stand of UWB as a device interconnect was ironically as a proposal for Bluetooth 3.0+HS, the 2009 optional high-data-rate specification. 3.0+HS introduced AMP (Alternative MAC/PHY) as a bolt-on method, in which low-speed Bluetooth would be used to set up a link and then the high-speed data exchange would occur over the second transport, originally MB-OFDM. With CW-USB fading from the market, however, the WiMedia Alliance closed its doors in 2009 and shed its existing work to the USB-IF, the W-USB Promoter Group and the Bluetooth SIG. This move was controversial with some WiMedia members, who consequently refused to grant access to their intellectual property to the new successor groups, and instead AMP ended up being based on 802.11 as well. The AMP extension was little used and eventually removed in Bluetooth 5.3.
</p><p>
Is there a moral to this story? I'm not quite certain. As so often happens, the best technology didn't win; in my eyes CF-USB had the potential for being more widely adopted because of its simplicity and compatibility, but was ruined when Freescale got greedy and it never recovered. That said, the real question is whether wireless USB <em>itself</em>, with all of its broken promises, was the right approach for the WPAN concept. It's certainly not an indictment of ultra wideband, which is used today more than ever before: many chips are still produced that implement it, the best known undoubtedly being Apple's U1 and U2 chips in iOS and iOS-adjacent devices like the AirTag, and such chips continue to be widely used for things such as precise location fixing and local interactions. UWB has also been used for diverse tasks like tracking NFL players during games or parts during factory assembly, and for autonomous vehicles in particular it's extremely useful.

</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjmwpFFd2dcHS4nkKKfSxPLbor4S18Louz5yFNUr5XxVPnc7CIupVFVU1xZnGACwFhLVp8CD5T-1O4QA1rVZmqiVrlgzfsK9mxbYqM-D-7Kmf7My_iiNQAy7DEbda2BdfrZdYzwyNRQBVIKlFEVD-DK_WvlL5oSAPfH4eeK3lJ0EAh47kSxtNeM2Dki2PA/s2048/IMG_0062_20250503_133506.jpg"><img alt="" data-original-height="1536" data-original-width="2048" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjmwpFFd2dcHS4nkKKfSxPLbor4S18Louz5yFNUr5XxVPnc7CIupVFVU1xZnGACwFhLVp8CD5T-1O4QA1rVZmqiVrlgzfsK9mxbYqM-D-7Kmf7My_iiNQAy7DEbda2BdfrZdYzwyNRQBVIKlFEVD-DK_WvlL5oSAPfH4eeK3lJ0EAh47kSxtNeM2Dki2PA/s320/IMG_0062_20250503_133506.jpg" width="320"></a></p><p>

However, the use of ultra wide-band for high-bandwidth applications has yet to return, and probably the biggest reason is because Bluetooth and Wi-Fi now exceed any throughput and ease-of-use promises made by available UWB silicon. Heck, almost all the pictures in this article were pushed from my Pixel 7 Pro to the M1 MacBook Air via Quick Share, in a way not unlike AMP: Bluetooth is used to identify nearby devices on the same Wi-Fi network, and, if available, Wi-Fi is used to push the data. AirDrop, too, by using Bluetooth to create a peer-to-peer Wi-Fi link. Printers speak Wi-Fi now and so do many cameras, scanners and multi-function office devices, and low bandwidth HIDs like most of today's wireless keyboards, mice or game controllers can all connect with Bluetooth. It turns out that the promise of the WPAN came true after all, slowly and gradually through the evolution of existing technologies, <em>without</em> wireless USB — and we just never noticed.
</p><p>
Maybe <em>that's</em> the moral.
</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pascal for Small Machines (106 pts)]]></title>
            <link>http://pascal.hansotten.com/</link>
            <guid>43883747</guid>
            <pubDate>Sun, 04 May 2025 01:27:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://pascal.hansotten.com/">http://pascal.hansotten.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43883747">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="wrap">

	
    <!-- #masthead-wrap -->

    
            

    

    
        <!-- End Flexslider -->



        
            <p>

                <h3>The School of Wirth</h3>
                
                
            </p>

        <!-- End Promo Bar -->

    

	<div id="main">
         <div>

            <ol>
                <li><a title="Home" href="http://pascal.hansotten.com/"><span>Home</span></a><span>»</span></li>
                </ol>
        </div>    
    
    
        
    
 
			<div id="content" role="main">

				
					
<article id="post-2" class="page">
	<!-- .entry-header -->

	<div>
		<div id="smooth_slider_recent"><p>News</p> <div><div>
			<!-- smooth_slideri --><p><a href="http://pascal.hansotten.com/2025/01/24/oberon-pi/" title="Oberon Pi"><img decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2025/01/2025-01-20-154012_1920x1080_scrot-1024x576.png" alt="Oberon Pi" width="165" height=""></a></p><p><span> Oberon, the jewel by Niklaus Wirth and Jürg Gutknecht: Operating System, Compiler and Computer.

Oberon Pi is a port of Peter ...</span></p><p><a href="http://pascal.hansotten.com/2025/01/24/oberon-pi/">Read More</a></p>
			
				<!-- /smooth_slideri -->
			</div><div>
			<!-- smooth_slideri --><h2><a href="http://pascal.hansotten.com/2024/08/11/2643/"></a></h2><p><span> Additions to the Jim Welsh pages, Queen’s University Belfast and Emerate Professor at The University of Queensland Brisbane, School of ...</span></p><p><a href="http://pascal.hansotten.com/2024/08/11/2643/">Read More</a></p>
			
				<!-- /smooth_slideri -->
			</div><div>
			<!-- smooth_slideri --><p><a href="http://pascal.hansotten.com/2024/03/23/pascal-vu-compiler/" title="Pascal-VU compiler"><img decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2024/03/EM-Architecture-IR-54.jpg" alt="Pascal-VU compiler" width="165" height=""></a></p><h2><a href="http://pascal.hansotten.com/2024/03/23/pascal-vu-compiler/">Pascal-VU compiler</a></h2><p><span> During my study at the VU Amsterdam in 1979, 1980 I worked with the Pascal-VU compiler. A full ISO standard ...</span></p><p><a href="http://pascal.hansotten.com/2024/03/23/pascal-vu-compiler/">Read More</a></p>
			
				<!-- /smooth_slideri -->
			</div><div>
			<!-- smooth_slideri --><p><a href="http://pascal.hansotten.com/2024/03/23/pascal-m-updates/" title="Pascal-M updates"><img decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2024/03/pascalmscreenshot.jpg" alt="Pascal-M updates" width="165" height=""></a></p><h2><a href="http://pascal.hansotten.com/2024/03/23/pascal-m-updates/">Pascal-M updates</a></h2><p><span> New developments for Pascal-M:

Pascal-M for Flex OS on 6809 , 1980, source of compiler (in Pascal-M) and intepreter (6809 assembler ...</span></p><p><a href="http://pascal.hansotten.com/2024/03/23/pascal-m-updates/">Read More</a></p>
			
				<!-- /smooth_slideri -->
			</div></div>
			
</div>
<p><img fetchpriority="high" decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2016/01/DSC_3541-350x233.jpg" alt="DSC_3541" width="350" height="233" srcset="http://pascal.hansotten.com/wp-content/uploads/2016/01/DSC_3541-350x233.jpg 350w, http://pascal.hansotten.com/wp-content/uploads/2016/01/DSC_3541-150x100.jpg 150w, http://pascal.hansotten.com/wp-content/uploads/2016/01/DSC_3541-1024x682.jpg 1024w, http://pascal.hansotten.com/wp-content/uploads/2016/01/DSC_3541-2x1.jpg 2w, http://pascal.hansotten.com/wp-content/uploads/2016/01/DSC_3541.jpg 2000w" sizes="(max-width: 350px) 100vw, 350px"><br>
This site is about my experience with the Wirth school of languages, based on the ideas and implementations of Prof Niklaus Wirth, Kenneth Bowles, Per Brinch Hansen,&nbsp;colleagues,&nbsp;and their students. And my experience with the various variants, from the P2 and P4 compilers originating in Zürich ETH, via UCSD Pascal P-System to the Borland compilers and Modula and Oberon systems. All applicable to small computers and device control.</p>
<p>On this website you will find information on Pascal for small machines, like Wirth compilers, the UCSD Pascal system, many scanned books and other files on UCSD Pascal,&nbsp;Pascal on MSX and CP/M, Delphi programming on PC, Freepascal and Lazarus on Windows and Raspberry Pi, Oberon systems. Many sources of early Pascal compilers! A<a href="http://pascal.hansotten.com/px-descendants/pascal-m/">nd last but not least my Pascal-M system</a>!</p>

<!-- Page-list plugin v.5.7 wordpress.org/plugins/page-list/ -->
<!-- no pages to show -->
<p>On this site you will information on (see the menu on the right!)<br>
– <a href="http://pascal.hansotten.com/standard-pascal-and-validation/">Standard Pascal and Validation</a><br>
– <a href="http://pascal.hansotten.com/niklaus-wirth/">Niklaus Wirth</a><br>
– <a href="http://pascal.hansotten.com/edsger-dijkstra/">Edsger Dijkstra</a><br>
– <a href="http://pascal.hansotten.com/per-brinch-hansen/">Per Brinch Hansen</a><br>
– <a href="http://pascal.hansotten.com/hoare/">Ca.A.R Hoare</a><br>
– <a href="http://pascal.hansotten.com/jim-welsh/">Jim Welsh</a><br>
–<a href="http://pascal.hansotten.com/px-descendants/"> Pascal Px descendants like P5 and Pascal-M</a><br>
– <a href="http://pascal.hansotten.com/ucsd-p-system/">UCSD Pascal</a><br>
– Other Pascal articles like<a href="http://pascal.hansotten.com/freepascal-and-lazarus-on-raspberry-pi/"> Freepascal on Raspberry Pi,</a> <a href="http://pascal.hansotten.com/delphi/">Turbo Pascal and Delphi and electronics</a></p>
<p>Timeline of my exposure to the Wirth language and OS and systems family, 5 years as student, 10 years as software engineer, hobby, 40 years as the way of programming!</p>
<ul>
<li><img decoding="async" src="http://pascal.hansotten.com/wp-content/uploads/2016/01/WIRTH-1-350x233.jpg" alt="WIRTH (1)" width="350" height="233" srcset="http://pascal.hansotten.com/wp-content/uploads/2016/01/WIRTH-1-350x233.jpg 350w, http://pascal.hansotten.com/wp-content/uploads/2016/01/WIRTH-1-150x100.jpg 150w, http://pascal.hansotten.com/wp-content/uploads/2016/01/WIRTH-1-2x1.jpg 2w, http://pascal.hansotten.com/wp-content/uploads/2016/01/WIRTH-1.jpg 600w" sizes="(max-width: 350px) 100vw, 350px">1970- Pascal compilers, the P2-P4 compilers, Pascal-S, Pascal-VU (the forerunnner of the Amsterdam Compiler Kit), Andrew Tanenbaum, Professor R.P &nbsp;van de Riet.</li>
<li> 1979 – Pascal-M</li>
<li>1980 – UCSD P-System, HP Pascal 1000</li>
<li>1983  – RSX-11M  VMS Pascal
</li><li>1985 Turbo Pascal, , 10 years VAX/VMS Pascal programmer, teacher of the Teleac support course Pascal, teacher and examinator Exin/Novi T5 Pascal</li>
<li>1990 – Turbo Pascal 3 on CP/M and MS DOS to Delphi on Windows</li>
<li>2010 – Freepascal + Lazarus on Windows and Linux</li>
</ul>

<!-- Page-list plugin v.5.7 wordpress.org/plugins/page-list/ -->

		        <!-- .entry-meta -->
	</div><!-- .entry-content -->
</article><!-- #post-2 -->

					
				
			</div><!-- #content .site-content -->
		</div><!-- #main .site-main -->

	<!-- #colophon .site-footer -->


    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Gorgeous-GRUB: collection of decent community-made GRUB themes (402 pts)]]></title>
            <link>https://github.com/Jacksaur/Gorgeous-GRUB</link>
            <guid>43883040</guid>
            <pubDate>Sat, 03 May 2025 22:57:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Jacksaur/Gorgeous-GRUB">https://github.com/Jacksaur/Gorgeous-GRUB</a>, See on <a href="https://news.ycombinator.com/item?id=43883040">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">🚀 Intro</h2><a id="user-content--intro" aria-label="Permalink: 🚀 Intro" href="#-intro"></a></p>
<p dir="auto">There are many great community made GRUB themes to spice up your bootloader before booting into your system proper. Unfortunately, they're spread across multiple sites and it can be difficult to find good ones. As another user told me, the majority of themes on Pling (the largest host of GRUB themes currently) are fairly low effort and can be boring to trawl through. Hence, I decided to put together this page to bring attention to some decent themes I've found around the internet over time. They aren't all absolute masterpieces of course: But they've all at least had a fair amount of effort put into them, with custom backgrounds, fonts, and colours.</p>
<p dir="auto">And don't forget, <strong>themes are extremely easy to customize!</strong> Like a theme's layout but prefer a different background? Just replace the image in its folder with one of your own. Don't like the positioning of a theme's elements? Open the theme.txt and change their values. Want a different colour scheme? They're all set by HEX Values, which you can swap out in seconds. You can even convert almost any font to the type GRUB uses with the grub-mkfont command, then change the <code>item_font</code> line in the theme.txt to use it.
There's loads of potential for customization, you just have to work creatively around the limitations.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🌟 Useful Links</h2><a id="user-content--useful-links" aria-label="Permalink: 🌟 Useful Links" href="#-useful-links"></a></p>
<p dir="auto"><a href="https://kinolien.github.io/gitzip/" rel="nofollow">GitZip</a> - Download individual folders and files from Github repositories without having to download the entire repo. Asks for a Token, but seems to work without just fine.</p>
<p dir="auto"><a href="https://github.com/VandalByte/grub-tweaks">GRUB-Tweaks</a> - Multiple guides on various tweaks and additions you can make to further customize, or repair, your GRUB install.</p>
<p dir="auto"><a href="http://web.archive.org/web/20241209100014/http://wiki.rosalab.ru/en/index.php/Grub2_theme_tutorial" rel="nofollow">Theme Tutorial</a> and <a href="http://web.archive.org/web/20241209094940/http://wiki.rosalab.ru/en/index.php/Grub2_theme_/_reference" rel="nofollow">Theme References</a> - Pretty complex, but the best set of information I've managed to find so far. It may be easier to start by taking an existing theme and making edits to it yourself, rather than diving straight in and starting from scratch.</p>
<p dir="auto"><a href="https://github.com/Jacksaur/GRUB-Background-Cycler">Background Cycler</a> - Script I made that will cycle a theme to a different background each time your system is rebooted. The Cron job can be modified to run at specific amounts of time instead if desired.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🛠️ <a href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Installation.md">Installing a theme</a></h2><a id="user-content-️-installing-a-theme" aria-label="Permalink: 🛠️ Installing a theme" href="#️-installing-a-theme"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">👍 <a href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Contributing.md">How to contribute</a></h2><a id="user-content--how-to-contribute" aria-label="Permalink: 👍 How to contribute" href="#-how-to-contribute"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🎨 Themes</h2><a id="user-content--themes" aria-label="Permalink: 🎨 Themes" href="#-themes"></a></p>
<blockquote>
<p dir="auto">If you like a theme, please do consider giving it a rating on Pling or starring its repo on Github. It's very rare for anyone to rate on Pling and that's half the reason good themes are so hard to find. Plus, it always feels nice to see that people are enjoying the product you created.</p>
</blockquote>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Minegrub.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Minegrub.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Descent.jpg"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Descent.jpg" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/SteamOS.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/SteamOS.png" width="247"></a></td>
</tr>
<tr>
<td><strong><a href="https://github.com/Lxtharia/minegrub-theme">Minegrub (Cycling Text)</a> + <a href="https://github.com/Lxtharia/double-minegrub-menu">Combined Version!</a></strong></td>
<td><a href="https://www.pling.com/p/1000083/" rel="nofollow"><strong>Descent</strong></a></td>
<td><a href="https://github.com/LegendaryBibo/Steam-Big-Picture-Grub-Theme"><strong>SteamOS (Personalized)</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Virtuaverse.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Virtuaverse.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Yorha.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Yorha.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/CRT-Amber.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/CRT-Amber.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://github.com/Patato777/dotfiles/tree/main/grub"><strong>Virtuaverse</strong></a></td>
<td><a href="https://github.com/OliveThePuffin/yorha-grub-theme"><strong>YoRHa</strong></a></td>
<td><a href="https://www.pling.com/p/1727268/" rel="nofollow"><strong>CRT-Amber</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Minegrub-World.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Minegrub-World.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Dedsec.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Dedsec.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Sekiro.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Sekiro.png" width="247"></a></td>
</tr>
<tr>
<td><strong><a href="https://github.com/Lxtharia/minegrub-world-sel-theme">Minegrub World Select</a> + <a href="https://github.com/Lxtharia/double-minegrub-menu">Combined Version!</a></strong></td>
<td><a href="https://www.pling.com/p/1569525/" rel="nofollow"><strong>DedSec (Set)</strong></a></td>
<td><a href="https://github.com/semimqmo/sekiro_grub_theme"><strong>Sekiro</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/HyperFluent.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/HyperFluent.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Persona5.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Persona5.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/ULTRAKILL.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/ULTRAKILL.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/2133341/" rel="nofollow"><strong>HyperFluent (Set)</strong></a></td>
<td><a href="https://www.pling.com/p/2122684" rel="nofollow"><strong>Persona 5 Royal (Set)</strong></a></td>
<td><a href="https://www.pling.com/p/2217746" rel="nofollow"><strong>ULTRAKILL</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Framework.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Framework.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Sayonara.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Sayonara.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/LiteMint.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/LiteMint.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://github.com/HeinrichZurHorstMeyer/Framework-Grub-Theme"><strong>Framework</strong></a></td>
<td><strong><a href="https://github.com/samoht9277/dotfiles/tree/55455eec2c2df83be5373b1095915bb7086b1dab/grub/themes/sayonara">Sayonara</a> + <a href="https://www.dropbox.com/s/il0dxjq5u65t0pt/Font.zip?dl=0" rel="nofollow">Improved Font</a></strong></td>
<td><a href="https://www.pling.com/p/1906415" rel="nofollow"><strong>Neumorphic</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Crossgrub.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Crossgrub.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Arcade.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Arcade.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/DOOM.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/DOOM.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://github.com/krypciak/crossgrub"><strong>Crossgrub</strong></a></td>
<td><a href="https://github.com/nobreDaniel/dotfile"><strong>Arcade</strong></a></td>
<td><a href="https://github.com/Lxtharia/doomgrub-theme"><strong>DOOM</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/OldBIOS.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/OldBIOS.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Wuthering_Waves.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Wuthering_Waves.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Graphite.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Graphite.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/2072033" rel="nofollow"><strong>OldBIOS</strong></a></td>
<td><a href="https://www.pling.com/p/2184155" rel="nofollow"><strong>Wuthering Waves (Set)</strong></a></td>
<td><a href="https://www.pling.com/p/1676418/" rel="nofollow"><strong>Graphite</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Linux_Mind.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Linux_Mind.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Fallout.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Fallout.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/CyberEXS.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/CyberEXS.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1397139/" rel="nofollow"><strong>Linux Mind</strong></a></td>
<td><a href="https://www.pling.com/p/1230882/" rel="nofollow"><strong>Fallout</strong></a></td>
<td><a href="https://www.pling.com/p/1968990" rel="nofollow"><strong>CyberEXS</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Dark_Matter.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Dark_Matter.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Aero.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Aero.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Elegant.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Elegant.gif" width="247" data-animated-image=""></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1603282/" rel="nofollow"><strong>Dark Matter (Set)</strong></a></td>
<td><a href="https://github.com/mcarneir0/Aero-GRUB2-Theme"><strong>Aero</strong></a></td>
<td><a href="https://github.com/vinceliuice/Elegant-grub2-themes"><strong>Elegant (Big Set!)</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Cyberpunk2077.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Cyberpunk2077.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/CyberRe.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/CyberRe.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Cyberpunk.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Cyberpunk.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1515662/" rel="nofollow"><strong>Cyberpunk 2077</strong></a></td>
<td><a href="https://www.pling.com/p/1420727/" rel="nofollow"><strong>CyberRe</strong></a></td>
<td><a href="https://www.pling.com/p/1429443/" rel="nofollow"><strong>Cyberpunk</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Standby.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Standby.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Axiom.jpg"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Axiom.jpg" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Solarized-Dark.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Solarized-Dark.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1172610/" rel="nofollow"><strong>Standby</strong></a></td>
<td><a href="https://github.com/user-attachments/files/17193972/Axiom.tar.gz"><strong>Axiom</strong></a></td>
<td><a href="https://www.pling.com/p/1177401/" rel="nofollow"><strong>Solarized-Dark</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Retro_GRUB.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Retro_GRUB.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/BigSur.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/BigSur.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Distro.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Distro.gif" width="247" data-animated-image=""></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1568741/" rel="nofollow"><strong>Retro GRUB</strong></a></td>
<td><a href="https://www.pling.com/p/1443844/" rel="nofollow"><strong>BigSur</strong></a></td>
<td><a href="https://www.pling.com/p/1482847/" rel="nofollow"><strong>Distro Themes (Set)</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Poly.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Poly.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Atomic.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Atomic.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Plasma.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Plasma.gif" width="247" data-animated-image=""></a></td>
</tr>
<tr>
<td><strong>Poly (<a href="https://www.pling.com/p/1176413/" rel="nofollow">Light</a>/<a href="https://www.pling.com/p/1230780/" rel="nofollow">Dark</a>)</strong></td>
<td><a href="https://www.pling.com/p/1200710/" rel="nofollow"><strong>Atomic</strong></a></td>
<td><strong>Plasma (<a href="https://www.pling.com/p/1197062/" rel="nofollow">Light</a>/<a href="https://www.pling.com/p/1195799/" rel="nofollow">Dark</a>)</strong></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/BSOL.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/BSOL.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Sleek.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Sleek.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Grubby_Terminal.jpg"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Grubby_Terminal.jpg" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.github.com/harishnkr/bsol"><strong>BSOL</strong></a></td>
<td><a href="https://www.pling.com/p/1414997/" rel="nofollow"><strong>Sleek (Set + Personalized)</strong></a></td>
<td><a href="https://gitlab.com/perthshiretim/grubby-terminal" rel="nofollow"><strong>Grubby Terminal</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Billys_Agent.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Billys_Agent.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Matter.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Matter.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Modern.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Modern.gif" width="247" data-animated-image=""></a></td>
</tr>
<tr>
<td><a href="https://gitlab.com/Drorago/billys-agent-grub2-theme" rel="nofollow"><strong>Billy's Agent</strong></a></td>
<td><a href="https://github.com/mateosss/matter#download"><strong>Matter (Customizable)</strong></a></td>
<td><a href="https://github.com/vinceliuice/grub2-themes"><strong>Modern Design Themes (Set)</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Deadora.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Deadora.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Breeze.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Breeze.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/GutsBlack-ArchLinux.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/GutsBlack-ArchLinux.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.deviantart.com/glacto/art/Deadora-600784822" rel="nofollow"><strong>Deadora</strong></a></td>
<td><a href="https://www.pling.com/p/1000111/" rel="nofollow"><strong>Breeze</strong></a></td>
<td><a href="https://forums.archlinux.fr/viewtopic.php?t=11361" rel="nofollow"><strong>Gutsblack Archlinux</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/CyberXero.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/CyberXero.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/GTG.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/GTG.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Catppuccin.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Catppuccin.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1502415/" rel="nofollow"><strong>CyberXero</strong></a></td>
<td><a href="https://www.gnome-look.org/p/2064031" rel="nofollow"><strong>Grand Theft Gentoo</strong></a></td>
<td><a href="https://github.com/catppuccin/grub"><strong>Catppuccin (Set)</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/CyberGRUB-2077.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/CyberGRUB-2077.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Placeholder.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Placeholder.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Placeholder.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Placeholder.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://github.com/adnksharp/CyberGRUB-2077"><strong>CyberGRUB-2077</strong></a></td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
</article></div></div>]]></description>
        </item>
    </channel>
</rss>