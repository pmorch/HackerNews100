<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 04 Jul 2023 05:00:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Leaking Bitwarden's Vault with a Nginx vulnerability (242 pts)]]></title>
            <link>https://labs.hakaioffsec.com/nginx-alias-traversal/</link>
            <guid>36580417</guid>
            <pubDate>Mon, 03 Jul 2023 23:56:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://labs.hakaioffsec.com/nginx-alias-traversal/">https://labs.hakaioffsec.com/nginx-alias-traversal/</a>, See on <a href="https://news.ycombinator.com/item?id=36580417">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
        <p>Nginx, a versatile web server pivotal to numerous internet infrastructures, has held a dominant market share since its inception in 2004, with widespread adoption across websites and Docker containers. This article delves into the intricacies of Nginx, focusing on the location and alias directives that are central to how Nginx handles specific URLs. We also explore potential vulnerabilities arising from misconfigurations and demonstrate how they can lead to security exploits, drawing on research presented at the BlackHat 2018 conference by Orange Tsai.</p><p>The guide further illustrates these points through a thorough examination of popular open-source repositories using GitHub Code Search to identify potential Nginx configuration vulnerabilities. Real-world case studies involving Bitwarden and Google's HPC Toolkit highlight the significant risk of data exposure if these vulnerabilities are not addressed. Additionally, we introduce NavGix, an automated tool designed to detect these vulnerabilities in a black-box manner, providing comprehensive insights into Nginx's complexities, vulnerabilities, and potential misconfigurations.</p><h2 id="brief-overview-of-nginx">Brief Overview of Nginx</h2><p>Nginx is a versatile web server that can also function as a reverse proxy, load balancer, mail proxy, and HTTP cache. The software was created and publicly released in 2004.</p><p>As per W3Tech's data, as of June 2022, Nginx holds the highest market share among web servers, with 33.6% of websites on the internet utilizing it. Additionally, according to Docker, Nginx is the most deployed technology in their containers. This significant popularity makes vulnerabilities related to Nginx all the more critical and intriguing.</p><h3 id="location-and-alias-directives">Location and Alias Directives</h3><p>The location directive is a block directive that can contain other directives and is used to define how Nginx should handle requests for specific URLs, they can be defined. </p><p>It is often used in conjunction with the alias directive to map URLs to specific file locations on the server. the directives can be defined in the <code>nginx.conf</code> file or in a separate configuration file.</p><p>The syntax for the location directive is as follows:</p><pre><code>location [modifier] /path/to/URL {
    # other directives
}</code></pre><p>The <code>modifier</code> is optional and can be one of the following:</p><ul><li><code>=</code>: Exact match</li><li><code>~</code>: Case-sensitive regular expression match</li><li><code>~*</code>: Case-insensitive regular expression match</li><li><code>^~</code>: Prefix match (stop searching if this matches)</li></ul><p>Here is an example of how to use the location directive in the <code>nginx.conf</code> file:</p><pre><code>location /assets/ { # defines a location block for requests matching /assets
    
    alias /opt/production/assets/; # maps the request to the assets folder
    
}
</code></pre><h2 id="identifying-misconfigurations">Identifying Misconfigurations</h2><p>At the BlackHat 2018 conference, Orange Tsai presented his research on breaking URL parsers. Among other impressive findings, he demonstrated a technique discovered in a 2016 CTF challenge from HCTF, created by @iaklis.</p><p>For the technique to be applicable, the following conditions must be met:</p><ul><li>The <code>location</code> directive <strong>should not</strong> have a trailing slash in its path;</li><li>An <code>alias</code>directive must be present within the location context, and it <strong>must</strong> end with a slash.</li></ul><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/alias_vuln_example.png" alt="" loading="lazy" width="1039" height="180" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/alias_vuln_example.png 600w, https://labs.hakaioffsec.com/content/images/size/w1000/2023/06/alias_vuln_example.png 1000w, https://labs.hakaioffsec.com/content/images/2023/06/alias_vuln_example.png 1039w"></figure><h3 id="achieving-impact">Achieving Impact </h3><p>In the vulnerable example above, Nginx will match any URLs that start with <code>/img</code> and serve whatever follows that slash with the alias path <code>/var/images/</code> prepended. </p><p>This implies that both a request for <code>/img/profile.jpg</code> and a request for <code>/imgprofile.jpg</code> would return the same file. Because since the alias directive ends with a trailing slash, an additional slash is not necessary after the matched location.</p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-1.png" alt="" loading="lazy" width="660" height="622" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-1.png 600w, https://labs.hakaioffsec.com/content/images/2023/06/image-1.png 660w"></figure><p>Taking into account that we can access the target folder through any request URL starting with <code>/img</code>, we can attempt to access the ever-present <code>..</code> directory, thereby reaching the parent directory of the target directory by issuing a request to <code>/img..</code> for the given example. </p><p>If we receive a redirection response from Nginx, we can assume that Nginx has located the directory and is attempting to redirect us to <code>/img../</code>, as it commonly does when accessing a directory.</p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-2.png" alt="" loading="lazy" width="445" height="283"><figcaption>And we do!</figcaption></figure><p>Consequently, this implies that any file or child directory within the parent directory of the target folder will be accessible to us, and Nginx will readily serve them. In our lab example, this means we could access all files in the <code>/var/</code> folder, given that the target folder in the configuration is <code>/var/images/</code>. This allows us to utilize simple payloads, such as a GET to, <code>/img../log/nginx/access.log</code> to download a log file located on <code>/var/log/nginx/access.log</code>.</p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-3.png" alt="" loading="lazy" width="1139" height="351" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-3.png 600w, https://labs.hakaioffsec.com/content/images/size/w1000/2023/06/image-3.png 1000w, https://labs.hakaioffsec.com/content/images/2023/06/image-3.png 1139w" sizes="(min-width: 720px) 720px"><figcaption>We can even see our previous tests!</figcaption></figure><p>The severity of this vulnerability can fluctuate significantly depending on the project, extending from a negligible impact to a critical one. The degree of its repercussions is primarily determined by whether the exposed directory holds sensitive data that may facilitate additional attacks or result in the disclosure of private information.</p><h3 id="achieving-impact-without-a-slash-on-alias">Achieving Impact Without a Slash on Alias</h3><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-5.png" alt="" loading="lazy" width="1660" height="246" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-5.png 600w, https://labs.hakaioffsec.com/content/images/size/w1000/2023/06/image-5.png 1000w, https://labs.hakaioffsec.com/content/images/size/w1600/2023/06/image-5.png 1600w, https://labs.hakaioffsec.com/content/images/2023/06/image-5.png 1660w" sizes="(min-width: 720px) 720px"><figcaption>Same vulnerability, but without a trailing slash on alias.</figcaption></figure><p>A question that may arise is whether this vulnerability can still be exploited without the trailing slash on the alias directive. The answer is yes, but it would mean that using traversal sequences to escape the directory would no longer be possible. This is because everything after the matched location is appended to the alias, and appending a <code>..</code> sequence to a path without a trailing slash would only result in a non-existent folder name. e.g <code>/var/images../</code></p><p>However, we can still exploit this misbehavior to access other directories that have a name starting with the target directory name. As a result, we might not be able to access it <code>/var/images/../log/</code>, but we could still access a directory &nbsp;<code>/var/images_confidential</code> by making a GET request to <code><a href="http://localhost/img_confidential?ref=labs.hakaioffsec.com">/img_confidential</a></code>. </p><p>In this case, Nginx appends <code>_confidential</code> to the <code>/var/images</code> target path, effectively serving URLs from the combined path of <code>/var/images</code> and <code>_confidential</code> which results in <code>/var/images_confidential</code>.</p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-4.png" alt="" loading="lazy" width="565" height="275"></figure><h2 id="hunting-open-source-repositories">Hunting Open-Source Repositories</h2><p>As a starting point in our search for this vulnerability, we chose to explore popular GitHub repositories that displayed this issue. Identifying this specific vulnerability in environments with access to source code becomes significantly more feasible, primarily due to two main factors:</p><ol><li>Detection: Utilizing straightforward code analysis tools, such as regular expression searches, allows us to effectively pinpoint potentially vulnerable Nginx configuration files within these projects.</li><li>Exploitation: Having knowledge of the exact target directory that has been aliased empowers us to set up a local instance, examine the aliased directories using a local shell, and determine which files can be accessed through the vulnerability.</li></ol><h5 id="github-code-search"><strong>GitHub Code Search</strong></h5><p>GitHub Code Search is a feature available on GitHub, the web-based platform for version control and collaboration using Git. This feature enables users to search for code across all public repositories hosted on the platform, making it especially useful for developers seeking examples, libraries, or solutions to specific coding challenges.</p><p>Additionally, GitHub Code Search can be employed to search for snippets of vulnerable code within popular projects. This can be accomplished through a variety of methods, such as simple string matches, regular expressions, path filters, and more. For example, to search for the Nginx Alias Traversal vulnerability, the following regular expression can be used:</p><pre><code>/location \/[_.a-zA-Z0-9-\/]*[^\/][\s]\{[\s\n]*alias \/[_.a-zA-Z0-9-\/]*\/;/</code></pre><p>Upon examining the search results for this query, it becomes evident that a significant number of repositories contain this specific vulnerability.</p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-6.png" alt="" loading="lazy" width="2000" height="255" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-6.png 600w, https://labs.hakaioffsec.com/content/images/size/w1000/2023/06/image-6.png 1000w, https://labs.hakaioffsec.com/content/images/size/w1600/2023/06/image-6.png 1600w, https://labs.hakaioffsec.com/content/images/size/w2400/2023/06/image-6.png 2400w" sizes="(min-width: 720px) 720px"></figure><p>Due to the inherent limitations of regular expressions, they may not be ideally suited for matching code syntax. For instance, this particular regular expression will not match vulnerable configuration files containing comments between the directives. However, it serves as a starting point for our analysis.</p><h3 id="case-study-1-leaking-bitwardens-vault-logs-and-certificates">Case Study #1: Leaking Bitwarden's vault, logs, and certificates.</h3><p>Bitwarden is an open-source password manager that helps users securely store and manage their passwords, credentials, and other sensitive information. It offers features such as password generation, autofill, and synchronization across devices. Bitwarden supports various platforms, including Windows, macOS, Linux, Android, iOS, and web browsers through extensions. Users can access their data through a web vault, desktop apps, mobile apps, or browser extensions. </p><p>Bitwarden also offers <a href="https://github.com/bitwarden/server/?ref=labs.hakaioffsec.com">a self-hosted option</a> for those who want to maintain their own server, which is the one we are going to examine.</p><p>If we search for ways to create a self-hosted instance of the Bitwarden server, one of the presented ways is through the <a href="https://bitwarden.com/help/install-and-deploy-unified-beta/?ref=labs.hakaioffsec.com">Unified docker method</a>, which is a setup made for simplifying the deployment of the platform.</p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-12.png" alt="" loading="lazy" width="1385" height="276" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-12.png 600w, https://labs.hakaioffsec.com/content/images/size/w1000/2023/06/image-12.png 1000w, https://labs.hakaioffsec.com/content/images/2023/06/image-12.png 1385w" sizes="(min-width: 720px) 720px"><figcaption>100K+ downloads!</figcaption></figure><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-7.png" alt="" loading="lazy" width="2000" height="1229" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-7.png 600w, https://labs.hakaioffsec.com/content/images/size/w1000/2023/06/image-7.png 1000w, https://labs.hakaioffsec.com/content/images/size/w1600/2023/06/image-7.png 1600w, https://labs.hakaioffsec.com/content/images/size/w2400/2023/06/image-7.png 2400w" sizes="(min-width: 720px) 720px"></figure><p>Since our regular expression gave a match for Bitwarden's repository, we started dwelving into the code base searching for potentially vulnerable Nginx configurations, which is when we found the following inside the folder for the unified docker setup. </p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-9.png" alt="" loading="lazy" width="1778" height="646" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-9.png 600w, https://labs.hakaioffsec.com/content/images/size/w1000/2023/06/image-9.png 1000w, https://labs.hakaioffsec.com/content/images/size/w1600/2023/06/image-9.png 1600w, https://labs.hakaioffsec.com/content/images/2023/06/image-9.png 1778w" sizes="(min-width: 720px) 720px"></figure><p>If this config is used, then it means all files on /etc/bitwarden/attachments/ will be accessible on the URL /attachments, but looking back at the exploit details, this also means that any files present on /etc/bitwarden/ will be downloadable also.</p><p>But let's not get ahead of ourselves, we first must assess the impact of the exposure. To do that, we can either explore the code base or fire up a local instance and list the directory with a local shell. </p><p>Looking into the Dockerfile for that image, we find more info about that directory and what files it can contain:</p><figure><pre><code>[...]
ENV BW_DB_FILE="/etc/bitwarden/vault.db"
[...]</code></pre><figcaption>Dockerfile</figcaption></figure><p>It seems like this environment variable sets where the vault database is saved, and we can see that vault.db is located on /etc/bitwarden.</p><p>Bitwarden only saves the database in that location if the user chooses to use SQLite as a database provider.</p><p>Therefore, if we issue an unauthenticated request to <code>http://&lt;instance&gt;/attachments../vault.db</code>, we will download the entire Bitwarden SQLite3 database.</p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-13.png" alt="" loading="lazy" width="1486" height="875" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-13.png 600w, https://labs.hakaioffsec.com/content/images/size/w1000/2023/06/image-13.png 1000w, https://labs.hakaioffsec.com/content/images/2023/06/image-13.png 1486w" sizes="(min-width: 720px) 720px"></figure><p>We can also fetch log files, which have a predictable filename and can all be downloaded by accessing the following paths:</p><ul><li>/attachments../logs/api.log</li><li>/attachments../logs/admin.log</li><li>/attachments../logs/identity.log</li><li>/attachments../logs/notifications.log</li></ul><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-14.png" alt="" loading="lazy" width="1900" height="743" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-14.png 600w, https://labs.hakaioffsec.com/content/images/size/w1000/2023/06/image-14.png 1000w, https://labs.hakaioffsec.com/content/images/size/w1600/2023/06/image-14.png 1600w, https://labs.hakaioffsec.com/content/images/2023/06/image-14.png 1900w" sizes="(min-width: 720px) 720px"></figure><p>And, of course, the certificate file was also exposed in that folder. To access it, all you would need to do is issue a request to <code>/attachments../identity.pfx</code>.</p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-15.png" alt="" loading="lazy" width="678" height="331" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-15.png 600w, https://labs.hakaioffsec.com/content/images/2023/06/image-15.png 678w"></figure><p>The data protection keys were also accessible, but these did not have a predictable filename, therefore, leaking them was not possible.</p><p>This vulnerability has been disclosed to Bitwarden and has since then been fixed. Bitwarden issued a US$6000 bounty, which is the highest bounty they issued on their HackerOne program.</p><h3 id="case-study-2-google-hpc-toolkitleaking-google-cloud-credentials">Case Study #2: Google HPC Toolkit - Leaking Google Cloud Credentials</h3><p>During our foray through GitHub, we chanced upon a software solution developed by Google, known as the Cloud HPC Toolkit. This was introduced in 2022, designed as a robust framework to facilitate the deployment of high-performance computing (HPC) environments on Google Cloud.</p><p>The HPC Toolkit boasts a Django-based web application front-end, granting users the ability to manage their HPC environments conveniently via a web interface.</p><p>Upon scrutinizing the configuration section identified by our regular expression, we discovered that a vulnerable path had indeed been defined. This path was aliased to <code>../hpc-toolkit/community/front-end/website/static/</code>, implying that issuing a request to <code>/static../</code> would provide us with access to the website folder.</p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-16.png" alt="" loading="lazy" width="535" height="371"></figure><p>Interestingly, we found that the SQLite database was also exposed within this folder and could be accessed through a specific URL:</p><pre><code>curl http://&lt;frontend URL&gt;/static../db.sqlite3 -O</code></pre><p>Moreover, the Django secret key was accessible at the following location:</p><pre><code>curl http://35.204.135.69/static../.secret_key</code></pre><p>Gaining access to this database is highly critical for the application, as the primary function of the HPC Toolkit appears to be the orchestration of large-scale Google Cloud resources. In the event of a compromise, an attacker could potentially gain control over a victim's GCP account credentials, which are stored in the SQLite database.</p><pre><code>sqlite&gt; select * from ghpcfe_credential;
1|production key|{
  "type": "service_account",
  "project_id": "andunduaindadaww",
  "private_key_id": "3acb9f[... redacted from report ...]7c69",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEv[... redacted from report ...] 5Kdkvg=\n-----END PRIVATE KEY-----\n",
  "client_email": "adwaw[...].com",
  "client_id": "105114036295455180401",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/adwaw1f13f1f13-tkfe-sa%40andunduaindadaww.iam.gserviceaccount.com"
}|1
sqlite&gt;</code></pre><p>The Google VRP Team recognized our work by awarding us a $500 reward for uncovering this vulnerability. They believed the impact on the application wasn't severe enough to warrant a larger reward. I toyed with the idea of debating the reward amount with them, but ultimately decided against it. After all, the recognition of our efforts was a reward in itself, and that was more than enough for us.</p><h2 id="navgix-detecting-the-vulnerability-in-a-black-box-manner">NavGix: Detecting the vulnerability in a black-box manner</h2><p>There are several methods to detect this vulnerability without necessitating access to the Nginx configuration file. Initially, potential location aliases can be identified by extracting links from the HTML source-code on the website's main page. Subsequently, directory traversal can be attempted using the techniques outlined in the earlier sections of this report.</p><p>In the absence of extractable links, it is feasible to perform a minor brute-force attack targeting common aliases. The ensuing list has demonstrated promising results during our testing phase:</p><pre><code>	var dictionary = []string{
		"static",
		"js",
		"images",
		"img",
		"css",
		"assets",
		"media",
		"lib",
	}</code></pre><p>An automated tool, <a href="https://github.com/hakaioffsec/navgix?ref=labs.hakaioffsec.com">NavGix</a>, has been created to aid in the enumeration and testing of aliased directories for traversal vulnerabilities. It is publicly available for download and use on its respective <a href="https://github.com/hakaioffsec/navgix?ref=labs.hakaioffsec.com">GitHub</a> page.</p><figure><img src="https://labs.hakaioffsec.com/content/images/2023/06/image-25.png" alt="" loading="lazy" width="956" height="241" srcset="https://labs.hakaioffsec.com/content/images/size/w600/2023/06/image-25.png 600w, https://labs.hakaioffsec.com/content/images/2023/06/image-25.png 956w" sizes="(min-width: 720px) 720px"><figcaption>Sample usage of navgix</figcaption></figure><p>Upon the identification of a directory susceptible to traversal by NavGix, it becomes possible to employ additional tools to fuzz for other accessible folders or files within the traversed directory. The primary objective here should be to locate files of interest that could potentially provide further impact, such as a configuration file containing secrets, log files, or source-code.</p><h2 id="conclusion">Conclusion</h2><p>Wrapping up, while Nginx is a robust and incredibly versatile tool that fuels a significant portion of the internet, it's easily susceptible to certain inconsistencies. These potential pitfalls are often a result of misconfigurations, which can inadvertently transform this reliable powerhouse into a possible weak link. Nginx's approach to security leaves a significant onus on developers to avoid hazardous configurations, underscoring the importance of thorough understanding and cautious implementation.</p><p>Our journey through the world of open-source repositories and real-life case studies like Bitwarden and Google's HPC Toolkit underlines just how significant these vulnerabilities can be. It's a sobering reminder that even the most reliable systems can have their Achilles' heel.</p>
    </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Threads, an Instagram app (404 pts)]]></title>
            <link>https://apps.apple.com/us/app/threads-an-instagram-app/id6446901002</link>
            <guid>36580192</guid>
            <pubDate>Mon, 03 Jul 2023 23:31:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://apps.apple.com/us/app/threads-an-instagram-app/id6446901002">https://apps.apple.com/us/app/threads-an-instagram-app/id6446901002</a>, See on <a href="https://news.ycombinator.com/item?id=36580192">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
<!---->
<!---->
<!---->
    


<!---->
    <section>
      <h2>iPhone Screenshots</h2>
  
</section>


  <div dir="" data-test-bidi=""><p>Say more with Threads — Instagram’s text-based conversation app</p><p>Threads is where communities come together to discuss everything from the topics you care about today to what’ll be trending tomorrow. Whatever it is you’re interested in, you can follow and connect directly with your favorite creators and others who love the same things — or build a loyal following of your own to share your ideas, opinions and creativity with the world.</p><p>Meta Terms: https://www.facebook.com/terms.php<br>Threads Supplemental Terms: https://help.instagram.com/769983657850450<br>Meta Privacy Policy: https://privacycenter.instagram.com/policy<br>Threads Supplemental Privacy Policy: https://help.instagram.com/515230437301944<br>Instagram Community Guidelines: https://help.instagram.com/477434105621119</p></div>

<!---->
<!---->
<!---->
<!---->
<!---->
<!---->
  <section>
  <div>
    <h2>
      App Privacy
    </h2>

    


  </div>

  <p>
    The developer, <span>Instagram, Inc.</span>, indicated that the app’s privacy practices may include handling of data as described below. For more information, see the <a href="https://privacycenter.instagram.com/policy">developer’s privacy policy</a>.
  </p>

  <div>
        
        <h3>Data Linked to You</h3>
        <p>The following data may be collected and linked to your identity:</p>
          <ul>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Health &amp; Fitness</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Purchases</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Financial Info</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Location</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Contact Info</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Contacts</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>User Content</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Search History</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Browsing History</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Identifiers</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Usage Data</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Sensitive Info</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Diagnostics</span>
                </span>
              </li>
              <li classs="privacy-type__item">
                <span>
                  <span>
                    
                  </span>
                  <span>Other Data</span>
                </span>
              </li>
          </ul>
      </div>

    <p>Privacy practices may vary, for example, based on the features you use or your age. <a href="https://apps.apple.com/story/id1538632801">Learn&nbsp;More</a></p>
</section>


<section>
  <div>
    <h2>Information</h2>
    <dl>
        <p>
          <dt>Seller</dt>
          <dd>
            Instagram, Inc.
          </dd>
        </p>
        <p>
          <dt>Size</dt>
          <dd aria-label="254.3 megabytes">254.3 MB</dd>
        </p>
        <p>
          <dt>Category</dt>
          <dd>
              <a href="https://itunes.apple.com/us/genre/id6005" data-metrics-click="{&quot;actionType&quot;:&quot;navigate&quot;,&quot;actionUrl&quot;:&quot;https://itunes.apple.com/us/genre/id6005&quot;,&quot;targetType&quot;:&quot;link&quot;,&quot;targetId&quot;:&quot;GenrePage&quot;}">
                Social Networking
              </a>
          </dd>
        </p>
      <div>
        <dt>Compatibility</dt>
          <dd>
              <dl>
                <dt>
                  iPhone
                </dt>
                <dd>Requires iOS 14.0 or later.
                </dd>
              </dl>
              <dl>
                <dt>
                  iPod&nbsp;touch
                </dt>
                <dd>Requires iOS 14.0 or later.
                </dd>
              </dl>
          </dd>
      </div>
<!---->      <div>
        <dt>Languages</dt>
          <dd dir="">
        

                    <p data-test-bidi="">English, Croatian, Czech, Danish, Dutch, Finnish, French, German, Greek, Hindi, Hungarian, Indonesian, Italian, Japanese, Korean, Malay, Norwegian Bokmål, Polish, Portuguese, Romanian, Russian, Simplified Chinese, Slovak, Spanish, Swedish, Tagalog, Thai, Traditional Chinese, Turkish, Ukrainian, Vietnamese</p>

    


<!----></dd>


      </div>
      <p>
        <dt>Age Rating</dt>
        <dd>
             12+
              <span>Infrequent/Mild Alcohol, Tobacco, or Drug Use or References</span>
              <span>Infrequent/Mild Profanity or Crude Humor</span>
              <span>Infrequent/Mild Sexual Content and Nudity</span>
              <span>Infrequent/Mild Mature/Suggestive Themes</span>
        </dd>
      </p>
<!---->      <p>
        <dt>Copyright</dt>
        <dd>© 2023 Instagram, LLC.</dd>
      </p>
        <p>
          <dt>Price</dt>
          <dd>Free</dd>
        </p>
<!---->
    </dl>
  </div>
  <div>
    <ul>
<!---->        <li>
          <a data-metrics-click="{&quot;actionType&quot;:&quot;navigate&quot;,&quot;targetType&quot;:&quot;link&quot;,&quot;targetId&quot;:&quot;LinkToAppSupport&quot;}" href="https://help.instagram.com/179980294969821">
            App Support
          </a>
        </li>
<!---->        <li>
          <a data-metrics-click="{&quot;actionType&quot;:&quot;navigate&quot;,&quot;targetType&quot;:&quot;link&quot;,&quot;targetId&quot;:&quot;LinkToPrivacyPolicy&quot;}" href="https://privacycenter.instagram.com/policy">
            Privacy Policy
          </a>
        </li>
    </ul>
  </div>
</section>

<section>
  <ul>
<!---->      <li>
        <a data-metrics-click="{&quot;actionType&quot;:&quot;navigate&quot;,&quot;targetType&quot;:&quot;link&quot;,&quot;targetId&quot;:&quot;LinkToAppSupport&quot;}" href="https://help.instagram.com/179980294969821">
          App Support
        </a>
      </li>
<!---->      <li>
        <a data-metrics-click="{&quot;actionType&quot;:&quot;navigate&quot;,&quot;targetType&quot;:&quot;link&quot;,&quot;targetId&quot;:&quot;LinkToPrivacyPolicy&quot;}" href="https://privacycenter.instagram.com/policy">
          Privacy Policy
        </a>
      </li>
  </ul>
</section>

<!---->
<!---->
    <section>
      <p>
        <h2>
          More By This Developer
        </h2>
        <!---->
      </p>

      
    </section>

<!---->

<!---->

<!----></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Norway discovers Phosphate deposit large enough to supply world for 100 years (110 pts)]]></title>
            <link>https://www.independent.co.uk/tech/battery-solar-panels-norway-phosphate-b2368444.html</link>
            <guid>36578489</guid>
            <pubDate>Mon, 03 Jul 2023 20:40:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.independent.co.uk/tech/battery-solar-panels-norway-phosphate-b2368444.html">https://www.independent.co.uk/tech/battery-solar-panels-norway-phosphate-b2368444.html</a>, See on <a href="https://news.ycombinator.com/item?id=36578489">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main"><div data-newsletter-key="receiveIndyBreakingNews"><p><h3 data-nosnippet="">For free real time breaking news alerts sent straight to your inbox sign up to our breaking news emails</h3><h3 data-nosnippet="">Sign up to our free breaking news emails</h3></p></div><p>A huge phosphate rock deposit discovered in <a href="https://www.independent.co.uk/topic/norway">Norway</a> contains enough minerals to meet the global demand for <a href="https://www.independent.co.uk/topic/batteries">batteries</a> and <a href="https://www.independent.co.uk/topic/solar-panels">solar panels</a> for the next 100 years, according to the mining company that controls it.</p><p>Norge Mining said up to 70 billion tonnes of the non-renewable resource may have been uncovered in south-western Norway, alongside deposits of other strategic minerals like titanium and vanadium.</p><p>Phosphate rock contains high concentrates of phosphorus, which is a key component for building green technologies but currently faces significant supply issues.</p><p>Phosphorus was first discovered in 1669 by German scientist Hennig Brandt, who was searching for the philosopher’s stone. While it proved ineffective in turning ordinary metals into gold, it has become an essential component in lithium-iron phosphate batteries in <a href="https://www.independent.co.uk/topic/electric-cars">electric cars</a>, as well as for solar panels and computer chips.</p><p>Russia previously controlled the world’s largest ultra-pure phosphate rock deposits, with the European Union warning that these “critical raw materials” have a high supply risk.</p><p>The EU is currently almost entirely dependent on imports of phosphate rock from the rest of the world, according to a report from The Hague Centre for Strategic Studies, with China, Iraq and Syria also home to large deposits.</p><p><a rel="nofollow" target="_blank" href="https://www.phosphorusplatform.eu/images/download/HCSS_17_12_12_Phosphate.pdf">The report</a>, which was published before the discovery of the massive Norwegian deposit, warned that the EU should be “concerned about phosphate rock shortages”.</p><p>An <a rel="nofollow" data-affiliate="true" target="_blank" href="http://go.redirectingat.com/?id=44681X1458326&amp;url=https%3A%2F%2Fwww.nature.com%2Farticles%2Fs43246-022-00236-4&amp;sref=https://www.independent.co.uk/tech/battery-solar-panels-norway-phosphate-b2368444.html">article</a> in the scientific journal <em>Nature</em> last year warned of imminent supply disruptions of phosphorus, citing Russia’s invasion of Ukraine and the subsequent economic sanctions as a potential cause of market volatility.</p><p>The global economy consumes an estimated 50 million tonnes of phosphorus each year, with scientists warning earlier this year that the planet could face a “phosphogeddon” if supply trends continue.</p><p>“The buyers’ market is becoming increasingly crowded by limited trade – due to political instability in several source countries, as well as international sanctions imposed on others,” Norge Mining noted in a <a rel="nofollow" target="_blank" href="https://norgemining.com/2023/06/21/phosphorus-a-victim-of-its-own-success/">June blog post</a>. “This is forcing importers to fear an impending crisis.”</p><figure><figcaption><p>Tesla CEO Elon Musk announced in Shanghai on 7 January, 2020, that Model 3 vehicles made in China would used lithium iron phosphate batteries</p><p> (Getty Images)</p></figcaption></figure><p>Norway’s minister of trade and industry, Jan Christian Vestre, said last month that the government was considering fast-tracking a giant mine in Helleland once analysis is completed on 47 miles of drill cores. If approval is given, the first major mine could begin operation by 2028.</p><p>The politician said Norway’s “obligation” was to develop “the world’s most sustainable mineral industry” following the discovery of the minerals.</p><p>The mining plans already have the support of the European Raw Materials Alliance, according to <a rel="nofollow" target="_blank" href="https://www.aftenbladet.no/direkte/i/oW1nAK/aftenbladets-oekonomistudio">local reports</a>, while local consultations continue. </p><p>A spokesperson for the European Commission described the discovery as “great news” for meeting the objectives of the Commission’s raw material objectives, with Norge Mining telling <a rel="nofollow" target="_blank" href="https://www.euractiv.com/section/energy-environment/news/great-news-eu-hails-discovery-of-massive-phosphate-rock-deposit-in-norway/">Euractiv</a> that the projected 4,500-metre-deep ore body would theoretically be capable of meeting global demand for the next century.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Against Alcohol (110 pts)]]></title>
            <link>https://www.thefitzwilliam.com/p/against-alcohol</link>
            <guid>36577760</guid>
            <pubDate>Mon, 03 Jul 2023 19:33:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.thefitzwilliam.com/p/against-alcohol">https://www.thefitzwilliam.com/p/against-alcohol</a>, See on <a href="https://news.ycombinator.com/item?id=36577760">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><em>Note: all statistics are from the book unless otherwise indicated. The book mainly concerned itself with the United Kingdom, but I think the lessons are broadly applicable to other Western countries too.</em></p><p><span>The overriding impression I got from reading </span><em><a href="https://www.amazon.co.uk/Drink-Science-Alcohol-Your-Health-ebook/dp/B07SZLPS5B/" rel="">Drink?</a><span> </span></em><span>by David Nutt is that alcohol is Really Bad:</span></p><blockquote><p>Alcohol use is one of the top five causes of disease and disability in almost all countries in Europe. In the UK, alcohol is now the leading cause of death in men between the ages of 16 and 54 years, accounting for over 20 per cent of the total. More than three quarters of liver cirrhosis deaths, 7 per cent of cancer deaths and 25 per cent of injury deaths in adults under 65 years of age in Europe in 2004 were estimated to be due to alcohol. According to the government, alcohol is the third leading risk factor for death and disability after smoking and obesity.</p></blockquote><p>Alcohol can also exacerbate mental health problems, especially anxiety and depression. One major American study suggested that up to a quarter of young alcoholics have a social anxiety disorder.</p><p>This isn’t a big surprise, of course. What I didn’t realise before, though, is how poorly evidenced the beneficial effects of alcohol are. Looking at the available studies, Nutt writes that the positive effect on cardiovascular health has never been definitely proven (i.e. beyond mere association), and even if there is a small positive effect, the optimal level of consumption would be around one unit a day. The benefits don’t outweigh all the other risks.</p><p><span>The impact of alcohol on the UK is pretty significant. 10.8m British people drink at levels posing some risk to their health, and 1.6m ‘may have some level of alcohol dependence’. Different figures, from the NHS, suggest around 9% of men and 3% of women show such signs (which my back-of-the-envelope calculations suggest would be something like 3.3m people in total). </span><a href="https://www.hrb.ie/fileadmin/2._Plugin_related_files/Publications/2021_publications/2021_HIE/Evidence_Centre/HRB_Alcohol_Overview_Series_11.pdf" rel="">In Ireland</a><span>, 54.5% of men engage in ‘heavy episodic drinking’, along with 23.3% of women.</span></p><p><span>It’s estimated that alcohol contributes to 30,000 deaths a year in England, Scotland and Wales, and is responsible for 5% of the </span><a href="https://www.who.int/news-room/fact-sheets/detail/alcohol" rel="">global disease burden</a><span>.</span></p><p>There is enough evidence here to make a strong case against alcohol on a number of grounds (which Nutt himself does not quite do).</p><p><span>Alcohol is a drain on economic growth, damaging productivity and forcing us to spend money on healthcare that could be used elsewhere. The CDC estimated the cost of hangovers to the American economy as $249bn in 2010 [</span><strong>Edit</strong><span>: Readers are correct to point out that this estimate is implausibly high. Bizarrely, Nutt cites this figure as $180bn in the iBooks version of </span><em>Drink?, </em><span>but as $249bn in the Kindle version, even though the sentence is otherwise identical. The </span><a href="https://www.cdc.gov/media/releases/2015/p1015-excessive-alcohol.html" rel="">website</a><span> he cites estimates $249bn as the </span><em>total </em><span>costs of alcohol to America, and $179bn as the cost in terms of lost productivity. The site makes no mention of hangovers.] The Institute of Alcohol Studies estimates a cost of £1.4bn a year for British productivity. (The charity Alcohol Change UK puts the productivity damage at </span><a href="https://alcoholchange.org.uk/alcohol-facts/fact-sheets/alcohol-in-the-workplace" rel="">£7bn a year</a><span> instead.) If you think economic growth is </span><a href="https://www.amazon.co.uk/Stubborn-Attachments-Prosperous-Responsible-Individuals/dp/1732265135/" rel="">important</a><span>, then alcohol is not worth the hassle.</span></p><p><span>Treating the results of excessive alcohol consumption is a huge burden for the NHS. In England alone, around </span><a href="https://digital.nhs.uk/data-and-information/publications/statistical/statistics-on-alcohol" rel="">350,000 hospital admissions per year</a><span> are mainly attributable to alcohol.</span></p><p><span>It’s strange that this isn’t talked about more. Polls </span><a href="https://www.ipsos.com/en-uk/public-satisfaction-nhs-high-waiting-times-are-publics-priority" rel="">suggest</a><span> that the NHS is the one institution that almost everyone in Britain cares about. So why not ease the burden on its workers – and the public purse – by reducing our alcohol consumption?</span></p><p>Alcohol also fuels violence: victims thought their offenders were under the influence of alcohol in 40% of all violent crimes in 2016/17&nbsp; – that’s half a million incidents. (It’s hard to know how accurate this figure is, but even if it was only 20% of the total, that’s a lot of crimes…)</p><p>These figures include sexual violence. Alcohol is the most common date rape drug, involved in 46% of cases, while drugs only featured in 33% and sedative drugs in just 2%.</p><blockquote><p>One in three women have been sexually taken advantage of while under the influence of drugs or alcohol, mostly in private homes by someone they know, according to the 2019 Global Drug Survey. Nearly 90 per cent of these cases involved alcohol.</p></blockquote><p>As Nutt makes clear, the blame lies with the assailants here, not the victims. But alcohol’s role in violence and sexual assault is rarely discussed.&nbsp;</p><p>This is, then, the case against alcohol: it undermines our health and our economy, it causes violence, including sexual violence, and it’s an addictive drug that ensnares people across society.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg" width="1280" height="1280" data-attrs="{&quot;src&quot;:&quot;https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/f8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1280,&quot;width&quot;:1280,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff8bf03b6-6b72-4762-aa28-a99316dc8239_1280x1280.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><span>Maybe he’s only right about the first part… </span><a href="https://tvgag.com/gag/to-alcohol/" rel="">Source</a><span>. </span></figcaption></figure></div><p>The evidence here is so damning that I wonder how Nutt can still suggest, in good conscience, that we should still drink (within limits). Some of the arguments he makes in favour of alcohol are ridiculous:</p><blockquote><p>A glass to hold gives us something to do with our hands in awkward situations, particularly now smoking has become so vilified.</p></blockquote><p>He adds that food and socialising, which regularly go hand-in-hand with alcohol, are good things. I agree. But there’s no reason that you can’t drink something non-alcoholic while you enjoy dinner and company. If you really need to hold a glass, must it contain alcohol?</p><p>Alcohol is important for social rituals, as Nutt points out:</p><blockquote><p>Nearly all of our celebration rituals revolve around alcohol, from the cradle to the grave. We wet the baby’s head, we toast exam results and birthdays, we crack open the fizz at both wedding breakfasts and divorce parties. And we say goodbye to our loved ones with alcohol at a funeral wake (and drown our sorrows too).</p></blockquote><p><span>Left unaddressed is the presumption that alcohol is necessary to any of those (good and often great) </span><a href="https://www.nytimes.com/2019/04/22/opinion/rituals-meaning.html" rel="">rituals</a><span>. It’s not. You can get most (perhaps all) of those social benefits without alcohol. Drinks with friends don’t have to be alcoholic.</span></p><p>It would be very tough to change those cultural norms – although, as Nutt notes, an increasing number of young people are eschewing alcohol altogether. This trend seems to be linked to a greater focus on health and ‘wellness’, although it may also be because people are taking other drugs instead.</p><p><span>Notably, that there are enormous differences in the levels of alcohol consumption </span><a href="https://ourworldindata.org/grapher/total-alcohol-consumption-per-capita-litres-of-pure-alcohol" rel="">around the world</a><span>. Some of this is because of religious prohibitions on alcohol in Muslim-majority countries, or because many people carry genes that mean they feel </span><a href="https://en.wikipedia.org/wiki/Alcohol_flush_reaction" rel="">flushed and nauseous after consuming alcohol</a><span> (commonly known as Asian flush). But even among countries with no religious or biological hindrances to alcohol, consumption varies a lot, and Britain and Ireland do unusually poorly on this front.&nbsp;</span></p><p><span>One might assume that the British (and Irish) have always been habitual drunks. In fact, there has been </span><a href="https://publications.parliament.uk/pa/cm200910/cmselect/cmhealth/151/15106.htm" rel="">significant variation</a><span> in the amount of alcohol British people have consumed over the past few centuries. We’re at (or just after) the peak of a decades-long trend of more alcohol being consumed in Britain. Figures for Ireland are less easy to come by, but you also see the </span><a href="https://web.archive.org/web/20190227060129/https://alcoholireland.ie/facts/alcohol-related-harm-facts-and-statistics/" rel="">ebb</a><span> and </span><a href="https://www.drugsandalcohol.ie/6753/2/Allwright_2733_The_buden_of_alcohol_misuse_on_emergency.pdf" rel="">flow</a><span> of alcohol consumption over time, including the impact of taxes and the 2008 recession.</span></p><p>Alcohol consumption varies across place and across time, often as a result of policies or moral campaigning. Cultural change is both possible and desirable.&nbsp;</p><p>Alcohol is regulated with a light touch, in large part due to the cosy relationship the drinks industry has developed with politicians. Nutt relates a sad tale of a cabinet office committee under Tony Blair that proposed new policies to tackle alcohol addiction, but was scuppered by a drinks industry lobbying effort. This is not a surprise:</p><blockquote><p>Despite repeating their message of ‘sensible drinking’ at every opportunity, the drinks industry wants you to keep drinking. That is its reason for existing. One estimate is that, if everyone drank within recommended limits, the industry would lose £13 billion. That’s a lot of lost profit. Its aim is often aided by the government, which wants the tax income.</p></blockquote><p>The government is pretty much in the pocket of this industry, with gifts to MPs in the ‘All-Party Parliamentary Beer Group’ every year and the perceived importance of the tax revenue from alcohol. There is something repulsive about MPs receiving these gifts while alcohol causes so much harm in society. And they are being shortsighted, fiscally:</p><blockquote><p>…it’s been estimated that when you add in the costs of alcohol to society, there is a net loss to the Exchequer. This is undeniably a difficult argument to disentangle economically, and a complicated sum. But the costs of alcohol to society are relatively well established. These are: £3.5bn on health, especially hospital admissions and accident and emergency attendances; £6.5bn for policing drunkenness; £20bn for lost productivity through hangovers. The total is £30 billion.</p></blockquote><p><span>[</span><strong>Edit</strong><span>: Readers may notice that this estimate for lost productivity due to hangovers is much larger than the previous estimates for </span><em>total </em><span>lost productivity in Britain due to alcohol. The editor suspects that David Nutt is carelessly using the phrase “lost productivity through hangovers” as a synonym for lost productivity. Nutt’s source is the </span><a href="https://alicerap.eu/" rel="">website</a><span> for a research programme, but he doesn’t mention a specific paper, and they have a large number of publications about alcohol.]  </span></p><p>Even public health messaging that encourages responsible drinking is funded by the drinks industry. While this is a far cry from the propaganda that was once spread by Big Tobacco, often governments don’t have the money to run awareness campaigns without hefty “donations” from the drinks lobby:</p><blockquote><p>Public Health England wanted to do an advertising campaign promoting (at least) two drink-free days a week. This is sensible, safe and appropriate advice. But PHE doesn’t have much money for public advertising so they agreed to partner with Drinkaware, a charity that’s funded by the alcohol industry . . . It wasn’t the content of the campaign that was contentious, it was where the money was coming from.</p></blockquote><p>Nutt suggests his own set of policy solutions: taxing drinks by the amount of alcohol in them and increase that tax back to 1950s levels (i.e. triple it); stop selling strong alcohol in supermarkets; make it a law that all alcohol outlets must sell non-alcoholic drinks; install breathalysers in pubs and stop drunk people from buying more alcohol; banning all alcohol advertising; and many more.</p><p><span>He focuses most on minimum unit pricing (MUP), i.e. a floor on the price at which a unit of alcohol can be sold. As the government has not raised its duty on alcohol, it now costs a third of what it did in 1970 in </span><a href="https://en.wikipedia.org/wiki/Real_versus_nominal_value_(economics)" rel="">real</a><span> terms. The duty paid in England varies wildly by the type of drink, rather than directly relating to the amount of alcohol in it, so it’s possible to purchase a lot of alcohol for little money.</span></p><p>Scotland introduced MUP in 2018 – with initially positive results:</p><blockquote><p>…the amount of alcohol bought in shops and supermarkets per person per week fell by 1.2 units (just over half a pint of beer or a measure of spirits) compared with what would have been drunk without MUP. In England over the same time, consumption increased. The biggest drop – two units a week – was in the heaviest fifth of drinkers.&nbsp;</p></blockquote><p>Targeting the heaviest drinkers is important because they are the worst affected; they account for the vast majority of the health costs.&nbsp;</p><p>The Republic of Ireland introduced MUP in 2022, but it’s too soon to understand the effects.&nbsp;</p><p><span>It’s often believed that people, particularly alcoholics, will consume just as much alcohol if it’s more expensive. But the closest thing that economics has to an iron law is that </span><em>demand curves slope downwards: </em><span>If you make something more expensive, people will typically consume it less, at least to some small extent. For example, if you make beer 1% more expensive, people will drink it </span><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3991422/" rel="">0.98% less</a><span>. (Of course, we should also be concerned with the possibility that higher alcohol prices will result in substitution for more dangerous drugs.)</span></p><p>France had an extremely high rate of liver cirrhosis in the 1980s as a result of alcohol consumption. They tackled this by focusing on advertising (banning the drinks industry from it, basically), health warnings on bottles (‘alcohol abuse is dangerous for health’), price (restrictions on ‘happy hours’), and driving (reducing the blood alcohol content limit).&nbsp;The French wine industry has turned out to be more profitable following these changes – but the UK hasn’t followed suit:</p><blockquote><p>The UK drinks industry know this data. They know that if we went down the route of raising the price of alcohol, they would be more profitable over time. In my opinion, the reason they don’t is that making money in the short term is so easy. And they think that if they make any concessions in this direction, people will begin to question all our other beliefs around alcohol and health.</p></blockquote><p><span>Is this a case of companies prioritising short-term economic performance over the long run? It’s doubtful. Higher prices would shrink the market for alcohol. If policies aimed at dissuading drinking actually </span><em>grow </em><span>the profits of drinks companies, something has gone wrong. But if Nutt is still somehow correct, then presumably the drinks businesses must fear the consequences of temporary disruption; perhaps each is worried that they wouldn’t survive a shakeup.&nbsp;</span></p><p><span>Nutt also favours the </span><a href="https://en.wikipedia.org/wiki/Alcoholic_drinks_in_Sweden#Regulation_and_taxation" rel="">Swedish model</a><span>, in which only government shops, open at certain times of day, are allowed to sell alcohol of more than 3.5% ABV (</span><a href="https://en.wikipedia.org/wiki/Alcohol_by_volume" rel="">Alcohol By Volume</a><span>):</span></p><blockquote><p>This system has led to the Swedes drinking roughly three-quarters of what we drink per year in the UK. And to a rate of deaths from liver cirrhosis approximately half of ours. This shows, yet again, how small changes in consumption lead to bigger health gains.</p></blockquote><p>He fails to demonstrate that these government-run shops cause this effect, but still, it seems like a sound policy.</p><p><span>So: Alcohol is bad, too much alcohol is </span><em>really</em><span> bad, and we could go a significant distance toward solving this problem if we could work out the political economy a bit better. But we can’t work out the political economy, at least for now. Unless there is a sudden national temperance movement, a combination of inertia and the drinks industry’s lobbying efforts means that change is unlikely.</span></p><p>Alcohol’s damaging impact on society seems doomed to remain. You could lobby your MP, and if enough people did so effectively, then maybe the drinks industry would eventually be cowed. But this is unsatisfactory. This book shows that so much of alcohol consumption is cultural; it’s just ‘the done thing’ to go out for an alcoholic drink or ten with your mates. Unacceptably high levels of drinking are a big part of the culture of Britain and Ireland.&nbsp;</p><p><span>The winners in this equilibrium are people who aren’t genetically predisposed to alcohol addiction, don’t feel the need for </span><a href="https://en.wikipedia.org/wiki/Dutch_courage" rel="">Dutch courage</a><span>, or, perhaps, are successful or content in different spheres of their lives. Some successful people are vulnerable too, in a different way – being wined and dined if you’re an executive, or trying to climb a corporate ladder by getting drinks after work. Nonetheless, it’s wrong that the privileged class of people who can manage this drug effectively do not try harder to make sure that the underprivileged, vulnerable members of society don’t end up addicted to alcohol.&nbsp;</span></p><p>I don’t enjoy drinking alcohol, frankly. I drink a little bit on some social occasions, but, following my arguments here, I’m not sure that I should. Abstention from alcohol is more or less costly for different individuals, and I am one of those fortunate enough to manage it with ease.</p><p><span>It’s possible to consume alcohol in a safe manner, with risks to your long-term health that you might consider acceptable, if you enjoy drinking it. But, if you do so, then, at the </span><a href="https://www.econlib.org/library/Topics/College/margins.html" rel="">margin</a><span>, you are contributing to the idea that it’s normal to drink it. And that norm should be broken down. Drinking alcohol should always be a choice, not a default.&nbsp;</span></p><p>This social benefit of teetotalism is especially important to remember if you have negative associations with the groups, such as conservative Christians, who have campaigned against alcohol.&nbsp;&nbsp;</p><p><span>Modern liberalism has no real argument against people harming themselves with alcohol, if that’s what they want to do. In the absence of a Christian or other religious framework, it’s quite difficult to argue that you </span><em>should</em><span> do anything about people destroying their lives with alcohol. Who can tell you what makes your life worthwhile?</span></p><p><span>For example, in the 1980s, America introduced the National Minimum Drinking Age Act, raising the drinking age to 21, and Nutt writes that “this law … may have saved hundreds of thousands of lives”.</span></p><p><span> But Nutt doesn’t want to raise the minimum drinking age, despite this data:</span></p><blockquote><p>If someone can vote, if they can join the army, fight and die, get married, then they should be allowed to buy alcohol.</p></blockquote><p><span>Granted, there is a certain logic here. Yet the same argument could be made about cocaine or heroin – you’re an adult, you can decide (Nutt has been willing to follow his logic to its conclusion for </span><a href="https://en.wikipedia.org/wiki/David_Nutt#%22Equasy%22" rel="">ecstasy</a><span>). Those drugs are damaging to society, and I don’t think anyone has a ‘right’ to take them. But if we simply believe that each person is autonomous from age 18, entirely in charge of themselves, then we have limited moral arguments against drugs of any kind. If a moral framework of individual responsibility is not available to British and Irish society anymore, then perhaps individual teetotalism is the only way to go. That way the norm of alcohol consumption can be undermined, one person at a time.&nbsp;</span></p><p>Alcohol occupies a sinister position in British and Irish society and culture. But there is a better way, with stricter rules and different norms. You don’t have to fully agree with my prescriptions here to wonder what a society with no alcohol problems would look like. Formerly wasted talent would be used in the economy, countless lives would be saved, and families and relationships would be healthier and less violent. If we want to get there, we need to talk about the problem of alcohol.</p><p><em><span>Fergus McCullough works at an energy startup and holds an Emergent Ventures grant. An earlier version of this essay appeared on his </span><a href="https://fergus-mccullough.com/index.php/2021/04/09/against-alcohol/" rel="">blog</a><span>.</span></em></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Can Dell’s 6K monitor beat their 8K monitor? (161 pts)]]></title>
            <link>https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/</link>
            <guid>36577536</guid>
            <pubDate>Mon, 03 Jul 2023 19:12:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/">https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/</a>, See on <a href="https://news.ycombinator.com/item?id=36577536">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
  
  <details>
    <summary>Table of contents</summary>
    <nav>
  <ul>
    <li><a href="#compatibility">Compatibility</a></li>
    <li><a href="#compatibility-issues">Compatibility issues</a>
      <ul>
        <li><a href="#too-old-nvidia-driver--5355403-not-at-native-resolution">Too old nVidia driver (&lt; 535.54.03): not at native resolution</a></li>
        <li><a href="#intel-gpu-no-picture-or-only-4k">Intel GPU: no picture or only 4K?!</a></li>
        <li><a href="#resume">No picture after resume from suspend-to-RAM</a></li>
      </ul>
    </li>
    <li><a href="#scaling">Scaling</a>
      <ul>
        <li><a href="#i3-x11">i3 (X11)</a></li>
        <li><a href="#gnome-wayland">GNOME (Wayland)</a></li>
        <li><a href="#macos">macOS</a></li>
      </ul>
    </li>
    <li><a href="#observations">Observations</a>
      <ul>
        <li><a href="#matte-screen">Matte screen</a></li>
        <li><a href="#philosophical-question-peripherals-powered-on-by-default">Philosophical question: peripherals powered on by default?</a></li>
      </ul>
    </li>
    <li><a href="#conclusion">Conclusion</a></li>
  </ul>
</nav>
  </details>
  <p>For the last 10 years, I have been interested in hi-DPI monitors, and recently I
read about an interesting new monitor: <a href="https://www.dell.com/de-ch/shop/dell-ultrasharp-32-6k-monitor-u3224kba/apd/210-bhnx/monitore-und-monitorzubeh%C3%B6r">Dell’s 32-inch 6K monitor
(U3224KBA)</a>,
a productivity monitor that offers plenty of modern connectivity options like
DisplayPort 2, HDMI 2 and Thunderbolt 4.</p>
<p>My current monitor is a <a href="https://michael.stapelberg.ch/posts/2017-12-11-dell-up3218k/">Dell 32-inch 8K monitor
(UP3218K)</a>, which has a brilliant picture, but
a few annoying connectivity limitations and quirks — it needs two (!)
DisplayPort cables on a GPU with MST support, meaning that in practice, it only
works with nVidia graphics cards.</p>
<p>I was curious to try out the new 6K monitor to see if it would improve the
following points:</p>
<ul>
<li>Does the 6K monitor work well with most (all?) of my PCs and laptops?</li>
<li>Is 6K resolution enough, or would I miss the 8K resolution?</li>
<li>Is a matte screen the better option compared to the 8K monitor’s glossy finish?</li>
<li>Do the built-in peripherals work with Linux out of the box?</li>
</ul>
<p>I read <a href="https://www.heise.de/tests/32-Zoll-Display-mit-6K-und-USB-C-Dock-Dell-UltraSharp-U3224KBA-im-Test-9189751.html">a review on
heise+</a>
(also included in their c’t magazine), but the review can’t answer these
subjective questions of mine.</p>
<p>So I ordered one and tried it out!</p>















<p><a href="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/IMG_2383_featured.jpg"><img srcset="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/IMG_2383_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_1638957_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/IMG_2383_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_1638957_1800x0_resize_q75_box.jpg 3x" src="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/IMG_2383_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_1638957_600x0_resize_q75_box.jpg" width="600" height="450" loading="lazy"></a></p><h2 id="compatibility">Compatibility</h2>
<p>The native resolution of this monitor is 6144x3456 pixels.</p>
<p>To drive that resolution at 60 Hz, about 34 Gbps of data rate is needed.</p>
<p>DisplayPort 1.4a only offers a data rate of 25 Gbps, so your hardware and driver
need to support <a href="https://en.wikipedia.org/wiki/Display_Stream_Compression">Display Stream Compression
(DSC)</a> to reach the
full resolution at 60 Hz. I tried using DisplayPort 2.0, which supports 77 Gbps
of data rate, but the only GPU I have that supports DisplayPort 2 is the Intel
A380, which I could not get to work well with this monitor (see the next
section).</p>
<p>HDMI 2.1 offers 42 Gbps of data rate, but in my setup, the link would still
always use DSC.</p>
<p>Here are the combinations I have successfully tried:</p>
<table>
<thead>
<tr>
<th>Device</th>
<th>Cable</th>
<th>OS / Driver</th>
<th>Resolution</th>
</tr>
</thead>
<tbody>
<tr>
<td>MacBook Air M1</td>
<td>TB 3</td>
<td>macOS 13.4.1</td>
<td>native @ 60 Hz,<br> 8.1Gbps</td>
</tr>
<tr>
<td>GeForce RTX 4070<br>(DisplayPort 1.4a)</td>
<td>mDP-DP</td>
<td>Windows 11 21H2</td>
<td>native @ 60 Hz,<br> 12GBps DSC</td>
</tr>
<tr>
<td>GeForce RTX 4070</td>
<td>mDP-DP</td>
<td>Linux 6.3<br>nVidia 535.54.03</td>
<td>native @ 60 Hz,<br> 8.1GBps DSC</td>
</tr>
<tr>
<td>GeForce RTX 4070<br>(HDMI 2.1a)</td>
<td>HDMI</td>
<td>Windows 11 21H2</td>
<td>native @ 60 Hz,<br> 8.1GBps DSC</td>
</tr>
<tr>
<td>GeForce RTX 4070</td>
<td>HDMI</td>
<td>Linux 6.3<br>nVidia 535.54.03</td>
<td>native @ 60 Hz,<br> 6GBps 3CH DSC</td>
</tr>
<tr>
<td>GeForce RTX 3060</td>
<td>HDMI</td>
<td>Linux 6.3<br>nVidia 535.54.03</td>
<td>native @ 60 Hz,<br> 6GBps 3CH DSC</td>
</tr>
<tr>
<td>ThinkPad X1 Extreme</td>
<td>TB 4</td>
<td>Linux 6.3<br>nVidia 535.54.03</td>
<td>native @ 60 Hz,<br> 8.1GBps DSC</td>
</tr>
</tbody>
</table>


<p>The MacBook Air is the only device in my test that reaches full resolution
without using DSC.</p>
<h2 id="compatibility-issues">Compatibility issues</h2>
<p>Let’s talk about the combinations that did not work well.</p>
<h3 id="too-old-nvidia-driver--5355403-not-at-native-resolution">Too old nVidia driver (&lt; 535.54.03): not at native resolution</h3>
<p>You need a quite recent version of the nVidia driver, as they <strong>just recently</strong>
<a href="https://github.com/NVIDIA/open-gpu-kernel-modules/discussions/238">shipped support for
DSC</a> at high
resolutions. I successfully used DSC with 535.54.03.</p>
<p>With the “older” 530.41.03, I could only select 6016x3384 at 60 Hz, which is not
the native resolution of 6144x3456 at 60 Hz.</p>
<table>
<thead>
<tr>
<th>Device</th>
<th>Cable</th>
<th>OS / Driver</th>
<th>Resolution</th>
</tr>
</thead>
<tbody>
<tr>
<td>GeForce RTX 4070<br>(DisplayPort 1.4a)</td>
<td>mDP-DP</td>
<td>Linux 6.3<br>nVidia 530.41.03</td>
<td>native @ 30 Hz only,<br> <a href="https://michael.stapelberg.ch/cdn-cgi/l/email-protection" data-cfemail="89bfb9b8bff1babab1bdc9bfb9">[email&nbsp;protected]</a></td>
</tr>
<tr>
<td>GeForce RTX 4070<br>(HDMI 2.1a)</td>
<td>HDMI</td>
<td>Linux 6.3<br>nVidia 530.41.03</td>
<td>native @ 30 Hz only,<br> <a href="https://michael.stapelberg.ch/cdn-cgi/l/email-protection" data-cfemail="ebdddbdadd93d8d8d3dfabdddb">[email&nbsp;protected]</a></td>
</tr>
</tbody>
</table>
<h3 id="intel-gpu-no-picture-or-only-4k">Intel GPU: no picture or only 4K?!</h3>
<p>I was so excited when Intel announced that they are entering the graphics card
business. With all the experience and driver support for their integrated
graphics, I hoped for good Linux support.</p>
<p>Unfortunately, the Intel A380 I bought months ago continues to disappoint.</p>
<p>I could not get the 6K monitor to work at any resolution higher than 4K, not
even under Windows. Worse, when connecting the monitor using DisplayPort, I
wouldn’t get a picture at all (in Linux)!</p>
<table>
<thead>
<tr>
<th>Device</th>
<th>Cable</th>
<th>OS / Driver</th>
<th>Resolution</th>
</tr>
</thead>
<tbody>
<tr>
<td>ASRock Intel A380<br>(DisplayPort 2.0)</td>
<td>mDP-DP</td>
<td>Windows 11 21H2<br>Intel 31.0.101.4502</td>
<td>only 4K @ 60 Hz</td>
</tr>
<tr>
<td>ASRock Intel A380<br>(HDMI 2.0b)</td>
<td>HDMI</td>
<td>Windows 11 21H2<br>Intel 31.0.101.4502</td>
<td>only 4K @ 60 Hz</td>
</tr>
<tr>
<td>ASRock Intel A380<br>(DisplayPort 2.0)</td>
<td>mDP-DP</td>
<td>Linux 6.4</td>
<td>no picture in Xorg!</td>
</tr>
<tr>
<td>ASRock Intel A380<br>(HDMI 2.0b)</td>
<td>HDMI</td>
<td>Linux 6.4</td>
<td>only 4K @ 60 Hz</td>
</tr>
</tbody>
</table>
<h3 id="resume">No picture after resume from suspend-to-RAM</h3>
<p>I suspend my PC to RAM at least once per day, sometimes even more often.</p>
<p>With my current 8K monitor, I have nailed the suspend/wakeup procedure. With the
help of a smart plug, I’m automatically turning the monitor off (on suspend) and
on (on wakeup). After a couple of seconds of delay, I configure the correct
resolution using <code>xrandr</code>.</p>
<p>I had hoped that the 6K monitor would make any sort of intricate automation
superfluous.</p>
<p>Unfortunately, when I resumed my PC, I noticed that the monitor would not show a
picture at all! I had to log in from my laptop via SSH to change the resolution
with <code>xrandr</code> to 4K, then power the monitor off and on again, then change
resolution back to the native 6K.</p>
<h2 id="scaling">Scaling</h2>
<p>Once you have a physical connection established, how do you configure your
computer? With 6K at 32 inches, you’ll need to enable some kind of scaling in
order to comfortably read text.</p>
<p>This section shows what options Linux and macOS offer.</p>
<h3 id="i3-x11">i3 (X11)</h3>
<p>Just like many other programs on Linux, you configure i3’s scaling by <a href="https://wiki.archlinux.org/title/HiDPI#X_Resources">setting
the <code>Xft.dpi</code> X
resource</a>. The default is 96
dpi, so to get 200% scaling, set <code>Xft.dpi: 192</code>.</p>
<p>Personally, I found 240% scaling more comfortable, i.e. <code>Xft.dpi: 230</code>.</p>
<p>This corresponds to a logical resolution of 2560x1440 pixels.</p>
<h3 id="gnome-wayland">GNOME (Wayland)</h3>
<p>I figured I’d also give Wayland a shot, so I ran GNOME in Fedora 38 on my
ThinkPad X1 Extreme.</p>
<p>Here’s what the settings app shows in its “Displays” tab:</p>















<p><a href="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/Screenshot%20from%202023-07-02%2012-25-57.png"><img srcset="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/Screenshot%20from%202023-07-02%2012-25-57_hu2cabb68d8c47fd27ed6a38a3c2c68dd8_125601_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/Screenshot%20from%202023-07-02%2012-25-57_hu2cabb68d8c47fd27ed6a38a3c2c68dd8_125601_1800x0_resize_box_3.png 3x" src="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/Screenshot%20from%202023-07-02%2012-25-57_hu2cabb68d8c47fd27ed6a38a3c2c68dd8_125601_600x0_resize_box_3.png" width="600" height="415" loading="lazy"></a></p><p>I tried <a href="https://www.omglinux.com/how-to-enable-fractional-scaling-fedora/">enabling fractional
scaling</a>, but
then GNOME froze until I disconnected the Dell monitor.</p>
<h3 id="macos">macOS</h3>
<p>When connecting the monitor to my MacBook Air M1 (2020), it defaults to a
logical resolution of 3072x1728, i.e. 200% scaling.</p>















<p><a href="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/2023-07-02-macOS-displays.png"><img srcset="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/2023-07-02-macOS-displays_hubf6579ec96f99144ce4f6a52859f99df_573205_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/2023-07-02-macOS-displays_hubf6579ec96f99144ce4f6a52859f99df_573205_1800x0_resize_box_3.png 3x" src="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/2023-07-02-macOS-displays_hubf6579ec96f99144ce4f6a52859f99df_573205_600x0_resize_box_3.png" width="600" height="617" loading="lazy"></a></p><p>For comparison, with <a href="https://www.apple.com/studio-display/">Apple’s (5K) Studio
Display</a>, the default setting is
2560x1440 (200% scaling), or 2880x1620 (“More Space”, 177% scaling).</p>
<h2 id="observations">Observations</h2>
<h3 id="matte-screen">Matte screen</h3>
<p>I remember the uproar when Lenovo introduced ThinkPads with glossy screens. At
the time, I thought I prefer matte screens, but over the years, I heard that
glossy screens are getting better and better, and consumers typically prefer
them for their better picture quality.</p>
<p>The 8K monitor I’m using has a glossy screen on which reflections are quite
visible. The MacBook Air’s screen shows fewer reflections in comparison.</p>
<p>Dell’s 6K monitor offers me a nice opportunity to see which option I prefer.</p>
<p>Surprisingly, I found that I don’t like the matte screen better!</p>
<p>It’s hard to describe, but somehow the picture seems more “dull”, or less bright
(independent of the actual brightness of the monitor), or more toned down. The
colors don’t pop as much.</p>
<h3 id="philosophical-question-peripherals-powered-on-by-default">Philosophical question: peripherals powered on by default?</h3>
<p>One thing that I did not anticipate beforehand is the difference in how
peripherals are treated when they are built into the monitor vs. when they are
plugged into a USB hub.</p>
<p>I like to have my peripherals off-by-default, with “on” being the exceptional
state. In fact, I leave my microphone disconnected and only plug its USB cable
in when I need it. I also recently realized that I want sound to only be played
on headphones, so I disconnected my normal speakers in favor of my Bluetooth
dongle.</p>
<p>The 6K monitor, on the other hand, has all of its peripherals on-by-default, and
bright red LEDs light up when the speaker or microphone is muted.</p>
<p>This is the opposite of how I want my peripherals to behave, but of course I
understand why Dell developed the monitor with on-by-default peripherals.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Let’s go back to the questions I started the article with and answer them one by one:</p>
<ol>
<li>
<p>Does the 6K monitor work well with most (all?) of my PCs and laptops?</p>
<p>→ <strong>Answer:</strong> The 6K monitor works a lot better than the 8K monitor, but that’s a
low bar to clear. I would still call the 6K monitor finicky. Even when you
run a latest-gen GPU with latest drivers, the monitor does not reliably show
a picture after a suspend/resume cycle.</p>
</li>
<li>
<p>Is 6K resolution enough, or would I miss the 8K resolution?</p>
<p>→ <strong>Answer:</strong> I had really hoped that 6K would turn out to be enough, but the
difference to 8K is visible with the bare eye. Just like 200% scaling is a
nice step up from working at 96 dpi, 300% scaling (what I use on 8K) is
another noticeable step up.</p>
</li>
<li>
<p>Is a matte screen the better option compared to the 8K monitor’s glossy finish?</p>
<p>→ <strong>Answer:</strong> While I don’t like the reflections in Dell’s 8K monitor, the
picture quality is undeniably better compared to a matte screen. The 6K
monitor just doesn’t look as good, and it’s not just about the difference in
text sharpness.</p>
</li>
<li>
<p>Do the built-in peripherals work with Linux out of the box?</p>
<p>→ <strong>Answer:</strong> Yes, as far as I can tell. The webcam works fine with the
generic <code>uvcvideo</code> USB webcam driver, the microphone and speakers work out of
the box. I have not tested the presence sensor.</p>
</li>
</ol>
<p>So, would I recommend the monitor? Depends on what you’re using as your current
monitor and as the device you want to connect!</p>
<p>If you’re coming from a 4K display, the 6K resolution will be a nice step
up. Connecting a MacBook Air M1 or newer is a great experience. If you want to
connect PCs, be sure to use a new-enough nVidia GPU with latest drivers. Even
under these ideal conditions, you might run into quirks like the <a href="#resume">no picture
after resume</a> problem. If you don’t mind early adopter pains like that,
and are looking for a monitor that includes peripherals, go for it!</p>
<p>For me, switching from my 8K monitor would be a downgrade without enough
benefits.</p>
<p>The ideal monitor for me would be a mixture between Dell’s 8K and 6K models:</p>
<ul>
<li>8K resolution
<ul>
<li>…but with more modern connectivity options (one cable! works out of the box!).</li>
</ul>
</li>
<li>without built-in peripherals like webcam, microphone and speaker
<ul>
<li>…but with the USB KVM switch concept (monitor input coupled to USB upstream).</li>
</ul>
</li>
<li>glossy finish for best picture quality
<ul>
<li>…but with fewer reflections.</li>
</ul>
</li>
</ul>
<p>Maybe they’ll develop an updated version of the 8K monitor at some point?</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Dive into the Math Behind Bitcoin Schnorr Signatures (123 pts)]]></title>
            <link>https://conduition.io/cryptography/schnorr/</link>
            <guid>36576361</guid>
            <pubDate>Mon, 03 Jul 2023 17:42:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://conduition.io/cryptography/schnorr/">https://conduition.io/cryptography/schnorr/</a>, See on <a href="https://news.ycombinator.com/item?id=36576361">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
    <h2 id="Introduction"><a href="#Introduction" title="Introduction"></a>Introduction</h2><p>Many culture articles in the Bitcoin space will extol the sound byte:</p>
<blockquote>
<p>Schnorr signatures will improve Bitcoin’s privacy for multisignature transactions!</p>
</blockquote>
<p>…and yet most choose to omit the clever math which makes this statement true. The math isn’t mind-bogglingly complex. One needs only a basic grasp of <a href="https://conduition.io/cryptography/ecc-resources/">elliptic curve cryptography</a>, and the benefits of Schnorr Signatures quickly become very exciting.</p>
<h2 id="Preliminaries"><a href="#Preliminaries" title="Preliminaries"></a>Preliminaries</h2><p>Just so we’re all on the same page:</p>
<table>
<thead>
<tr>
<th>Notation</th>
<th>Meaning</th>
</tr>
</thead>
<tbody><tr>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.778ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 786 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g></g></g></svg></mjx-container></td>
<td>The <a target="_blank" rel="noopener" href="https://bitcoin.stackexchange.com/questions/58784/how-were-the-secp256k1-base-point-coordinates-decided">base-point of the secp256k1 curve.</a></td>
</tr>
<tr>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container></td>
<td>The message we’re trying to sign (a byte array).</td>
</tr>
<tr>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.063ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2238 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1849,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></td>
<td>The SHA-256 hash function.</td>
</tr>
<tr>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container></td>
<td>The <a target="_blank" rel="noopener" href="https://crypto.stackexchange.com/questions/53597/how-did-someone-discover-n-order-of-g-for-secp256k1"><em>order</em> of the secp256k1 curve</a>. There are <mjx-container jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.254ex" height="1.692ex" role="img" focusable="false" viewBox="0 -666 2322.4 748"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1822.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> possible valid non-zero points on the curve, plus the ‘infinity’ point (AKA zero).</td>
</tr>
<tr>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="7.47ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 3301.8 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(849.8,0)"><path data-c="2190" d="M944 261T944 250T929 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q121 283 158 314T215 375T247 434T264 480L267 497Q269 503 270 505T275 509T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H929Q944 261 944 250Z"></path></g><g data-mml-node="msub" transform="translate(2127.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2124" d="M39 -1Q29 9 29 12Q29 23 60 77T219 337L410 648H364Q261 648 210 628Q168 612 142 588T109 545T97 509T88 490Q85 489 80 489Q72 489 61 503L70 588Q72 607 75 628T79 662T81 675Q84 677 88 681Q90 683 341 683H592Q604 673 604 666Q604 662 412 348L221 37Q221 35 301 35Q406 35 446 48Q504 68 543 111T597 212Q602 239 617 239Q624 239 629 234T635 223Q635 215 621 113T604 8L597 1Q595 -1 317 -1H39ZM148 637L166 648H112V632Q111 629 110 622T108 612Q108 608 110 608T116 612T129 623T148 637ZM552 646Q552 648 504 648Q452 648 450 643Q448 639 266 343T77 37Q77 35 128 35H179L366 339L552 646ZM572 35Q581 89 581 97L561 77Q542 59 526 48L508 37L539 35H572Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(700,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container></td>
<td>Sampling <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container> randomly from the set of integers modulo <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>. Note that we exclude zero when sampling.</td>
</tr>
<tr>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.564ex;" xmlns="http://www.w3.org/2000/svg" width="4.557ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 2014 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mtext" transform="translate(529,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(779,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(1057,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mtext" transform="translate(1335,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(1585,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container></td>
<td>Concatenation of the byte arrays <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.02ex" role="img" focusable="false" viewBox="0 -441 529 451"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></svg></mjx-container> and <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>.</td>
</tr>
</tbody></table>
<p>In general, upper-case variables like <mjx-container jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.928ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 852 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g></svg></mjx-container> refer to points on the elliptic curve, while lower case letters like <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container> refer to ordinary natural numbers, called <em>scalars.</em></p>
<h2 id="Enter-the-Frankenstein"><a href="#Enter-the-Frankenstein" title="Enter the Frankenstein"></a>Enter the Frankenstein</h2><p>To understand how delicious Schnorr Signatures are for Bitcoin developers, we need to compare it to what we have now: ECDSA. I’ll forgive you if you choose to skip this part.</p>
<details>
  <summary><i>Show me the ugly ECDSA math!</i></summary>

<p>I guess you’re really gonna make me huh? Best get this over with, then. <sub><i>*drinking intensifies</i></sub></p>
<p>The old ECDSA protocol signs messages like so:</p>
<ol>
<li>Choose our private key, <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>, which is just a random integer in <mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.657ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1174.3 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2124" d="M39 -1Q29 9 29 12Q29 23 60 77T219 337L410 648H364Q261 648 210 628Q168 612 142 588T109 545T97 509T88 490Q85 489 80 489Q72 489 61 503L70 588Q72 607 75 628T79 662T81 675Q84 677 88 681Q90 683 341 683H592Q604 673 604 666Q604 662 412 348L221 37Q221 35 301 35Q406 35 446 48Q504 68 543 111T597 212Q602 239 617 239Q624 239 629 234T635 223Q635 215 621 113T604 8L597 1Q595 -1 317 -1H39ZM148 637L166 648H112V632Q111 629 110 622T108 612Q108 608 110 608T116 612T129 623T148 637ZM552 646Q552 648 504 648Q452 648 450 643Q448 639 266 343T77 37Q77 35 128 35H179L366 339L552 646ZM572 35Q581 89 581 97L561 77Q542 59 526 48L508 37L539 35H572Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(700,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container>.</li>
</ol>

<ol start="2">
<li>Compute the hash of the message and interpret it as an integer <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.052ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 465 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<ol start="3">
<li>Sample a random nonce <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<ol start="4">
<li>Multiply <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container> by the base point <mjx-container jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.778ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 786 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<ol start="5">
<li>Take the <mjx-container jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container> coordinate from that computation modulo <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<p>* <sub>If <mjx-container jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.169ex" height="1.692ex" role="img" focusable="false" viewBox="0 -666 2284.6 748"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(728.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1784.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>, return to step 4 and choose a new nonce <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container>.</sub></p>
<ol start="7">
<li>Signing time! Compute this mess.</li>
</ol>

<p>* <sub>If <mjx-container jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.209ex" height="1.692ex" role="img" focusable="false" viewBox="0 -666 2302.6 748"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(746.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1802.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>, return to step 4 and choose a new nonce <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container>.</sub></p>
<p>** <sub><mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.411ex" height="1.912ex" role="img" focusable="false" viewBox="0 -833.9 1507.7 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="TeXAtom" transform="translate(554,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container> is the <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/Modular_multiplicative_inverse">modular multiplicative inverse</a> of <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container>.</sub></p>
<p><strong>The final signature is the awful pair of integers</strong> <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.848ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2142.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(840,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1284.7,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(1753.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>.</p>
<p>Verifying the signature goes (painfully) as follows:</p>
<ol>
<li>Find (or compute) the public key.</li>
</ol>

<ol start="2">
<li>Check that both <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> and <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container> are integers in <mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.657ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1174.3 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2124" d="M39 -1Q29 9 29 12Q29 23 60 77T219 337L410 648H364Q261 648 210 628Q168 612 142 588T109 545T97 509T88 490Q85 489 80 489Q72 489 61 503L70 588Q72 607 75 628T79 662T81 675Q84 677 88 681Q90 683 341 683H592Q604 673 604 666Q604 662 412 348L221 37Q221 35 301 35Q406 35 446 48Q504 68 543 111T597 212Q602 239 617 239Q624 239 629 234T635 223Q635 215 621 113T604 8L597 1Q595 -1 317 -1H39ZM148 637L166 648H112V632Q111 629 110 622T108 612Q108 608 110 608T116 612T129 623T148 637ZM552 646Q552 648 504 648Q452 648 450 643Q448 639 266 343T77 37Q77 35 128 35H179L366 339L552 646ZM572 35Q581 89 581 97L561 77Q542 59 526 48L508 37L539 35H572Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(700,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container>.</li>
</ol>

<ol start="3">
<li>Compute the hash of the message that was signed, just as the signer would have.</li>
</ol>

<ol start="4">
<li>Compute these intermediate “u-values”.</li>
</ol>

<ol start="5">
<li>Multiply <mjx-container jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container> and <mjx-container jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container> by the base point and public key respectively.</li>
</ol>

<ol start="6">
<li>Sum both points to get a verification point.</li>
</ol>

<ol start="7">
<li>Verify the X-coordinate of that point is equivalent to the signature’s <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> component when taken modulo <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<p>If so, then wham you’ve got a valid signature. <em>“That was easy wasn’t it?”</em> <sub><i>he mused ironically…</i></sub></p>
<blockquote>
<p>but why does that work?</p>
</blockquote>
<p>-I hear you ask.</p>
<p>I am not a masochist, so I will spare myself more work rewriting a proof for an algorithm which I’m taking such pains to paint as awful. Instead, go check out <a target="_blank" rel="noopener" href="https://cryptobook.nakov.com/digital-signatures/ecdsa-sign-verify-messages#the-math-behind-the-ecdsa-sign-verify">this proof of ECDSA in Doctor Nakov’s <em>Practical Cryptography for Developers</em> e-book</a>.</p>
</details>

<blockquote>
<p>but why is ECDSA so awful?</p>
</blockquote>
<p>For starters, it requires computing <a target="_blank" rel="noopener" href="https://en.wikipedia.org/wiki/Modular_multiplicative_inverse">modular multiplicative inverses</a> of the nonce <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container> when signing, and of the signature <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container> when verifying. <em>Yuck.</em> Well, more accurately, <em>yawn.</em> MMI’s are very slow compared to other discrete math operations.</p>
<p>Furthermore, just look at the number of steps I had to write out above. It’s less a signing algorithm than a <em>surgical procedure</em> which happens to involve your private keys.</p>
<p>Also, ECDSA signatures are <em>malleable.</em> <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.848ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2142.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(840,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1284.7,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(1753.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> is a valid signature, but so is <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.971ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3965.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(840,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1284.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2106.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3107.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(3576.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>! This can mess with some applications if they expect signatures not to change. Legacy Bitcoin P2PKH addresses are still vulnerable to this - any transaction which spends from P2PKH can have its transaction ID changed if the signature <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container> value is inverted.</p>
<p>Furtherermore, <a target="_blank" rel="noopener" href="https://crypto.stackexchange.com/questions/71029/are-dsa-and-ecdsa-provably-secure-assuming-dl-security">ECDSA has pretty weak security proofs</a>.</p>
<p>Furtherestmore, ECDSA (and its forerunner DSA) were originally published in the early nineties to get around the patent on Schnorr Signatures, which finally lapsed in 2008. <em>Bitcoin has been using a knock-off of Schnorr since the genesis block.</em> It’s time to finally upgrade to the brand-name.</p>
<h2 id="Schnorr-Signatures"><a href="#Schnorr-Signatures" title="Schnorr Signatures"></a>Schnorr Signatures</h2><p>Compared to ECDSA, Schnorr Signatures are a breath of fresh air for their elegant simplicity.</p>
<ol>
<li>Sample a random nonce <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<ol start="2">
<li>Multiply <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> by the base-point <mjx-container jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.778ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 786 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<ol start="3">
<li>Hash the the nonce point <mjx-container jax="SVG"><svg style="vertical-align: -0.048ex;" xmlns="http://www.w3.org/2000/svg" width="1.717ex" height="1.593ex" role="img" focusable="false" viewBox="0 -683 759 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g></g></g></svg></mjx-container>, the signing public key <mjx-container jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.873ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 828 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g></g></g></svg></mjx-container>, and the message <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> to get the challenge <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<p>* <sub>If you read about Schnorr Signatures elsewhere online, you might see the challenge computed as <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="13.933ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6158.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(743.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1799.6,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(2687.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3076.6,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mtext" transform="translate(3835.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(4085.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(4363.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mtext" transform="translate(4641.6,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(4891.6,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(5769.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>. The variant used in Bitcoin is called <em>Key-Prefixed Schnorr,</em> where the challenge also commits to the signing key.</sub></p>
<ol start="4">
<li>Compute the signature using the private key <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<p><strong>The final signature is the tuple</strong> <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.544ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2450.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(1148,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1592.7,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(2061.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, where <mjx-container jax="SVG"><svg style="vertical-align: -0.048ex;" xmlns="http://www.w3.org/2000/svg" width="1.717ex" height="1.593ex" role="img" focusable="false" viewBox="0 -683 759 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g></g></g></svg></mjx-container> is a point on the curve and <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container> is a scalar value.</p>
<p>Verifying Schnorr Signature is easy-peezy. Just multiply both sides of the above equation by <mjx-container jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.778ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 786 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g></g></g></svg></mjx-container> and check for equality.</p>

<p>The verifier is assumed to know the public key <mjx-container jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.873ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 828 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g></g></g></svg></mjx-container> and the message <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> - otherwise what are they verifying, anyways? Verifying is as fast as a hash, followed by two point-multiplication operations and one point-addition operation.</p>
<p>It’s pretty easy to prove that the signature is valid by simply factoring out <mjx-container jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.778ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 786 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g></g></g></svg></mjx-container>.</p>

<p>Thanks to the properties of cryptographically secure elliptic curves like secp256k1, factoring a curve point to find its discrete logarithm isn’t computationally feasible (yet). This is why signatures cannot be forged without knowing the private key <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>, but they can be easily verified using <mjx-container jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.778ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 786 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g></g></g></svg></mjx-container>.</p>
<blockquote>
<p>but why do these particular equations work?</p>
</blockquote>
<p>Far be it from me to reverse-justify Schnorr’s design, but perhaps I can at least point out what each step and each variable is doing from the perspective of someone attempting to attack the scheme.</p>
<p>Recall the definition of a Schnorr Signature.</p>

<p>Note that:</p>
<ul>
<li><mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> and <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container> are both randomly sampled from the set of modulo <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>, AKA <mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.657ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1174.3 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2124" d="M39 -1Q29 9 29 12Q29 23 60 77T219 337L410 648H364Q261 648 210 628Q168 612 142 588T109 545T97 509T88 490Q85 489 80 489Q72 489 61 503L70 588Q72 607 75 628T79 662T81 675Q84 677 88 681Q90 683 341 683H592Q604 673 604 666Q604 662 412 348L221 37Q221 35 301 35Q406 35 446 48Q504 68 543 111T597 212Q602 239 617 239Q624 239 629 234T635 223Q635 215 621 113T604 8L597 1Q595 -1 317 -1H39ZM148 637L166 648H112V632Q111 629 110 622T108 612Q108 608 110 608T116 612T129 623T148 637ZM552 646Q552 648 504 648Q452 648 450 643Q448 639 266 343T77 37Q77 35 128 35H179L366 339L552 646ZM572 35Q581 89 581 97L561 77Q542 59 526 48L508 37L539 35H572Z"></path></g></g><g data-mml-node="mi" transform="translate(700,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>.</li>
<li>The nonce <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> changes for every signature whereas the private key <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container> remains consistent.</li>
<li><mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container> can be computed by anyone who knows the (presumably) public parameters <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.349ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4132.3 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(1148,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1592.7,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(2420.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2865.3,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3743.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>.</li>
</ul>
<p>When the signer multiplies their private key <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container> with the challenge <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container>, this results in another scalar value somewhere in <mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.657ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1174.3 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2124" d="M39 -1Q29 9 29 12Q29 23 60 77T219 337L410 648H364Q261 648 210 628Q168 612 142 588T109 545T97 509T88 490Q85 489 80 489Q72 489 61 503L70 588Q72 607 75 628T79 662T81 675Q84 677 88 681Q90 683 341 683H592Q604 673 604 666Q604 662 412 348L221 37Q221 35 301 35Q406 35 446 48Q504 68 543 111T597 212Q602 239 617 239Q624 239 629 234T635 223Q635 215 621 113T604 8L597 1Q595 -1 317 -1H39ZM148 637L166 648H112V632Q111 629 110 622T108 612Q108 608 110 608T116 612T129 623T148 637ZM552 646Q552 648 504 648Q452 648 450 643Q448 639 266 343T77 37Q77 35 128 35H179L366 339L552 646ZM572 35Q581 89 581 97L561 77Q542 59 526 48L508 37L539 35H572Z"></path></g></g><g data-mml-node="mi" transform="translate(700,-150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container> which they could only have computed if they knew <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>. For instance, someone with only <mjx-container jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.873ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 828 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g></g></g></svg></mjx-container> and <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container> would have no idea how to compute <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.865ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 1708.4 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(688.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(1188.4,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>.</p>
<p>So what’s the point of adding <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>? Why not make the signature <mjx-container jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.309ex" height="1.756ex" role="img" focusable="false" viewBox="0 -694 2788.6 776"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(746.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1802.6,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2268.6,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>? Because <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container> is public, so any observer could compute the private key by inverting <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container>.</p>

<p>This is why <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> must be secret and uniformly random: These properties prevent an observer from being able to compute the signer’s private key from the signature.</p>
<p>If an observer knew the <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> value used on a signature <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container>, they could compute the signer’s private key.</p>

<p>Another common gotcha: <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> must be different for every signature. If the same nonce <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> is used in two different signatures <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.864ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3033.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mn" transform="translate(502,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1294.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1739.2,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mn" transform="translate(502,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2644.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> made by the same private key on distinct messages <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.714ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3851.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(911,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1703.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2148.2,0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(911,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3462.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, then an observer can easily compute the private key used to sign both messages by solving a system of equations.</p>


<p>Interestingly, that definition of <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container> indicates something quite unexpected. <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container> is the <em>slope</em> of the line connecting the points <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.857ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3030.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mn" transform="translate(499,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1291.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1736.2,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mn" transform="translate(502,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(2641.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> and <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.857ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3030.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mn" transform="translate(499,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1291.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1736.2,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mn" transform="translate(502,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2641.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> on the Cartesian plane, but only if <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> is reused between both signatures.</p>
<p>Contrastingly, if we used two different nonces <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.782ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2997.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1276.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1721.2,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2608.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> when creating the two signatures, an observer cannot solve for <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container> without knowing either <mjx-container jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.008ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 887.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container> or <mjx-container jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.008ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 887.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>, because there is no usable system of equations.</p>

<p>What if we used different nonces to sign the same message? Would this result in any Bad News™? No, because remember that the challenge <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container> also commits to the nonce.</p>

<p>If the nonce changes, so does <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container>. Even if <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container> only committed to <mjx-container jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.873ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 828 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g></g></g></svg></mjx-container> and <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>, an attacker would still need to know <mjx-container jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.008ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 887.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container> or <mjx-container jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.008ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 887.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container> to compute <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>.</p>
<blockquote>
<p>but why is this so cool?</p>
</blockquote>
<ol>
<li>Schnorr is faster.</li>
<li>Schnorr is simpler to implement than ECDSA.</li>
<li>Schnorr signatures aren’t malleable.</li>
<li>Schnorr <a target="_blank" rel="noopener" href="https://eprint.iacr.org/2012/029">has very solid security proofs</a>.</li>
<li><u><em><strong>Schnorr permits linear signature aggregation.</strong></em></u></li>
</ol>
<p>I bolded #5 there because that one feature is <em>incredibly important</em> for the future potential of Bitcoin.</p>
<h2 id="Aggregator-or-Crocodile"><a href="#Aggregator-or-Crocodile" title="Aggregator or Crocodile?"></a>Aggregator or Crocodile?</h2><p>Signature aggregation is <del>not possible</del> <a target="_blank" rel="noopener" href="https://medium.com/cryptoadvance/ecdsa-is-not-that-bad-two-party-signing-without-schnorr-or-bls-1941806ec36f">very difficult</a> in ECDSA. <a target="_blank" rel="noopener" href="https://eprint.iacr.org/2020/1390">ECDSA <em>Threshold signatures</em> are perfectly achievable</a>, and these are handy but nowhere near as easy or as fast as linear signature aggregation with Schnorr. And as if it needed to flex even harder, <a target="_blank" rel="noopener" href="https://eprint.iacr.org/2022/550">Schnorr can do threshold signatures even better than ECDSA</a>.</p>
<p>When I say Schnorr Signatures are <em>linear,</em> this means that the only operations needed for Schnorr are simple scalar addition and multiplication. Verification is the same: one only needs point-addition and point-multiplication to verify the signature. ECDSA on the other hand, requires modular multiplicative inversion to sign and verify.</p>
<p>This opaque-sounding explanation can be boiled down to one highly consequential fact:</p>
<p><strong>The sum of a set of Schnorr signatures on a given message is a <em>valid signature</em> under the sum of the public keys which made those signatures.</strong></p>
<p>In other words, if a bunch of different signers cooperatively sign the same message, those signatures can be summed up to produce an <em>aggregated signature.</em> If one also sums up the pubkeys of those who signed to get an <em>aggregated pubkey,</em> the aggregated signature will be valid under the aggregated pubkey.</p>
<h2 id="Naive-Example"><a href="#Naive-Example" title="Naive Example"></a>Naive Example</h2><p>Let’s say you have three parties with their own private and public key pairs. They each sample their own private random nonce.</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Public Key</th>
<th>Private Key</th>
<th>Nonce</th>
</tr>
</thead>
<tbody><tr>
<td>Alice</td>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.355ex;" xmlns="http://www.w3.org/2000/svg" width="2.907ex" height="1.901ex" role="img" focusable="false" viewBox="0 -683 1285.1 840.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(861,-150) scale(0.707)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></g></svg></mjx-container></td>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.355ex;" xmlns="http://www.w3.org/2000/svg" width="2.211ex" height="1.926ex" role="img" focusable="false" viewBox="0 -694 977.1 851.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></g></svg></mjx-container></td>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.355ex;" xmlns="http://www.w3.org/2000/svg" width="2.054ex" height="1.355ex" role="img" focusable="false" viewBox="0 -442 908.1 599.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(484,-150) scale(0.707)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></g></svg></mjx-container></td>
</tr>
<tr>
<td>Bob</td>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.747ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1214.3 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(861,-150) scale(0.707)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></g></svg></mjx-container></td>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.051ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 906.3 851.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></g></svg></mjx-container></td>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="1.894ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 837.3 599.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(484,-150) scale(0.707)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></g></svg></mjx-container></td>
</tr>
<tr>
<td>Carol</td>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.754ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1217.2 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(861,-150) scale(0.707)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></svg></mjx-container></td>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.057ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 909.2 851.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></svg></mjx-container></td>
<td><mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="1.901ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 840.2 599.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(484,-150) scale(0.707)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></svg></mjx-container></td>
</tr>
</tbody></table>
<p>They all want to sign the same message <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>, and naturally have agreed on the base point <mjx-container jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.778ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 786 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g></g></g></svg></mjx-container> and hash function <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.063ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2238 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1849,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>.</p>
<ol>
<li>They each compute their own public nonce points independently.</li>
</ol>

<ol start="2">
<li>They agree on an aggregated nonce point <mjx-container jax="SVG"><svg style="vertical-align: -0.048ex;" xmlns="http://www.w3.org/2000/svg" width="1.717ex" height="1.593ex" role="img" focusable="false" viewBox="0 -683 759 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<ol start="3">
<li>They agree on an aggregated public key <mjx-container jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.873ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 828 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g></g></g></svg></mjx-container>.</li>
</ol>

<ol start="4">
<li>They each hash the message with this aggregated nonce point and pubkey.</li>
</ol>

<ol start="5">
<li>They each compute their share of the signature.</li>
</ol>

<ol start="6">
<li>They send each other their <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container> values and aggregate by summing them all up.</li>
</ol>

<p>The final aggregated signature is <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.544ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2450.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(1148,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1592.7,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(2061.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>.</p>
<p>To verify, recall that a signature <mjx-container jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.544ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2450.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(1148,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1592.7,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(2061.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> from pubkey <mjx-container jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.873ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 828 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g></g></g></svg></mjx-container> is valid on message <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> if:</p>

<p>And this is going to be the case for our aggregated signature. Recall how Alice, Bob and Carol aggregated <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container>.</p>

<p>Our verification works out because by aggregating the signatures, we also aggregated the individual nonces and the private keys (multiplied by <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container>). We can then factor out <mjx-container jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container>, meaning we kinda multiplied it with an <em>aggregated private key,</em> and added an <em>aggregated secret nonce,</em> even though participants never exposed their private keys or secret nonces to one another.</p>
<p>Multiplying <mjx-container jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container> and <mjx-container jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.778ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 786 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g></g></g></svg></mjx-container> will thus satisfy the equality.</p>

<h2 id="HOWEVER"><a href="#HOWEVER" title="HOWEVER"></a>HOWEVER</h2><p>This example has a hidden flaw if used as a multisignature protocol under adversarial conditions (when co-signers don’t trust each other). <em>Can you see why?</em></p>
<p><sub><i>hint:</i> the attack vector is very early in the aggregation procedure.</sub></p>
<details>
  <summary><i>Tell me the answer already!</i></summary>

<p>A naive protocol like this is vulnerable to a <em>Rogue Key Attack</em> when co-signing with untrusted peers. This attack can be performed by whomever is <em>last</em> to share their public key with the other signers.</p>
<p>Let’s return to Alice, Bob, and Carol.</p>
<ul>
<li>Alice tells Bob and Carol her pubkey <mjx-container jax="SVG"><svg style="vertical-align: -0.355ex;" xmlns="http://www.w3.org/2000/svg" width="2.907ex" height="1.901ex" role="img" focusable="false" viewBox="0 -683 1285.1 840.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(861,-150) scale(0.707)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></g></svg></mjx-container>.</li>
<li>Bob tells Alice and Carol his pubkey <mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.747ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1214.3 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(861,-150) scale(0.707)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></g></svg></mjx-container>.</li>
<li>Alice and Bob now expect Carol to share her public key.</li>
</ul>
<p>Carol has a sneaky option here. She can give Alice and Bob a phony public key <mjx-container jax="SVG"><svg style="vertical-align: -0.576ex;" xmlns="http://www.w3.org/2000/svg" width="2.754ex" height="2.294ex" role="img" focusable="false" viewBox="0 -759 1217.2 1013.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(861,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g><g data-mml-node="mi" transform="translate(861,-247) scale(0.707)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></svg></mjx-container> which is actually the same as her public key but with Alice’s key and Bob’s key <em>subtracted from it</em>.</p>

<p>Carol doesn’t know the discrete log (private key) of <mjx-container jax="SVG"><svg style="vertical-align: -0.576ex;" xmlns="http://www.w3.org/2000/svg" width="2.754ex" height="2.294ex" role="img" focusable="false" viewBox="0 -759 1217.2 1013.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(861,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g><g data-mml-node="mi" transform="translate(861,-247) scale(0.707)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></svg></mjx-container>, but that’s OK, because when everyone computes the final aggregated public key, they’ll sum each other’s keys together, and <em>Alice and Bob’s keys will cancel out.</em></p>

<p>Carol has just fooled Alice and Bob into agreeing to use an apparently aggregated key which <em>only Carol controls.</em></p>
<p>Neither Alice nor Bob would be able to distinguish between Carol’s authentic key <mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.754ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1217.2 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(861,-150) scale(0.707)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></svg></mjx-container> and the phoney key <mjx-container jax="SVG"><svg style="vertical-align: -0.576ex;" xmlns="http://www.w3.org/2000/svg" width="2.754ex" height="2.294ex" role="img" focusable="false" viewBox="0 -759 1217.2 1013.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(861,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g><g data-mml-node="mi" transform="translate(861,-247) scale(0.707)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></svg></mjx-container> because they don’t know <mjx-container jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.754ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1217.2 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(861,-150) scale(0.707)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></svg></mjx-container> belongs to Carol! That’s why they were sharing the keys in the first place.</p>
<p>Carol could also collude with Bob to exclude Alice’s key from the final aggregated key, like so.</p>

<h3 id="The-Solution"><a href="#The-Solution" title="The Solution"></a>The Solution</h3><p>Rogue Key Attacks can be fixed naively by requiring that each signer to prove she knows the private key for her public key. Such an affirmation is called <em>Knowledge-of-Secret-Key</em> (KOSK). This is flawed because not every key I want to aggregate with is going to be fully under my control all the time. Perhaps I want to aggregate a public key right now, but I can only expect to learn its secret key next week (e.g. in a <a target="_blank" rel="noopener" href="https://dci.mit.edu/smart-contracts">Discreet Log Contract</a>. Perhaps I want to aggregate a public key which <em>is itself an aggregated key,</em> whose component secret keys are owned by 3rd parties.</p>
<p>Instead modern Bitcoin developers use a kind of commitment protocol to avoid the risk of rogue keys. This is what <a target="_blank" rel="noopener" href="https://tlu.tarilabs.com/cryptography/The_MuSig_Schnorr_Signature_Scheme"><em>MuSig</em></a> offers. <del>I’m looking forward to discussing MuSig in another post</del> Take a look at <a href="https://conduition.io/cryptography/musig">my article about MuSig</a> to learn what all the fuss is about.</p>
</details>

<h2 id="Benefits"><a href="#Benefits" title="Benefits"></a>Benefits</h2><p>In combination with <a target="_blank" rel="noopener" href="https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki">Taproot</a>, developers can embed arbitrary combinations of aggregated public keys into a single tweaked public key which encodes a highly complex array of possible spending conditions, but still looks like any old normal public key when used under normal conditions.</p>
<p>Bitcoin developers can use multisignature signing schemes like <a href="https://conduition.io/cryptography/musig">MuSig</a> and threshold signing protocols like <a target="_blank" rel="noopener" href="https://eprint.iacr.org/2022/550">ROAST</a> with much greater efficiency, security, and privacy than has ever been possible before with ECDSA.</p>
<p>Any given public key can now be an aggregation of colossal numbers of child keys and scripts and threshold public keys and much much more.</p>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[MartyPC, cycle accurate IBM PC/XT emulator (122 pts)]]></title>
            <link>https://www.vogons.org/viewtopic.php?t=94972</link>
            <guid>36575787</guid>
            <pubDate>Mon, 03 Jul 2023 17:01:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.vogons.org/viewtopic.php?t=94972">https://www.vogons.org/viewtopic.php?t=94972</a>, See on <a href="https://news.ycombinator.com/item?id=36575787">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
								<section aria-labelledby="post-1174440-title" id="p1174440">
								<h3 id="post-1174440-title">First post, by GloriousCow</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
							
								
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=49596&amp;sr=posts" title="Search GloriousCow’s posts">79</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2022-09-12, 20:00</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div>
						
								
	

																																	
						

						
						

																			<p><small>Last edited by <a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=49596"><span role="text presentation">GloriousCow</span></a> on 2023-07-02, 23:35. Edited 1 time in total.</small>
															</p>
																		
						<div role="note" aria-label="Signature"><p>MartyPC: A cycle-accurate IBM PC/XT emulator | <a href="https://github.com/dbalsom/martypc">https://github.com/dbalsom/martypc</a></p></div>					</div>
				</div>
							</section>
											<article aria-labelledby="post-1174442-title" id="p1174442">
								<h3 id="post-1174442-title">Reply 1 of 15, by GloriousCow</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
							
								
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=49596&amp;sr=posts" title="Search GloriousCow’s posts">79</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2022-09-12, 20:00</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div>
						
								
	

						
						<div><p>MartyPC Release 0.1.2 is out today and introduces some massive performance improvements and quite a few fixes.  <br>
<a href="https://github.com/dbalsom/martypc/releases/tag/0.1.2">https://github.com/dbalsom/martypc/releases/tag/0.1.2</a></p>

<p>Now that I've completed an initial optimization pass, I'm going to work on improving MartyPC's debugger and QOL features - I've already gotten some great suggestions from VileR and others.</p> 

<p>The feedback for MartyPC has been great, I'm glad so many people have said such kind things about it.  It's been a labor of love for me over the past year, and I hope to continue working on it and making it better with everyone's help.</p></div>

						
						

																								
						<div role="note" aria-label="Signature"><p>MartyPC: A cycle-accurate IBM PC/XT emulator | <a href="https://github.com/dbalsom/martypc">https://github.com/dbalsom/martypc</a></p></div>					</div>
				</div>
							</article>
											<article aria-labelledby="post-1174444-title" id="p1174444">
								<h3 id="post-1174444-title">Reply 2 of 15, by GloriousCow</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
							
								
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=49596&amp;sr=posts" title="Search GloriousCow’s posts">79</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2022-09-12, 20:00</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div>
						
								
	

						
						<div><blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"> <a href="https://www.vogons.org/viewtopic.php?p=1174418#p1174418" title="Go to original post">wrote on 2023-06-29, 23:27:</a></cite><p>Hey Glorious Cow! I love this emulator already! I have been messing around with more accurate PC emulators lately and it's fascinating to appreciate all the nuances of these machines. Your emulator was very easy to get up and running! The ability to seamlessly toggle between RGB and composite graphics is freaking sweet, I love it!</p></blockquote>

<p>Glad you like it!</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=37887">mothergoose729</a> <a href="https://www.vogons.org/viewtopic.php?p=1174418#p1174418" title="Go to original post">wrote on 2023-06-29, 23:27:</a></cite><p>I know this is an initial release, so obviously there are a lot of QOL and feature improvement to make from a usability stand point. I used bios images from my PCem collection and it was hard to figure out what MartyPC needed exactly to boot. I eventually found it, but mostly just by copy and pasting tones of image files into the ROMs folder until something booted.</p></blockquote>

<p>I've started working on better documentation. You're not the first to struggle with the ROM situation. I have an initial wiki set up, which goes into detail about the ROMs required by MartyPC:  <a href="https://github.com/dbalsom/martypc/wiki/ROMs">https://github.com/dbalsom/martypc/wiki/ROMs</a>   I hope to expand on this a bit as well, it was a bit more extensive but Github's outage today ate my first draft (ouch)</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=37887">mothergoose729</a> <a href="https://www.vogons.org/viewtopic.php?p=1174418#p1174418" title="Go to original post">wrote on 2023-06-29, 23:27:</a></cite><details><summary><span>I have a couple of questions about the features the emulator supports right now: […]<br></span><span data-icon="down-arrow">Show full quote</span></summary>
<p>I have a couple of questions about the features the emulator supports right now:</p>

<p>1) Do you plan to support specific machine configurations like PCem does? (amount of memory, number of floppy drives and their size, ect)<br>
2) Is there a true full screen mode implemented? <br>
3) Can you load floppies from other directories?</p>
</details></blockquote>

<p>1) A better machine configuration system is definitely needed. I originally thought 'why would anyone want less than 640k of ram?' but you're not the first to ask, and switching between different configurations is a bit tedious; although you can always have separate configuration files and specify them on the command line.   I need to have something that specifies the size of a floppy drive - DOS currently formats everything as 360k.  I thought I was being clever by making the drive type change depending on what image you loaded into it (which lets you read a 1.44MB disk on a XT), but this doesn't really work that well with the BIOS detecting drive type on boot and storing the size in the BDA.</p>

<p>2) There's no full screen mode, but it's definitely something on the to-do list.  This will probably be part of a display system refactor that includes dual-window support, if I can manage it.</p>

<p>3) Sadly no, the floppy directory limitation is due to me not wanting to try to call the native file browser on 3 different platforms (although there are libraries that might help with this) and not wanting to make a custom file browser.  It gets unmanageable when you have a lot of floppies (the menu just cuts off at the bottom of the screen), there's no subdirectory support, and so on.  Listing additional floppy directories to scan in the config would be a good improvement, but the UI has to be improved to support it as well.</p></div>

						
						

																								
						<div role="note" aria-label="Signature"><p>MartyPC: A cycle-accurate IBM PC/XT emulator | <a href="https://github.com/dbalsom/martypc">https://github.com/dbalsom/martypc</a></p></div>					</div>
				</div>
							</article>
											<article aria-labelledby="post-1174797-title" id="p1174797">
								<h3 id="post-1174797-title">Reply 3 of 15, by Scali</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
												
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">l33t</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=30223&amp;sr=posts" title="Search Scali’s posts">4701</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2014-12-13, 14:24</dd>
		</p>
		
												
				
	</dl>

				</div>


					<div><p>This version is certainly a lot faster than the previous release.<br>
In RGBI-mode even the old Core i7 can sustain 60 fps through most things.<br>
Composite mode is still very heavy, giving only about 30 fps. but in theory, if the composite is moved to a shader, that should solve that problem.</p>

<p>It looks like it defaults to the Vulkan API if supported, and falls back to DX12 otherwise. There do not appear to be any alternatives to that, because on a system that has no DX12-support, it seems to use the Microsoft software renderer for DX12. Which sadly doesn't perform that well, so a fallback to DX11 or OpenGL may have been better on these systems. But I'm not sure if the library you use can give you these options.<br>
Edit: Apparently you can just set an <a href="https://lib.rs/crates/wgpu">env var WGPU_BACKEND</a> to 'dx11' or 'gl'. But for some reason it doesn't actually run in those configurations.</p></div>
				</div>
							</article>
											<article aria-labelledby="post-1174880-title" id="p1174880">
								<h3 id="post-1174880-title">Reply 4 of 15, by GloriousCow</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
							
								
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=49596&amp;sr=posts" title="Search GloriousCow’s posts">79</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2022-09-12, 20:00</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div>
						
								
	

						
						<div><blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=30223">Scali</a> <a href="https://www.vogons.org/viewtopic.php?p=1174797#p1174797" title="Go to original post">wrote on 2023-07-01, 11:30:</a></cite><p>This version is certainly a lot faster than the previous release.<br>
In RGBI-mode even the old Core i7 can sustain 60 fps through most things.<br>
Composite mode is still very heavy, giving only about 30 fps. but in theory, if the composite is moved to a shader, that should solve that problem.</p></blockquote>

<p>Glad to hear things are working better.  The CGA emulation on the first release was really dog slow.  There are more optimizations coming.  I'm thinking I can save a lot of drawing time in periods where no CGA VRAM writes or CRTC updates have occurred; I can tick the CGA as normal but just not output anything (assuming I don't clear the buffer) because in theory the frame would be unchanged.  Plus I haven't even really touched the CPU, and I have several ideas there.</p>

<p>I'm in the process of bringing over reenigne's composite code; having considered what he said about emulating the analog behavior of the multiplexer and such, I realized there was no point in trying to re-duplicate his sampling work. We'll see if it is any faster on its own, but I'll also be using it as the base for the shader - it's one pass, vs my two-pass method, so that's an extra bonus. I just need to fix Flower Girl from being green and purple at the moment.</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=30223">Scali</a> <a href="https://www.vogons.org/viewtopic.php?p=1174797#p1174797" title="Go to original post">wrote on 2023-07-01, 11:30:</a></cite><p>It looks like it defaults to the Vulkan API if supported, and falls back to DX12 otherwise. There do not appear to be any alternatives to that, because on a system that has no DX12-support, it seems to use the Microsoft software renderer for DX12. Which sadly doesn't perform that well, so a fallback to DX11 or OpenGL may have been better on these systems. But I'm not sure if the library you use can give you these options.<br>
Edit: Apparently you can just set an <a href="https://lib.rs/crates/wgpu">env var WGPU_BACKEND</a> to 'dx11' or 'gl'. But for some reason it doesn't actually run in those configurations.</p></blockquote>

<p>I'm surprised there even is a software renderer for DX12!  I don't know about dx11 specifically but I know the gl backend is not supported on Windows, as it's targeting ES3.  I can look into whether you can specify a backend from code, but I was hoping that it would "do the right thing" by itself...</p></div>

						
						

																								
						<div role="note" aria-label="Signature"><p>MartyPC: A cycle-accurate IBM PC/XT emulator | <a href="https://github.com/dbalsom/martypc">https://github.com/dbalsom/martypc</a></p></div>					</div>
				</div>
							</article>
											<article aria-labelledby="post-1174906-title" id="p1174906">
								<h3 id="post-1174906-title">Reply 5 of 15, by peterfirefly</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
												
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=23872&amp;sr=posts" title="Search peterfirefly’s posts">4</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2011-10-21, 14:45</dd>
		</p>
		
										<p role="presentation">
				<dt role="associationlistitemkey term" data-icon="location"><span>Location</span></dt>
				<dd role="associationlistitemvalue definition">Copenhagen, Denmark</dd>
			</p>
							
				
	</dl>

				</div>


					<div>
						
								
	

						
						<div><p>config.rs has a 'raw_rom' field in the 'Machine' struct.  It is never read actually used, but it means 1) the supplied martypc.toml file doesn't work and 2) one is left mightily confused by the error message.  I am very new at Rust so it took a while to find out that 'raw_rom' was a bool field that was never read so the actual value didn't matter.</p>

<p>The Windows version is very, very slow -- but looks ok so far.<br>
The Linux version (under WSL2 w/ Ubuntu 22.04LTS) is even slower AND it looks weird.  That might be due to unusual DPI settings on my part.</p>

<p>My machine is a budget laptop from 2018 extended to 20GB RAM (Lenovo 14-some-letters).  WSL2 uses llvmpipe (software) for its OpenGL/Vulkan implementation so of course its "GPU" is slow -- but I'm surprised the emulator needs to use the "GPU" so much that it matters even when the emulated cursor is just blinking (very slowly) while the emulated memory is being tested by the BIOS.  The Windows version uses the built-in Intel HD Graphics 620.</p>

<p>I asked MartyPC to emulate the 5150 and I have no idea what BIOS ROM it used (it doesn't say -- and I dumped three of them into installs\roms\).  After an eternity the emulated PC gave up with "131 FC00 ROM" -- perhaps because I "pressed" the turbo button?</p>

<p>Is there a way to skip the memory test for faster boots?</p>

<p>The Performance window has lots of values but I don't know what most of them mean.  I can say that FPS=57, UPS a bit lower, Emulation time seems to be around 4-6ms, Render time seems to be around 10ms -- they all change so fast that I can't tell for sure.  This is for the Windows version.  I have played with egui's demo and it has lower render time (often around 3ms) despite seemingly doing more on the screen.</p>

<p>Yes, I did build with "cargo build --release".</p> 

<p>PS: forgot to say I used git version 435c5592d23b34a024473cdccc014b508cf4bbec.</p></div>

						
							<div role="group" aria-labelledby="post-1174906-attachments-title">
		<h4 id="post-1174906-attachments-title"><span>Attachments</span></h4>
					<ul role="list">
							<li role="listitem" data-icon="attachment">


			
					<figure aria-labelledby="a-167435">
				<a href="https://www.vogons.org/download/file.php?id=167435&amp;mode=view"><img src="https://www.vogons.org/thumbs/23872_2e016fe6f6020c5ee465d7b52e448c2b/Screenshot%202023-07-01%20204027.png" alt="Screenshot 2023-07-01 204027.png"></a>
				<figcaption><dl role="associationlist definitionlist">
	<dt role="associationlistitemkey term">Filename</dt>
	<dd role="associationlistitemvalue definition"><a id="a-167435" href="https://www.vogons.org/download/file.php?id=167435&amp;mode=view">Screenshot 2023-07-01 204027.png</a></dd>
	<dt role="associationlistitemkey term">File size</dt>
	<dd role="associationlistitemvalue definition">55.46 <abbr role="text presentation" title="kibibytes" aria-label="kibibytes">KiB</abbr></dd>
	<dt role="associationlistitemkey term">Views</dt>
	<dd role="associationlistitemvalue definition">39447 views</dd>
			<dt role="associationlistitemkey term">File license</dt>
	<dd role="associationlistitemvalue definition"><a href="https://spdx.org/licenses/CC-BY-4.0.html#licenseText" title="Creative Commons Attribution 4.0 International license" data-icon="view-license">CC-BY-4.0</a></dd>
</dl>
</figcaption>
			</figure>
		
		
			</li>
						</ul>
			</div>


																								
											</div>
				</div>
							</article>
											<article aria-labelledby="post-1174925-title" id="p1174925">
								<h3 id="post-1174925-title">Reply 6 of 15, by GloriousCow</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
							
								
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=49596&amp;sr=posts" title="Search GloriousCow’s posts">79</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2022-09-12, 20:00</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div>
						
								
	

						
						<div><blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=23872">peterfirefly</a> <a href="https://www.vogons.org/viewtopic.php?p=1174906#p1174906" title="Go to original post">wrote on 2023-07-01, 19:02:</a></cite><p>config.rs has a 'raw_rom' field in the 'Machine' struct.  It is never read actually used, but it means 1) the supplied martypc.toml file doesn't work and 2) one is left mightily confused by the error message.  I am very new at Rust so it took a while to find out that 'raw_rom' was a bool field that was never read so the actual value didn't matter.</p></blockquote>

<p>That field is only used by the web player, sorry -  It should have been an Option&lt;bool&gt; so that it is not required to be present.  But I would recommend in general that if you build from source you just drop the executable into the directory structure from a release. I don't know if i'll be keeping that 'install' directory in the source tree.</p> 

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=23872">peterfirefly</a> <a href="https://www.vogons.org/viewtopic.php?p=1174906#p1174906" title="Go to original post">wrote on 2023-07-01, 19:02:</a></cite><p>The Windows version is very, very slow -- but looks ok so far.<br>
The Linux version (under WSL2 w/ Ubuntu 22.04LTS) is even slower AND it looks weird.  That might be due to unusual DPI settings on my part.</p></blockquote>

<p>When you say slow, do you mean moving debug windows around? or the general emulation performance? Can you take a screenshot of the Performance window?</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=23872">peterfirefly</a> <a href="https://www.vogons.org/viewtopic.php?p=1174906#p1174906" title="Go to original post">wrote on 2023-07-01, 19:02:</a></cite><p>My machine is a budget laptop from 2018 extended to 20GB RAM (Lenovo 14-some-letters).  WSL2 uses llvmpipe (software) for its OpenGL/Vulkan implementation so of course its "GPU" is slow -- but I'm surprised the emulator needs to use the "GPU" so much that it matters even when the emulated cursor is just blinking (very slowly) while the emulated memory is being tested by the BIOS.  The Windows version uses the built-in Intel HD Graphics 620.</p></blockquote>

<p>What model CPU does it have?</p>

<p>The GPU is not used to emulate the CGA, so what you see on the emulated screen is largely irrelevant. It is used to composite the display buffer with the GUI windows - I'm a bit surprised that this has turned out to be such a challenge for a lot of PCs.  I might make an SDL front end for lower-spec machines or configurations where a fast GPU isn't available.</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=23872">peterfirefly</a> <a href="https://www.vogons.org/viewtopic.php?p=1174906#p1174906" title="Go to original post">wrote on 2023-07-01, 19:02:</a></cite><p>I asked MartyPC to emulate the 5150 and I have no idea what BIOS ROM it used (it doesn't say -- and I dumped three of them into installs\roms\).  After an eternity the emulated PC gave up with "131 FC00 ROM" -- perhaps because I "pressed" the turbo button?</p></blockquote>

<p>minuszerodegrees says that 131 is the 'cassette port wrap-around (loopback) test', interesting.  Does it boot with Turbo off?</p> 

<p>I think I will add a Machine Info window that will show which ROM is in use; but in general, it will pick the newest set by release date.  So if you have all three known versions of the 5150 bios in the ROMs folder it will use the October '82  BIOS.</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=23872">peterfirefly</a> <a href="https://www.vogons.org/viewtopic.php?p=1174906#p1174906" title="Go to original post">wrote on 2023-07-01, 19:02:</a></cite><p>Is there a way to skip the memory test for faster boots?</p></blockquote>

<p>In general, I'd recommend emulating a 5160 with the 1986 BIOS unless you have a specific interest in the 5150.  MartyPC will hot-patch the 1986 5160 BIOS to speed up the memory test dramatically, because I got tired of waiting ages for it to boot myself.  I could do this for every BIOS version, but it's just a matter of finding the right offsets and defining the patches for each ROM.</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=23872">peterfirefly</a> <a href="https://www.vogons.org/viewtopic.php?p=1174906#p1174906" title="Go to original post">wrote on 2023-07-01, 19:02:</a></cite><p>The Performance window has lots of values but I don't know what most of them mean.  I can say that FPS=57, UPS a bit lower, Emulation time seems to be around 4-6ms, Render time seems to be around 10ms -- they all change so fast that I can't tell for sure.  This is for the Windows version.  I have played with egui's demo and it has lower render time (often around 3ms) despite seemingly doing more on the screen.</p></blockquote>

<p>'Render time' reported by MartyPC isn't EGUI's render time, so we can't compare the two, it's mainly comprised of three steps: converting the indexed color CGA output to RGBA, scaling it, and optionally converting it for composite monitor simulation.</p>

<p>Your render time is extremely high - mine is well under 1ms.  So you're bumping up against 16ms frame times, which means you won't be keeping 60fps.  Can you go to Display menu and uncheck 'Correct Aspect Ratio' and tell me what that drops your render time down to?  0.1.2 introduced SIMD-enabled aspect correction, and I'm wondering if you have some CPU incompatibility - if turning off aspect correction drastically improves render time that would be a smoking gun.</p></div>

						
						

																								
						<div role="note" aria-label="Signature"><p>MartyPC: A cycle-accurate IBM PC/XT emulator | <a href="https://github.com/dbalsom/martypc">https://github.com/dbalsom/martypc</a></p></div>					</div>
				</div>
							</article>
											<article aria-labelledby="post-1174928-title" id="p1174928">
								<h3 id="post-1174928-title">Reply 7 of 15, by peterfirefly</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
												
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=23872&amp;sr=posts" title="Search peterfirefly’s posts">4</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2011-10-21, 14:45</dd>
		</p>
		
										<p role="presentation">
				<dt role="associationlistitemkey term" data-icon="location"><span>Location</span></dt>
				<dd role="associationlistitemvalue definition">Copenhagen, Denmark</dd>
			</p>
							
				
	</dl>

				</div>


					<div>
						
								
	

						
						<div><p>&gt; But I would recommend in general that if you build from source you just drop the executable into the directory structure from a release. I don't know if i'll be keeping that 'install' directory in the source tree.</p> 

<p>Ok, didn't know that.</p>

<p>&gt; When you say slow, do you mean moving debug windows around? or the general emulation performance? Can you take a screenshot of the Performance window?</p>

<p>emulation performance.</p>

<p>&gt; What model CPU does it have?</p>

<p>i3-7100U, running at 2.40GHz (power is plugged in and I turned all the power saving off).</p>

<p>&gt;The GPU is not used to emulate the CGA, so what you see on the emulated screen is largely irrelevant. It is used to composite the display buffer with the GUI windows - I'm a bit surprised that this has  turned out to be such a challenge for a lot of PCs.  I might make an SDL front end for lower-spec machines or configurations where a fast GPU isn't available.</p>

<p>Yes, I found your shader.  Isn't it just a simple image copy, possibly with a bit of filtering?</p>

<p>&gt; minuszerodegrees says that 131 is the 'cassette port wrap-around (loopback) test', interesting.  Does it boot with Turbo off?</p> 

<p>Nope.  Same error.  I quit the emulator and started it again to be sure.</p>

<p>&gt; I think I will add a Machine Info window that will show which ROM is in use; but in general, it will pick the newest set by release date.  So if you have all three known versions of the 5150 bios in the ROMs folder it will use the October '82  BIOS.</p>

<p>I'd be happy with a println! <span data-version="6.1" data-src="1f600" data-alt="grinning face">😀</span></p>

<p>&gt; In general, I'd recommend emulating a 5160 with the 1986 BIOS unless you have a specific interest in the 5150.  MartyPC will hot-patch the 1986 5160 BIOS to speed up the memory test dramatically, because I got tired of waiting ages for it to boot myself.  I could do this for every BIOS version, but it's just a matter of finding the right offsets and defining the patches for each ROM.</p>

<p>I wanted to see Arena 5150 -- but I'll gladly take that speed hack!</p>

<p>I haven't tried the 5160 emulation yet.</p>

<p>&gt; 'Render time' reported by MartyPC isn't EGUI's render time, so we can't compare the two, it's mainly comprised of three steps: converting the indexed color CGA output to RGBA, scaling it, and optionally converting it for composite monitor simulation.</p>

<p>Oh, I thought it was.</p>

<p>&gt; Your render time is extremely high - mine is well under 1ms.  So you're bumping up against 16ms frame times, which means you won't be keeping 60fps.  Can you go to Display menu and uncheck 'Correct Aspect Ratio' and tell me what that drops your render time down to?  0.1.2 introduced SIMD-enabled aspect correction, and I'm wondering if you have some CPU incompatibility - if turning off aspect correction drastically improves render time that would be a smoking gun.</p>

<p>Doesn't seem to make a difference.  I also looked at the GPU% in Task Manager.  It is around 8.7% with or without "Correct Aspect Ratio" when there are no egui windows open and the CPU is running and doing memory test.  I know the 620 is very slow compared to a modern, real graphics card -- but it can do 400 GFLOPS and 24 Gtexels/s.  I have no idea what it spends 8.7% on!</p>

<p>I'll play with 5160 and hopefully figure out how to use Tracy in the next couple of days.  I'll get back when I know more.  So far this rust + egui + shader journey has been great fun so I definitely want to continue.</p>

<p><a href="https://github.com/wolfpld/tracy">https://github.com/wolfpld/tracy</a></p>

<p>(I haven't figured out how to use Vogons' quotes yet -- sorry about that.)</p></div>

						
							<div role="group" aria-labelledby="post-1174928-attachments-title">
		<h4 id="post-1174928-attachments-title"><span>Attachments</span></h4>
					<ul role="list">
							<li role="listitem" data-icon="attachment">


			
					<figure aria-labelledby="a-167452">
				<a href="https://www.vogons.org/download/file.php?id=167452&amp;mode=view"><img src="https://www.vogons.org/thumbs/23872_78828303a5b8c9a0f376f8e1e581ebb4/Screenshot%202023-07-01%20215508.png" alt="Screenshot 2023-07-01 215508.png"></a>
				<figcaption><dl role="associationlist definitionlist">
	<dt role="associationlistitemkey term">Filename</dt>
	<dd role="associationlistitemvalue definition"><a id="a-167452" href="https://www.vogons.org/download/file.php?id=167452&amp;mode=view">Screenshot 2023-07-01 215508.png</a></dd>
	<dt role="associationlistitemkey term">File size</dt>
	<dd role="associationlistitemvalue definition">48.21 <abbr role="text presentation" title="kibibytes" aria-label="kibibytes">KiB</abbr></dd>
	<dt role="associationlistitemkey term">Views</dt>
	<dd role="associationlistitemvalue definition">39425 views</dd>
			<dt role="associationlistitemkey term">File license</dt>
	<dd role="associationlistitemvalue definition"><a href="https://spdx.org/licenses/CC-BY-4.0.html#licenseText" title="Creative Commons Attribution 4.0 International license" data-icon="view-license">CC-BY-4.0</a></dd>
</dl>
</figcaption>
			</figure>
		
		
			</li>
						</ul>
			</div>


																								
											</div>
				</div>
							</article>
											<article aria-labelledby="post-1174937-title" id="p1174937">
								<h3 id="post-1174937-title">Reply 8 of 15, by GloriousCow</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
							
								
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=49596&amp;sr=posts" title="Search GloriousCow’s posts">79</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2022-09-12, 20:00</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div>
						
								
	

						
						<div><blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=23872">peterfirefly</a> <a href="https://www.vogons.org/viewtopic.php?p=1174928#p1174928" title="Go to original post">wrote on 2023-07-01, 20:02:</a></cite><p>I wanted to see Arena 5150 -- but I'll gladly take that speed hack!</p></blockquote>

<p>Good news, Area 5150 works fine on a 5160.</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=23872">peterfirefly</a> <a href="https://www.vogons.org/viewtopic.php?p=1174928#p1174928" title="Go to original post">wrote on 2023-07-01, 20:02:</a></cite><p>Doesn't seem to make a difference.  I also looked at the GPU% in Task Manager.  It is around 8.7% with or without "Correct Aspect Ratio" when there are no egui windows open and the CPU is running and doing memory test.  I know the 620 is very slow compared to a modern, real graphics card -- but it can do 400 GFLOPS and 24 Gtexels/s.  I have no idea what it spends 8.7% on!</p></blockquote>

<p>All the stuff in 'Render time' is being run on your CPU, not your GPU.  I know that sounds a little counterintuitive considering we associate 'Rendering' with the GPU. Maybe I should rename it to 'Buffer Processing' or something less confusing.</p>  

<p>Is there a chance you could install cargo flamegraph <a href="https://github.com/flamegraph-rs/flamegraph">https://github.com/flamegraph-rs/flamegraph </a> and generate one  (just for a few seconds even) ? it might help me get an idea of where the slowdown is on your system.</p></div>

						
						

																								
						<div role="note" aria-label="Signature"><p>MartyPC: A cycle-accurate IBM PC/XT emulator | <a href="https://github.com/dbalsom/martypc">https://github.com/dbalsom/martypc</a></p></div>					</div>
				</div>
							</article>
											<article aria-labelledby="post-1174938-title" id="p1174938">
								<h3 id="post-1174938-title">Reply 9 of 15, by peterfirefly</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
												
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=23872&amp;sr=posts" title="Search peterfirefly’s posts">4</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2011-10-21, 14:45</dd>
		</p>
		
										<p role="presentation">
				<dt role="associationlistitemkey term" data-icon="location"><span>Location</span></dt>
				<dd role="associationlistitemvalue definition">Copenhagen, Denmark</dd>
			</p>
							
				
	</dl>

				</div>


					<div><p>&gt; All the stuff in 'Render time' is being run on your CPU, not your GPU.  I know that sounds a little counterintuitive considering we associate 'Rendering' with the GPU. Maybe I should rename it to 'Buffer Processing' or something less confusing.</p>  

<p>I got that.  I still don't understand why it is using 8.7% of my GPU!  And reducing the GPU usage would make a large difference for WSL2.</p>

<p>That's why I want to run Tracy on it.</p>

<p>&gt; Is there a chance you could install cargo flamegraph <a href="https://github.com/flamegraph-rs/flamegraph">https://github.com/flamegraph-rs/flamegraph </a> and generate one  (just for a few seconds even) ? it might help me get an idea of where the slowdown is on your system.</p>

<p>There is every chance!  But not tonight...</p></div>
				</div>
							</article>
											<article aria-labelledby="post-1174958-title" id="p1174958">
								<h3 id="post-1174958-title">Reply 10 of 15, by GloriousCow</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
							
								
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=49596&amp;sr=posts" title="Search GloriousCow’s posts">79</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2022-09-12, 20:00</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div>
						
								
	

						
						<div><p>I've successfully ported reenigne's composite code, and putting them side by side really shows off the deficiencies in my algorithm:</p>

<div>


			
					<figure aria-labelledby="a-167470">
				<a href="https://www.vogons.org/download/file.php?id=167470&amp;mode=view"><img src="https://www.vogons.org/thumbs/49596_79287d9fe5075fa18f053dcf22f1aef5/old_vs_reenigne.png" alt="old_vs_reenigne.png"></a>
				<figcaption><dl role="associationlist definitionlist">
	<dt role="associationlistitemkey term">Filename</dt>
	<dd role="associationlistitemvalue definition"><a id="a-167470" href="https://www.vogons.org/download/file.php?id=167470&amp;mode=view">old_vs_reenigne.png</a></dd>
	<dt role="associationlistitemkey term">File size</dt>
	<dd role="associationlistitemvalue definition">125.84 <abbr role="text presentation" title="kibibytes" aria-label="kibibytes">KiB</abbr></dd>
	<dt role="associationlistitemkey term">Views</dt>
	<dd role="associationlistitemvalue definition">39369 views</dd>
			<dt role="associationlistitemkey term">File comment</dt>
		<dd role="associationlistitemvalue definition">Old MartyPC composite vs new (reenigne) method</dd>
			<dt role="associationlistitemkey term">File license</dt>
	<dd role="associationlistitemvalue definition"><span data-icon="view-license">Public domain</span></dd>
</dl>
</figcaption>
			</figure>
		
		
			</div>

<p>With the added benefit of it being nearly 4x faster.  Since it's one pass I can completely skip the composite signal conversion step the old algorithm had to use.  Still want to make it a shader, but having a reasonably fast software path is a good thing.</p></div>

						
						

																								
						<div role="note" aria-label="Signature"><p>MartyPC: A cycle-accurate IBM PC/XT emulator | <a href="https://github.com/dbalsom/martypc">https://github.com/dbalsom/martypc</a></p></div>					</div>
				</div>
							</article>
											<article aria-labelledby="post-1175220-title" id="p1175220">
								<h3 id="post-1175220-title">Reply 11 of 15, by GloriousCow</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
							
								
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=49596&amp;sr=posts" title="Search GloriousCow’s posts">79</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2022-09-12, 20:00</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div>
						
								
	

						
						<div><p>With the much faster composite now in place, I've added a web demo for 8088MPH:</p>

<p><a href="https://dbalsom.github.io/martypc/web/player.html?title=8088mph">https://dbalsom.github.io/martypc/web/player. … l?title=8088mph</a></p></div>

						
						

																								
						<div role="note" aria-label="Signature"><p>MartyPC: A cycle-accurate IBM PC/XT emulator | <a href="https://github.com/dbalsom/martypc">https://github.com/dbalsom/martypc</a></p></div>					</div>
				</div>
							</article>
											<article aria-labelledby="post-1175223-title" id="p1175223">
								<h3 id="post-1175223-title">Reply 12 of 15, by mdrejhon</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
												
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=51669&amp;sr=posts" title="Search mdrejhon’s posts">6</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2023-07-01, 10:18</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div><p>Really nice!  How are you compiling your Rust software into JavaScript?</p>  

<p>That's fantastic-looking composite emulation -- best I've ever seen in a Javascript emulator -- and even runs realtime 60fps.   I'd ask for a fullscreen button, or a double-click to enter/exit fullscreen, but that's only a nice-to-have.</p>

<p>Bugs:<br>
1 -- Second bug, it's not letting me zoom the canvas image via the common CTRL+scrollwheel (zoom webpage) -- it resists resizing. I'd like to go 200% to fill more of my screen.<br>
2 -- There's a very minor raster glitch in the Kefrens bars in 8088MPH in the Javascript version of your emulator.  Not sure if it's because of the settings chosen, or your emulator;<br>
3 -- It seemed to skip over some sections of demo (maybe a late buffered Enter key)</p>

<p><b>UPDATE: There was a behavior where pressing Enter in the startup gradient tester didn't work, but restarting browser worked to fix item 1!  But see item 3<b></b></b></p></div>
				</div>
							</article>
											<article aria-labelledby="post-1175233-title" id="p1175233">
								<h3 id="post-1175233-title">Reply 13 of 15, by GloriousCow</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
							
								
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=49596&amp;sr=posts" title="Search GloriousCow’s posts">79</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2022-09-12, 20:00</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div>
						
								
	

						
						<div><blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=51669">mdrejhon</a> <a href="https://www.vogons.org/viewtopic.php?p=1175223#p1175223" title="Go to original post">wrote on 2023-07-02, 23:46:</a></cite><p>Really nice!  How are you compiling your Rust software into JavaScript?</p></blockquote>

<p>wasm is a native target of the rust compiler, so it's pretty easy.  The only things I had to change was turning the file open/read operations into web requests.</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=51669">mdrejhon</a> <a href="https://www.vogons.org/viewtopic.php?p=1175223#p1175223" title="Go to original post">wrote on 2023-07-02, 23:46:</a></cite><p>That's fantastic-looking composite emulation -- best I've ever seen in a Javascript emulator -- and even runs realtime 60fps.   I'd ask for a fullscreen button, or a double-click to enter/exit fullscreen, but that's only a</p></blockquote>

<p>Wish I could take credit, but it's reenigne's composite code now... mine was close, but the colors were a bit dull. (and a lot slower)</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=51669">mdrejhon</a> <a href="https://www.vogons.org/viewtopic.php?p=1175223#p1175223" title="Go to original post">wrote on 2023-07-02, 23:46:</a></cite><p>1 -- Second bug, it's not letting me zoom the canvas image via the common CTRL+scrollwheel (zoom webpage) -- it resists resizing. I'd like to go 200% to fill more of my screen.</p></blockquote>

<p>I am not a web developer by any means, so forgive me if there is some jank to this page.</p> 

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=51669">mdrejhon</a> <a href="https://www.vogons.org/viewtopic.php?p=1175223#p1175223" title="Go to original post">wrote on 2023-07-02, 23:46:</a></cite><p>2 -- There's a very minor raster glitch in the Kefrens bars in 8088MPH in the Javascript version of your emulator.  Not sure if it's because of the settings chosen, or your emulator;</p></blockquote>

<p>Sometimes there's a vertical discontinuity in the background lines, is that what you mean? If not, could you screenshot it?</p>

<blockquote role="blockquote group" aria-label="Quote"><cite data-icon="quote"><a href="https://www.vogons.org/memberlist.php?mode=viewprofile&amp;u=51669">mdrejhon</a> <a href="https://www.vogons.org/viewtopic.php?p=1175223#p1175223" title="Go to original post">wrote on 2023-07-02, 23:46:</a></cite><p>3 -- It seemed to skip over some sections of demo (maybe a late buffered Enter key)</p></blockquote>

<p>I've watched this demo eight million times and didn't see any scene get skipped when i tested it, what effect was skipped?</p>

<p>EDIT: Okay, finally caught it skipping the Delorean effect after about a second.  Not sure what that's about, but I suspect timer issues...</p></div>

						
						

																								
						<div role="note" aria-label="Signature"><p>MartyPC: A cycle-accurate IBM PC/XT emulator | <a href="https://github.com/dbalsom/martypc">https://github.com/dbalsom/martypc</a></p></div>					</div>
				</div>
							</article>
											<article aria-labelledby="post-1175256-title" id="p1175256">
								<h3 id="post-1175256-title">Reply 14 of 15, by mdrejhon</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
												
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=51669&amp;sr=posts" title="Search mdrejhon’s posts">6</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2023-07-01, 10:18</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div><p>I just found out if I zoom before I refresh before Run, it works!  I get 200% fine.</p>

<p>By default, you have:</p>

<div role="group" aria-label="Code" data-clipboard-source=""><pre><span><code role="code"><span role="text presentation">&lt;canvas tabindex="0" data-raw-handle="1" width="768" height="576" alt="MartyPC WASM Player" style="width: 768px; height: 576px;"&gt;&lt;/canvas&gt;<br></span></code></span></pre></div>

<p>If I zoom 200% while running, I get an unresized emulator and it still stays:</p>

<div role="group" aria-label="Code" data-clipboard-source=""><pre><span><code role="code"><span role="text presentation">&lt;canvas tabindex="0" data-raw-handle="1" width="768" height="576" alt="MartyPC WASM Player" style="width: 768px; height: 576px;"&gt;&lt;/canvas&gt;<br></span></code></span></pre></div>

<p>If I zoom before I refresh before Run, it works and correctly scaled:</p>

<div role="group" aria-label="Code" data-clipboard-source=""><pre><span><code role="code"><span role="text presentation">&lt;canvas tabindex="0" data-raw-handle="1" width="768" height="576" alt="MartyPC WASM Player" style="width: 384px; height: 288px;"&gt;&lt;/canvas&gt;<br></span></code></span></pre></div>

<p>It's clearly a confusing part of the web standard.  The style of width/height is based on the logical units, so you need to divide the style's width and height by the page zoom factor (an API is available).</p>

<p>(It may be that the stuff inside the canvas is "fighting" against the zoom)</p>

<p>I don't know if you did that part of the HTML or if a compiler did it -- but just letting you know!</p></div>
				</div>
							</article>
											<article aria-labelledby="post-1175481-title" id="p1175481">
								<h3 id="post-1175481-title">Reply 15 of 15, by GloriousCow</h3>

						

				

				<div>
					<div role="note" aria-label="Poster info">
							
								
	
	<dl role="associationlist definitionlist" data-hide-below-sxs-post="">
					<p role="presentation">
																	<dt role="associationlistitemkey term">Rank</dt>
				<dd role="associationlistitemvalue definition">Newbie</dd>
																</p>
		
						<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="topic"><span>Posts</span></dt>
			<dd role="associationlistitemvalue definition"><a href="https://www.vogons.org/search.php?author_id=49596&amp;sr=posts" title="Search GloriousCow’s posts">79</a></dd>
		</p>
	
			<p role="presentation">
			<dt role="associationlistitemkey term" data-icon="show-guests"><span>Joined</span></dt>
			<dd role="associationlistitemvalue definition">2022-09-12, 20:00</dd>
		</p>
		
									
				
	</dl>

				</div>


					<div>
						
								
	

						
						<p>If you're curious about all the views, we apparently made the front page of Hackernews today... hello everyone <span data-version="6.1" data-src="1f600" data-alt="grinning face">😀</span></p>

						
						

																								
						<div role="note" aria-label="Signature"><p>MartyPC: A cycle-accurate IBM PC/XT emulator | <a href="https://github.com/dbalsom/martypc">https://github.com/dbalsom/martypc</a></p></div>					</div>
				</div>
							</article>
						</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Joins 13 Ways (411 pts)]]></title>
            <link>https://justinjaffray.com/joins-13-ways/?a=b</link>
            <guid>36575784</guid>
            <pubDate>Mon, 03 Jul 2023 17:01:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://justinjaffray.com/joins-13-ways/?a=b">https://justinjaffray.com/joins-13-ways/?a=b</a>, See on <a href="https://news.ycombinator.com/item?id=36575784">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    

<p><small>03 Jul 2023</small></p><p>Relational (inner) joins are really common in the world of databases, and one
weird thing about them is that it seems like everyone has a different idea of
what they are.  In this post I’ve aggregated a bunch of different definitions,
ways of thinking about them, and ways of implementing them that will hopefully
be interesting.
They’re not without redundancy, some of them are arguably the same, but I think
they’re all interesting perspectives nonetheless.</p>
<h2 id="table-of-contents">Table of Contents</h2>
<ul>
<li><a href="#a-join-is-a-lookup">A join is a lookup</a></li>
<li><a href="#a-join-is-a-nested-loop-over-rows">A join is a nested loop over rows</a></li>
<li><a href="#a-join-is-a-nested-loop-over-columns">A join is a nested loop over columns</a></li>
<li><a href="#a-join-is-compatible-alternate-realities">A join is compatible alternate realities</a></li>
<li><a href="#a-join-is-flatmap">A join is flatMap</a></li>
<li><a href="#a-join-is-the-solution-to-the-n1-problem">A join is the solution to the N+1 problem</a></li>
<li><a href="#a-join-is-paths-through-a-graph">A join is paths through a graph</a></li>
<li><a href="#a-join-is-a-minimal-model">A join is a minimal model</a></li>
<li><a href="#a-join-is-typechecking">A join is typechecking</a></li>
<li><a href="#a-join-is-an-operation-in-the-set-monad">A join is an operation in the Set monad</a></li>
<li><a href="#a-join-is-the-biggest-acceptable-relation">A join is the biggest acceptable relation</a></li>
<li><a href="#a-join-is-ajoin">A join is a…join</a></li>
<li><a href="#a-join-is-a-ring-product">A join is a ring product</a></li>
</ul>
<h2 id="a-join-is-a-lookup">A join is a lookup</h2>
<p>The first and most practical way to see a join is that it’s “looking something up,” or adorning some data with some additional, redundant data.</p>
<p>I think the first place people typically encounter joins is when some guy on the internet has told them to normalize their tables. Meaning they’ve been told to stop storing data like this:</p>
<table>
<thead>
<tr>
<th>user</th>
<th>country</th>
<th>country_code</th>
</tr>
</thead>
<tbody>
<tr>
<td>Smudge</td>
<td>Canada</td>
<td>CA</td>
</tr>
<tr>
<td>Sissel</td>
<td>Canada</td>
<td>CA</td>
</tr>
<tr>
<td>Petee</td>
<td>United States</td>
<td>US</td>
</tr>
</tbody>
</table>
<p>This is “bad,” because there’s redundancy: <code>country_code</code> doesn’t change between rows with the same <code>country</code>. If we were storing something more volatile than this, we’d have to make sure that any changes to the data were reflected everywhere, which is error prone and inefficient.</p>
<p>The correct way to do this is to <em><strong><strong><strong><strong>normalize</strong></strong></strong></strong></em> the table. Create a table which only relates <code>country</code> and <code>country_code</code>:</p>
<table>
<thead>
<tr>
<th>country_id</th>
<th>country</th>
<th>country_code</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>Canada</td>
<td>CA</td>
</tr>
<tr>
<td>2</td>
<td>United States</td>
<td>US</td>
</tr>
</tbody>
</table>
<p>and then reference that in the “fact table:”</p>
<table>
<thead>
<tr>
<th>user</th>
<th>country_id</th>
</tr>
</thead>
<tbody>
<tr>
<td>Smudge</td>
<td>1</td>
</tr>
<tr>
<td>Sissel</td>
<td>1</td>
</tr>
<tr>
<td>Petee</td>
<td>2</td>
</tr>
</tbody>
</table>
<p>Then a join is the operation that lets us recover the original table, which we might want to do some computations: to join these two tables we’d write:</p>
<div><pre><code data-lang="sql"><span>SELECT</span><span> </span><span>user</span>,<span> </span>country,<span> </span>country_code<span> </span><span>FROM</span><span>
</span><span>    </span>users<span>
</span><span>      </span><span>INNER</span><span> </span><span>JOIN</span><span>
</span><span>    </span>countries<span>
</span><span>      </span><span>ON</span><span> </span>users.country_id<span> </span><span>=</span><span> </span>countries.country_id<span>
</span></code></pre></div><p>Going forward, we will often adopt that convention that we implicitly join “on” any columns of the two relations that have the same name.
But we will play a bit fast and loose with this, don’t sweat the details too much.</p>
<h2 id="a-join-is-a-nested-loop-over-rows">A join is a nested loop over rows</h2>
<p>Given some predicate <code>p</code>, the join of two sets <code>R</code> and <code>S</code> is:</p>
<div><pre><code data-lang="python"><span>def</span> <span>join</span>(R, S, p):
  output <span>=</span> []
	<span>for</span> r <span>in</span> R:
      <span>for</span> s <span>in</span> S:
		<span>if</span> p(r, s):
          output<span>.</span>push((r, s))
  <span>return</span> output
</code></pre></div><p>If the cross product of two collections is all concatenations of rows from the two of them, their join is a subset of that.</p>
<h2 id="a-join-is-a-nested-loop-over-columns">A join is a nested loop over columns</h2>
<p>The <strong><strong><strong>domain</strong></strong></strong> of a column is the set of possible values that can appear in it.</p>
<p>If I have a relation <code>R</code> whose columns are <code>a</code> and <code>b</code>, and <code>S</code> whose columns are <code>b</code> and <code>c</code>, then the join of <code>R</code> and <code>S</code> is:</p>
<div><pre><code data-lang="python"><span>def</span> <span>join</span>(R, S):
  output <span>=</span> []
  <span>for</span> a <span>in</span> domain(a):
    <span>for</span> b <span>in</span> domain(b):
      <span>for</span> c <span>in</span> domain(c):
        <span>if</span> R<span>.</span>contains(a, b) <span>and</span> S<span>.</span>contains(b, c):
		  output<span>.</span>push([a, b, c])
  <span>return</span> output
</code></pre></div><h2 id="a-join-is-compatible-alternate-realities">A join is compatible alternate realities</h2>
<p>Here’s our first weird one.</p>
<p>John and Sally are standing around the corner from each other, each has a pet, and each can see a stray animal on the corner, but they can’t see each other.</p>
<p><img src="https://justinjaffray.com/images/joins_4.png">
</p>
<p>John and Sally both exist in a handful of alternate realities at once. For instance, there’s one reality where John has a dog, and another where he has a cat. We can summarize the realities that are possible for John in a relation:</p>
<table>
<thead>
<tr>
<th>john’s pet</th>
<th>stray</th>
</tr>
</thead>
<tbody>
<tr>
<td>dog</td>
<td>dog</td>
</tr>
<tr>
<td>cat</td>
<td>dog</td>
</tr>
<tr>
<td>cat</td>
<td>mouse</td>
</tr>
</tbody>
</table>
<p>Similarly, Sally also has a pet, and can also see the stray:</p>
<table>
<thead>
<tr>
<th>sally’s pet</th>
<th>stray</th>
</tr>
</thead>
<tbody>
<tr>
<td>dog</td>
<td>mouse</td>
</tr>
<tr>
<td>cat</td>
<td>mouse</td>
</tr>
<tr>
<td>mouse</td>
<td>dog</td>
</tr>
</tbody>
</table>
<p>We only have this imperfect information, because John can’t see Sally’s pet, and Sally can’t see John’s pet.</p>
<p>We can still make some inferences though: it can’t be the case that John has a dog while Sally has a cat, because then they would disagree on what the stray was (whenever John has a dog, the stray is a dog, but whenever Sally has a cat, the stray is a mouse).</p>
<p>By this logic, we can list out all the combinations that might exist:</p>
<table>
<thead>
<tr>
<th>john’s pet</th>
<th>stray</th>
<th>sally’s pet</th>
</tr>
</thead>
<tbody>
<tr>
<td>dog</td>
<td>dog</td>
<td>mouse</td>
</tr>
<tr>
<td>cat</td>
<td>dog</td>
<td>mouse</td>
</tr>
<tr>
<td>cat</td>
<td>mouse</td>
<td>dog</td>
</tr>
<tr>
<td>cat</td>
<td>mouse</td>
<td>cat</td>
</tr>
</tbody>
</table>
<p>This is the join of the two tables on <code>stray</code>.</p>
<h2 id="a-join-is-flatmap">A join is flatMap</h2>
<p>The <code>flatMap</code> function in many programming languages operates on arrays.
It computes a new array for every element of the original, and concatenates the results.</p>
<div><pre><code data-lang="javascript"><span>&gt;</span> [<span>1</span>, <span>2</span>, <span>3</span>].flatMap(x =&gt; <span>new</span> <span>Array</span>(x).fill(x))
[ <span>1</span>, <span>2</span>, <span>2</span>, <span>3</span>, <span>3</span>, <span>3</span> ]
</code></pre></div><p>This can implement a join.
This:</p>
<div><pre><code data-lang="sql"><span>SELECT</span><span> </span><span>*</span><span> </span><span>FROM</span><span> </span>r<span> </span><span>INNER</span><span> </span><span>JOIN</span><span> </span>s<span> </span><span>ON</span><span> </span>p<span>
</span></code></pre></div><p>becomes this:</p>
<div><pre><code data-lang="jsx">r.flatMap(x =&gt; s.filter(y =&gt; p(x, y)))
</code></pre></div><p>Some SQL variants support a <code>LATERAL</code> construction which turns joins into flatMaps:</p>
<div><pre><code data-lang="sql">pg<span>=#</span><span> </span><span>SELECT</span><span> </span><span>*</span><span> </span><span>FROM</span><span>
</span><span>  </span>(<span>VALUES</span><span> </span>(<span>1</span>),<span> </span>(<span>2</span>),<span> </span>(<span>3</span>))<span> </span>r(x),<span>
</span><span>  </span><span>LATERAL</span><span> </span>(<span>SELECT</span><span> </span><span>*</span><span> </span><span>FROM</span><span> </span>generate_series(<span>1</span>,<span> </span>x))<span> </span>u;<span>
</span><span> </span>x<span> </span><span>|</span><span> </span>generate_series<span>
</span><span></span><span>---+-----------------
</span><span></span><span> </span><span>1</span><span> </span><span>|</span><span>               </span><span>1</span><span>
</span><span> </span><span>2</span><span> </span><span>|</span><span>               </span><span>1</span><span>
</span><span> </span><span>2</span><span> </span><span>|</span><span>               </span><span>2</span><span>
</span><span> </span><span>3</span><span> </span><span>|</span><span>               </span><span>1</span><span>
</span><span> </span><span>3</span><span> </span><span>|</span><span>               </span><span>2</span><span>
</span><span> </span><span>3</span><span> </span><span>|</span><span>               </span><span>3</span><span>
</span><span></span>(<span>6</span><span> </span><span>rows</span>)<span>
</span></code></pre></div><p>Whenever the right-hand side of such a flatMap doesn’t contain any references to the left-hand side, it’s equivalent to a cross product (this is the crux of how query decorrelation is done, utilizing successive rewrites to remove column references from the right-hand side).</p>
<h2 id="a-join-is-the-solution-to-the-n1-problem">A join is the solution to the N+1 problem</h2>
<p>A common problem that occurs when using ORMs is called the “N+1 problem.”
This happens when you need to do a query for each row in a result set.
It ends up looking something like this:</p>
<div><pre><code data-lang="python">pets <span>=</span> run_query(<span>"SELECT * FROM users"</span>)
<span>for</span> pet <span>in</span> pets:
  country_code <span>=</span> run_query(
    <span>"SELECT country_code FROM countries WHERE country_id = </span><span>%d</span><span>"</span> <span>%</span> pet<span>.</span>country_id
  )
  <span>print</span>(pet<span>.</span>name, country_code)
</code></pre></div><p>This is a really common problem that shows up when people aren’t yet used to using relational databases.
The problem is that in databases that use connections, like Postgres (this is not so much of a problem for in-process databases like Sqlite),
there’s a high fixed cost to an individual query.
Thus, you might want a way to tell the database “please do all these lookups for me,” and the result turns out to be exactly a join:</p>
<div><pre><code data-lang="sql"><span>SELECT</span><span> </span>name,<span> </span>country_code<span> </span><span>FROM</span><span>
</span><span>  </span>users<span> </span><span>INNER</span><span> </span><span>JOIN</span><span> </span>countries<span> </span><span>ON</span><span> </span>users.country_id<span> </span><span>=</span><span> </span>countries.id<span>
</span></code></pre></div><h2 id="a-join-is-paths-through-a-graph">A join is paths through a graph</h2>
<p>A <em>relation</em> is so named because it “relates” two sets.
In the case of our <code>users</code> table,
it relates the set of usernames with the set of country IDs.
We can visualize this relationship as a <em>graph</em>:</p>
<p><img src="https://justinjaffray.com/images/joins_1.png">
</p>
<p>And similarly, we relate the set of country IDs to the set of two-letter country codes:</p>
<p><img src="https://justinjaffray.com/images/joins_2.png">
</p>
<p>Since the right-hand side of the first graph, and the left-hand side of the
second graph share a vertex set, it makes sense to consider them together:</p>
<p><img src="https://justinjaffray.com/images/joins_3.png">
</p>
<p>If we enumerate all the paths that start in the left set of this graph, go to a
vertex in the middle set, and end on a vertex in the right set, we will
construct exactly the join of these two relations.</p>
<h2 id="a-join-is-a-minimal-model">A join is a minimal model</h2>
<p>In formal logic, a <em><strong><strong>model</strong></strong></em> of a set of sentences is a set of facts which make all of the sentences true. In this setting, a relation is a <em><strong><strong><strong><strong>predicate</strong></strong></strong></strong></em>. The <code>users</code> relation is the predicate that satisfies the following:</p>
<pre><code data-lang="datalog">users("Smudge", 1).
users("Sissel", 1).
users("Petee", 2).
</code></pre><p>and the <code>country</code> relation is the predicate that satisfies:</p>
<pre><code data-lang="datalog">country(1, "Canada", "CA").
country(2, "United States", "US").
</code></pre><p>Now consider the following implication:</p>
<p>\[
\texttt{users}(a, b) \wedge \texttt{countries}(b, c, d) \rightarrow \texttt{Q}(a, b, c, d)
\]</p>
<p>read “whenever <code>users(A, B)</code> and <code>countries(B, C, D)</code>, then <code>Q(A, B, C, D)</code>." A model of this sentence is a set of facts which <code>Q</code> is true for such that this sentence is true.</p>
<p>One possible model is:</p>
<pre><code data-lang="datalog">Q("Smudge", 1, "Canada", "CA").
Q("Smudge", 2, "United States", "US").
Q("Sissel", 1, "Canada", "CA").
Q("Sissel", 2, "United States", "US").
Q("Petee", 1, "Canada", "CA").
Q("Petee", 2, "United States", "US").
</code></pre><p>Another is</p>
<pre><code data-lang="datalog">Q("Smudge", 1, "Canada", "CA").
Q("Smudge", 2, "United States", "US").
Q("Sissel", 1, "Canada", "CA").
Q("Sissel", 2, "United States", "US").
Q("Petee", 2, "Canada", "CA").
Q("Petee", 1, "United States", "US").
Q("Banana", 1, "Banana", "Banana").
</code></pre><p>It’s not particularly satisfying that this definition means we can have multiple possible models.
We want something canonical.
That’s why we ask for the <strong><strong><strong><strong>smallest</strong></strong></strong></strong> model that works.
It turns out that for sentences like this, such a model always exists, and it’s the intersection of all models.</p>
<p>Here it’s</p>
<pre><code data-lang="datalog">Q("Smudge", 1, "Canada", "CA").
Q("Sissel", 1, "Canada", "CA").
Q("Petee", 2, "United States", "US").
</code></pre><p>which is the join of <code>users</code> and <code>country</code>.</p>
<h2 id="a-join-is-typechecking">A join is typechecking</h2>
<p>ML-style type systems bear a lot of similarities to joins (mostly because they very strongly resemble Prolog and Datalog).
First, let’s define our relations as Rust traits:</p>
<div><pre><code data-lang="rust"><span>trait</span><span> </span>Users<span> </span>{}<span>
</span><span></span><span>trait</span><span> </span>CountryCode<span> </span>{}<span>
</span></code></pre></div><p>Now define our values, they’re Rust concrete types:</p>
<div><pre><code data-lang="rust"><span>struct</span> <span>Smudge</span>;<span>
</span><span></span><span>struct</span> <span>Sissel</span>;<span>
</span><span></span><span>struct</span> <span>Petee</span>;<span>
</span><span>
</span><span></span><span>struct</span> <span>Canada</span>;<span>
</span><span></span><span>struct</span> <span>UnitedStates</span>;<span>
</span><span>
</span><span></span><span>struct</span> <span>CA</span>;<span>
</span><span></span><span>struct</span> <span>US</span>;<span>
</span></code></pre></div><div><pre><code data-lang="rust"><span>impl</span><span> </span>Users<span> </span><span>for</span><span> </span>(Smudge,<span> </span>Canada)<span> </span>{}<span>
</span><span></span><span>impl</span><span> </span>Users<span> </span><span>for</span><span> </span>(Sissel,<span> </span>Canada)<span> </span>{}<span>
</span><span></span><span>impl</span><span> </span>Users<span> </span><span>for</span><span> </span>(Petee,<span> </span>UnitedStates)<span> </span>{}<span>
</span><span>
</span><span></span><span>impl</span><span> </span>CountryCode<span> </span><span>for</span><span> </span>(Canada,<span> </span>CA)<span> </span>{}<span>
</span><span></span><span>impl</span><span> </span>CountryCode<span> </span><span>for</span><span> </span>(UnitedStates,<span> </span>US)<span> </span>{}<span>
</span></code></pre></div><p>Now we define the join itself.
A triple <code>(A, B, C)</code> is in the join when <code>(A, B)</code> is in <code>Users</code>, and <code>(B, C)</code> is in <code>CountryCode</code>.</p>
<div><pre><code data-lang="rust"><span>trait</span><span> </span>UserCountryCode<span> </span>{}<span>
</span><span>
</span><span></span><span>impl</span><span>&lt;</span>A,<span> </span>B,<span> </span>C<span>&gt;</span><span> </span>UserCountryCode<span> </span><span>for</span><span> </span>(A,<span> </span>B,<span> </span>C)<span>
</span><span></span><span>where</span><span>
</span><span>    </span>(A,<span> </span>B): <span>Users</span>,<span>
</span><span>    </span>(B,<span> </span>C): <span>CountryCode</span>,<span>
</span><span></span>{<span>
</span><span></span>}<span>
</span></code></pre></div><p>Finally, we can check if something is in the join if our program typechecks.
This typechecks:</p>
<div><pre><code data-lang="rust"><span>fn</span> <span>test</span><span>&lt;</span>X: <span>UserCountryCode</span><span>&gt;</span>()<span> </span>{}<span>
</span><span>
</span><span></span><span>fn</span> <span>main</span>()<span> </span>{<span>
</span><span>    </span>test::<span>&lt;</span>(Smudge,<span> </span>_,<span> </span>CA)<span>&gt;</span>()<span>
</span><span></span>}<span>
</span></code></pre></div><p>While this doesn’t:</p>
<div><pre><code data-lang="rust"><span>fn</span> <span>test</span><span>&lt;</span>X: <span>UserCountryCode</span><span>&gt;</span>()<span> </span>{}<span>
</span><span>
</span><span></span><span>fn</span> <span>main</span>()<span> </span>{<span>
</span><span>    </span>test::<span>&lt;</span>(Smudge,<span> </span>_,<span> </span>US)<span>&gt;</span>()<span>
</span><span></span>}<span>
</span></code></pre></div><pre><code>error[E0277]: the trait bound `(Canada, US): CountryCode` is not satisfied
  --&gt; src/main.rs:32:12
   |
32 |     test::&lt;(Smudge, _, US)&gt;()
   |            ^^^^^^^^^^^^^^^ the trait `CountryCode` is not implemented for `(Canada, US)`
   |
   = help: the following other types implement trait `CountryCode`:
             (Canada, CA)
             (UnitedStates, US)
note: required for `(Smudge, Canada, US)` to implement `UserCountryCode`
  --&gt; src/main.rs:22:15
   |
22 | impl&lt;A, B, C&gt; UserCountryCode for (A, B, C)
   |               ^^^^^^^^^^^^^^^     ^^^^^^^^^
...
25 |     (B, C): CountryCode,
   |             ----------- unsatisfied trait bound introduced here
note: required by a bound in `test`
  --&gt; src/main.rs:29:12
   |
29 | fn test&lt;X: UserCountryCode&gt;() {}
   |            ^^^^^^^^^^^^^^^ required by this bound in `test`
</code></pre><h2 id="a-join-is-an-operation-in-the-set-monad">A join is an operation in the Set monad</h2>
<p>Let’s define an option type (in JavaScript).</p>
<div><pre><code data-lang="javascript"><span>let</span> Some <span>=</span> x =&gt; ({
    map<span>:</span> f =&gt; Some(f(x)),
    <span>// Sometimes called `bind`.
</span><span></span>    andThen<span>:</span> f =&gt; f(x),
    inspect<span>:</span> () =&gt; <span>`Some(</span><span>${</span>JSON.stringify(x)<span>}</span><span>)`</span>,
});

<span>let</span> None <span>=</span> () =&gt; ({
    map<span>:</span> () =&gt; None(),
    andThen<span>:</span> () =&gt; None(),
    inspect<span>:</span> () =&gt; <span>`None()`</span>,
});
</code></pre></div><p>Now, say we have some records, but they’re all optional. As in, we might not
have them, so we have to wrap them in <code>Some</code>:</p>
<div><pre><code data-lang="javascript"><span>let</span> user <span>=</span> Some({ name<span>:</span> <span>'Smudge'</span>, country<span>:</span> <span>'Canada'</span> });
<span>let</span> country1 <span>=</span> Some({ country<span>:</span> <span>'Canada'</span>, code<span>:</span> <span>'CA'</span> });
<span>let</span> country2 <span>=</span> Some({ country<span>:</span> <span>'United States'</span>, code<span>:</span> <span>'US'</span> });
</code></pre></div><p>Now we’ll write a function that takes two of these records and returns <code>Some</code> of their merging if they’re compatible, and <code>None</code> otherwise:</p>
<div><pre><code data-lang="javascript"><span>let</span> merge <span>=</span> (user, country) =&gt; {
    <span>if</span> (user.country <span>===</span> country.country) {
        <span>return</span> Some({ name<span>:</span> user.name, country<span>:</span> user.country, code<span>:</span> country.code });
    } <span>else</span> {
        <span>return</span> None();
    }
}
</code></pre></div><p>But since our actual records are optional, we need to wrap them in calls to <code>andThen</code>:</p>
<div><pre><code data-lang="javascript"><span>let</span> combine <span>=</span> (user, country) =&gt; {
    <span>return</span> user.andThen(user =&gt; {
        <span>return</span> country.andThen(country =&gt; {
            <span>return</span> merge(user, country);
        })
    });
}
</code></pre></div><p>Now we can see the results of calling this function with various values:</p>
<div><pre><code data-lang="javascript">console.log(combine(user, country1).inspect());
console.log(combine(user, country2).inspect());
console.log(combine(None(), country1).inspect());
console.log(combine(user, None()).inspect());
</code></pre></div><p>One interesting thing about the way we’ve set this up is that we can implement
our “container” type differently, but keep the implementation.</p>
<p>Let’s implement a different container, called <code>Rel</code>, which stores a set of records.
Now our <code>map</code> operates on every row, and our <code>andThen</code> returns another relation,
which all get concatenated to the new relation.</p>
<div><pre><code data-lang="javascript"><span>let</span> Rel <span>=</span> x =&gt; ({
    map<span>:</span> f =&gt; Rel(x.map(f)),
    andThen<span>:</span> f =&gt; Rel(x.flatMap(v =&gt; f(v).list())),
    list<span>:</span> () =&gt; x,
})
</code></pre></div><p>Now we can instantiate some data:</p>
<div><pre><code data-lang="javascript"><span>let</span> users <span>=</span> Rel([
    { name<span>:</span> <span>'Smudge'</span>, country<span>:</span> <span>'Canada'</span> },
    { name<span>:</span> <span>'Sissel'</span>, country<span>:</span> <span>'Canada'</span> },
    { name<span>:</span> <span>'Petee'</span>, country<span>:</span> <span>'United States'</span> },
]);

<span>let</span> countries <span>=</span> Rel([
    { country<span>:</span> <span>'Canada'</span>, code<span>:</span> <span>'CA'</span> },
    { country<span>:</span> <span>'United States'</span>, code<span>:</span> <span>'US'</span> },
]);
</code></pre></div><p>And try running the same function <code>combine</code> from before:</p>
<div><pre><code data-lang="javascript">console.log(combine(users, countries).list());
</code></pre></div><p>And we get the join of the two relations:</p>
<div><pre><code data-lang="javascript">[
  { name<span>:</span> <span>'Smudge'</span>, country<span>:</span> <span>'Canada'</span>, code<span>:</span> <span>'CA'</span> },
  { name<span>:</span> <span>'Sissel'</span>, country<span>:</span> <span>'Canada'</span>, code<span>:</span> <span>'CA'</span> },
  { name<span>:</span> <span>'Petee'</span>, country<span>:</span> <span>'United States'</span>, code<span>:</span> <span>'US'</span> }
]
</code></pre></div><h2 id="a-join-is-the-biggest-acceptable-relation">A join is the biggest acceptable relation</h2>
<p>For two relations \(R\) and \(S\), say a third relation \(T\) which has
all the columns from both is “acceptable” if it doesn’t invent any new
information.</p>
<p>By that I mean, if you look at any row in \(T\) and restrict it to just the
columns in \(R\), the resulting row exists in \(R\), and the same is true
for \(S\).</p>
<p>For instance, say our tables are:</p>
<h3 id="r">\(R\)</h3>
<table>
<thead>
<tr>
<th>user</th>
<th>country</th>
</tr>
</thead>
<tbody>
<tr>
<td>Smudge</td>
<td>Canada</td>
</tr>
<tr>
<td>Sissel</td>
<td>Canada</td>
</tr>
<tr>
<td>Petee</td>
<td>United States</td>
</tr>
</tbody>
</table>
<h3 id="s">\(S\)</h3>
<table>
<thead>
<tr>
<th>country</th>
<th>country_code</th>
</tr>
</thead>
<tbody>
<tr>
<td>Canada</td>
<td>CA</td>
</tr>
<tr>
<td>United States</td>
<td>US</td>
</tr>
</tbody>
</table>
<p>This \(T\) is unacceptable:</p>
<table>
<thead>
<tr>
<th>user</th>
<th>country</th>
<th>country_code</th>
</tr>
</thead>
<tbody>
<tr>
<td>Smudge</td>
<td>Canada</td>
<td>US</td>
</tr>
</tbody>
</table>
<p>Because if we restrict to the columns of \(S\),
\(\langle \texttt{country}, \texttt{country\_code} \rangle \), we get</p>
<table>
<thead>
<tr>
<th>country</th>
<th>country_code</th>
</tr>
</thead>
<tbody>
<tr>
<td>Canada</td>
<td>US</td>
</tr>
</tbody>
</table>
<p>Which doesn’t exist in \(S\).</p>
<p>Notably, the empty relation is acceptable.
The <em>largest</em> acceptable relation, here, is</p>
<table>
<thead>
<tr>
<th>user</th>
<th>country</th>
<th>country_code</th>
</tr>
</thead>
<tbody>
<tr>
<td>Smudge</td>
<td>Canada</td>
<td>CA</td>
</tr>
<tr>
<td>Sissel</td>
<td>Canada</td>
<td>CA</td>
</tr>
<tr>
<td>Petee</td>
<td>United States</td>
<td>US</td>
</tr>
</tbody>
</table>
<p>This is the join of the two relations.</p>
<h2 id="a-join-is-ajoin">A join is a…join</h2>
<p>A <em>partial order</em> is a set equipped with a binary relation \(\le\) satisfying the following properties:</p>
<ol>
<li>Reflexivity: \(a \le b\),</li>
<li>Antisymmetry: If \(a \le b\) and \(b \le a\), then \(a = b\), and</li>
<li>Transitivity: If \(a \le b\) and \(b \le c\), then \(a \le c\).</li>
</ol>
<p>(I provide this definition to be complete, but if it’s new to you, don’t
expect the above to give you the intuition you’d need to actually be able to
think about it.)</p>
<p>In a partial order, if two elements \(a, b\) always have a <em>least upper bound</em>
(that is, a smallest \(x\) which \(a\) and \(b\) are both \(\le\)), then
that is called their <em>join</em> and is written \(a \vee b\).</p>
<p>Define the following partial order on relations: \(R \le Q\) if:</p>
<ol>
<li>\(Q\) contains all the columns in \(R\), and</li>
<li>restricting any row in \(Q\) to just the columns in \(R\) gives a row in \(R\).</li>
</ol>
<p>Then for two relations \(R\) and \(S\), \(R \vee S\) exists, and it’s their join (in both senses of the word).</p>
<h2 id="a-join-is-a-ring-product">A join is a ring product</h2>
<p>You might know from high school how to manipulate polynomials. If \(a\), \(b\), and \(c\) are all unknowns, the following expressions are all equivalent:</p>
<p>\[
a(b + c) = ab + ac = ba +ca = ca + ba = (c + b)a
\]</p>
<p>We can represent a relation algebraically in this way. A row is the product of its columns. We represent the row</p>
<table>
<thead>
<tr>
<th>user</th>
<th>country_id</th>
</tr>
</thead>
<tbody>
<tr>
<td>Smudge</td>
<td>1</td>
</tr>
</tbody>
</table>
<p>as the product of two (column name, column value) pairs:</p>
<p>\[
[\text{user}=\texttt{Smudge}]
[\text{country\_id}=\texttt{1}]
\]</p>
<p>A relation is the sum of its rows:</p>
<p>\[
R = \begin{aligned}
&amp;[\text{user}=\texttt{Smudge}][\text{country\_id}=\texttt{1}] \cr
+&amp;[\text{user}=\texttt{Sissel}][\text{country\_id}=\texttt{1}] \cr
+&amp;[\text{user}=\texttt{Petee}][\text{country\_id}=\texttt{2}] \cr
\end{aligned}
\]</p>
<p>We also have the special value 1, satisfying \(1x = x\) for all \(x\).</p>
<p>We then add the following rules for simplifying these expressions:</p>
<p>Idempotence:</p>
<p>$$
[x = y][x = y] = [x = y]
$$</p>
<p>and Contradiction:</p>
<p>$$
[x = y][x = z] = 0 \text{ if }y \not= z.
$$</p>
<p>our lookup table here is</p>
<p>\[
S = \begin{aligned}
&amp;[\text{country\_id}=\texttt{1}][\text{country}=\texttt{Canada}][\text{country\_code}=\texttt{CA}] \cr
+&amp;[\text{country\_id}=\texttt{2}][\text{country}=\texttt{United States}][\text{country\_code}=\texttt{US}] \cr
\end{aligned}
\]</p>
<p>Then something interesting happens if we take the product of these two expressions, obeying the normal rules of polynomial rewriting such as distributivity:</p>
<p>\[
\begin{aligned}
&amp;RS = \cr &amp;\left(\begin{aligned}
&amp;[\text{user}=\texttt{Smudge}][\text{country\_id}=\texttt{1}] \cr
+&amp;[\text{user}=\texttt{Sissel}][\text{country\_id}=\texttt{1}]\cr
+&amp;[\text{user}=\texttt{Petee}][\text{country\_id}=\texttt{2}] \cr
\end{aligned}\right) \cr
&amp;\left(
\begin{aligned}
&amp;[\text{country\_id}=\texttt{1}][\text{country}=\texttt{Canada}][\text{country\_code}=\texttt{CA}] \cr
+&amp;[\text{country\_id}=\texttt{2}][\text{country}=\texttt{United States}][\text{country\_code}=\texttt{US}] \cr
\end{aligned}
\right)
\end{aligned}
\]</p>
<p>If you apply the laws of distributivity and commutativity here, you’ll wind up with the following:</p>
<p>\[
\begin{aligned}
&amp;[\text{user}=\texttt{Smudge}][\text{country\_id}=\texttt{1}]
[\text{country}=\texttt{Canada}]
[\text{country\_code}=\texttt{CA}] \cr
+&amp;[\text{user}=\texttt{Sissel}][\text{country\_id}=\texttt{1}][\text{country}=\texttt{Canada}]
[\text{country\_code}=\texttt{CA}]\cr
+&amp;[\text{user}=\texttt{Petee}][\text{country\_id}=\texttt{2}][\text{country}=\texttt{United States}]
[\text{country\_code}=\texttt{US}] \cr
\end{aligned}
\]</p>
<p>Which is precisely the join of the two relations (I’m told this is a tensor contraction).</p>


  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SlowDownAndWasteMemory() (253 pts)]]></title>
            <link>https://github.com/WebKit/WebKit/blob/ab10a90523e06df54bbb8a98e1aed913f79d0af9/Source/JavaScriptCore/runtime/JSArrayBufferView.cpp</link>
            <guid>36575712</guid>
            <pubDate>Mon, 03 Jul 2023 16:57:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/WebKit/WebKit/blob/ab10a90523e06df54bbb8a98e1aed913f79d0af9/Source/JavaScriptCore/runtime/JSArrayBufferView.cpp">https://github.com/WebKit/WebKit/blob/ab10a90523e06df54bbb8a98e1aed913f79d0af9/Source/JavaScriptCore/runtime/JSArrayBufferView.cpp</a>, See on <a href="https://news.ycombinator.com/item?id=36575712">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="" data-tab-size="4" data-paste-markdown-skip="" data-tagsearch-lang="C++" data-tagsearch-path="Source/JavaScriptCore/runtime/JSArrayBufferView.cpp">
        <tbody><tr>
          <td id="L1" data-line-number="1"></td>
          <td id="LC1"><span><span>/*</span></span></td>
        </tr>
        <tr>
          <td id="L2" data-line-number="2"></td>
          <td id="LC2"><span> * Copyright (C) 2013-2021 Apple Inc. All rights reserved.</span></td>
        </tr>
        <tr>
          <td id="L3" data-line-number="3"></td>
          <td id="LC3"><span> *</span></td>
        </tr>
        <tr>
          <td id="L4" data-line-number="4"></td>
          <td id="LC4"><span> * Redistribution and use in source and binary forms, with or without</span></td>
        </tr>
        <tr>
          <td id="L5" data-line-number="5"></td>
          <td id="LC5"><span> * modification, are permitted provided that the following conditions</span></td>
        </tr>
        <tr>
          <td id="L6" data-line-number="6"></td>
          <td id="LC6"><span> * are met:</span></td>
        </tr>
        <tr>
          <td id="L7" data-line-number="7"></td>
          <td id="LC7"><span> * 1. Redistributions of source code must retain the above copyright</span></td>
        </tr>
        <tr>
          <td id="L8" data-line-number="8"></td>
          <td id="LC8"><span> *    notice, this list of conditions and the following disclaimer.</span></td>
        </tr>
        <tr>
          <td id="L9" data-line-number="9"></td>
          <td id="LC9"><span> * 2. Redistributions in binary form must reproduce the above copyright</span></td>
        </tr>
        <tr>
          <td id="L10" data-line-number="10"></td>
          <td id="LC10"><span> *    notice, this list of conditions and the following disclaimer in the</span></td>
        </tr>
        <tr>
          <td id="L11" data-line-number="11"></td>
          <td id="LC11"><span> *    documentation and/or other materials provided with the distribution.</span></td>
        </tr>
        <tr>
          <td id="L12" data-line-number="12"></td>
          <td id="LC12"><span> *</span></td>
        </tr>
        <tr>
          <td id="L13" data-line-number="13"></td>
          <td id="LC13"><span> * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY</span></td>
        </tr>
        <tr>
          <td id="L14" data-line-number="14"></td>
          <td id="LC14"><span> * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</span></td>
        </tr>
        <tr>
          <td id="L15" data-line-number="15"></td>
          <td id="LC15"><span> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR</span></td>
        </tr>
        <tr>
          <td id="L16" data-line-number="16"></td>
          <td id="LC16"><span> * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR</span></td>
        </tr>
        <tr>
          <td id="L17" data-line-number="17"></td>
          <td id="LC17"><span> * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,</span></td>
        </tr>
        <tr>
          <td id="L18" data-line-number="18"></td>
          <td id="LC18"><span> * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,</span></td>
        </tr>
        <tr>
          <td id="L19" data-line-number="19"></td>
          <td id="LC19"><span> * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR</span></td>
        </tr>
        <tr>
          <td id="L20" data-line-number="20"></td>
          <td id="LC20"><span> * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY</span></td>
        </tr>
        <tr>
          <td id="L21" data-line-number="21"></td>
          <td id="LC21"><span> * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></td>
        </tr>
        <tr>
          <td id="L22" data-line-number="22"></td>
          <td id="LC22"><span> * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</span></td>
        </tr>
        <tr>
          <td id="L23" data-line-number="23"></td>
          <td id="LC23"><span> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. </span></td>
        </tr>
        <tr>
          <td id="L24" data-line-number="24"></td>
          <td id="LC24"><span> <span>*/</span></span></td>
        </tr>
        <tr>
          <td id="L25" data-line-number="25"></td>
          <td id="LC25">
</td>
        </tr>
        <tr>
          <td id="L26" data-line-number="26"></td>
          <td id="LC26">#<span>include</span> <span><span>"</span>config.h<span>"</span></span></td>
        </tr>
        <tr>
          <td id="L27" data-line-number="27"></td>
          <td id="LC27">#<span>include</span> <span><span>"</span>JSArrayBufferView.h<span>"</span></span></td>
        </tr>
        <tr>
          <td id="L28" data-line-number="28"></td>
          <td id="LC28">
</td>
        </tr>
        <tr>
          <td id="L29" data-line-number="29"></td>
          <td id="LC29">#<span>include</span> <span><span>"</span>GenericTypedArrayViewInlines.h<span>"</span></span></td>
        </tr>
        <tr>
          <td id="L30" data-line-number="30"></td>
          <td id="LC30">#<span>include</span> <span><span>"</span>JSCInlines.h<span>"</span></span></td>
        </tr>
        <tr>
          <td id="L31" data-line-number="31"></td>
          <td id="LC31">#<span>include</span> <span><span>"</span>JSGenericTypedArrayViewInlines.h<span>"</span></span></td>
        </tr>
        <tr>
          <td id="L32" data-line-number="32"></td>
          <td id="LC32">#<span>include</span> <span><span>"</span>JSTypedArrays.h<span>"</span></span></td>
        </tr>
        <tr>
          <td id="L33" data-line-number="33"></td>
          <td id="LC33">#<span>include</span> <span><span>"</span>TypedArrayController.h<span>"</span></span></td>
        </tr>
        <tr>
          <td id="L34" data-line-number="34"></td>
          <td id="LC34">#<span>include</span> <span><span>"</span>TypedArrays.h<span>"</span></span></td>
        </tr>
        <tr>
          <td id="L35" data-line-number="35"></td>
          <td id="LC35">#<span>include</span> <span><span>&lt;</span>wtf/Gigacage.h<span>&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L36" data-line-number="36"></td>
          <td id="LC36">
</td>
        </tr>
        <tr>
          <td id="L37" data-line-number="37"></td>
          <td id="LC37"><span>namespace</span> <span>JSC</span> {</td>
        </tr>
        <tr>
          <td id="L38" data-line-number="38"></td>
          <td id="LC38">
</td>
        </tr>
        <tr>
          <td id="L39" data-line-number="39"></td>
          <td id="LC39"><span>const</span> ClassInfo JSArrayBufferView::s_info = {</td>
        </tr>
        <tr>
          <td id="L40" data-line-number="40"></td>
          <td id="LC40">    <span><span>"</span>ArrayBufferView<span>"</span></span>_s, &amp;Base::s_info, <span>nullptr</span>, <span>nullptr</span>, <span>CREATE_METHOD_TABLE</span>(JSArrayBufferView)</td>
        </tr>
        <tr>
          <td id="L41" data-line-number="41"></td>
          <td id="LC41">};</td>
        </tr>
        <tr>
          <td id="L42" data-line-number="42"></td>
          <td id="LC42">
</td>
        </tr>
        <tr>
          <td id="L43" data-line-number="43"></td>
          <td id="LC43"><span>const</span> ASCIILiteral typedArrayBufferHasBeenDetachedErrorMessage { <span><span>"</span>Underlying ArrayBuffer has been detached from the view or out-of-bounds<span>"</span></span>_s };</td>
        </tr>
        <tr>
          <td id="L44" data-line-number="44"></td>
          <td id="LC44">
</td>
        </tr>
        <tr>
          <td id="L45" data-line-number="45"></td>
          <td id="LC45"><span>JSArrayBufferView::ConstructionContext::ConstructionContext</span>(Structure* structure, <span>size_t</span> length, <span>void</span>* vector)</td>
        </tr>
        <tr>
          <td id="L46" data-line-number="46"></td>
          <td id="LC46">    : m_structure(structure)</td>
        </tr>
        <tr>
          <td id="L47" data-line-number="47"></td>
          <td id="LC47">    , m_vector(vector, length)</td>
        </tr>
        <tr>
          <td id="L48" data-line-number="48"></td>
          <td id="LC48">    , m_length(length)</td>
        </tr>
        <tr>
          <td id="L49" data-line-number="49"></td>
          <td id="LC49">    , m_byteOffset(<span>0</span>)</td>
        </tr>
        <tr>
          <td id="L50" data-line-number="50"></td>
          <td id="LC50">    , m_mode(FastTypedArray)</td>
        </tr>
        <tr>
          <td id="L51" data-line-number="51"></td>
          <td id="LC51">    , m_butterfly(<span>nullptr</span>)</td>
        </tr>
        <tr>
          <td id="L52" data-line-number="52"></td>
          <td id="LC52">{</td>
        </tr>
        <tr>
          <td id="L53" data-line-number="53"></td>
          <td id="LC53">    <span>ASSERT</span>(!<span>isResizableOrGrowableSharedTypedArrayIncludingDataView</span>(structure-&gt;<span>classInfoForCells</span>()));</td>
        </tr>
        <tr>
          <td id="L54" data-line-number="54"></td>
          <td id="LC54">    <span>ASSERT</span>(!<span>Gigacage::isEnabled</span>() || (<span>Gigacage::contains</span>(vector) &amp;&amp; <span>Gigacage::contains</span>(<span>static_cast</span>&lt;<span>const</span> <span>uint8_t</span>*&gt;(vector) + length - <span>1</span>)));</td>
        </tr>
        <tr>
          <td id="L55" data-line-number="55"></td>
          <td id="LC55">    <span>ASSERT</span>(vector == <span>removeArrayPtrTag</span>(vector));</td>
        </tr>
        <tr>
          <td id="L56" data-line-number="56"></td>
          <td id="LC56">    <span>RELEASE_ASSERT</span>(length &lt;= fastSizeLimit);</td>
        </tr>
        <tr>
          <td id="L57" data-line-number="57"></td>
          <td id="LC57">}</td>
        </tr>
        <tr>
          <td id="L58" data-line-number="58"></td>
          <td id="LC58">
</td>
        </tr>
        <tr>
          <td id="L59" data-line-number="59"></td>
          <td id="LC59"><span>JSArrayBufferView::ConstructionContext::ConstructionContext</span>(VM&amp; vm, Structure* structure, <span>size_t</span> length, <span>unsigned</span> elementSize, InitializationMode mode)</td>
        </tr>
        <tr>
          <td id="L60" data-line-number="60"></td>
          <td id="LC60">    : m_structure(<span>nullptr</span>)</td>
        </tr>
        <tr>
          <td id="L61" data-line-number="61"></td>
          <td id="LC61">    , m_length(length)</td>
        </tr>
        <tr>
          <td id="L62" data-line-number="62"></td>
          <td id="LC62">    , m_byteOffset(<span>0</span>)</td>
        </tr>
        <tr>
          <td id="L63" data-line-number="63"></td>
          <td id="LC63">    , m_butterfly(<span>nullptr</span>)</td>
        </tr>
        <tr>
          <td id="L64" data-line-number="64"></td>
          <td id="LC64">{</td>
        </tr>
        <tr>
          <td id="L65" data-line-number="65"></td>
          <td id="LC65">    <span>ASSERT</span>(!<span>isResizableOrGrowableSharedTypedArrayIncludingDataView</span>(structure-&gt;<span>classInfoForCells</span>()));</td>
        </tr>
        <tr>
          <td id="L66" data-line-number="66"></td>
          <td id="LC66">
</td>
        </tr>
        <tr>
          <td id="L67" data-line-number="67"></td>
          <td id="LC67">    <span>if</span> (length &lt;= fastSizeLimit) {</td>
        </tr>
        <tr>
          <td id="L68" data-line-number="68"></td>
          <td id="LC68">        <span><span>//</span> Attempt GC allocation.</span></td>
        </tr>
        <tr>
          <td id="L69" data-line-number="69"></td>
          <td id="LC69">        <span>void</span>* temp;</td>
        </tr>
        <tr>
          <td id="L70" data-line-number="70"></td>
          <td id="LC70">        <span>size_t</span> size = <span>sizeOf</span>(length, elementSize);</td>
        </tr>
        <tr>
          <td id="L71" data-line-number="71"></td>
          <td id="LC71">        temp = vm.<span>primitiveGigacageAuxiliarySpace</span>().<span>allocate</span>(vm, size, <span>nullptr</span>, AllocationFailureMode::ReturnNull);</td>
        </tr>
        <tr>
          <td id="L72" data-line-number="72"></td>
          <td id="LC72">        <span>if</span> (!temp)</td>
        </tr>
        <tr>
          <td id="L73" data-line-number="73"></td>
          <td id="LC73">            <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L74" data-line-number="74"></td>
          <td id="LC74">
</td>
        </tr>
        <tr>
          <td id="L75" data-line-number="75"></td>
          <td id="LC75">        m_structure = structure;</td>
        </tr>
        <tr>
          <td id="L76" data-line-number="76"></td>
          <td id="LC76">        m_vector = <span>VectorType</span>(temp, m_length);</td>
        </tr>
        <tr>
          <td id="L77" data-line-number="77"></td>
          <td id="LC77">        m_mode = FastTypedArray;</td>
        </tr>
        <tr>
          <td id="L78" data-line-number="78"></td>
          <td id="LC78">
</td>
        </tr>
        <tr>
          <td id="L79" data-line-number="79"></td>
          <td id="LC79">        <span>if</span> (mode == ZeroFill) {</td>
        </tr>
        <tr>
          <td id="L80" data-line-number="80"></td>
          <td id="LC80">            <span>uint64_t</span>* asWords = <span>static_cast</span>&lt;<span>uint64_t</span>*&gt;(<span>vector</span>());</td>
        </tr>
        <tr>
          <td id="L81" data-line-number="81"></td>
          <td id="LC81">            <span>for</span> (<span>unsigned</span> i = size / <span>sizeof</span>(<span>uint64_t</span>); i--;)</td>
        </tr>
        <tr>
          <td id="L82" data-line-number="82"></td>
          <td id="LC82">                asWords[i] = <span>0</span>;</td>
        </tr>
        <tr>
          <td id="L83" data-line-number="83"></td>
          <td id="LC83">        }</td>
        </tr>
        <tr>
          <td id="L84" data-line-number="84"></td>
          <td id="LC84">        </td>
        </tr>
        <tr>
          <td id="L85" data-line-number="85"></td>
          <td id="LC85">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L86" data-line-number="86"></td>
          <td id="LC86">    }</td>
        </tr>
        <tr>
          <td id="L87" data-line-number="87"></td>
          <td id="LC87">
</td>
        </tr>
        <tr>
          <td id="L88" data-line-number="88"></td>
          <td id="LC88">    CheckedSize size = length;</td>
        </tr>
        <tr>
          <td id="L89" data-line-number="89"></td>
          <td id="LC89">    size *= elementSize;</td>
        </tr>
        <tr>
          <td id="L90" data-line-number="90"></td>
          <td id="LC90">    <span>if</span> (size.<span>hasOverflowed</span>() || size &gt; MAX_ARRAY_BUFFER_SIZE)</td>
        </tr>
        <tr>
          <td id="L91" data-line-number="91"></td>
          <td id="LC91">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L92" data-line-number="92"></td>
          <td id="LC92">
</td>
        </tr>
        <tr>
          <td id="L93" data-line-number="93"></td>
          <td id="LC93">    m_vector = <span>VectorType</span>(<span>Gigacage::tryMalloc</span>(Gigacage::Primitive, size.<span>value</span>()), m_length);</td>
        </tr>
        <tr>
          <td id="L94" data-line-number="94"></td>
          <td id="LC94">    <span>if</span> (!m_vector)</td>
        </tr>
        <tr>
          <td id="L95" data-line-number="95"></td>
          <td id="LC95">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L96" data-line-number="96"></td>
          <td id="LC96">    <span>if</span> (mode == ZeroFill)</td>
        </tr>
        <tr>
          <td id="L97" data-line-number="97"></td>
          <td id="LC97">        <span>memset</span>(<span>vector</span>(), <span>0</span>, size);</td>
        </tr>
        <tr>
          <td id="L98" data-line-number="98"></td>
          <td id="LC98">    </td>
        </tr>
        <tr>
          <td id="L99" data-line-number="99"></td>
          <td id="LC99">    vm.<span>heap</span>.<span>reportExtraMemoryAllocated</span>(size.<span>value</span>());</td>
        </tr>
        <tr>
          <td id="L100" data-line-number="100"></td>
          <td id="LC100">    </td>
        </tr>
        <tr>
          <td id="L101" data-line-number="101"></td>
          <td id="LC101">    m_structure = structure;</td>
        </tr>
        <tr>
          <td id="L102" data-line-number="102"></td>
          <td id="LC102">    m_mode = OversizeTypedArray;</td>
        </tr>
        <tr>
          <td id="L103" data-line-number="103"></td>
          <td id="LC103">}</td>
        </tr>
        <tr>
          <td id="L104" data-line-number="104"></td>
          <td id="LC104">
</td>
        </tr>
        <tr>
          <td id="L105" data-line-number="105"></td>
          <td id="LC105"><span>JSArrayBufferView::ConstructionContext::ConstructionContext</span>(VM&amp; vm, Structure* structure, RefPtr&lt;ArrayBuffer&gt;&amp;&amp; arrayBuffer, <span>size_t</span> byteOffset, std::optional&lt;<span>size_t</span>&gt; length)</td>
        </tr>
        <tr>
          <td id="L106" data-line-number="106"></td>
          <td id="LC106">    : m_structure(structure)</td>
        </tr>
        <tr>
          <td id="L107" data-line-number="107"></td>
          <td id="LC107">    , m_length(length.value_or(<span>0</span>))</td>
        </tr>
        <tr>
          <td id="L108" data-line-number="108"></td>
          <td id="LC108">    , m_byteOffset(byteOffset)</td>
        </tr>
        <tr>
          <td id="L109" data-line-number="109"></td>
          <td id="LC109">    , m_mode(WastefulTypedArray)</td>
        </tr>
        <tr>
          <td id="L110" data-line-number="110"></td>
          <td id="LC110">{</td>
        </tr>
        <tr>
          <td id="L111" data-line-number="111"></td>
          <td id="LC111">    <span>if</span> (!arrayBuffer-&gt;<span>isResizableOrGrowableShared</span>())</td>
        </tr>
        <tr>
          <td id="L112" data-line-number="112"></td>
          <td id="LC112">        m_mode = WastefulTypedArray;</td>
        </tr>
        <tr>
          <td id="L113" data-line-number="113"></td>
          <td id="LC113">    <span>else</span> {</td>
        </tr>
        <tr>
          <td id="L114" data-line-number="114"></td>
          <td id="LC114">        <span>if</span> (arrayBuffer-&gt;<span>isGrowableShared</span>())</td>
        </tr>
        <tr>
          <td id="L115" data-line-number="115"></td>
          <td id="LC115">            m_mode = length ? GrowableSharedWastefulTypedArray : GrowableSharedAutoLengthWastefulTypedArray;</td>
        </tr>
        <tr>
          <td id="L116" data-line-number="116"></td>
          <td id="LC116">        <span>else</span></td>
        </tr>
        <tr>
          <td id="L117" data-line-number="117"></td>
          <td id="LC117">            m_mode = length ? ResizableNonSharedWastefulTypedArray : ResizableNonSharedAutoLengthWastefulTypedArray;</td>
        </tr>
        <tr>
          <td id="L118" data-line-number="118"></td>
          <td id="LC118">    }</td>
        </tr>
        <tr>
          <td id="L119" data-line-number="119"></td>
          <td id="LC119">#<span>if</span> ASSERT_ENABLED</td>
        </tr>
        <tr>
          <td id="L120" data-line-number="120"></td>
          <td id="LC120">    <span>if</span> (!length)</td>
        </tr>
        <tr>
          <td id="L121" data-line-number="121"></td>
          <td id="LC121">        <span>ASSERT</span>(arrayBuffer-&gt;<span>isResizableOrGrowableShared</span>());</td>
        </tr>
        <tr>
          <td id="L122" data-line-number="122"></td>
          <td id="LC122">    <span>if</span> (<span>JSC::isResizableOrGrowableShared</span>(m_mode))</td>
        </tr>
        <tr>
          <td id="L123" data-line-number="123"></td>
          <td id="LC123">        <span>ASSERT</span>(<span>isResizableOrGrowableSharedTypedArrayIncludingDataView</span>(structure-&gt;<span>classInfoForCells</span>()));</td>
        </tr>
        <tr>
          <td id="L124" data-line-number="124"></td>
          <td id="LC124">    <span>else</span></td>
        </tr>
        <tr>
          <td id="L125" data-line-number="125"></td>
          <td id="LC125">        <span>ASSERT</span>(!<span>isResizableOrGrowableSharedTypedArrayIncludingDataView</span>(structure-&gt;<span>classInfoForCells</span>()));</td>
        </tr>
        <tr>
          <td id="L126" data-line-number="126"></td>
          <td id="LC126">#<span>endif</span></td>
        </tr>
        <tr>
          <td id="L127" data-line-number="127"></td>
          <td id="LC127">    <span>ASSERT</span>(arrayBuffer-&gt;<span>data</span>() == <span>removeArrayPtrTag</span>(arrayBuffer-&gt;<span>data</span>()));</td>
        </tr>
        <tr>
          <td id="L128" data-line-number="128"></td>
          <td id="LC128">
</td>
        </tr>
        <tr>
          <td id="L129" data-line-number="129"></td>
          <td id="LC129">    m_vector = <span>VectorType</span>(<span>static_cast</span>&lt;<span>uint8_t</span>*&gt;(arrayBuffer-&gt;<span>data</span>()) + byteOffset, m_length);</td>
        </tr>
        <tr>
          <td id="L130" data-line-number="130"></td>
          <td id="LC130">    IndexingHeader indexingHeader;</td>
        </tr>
        <tr>
          <td id="L131" data-line-number="131"></td>
          <td id="LC131">    indexingHeader.<span>setArrayBuffer</span>(arrayBuffer.<span>get</span>());</td>
        </tr>
        <tr>
          <td id="L132" data-line-number="132"></td>
          <td id="LC132">    m_butterfly = <span>Butterfly::create</span>(vm, <span>nullptr</span>, <span>0</span>, <span>0</span>, <span>true</span>, indexingHeader, <span>0</span>);</td>
        </tr>
        <tr>
          <td id="L133" data-line-number="133"></td>
          <td id="LC133">}</td>
        </tr>
        <tr>
          <td id="L134" data-line-number="134"></td>
          <td id="LC134">
</td>
        </tr>
        <tr>
          <td id="L135" data-line-number="135"></td>
          <td id="LC135"><span>JSArrayBufferView::ConstructionContext::ConstructionContext</span>(Structure* structure, RefPtr&lt;ArrayBuffer&gt;&amp;&amp; arrayBuffer, <span>size_t</span> byteOffset, std::optional&lt;<span>size_t</span>&gt; length, DataViewTag)</td>
        </tr>
        <tr>
          <td id="L136" data-line-number="136"></td>
          <td id="LC136">    : m_structure(structure)</td>
        </tr>
        <tr>
          <td id="L137" data-line-number="137"></td>
          <td id="LC137">    , m_length(length.value_or(<span>0</span>))</td>
        </tr>
        <tr>
          <td id="L138" data-line-number="138"></td>
          <td id="LC138">    , m_byteOffset(byteOffset)</td>
        </tr>
        <tr>
          <td id="L139" data-line-number="139"></td>
          <td id="LC139">    , m_mode(DataViewMode)</td>
        </tr>
        <tr>
          <td id="L140" data-line-number="140"></td>
          <td id="LC140">    , m_butterfly(<span>nullptr</span>)</td>
        </tr>
        <tr>
          <td id="L141" data-line-number="141"></td>
          <td id="LC141">{</td>
        </tr>
        <tr>
          <td id="L142" data-line-number="142"></td>
          <td id="LC142">    <span>if</span> (!arrayBuffer-&gt;<span>isResizableOrGrowableShared</span>())</td>
        </tr>
        <tr>
          <td id="L143" data-line-number="143"></td>
          <td id="LC143">        m_mode = DataViewMode;</td>
        </tr>
        <tr>
          <td id="L144" data-line-number="144"></td>
          <td id="LC144">    <span>else</span> {</td>
        </tr>
        <tr>
          <td id="L145" data-line-number="145"></td>
          <td id="LC145">        <span>if</span> (arrayBuffer-&gt;<span>isGrowableShared</span>())</td>
        </tr>
        <tr>
          <td id="L146" data-line-number="146"></td>
          <td id="LC146">            m_mode = length ? GrowableSharedDataViewMode : GrowableSharedAutoLengthDataViewMode;</td>
        </tr>
        <tr>
          <td id="L147" data-line-number="147"></td>
          <td id="LC147">        <span>else</span></td>
        </tr>
        <tr>
          <td id="L148" data-line-number="148"></td>
          <td id="LC148">            m_mode = length ? ResizableNonSharedDataViewMode : ResizableNonSharedAutoLengthDataViewMode;</td>
        </tr>
        <tr>
          <td id="L149" data-line-number="149"></td>
          <td id="LC149">    }</td>
        </tr>
        <tr>
          <td id="L150" data-line-number="150"></td>
          <td id="LC150">#<span>if</span> ASSERT_ENABLED</td>
        </tr>
        <tr>
          <td id="L151" data-line-number="151"></td>
          <td id="LC151">    <span>if</span> (!length)</td>
        </tr>
        <tr>
          <td id="L152" data-line-number="152"></td>
          <td id="LC152">        <span>ASSERT</span>(arrayBuffer-&gt;<span>isResizableOrGrowableShared</span>());</td>
        </tr>
        <tr>
          <td id="L153" data-line-number="153"></td>
          <td id="LC153">    <span>if</span> (<span>JSC::isResizableOrGrowableShared</span>(m_mode))</td>
        </tr>
        <tr>
          <td id="L154" data-line-number="154"></td>
          <td id="LC154">        <span>ASSERT</span>(<span>isResizableOrGrowableSharedTypedArrayIncludingDataView</span>(structure-&gt;<span>classInfoForCells</span>()));</td>
        </tr>
        <tr>
          <td id="L155" data-line-number="155"></td>
          <td id="LC155">    <span>else</span></td>
        </tr>
        <tr>
          <td id="L156" data-line-number="156"></td>
          <td id="LC156">        <span>ASSERT</span>(!<span>isResizableOrGrowableSharedTypedArrayIncludingDataView</span>(structure-&gt;<span>classInfoForCells</span>()));</td>
        </tr>
        <tr>
          <td id="L157" data-line-number="157"></td>
          <td id="LC157">#<span>endif</span></td>
        </tr>
        <tr>
          <td id="L158" data-line-number="158"></td>
          <td id="LC158">    <span>ASSERT</span>(arrayBuffer-&gt;<span>data</span>() == <span>removeArrayPtrTag</span>(arrayBuffer-&gt;<span>data</span>()));</td>
        </tr>
        <tr>
          <td id="L159" data-line-number="159"></td>
          <td id="LC159">
</td>
        </tr>
        <tr>
          <td id="L160" data-line-number="160"></td>
          <td id="LC160">    m_vector = <span>VectorType</span>(<span>static_cast</span>&lt;<span>uint8_t</span>*&gt;(arrayBuffer-&gt;<span>data</span>()) + byteOffset, m_length);</td>
        </tr>
        <tr>
          <td id="L161" data-line-number="161"></td>
          <td id="LC161">}</td>
        </tr>
        <tr>
          <td id="L162" data-line-number="162"></td>
          <td id="LC162">
</td>
        </tr>
        <tr>
          <td id="L163" data-line-number="163"></td>
          <td id="LC163"><span>JSArrayBufferView::JSArrayBufferView</span>(VM&amp; vm, ConstructionContext&amp; context)</td>
        </tr>
        <tr>
          <td id="L164" data-line-number="164"></td>
          <td id="LC164">    : Base(vm, context.structure(), <span>nullptr</span>)</td>
        </tr>
        <tr>
          <td id="L165" data-line-number="165"></td>
          <td id="LC165">    , m_length(context.length())</td>
        </tr>
        <tr>
          <td id="L166" data-line-number="166"></td>
          <td id="LC166">    , m_byteOffset(context.byteOffset())</td>
        </tr>
        <tr>
          <td id="L167" data-line-number="167"></td>
          <td id="LC167">    , m_mode(context.mode())</td>
        </tr>
        <tr>
          <td id="L168" data-line-number="168"></td>
          <td id="LC168">{</td>
        </tr>
        <tr>
          <td id="L169" data-line-number="169"></td>
          <td id="LC169">    <span>setButterfly</span>(vm, context.<span>butterfly</span>());</td>
        </tr>
        <tr>
          <td id="L170" data-line-number="170"></td>
          <td id="LC170">    <span>ASSERT</span>(context.<span>vector</span>() == <span>removeArrayPtrTag</span>(context.<span>vector</span>()));</td>
        </tr>
        <tr>
          <td id="L171" data-line-number="171"></td>
          <td id="LC171">    m_vector.<span>setWithoutBarrier</span>(context.<span>vector</span>(), m_length);</td>
        </tr>
        <tr>
          <td id="L172" data-line-number="172"></td>
          <td id="LC172">}</td>
        </tr>
        <tr>
          <td id="L173" data-line-number="173"></td>
          <td id="LC173">
</td>
        </tr>
        <tr>
          <td id="L174" data-line-number="174"></td>
          <td id="LC174"><span>void</span> <span>JSArrayBufferView::finishCreation</span>(VM&amp; vm)</td>
        </tr>
        <tr>
          <td id="L175" data-line-number="175"></td>
          <td id="LC175">{</td>
        </tr>
        <tr>
          <td id="L176" data-line-number="176"></td>
          <td id="LC176">    <span>Base::finishCreation</span>(vm);</td>
        </tr>
        <tr>
          <td id="L177" data-line-number="177"></td>
          <td id="LC177">    <span>ASSERT</span>(jsDynamicCast&lt;JSArrayBufferView*&gt;(<span>this</span>));</td>
        </tr>
        <tr>
          <td id="L178" data-line-number="178"></td>
          <td id="LC178">    <span>switch</span> (m_mode) {</td>
        </tr>
        <tr>
          <td id="L179" data-line-number="179"></td>
          <td id="LC179">    <span>case</span> FastTypedArray:</td>
        </tr>
        <tr>
          <td id="L180" data-line-number="180"></td>
          <td id="LC180">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L181" data-line-number="181"></td>
          <td id="LC181">    <span>case</span> OversizeTypedArray:</td>
        </tr>
        <tr>
          <td id="L182" data-line-number="182"></td>
          <td id="LC182">        vm.<span>heap</span>.<span>addFinalizer</span>(<span>this</span>, finalize);</td>
        </tr>
        <tr>
          <td id="L183" data-line-number="183"></td>
          <td id="LC183">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L184" data-line-number="184"></td>
          <td id="LC184">    <span>case</span> WastefulTypedArray:</td>
        </tr>
        <tr>
          <td id="L185" data-line-number="185"></td>
          <td id="LC185">    <span>case</span> ResizableNonSharedWastefulTypedArray:</td>
        </tr>
        <tr>
          <td id="L186" data-line-number="186"></td>
          <td id="LC186">    <span>case</span> ResizableNonSharedAutoLengthWastefulTypedArray:</td>
        </tr>
        <tr>
          <td id="L187" data-line-number="187"></td>
          <td id="LC187">    <span>case</span> GrowableSharedWastefulTypedArray:</td>
        </tr>
        <tr>
          <td id="L188" data-line-number="188"></td>
          <td id="LC188">    <span>case</span> GrowableSharedAutoLengthWastefulTypedArray:</td>
        </tr>
        <tr>
          <td id="L189" data-line-number="189"></td>
          <td id="LC189">        vm.<span>heap</span>.<span>addReference</span>(<span>this</span>, <span>butterfly</span>()-&gt;<span>indexingHeader</span>()-&gt;<span>arrayBuffer</span>());</td>
        </tr>
        <tr>
          <td id="L190" data-line-number="190"></td>
          <td id="LC190">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L191" data-line-number="191"></td>
          <td id="LC191">    <span>case</span> DataViewMode:</td>
        </tr>
        <tr>
          <td id="L192" data-line-number="192"></td>
          <td id="LC192">    <span>case</span> ResizableNonSharedDataViewMode:</td>
        </tr>
        <tr>
          <td id="L193" data-line-number="193"></td>
          <td id="LC193">    <span>case</span> ResizableNonSharedAutoLengthDataViewMode:</td>
        </tr>
        <tr>
          <td id="L194" data-line-number="194"></td>
          <td id="LC194">    <span>case</span> GrowableSharedDataViewMode:</td>
        </tr>
        <tr>
          <td id="L195" data-line-number="195"></td>
          <td id="LC195">    <span>case</span> GrowableSharedAutoLengthDataViewMode:</td>
        </tr>
        <tr>
          <td id="L196" data-line-number="196"></td>
          <td id="LC196">        <span>ASSERT</span>(!<span>butterfly</span>());</td>
        </tr>
        <tr>
          <td id="L197" data-line-number="197"></td>
          <td id="LC197">        vm.<span>heap</span>.<span>addReference</span>(<span>this</span>, jsCast&lt;JSDataView*&gt;(<span>this</span>)-&gt;<span>possiblySharedBuffer</span>());</td>
        </tr>
        <tr>
          <td id="L198" data-line-number="198"></td>
          <td id="LC198">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L199" data-line-number="199"></td>
          <td id="LC199">    }</td>
        </tr>
        <tr>
          <td id="L200" data-line-number="200"></td>
          <td id="LC200">    <span>RELEASE_ASSERT_NOT_REACHED</span>();</td>
        </tr>
        <tr>
          <td id="L201" data-line-number="201"></td>
          <td id="LC201">}</td>
        </tr>
        <tr>
          <td id="L202" data-line-number="202"></td>
          <td id="LC202">
</td>
        </tr>
        <tr>
          <td id="L203" data-line-number="203"></td>
          <td id="LC203"><span>template</span>&lt;<span>typename</span> Visitor&gt;</td>
        </tr>
        <tr>
          <td id="L204" data-line-number="204"></td>
          <td id="LC204"><span>void</span> <span>JSArrayBufferView::visitChildrenImpl</span>(JSCell* cell, Visitor&amp; visitor)</td>
        </tr>
        <tr>
          <td id="L205" data-line-number="205"></td>
          <td id="LC205">{</td>
        </tr>
        <tr>
          <td id="L206" data-line-number="206"></td>
          <td id="LC206">    JSArrayBufferView* thisObject = jsCast&lt;JSArrayBufferView*&gt;(cell);</td>
        </tr>
        <tr>
          <td id="L207" data-line-number="207"></td>
          <td id="LC207">    <span>ASSERT_GC_OBJECT_INHERITS</span>(thisObject, <span>info</span>());</td>
        </tr>
        <tr>
          <td id="L208" data-line-number="208"></td>
          <td id="LC208">    <span>Base::visitChildren</span>(cell, visitor);</td>
        </tr>
        <tr>
          <td id="L209" data-line-number="209"></td>
          <td id="LC209">
</td>
        </tr>
        <tr>
          <td id="L210" data-line-number="210"></td>
          <td id="LC210">    <span>if</span> (thisObject-&gt;<span>hasArrayBuffer</span>()) {</td>
        </tr>
        <tr>
          <td id="L211" data-line-number="211"></td>
          <td id="LC211">        <span>WTF::loadLoadFence</span>();</td>
        </tr>
        <tr>
          <td id="L212" data-line-number="212"></td>
          <td id="LC212">        ArrayBuffer* buffer = thisObject-&gt;<span>possiblySharedBuffer</span>();</td>
        </tr>
        <tr>
          <td id="L213" data-line-number="213"></td>
          <td id="LC213">        <span>RELEASE_ASSERT</span>(buffer);</td>
        </tr>
        <tr>
          <td id="L214" data-line-number="214"></td>
          <td id="LC214">        visitor.<span>addOpaqueRoot</span>(buffer);</td>
        </tr>
        <tr>
          <td id="L215" data-line-number="215"></td>
          <td id="LC215">    }</td>
        </tr>
        <tr>
          <td id="L216" data-line-number="216"></td>
          <td id="LC216">}</td>
        </tr>
        <tr>
          <td id="L217" data-line-number="217"></td>
          <td id="LC217">
</td>
        </tr>
        <tr>
          <td id="L218" data-line-number="218"></td>
          <td id="LC218"><span>DEFINE_VISIT_CHILDREN</span>(JSArrayBufferView);</td>
        </tr>
        <tr>
          <td id="L219" data-line-number="219"></td>
          <td id="LC219">
</td>
        </tr>
        <tr>
          <td id="L220" data-line-number="220"></td>
          <td id="LC220">ArrayBuffer* <span>JSArrayBufferView::unsharedBuffer</span>()</td>
        </tr>
        <tr>
          <td id="L221" data-line-number="221"></td>
          <td id="LC221">{</td>
        </tr>
        <tr>
          <td id="L222" data-line-number="222"></td>
          <td id="LC222">    ArrayBuffer* result = <span>possiblySharedBuffer</span>();</td>
        </tr>
        <tr>
          <td id="L223" data-line-number="223"></td>
          <td id="LC223">    <span>RELEASE_ASSERT</span>(!result || !result-&gt;<span>isShared</span>());</td>
        </tr>
        <tr>
          <td id="L224" data-line-number="224"></td>
          <td id="LC224">    <span>return</span> result;</td>
        </tr>
        <tr>
          <td id="L225" data-line-number="225"></td>
          <td id="LC225">}</td>
        </tr>
        <tr>
          <td id="L226" data-line-number="226"></td>
          <td id="LC226">    </td>
        </tr>
        <tr>
          <td id="L227" data-line-number="227"></td>
          <td id="LC227"><span>void</span> <span>JSArrayBufferView::finalize</span>(JSCell* cell)</td>
        </tr>
        <tr>
          <td id="L228" data-line-number="228"></td>
          <td id="LC228">{</td>
        </tr>
        <tr>
          <td id="L229" data-line-number="229"></td>
          <td id="LC229">    JSArrayBufferView* thisObject = <span>static_cast</span>&lt;JSArrayBufferView*&gt;(cell);</td>
        </tr>
        <tr>
          <td id="L230" data-line-number="230"></td>
          <td id="LC230">
</td>
        </tr>
        <tr>
          <td id="L231" data-line-number="231"></td>
          <td id="LC231">    <span><span>//</span> This JSArrayBufferView could be an OversizeTypedArray that was converted</span></td>
        </tr>
        <tr>
          <td id="L232" data-line-number="232"></td>
          <td id="LC232">    <span><span>//</span> to a WastefulTypedArray via slowDownAndWasteMemory(). Hence, it is possible</span></td>
        </tr>
        <tr>
          <td id="L233" data-line-number="233"></td>
          <td id="LC233">    <span><span>//</span> to get to this finalizer and found the mode to be WastefulTypedArray.</span></td>
        </tr>
        <tr>
          <td id="L234" data-line-number="234"></td>
          <td id="LC234">    <span>ASSERT</span>(thisObject-&gt;<span>m_mode</span> == OversizeTypedArray || thisObject-&gt;<span>hasArrayBuffer</span>());</td>
        </tr>
        <tr>
          <td id="L235" data-line-number="235"></td>
          <td id="LC235">    <span>if</span> (thisObject-&gt;<span>m_mode</span> == OversizeTypedArray)</td>
        </tr>
        <tr>
          <td id="L236" data-line-number="236"></td>
          <td id="LC236">        <span>Gigacage::free</span>(Gigacage::Primitive, thisObject-&gt;<span>vector</span>());</td>
        </tr>
        <tr>
          <td id="L237" data-line-number="237"></td>
          <td id="LC237">}</td>
        </tr>
        <tr>
          <td id="L238" data-line-number="238"></td>
          <td id="LC238">
</td>
        </tr>
        <tr>
          <td id="L239" data-line-number="239"></td>
          <td id="LC239">JSArrayBuffer* <span>JSArrayBufferView::unsharedJSBuffer</span>(JSGlobalObject* globalObject)</td>
        </tr>
        <tr>
          <td id="L240" data-line-number="240"></td>
          <td id="LC240">{</td>
        </tr>
        <tr>
          <td id="L241" data-line-number="241"></td>
          <td id="LC241">    VM&amp; vm = globalObject-&gt;<span>vm</span>();</td>
        </tr>
        <tr>
          <td id="L242" data-line-number="242"></td>
          <td id="LC242">    <span>auto</span> scope = <span>DECLARE_THROW_SCOPE</span>(vm);</td>
        </tr>
        <tr>
          <td id="L243" data-line-number="243"></td>
          <td id="LC243">    <span>if</span> (ArrayBuffer* buffer = <span>unsharedBuffer</span>())</td>
        </tr>
        <tr>
          <td id="L244" data-line-number="244"></td>
          <td id="LC244">        <span>return</span> vm.<span>m_typedArrayController</span>-&gt;<span>toJS</span>(globalObject, <span>this</span>-&gt;<span>globalObject</span>(), buffer);</td>
        </tr>
        <tr>
          <td id="L245" data-line-number="245"></td>
          <td id="LC245">    scope.<span>throwException</span>(globalObject, <span>createOutOfMemoryError</span>(globalObject));</td>
        </tr>
        <tr>
          <td id="L246" data-line-number="246"></td>
          <td id="LC246">    <span>return</span> <span>nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L247" data-line-number="247"></td>
          <td id="LC247">}</td>
        </tr>
        <tr>
          <td id="L248" data-line-number="248"></td>
          <td id="LC248">
</td>
        </tr>
        <tr>
          <td id="L249" data-line-number="249"></td>
          <td id="LC249">JSArrayBuffer* <span>JSArrayBufferView::possiblySharedJSBuffer</span>(JSGlobalObject* globalObject)</td>
        </tr>
        <tr>
          <td id="L250" data-line-number="250"></td>
          <td id="LC250">{</td>
        </tr>
        <tr>
          <td id="L251" data-line-number="251"></td>
          <td id="LC251">    VM&amp; vm = globalObject-&gt;<span>vm</span>();</td>
        </tr>
        <tr>
          <td id="L252" data-line-number="252"></td>
          <td id="LC252">    <span>auto</span> scope = <span>DECLARE_THROW_SCOPE</span>(vm);</td>
        </tr>
        <tr>
          <td id="L253" data-line-number="253"></td>
          <td id="LC253">    <span>if</span> (ArrayBuffer* buffer = <span>possiblySharedBuffer</span>())</td>
        </tr>
        <tr>
          <td id="L254" data-line-number="254"></td>
          <td id="LC254">        <span>return</span> vm.<span>m_typedArrayController</span>-&gt;<span>toJS</span>(globalObject, <span>this</span>-&gt;<span>globalObject</span>(), buffer);</td>
        </tr>
        <tr>
          <td id="L255" data-line-number="255"></td>
          <td id="LC255">    scope.<span>throwException</span>(globalObject, <span>createOutOfMemoryError</span>(globalObject));</td>
        </tr>
        <tr>
          <td id="L256" data-line-number="256"></td>
          <td id="LC256">    <span>return</span> <span>nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L257" data-line-number="257"></td>
          <td id="LC257">}</td>
        </tr>
        <tr>
          <td id="L258" data-line-number="258"></td>
          <td id="LC258">
</td>
        </tr>
        <tr>
          <td id="L259" data-line-number="259"></td>
          <td id="LC259"><span>void</span> <span>JSArrayBufferView::detach</span>()</td>
        </tr>
        <tr>
          <td id="L260" data-line-number="260"></td>
          <td id="LC260">{</td>
        </tr>
        <tr>
          <td id="L261" data-line-number="261"></td>
          <td id="LC261">    Locker locker { <span>cellLock</span>() };</td>
        </tr>
        <tr>
          <td id="L262" data-line-number="262"></td>
          <td id="LC262">    <span>RELEASE_ASSERT</span>(<span>hasArrayBuffer</span>());</td>
        </tr>
        <tr>
          <td id="L263" data-line-number="263"></td>
          <td id="LC263">    <span>RELEASE_ASSERT</span>(!<span>isShared</span>());</td>
        </tr>
        <tr>
          <td id="L264" data-line-number="264"></td>
          <td id="LC264">    m_length = <span>0</span>;</td>
        </tr>
        <tr>
          <td id="L265" data-line-number="265"></td>
          <td id="LC265">    m_byteOffset = <span>0</span>;</td>
        </tr>
        <tr>
          <td id="L266" data-line-number="266"></td>
          <td id="LC266">    m_vector.<span>clear</span>();</td>
        </tr>
        <tr>
          <td id="L267" data-line-number="267"></td>
          <td id="LC267">}</td>
        </tr>
        <tr>
          <td id="L268" data-line-number="268"></td>
          <td id="LC268">
</td>
        </tr>
        <tr>
          <td id="L269" data-line-number="269"></td>
          <td id="LC269">ArrayBuffer* <span>JSArrayBufferView::slowDownAndWasteMemory</span>()</td>
        </tr>
        <tr>
          <td id="L270" data-line-number="270"></td>
          <td id="LC270">{</td>
        </tr>
        <tr>
          <td id="L271" data-line-number="271"></td>
          <td id="LC271">    <span>ASSERT</span>(!<span>hasArrayBuffer</span>());</td>
        </tr>
        <tr>
          <td id="L272" data-line-number="272"></td>
          <td id="LC272">
</td>
        </tr>
        <tr>
          <td id="L273" data-line-number="273"></td>
          <td id="LC273">    <span><span>//</span> We play this game because we want this to be callable even from places that</span></td>
        </tr>
        <tr>
          <td id="L274" data-line-number="274"></td>
          <td id="LC274">    <span><span>//</span> don't have access to CallFrame* or the VM, and we only allocate so little</span></td>
        </tr>
        <tr>
          <td id="L275" data-line-number="275"></td>
          <td id="LC275">    <span><span>//</span> memory here that it's not necessary to trigger a GC - just accounting what</span></td>
        </tr>
        <tr>
          <td id="L276" data-line-number="276"></td>
          <td id="LC276">    <span><span>//</span> we have done is good enough. The sort of bizarre exception to the "allocating</span></td>
        </tr>
        <tr>
          <td id="L277" data-line-number="277"></td>
          <td id="LC277">    <span><span>//</span> little memory" is when we transfer a backing buffer into the C heap; this</span></td>
        </tr>
        <tr>
          <td id="L278" data-line-number="278"></td>
          <td id="LC278">    <span><span>//</span> will temporarily get counted towards heap footprint (incorrectly, in the case</span></td>
        </tr>
        <tr>
          <td id="L279" data-line-number="279"></td>
          <td id="LC279">    <span><span>//</span> of adopting an oversize typed array) but we don't GC here anyway. That's</span></td>
        </tr>
        <tr>
          <td id="L280" data-line-number="280"></td>
          <td id="LC280">    <span><span>//</span> almost certainly fine. The worst case is if you created a ton of fast typed</span></td>
        </tr>
        <tr>
          <td id="L281" data-line-number="281"></td>
          <td id="LC281">    <span><span>//</span> arrays, and did nothing but caused all of them to slow down and waste memory.</span></td>
        </tr>
        <tr>
          <td id="L282" data-line-number="282"></td>
          <td id="LC282">    <span><span>//</span> In that case, your memory footprint will double before the GC realizes what's</span></td>
        </tr>
        <tr>
          <td id="L283" data-line-number="283"></td>
          <td id="LC283">    <span><span>//</span> up. But if you do *anything* to trigger a GC watermark check, it will know</span></td>
        </tr>
        <tr>
          <td id="L284" data-line-number="284"></td>
          <td id="LC284">    <span><span>//</span> that you *had* done those allocations and it will GC appropriately.</span></td>
        </tr>
        <tr>
          <td id="L285" data-line-number="285"></td>
          <td id="LC285">    Heap* heap = <span>Heap::heap</span>(<span>this</span>);</td>
        </tr>
        <tr>
          <td id="L286" data-line-number="286"></td>
          <td id="LC286">    VM&amp; vm = heap-&gt;<span>vm</span>();</td>
        </tr>
        <tr>
          <td id="L287" data-line-number="287"></td>
          <td id="LC287">    DeferGCForAWhile <span>deferGC</span>(vm);</td>
        </tr>
        <tr>
          <td id="L288" data-line-number="288"></td>
          <td id="LC288">
</td>
        </tr>
        <tr>
          <td id="L289" data-line-number="289"></td>
          <td id="LC289">    <span>RELEASE_ASSERT</span>(!<span>hasIndexingHeader</span>());</td>
        </tr>
        <tr>
          <td id="L290" data-line-number="290"></td>
          <td id="LC290">    Structure* structure = <span>this</span>-&gt;<span>structure</span>();</td>
        </tr>
        <tr>
          <td id="L291" data-line-number="291"></td>
          <td id="LC291">
</td>
        </tr>
        <tr>
          <td id="L292" data-line-number="292"></td>
          <td id="LC292">    RefPtr&lt;ArrayBuffer&gt; buffer;</td>
        </tr>
        <tr>
          <td id="L293" data-line-number="293"></td>
          <td id="LC293">    <span>size_t</span> byteLength = <span>this</span>-&gt;<span>byteLength</span>();</td>
        </tr>
        <tr>
          <td id="L294" data-line-number="294"></td>
          <td id="LC294">
</td>
        </tr>
        <tr>
          <td id="L295" data-line-number="295"></td>
          <td id="LC295">    <span>switch</span> (m_mode) {</td>
        </tr>
        <tr>
          <td id="L296" data-line-number="296"></td>
          <td id="LC296">    <span>case</span> FastTypedArray: {</td>
        </tr>
        <tr>
          <td id="L297" data-line-number="297"></td>
          <td id="LC297">        buffer = <span>ArrayBuffer::tryCreate</span>(<span>vector</span>(), byteLength);</td>
        </tr>
        <tr>
          <td id="L298" data-line-number="298"></td>
          <td id="LC298">        <span>if</span> (!buffer)</td>
        </tr>
        <tr>
          <td id="L299" data-line-number="299"></td>
          <td id="LC299">            <span>return</span> <span>nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L300" data-line-number="300"></td>
          <td id="LC300">        <span>break</span>;</td>
        </tr>
        <tr>
          <td id="L301" data-line-number="301"></td>
          <td id="LC301">    }</td>
        </tr>
        <tr>
          <td id="L302" data-line-number="302"></td>
          <td id="LC302">
</td>
        </tr>
        <tr>
          <td id="L303" data-line-number="303"></td>
          <td id="LC303">    <span>case</span> OversizeTypedArray: {</td>
        </tr>
        <tr>
          <td id="L304" data-line-number="304"></td>
          <td id="LC304">        <span><span>//</span> FIXME: consider doing something like "subtracting" from extra memory</span></td>
        </tr>
        <tr>
          <td id="L305" data-line-number="305"></td>
          <td id="LC305">        <span><span>//</span> cost, since right now this case will cause the GC to think that we reallocated</span></td>
        </tr>
        <tr>
          <td id="L306" data-line-number="306"></td>
          <td id="LC306">        <span><span>//</span> the whole buffer.</span></td>
        </tr>
        <tr>
          <td id="L307" data-line-number="307"></td>
          <td id="LC307">        buffer = <span>ArrayBuffer::createAdopted</span>(<span>vector</span>(), byteLength);</td>
        </tr>
        <tr>
          <td id="L308" data-line-number="308"></td>
          <td id="LC308">        <span>break</span>;</td>
        </tr>
        <tr>
          <td id="L309" data-line-number="309"></td>
          <td id="LC309">    }</td>
        </tr>
        <tr>
          <td id="L310" data-line-number="310"></td>
          <td id="LC310">
</td>
        </tr>
        <tr>
          <td id="L311" data-line-number="311"></td>
          <td id="LC311">    <span>default</span>:</td>
        </tr>
        <tr>
          <td id="L312" data-line-number="312"></td>
          <td id="LC312">        <span>RELEASE_ASSERT_NOT_REACHED</span>();</td>
        </tr>
        <tr>
          <td id="L313" data-line-number="313"></td>
          <td id="LC313">        <span>break</span>;</td>
        </tr>
        <tr>
          <td id="L314" data-line-number="314"></td>
          <td id="LC314">    }</td>
        </tr>
        <tr>
          <td id="L315" data-line-number="315"></td>
          <td id="LC315">
</td>
        </tr>
        <tr>
          <td id="L316" data-line-number="316"></td>
          <td id="LC316">    <span>RELEASE_ASSERT</span>(buffer);</td>
        </tr>
        <tr>
          <td id="L317" data-line-number="317"></td>
          <td id="LC317">    <span><span>//</span> Don't create bufferfly until we know we have an ArrayBuffer.</span></td>
        </tr>
        <tr>
          <td id="L318" data-line-number="318"></td>
          <td id="LC318">    <span>setButterfly</span>(vm, <span>Butterfly::createOrGrowArrayRight</span>(</td>
        </tr>
        <tr>
          <td id="L319" data-line-number="319"></td>
          <td id="LC319">        <span>butterfly</span>(), vm, <span>this</span>, structure,</td>
        </tr>
        <tr>
          <td id="L320" data-line-number="320"></td>
          <td id="LC320">        structure-&gt;<span>outOfLineCapacity</span>(), <span>false</span>, <span>0</span>, <span>0</span>));</td>
        </tr>
        <tr>
          <td id="L321" data-line-number="321"></td>
          <td id="LC321">
</td>
        </tr>
        <tr>
          <td id="L322" data-line-number="322"></td>
          <td id="LC322">    {</td>
        </tr>
        <tr>
          <td id="L323" data-line-number="323"></td>
          <td id="LC323">        Locker locker { <span>cellLock</span>() };</td>
        </tr>
        <tr>
          <td id="L324" data-line-number="324"></td>
          <td id="LC324">        <span>butterfly</span>()-&gt;<span>indexingHeader</span>()-&gt;<span>setArrayBuffer</span>(buffer.<span>get</span>());</td>
        </tr>
        <tr>
          <td id="L325" data-line-number="325"></td>
          <td id="LC325">        m_vector.<span>setWithoutBarrier</span>(buffer-&gt;<span>data</span>(), m_length);</td>
        </tr>
        <tr>
          <td id="L326" data-line-number="326"></td>
          <td id="LC326">        <span>WTF::storeStoreFence</span>();</td>
        </tr>
        <tr>
          <td id="L327" data-line-number="327"></td>
          <td id="LC327">        m_mode = WastefulTypedArray; <span><span>//</span> There is no possibility that FastTypedArray or OversizeTypedArray becomes resizable ones since resizable ones do not start with FastTypedArray or OversizeTypedArray.</span></td>
        </tr>
        <tr>
          <td id="L328" data-line-number="328"></td>
          <td id="LC328">    }</td>
        </tr>
        <tr>
          <td id="L329" data-line-number="329"></td>
          <td id="LC329">    heap-&gt;<span>addReference</span>(<span>this</span>, buffer.<span>get</span>());</td>
        </tr>
        <tr>
          <td id="L330" data-line-number="330"></td>
          <td id="LC330">
</td>
        </tr>
        <tr>
          <td id="L331" data-line-number="331"></td>
          <td id="LC331">    <span>return</span> buffer.<span>get</span>();</td>
        </tr>
        <tr>
          <td id="L332" data-line-number="332"></td>
          <td id="LC332">}</td>
        </tr>
        <tr>
          <td id="L333" data-line-number="333"></td>
          <td id="LC333">
</td>
        </tr>
        <tr>
          <td id="L334" data-line-number="334"></td>
          <td id="LC334"><span><span>//</span> Allocates the full-on native buffer and moves data into the C heap if</span></td>
        </tr>
        <tr>
          <td id="L335" data-line-number="335"></td>
          <td id="LC335"><span><span>//</span> necessary. Note that this never allocates in the GC heap.</span></td>
        </tr>
        <tr>
          <td id="L336" data-line-number="336"></td>
          <td id="LC336">RefPtr&lt;ArrayBufferView&gt; <span>JSArrayBufferView::possiblySharedImpl</span>()</td>
        </tr>
        <tr>
          <td id="L337" data-line-number="337"></td>
          <td id="LC337">{</td>
        </tr>
        <tr>
          <td id="L338" data-line-number="338"></td>
          <td id="LC338">    ArrayBuffer* buffer = <span>possiblySharedBuffer</span>();</td>
        </tr>
        <tr>
          <td id="L339" data-line-number="339"></td>
          <td id="LC339">    <span>if</span> (!buffer)</td>
        </tr>
        <tr>
          <td id="L340" data-line-number="340"></td>
          <td id="LC340">        <span>return</span> <span>nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L341" data-line-number="341"></td>
          <td id="LC341">    <span>size_t</span> byteOffset = <span>this</span>-&gt;<span>byteOffsetRaw</span>();</td>
        </tr>
        <tr>
          <td id="L342" data-line-number="342"></td>
          <td id="LC342">    <span>size_t</span> length = <span>this</span>-&gt;<span>lengthRaw</span>();</td>
        </tr>
        <tr>
          <td id="L343" data-line-number="343"></td>
          <td id="LC343">    <span>switch</span> (<span>type</span>()) {</td>
        </tr>
        <tr>
          <td id="L344" data-line-number="344"></td>
          <td id="LC344">#<span>define</span> <span>FACTORY</span>(<span>type</span>) \</td>
        </tr>
        <tr>
          <td id="L345" data-line-number="345"></td>
          <td id="LC345">    <span>case</span> type ## ArrayType: \</td>
        </tr>
        <tr>
          <td id="L346" data-line-number="346"></td>
          <td id="LC346">        <span>return</span> type ## <span>Array::wrappedAs</span>(*buffer, byteOffset, <span>isAutoLength</span>() ? std::nullopt : std::optional { length });</td>
        </tr>
        <tr>
          <td id="L347" data-line-number="347"></td>
          <td id="LC347">    <span>FOR_EACH_TYPED_ARRAY_TYPE_EXCLUDING_DATA_VIEW</span>(FACTORY)</td>
        </tr>
        <tr>
          <td id="L348" data-line-number="348"></td>
          <td id="LC348">#<span>undef</span> FACTORY</td>
        </tr>
        <tr>
          <td id="L349" data-line-number="349"></td>
          <td id="LC349">    <span>case</span> DataViewType:</td>
        </tr>
        <tr>
          <td id="L350" data-line-number="350"></td>
          <td id="LC350">        <span>return</span> <span>DataView::wrappedAs</span>(*buffer, byteOffset, <span>isAutoLength</span>() ? std::nullopt : std::optional { length });</td>
        </tr>
        <tr>
          <td id="L351" data-line-number="351"></td>
          <td id="LC351">    <span>default</span>:</td>
        </tr>
        <tr>
          <td id="L352" data-line-number="352"></td>
          <td id="LC352">        <span>RELEASE_ASSERT_NOT_REACHED</span>();</td>
        </tr>
        <tr>
          <td id="L353" data-line-number="353"></td>
          <td id="LC353">        <span>return</span> <span>nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L354" data-line-number="354"></td>
          <td id="LC354">    }</td>
        </tr>
        <tr>
          <td id="L355" data-line-number="355"></td>
          <td id="LC355">}</td>
        </tr>
        <tr>
          <td id="L356" data-line-number="356"></td>
          <td id="LC356">
</td>
        </tr>
        <tr>
          <td id="L357" data-line-number="357"></td>
          <td id="LC357"><span>bool</span> <span>JSArrayBufferView::isIteratorProtocolFastAndNonObservable</span>()</td>
        </tr>
        <tr>
          <td id="L358" data-line-number="358"></td>
          <td id="LC358">{</td>
        </tr>
        <tr>
          <td id="L359" data-line-number="359"></td>
          <td id="LC359">    <span><span>//</span> Excluding DataView.</span></td>
        </tr>
        <tr>
          <td id="L360" data-line-number="360"></td>
          <td id="LC360">    <span>if</span> (!<span>isTypedArrayType</span>(<span>type</span>()))</td>
        </tr>
        <tr>
          <td id="L361" data-line-number="361"></td>
          <td id="LC361">        <span>return</span> <span>false</span>;</td>
        </tr>
        <tr>
          <td id="L362" data-line-number="362"></td>
          <td id="LC362">
</td>
        </tr>
        <tr>
          <td id="L363" data-line-number="363"></td>
          <td id="LC363">    JSGlobalObject* globalObject = <span>this</span>-&gt;<span>globalObject</span>();</td>
        </tr>
        <tr>
          <td id="L364" data-line-number="364"></td>
          <td id="LC364">    TypedArrayType typedArrayType = <span>JSC::typedArrayType</span>(<span>type</span>());</td>
        </tr>
        <tr>
          <td id="L365" data-line-number="365"></td>
          <td id="LC365">    <span>if</span> (!globalObject-&gt;<span>isTypedArrayPrototypeIteratorProtocolFastAndNonObservable</span>(typedArrayType))</td>
        </tr>
        <tr>
          <td id="L366" data-line-number="366"></td>
          <td id="LC366">        <span>return</span> <span>false</span>;</td>
        </tr>
        <tr>
          <td id="L367" data-line-number="367"></td>
          <td id="LC367">
</td>
        </tr>
        <tr>
          <td id="L368" data-line-number="368"></td>
          <td id="LC368">    VM&amp; vm = globalObject-&gt;<span>vm</span>();</td>
        </tr>
        <tr>
          <td id="L369" data-line-number="369"></td>
          <td id="LC369">    Structure* structure = <span>this</span>-&gt;<span>structure</span>();</td>
        </tr>
        <tr>
          <td id="L370" data-line-number="370"></td>
          <td id="LC370">    <span><span>//</span> This is the fast case. Many TypedArrays will be an original typed array structure.</span></td>
        </tr>
        <tr>
          <td id="L371" data-line-number="371"></td>
          <td id="LC371">    <span>if</span> (globalObject-&gt;<span>isOriginalTypedArrayStructure</span>(structure, <span>true</span>) || globalObject-&gt;<span>isOriginalTypedArrayStructure</span>(structure, <span>false</span>))</td>
        </tr>
        <tr>
          <td id="L372" data-line-number="372"></td>
          <td id="LC372">        <span>return</span> <span>true</span>;</td>
        </tr>
        <tr>
          <td id="L373" data-line-number="373"></td>
          <td id="LC373">
</td>
        </tr>
        <tr>
          <td id="L374" data-line-number="374"></td>
          <td id="LC374">    <span>if</span> (<span>getPrototypeDirect</span>() != globalObject-&gt;<span>typedArrayPrototype</span>(typedArrayType))</td>
        </tr>
        <tr>
          <td id="L375" data-line-number="375"></td>
          <td id="LC375">        <span>return</span> <span>false</span>;</td>
        </tr>
        <tr>
          <td id="L376" data-line-number="376"></td>
          <td id="LC376">
</td>
        </tr>
        <tr>
          <td id="L377" data-line-number="377"></td>
          <td id="LC377">    <span>if</span> (<span>getDirectOffset</span>(vm, vm.<span>propertyNames</span>-&gt;<span>iteratorSymbol</span>) != invalidOffset)</td>
        </tr>
        <tr>
          <td id="L378" data-line-number="378"></td>
          <td id="LC378">        <span>return</span> <span>false</span>;</td>
        </tr>
        <tr>
          <td id="L379" data-line-number="379"></td>
          <td id="LC379">
</td>
        </tr>
        <tr>
          <td id="L380" data-line-number="380"></td>
          <td id="LC380">    <span>return</span> <span>true</span>;</td>
        </tr>
        <tr>
          <td id="L381" data-line-number="381"></td>
          <td id="LC381">}</td>
        </tr>
        <tr>
          <td id="L382" data-line-number="382"></td>
          <td id="LC382">
</td>
        </tr>
        <tr>
          <td id="L383" data-line-number="383"></td>
          <td id="LC383">} <span><span>//</span> namespace JSC</span></td>
        </tr>
        <tr>
          <td id="L384" data-line-number="384"></td>
          <td id="LC384">
</td>
        </tr>
        <tr>
          <td id="L385" data-line-number="385"></td>
          <td id="LC385"><span>namespace</span> <span>WTF</span> {</td>
        </tr>
        <tr>
          <td id="L386" data-line-number="386"></td>
          <td id="LC386">
</td>
        </tr>
        <tr>
          <td id="L387" data-line-number="387"></td>
          <td id="LC387"><span>using</span> <span>namespace</span> <span>JSC</span><span>;</span></td>
        </tr>
        <tr>
          <td id="L388" data-line-number="388"></td>
          <td id="LC388">
</td>
        </tr>
        <tr>
          <td id="L389" data-line-number="389"></td>
          <td id="LC389"><span>void</span> <span>printInternal</span>(PrintStream&amp; out, TypedArrayMode mode)</td>
        </tr>
        <tr>
          <td id="L390" data-line-number="390"></td>
          <td id="LC390">{</td>
        </tr>
        <tr>
          <td id="L391" data-line-number="391"></td>
          <td id="LC391">    <span>switch</span> (mode) {</td>
        </tr>
        <tr>
          <td id="L392" data-line-number="392"></td>
          <td id="LC392">    <span>case</span> FastTypedArray:</td>
        </tr>
        <tr>
          <td id="L393" data-line-number="393"></td>
          <td id="LC393">        out.<span>print</span>(<span><span>"</span>FastTypedArray<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L394" data-line-number="394"></td>
          <td id="LC394">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L395" data-line-number="395"></td>
          <td id="LC395">    <span>case</span> OversizeTypedArray:</td>
        </tr>
        <tr>
          <td id="L396" data-line-number="396"></td>
          <td id="LC396">        out.<span>print</span>(<span><span>"</span>OversizeTypedArray<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L397" data-line-number="397"></td>
          <td id="LC397">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L398" data-line-number="398"></td>
          <td id="LC398">    <span>case</span> WastefulTypedArray:</td>
        </tr>
        <tr>
          <td id="L399" data-line-number="399"></td>
          <td id="LC399">        out.<span>print</span>(<span><span>"</span>WastefulTypedArray<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L400" data-line-number="400"></td>
          <td id="LC400">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L401" data-line-number="401"></td>
          <td id="LC401">    <span>case</span> ResizableNonSharedWastefulTypedArray:</td>
        </tr>
        <tr>
          <td id="L402" data-line-number="402"></td>
          <td id="LC402">        out.<span>print</span>(<span><span>"</span>ResizableNonSharedWastefulTypedArray<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L403" data-line-number="403"></td>
          <td id="LC403">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L404" data-line-number="404"></td>
          <td id="LC404">    <span>case</span> ResizableNonSharedAutoLengthWastefulTypedArray:</td>
        </tr>
        <tr>
          <td id="L405" data-line-number="405"></td>
          <td id="LC405">        out.<span>print</span>(<span><span>"</span>ResizableNonSharedAutoLengthWastefulTypedArray<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L406" data-line-number="406"></td>
          <td id="LC406">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L407" data-line-number="407"></td>
          <td id="LC407">    <span>case</span> GrowableSharedWastefulTypedArray:</td>
        </tr>
        <tr>
          <td id="L408" data-line-number="408"></td>
          <td id="LC408">        out.<span>print</span>(<span><span>"</span>GrowableSharedWastefulTypedArray<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L409" data-line-number="409"></td>
          <td id="LC409">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L410" data-line-number="410"></td>
          <td id="LC410">    <span>case</span> GrowableSharedAutoLengthWastefulTypedArray:</td>
        </tr>
        <tr>
          <td id="L411" data-line-number="411"></td>
          <td id="LC411">        out.<span>print</span>(<span><span>"</span>GrowableSharedAutoLengthWastefulTypedArray<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L412" data-line-number="412"></td>
          <td id="LC412">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L413" data-line-number="413"></td>
          <td id="LC413">    <span>case</span> DataViewMode:</td>
        </tr>
        <tr>
          <td id="L414" data-line-number="414"></td>
          <td id="LC414">        out.<span>print</span>(<span><span>"</span>DataViewMode<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L415" data-line-number="415"></td>
          <td id="LC415">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L416" data-line-number="416"></td>
          <td id="LC416">    <span>case</span> ResizableNonSharedDataViewMode:</td>
        </tr>
        <tr>
          <td id="L417" data-line-number="417"></td>
          <td id="LC417">        out.<span>print</span>(<span><span>"</span>ResizableNonSharedDataViewMode<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L418" data-line-number="418"></td>
          <td id="LC418">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L419" data-line-number="419"></td>
          <td id="LC419">    <span>case</span> ResizableNonSharedAutoLengthDataViewMode:</td>
        </tr>
        <tr>
          <td id="L420" data-line-number="420"></td>
          <td id="LC420">        out.<span>print</span>(<span><span>"</span>ResizableNonSharedAutoLengthDataViewMode<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L421" data-line-number="421"></td>
          <td id="LC421">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L422" data-line-number="422"></td>
          <td id="LC422">    <span>case</span> GrowableSharedDataViewMode:</td>
        </tr>
        <tr>
          <td id="L423" data-line-number="423"></td>
          <td id="LC423">        out.<span>print</span>(<span><span>"</span>GrowableSharedDataViewMode<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L424" data-line-number="424"></td>
          <td id="LC424">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L425" data-line-number="425"></td>
          <td id="LC425">    <span>case</span> GrowableSharedAutoLengthDataViewMode:</td>
        </tr>
        <tr>
          <td id="L426" data-line-number="426"></td>
          <td id="LC426">        out.<span>print</span>(<span><span>"</span>GrowableSharedAutoLengthDataViewMode<span>"</span></span>);</td>
        </tr>
        <tr>
          <td id="L427" data-line-number="427"></td>
          <td id="LC427">        <span>return</span>;</td>
        </tr>
        <tr>
          <td id="L428" data-line-number="428"></td>
          <td id="LC428">    }</td>
        </tr>
        <tr>
          <td id="L429" data-line-number="429"></td>
          <td id="LC429">    <span>RELEASE_ASSERT_NOT_REACHED</span>();</td>
        </tr>
        <tr>
          <td id="L430" data-line-number="430"></td>
          <td id="LC430">}</td>
        </tr>
        <tr>
          <td id="L431" data-line-number="431"></td>
          <td id="LC431">
</td>
        </tr>
        <tr>
          <td id="L432" data-line-number="432"></td>
          <td id="LC432">} <span><span>//</span> namespace WTF</span></td>
        </tr>
        <tr>
          <td id="L433" data-line-number="433"></td>
          <td id="LC433">
</td>
        </tr>
  </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We are wasting up to 20% of our time on computer problems, says study (229 pts)]]></title>
            <link>https://techxplore.com/news/2023-06-problems.html</link>
            <guid>36575190</guid>
            <pubDate>Mon, 03 Jul 2023 16:23:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://techxplore.com/news/2023-06-problems.html">https://techxplore.com/news/2023-06-problems.html</a>, See on <a href="https://news.ycombinator.com/item?id=36575190">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
									    
<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2022/computer.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2022/computer.jpg" data-sub-html="Credit: Unsplash/CC0 Public Domain">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2022/computer.jpg" alt="computer" title="Credit: Unsplash/CC0 Public Domain" width="800" height="530">
             <figcaption>
                Credit: Unsplash/CC0 Public Domain
            </figcaption>        </figure>
    </div>
<p>Even though our computers are now better than 15 years ago, they still malfunction 11%–20% of the time, a new study from the University of Copenhagen and Roskilde University concludes. The researchers behind the study therefore find that there are major gains to be achieved for society by rethinking the systems and involving users more in their development.
                                              </p>
                                                                                
<p>An endlessly rotating beach ball, a program that <a href="https://techxplore.com/tags/crashes/" rel="tag">crashes</a> without saving data or systems that require illogical procedures or simply do not work: Unfortunately, struggling with computers is still a familiar situation for most of us. Tearing your hair out over computers that do not work remains very common among users, according to new Danish research.
</p><p>In fact, so much that on average, we waste 11%–20% of our time in front of our computers on systems that do not work or that are so difficult to understand that we cannot perform the task we want to. And this is far from being good enough, says Professor Kasper Hornbæk, one of the researchers behind the study.
</p><p>"It's incredible that the figure is so high. However, most people experience frustration when using computers and can tell a horror story about an important PowerPoint presentation that was not saved or a system that crashed at a critical moment. Everyone knows that it is difficult to create IT systems that match people's needs, but the figure should be much lower, and one thing that it shows is that <a href="https://techxplore.com/tags/ordinary+people/" rel="tag">ordinary people</a> aren't involved enough when the systems are developed," he says.
</p><p>Professor Morten Hertzum, the other researcher behind the study, emphasizes that most frustrations are experienced in connection with the performance of completely ordinary tasks.
</p><p>"The frustrations are not due to people using their computers for something highly advanced, but because they experience problems in their performance of everyday tasks. This makes it easier to involve users in identifying problems. But it also means that problems that are not identified and solved will probably frustrate a large number of users," says Morten Hertzum.
</p><h2>The problems are only too recognizable</h2>
<p>To examine this issue, the researchers have been assisted by 234 participants who spend between six and eight hours in front of a computer in their day-to-day work.
</p><p>During one hour, the researchers told them to report the situations in which the computer would not work properly, or where the participants were frustrated about not being able to perform the task they wanted.
</p><p>The problems most often experienced by the participants included: "the system was slow," "the system froze temporarily," "the system crashed," "it is difficult to find things." The participants had backgrounds such as student, accountant, consultant, but several of them actually worked in the IT industry.
</p><p>"A number of the participants in the survey were IT professionals, while most of the other participants were highly competent IT and computer users. Nevertheless, they encountered these problems, and it turns out that this involves some fundamental functions," says Kasper Hornbæk.
</p><p>The participants in the survey also responded that 84% of the episodes had occurred before and that 87% of the episodes could happen again. And, according to Kasper Hornbæk, we are having the same fundamental problems today that we had 15–20 years ago.
</p><p>"The two biggest categories of problems are still about insufficient performance and lack of user-friendliness," he says.
</p><p>Morten Hertzum adds, "Our technology can do more today, and it has also become better, but at the same time, we expect more from it. Even though downloads are faster now, they are often still experienced as frustratingly slow. "

                                            <!-- Google middle Adsense block -->
    </p>
                                        <h2>88% use a computer at work</h2>
<p>According to Statistics Denmark, 88% of Danes used computers, laptops, smartphones, tablets or other mobile devices at work in 2018. In this context, the new study indicates that a half to a whole day of a normal working week may be wasted on computer problems.
</p><p>"There is a lot of productivity lost in workplaces throughout Denmark because people are unable to perform their ordinary work because the computer is not running as it should. It also causes a lot of frustrations for the individual user," says Kasper Hornbæk.
</p><p>This means that there are major benefits to be gained for society if we experienced fewer problems in front of our computers. According to Kasper Hornbæk, the gains can, for example, be achieved if more resources are invested in rethinking how faults are presented to us on the computer.
</p><p>"Part of the solution may be to shield us from knowing that the computer is working to solve a problem. In reality, there is no reason why we need to look at an incomprehensible box with commands or a frozen computer. The <a href="https://techxplore.com/tags/computer/" rel="tag">computer</a> could easily solve the problems without displaying this, while it provided a back-up version of the system for us, so that we could continue to work with our tasks undisturbed," says Kasper Hornbæk.
</p><p>At the same time, IT developers should involve the users even more when designing the systems to make them as easy to use—and understand—as possible, because according to the researcher, there are no poor IT users, only poor systems.
</p><p>"When we're all surrounded by IT systems that we're cursing, it's very healthy to ascertain that it's probably not the <a href="https://techxplore.com/tags/users/" rel="tag">users</a> that are the problem, but those who make the systems. The study clearly shows that there is still much room for improvement, and we therefore hope that it can create more focus on making more user-friendly systems in the future," concludes Kasper Hornbæk.
                                                                                											</p><p><strong>More information:</strong>
												Morten Hertzum et al, Frustration: Still a Common User Experience, <i>ACM Transactions on Computer-Human Interaction</i> (2023).  <a data-doi="1" href="https://dx.doi.org/10.1145/3582432" target="_blank">DOI: 10.1145/3582432</a>
																								
																							</p>
                                        											
										                                            
                                                                                                                        
                                        <!-- print only -->
                                        <div>
                                            <p><strong>Citation</strong>:
                                                We are wasting up to 20% of our time on computer problems, says study (2023, June 29)
                                                retrieved 3 July 2023
                                                from https://techxplore.com/news/2023-06-problems.html
                                            </p>
                                            <p>
                                            This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no
                                            part may be reproduced without the written permission. The content is provided for information purposes only.
                                            </p>
                                        </div>
                                        
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Where in the USA Is This? (376 pts)]]></title>
            <link>https://pudding.cool/games/where/</link>
            <guid>36575116</guid>
            <pubDate>Mon, 03 Jul 2023 16:18:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pudding.cool/games/where/">https://pudding.cool/games/where/</a>, See on <a href="https://news.ycombinator.com/item?id=36575116">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
<article>
	<div id="about"><h3>How to Play</h3>
	<p><!-- HTML_TAG_START -->There are five photos from the same place. You have five guesses to figure out where. A new photo is revealed after each guess. The tile color is how close your guess was:<!-- HTML_TAG_END --></p>

	<ul><li>0<br>miles</li><li>100<br>miles</li><li>200<br>miles</li><li>200+<br>miles</li></ul>

	<h3>Data</h3>
		<p><!-- HTML_TAG_START -->~500,000 geo-tagged images from Wikimedia Commons. Each day, a random location is generated, along with five photos within five miles.<!-- HTML_TAG_END --></p>

	<p><!-- HTML_TAG_START -->By <a href="https://pudding.cool/author/russell-samora" target="_blank" rel="no-referrer">Russell Samora</a>. A new puzzle is released daily at midnight, EST.<!-- HTML_TAG_END -->
		<!-- HTML_TAG_START -->If you like our work, support us on <a href="https://www.patreon.com/thepudding" target="_blank" rel="no-referrer">Patreon</a>, or <a href="https://donate.stripe.com/00g03oaJRggE3zqeUW" target="_blank" rel="no-referrer">send us a tip!</a><!-- HTML_TAG_END --></p>
		</div>
	<div id="stats"><h3>Your Stats</h3>
	<div><p>Games played: <strong>0</strong></p>
		<p>Average best guess: <span><strong>no data
					</strong></span></p></div>

	<div><h4>Guess distribution (mi):</h4>
		<p><strong>no data</strong></p></div>
		</div>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Goodreads was the future of book reviews. Then Amazon bought it (506 pts)]]></title>
            <link>https://www.washingtonpost.com/technology/2023/07/01/amazon-goodreads-elizabeth-gilbert/</link>
            <guid>36575003</guid>
            <pubDate>Mon, 03 Jul 2023 16:11:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.washingtonpost.com/technology/2023/07/01/amazon-goodreads-elizabeth-gilbert/">https://www.washingtonpost.com/technology/2023/07/01/amazon-goodreads-elizabeth-gilbert/</a>, See on <a href="https://news.ycombinator.com/item?id=36575003">Hacker News</a></p>
Couldn't get https://www.washingtonpost.com/technology/2023/07/01/amazon-goodreads-elizabeth-gilbert/: Error [ERR_FR_TOO_MANY_REDIRECTS]: Maximum number of redirects exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[The Animated Elliptic Curve (171 pts)]]></title>
            <link>https://curves.xargs.org</link>
            <guid>36574844</guid>
            <pubDate>Mon, 03 Jul 2023 16:01:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://curves.xargs.org">https://curves.xargs.org</a>, See on <a href="https://news.ycombinator.com/item?id=36574844">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p><span>Visualizing Elliptic Curve Cryptography</span></p><p>
    Every TLS 1.3 session starts with a key exchange
    made via an elliptic curve. The most popular curve is
    Curve25519, and the exchange involves adding a "base point"
    <span>P</span>
    to itself over and over again:
</p>
<figure>
    
    <figcaption>Curve25519 point addition</figcaption>
</figure>
<p>
    We're looking at the heart of TLS 1.3 key exchange,
    but what's going on? Let's break it down into simple parts.
</p>

<h2>Adding points on a curve</h2>
<p>
    The elliptic curves we're going to use are in this form:
    `y^2 = x^3 + Ax + B`
    <br>

</p><figure>
    
    <figcaption>Examples of elliptic curves</figcaption>
</figure>

<p>
    Let's define <strong>point addition</strong>: a way to combine two points on an elliptic
    curve to yield a third point (also on the curve).

</p><div>
<p><strong>Point addition:</strong></p><ul>
    <li>draw a line between the two points
        (or if you're adding a point to itself, make a line tangent to the curve at that
        point),</li>
    <li>find where that line intersects the curve,</li>
    <li>and finally negate the y-value of that point.</li>
</ul>
</div> <!-- skinny-block -->

<figure>
    
    <figcaption>Repeated addition of a point P</figcaption>
</figure>

<p>
    Point addition has two useful properties which we'll need later:
</p><ul>
    <li><strong>commutative</strong>: adding points in any order results in the same point:
        <p>
        P+Q = Q+P
        <br>
        P+Q+R = R+Q+P = P+R+Q
        </p>
    </li><li><strong>associative</strong>: addition of additions has the same result as adding the points individually:
    <p>
    (P+Q)+R = P+(Q+R)
    <br>
    P+P+P+P+P = (P+P) + (P+P+P) = 2P + 3P = 5P
    <br>
    P+P+P+P+P = (P+P+P+P) + (P) = 4P + 1P = 5P
    </p>
</li>
</ul>
<p>This is demonstrated in the animation below which adds points in random order: `n_1P + n_2P = n_3P`

</p><p>No matter which points are added or in which order, the result is always
    the same point that was found by adding `P` to itself over and over again `n_3` times above.

</p><figure>
    
    <figcaption>Point addition is associative and commutative</figcaption>
</figure>

<h2>Finite field math</h2>
<p>Next let's put curves aside and introduce a new set of math operations,
    the operations of the finite field <span>Fp</span>.

</p><p>A finite field is just a set of numbers. In this section we'll set
    `p` to 23 (a prime number). The finite field <span>F23</span> is the list
    of numbers 0 through 22:
</p><p>
`\mathbb{F}_23 = {0, 1, 2, …, 22}`
</p>

<p>
    All the math operations below use only those 23 numbers as inputs as outputs. <strong>No negative numbers,
    no floating point, and nothing higher than 22</strong>.

</p><h5>Addition / Subtraction</h5>
<p>
    Adding and subtracting in finite fields is pretty simple. Values of 23 and greater will wrap around to
    zero, and values below zero will wrap around to 22:
    <canvas id="canvas-field-add-sub" width="500" height="80"></canvas>

</p><p>You might also know this as "modulo 23", or as the remainder after dividing a number by 23.

</p><h5>Multiplication</h5>
<p>
    Multiplication is also straightforward. Similar to addition, the result is taken modulo 23:

    <canvas id="canvas-field-mult" width="500" height="80"></canvas>

</p><h5>Negation</h5>
<p>
    You might be used to negation as flipping a value's sign from positive to negative
    (or vice versa). Another definition would be finding the value
    `\text{-}n` for `n` that satisfies this equation:
</p><p>
`n + \text{-}n = 0`
</p>

<p>
    In <span>Fp</span>, we can solve the above and negate a number by subtracting
    it from `p`:

    <canvas id="canvas-field-negate" width="500" height="80"></canvas>

</p><h5>Division (multiplicative inverse)</h5>
<p>
    Let's define division in <span>Fp</span> around the concept
    that any non-zero number divided by itself is 1:
</p><p>
`\frac{n}{n} = 1`
</p>
<p>Or if we expand one of the terms:
</p><p>
`n \cdot \frac{1}{n} = 1`
</p>
<p>Let's use a different notation for `1//n` which is easier to fit on a line:
</p><p>
`n \cdot n^(\text{-}1) = 1`
</p>

<p>
    In our <span>Fp</span> multiplication it's possible for two
    positive integers to equal 1 when multiplied together.
    It turns out that for each positive integer in <span>Fp</span> there is one
    positive integer that acts as this "multiplicative inverse" solution to the equation above:
    <canvas id="canvas-field-div" width="500" height="80"></canvas>

</p><p>
    To tie it all together, when working in <span>Fp</span>
    any time we need to divide by a number `n` we will instead
    multiply by its multiplicative inverse `n^(\text{-}1)`,
    the number which satisfies the equation `n \cdot n^(\text{-}1) = 1`.

</p><p>
    The inverse for each number in
    <span>F23</span> is provided <a target="_blank" href="https://curves.xargs.org/inverse23.html">in this table</a>.

</p><h5>Square root</h5>
<p>
    Our last operation to define is square root.
    We'll define the square root of `n`
    as a number in <span>Fp</span>
    which satisfies this equation:

</p><p>
`sqrt(n) \cdot sqrt(n) = n`
</p>

<canvas id="canvas-field-sqrt" width="500" height="80"></canvas>

<p>
    Only half of the non-zero members of <span>Fp</span> have a solution to the square root
    equation. They also have two solutions: much like how real numbers have a positive and negative solution
    for square root, members of our finite field have two square roots that are each the negation of the other.

</p><p>The solutions for <span>F23</span> are
    provided <a target="_blank" href="https://curves.xargs.org/sqrt23.html">in this table</a>.

</p><h2>Elliptic curves <em>and</em> finite fields</h2>
<p>
    Now we can combine the two concepts of elliptic curves and finite field math.
    Let's start with an elliptic curve equation:
</p><p>
`y^2 = x^3 + 9x + 1`
</p>

<p>For our finite field let's use the prime number 61:

</p><p>
`\mathbb{F}_61 = {0, 1, 2, …, 60}`
</p>


<p>
    The tables for <a href="https://curves.xargs.org/inverse61.html" target="_blank">division</a>
    and <a href="https://curves.xargs.org/sqrt61.html" target="_blank">square roots</a>
    in <span>F61</span> are pre-computed for convenience.



</p><p>
    What would it look like to plot the curve above, using the math of a finite field
    <span>F61</span> on a graph? Starting with `x=0`
    and working through each number from 0 to 60, using the math operations we defined above:

</p><table>
    <tbody><tr>
        <td>`x = 0`:</td>
        <td>`y^2 = 0^3 + 9\cdot0 + 1 = 1 mod 61 = 1 =&gt;`
        </td><td>`y = sqrt(1) =` 1 and 60</td>
    </tr>
    <tr>
        <td>`x = 1`:</td>
        <td>`y^2 = 1^3 + 9\cdot1 + 1 = 11 mod 61 = 11 =&gt;`
        </td><td>`y = sqrt(11) =` undefined</td>
    </tr>
    <tr>
        <td>`x = 2`:</td>
        <td>`y^2 = 2^3 + 9\cdot2 + 1 = 27 mod 61 = 27 =&gt;`
        </td><td>`y = sqrt(27) =` 24 and 37</td>
    </tr>
    <tr>
        <td>`x = 3`:</td>
        <td>`y^2 = 3^3 + 9\cdot3 + 1 = 55 mod 61 = 55 =&gt;`
        </td><td>`y = sqrt(55) = ` undefined</td>
    </tr>
    <tr>
        <td>`x = 4`:</td>
        <td>`y^2 = 4^3 + 9\cdot4 + 1 = 101 mod 61 = 40 =&gt;`
        </td><td>`y = sqrt(40) = ` undefined</td>
    </tr>
    <tr>
        <td>`x = 5`:</td>
        <td>`y^2 = 5^3 + 9\cdot5 + 1 = 171 mod 61 = 49 =&gt;`
        </td><td>`y = sqrt(49) = ` 7 and 54</td>
    </tr>
    <tr>
        <td colspan="3">... and so on</td>
</tr></tbody></table>

<p>
    The resulting graph looks like this:
</p><figure>
    
    <figcaption>Our elliptic curve plotted in <span>Fp</span></figcaption>
</figure>

<p>
    Finally, we'll nominate one of the points on this curve to be the "base point":
</p><p>
`P = (5,7)`
</p>
<p>
    The point chosen is somewhat arbitrary, but some points are better than others. This point was chosen because
    it can be added to itself (see below) a relatively large number of times before it comes back to itself
    (specifically, it repeats every 73 point additions).

</p><p>
    Let's give a name to the combination of above definitions (the curve equation,
    the prime number for the finite field, and the base point).  We'll call it "Curve61".

</p><h5>Point Addition</h5>
<p>
    We can still add points on this curve, using the math of <span>F61</span> and
    the rules of point addition: draw lines between two points, find the curve intersection,
    then negate the point's y-value.

</p><figure>
    
    <figcaption>Curve61 point addition</figcaption>
</figure>

<p>This animation shows finite field math wrapping from 61 to 0, sometimes many times, before intersection
    with a curve point. Finding the values algebraically is relatively easy, just remember to
    use the rules of finite field math for these formulas:

</p><div>
<p>
    To add two points `P: (x_1, y_1)` and `Q: (x_2, y_2)` to get a third point `R: (x_3, y_3)`:
</p><p>
`\lambda = \frac{y_2 - y_1}{x_2 - x_1}`
<br>
`x_3 = \lambda^2 - x_1 - x_2`
<br>
`y_3 = \lambda(x_1 - x_3) - y_1`
</p>

<p>
    If `P` and `Q` are the same point, then adding them is called "doubling" the point.
    The formula for this is the same, but the slope (lambda) is the curve tangent:

</p><p>
`\lambda = \frac{3x_1^2 + 9}{2y_1}`
</p>
</div> <!-- skinny-block -->

<h5>Efficient Point Multiplication</h5>
<p>
    The point at 100P is the point `P` added to itself 100 times. It can <em>also</em> be thought of as the point being
    multiplied by the number 100. You'll see this referred to as "scalar multiplication", and it's just
    another way to refer to repeated point addition.

</p><p>
    We can get to arbitrarily large multiplication of `P` quickly using a "double-and-add" method:
</p><ul>
    <li>Repeatedly double `P` to get `\{2P, 4P, 8P, 16P, 32P, …\}`</li>
    <li>Add combinations of the above points to get any needed multiple of `P`</li>
</ul>

<figure>
    <div>
    <canvas id="canvas-double-and-add" width="500" height="400"></canvas>
    
    </div>
    <figcaption>Double-and-add method for point <span id="dbl-add-np">nP</span></figcaption>
</figure>


<h2>Key exchange</h2>
<p>
    Now we have enough to start doing cryptographic work. We're going to do a key exchange with
    Curve61, much in the same way that TLS 1.3 does a key exchange with Curve25519.

</p><p>
    Alice and Bob want to start a private conversation. To do this, they're going to agree on a number without
    any eavesdroppers being able to tell what the number is. With an agreed-upon number they can
    derive a key for one of the many fast and secure ciphers (such as AES) and encrypt their conversation.

</p><p>
    The process looks like this:
</p><ul>
    <li>Alice and Bob agree to use Curve61, described in the section above
    </li><li>Alice picks a random number `k_a`
    </li><li>Alice computes the coordinates of `k_(a)P` and sends it to Bob as `A`
    </li><li>Bob picks a random number `k_b`
    </li><li>Bob computes the coordinates of `k_(b)P` and sends it to Alice as `B`
    </li><li>Alice computes the coordinates of `k_(a)B`, which is `k_(a)(k_(b)P)`
    </li><li>Bob computes the coordinates of `k_(b)A`, which is `k_(b)(k_(a)P)`
</li></ul>

<p>Because point addition on Curve61 is associative, both `k_b(k_aP)` and `k_a(k_bP)` are the same
    point: they're just the base point added to itself `k_a \times k_b` times.  Since they're the
    same point, both Alice and Bob have agreed on the same number: the coordinates of `k_ak_bP`.

</p><p>
    Enter numbers for Bob and Alice's private keys below and watch a key exchange occur:

</p>

<figure>
    <div>
    <p>Alice:</p>
    <canvas id="canvas-alice" width="500" height="300" data-visible="always">
    </canvas>
    <p>Bob:</p>
    <canvas id="canvas-bob" width="500" height="300" data-visible="always">
    </canvas>
    </div>
</figure>

<h2>The real curve</h2>

<p>
    We've played around with a toy curve of 72 points, and you've seen what it means to add points or
    perform a key exchange. But how does this compare to real curves used in real cryptography such as
    <a href="https://tls13.xargs.org/">TLS 1.3</a>?

</p><p>
    The most common curve used for key exchange is Curve25519. That curve has a simple equation:
</p><p>
`y^2 = x^3 + 486662x^2 + x`
</p>

<p>
    Where our toy curve used <span>F61</span>, a field with 61 numbers in it,
    Curve25519 uses `\mathbb{F}_(2^255\text{-}19)`. The prime number used for that field,
    `2^255-19`, is a very large (77-digit) number. Other than the size, the field looks the same as the one
    we've been using:
</p><p>
`\mathbb{F}_(2^255\text{-}19) = {0, 1, 2, …, 2^255-20}`
</p>

<p>
    Where our toy curve used a base point that can only be added to itself 73 times before repeating,
    `\mathbb{F}_(2^255\text{-}19)` uses a base point that can be added to itself over
    `2^252` times before repeating.

</p><p>
    When peers use Curve25519 to perform key exchange, they select a random 256-bit number (though 5 of those
    bits are then overridden; see <a href="https://x25519.xargs.org/">my X25519 site</a> for more details). That's
    `2^251` possible point multiplications for an attacker to guess at, which is a very large (76-digit) number.

</p><p>
    We can add and double points on Curve25519 in much the same way that we did on Curve61, though
    the formula changes due to the different curve equation
    (see <a href="https://en.wikipedia.org/wiki/Montgomery_curve#Addition">Wikipedia</a> for details).
    Using point addition we can perform a key exchange in the same way that we did with our toy curve.

</p><p>
    For in-depth information on Curve25519, including the choice of curve equation,
    the choice of prime number used for <span>Fp</span>,
    and the exact details of key exchange I can recommend
    <a href="https://cr.yp.to/ecdh/curve25519-20060209.pdf">the author's paper</a> and also
    <a href="https://martin.kleppmann.com/papers/curve25519.pdf">this technical analysis</a>.
    Most of these details are streamlining of the concepts listed on this page to keep the exchange
    mechanism secure and performant, and should not fundamentally conflict with what's explained here.

</p><p>
    <span>❦</span>
    <br>
    The code for this project can be found
    <a href="https://github.com/syncsynchalt/viz-curves">on GitHub</a>.
    <br>
    I hope you found this page useful or at least interesting!
    <br>
    Let me know at <a href="https://twitter.com/xargsnotbombs">@XargsNotBombs</a>.
</p> <!-- epilogue -->

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[An Interactive Guide to SVG Paths (251 pts)]]></title>
            <link>https://www.nan.fyi/svg-paths</link>
            <guid>36574645</guid>
            <pubDate>Mon, 03 Jul 2023 15:50:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nan.fyi/svg-paths">https://www.nan.fyi/svg-paths</a>, See on <a href="https://news.ycombinator.com/item?id=36574645">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><header><h2><a href="https://www.nan.fyi/">NaN</a></h2></header><div><h2>Understanding SVG Paths</h2><p>If you've ever looked at the SVG code for an icon before, you might have noticed that they're usually made up of a bunch of<!-- --> <code>path</code> <!-- -->elements, each with a cryptic<!-- --> <code>d</code> <!-- -->attribute.</p></div><section><hr><p>If you're anything like me, you might've glossed over this attribute in the past, assuming they're nothing more than the output of your designer's favorite vector graphics editor.</p><p>While, er, that may be true, it's also a <em>bit</em> of an oversimplification.</p></section>
<section><hr><p>You see, understanding this attribute's inner workings ended up being a huge boon to my front-end skills; it allowed me to do things I never thought possible, like making this bendy square animation:</p><svg width="100%" height="100%" viewBox="-1.7500000000000002 -1.7500000000000002 27.625 27.625" data-svg="true" style="view-box:-1.7500000000000002 -1.7500000000000002 27.625 27.625"><g style="opacity:1"><defs><pattern id=":Re6qd9l9:" patternUnits="userSpaceOnUse" width="1" height="1"><line x1="1" y1="0" x2="1" y2="1" stroke-width="0.0625"></line><line x1="0" y1="1" x2="1" y2="1" stroke-width="0.0625"></line></pattern><pattern id=":Re6qd9l9H1:" patternUnits="userSpaceOnUse" width="5" height="5"><rect width="5" height="5" fill="url(#:Re6qd9l9:)"></rect><line x1="5" y1="0" x2="5" y2="5" stroke-width="0.125"></line><line x1="0" y1="5" x2="5" y2="5" stroke-width="0.125"></line></pattern></defs><g><g data-x-axis="true"><text y="-1" x="0" font-size="0.5" text-anchor="middle">0</text><text y="-1" x="5" font-size="0.5" text-anchor="middle">5</text><text y="-1" x="10" font-size="0.5" text-anchor="middle">10</text><text y="-1" x="15" font-size="0.5" text-anchor="middle">15</text><text y="-1" x="20" font-size="0.5" text-anchor="middle">20</text><text y="-1" x="25" font-size="0.5" text-anchor="middle">25</text></g><g data-y-axis="true"><text x="-1" y="0" font-size="0.5" dominant-baseline="middle" text-anchor="end">0</text><text x="-1" y="5" font-size="0.5" dominant-baseline="middle" text-anchor="end">5</text><text x="-1" y="10" font-size="0.5" dominant-baseline="middle" text-anchor="end">10</text><text x="-1" y="15" font-size="0.5" dominant-baseline="middle" text-anchor="end">15</text><text x="-1" y="20" font-size="0.5" dominant-baseline="middle" text-anchor="end">20</text><text x="-1" y="25" font-size="0.5" dominant-baseline="middle" text-anchor="end">25</text></g></g><rect data-svg-grid="true" x="0" y="0" width="25" height="25" stroke-width="0.0625" fill="url(#:Re6qd9l9H1:)"></rect></g><svg width="auto" height="100%" viewBox="-10 0 120 80"><mask id=":Rle6qd9l9:"><rect x="0" y="0" width="100" height="100" fill="black"></rect><path d="
      M 12 19
      Q 12 15 16 15
      Q 42 15 68 15
      q 4 0 4 4
      L 72 51
      q 0 4 -4 4
      Q 42 55 16 55
      q -4 0 -4 -4
      z
    " fill="white"></path></mask><path d="
      M 12 19
      Q 12 15 16 15
      Q 42 15 68 15
      q 4 0 4 4
      L 72 51
      q 0 4 -4 4
      Q 42 55 16 55
      q -4 0 -4 -4
      z
    " stroke-width="0.75"></path><text mask="url('#:Rle6qd9l9:')" x="42" y="35" dominant-baseline="central" text-anchor="middle">0</text></svg></svg><p>This guide is an interactive deep dive into the <code>d</code> attribute, otherwise known as the <strong>path data</strong>. It's the post I wish I had when I first learned about SVG paths! Along the way, we'll learn about the different types of path commands and how to use them to draw various icons.</p><p>Let's get started!</p></section>
<section><hr><h2>A Path is a Series of Commands</h2><p>While the <code>d</code> attribute may look like some magical incantation, it's actually a <strong>series of commands</strong> that tell the browser how the path should be drawn. This is a bit more obvious if we clean up the <code>d</code> attribute a little bit:</p><ol><li><span><span>M</span><span>12.0</span><span>7.2</span></span></li><li><span><span>C</span><span>10.5</span><span>5.6</span><span>8.1</span><span>5.2</span><span>6.3</span><span>6.7</span></span></li><li><span><span>C</span><span>4.5</span><span>8.1</span><span>4.2</span><span>10.6</span><span>5.7</span><span>12.4</span></span></li><li><span><span>L</span><span>12.0</span><span>18.3</span></span></li><li><span><span>L</span><span>18.3</span><span>12.4</span></span></li><li><span><span>C</span><span>19.7</span><span>10.6</span><span>19.5</span><span>8.1</span><span>17.7</span><span>6.7</span></span></li><li><span><span>C</span><span>15.8</span><span>5.2</span><span>13.4</span><span>5.6</span><span>12.0</span><span>7.2</span></span></li><li><span><span>Z</span></span></li></ol><p>To draw the path, the browser executes these commands sequentially, each command drawing a little "subsection" of the path.</p><svg width="auto" height="100%" viewBox="-1.7500000000000002 -1.7500000000000002 27.625 27.625" data-svg="true" style="view-box:-1.7500000000000002 -1.7500000000000002 27.625 27.625"><g style="opacity:1"><defs><pattern id=":Rqaqd9l9:" patternUnits="userSpaceOnUse" width="1" height="1"><line x1="1" y1="0" x2="1" y2="1" stroke-width="0.0625"></line><line x1="0" y1="1" x2="1" y2="1" stroke-width="0.0625"></line></pattern><pattern id=":Rqaqd9l9H1:" patternUnits="userSpaceOnUse" width="5" height="5"><rect width="5" height="5" fill="url(#:Rqaqd9l9:)"></rect><line x1="5" y1="0" x2="5" y2="5" stroke-width="0.125"></line><line x1="0" y1="5" x2="5" y2="5" stroke-width="0.125"></line></pattern></defs><g><g data-x-axis="true"><text y="-1" x="0" font-size="0.5" text-anchor="middle">0</text><text y="-1" x="5" font-size="0.5" text-anchor="middle">5</text><text y="-1" x="10" font-size="0.5" text-anchor="middle">10</text><text y="-1" x="15" font-size="0.5" text-anchor="middle">15</text><text y="-1" x="20" font-size="0.5" text-anchor="middle">20</text><text y="-1" x="25" font-size="0.5" text-anchor="middle">25</text></g><g data-y-axis="true"><text x="-1" y="0" font-size="0.5" dominant-baseline="middle" text-anchor="end">0</text><text x="-1" y="5" font-size="0.5" dominant-baseline="middle" text-anchor="end">5</text><text x="-1" y="10" font-size="0.5" dominant-baseline="middle" text-anchor="end">10</text><text x="-1" y="15" font-size="0.5" dominant-baseline="middle" text-anchor="end">15</text><text x="-1" y="20" font-size="0.5" dominant-baseline="middle" text-anchor="end">20</text><text x="-1" y="25" font-size="0.5" dominant-baseline="middle" text-anchor="end">25</text></g></g><rect data-svg-grid="true" x="0" y="0" width="25" height="25" stroke-width="0.0625" fill="url(#:Rqaqd9l9H1:)"></rect></g><g><path stroke-width="0.3125" d="M 11.995 7.23319 C 10.5455 5.60999 8.12832 5.17335 6.31215 6.65972 C 4.4959 8.14609 4.2403 10.6312 5.66654 12.3892 L 11.995 18.25 L 18.3235 12.3892 C 19.7498 10.6312 19.5253 8.13046 17.6779 6.65972 C 15.8305 5.18899 13.4446 5.60999 11.995 7.23319 Z"></path><g><path stroke-width="0.3125" d="M 0 0 M 11.995 7.23319" pathLength="1" stroke-dashoffset="0px" stroke-dasharray="0px 1px"></path><path stroke-width="0.3125" d="M 11.995 7.23319 C 10.5455 5.60999 8.12832 5.17335 6.31215 6.65972" pathLength="1" stroke-dashoffset="0px" stroke-dasharray="0px 1px"></path><path stroke-width="0.3125" d="M 6.31215 6.65972 C 4.4959 8.14609 4.2403 10.6312 5.66654 12.3892" pathLength="1" stroke-dashoffset="0px" stroke-dasharray="0px 1px"></path><path stroke-width="0.3125" d="M 5.66654 12.3892 L 11.995 18.25" pathLength="1" stroke-dashoffset="0px" stroke-dasharray="0px 1px"></path><path stroke-width="0.3125" d="M 11.995 18.25 L 18.3235 12.3892" pathLength="1" stroke-dashoffset="0px" stroke-dasharray="0px 1px"></path><path stroke-width="0.3125" d="M 18.3235 12.3892 C 19.7498 10.6312 19.5253 8.13046 17.6779 6.65972" pathLength="1" stroke-dashoffset="0px" stroke-dasharray="0px 1px"></path><path stroke-width="0.3125" d="M 17.6779 6.65972 C 15.8305 5.18899 13.4446 5.60999 11.995 7.23319" pathLength="1" stroke-dashoffset="0px" stroke-dasharray="0px 1px"></path><path stroke-width="0.3125" d="M 11.995 7.23319 L 11.995 7.23319" pathLength="1" stroke-dashoffset="0px" stroke-dasharray="0px 1px"></path></g><g><circle r="0.25" stroke-width="0.15" cx="11.995" cy="7.23319"></circle><circle r="0.25" stroke-width="0.15" cx="6.31215" cy="6.65972"></circle><circle r="0.25" stroke-width="0.15" cx="5.66654" cy="12.3892"></circle><circle r="0.25" stroke-width="0.15" cx="11.995" cy="18.25"></circle><circle r="0.25" stroke-width="0.15" cx="18.3235" cy="12.3892"></circle><circle r="0.25" stroke-width="0.15" cx="17.6779" cy="6.65972"></circle><circle r="0.25" stroke-width="0.15" cx="11.995" cy="7.23319"></circle><circle r="0.25" stroke-width="0.15" cx="11.995" cy="7.23319"></circle></g></g></svg><p>All path commands follow the same basic syntax — a single-letter code followed by a series of numbers. The letter code identifies the command type, while the numbers act as the command's parameters.</p><p>In some ways, you can think of the commands as function calls, where the letter code is the function name and the numbers are the function's arguments:</p><pre><code>M(12, 7.2);
</code></pre></section>
<section><hr><h2>Absolute and Relative Commands</h2><p>The command code can either be <strong>uppercase</strong> or <strong>lowercase</strong>. Uppercase commands are absolute, meaning their parameters are relative to the origin point <code>(0, 0)</code>, while lowercase commands are relative, meaning their parameters are relative to the <em>previous</em> command's endpoint.</p><p>Consider the following commands:</p><ol><li><span><span>M</span><span>10.0</span><span>10.0</span></span></li><li><span><span>L</span><span>5.0</span><span>5.0</span></span></li><li><span><span>M</span><span>10.0</span><span>10.0</span></span></li><li><span><span>l</span><span>5.0</span><span>5.0</span></span></li></ol><p>Here, we have two lines that start at the same point, <code>(10, 10)</code>, with the same arguments, <code>5 5</code>.</p><svg width="auto" height="100%" viewBox="2.02 2.02 15.47 15.47" data-svg="true" style="view-box:2.02 2.02 15.47 15.47"><g style="opacity:1"><defs><pattern id=":Rqeqd9l9:" patternUnits="userSpaceOnUse" width="1" height="1"><line x1="1" y1="0" x2="1" y2="1" stroke-width="0.035"></line><line x1="0" y1="1" x2="1" y2="1" stroke-width="0.035"></line></pattern><pattern id=":Rqeqd9l9H1:" patternUnits="userSpaceOnUse" width="5" height="5"><rect width="5" height="5" fill="url(#:Rqeqd9l9:)"></rect><line x1="5" y1="0" x2="5" y2="5" stroke-width="0.07"></line><line x1="0" y1="5" x2="5" y2="5" stroke-width="0.07"></line></pattern></defs><g><g data-x-axis="true"><text y="2.44" x="3" font-size="0.28" text-anchor="middle">3</text><text y="2.44" x="8" font-size="0.28" text-anchor="middle">8</text><text y="2.44" x="13" font-size="0.28" text-anchor="middle">13</text></g><g data-y-axis="true"><text x="2.44" y="3" font-size="0.28" dominant-baseline="middle" text-anchor="end">3</text><text x="2.44" y="8" font-size="0.28" dominant-baseline="middle" text-anchor="end">8</text><text x="2.44" y="13" font-size="0.28" dominant-baseline="middle" text-anchor="end">13</text></g></g><rect data-svg-grid="true" x="3" y="3" width="14" height="14" stroke-width="0.035" fill="url(#:Rqeqd9l9H1:)"></rect></g><g><g><line stroke-width="0.17500000000000002" x1="10" y1="10" x2="5" y2="5"></line><circle r="0.14" stroke-width="0.084" cx="5" cy="5"></circle><g font-size="0.42" text-anchor="middle" dominant-baseline="middle" font-weight="bold"><text stroke-width="0.07" x="9" y="7">L 5 5</text><text x="9" y="7">L 5 5</text></g></g><g><line stroke-width="0.17500000000000002" x1="10" y1="10" x2="15" y2="15"></line><circle r="0.14" stroke-width="0.084" cx="15" cy="15"></circle><g font-size="0.42" text-anchor="middle" dominant-baseline="middle" font-weight="bold"><text stroke-width="0.07" x="11" y="13">l 5 5</text><text x="11" y="13">l 5 5</text></g></g><circle r="0.14" stroke-width="0.084" cx="10" cy="10"></circle><g transform="translate(4.86, 4.257999999999999)"><g><polygon points="0,0 0.14,0.19599999999999998 0.28,0"></polygon><rect x="0" y="0.014" width="0.28" height="0.28" rx="0.07"></rect></g><text x="0.14" y="0.15400000000000003" font-size="0.252" text-anchor="middle" alignment-baseline="middle">(<!-- -->5.0<!-- -->, <!-- -->5.0<!-- -->)</text></g><g transform="translate(14.86, 15.28)"><g><polygon points="0,0.19599999999999998 0.14,0 0.28,0.19599999999999998"></polygon><rect x="0" y="0.18200000000000002" width="0.28" height="0.28" rx="0.07"></rect></g><text x="0.14" y="0.32200000000000006" font-size="0.252" text-anchor="middle" alignment-baseline="middle">(<!-- -->15.0<!-- -->, <!-- -->15.0<!-- -->)</text></g></g></svg><p>Notice how the line made with the uppercase <code>L</code> command ended up at <code>(5, 5)</code> while the line made with the lowercase <code>l</code> command ended up at <code>(15, 15)</code>.</p></section>
<section><hr><p>To summarize:</p><ul>
<li>The <code>d</code> attribute in a <code>&lt;path&gt;</code> element is a series of commands;</li>
<li>Paths are drawn by executing the commands sequentially;</li>
<li>Commands start with a single-letter code followed by one or more numbers;</li>
<li>Uppercase commands are absolute, while lowercase commands are relative.</li>
</ul><p>I think that's enough talk about commands as a whole for now. Let's dive into the different types of commands!</p></section><nav><ul><li><a href="https://www.nan.fyi/svg-paths">overview</a></li><li><a href="https://www.nan.fyi/svg-paths/cursors">cursors</a></li><li><a href="https://www.nan.fyi/svg-paths/lines">lines</a></li><li><a href="https://www.nan.fyi/svg-paths/bezier-curves">bezier curves</a></li><li><a href="https://www.nan.fyi/svg-paths/cubic-curves">cubic curves</a></li><li><a href="https://www.nan.fyi/svg-paths/arcs">arcs</a></li><li><a href="https://www.nan.fyi/svg-paths/challenge">challenge</a></li></ul></nav></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Automate Your Network (133 pts)]]></title>
            <link>https://github.com/automateyournetwork/automate_your_network</link>
            <guid>36573881</guid>
            <pubDate>Mon, 03 Jul 2023 15:01:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/automateyournetwork/automate_your_network">https://github.com/automateyournetwork/automate_your_network</a>, See on <a href="https://news.ycombinator.com/item?id=36573881">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
          <p>      A tag already exists with the provided branch name. Many Git commands accept both tag and branch names, so creating this branch may cause unexpected behavior. Are you sure you want to create this branch?
</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Who is hiring? (July 2023) (372 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=36573871</link>
            <guid>36573871</guid>
            <pubDate>Mon, 03 Jul 2023 15:00:52 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=36573871">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="36573871">
      <td><span></span></td>      <td><center><a id="up_36573871" href="https://news.ycombinator.com/vote?id=36573871&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=36573871">Ask HN: Who is hiring? (July 2023)</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_36573871">175 points</span> by <a href="https://news.ycombinator.com/user?id=whoishiring">whoishiring</a> <span title="2023-07-03T15:00:52"><a href="https://news.ycombinator.com/item?id=36573871">1 hour ago</a></span> <span id="unv_36573871"></span> | <a href="https://news.ycombinator.com/hide?id=36573871&amp;goto=item%3Fid%3D36573871">hide</a> | <a href="https://hn.algolia.com/?query=Ask%20HN%3A%20Who%20is%20hiring%3F%20(July%202023)&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=36573871&amp;auth=27820869a7938cc40b67d8da8daa04aaa254d150">favorite</a> | <a href="https://news.ycombinator.com/item?id=36573871">120&nbsp;comments</a>        </span>
              </td></tr>
    <tr></tr><tr><td colspan="2"></td><td><div><p>Please state the location and include REMOTE, INTERNS and/or VISA
when that sort of candidate is welcome. When remote work is <i>not</i> an option,
include ONSITE.</p><p>Please only post if you personally are part of the hiring company—no
recruiting firms or job boards. One post per company. If it isn't a household name,
explain what your company does.</p><p>Commenters: please don't reply to job posts to complain about
something. It's off topic here.</p><p>Readers: please only email if you are personally interested in the job.</p><p>Searchers: try <a href="https://hnhired.fly.dev/" rel="nofollow noreferrer">https://hnhired.fly.dev</a>, <a href="https://kennytilton.github.io/whoishiring/" rel="nofollow noreferrer">https://kennytilton.github.io/whoishiring/</a>,
<a href="https://hnjobs.emilburzo.com/" rel="nofollow noreferrer">https://hnjobs.emilburzo.com</a>, <a href="https://news.ycombinator.com/item?id=10313519">https://news.ycombinator.com/item?id=10313519</a>.</p><p>Don't miss these other fine threads:</p><p><i>Who wants to be hired?</i> <a href="https://news.ycombinator.com/item?id=36573869">https://news.ycombinator.com/item?id=36573869</a></p><p><i>Freelancer? Seeking freelancer?</i> <a href="https://news.ycombinator.com/item?id=36573870">https://news.ycombinator.com/item?id=36573870</a></p></div></td></tr>        <tr></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table><table>
            <tbody><tr id="36575683"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575683" href="https://news.ycombinator.com/vote?id=36575683&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Core Digital | Hybrid | US-Los Angeles | Full-time | Frontend Engineer<p><a href="https://jobs.lever.co/coredigitalmedia/2b29f047-446f-49f3-8581-f7b3d4a600b4" rel="nofollow noreferrer">https://jobs.lever.co/coredigitalmedia/2b29f047-446f-49f3-85...</a></p><p>Core Digital Media brands empower people to improve their financial lives every day.  We are one of the largest advertisers on the internet and tens of millions of people come to our sites each month. 
We have helped many of them save thousands of dollars off of a variety of recurring expenses such as their mortgage, insurance premiums, credit card fees, etc. Our websites include LowerMyBills.com, itsHome.com, QuickenCompare.com, and Refily.com, and they provide our consumers with valuable content, tools, service providers and solutions as they navigate some of life's biggest financial decisions.</p><p>Core Digital Media is a proud member of the Rocket Companies family [“RKT” on NYSE] and works in close partnership with its sister companies Rocket Mortgage, Rocket Homes, Rocket Loans and Rocket Money.  These companies are all market leaders in their industries and are obsessed with helping their clients achieve the dream of home ownership and financial freedom.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575651"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575651" href="https://news.ycombinator.com/vote?id=36575651&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Superblocks // NYC // Full-Time // Series A<p>-- The Team--</p><p>Ex-Observability/DB experts building a programmable internal tooling platform for developers.</p><p>-- About Superblocks--</p><p>The all-in-one programmable platform for developers to build beautiful, secure, enterprise-grade internal tools fast: build any internal app, automate any workflow and schedule any job. Developers use the Superblocks development environment to bind their datasources and UI components together using drag and drop or code. Many programming languages are already supported, including Javascript, Python and SQL. Superblocks apps, workflows, or jobs are then deployed onto a custom URL with permissions, SSO, audit logging, and other enterprise functionality.</p><p>-- Resources --</p><p><a href="https://docs.superblocks.com/" rel="nofollow noreferrer">https://docs.superblocks.com/</a></p><p><a href="https://superblocks.com/careers" rel="nofollow noreferrer">https://superblocks.com/careers</a></p><p>-- Notes --</p><p>We're looking for senior frontend engineers. React expertise is a + but not required.</p><p>-- Shortcut --</p><p>Reach out to Careers@Superblockshq.com with your resume or LinkedIn mentioning you saw us on HN. Tell us why Superblocks looks interesting!
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575506"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575506" href="https://news.ycombinator.com/vote?id=36575506&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Ramp | Full-Time | Front-End Engineer (All Levels) | Remote Anywhere (NYC offices) | $250k+ TC<p>Ramp is looking for talented front-end folks who live and breathe UX Our front-end stack is React, TypeScript, and a shiny component library.</p><p>Email your resume to nico@ramp.com.</p><p>See the job posting at [senior-frontend-job]</p><p>We're also hiring for other roles, see all openings at [all-jobs]. Particularly interested in Android (Kotlin), iOS (SwiftUI), and Backend (Python) engineers as well.</p><p>===</p><p>Ramp is building the world's first finance automation platform designed to save businesses time and money. Ramp offers 5-in-1 software that consolidates corporate cards, expense management, bill payments, accounting, and reporting into one simple and free solution. We're a young hypergrowth startup building top tier product in the B2B fintech space (3y old, $8.1B valuation, Series C, ~500 employees, ~100 engineers)</p><p>Cool breakdown of our business: [breakdown]</p><p>More recent article on the economy: [july-2022-update]</p><p>[senior-frontend-job]: <a href="https://jobs.ashbyhq.com/ramp/4f9dd90d-f32e-46d5-b0c0-c69272b2f8d8?utm_source=q6xpBD7lnE">https://jobs.ashbyhq.com/ramp/4f9dd90d-f32e-46d5-b0c0-c69272...</a></p><p>[all-jobs]: <a href="https://jobs.ashbyhq.com/ramp?utm_source=Pk8jzEeRLO">https://jobs.ashbyhq.com/ramp?utm_source=Pk8jzEeRLO</a></p><p>[breakdown]: <a href="https://www.notboring.co/p/ramping-up" rel="nofollow noreferrer">https://www.notboring.co/p/ramping-up</a></p><p>[july-2022-update]: <a href="https://ramp.com/blog/ramp-july-2022-update" rel="nofollow noreferrer">https://ramp.com/blog/ramp-july-2022-update</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575487"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575487" href="https://news.ycombinator.com/vote?id=36575487&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Weekend Health | Hybrid (M/W/Th) in San Francisco | Full-time | $160-200k base<p>Weekend Health's mission is to make healthcare more accessible, especially for those with chronic diseases like obesity, diabetes, and heart disease. After launching in January 2022, we grew from 0 to $20m ARR by the end of the year, got acquired by WeightWatchers in April, and are now looking to scale our eng team of 8.</p><p>We're looking for motivated full-stack and mobile engineers who are passionate about using their eng skills to make a positive impact in the world. You'd be building software that allows patients to get insurance to cover medications that would otherwise be prohibitively expensive while working with a tight-knit team of serial entrepreneurs and all-star performers.</p><p>Our stack: TypeScript | React | React Native | Node | AWS</p><p>More details about the roles here: <a href="https://www.weekendhealth.com/careers" rel="nofollow noreferrer">https://www.weekendhealth.com/careers</a></p><p>If you're interested, please reach out to me (and mention HN!) at calvin.young@weekendhealth.com.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575535"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575535" href="https://news.ycombinator.com/vote?id=36575535&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Bernard Health | Software QA Analyst | ONSITE | Nashville, TN | Full-time | <a href="https://jobs.bernieportal.com/afa31732" rel="nofollow noreferrer">https://jobs.bernieportal.com/afa31732</a><p>Company Overview:</p><p>HR is hard. Nobody starts a company because they passionately want to run payroll and handle benefit administration for their employees.</p><p>We provide software to make the “running a business” side of things easier, and in the process we get to help thousands of people daily.</p><p>To make sure that we continue to help these people the best that we can, we’re looking for a QA Analyst to join the team and make sure we’re doing it right.</p><p>Job Overview:</p><p>As a a QA Analyst, you’re in a unique position. Your role is the only manual-automation hybrid in the company, and you interface between the product/development teams and the support teams. You replicate and write up unexpected behaviors within the application, manually verify our weekly releases before and after deployment (on Staging, and Production respectively), and you write automated tests to reduce future manual test cases.</p><p>If you noticed the grammatical error in this section, you’re probably the kind of person we’re looking for — let’s talk.</p><p>Read more details and apply at <a href="https://jobs.bernieportal.com/afa31732" rel="nofollow noreferrer">https://jobs.bernieportal.com/afa31732</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575678"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575678" href="https://news.ycombinator.com/vote?id=36575678&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Sirch.<p>The search engine of the future. Tired of 23938384 results in 0.00003 seconds to sift through each time you query?</p><p>Sirch gives you what you need. No sifting. How?
AI + Democracy</p><p>We have an MVP that folks seem to like so far, and a small team. Most of us are a bit weird. Fully remote. Hiring: AI engineer + Consumer app growth expert. Joining us is very high risk/reward.</p><p>josh@sirch.org
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575467"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575467" href="https://news.ycombinator.com/vote?id=36575467&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Packfleet (<a href="https://packfleet.com/" rel="nofollow noreferrer">https://packfleet.com/</a>) | Senior Engineer (Routing) | Full time, £90-110k + meaningful equity | Hybrid, Onsite | London, UK | VISA<p>Packfleet is a fast growing seed-stage delivery startup based in London, founded by early employees of Monzo. We're out to make fully electric next-day deliveries the new normal, while improving every aspect of the delivery experience using modern tech. We're looking for a Senior engineer with routing or optimization experience, to join our small team and help build our in-house vehicle router in Rust. You would be the first engineer focused exclusively on routing and get to own and develop a core piece of tech in the company.</p><p>Some of the most interesting problems we’re working on at the moment are:</p><p>- Using a 3D distance matrix to generate routes that are time-of-day accurate.</p><p>- Taking into account the charge levels of our 100% electric fleet.</p><p>- Scaling time-windowed deliveries to thousands per day while maintaining efficiency.</p><p>- Incorporating on-demand same-day deliveries and address changes into our routes.</p><p>- Simulating demand and scale so we’re always one step ahead of our growth.</p><p>Apply at <a href="https://apply.workable.com/packfleet/j/4F21C14939/" rel="nofollow noreferrer">https://apply.workable.com/packfleet/j/4F21C14939/</a>, or e-mail robin@packfleet.com.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575526"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575526" href="https://news.ycombinator.com/vote?id=36575526&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Screenly (<a href="https://screenly.io/" rel="nofollow noreferrer">https://screenly.io</a>) | Full Time | Front-end Dev/Dev Rel | Remote<p>Screenly is a popular digital signage platform (industry jargon for display management). Think screens on walls with advertisements or dashboards. We’re the most developer friendly digital signage platform, and you will be in the center of this, joining us working on our new Edge Apps.</p><p>As an Edge App, you will work closely with our graphical design team to translate UI/UX design into code. You will prominently be working on our open source example apps in our on GitHub, but also on some custom work to solve customer specific problems.</p><p><a href="https://apply.workable.com/screenly/j/1002C12C10/" rel="nofollow noreferrer">https://apply.workable.com/screenly/j/1002C12C10/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575546"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575546" href="https://news.ycombinator.com/vote?id=36575546&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Resemble AI | San Francisco Bay Area or Toronto, ON | Full-Time | Full-Stack Engineer, Deep Learning Researcher, Frontend Engineer, Product Designer<p>Resemble AI creates high-quality synthetic voices that capture human emotion. We're a venture-backed high-growth startup that's looking to shake up an entire industry with state of the art AI. Our product changes the way that thousands of brands, media companies, creative agencies, and game studios create speech content. We’re a remote-first team that thrives on flexibility and creativeness. We cover expenses for office space, equipment, and all of the other perks and benefits that make you productive. We also believe that to build an enticing product and solid team is by encouraging innovation is by enabling continuous education. That's why every Friday is a day that you can use to work on anything you want, Resemble-related or not. We're hiring for four roles:</p><p>Full Stack Engineer - Can you break the entire stack? You're the right person for this job. Work on our Rails app, with sprinkles of React, and Python for the deep learning. Everything is dockerized, and we use Kubernetes to deploy.</p><p>Deep Learning Researcher - Come build large ML models for voice synthesis! We already have the SoTA Speech Synthesis models, so this role is all about thinking outside of the box and running huge experiments on tons of compute. Experience in deep speech fields like TTS and ASR is desirable alongside proficiency in Python and DL/ML frameworks like PyTorch, TensorFlow, and Keras.</p><p>Frontend Engineer - We're hiring a Frontend Engineer proficient in React, TypeScript, and Ruby on Rails to shape our user experience. Join our team to develop user-friendly interfaces and collaborate on building exceptional web experiences.</p><p>Product Designer - As a Product Designer, you will lead the end-to-end design process, from concept to implementation, ensuring a seamless and delightful user experience. You will collaborate with cross-functional teams to define product vision, conduct user research, create visually compelling interfaces, and develop interactive prototypes.</p><p>If interested, reach out directly to me: zohaib [at] resemble.ai
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574033"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574033" href="https://news.ycombinator.com/vote?id=36574033&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Quatt.io | Amsterdam, Netherlands | Full-time | Hybrid/ONSITE | <a href="https://quatt.io/" rel="nofollow noreferrer">https://quatt.io</a> | climate tech<p>I'm head of Software at Quatt, a quickly growing startup building hybrid heatpumps to help fix climate change. Heatpumps have a 10x higher return on investment for CO2 saved per Euro invested than electric cars, and we're building the most accessible and smartest heatpump on the market. Our product is live, being installed daily, and I really like the impact we're having.</p><p>I'm looking for full stack app developers (Node/typescript + React Native) and a Cloud Architect (AWS) for my team, as we believe having the best software will allow us to have the best product.</p><p>Now is a great time to join, as the software team is still small but growing quickly
Other vacancies are on our careers page: <a href="https://quatt.recruitee.com/" rel="nofollow noreferrer">https://quatt.recruitee.com</a>.
Email me directly ( hacker news username@quatt.io ) for questions.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36575550"><td></td></tr>
                  <tr id="36573933"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36573933" href="https://news.ycombinator.com/vote?id=36573933&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Apple, Inc. | Austin |  London | Paris | Prague | Santa Clara Valley | Seattle | Full-time | Security Software Engineering, Research, Analysis, Operations<p>We’re perfectionists. Idealists. Inventors. Forever tinkering with products and processes, always on the lookout for better. Whether you work at one of our global offices, offsite, or even at home, a job at Apple will be demanding. But it also rewards bright, original thinking and hard work. And none of us here would have it any other way.</p><p>Where do you see yourself at Apple?</p><p>Security Engineering &amp; Architecture is looking for engineers, researchers, and operations professionals who can help make sense of complex hardware and software systems and contribute to the development of the most secure devices on the planet. We have a few open roles, related to secret storage, core operating system internals, secure infrastructure and endpoints, vulnerability research, and operations/program management. We are looking for individuals that can build scalable distributed services, analyze highly-complex threats, identify vulnerabilities, design pragmatic processes, and evolve operating system security mechanisms across our platforms. Ideal candidates will demonstrate clear communication, consistent follow-through, and the capacity to collaborate globally. These roles are a unique opportunity to be part of the team that architects and delivers groundbreaking security to more than a billion devices.</p><p>See our open roles and send a résumé to sear-recruiting@group.apple.com with “[HN] &lt;role of interest&gt;” in the email subject if interested: <a href="https://jobs.apple.com/en-us/search?search=SEAR2023" rel="nofollow noreferrer">https://jobs.apple.com/en-us/search?search=SEAR2023</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574418"><td></td></tr>
                  <tr id="36575096"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575096" href="https://news.ycombinator.com/vote?id=36575096&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>SpruceID (YC W21) | Full REMOTE | Multiple Roles | Full-Time | spruceid.com<p>Spruce lets users control their data across the web. We are reimagining trusted interactions by creating the world’s best open source software for packaging beliefs digitally, while innovating on global standards in identity.</p><p>We hire programmers who love technology and are committed to intellectual honesty, user privacy, and innovation. Our products are composed from a combination of industry-trusted frameworks, applied cryptography, new interoperable identity standards (W3C, ISO, IETF, and OpenID), and custom backend libraries.</p><p>Select roles:</p><p>Technical Success Manager: Work with external customers and stakeholders, maintaining implementation roadmaps, collaborating on product roadmaps, and documenting user stories, timelines, and implementation strategy at the customer level.</p><p>Software Engineer, SRE: Implement reliable and performant features in Rust that is cross-compiled to servers, mobile devices, and WASM.</p><p>Software Engineer, Android: Build software prototypes and product features from start to finish for Android and iOS, embedding our Rust core.</p><p>See all roles here: <a href="https://jobs.lever.co/sprucesystems/" rel="nofollow noreferrer">https://jobs.lever.co/sprucesystems/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575459"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575459" href="https://news.ycombinator.com/vote?id=36575459&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Loop | loop.com | Product/Design/Engineering | On-site San Francisco, CA, Chicago, IL | H1B OK<p>We build connected finance for logistics. We want to make the billing and payment process as smooth as consumers paying for online goods while unlocking hundreds of billions of working capital for businesses. Loop can help trillions of dollars move more efficiently and improve millions of people’s livelihoods.</p><p>1. Raised $65m from JPM GEP, Founders Fund, 8VC, Susa Ventures, Flexport, Index, and Expa.</p><p>2. 35 paying enterprise customers with multiple-year contracts; 60+ customers in the pipeline.</p><p>3. High-caliber team of engineers from Google, Scale AI, Flexport, Uber, Bolt, Rakuten, Square, Meta, Stanford and Yale.</p><p>4. 9+ years cash runway</p><p>Product Manager, Payment - <a href="https://boards.greenhouse.io/loop/jobs/4826377004" rel="nofollow noreferrer">https://boards.greenhouse.io/loop/jobs/4826377004</a></p><p>Brand Designer - <a href="https://boards.greenhouse.io/loop/jobs/4866545004" rel="nofollow noreferrer">https://boards.greenhouse.io/loop/jobs/4866545004</a></p><p>Product Designer - <a href="https://boards.greenhouse.io/loop/jobs/4126037004" rel="nofollow noreferrer">https://boards.greenhouse.io/loop/jobs/4126037004</a></p><p>Fullstack Engineer San Francisco - <a href="https://boards.greenhouse.io/loop/jobs/4102236004" rel="nofollow noreferrer">https://boards.greenhouse.io/loop/jobs/4102236004</a></p><p>Fullstack Engineer Chicago - <a href="https://boards.greenhouse.io/loop/jobs/4830548004" rel="nofollow noreferrer">https://boards.greenhouse.io/loop/jobs/4830548004</a></p><p>If you do not see your role list here but are excited about what Loop is building, send a note to founders at loop.com.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575408"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575408" href="https://news.ycombinator.com/vote?id=36575408&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>AWS | SoC Driver Developer | Austin, TX or Cupertino, CA | Full-time<p>I'm an engineer in Annapurna Labs, the small company-within-a-company that designs AWS custom silicon.  My team designs and runs the Trainium and Inferentia machine learning (ML) accelerators.  We're looking for an engineer to help maintain the driver stack for new and existing chips.</p><p>This is definitely a system software-oriented role; no ML experience is needed (actually, we're really looking for people who have strong opinions about system software).  But if you're interested in ML, you'll be adjacent to people who have tons of experience with high performance compute, chip design, and ML algorithms.</p><p>Ping me if you're wanting to chat about the team or the role: ghilliar -at- amazon.com.  I'm an embedded systems engineer and I don't bite :)</p><p>And here's the job description link: <a href="https://www.amazon.jobs/en/jobs/2393159" rel="nofollow noreferrer">https://www.amazon.jobs/en/jobs/2393159</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574936"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574936" href="https://news.ycombinator.com/vote?id=36574936&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>OpenRent | London, UK | Full-Time | ONSITE+PART REMOTE | <a href="https://www.openrent.co.uk/" rel="nofollow noreferrer">https://www.openrent.co.uk</a><p>What sucked the last time you rented a house or flat? Come and fix it.</p><p>OpenRent is a force for good in an industry tarnished by rip-off agencies. Enabled by an unrelenting focus on technology, we now let more properties than any agency in the UK. In the last 12m we let over £45 billion worth of property, to over 5 million registered users, without ever charging any admin fees.</p><p>You'll be working on things that vary from machine learning models to predict the right price of a property, to the future of property management, all to help tenants find their dream home, and landlords their ideal tenant.</p><p>We're VC backed, profitable, and have plenty of ambition to maintain our fast growth in this absolutely massive market.</p><p>We have a bunch of roles available at the moment and keen to find great people like you!</p><p>- Senior Web Designer | Equity | 75k-100k+ (based on experience) + Quarterly Bonus</p><p>- Full Stack Engineer (C#) | Equity | £45k-£120k+ (based on experience) + Quarterly Bonus</p><p>- Senior DevOps Engineer | Equity | 75k-100k+ (based on experience) + Quarterly Bonus</p><p>All roles visible here: <a href="https://www.openrent.co.uk/jobs" rel="nofollow noreferrer">https://www.openrent.co.uk/jobs</a></p><p>OpenRent is already impacting millions of tenants and landlords each year, join us and make every tenancy better than the last.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574001"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574001" href="https://news.ycombinator.com/vote?id=36574001&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>AI Research Residency Program (1 year) | Zug/Zurich area | Full time | On site | 100-200k CHF/annum<p>I am launching a new AI research organisation in the Zug/Zurich area. The goal of the organisation is to make a meaningful contribution towards solving AGI.</p><p>I am looking for employees number no. 1 and 2. This will ideally be someone with a history of interesting research and a clear agenda for future research. I am personally interested in LLM's, MuZero (<a href="https://arxiv.org/abs/1911.08265" rel="nofollow noreferrer">https://arxiv.org/abs/1911.08265</a>), Dreamer (<a href="https://arxiv.org/pdf/2301.04104v1.pdf" rel="nofollow noreferrer">https://arxiv.org/pdf/2301.04104v1.pdf</a>) and DreamCoder (<a href="https://arxiv.org/abs/2006.08381" rel="nofollow noreferrer">https://arxiv.org/abs/2006.08381</a>), and think there are some interesting systems to be found by interpolating between these existing areas (however, please still apply even if your research isn't in these areas).</p><p>The project will be financed by my current company which has made extensive use of deep learning for the past 4 years. You will have access to the &gt;100 top-end GPUs owned by this company.</p><p>The job will be structured as a research residency program in the first year, with the hope of transitioning successful candidates into full-time roles.</p><p>In your application, please include a high-level research proposal stating what you would work on.</p><p>To apply, email me at : not_a_cat at fastmail. co[m].
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575323"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575323" href="https://news.ycombinator.com/vote?id=36575323&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Orum | Staff Software Engineer | Remote (US and Canada only) | Full-time | <a href="https://orum.com/" rel="nofollow noreferrer">https://orum.com/</a><p>Orum efficiently connects sales teams to their target prospects, helping them sell to their ideal customers. Using Orum's parallel dialer, sales reps can dial multiple numbers at once, and Orum's speech recognition will automatically recognize and connect representatives with humans that pick up. This leads to consistent conversations, faster training, and more meetings booked.</p><p>Our current technology stack includes NodeJS with Typescript, Ruby, Postgres, Google Cloud Platform, and FreeSWITCH.</p><p>What we would love to see:</p><p>* 8+ years of experience as a software engineer</p><p>* 5+ years of experience as a mentor, tech lead, or leading an engineering team</p><p>* Minimum of 1+ years in an architect, principal, or staff engineer role</p><p>* Proven track record of owning products and features through their lifecycles - from discovery to deployment</p><p>* Strong familiarity with NodeJS, TypeScript, PostgreSQL, and React</p><p>* Experience measuring and tuning the performance of NodeJS applications</p><p>* Familiar with Unix shell scripting</p><p>More details here: <a href="https://www.orum.com/careers" rel="nofollow noreferrer">https://www.orum.com/careers</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575352"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575352" href="https://news.ycombinator.com/vote?id=36575352&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Ordergroove | Engineering Manager | REMOTE | FULL-TIME | <a href="https://www.ordergroove.com/jobs/?gh_jid=6653210002" rel="nofollow noreferrer">https://www.ordergroove.com/jobs/?gh_jid=6653210002</a><p>We are looking for an entrepreneurial Engineer Manager to take over the Frontend platform team at Ordergroove. If you love building great self-service Control Panels or Admin Panels, you will thrive at this role.</p><p>Ordergroove is a fast growing SaaS that enables DTC merchants to provide their products as a subscription. We are used by some of the top brands in the industry such as Dollar Shaving Club, P&amp;G, L'Oreal, KIND, and many more!</p><p>Feel free to apply here: <a href="https://www.ordergroove.com/jobs/?gh_jid=6653210002" rel="nofollow noreferrer">https://www.ordergroove.com/jobs/?gh_jid=6653210002</a></p><p>Or email me directly if you have any questions: luthfur.chowdhury@ordergroove.com
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575337"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575337" href="https://news.ycombinator.com/vote?id=36575337&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>ISRG / Let's Encrypt | General Counsel | Half Time | Fully Remote<p>If you’re an attorney looking for a flexible half-time position with great work/life balance and a mission that matters, this could be the job for you!</p><p>Internet Security Research Group (ISRG) has changed the Internet for nearly everyone using it. You’d be our next staff member (our 24th), joining a highly motivated and future-focused organization. We make the Internet more secure and privacy-respecting. Our largest project, Let’s Encrypt, helps more than 300 million websites protect their visitors. We operate as a 501(c)(3) nonprofit so we can stay focused on what’s best for the people using the Internet. This model lets us take on tough problems and we’ve built up the staff capability to do it.</p><p><a href="https://boards.greenhouse.io/isrg/jobs/4247229006" rel="nofollow noreferrer">https://boards.greenhouse.io/isrg/jobs/4247229006</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574927"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574927" href="https://news.ycombinator.com/vote?id=36574927&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Roboflow (<a href="https://roboflow.com/careers">https://roboflow.com/careers</a>) | Software Engineers, ML Research Engineer, Former Founders | Full-time | SF, NYC, Remote<p>We make tools that enable developers to make the world programmable. Over 250k developers, including those from half the Fortune 100, use our computer vision tools to improve datasets, models, and deployments. For example, Roboflow is Snap's partner for building custom vision models into AR lenses [1].</p><p>We have SF/NYC/distributed roles. Every team member also has an annual travel stipend [2] to spend coworking with others, anywhere.</p><p>[1] <a href="https://twitter.com/SnapAR/status/1671985144524165120/photo/1" rel="nofollow noreferrer">https://twitter.com/SnapAR/status/1671985144524165120/photo/...</a>
[2] <a href="https://blog.roboflow.com/remote-not-distant/">https://blog.roboflow.com/remote-not-distant/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575286"><td></td></tr>
            <tr id="36575332"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575332" href="https://news.ycombinator.com/vote?id=36575332&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Atlas | Senior Software Engineer (Product) | Full-time | SF, Remote<p>At Atlas, our goal is to accelerate financial empowerment. We’re focussed on over 100M Americans who are underserved by the current financial system. By making it easier to access credit and premium card rewards, we believe we can make the system work better for everyone. We see a massive opportunity for impact though better products. We're off to a strong start and have been growing over 100% a month since we launched 10 months ago.</p><p>We are a product and technology obsessed team with past experience at Microsoft, Amazon, Facebook, and Thumbtack. We’re growing quickly as a team and business. Join us and help us build a modern credit card product built around digitized income, asset and liability data.</p><p>Learn more here - <a href="https://www.atlasfin.com/careers/full-stack-software-engineer" rel="nofollow noreferrer">https://www.atlasfin.com/careers/full-stack-software-enginee...</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575372"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575372" href="https://news.ycombinator.com/vote?id=36575372&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Brain Corporation | Multiple Roles | Full Time | Hybrid (Onsite as needed) | San Diego<p>Brain Corp is a team of innovators, surfers and, well,  brainiacs, that love bringing robots to life through pioneering AI software technology. We take great pride in helping our customers build smarter operations around autonomous robots that are safe, intelligent, and easy to use so they can help people in everyday jobs within environments such as retail stores, malls, airports, hospitals, and more.</p><p>We are hiring for multiple roles including a Senior Data Engineer and a Cloud Software Engineer.</p><p>To apply see <a href="https://braincorp.com/company/careers/" rel="nofollow noreferrer">https://braincorp.com/company/careers/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575272"><td></td></tr>
            <tr id="36575400"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575400" href="https://news.ycombinator.com/vote?id=36575400&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Cruise | Senior React Native Engineer | Full Time | San Francisco or US Remote | $166,600 - $245,100 + bonus + equity<p>Cruise's ridehail team is looking for a mobile expert to come in and help build out our iOS and Android app using React Native. Come help build the future of self driving cars.</p><p><a href="https://getcruise.com/careers/jobs/2537876/" rel="nofollow noreferrer">https://getcruise.com/careers/jobs/2537876/</a></p><p>Feel free to reach out at firstname.lastname@getcruise.com I'm one of the software devs on the team
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574549"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574549" href="https://news.ycombinator.com/vote?id=36574549&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Railway | engineering, design, dev rel | Remote | <a href="https://railway.app/careers" rel="nofollow noreferrer">https://railway.app/careers</a><p>Tired of trying to beat kube into shape? Does writing YAML to ship code fill you with utter dread? Dream of a future where deploying software is simple, and you don't need an army of infrastructure engineers to build that perfect janky bash script™ to make life easy?</p><p>We're Railway, and we think infrastructure can be better. So far we've built out a platform loved by hundreds of thousands of users who simply tell us "Give me Postgres", "Deploy this repo", and we make it happen</p><p>Fair warning! The problems are complex: home-rolled hypervisors, cut-above container orchestration, over/under/whateverlay networks, virtio device drivers, edge proxies, IAM that doesn't suck, kitchen sinks - we need to build it and we're looking for likeminded individuals who think this stuff is fun.</p><p>If that sounds like you, please apply at railway.app/careers. We have a number of roles, but are prioritizing the following four roles:</p><p>+Platform Engineer - General</p><p>+Developer Relations</p><p>+Support Engineer</p><p>+Product Designer</p><p>+Solutions Architect</p><p>See you soon, and happy shipping.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36575243"><td></td></tr>
                  <tr id="36575216"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575216" href="https://news.ycombinator.com/vote?id=36575216&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Vannevar Labs | REMOTE-FIRST | FULL-TIME | Offices in DC and NYC<p>Vannevar Labs brings innovative, robust, and scalable software design to the public servants working in defense and national security keeping our country safe. As a team, we exist because we believe in public service, and we think that our democracy and government improve only if we put serious, collective effort into improving them, including the technology our government uses. Our founders have 30 years of combined experience across national security, government sales and CIA, In-Q-Tel, DoD/JSOC, Harvard, and Stanford. We are a profitable Series B company and are looking to scale out the engineering team.</p><p>We're hiring across a number of engineering roles - feel free to apply on our website <a href="https://jobs.lever.co/vannevarlabs-2" rel="nofollow noreferrer">https://jobs.lever.co/vannevarlabs-2</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574064"><td></td></tr>
            <tr id="36575198"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575198" href="https://news.ycombinator.com/vote?id=36575198&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>PostHog | Remote (US/Europe timezones) | Full stack engineer, technical ex-founder, tech lead | <a href="https://posthog.com/">https://posthog.com</a><p>PostHog is the only open-source Product OS, combining product analytics, session recordings, feature flags, cdp and a data warehouse in one.</p><p>We have a culture of written async communication (see our handbook [0]), lots of individual responsibility and an opportunity to make a huge impact. Being fully remote means we're able to create a team that is truly diverse. We're based all over the world, and the team includes former YC founders, CTOs turned developers and recent grads.</p><p>To apply see <a href="https://posthog.com/careers">https://posthog.com/careers</a> or email us careers@posthog.com</p><p>[0] <a href="https://posthog.com/handbook/">https://posthog.com/handbook/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574337"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574337" href="https://news.ycombinator.com/vote?id=36574337&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Stream | Multiple Positions | Amsterdam, NL and Boulder, US | Remote possible | Full Time | Visa Sponsorship<p>Stream's Chat Messaging &amp; Activity Feed APIs are used by over a billion end-users, and are powered by Go, RocksDB, and Raft - with response times typically measured in single-digit milliseconds.
We reached a new industry benchmark for scaling real-time chat as-a-service, with 5 million concurrent connections supported in a single chat channel.
We’re currently one of the fastest growing startups in Europe and Colorado on our Series B round of $38 mln: <a href="https://tcrn.ch/3peCYXl" rel="nofollow noreferrer">https://tcrn.ch/3peCYXl</a></p><p>We’re hiring for the following positions:</p><p>* Backend Software Developer (Python/Django)</p><p>* Backend Software Developer (Go)</p><p>* Android SDK Team Lead (Jetpack Compose)</p><p>* React Native SDK Developer</p><p>As a part of Stream, you'll have a chance to make a huge impact on the product within a team of the strongest engineers all over the world (over 35 countries aboard).
If you are interested in becoming a part of what we do, apply now! <a href="https://getstream.io/team/#jobs" rel="nofollow noreferrer">https://getstream.io/team/#jobs</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575269"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575269" href="https://news.ycombinator.com/vote?id=36575269&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Slim.AI | CTO Innovation Office R&amp;D Engineer | Full-time | Remote or WA State<p>I'm the CTO/founder. I also created SlimToolkit (aka DockerSlim), which recently became a CNCF Sandbox project. If you have a background and passion for container internals, cloud native technology and security this might be an interesting role for you. I'm looking for an engineer (the exact title depends on your background/experience) to join the CTO Innovation Office team to work on advanced research projects and experiments. There'll be AI related experiments too :-)</p><p>If you think it's a good match for you and you want to learn more email me: cto@slim.ai
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575133"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575133" href="https://news.ycombinator.com/vote?id=36575133&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Luma AI (<a href="https://lumalabs.ai/join" rel="nofollow noreferrer">https://lumalabs.ai/join</a>) - ML and Backend Engineering, Bay Area | Full Time | Visa sponsored<p>We are making 3D creation into an art form that allows every artist to become a 3D artist. To this end, we are training large 3D generative models and working on ML graphics and neural rendering. Our research and product team: <a href="https://lumalabs.ai/team" rel="nofollow noreferrer">https://lumalabs.ai/team</a></p><p>ML engineering at Luma is about large-scale data, large model training pipelines, and working on and shipping incredible things to passionate and creative users. We have a modern tech stack, have raised 25m, and our team will help you grow and do rewarding and challenging work!</p><p>To apply → <a href="https://lumalabs.ai/join" rel="nofollow noreferrer">https://lumalabs.ai/join</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575354"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575354" href="https://news.ycombinator.com/vote?id=36575354&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Upwave | Senior Product Engineer | $150k-$175k + equity + benefits | Remote-first (US Timezones) | Full-time | <a href="https://www.upwave.com/careers" rel="nofollow noreferrer">https://www.upwave.com/careers</a><p>About Upwave:</p><p>Upwave is a YC/venture-funded SF-based startup that helps large enterprises plan, measure, and optimize brand advertising campaigns. We offer a comprehensive set of tools that help our Fortune 500 clients understand and improve how they’re perceived in the marketplace, how aware consumers are of the value they provide, and how much consumers trust them to provide the value they promise.
We've been rapidly expanding our list of enterprise customers and deepening our integrations with "household name" partners like Amazon and Clorox. As we grow, we need engineers to help us build even more unique, differentiated, valuable, scalable, and robust analytical SaaS tools and products.</p><p>About the Role:</p><p>Upwave is a startup and we need an experienced generalist “startup engineer” who’s excited about doing the wide variety of technical work that modern SaaS startups need. That includes backend web development (JVM frameworks), frontend SPA development (mostly React), AWS-based cloud engineering, and some data engineering. We are also particularly interested in someone who knows (or is interested in learning) the intricacies of our industry and our business and who is comfortable leading conversations with customers and partners to scope, define, and execute the technical integrations that have become one of our major levers of growth. We're not fixated on years of experience, but this role is unlikely to be right for someone with less than 10.
Our team emphasizes high-quality, high-velocity, sustainable software development in a collaborative and inclusive team environment. We’re a small team that gives our engineers a lot of autonomy and empowerment, and we want people who are excited to step in to learn whatever skills or technologies are needed, to contribute wherever in the R&amp;D process they're needed, and to grow their careers by taking on pivotal responsibilities early in their tenure.</p><p>If you are interested, email me directly: matus.faro@upwave.com or check out the specific role <a href="https://www.upwave.com/job/6815819002" rel="nofollow noreferrer">https://www.upwave.com/job/6815819002</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36575391"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_36575391" href="https://news.ycombinator.com/vote?id=36575391&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><br><div>
                  <p><span>How and why would I feel that I'm helping society/humanity/planet/world anyhow by working for Upware? Who would I really be helping to achieve what exactly?</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="36575256"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575256" href="https://news.ycombinator.com/vote?id=36575256&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Wasmer (<a href="https://wasmer.io/">https://wasmer.io</a>) | Rust Engineer | Full Time | Remote (EU or east-coast timezone)<p>Wasmer is building the Operating System for the Edge.</p><p>We are seeking a skilled Rust Engineer with industrial-strength software engineering skills to help us enable WebAssembly on any infrastructure compiled from any programing language. Bonus points: WebAssembly, libc or unix Kernel-like experience :)</p><p><a href="https://wasmer.io/values-and-culture">https://wasmer.io/values-and-culture</a> is a good place to learn more about our culture.</p><p>If interested, email me (founder): syrus+hn@wasmer.io
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575150"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575150" href="https://news.ycombinator.com/vote?id=36575150&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Sourcetable.com | Full Stack Engineer (React / Python / C#) (Senior/Staff) | Full Time | San Francisco or Mexico City<p>Sourcetable is building a spreadsheet-based data platform to make data accessible to everyone.</p><p>We’re hiring for a staff level full-stack engineer to join the team, working on our React.js / Python codebase (C# is helpful too).</p><p>You do not need a degree to apply, but you must be able to demonstrate that you have worked on hard things and have experience commensurate with the role. It will be helpful if you have previous experience at a startup.</p><p><a href="https://sourcetable.com/about" rel="nofollow noreferrer">https://sourcetable.com/about</a> is a good place to learn more about what we're up to. You will be joining as person no.8 on the team.</p><p>If interested, email me (founder): eoin+hn@sourcetable.com
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574950"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574950" href="https://news.ycombinator.com/vote?id=36574950&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Datadog | Software Engineers | ONSITE (Boston, Lisbon, Madrid, NYC, Paris, Tel Aviv) and REMOTE | Full-time<p>Datadog is a monitoring, tracing, logs system, and more, for your infrastructure and services. We build our own tsdb, event store [1][2], distributed tracing tools, cutting edge visualizations, and more. We love shipping great experiences for customers just like us and are growing fast! We write a lot of Go, Java, Python, Typescript (with React), and a bit of other languages. We run on k8s, and are multi-region and multi-cloud.</p><p>We're looking for people who can build systems at scale as we process trillions of events per day. Let us know if that's you!</p><p><a href="https://dtdg.co/hnwhoshiring" rel="nofollow noreferrer">https://dtdg.co/hnwhoshiring</a></p><p>[1] <a href="https://www.datadoghq.com/blog/engineering/introducing-husky" rel="nofollow noreferrer">https://www.datadoghq.com/blog/engineering/introducing-husky</a></p><p>[2] <a href="https://www.datadoghq.com/blog/engineering/husky-deep-dive/" rel="nofollow noreferrer">https://www.datadoghq.com/blog/engineering/husky-deep-dive/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575012"><td></td></tr>
            <tr id="36574925"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574925" href="https://news.ycombinator.com/vote?id=36574925&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Talk360 | Development Team Lead for Payments &amp; Marketplace - Hybrid (Based in NL or ZA)| Amsterdam, Johannesburg
Are you ready to make a tangible difference in people's lives in Africa? Do you dream of being part of a thrilling and rapidly expanding international scale-up? How about spearheading the introduction of groundbreaking technologies, tools, and features? If your answer is a resounding yes, then Talk360 is the ideal destination for you!<p>We are currently seeking an exceptional Development Team Lead to head our payment and marketplace division, where you will have the opportunity to revolutionize ecommerce and digital payments in Africa.</p><p>Your Challenge: Lead the payment &amp; marketplace development
You will be responsible for driving the implementation of payment solutions that enable African consumers to convert using their preferred payment methods and currencies, addressing a hot topic in the industry and maximizing our market reach.
Actively contribute as a developer on Node.js projects for the Marketplace, utilizing your expertise to architect and implement high-quality code for consumer-facing web applications, collaborating closely with the team to optimize software features.
Provide visionary leadership to your development team, championing agile software methodologies and establishing best practices that prioritize performance, reliability, simplicity, and maintainability.</p><p>Tech Stack: As Team Lead, be an expert in NodeJS and Type script, and be familiar with Express.js, Nest.js, RESTful APIs, React and Vue.js.
More info here: <a href="https://talk360.recruitee.com/o/lead-developer-for-payments-marketplace-hybrid-based-in-nl-or-za" rel="nofollow noreferrer">https://talk360.recruitee.com/o/lead-developer-for-payments-...</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574167"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574167" href="https://news.ycombinator.com/vote?id=36574167&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Atomic Object | Senior Software Developer &amp; Consultant | ONSITE | Full Time | Raleigh, NC<p><a href="https://atomicobject.com/" rel="nofollow noreferrer">https://atomicobject.com/</a></p><p>As a senior software developer in a recently established office, you will have a unique opportunity to help build and shape the development team from the ground up. Your experience and expertise can help establish a strong foundation of technical best practices and contribute to our hiring process for future team members. Additionally, you will have broad influence shaping the technology and technical processes used to ensure the delivery of high-quality software that exceeds clients’ expectations.</p><p>More details and application here - <a href="https://atomicobject.applytojob.com/apply/4GSNOJOkrx/Senior-" rel="nofollow noreferrer">https://atomicobject.applytojob.com/apply/4GSNOJOkrx/Senior-</a>...
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36573965"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36573965" href="https://news.ycombinator.com/vote?id=36573965&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Culture Biosciences | Sr Software Engineer - Hardware Automation | Hybrid ( South San Francisco , CA, USA) | $170,000 - $190,000
Culture’s mission is to make bioprocess development and scale-up as fast and easy as scaling software. Towards this aim, Culture’s offering enables biopharma, biotechnology, and synthetic biology companies to run their bioprocessing R&amp;D in the cloud. Clients design, manage, and analyze bioprocess experiments in Culture’s Console web application. Culture’s offering enables customers to focus on designing and improving their process versus spending time and effort building out their own high-throughput process development laboratory. While customers remotely observe the process and analyze data, the experiments are executed in Culture’s cloud bioreactor facility in South San Francisco. The facility is enabled by Culture’s proprietary robotic 250mL and 5L single-use bioreactor technology and software systems.<p>We’re looking for a software developer to help us create robust automation tools and streamline the biomanufacturing R&amp;D process, specifically focusing on the automation of the bioreactor systems. An ideal candidate has worked on application code, cloud and/or local infrastructure and automation.</p><p>In this position you'll be collaborating with mechanical engineers, embedded systems engineers, and other software engineers, so thriving in a cross-functional environment is a must.</p><p>You'll be responsible for integrating new hardware systems to the Culture's software backend. The ability and interest in designing user interfaces for those systems is also strongly desired.</p><p>Please Apply Here: <a href="https://www.culturebiosciences.com/careers?gh_jid=5615370003">https://www.culturebiosciences.com/careers?gh_jid=5615370003</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574010"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_36574010" href="https://news.ycombinator.com/vote?id=36574010&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>I’m working as a data science as at a biotech company, but I have a chemical engineering degree.<p>I want to highlight how cool bioreactor process optimization is. There is so much complexity and coolness to the problem. For example, scaling up does not involve making all of the parameters bigger because of different scaling relationships.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="36574007"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574007" href="https://news.ycombinator.com/vote?id=36574007&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>CrazyGames | <a href="https://about.crazygames.com/" rel="nofollow noreferrer">https://about.crazygames.com/</a> | REMOTE | Full-time | Product Engineer<p>With recent technologies such as WebGPU and WebAssembly, the browser has become a powerful gaming platform. High-quality 3D graphics and near-native level performance are becoming possible without the need for downloads, apps, or platform-specific development. Our browser games platform is already reaching more than 25 million people per month. We are self-funded, profitable, remote-first, and fast-growing. We are currently looking for a Product Engineer to build our product together with a small elite engineering team and a world-class designer:</p><p>* <a href="https://crazygames.recruitee.com/o/remote-product-engineer" rel="nofollow noreferrer">https://crazygames.recruitee.com/o/remote-product-engineer</a></p><p>More information here: <a href="https://about.crazygames.com/" rel="nofollow noreferrer">https://about.crazygames.com/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574870"><td></td></tr>
                  <tr id="36574212"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574212" href="https://news.ycombinator.com/vote?id=36574212&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Zattoo | Berlin | Full Time | ONSITE / HYBRID | Principal QA Engineer - Video Technology<p>Zattoo: Back in 2005, we pioneered Europe’s first TV streaming service. Today, we’re the world’s first certified climate neutral TV streaming provider. 3 million users across three countries. Over 230 colleagues of 47 nationalities.</p><p>// Principal QA Engineer - Video Technology <a href="https://grnh.se/e978a822teu" rel="nofollow noreferrer">https://grnh.se/e978a822teu</a></p><p>Video Technology at Zattoo: Our video teams develop the software which drives our carrier-grade streaming platform, covering the full processing chain from content ingest, transcoding, storage and stream delivery as well as putting the streams into action with our own playback SDKs for many platforms. Additionally we operate our inhouse SSAI solution based on the streaming stack mentioned before.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575024"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575024" href="https://news.ycombinator.com/vote?id=36575024&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Assembled | Software Engineer, Senior Software Engineer, Engineering Manager, UX Developer | Full Time | SF, NYC<p>We're transforming customer support for the most modern companies in the world. Our customers include Stripe, Etsy, Zoom, and Asana among others. We solve deep technical and algorithmic problems (how do you forecast support demand, how do you schedule thousands of agents within shift constraints, etc.) while priding ourselves on our user experience.</p><p>If you're interested in working in a dynamic, fast paced environment with lots of ownership, you'd be a great fit!</p><p>We target 90th percentile compensation across all roles against companies of similar size/funding.</p><p><a href="https://www.assembled.com/careers-at-assembled" rel="nofollow noreferrer">https://www.assembled.com/careers-at-assembled</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574903"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574903" href="https://news.ycombinator.com/vote?id=36574903&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Fictive Reality | Founding Engineers in AI and Game Dev | REMOTE or ONSITE (Sweden)<p>We're startup building a platform using conversational AI to enable practice, recruiting, coaching and tutoring of employees, students, and individuals. Use cases such as sales, customer support, patient care and more. We have also been given a grant to help those that struggle to use and understand digital government services.</p><p>We are looking for experienced engineers to form the core of the tech team and evolve our beta product. Be prepared to solve whatever needs solving, but the focus is LLMs, ML, optimize audio streaming, latency and optimizing Unity apps across web and other platforms.</p><p>Stack: Generative AI, ML, mixed reality, Unity, WebGL, iOS, Android, WebRTC, Python, React.</p><p>Culture: Honesty, teamwork, and freedom to work and live the way you want.</p><p><a href="https://thehub.io/startups/fictive-reality" rel="nofollow noreferrer">https://thehub.io/startups/fictive-reality</a> or dev@fictivereality.com
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575108"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575108" href="https://news.ycombinator.com/vote?id=36575108&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Arcol | CAD Software Developer | Remote / NYC / San Jose
At Arcol, we are building "Figma for BIM" -- a web-first collaborative design and documentation tool for the AEC industry.<p>We are building a fast, scalable geometry kernel using modern browser technologies like web workers and WASM.</p><p>We've raised VC from an amazing group of supporters, people like Dylan Field (CEO of Figma) and Tooey Courtemanche (CEO of Procore). We have a waitlist of over 16,000 people.</p><p>We are hiring CAD experts, graphics experts, and web performance gurus. We love software developers who live and breathe in the world of architecture and building design.</p><p>Send mail to paul@arcol.io to apply.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574602"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574602" href="https://news.ycombinator.com/vote?id=36574602&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Nooks (<a href="https://nooks.ai/" rel="nofollow noreferrer">https://nooks.ai</a>) | Software Engineers (full-stack &amp; backend/ML infra) | Full-time | SF or Remote<p>Hi, I’m one of the founders of Nooks — we’re trying to re-invent how sales teams work with real-time collaboration and AI.</p><p>Nooks is: - A virtual office: you can work from anywhere in the world, but still work with your team and get feedback and coaching like you’re sitting side-by-side. - and an AI co-pilot. We learn how your team works, identify “winning” strategies behaviors, then share them with the whole team during and after calls!</p><p>We’re working on fun engineering challenges including complex distributed systems, low-latency algorithms &amp; infrastructure, and modeling sales calls with large language models. You'll also have the chance to make a huge impact on our customers (sales reps who spend 80% of their work day on Nooks.)</p><p>Right now we’re a small team (18 ppl) growing super quickly - doubling revenue every quarter, and recently hit $1.4MM ARR!</p><p>Looking for experienced engineers who love tackling difficult product questions and working closely with customers. Excitement about language models, few-shot learning and other recent AI advances is also a plus :)</p><p>I’d love to chat: reach me at nikhil [at] nooks.in or apply at the link below: <a href="https://nooks.breezy.hr/p/bbc06c1a1bb4-software-engineer" rel="nofollow noreferrer">https://nooks.breezy.hr/p/bbc06c1a1bb4-software-engineer</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574610"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574610" href="https://news.ycombinator.com/vote?id=36574610&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><br><div>
                  <p><span>Bold Penguin | Remote (US)* | Full Time | www.boldpenguin.com
Bold Penguin products help insurance agencies successfully quote and bind small business insurance policies with the click of button! We are growing fast and continuing to expand our teams. Take it as you need it PTO, Slack/Zoom/Mac, and you can use OSS tools that you like using. Remote-first!<p>If you don’t meet all of the qualifications please don’t worry. Apply anyway! If you’re a current SWE that doesn’t mean we wouldn’t consider you for a senior position. We don’t bite ;)</p><p>Some current open roles:</p><pre><code>  Senior Software Engineer (Ruby on Rails) ~&gt; https://www.thegravityapp.com/shared/job?clientId=8a7883d0676d10a10167856a16554ede&amp;id=8a7887ac85cc28b80185cf9ff28b2de3&amp;u=1685555509&amp;v=9&amp;token=eyJ1aWQiOjQzNjY3LCJwcm92aWRlciI6ImJvdW5jZSIsInR5cGUiOiJlbWFpbCJ9.mL_wfqEbWYg666jl7RuE-KvV1E0

  Site Reliability Engineer ~&gt; https://www.thegravityapp.com/shared/job?clientId=8a7883d0676d10a10167856a16554ede&amp;id=8a78839e85eb5036018603a447ed2adc&amp;u=1688125450&amp;v=9&amp;token=eyJ1aWQiOjQzNjY3LCJwcm92aWRlciI6ImJvdW5jZSIsInR5cGUiOiJlbWFpbCJ9.fhh3fOI2fZ4__nJn6kD460p6RaE

  Technical Analyst ~&gt; https://www.thegravityapp.com/shared/job?clientId=8a7883d0676d10a10167856a16554ede&amp;id=8a7887a1876de7420187801e961325d7&amp;u=1685022697&amp;v=9&amp;token=eyJ1aWQiOjQzNjY3LCJwcm92aWRlciI6ImJvdW5jZSIsInR5cGUiOiJlbWFpbCJ9.HJmSzti3yEY1z74qolEpdTkUV1E
  

</code></pre>
* Today you have to live within 150 miles of a few cities as we are working on creating "hubs" but it's still remote!</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="36574542"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574542" href="https://news.ycombinator.com/vote?id=36574542&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>NextEra Mobility | Senior Software Engineers | REMOTE US* or San Francisco or Florida | Full Time<p>NextEra Energy Resources is the largest deployer of wind and solar power generation in the United States. Our mission is to decarbonize the U.S. economy. Our Mobility team pursues that mission for road transportation as it electrifies, in part by writing software that will play a key role in abating millions of tonnes of CO2e[1]—and reduce the terrible health impacts of diesel emissions[2]. We are hiring senior software engineers able to work on the Python data engineering stack:</p><p>* <a href="https://jobs.nexteraenergy.com/job-invite/73949/" rel="nofollow noreferrer">https://jobs.nexteraenergy.com/job-invite/73949/</a></p><p>Engineering roles are remote-first* with a great San Francisco office. We gather twice a year, once in SF and once in Florida. Join us! You can reach me directly at samuel.penrose at nexteraenergy.com</p><p>[1] <a href="https://electrek.co/2023/04/27/daimler-just-announced-a-650m-us-wide-ev-charging-network-for-trucks/" rel="nofollow noreferrer">https://electrek.co/2023/04/27/daimler-just-announced-a-650m...</a></p><p>[2] <a href="https://pubs.acs.org/doi/10.1021/acs.estlett.0c00424" rel="nofollow noreferrer">https://pubs.acs.org/doi/10.1021/acs.estlett.0c00424</a></p><p>* We can employ residents of most U.S. states
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574639"><td></td></tr>
                <tr id="36574854"><td></td></tr>
                <tr id="36574873"><td></td></tr>
                              <tr id="36574680"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574680" href="https://news.ycombinator.com/vote?id=36574680&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>ML6 | Machine Learning Engineer, Data Engineer | Python, TensorFlow, Google Cloud Platform | Full-time | Amsterdam, Berlin, Ghent (EU)<p>We are a Machine Learning consulting company that builds end-to-end Machine Learning solutions. By applying the latest AI research, we keep our clients at the forefront of innovation.</p><p>If you are interested check out: <a href="https://www.ml6.eu/resources/resource-library" rel="nofollow noreferrer">https://www.ml6.eu/resources/resource-library</a> and <a href="https://www.ml6.eu/client-cases" rel="nofollow noreferrer">https://www.ml6.eu/client-cases</a></p><p>You will mostly work with TensorFlow and Python to solve hard Machine Learning tasks and help to put these into production. As a Premier Google Cloud Service Partner, ML6 has a very strong relationship with Google, providing you options to collaborate and alpha test a lot of their latest ML tools.</p><p>We are looking for:</p><p>• Machine Learning Engineer</p><p>• Data Engineer</p><p>• Project Manager</p><p>• Business Development Consultant</p><p>• Cloud Partner (AWS, Azure)</p><p>• Junior Accountant</p><p>• Administration Officer</p><p>Apply at: <a href="https://ml6.eu/join-us" rel="nofollow noreferrer">https://ml6.eu/join-us</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36573875"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36573875" href="https://news.ycombinator.com/vote?id=36573875&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Snout <a href="https://www.snoutplans.com/" rel="nofollow noreferrer">https://www.snoutplans.com/</a> | Senior Software Engineer | Remote US | Full Time | $120k + equity and benefits<p>Join us at Snout on our mission to ensure no one ever has to make a health decision for their pet based on the cash in their back account. Snout plans pay for 100% of routine veterinary care, unlimited visits, and additional member benefits - think pet insurance, that you will actually use every year.</p><p>You will be working on our core wellness product, launched late-2022. Work includes the addition of new wellness plan features and capabilities, enhancement of user experience, testing and operation of the wellness platform, and special projects that arise from time to time. We frequently work cross-functionally and you can expect to write code and perform technical operations for our marketing, sales, and support efforts, as well.</p><p>Our tech stack includes Node.js, React, PostgreSQL, AWS, and Tailwind. We use both JavaScript and TypeScript heavily.</p><p>We’re a small startup team consisting of fewer than ten people. Successful team members are comfortable participating in spirited and detailed debates to establish product and technical plans, and then taking initiative and ownership to deliver on those plans quickly and effectively. Our team is collaborative. You can expect to meet with the team on a daily basis, pair regularly, and participate in slack discussions throughout the day. We keep pacific work hours and expect the team to be available during 9a-5p at a minimum. If you’re looking for a team where you can carve out your area of responsibility, work with experienced partners who have your back, grow your role alongside the growth of the company, and take a product to the moon, then we should talk.</p><p>To apply, please email kyle@snoutplans.com.</p><p>Our typical process is a one hour technical interview followed by a casual 30 minute meeting with our whole team.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574902"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574902" href="https://news.ycombinator.com/vote?id=36574902&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Foodee (<a href="https://www.food.ee/" rel="nofollow noreferrer">https://www.food.ee/</a>) | CTO | Western Canada or US (Office in Vancouver)<p>Are you passionate about food technology? We’re Foodee, a team of food experts on a mission to connect local restaurants to businesses through our meal planning platform. We help corporations spread the power of good food by curating menus from top local restaurants and delivering them to your office.</p><p>We are seeking a Chief Technology Officer, whose role will be to oversee Foodee's technical strategy, execution and team. We are seeking candidates based in Western US or Western Canada (BC).</p><p>Apply at: <a href="https://foodee.bamboohr.com/careers/541" rel="nofollow noreferrer">https://foodee.bamboohr.com/careers/541</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574621"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574621" href="https://news.ycombinator.com/vote?id=36574621&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Shortwave | Sr. Software Engineer | ONSITE in San Francisco | $140k-$215k base + generous equity
I previously cofounded Firebase (YC S11) and sold it to Google, and most of our team is ex-Google / ex-Firebase.<p>Shortwave (<a href="https://www.shortwave.com/" rel="nofollow noreferrer">https://www.shortwave.com/</a>) is building an email client with a built-in AI executive assistant. We're bringing the power of LLMs &amp; a modern messaging UX to 4.5 billion email users.</p><p>Imagine an AI virtual assistant with perfect knowledge of every message, attachment, receipt, newsletter, etc you've ever sent or received. Your AI assistant can answer questions about your email ("which candidates in my inbox have experience with Kotlin?") and act on your behalf ("Draft responses asking them to schedule a time with me").</p><p>We want the best and are willing to pay for it. We like generalists with strong CS fundamentals, app development experience, scrappiness, speed, and grit.</p><p>Come help us build the future. Email if interested: joinourteam@shortwave.com
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574526"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574526" href="https://news.ycombinator.com/vote?id=36574526&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Solar Monkey | Platform Engineer | REMOTE or On-site | The Netherlands - The Hague | Full-time | <a href="https://jobs.solarmonkey.nl/?utm_campaign=2023-07-PlatformEngineer&amp;utm_source=HackerNews&amp;utm_medium=blogpost" rel="nofollow noreferrer">https://jobs.solarmonkey.nl?utm_campaign=2023-07-PlatformEng...</a><p>At Solar Monkey (<a href="https://solarmonkey.io/" rel="nofollow noreferrer">https://solarmonkey.io/</a>), our goal is to enable solar to be the world’s leading power supply, and we accomplish that with software that makes solar power systems more affordable, secure and reliable. We do so in a very open and warm environment, where everybody can have his or her say on company values, structure, and policies.</p><p>We are well funded and expanding, and currently looking for a full time Platform Engineer who is keen to help our growing development teams manage their infrastructure. We run a moderate cloud stack on the Google Cloud Platform and use Hashicorp’s tools for deployment. In our case a Consul + Vault cluster, and Nomad to schedule (container) jobs.</p><p>Most of the work is in improving the experience of other developers, and making it easier for them to take ownership over their domain, including the operations side. So if you enjoy sharing knowledge and building a development environment that everyone enjoys, you are the Platform Engineer we are looking for.</p><p>Interested? Here’s the job link: <a href="https://jobs.solarmonkey.nl/o/platform-engineer?utm_campaign=2023-07-PlatformEngineer&amp;utm_source=HackerNews&amp;utm_medium=blogpost" rel="nofollow noreferrer">https://jobs.solarmonkey.nl/o/platform-engineer?utm_campaign...</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574391"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574391" href="https://news.ycombinator.com/vote?id=36574391&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Orbit | Full Stack Engineer | REMOTE, or London (UK), or Hamburg (Germany)<p>Orbit is the operating system for logistics &amp; delivery – modular, cloud-native, made for pros. 
We strive to make the world of logistics a better place by providing the world’s leading logistics operating system and helping companies to achieve more with less: Do more. With Orbit.</p><p>Read more &amp; apply --&gt; <a href="https://bit.ly/3JCNVh2" rel="nofollow noreferrer">https://bit.ly/3JCNVh2</a></p><p><i>We care about design.</i> 
We fundamentally believe that great design comes with clarity of thought – and vice-versa. Design isn’t shallow: We can differentiate ourselves with design – by thinking outside the box and pushing boundaries.</p><p><i>Software. Done right.</i> 
We perceive software as art &amp; craftsmanship. And as craftsmen we care about <i>how</i> things are made. Our code is robust, high-quality and built to last.</p><p><i>Platform-centric thinking.</i>
Orbit is an inter-connected operating system – this is why we always think holistic. Ask not what your feature can do for the platform  — ask what the platform can do for your feature.</p><p><i>Easy-(and-enjoyable)-to-use &amp; Self-serviceable to the core.</i>
Orbit is enterprise-grade technology and used in complex organisations. Although Orbit is ‘Made for Pros’, ease of use, enjoyable UX and self-service capabilities are non-negotiable.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574347"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574347" href="https://news.ycombinator.com/vote?id=36574347&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>PlantingSpace | Full-time | Remote (EU time zone) with quarterly gatherings | <a href="https://planting.space/" rel="nofollow noreferrer">https://planting.space</a><p>We build a system that can accurately represent knowledge and handle uncertainty, to help us discover insights and solve problems based on composition and explainable reasoning. We envision applications to automate analysis and speed up research in domains such as Finance, Strategy Consulting, Material Sciences, Engineering, and more.</p><p>&gt;&gt;&gt; Senior Business Development Engineer
As we are moving into our product development phase, you will be essential in helping us define strategically optimal use cases and develop the most value-adding partnerships to set our initial product direction. You bring at least 10 years of experience in developing business opportunities for AI/ML-driven SaaS products.</p><p>A bit more about us:
To pursue our goal, we leverage emerging scientific fields such as category theory, probabilistic programming, deep learning, and cognitive science. Our team is distributed across many countries, but we get together every quarter in nice locations around Europe to solve problems, connect, and learn.</p><p>Read about our company and more job openings on our website: <a href="https://planting.space/joinus/" rel="nofollow noreferrer">https://planting.space/joinus/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574507"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_36574507" href="https://news.ycombinator.com/vote?id=36574507&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Just as some random feedback, I skimmed the site and had no idea what you do, I read it a second time with full attention and I'm still a little confused though I think I have an idea.<p>Some examples / showcases would be nice IMHO unless you wanted it to be sort of vague on purpose.</p><p>The idea I left with is some sort of chatGPT for more global and inter-disciplined issues?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574880"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_36574880" href="https://news.ycombinator.com/vote?id=36574880&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Thanks for the feedback. It is somewhat vague on purpose, but we are starting to work on a new version of the site which should be more concrete.<p>To build on your initial idea - our system can use language models under the hood, but more importantly, beyond that, it can also:
1. Perform computations and reason in exact or statistically correct manner.
2. Provide sources of information that it used to answer questions.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574630"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_36574630" href="https://news.ycombinator.com/vote?id=36574630&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><br><div>
                  <p><span>From the website, this looks like a boutique data solutions consulting company, I agree that it's hard to understand what this is supposed to be</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="36574947"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_36574947" href="https://news.ycombinator.com/vote?id=36574947&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><br><div>
                  <p><span>We are building a product, working on the initial release now, we do not plan to do consulting if that is what you meant. Users should, amongst other things, be able to obtain data solutions by interacting with our system.
Thanks for sharing your impressions.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="36574756"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_36574756" href="https://news.ycombinator.com/vote?id=36574756&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><br><div>
                  <p><span>What does 'boutique' mean?
I interpret it as sth 'special/extraordinary' but in what way?</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="36574824"><td></td></tr>
                        <tr id="36574914"><td></td></tr>
                  <tr id="36574587"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_36574587" href="https://news.ycombinator.com/vote?id=36574587&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>&gt; we hire predominantly in European time zones<p>Because of European 5-figure salaries? Does it make sense to apply from North America? (6-figure)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574784"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_36574784" href="https://news.ycombinator.com/vote?id=36574784&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><br><div>
                  <p><span>Our team is mostly located in European time zone and it makes collaboration easier, but we do consider candidates from the east coast.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="36574442"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574442" href="https://news.ycombinator.com/vote?id=36574442&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>1/2<p>Lloyds Banking Group | Bristol, London, Leeds, Edinburgh, Manchester, Halifax, United Kingdom | Full-time UK (currently UK-hybrid - 2 days in office) | <a href="https://bit.ly/LBGCareersSite" rel="nofollow noreferrer">https://bit.ly/LBGCareersSite</a></p><p>At Lloyds Banking Group we’re driven by a clear purpose: to help Britain prosper. As part of our diverse team you’ll impact the lives of more than 26 million customers through our brands, including Lloyds Bank, Halifax, Bank of Scotland, and Scottish Widows. With your help we'll continue to innovate and adapt to meet the ongoing digital needs of our customers. Join us and you can make a real difference.</p><p>Some of our current openings are listed below. For other opportunities visit our careers site: <a href="https://bit.ly/LBGTechTransformation" rel="nofollow noreferrer">https://bit.ly/LBGTechTransformation</a></p><p>All have similar benefits: | Performance Bonus | 4% Cash Sum | Private Medical Insurance | Pension (we contribute up to 15%) | Share Plans | 30 days holiday (plus bank holidays)</p><p>## Please be aware that these role are live at the time of posting, however they will expire within a week for two ##
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574455"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_36574455" href="https://news.ycombinator.com/vote?id=36574455&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>2/2<p>Lloyds Banking Group | Bristol, London, Leeds, Edinburgh, Manchester, Halifax, United Kingdom | Full-time UK (currently UK-hybrid - 2 days in the office) | <a href="https://bit.ly/LBGCareersSite" rel="nofollow noreferrer">https://bit.ly/LBGCareersSite</a></p><p>## Please be aware that these role are live at the time of posting, however they will expire within a week for two ##</p><p>Test Engineer - Leeds  - £61,911 to £68,790 - <a href="https://bit.ly/3CYvJdV" rel="nofollow noreferrer">https://bit.ly/3CYvJdV</a></p><p>FileNet Software Engineer - UK Wide  - £41,715 to £60,255 - <a href="https://bit.ly/3NXARoT" rel="nofollow noreferrer">https://bit.ly/3NXARoT</a></p><p>Associate Director - Credit Analytics – Business and SME Banking - London  - £81,252 to £90,280 - <a href="https://bit.ly/3PDceyX" rel="nofollow noreferrer">https://bit.ly/3PDceyX</a></p><p>Director - Credit Analytics – Business and SME Banking - London  - £112,209 to £132,000 - <a href="https://bit.ly/447kP1b" rel="nofollow noreferrer">https://bit.ly/447kP1b</a></p><p>Technical Product Owner - London  - £98,685 to £116,100 - <a href="https://bit.ly/46rP9FD" rel="nofollow noreferrer">https://bit.ly/46rP9FD</a></p><p>Senior Data Science Analyst (Audit) - London, Edinburgh, Bristol  - £56,322 to £62,580 - <a href="https://bit.ly/3PENvKI" rel="nofollow noreferrer">https://bit.ly/3PENvKI</a></p><p>Associate Product Manager, Data Management Solutions - Bristol  - £38,232 to £42,480 - <a href="https://bit.ly/3CUuOey" rel="nofollow noreferrer">https://bit.ly/3CUuOey</a></p><p>Automation and Dev Ops Engineer - Bristol  - £66,861 to £74,290 - <a href="https://bit.ly/44lC1jC" rel="nofollow noreferrer">https://bit.ly/44lC1jC</a></p><p>Automated Test Engineer - Edinburgh, Halifax  - £35,656 to £44,570 - <a href="https://bit.ly/41RxrIJ" rel="nofollow noreferrer">https://bit.ly/41RxrIJ</a></p><p>Engineering Manager - Manchester  - £70,784 to £88,480 - <a href="https://bit.ly/3PGQT7P" rel="nofollow noreferrer">https://bit.ly/3PGQT7P</a></p><p>PEGA Software Engineer - Manchester, Bristol, Halifax, Leeds  - £61,911 to £89,427 - <a href="https://bit.ly/448CiXj" rel="nofollow noreferrer">https://bit.ly/448CiXj</a></p><p>Cloud Software Engineer (GCP) - Manchester, London  - £52,912 to £85,982 - <a href="https://bit.ly/46xrTWE" rel="nofollow noreferrer">https://bit.ly/46xrTWE</a></p><p>Firewall Engineer - London, Halifax  - £52,560 to £58,400 - <a href="https://bit.ly/3PBoiAV" rel="nofollow noreferrer">https://bit.ly/3PBoiAV</a></p><p>Firewall Shift Engineer - London, Halifax  - £52,560 to £58,400 - <a href="https://bit.ly/446elje" rel="nofollow noreferrer">https://bit.ly/446elje</a></p><p>Engineering Lead - Edinburgh  - £73,616 to £92,020 - <a href="https://bit.ly/3NtFi9m" rel="nofollow noreferrer">https://bit.ly/3NtFi9m</a></p><p>Technical Manager, Model Risk and Validation - UK Wide  - £76,428 to £84,920 - <a href="https://bit.ly/3retpgp" rel="nofollow noreferrer">https://bit.ly/3retpgp</a></p><p>Quality Engineer - Stockport  - £45,054 to £50,060 - <a href="https://bit.ly/3pCN09h" rel="nofollow noreferrer">https://bit.ly/3pCN09h</a></p><p>Associate Director - London  - £69,448 to £86,810 - <a href="https://bit.ly/3pBtBFK" rel="nofollow noreferrer">https://bit.ly/3pBtBFK</a></p><p>Data Engineer - Halifax  - £57,078 to £63,420 - <a href="https://bit.ly/3NEQSyR" rel="nofollow noreferrer">https://bit.ly/3NEQSyR</a></p><p>Service &amp; Release Engineer - Stockport  - £41,292 to £45,880 - <a href="https://bit.ly/3PAopg6" rel="nofollow noreferrer">https://bit.ly/3PAopg6</a></p><p>Software Engineer - Stockport  - £45,054 to £67,581 - <a href="https://bit.ly/3PJKusz" rel="nofollow noreferrer">https://bit.ly/3PJKusz</a></p><p>DevOps Engineer - Edinburgh, Halifax, Leeds  - £66,861 to £100,292 - <a href="https://bit.ly/3NyTjTr" rel="nofollow noreferrer">https://bit.ly/3NyTjTr</a></p><p>Digital Workplace Messaging &amp; Surveillance Engineer - Manchester, Leeds  - £66,861 to £74,290 - <a href="https://bit.ly/3pqe6AF" rel="nofollow noreferrer">https://bit.ly/3pqe6AF</a></p><p>Data Product Implementation Manager - Bristol  - £78,634 to £92,510 - <a href="https://bit.ly/46BhUjh" rel="nofollow noreferrer">https://bit.ly/46BhUjh</a></p><p>Software Engineer - Chester  - £61,911 to £89,427 - <a href="https://bit.ly/44avo3C" rel="nofollow noreferrer">https://bit.ly/44avo3C</a></p><p>DevOps Senior Engineer (Cisco ACI) - UK Wide  - £77,301 to £115,952 - <a href="https://bit.ly/3NJ6Wj8" rel="nofollow noreferrer">https://bit.ly/3NJ6Wj8</a></p><p>Solution Architect - Edinburgh  - £66,861 to £74,290 - <a href="https://bit.ly/436CxAJ" rel="nofollow noreferrer">https://bit.ly/436CxAJ</a></p><p>Solution Architect - Leeds  - £85,255 to £100,300 - <a href="https://bit.ly/44xSJwd" rel="nofollow noreferrer">https://bit.ly/44xSJwd</a></p><p>Back End Engineer - Chester  - £61,911 to £89,427 - <a href="https://bit.ly/3NJ6WQa" rel="nofollow noreferrer">https://bit.ly/3NJ6WQa</a></p><p>BPS Event attendees only - Edinburgh  - £66,861 to £100,292 - <a href="https://bit.ly/3NElwIo" rel="nofollow noreferrer">https://bit.ly/3NElwIo</a></p><p>GCP DevOps Engineer - Bristol - £61,911 to £89,427 - <a href="https://bit.ly/447dFdx" rel="nofollow noreferrer">https://bit.ly/447dFdx</a></p><p>DBA Technical Specialist - Gloucester - £66,861 to £74,290 - <a href="https://bit.ly/44tvpPX" rel="nofollow noreferrer">https://bit.ly/44tvpPX</a></p><p>Operations Specialist-1 - Gloucester - £56,421 to £62,690 - <a href="https://bit.ly/437Ui2M" rel="nofollow noreferrer">https://bit.ly/437Ui2M</a></p><p>Data &amp; AI Ethics Product Owner - London  - £85,208 to £106,510 - <a href="https://bit.ly/3ne5hJ9" rel="nofollow noreferrer">https://bit.ly/3ne5hJ9</a></p><p>Service Engineer - Edinburgh  - £57,078 to £63,420 - <a href="https://bit.ly/3JHfyFu" rel="nofollow noreferrer">https://bit.ly/3JHfyFu</a></p><p>Service Engineer - Halifax  - £57,078 to £63,420 - <a href="https://bit.ly/434vdWo" rel="nofollow noreferrer">https://bit.ly/434vdWo</a></p><p>Lead Network Security Engineer - UK Wide  - £85,255 to £100,300 - <a href="https://bit.ly/3reohJ5" rel="nofollow noreferrer">https://bit.ly/3reohJ5</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="36574660"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574660" href="https://news.ycombinator.com/vote?id=36574660&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Spill (<a href="https://www.spill.chat/" rel="nofollow noreferrer">https://www.spill.chat/</a>) | Senior Frontend Engineer, Senior Backend Engineer &amp; Lead Product Designer | London, UK (HQ) | ONSITE 1-2 days | Full-time<p>Our aim is to make counselling and therapy free at the point of use for as many people in the word as possible. We do this by selling a mental health support product to businesses.</p><p>We're hiring a Senior Software Engineers and a Lead Product Designer into our small product and engineering team of 10.</p><p>For the SWE roles you'll be expected to help deliver thoughtful features for our customers and share responsibility for architectural decisions.</p><p>For the Lead Product Designer role you'll be our first full-time product designer hire and will be expected to bring a new level of thoughtfulness to the Spill product.</p><p>email calvin[at]spill[dot]chat for a more thorough job specs
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574232"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574232" href="https://news.ycombinator.com/vote?id=36574232&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>StatsBomb | Data Platform Engineer | REMOTE, or Bath (UK), or Cairo (Egypt)<p>StatsBomb is a sports analytics startup, covering football (both the soccer and American varieties) and soon basketball. We sell data products as well as analysis tools to sports, media and gambling organisations, with a tech pipeline that includes computer vision, machine learning, stream processing, and web-based dataviz. We count many of the biggest names in football as customers, and your work will have a direct impact on our ability to deliver insights to those customers, driving success on the field.</p><p>We're hiring a Data Platform Engineer to help manage our data warehouse and other key components of our data infrastructure:</p><p>- Apply at: <a href="https://statsbomb.bamboohr.com/careers/172" rel="nofollow noreferrer">https://statsbomb.bamboohr.com/careers/172</a></p><p>If you'd like to find out more about football analytics:</p><p>- Play with our open data: <a href="https://github.com/statsbomb/open-data">https://github.com/statsbomb/open-data</a></p><p>- Read our articles: <a href="https://statsbomb.com/articles/" rel="nofollow noreferrer">https://statsbomb.com/articles/</a></p><p>- Browse our conference videos: <a href="https://www.youtube.com/channel/UCmZ2ArreL9muPvH49Gaw0Bw">https://www.youtube.com/channel/UCmZ2ArreL9muPvH49Gaw0Bw</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574571"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574571" href="https://news.ycombinator.com/vote?id=36574571&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Connectly | Machine Learning/LLM engineer(SF) | Frontend engineer(Remote)<p>We Connectly (<a href="https://connectly.ai/" rel="nofollow noreferrer">https://connectly.ai</a>) are a fast-growing startup that is building LLM-driven conversational commerce for messaging platforms such as WhatsApp and SMS. Our goal is to enable users to discover and purchase products seamlessly on WhatsApp and other messaging apps.</p><p>Founders: Head of FB Messenger + CTO of Strava</p><p>Team - 40 people &amp; growing.</p><p>Product - Bring the full shopping experience to WhatsApp in 5 mins</p><p>Funding - have raised a large amount from top investors in Silicon Valley</p><p>Revenue - multiple million dollars &amp; growing fast</p><p>Stack - typescript, react, python &amp; golang,</p><p>Culture - we pay people generously and treat each other with respect.</p><p>Join us if you are self-driven, move fast and would like to make something great together! Email me at careers@connectly.ai or apply at <a href="https://jobs.lever.co/connectly" rel="nofollow noreferrer">https://jobs.lever.co/connectly</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574352"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574352" href="https://news.ycombinator.com/vote?id=36574352&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Hack Club Bank | Engineering Manager | Shelburne, Vermont | $80k-$110k<p>We're Hack Club Bank, an initiative of Hack Club, a nonprofit platform dedicated to streamlining the process for groups seeking nonprofit status. Through our platform, we've greatly reduced the time, cost, and complexity that typically goes with gaining and maintaining nonprofit status.</p><p>Hack Club Bank started as a solution for our own clubs and hackathons needing nonprofit status, and now we serve as a nonprofit fiscal sponsor for over 1,100 organizations, making us the largest fiscal sponsor in America serving young people.</p><p>Our specific Hack Club Bank team consists of three operations staff, two full-time engineers, a group of contractors, and Hack Club teenagers who use and contribute to the platform. We're looking to add an Engineering Manager to this team.</p><p>We offer a salary range of $80k to $110k for this position. As part of our commitment to transparency, you can view our finances at <a href="https://bank.hackclub.com/hq/" rel="nofollow noreferrer">https://bank.hackclub.com/hq/</a></p><p>Our future plans include open-sourcing the platform, adding grant-making tools, and building further tools to increase financial transparency for all.</p><p>We are located in Shelburne, Vermont, and are part of the broader Hack Club team of 20. To apply, please visit <a href="https://hiring.hackclub.com/27568" rel="nofollow noreferrer">https://hiring.hackclub.com/27568</a></p><p>You can learn more about our platform at <a href="https://hackclub.com/bank/" rel="nofollow noreferrer">https://hackclub.com/bank/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574935"><td></td></tr>
            <tr id="36574395"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574395" href="https://news.ycombinator.com/vote?id=36574395&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Bytedance (Security Engineering)  | bytedance.com | Singapore, Sydney, Australia | Onsite | Full Time | Visa sponsorship available<p>As part of our team, you'll engage in unique and high-impact projects, tackling security challenges on a scale not typically seen in the tech world. You will design and implement new approaches for system security, apply trusted computing, and track cutting-edge security technologies.</p><p>We're hiring for:
Site Reliability Engineers - Singapore: <a href="https://job.toutiao.com/s/i2chcXA" rel="nofollow noreferrer">https://job.toutiao.com/s/i2chcXA</a></p><p>Site Reliability Lead - Sydney, Australia: <a href="https://job.toutiao.com/s/i2vTUqD" rel="nofollow noreferrer">https://job.toutiao.com/s/i2vTUqD</a></p><p>Site Reliability Engineer - Sydney, Australia: <a href="https://job.toutiao.com/s/i2c8kSV" rel="nofollow noreferrer">https://job.toutiao.com/s/i2c8kSV</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574832"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574832" href="https://news.ycombinator.com/vote?id=36574832&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Opvia (YC S20) | Sales Development Representatives| REMOTE (US based)| opvia.io<p>Opvia wants to be the software layer for regulated manufacturing companies. Regulated industries (Pharma, biotech, F&amp;B) need better software to go to market faster, get insights from their data, and comply with the regulations. Opvia makes it easier to build exactly the procedures and workflows companies need with its no-code platform.</p><p>Drop me a line (alberto@opvia.io) if you need further info or are looking for a different position
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574085"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574085" href="https://news.ycombinator.com/vote?id=36574085&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Advicerco. | Staff Software Engineer | REMOTE (US) | Full Time/Contract | $100k-$200k<p>Advicerco is enabling people to maximize the efficiency of every dollar by building a cash-flow based management platform for their finances.  It takes into account their goals and assets and uses them, the the help of an advisor, to assemble an automated flow based system to manage their funds.  By changing the way that people view and use their money, we are both changing the perception of money, altering people’s relationship with it, and reducing the everyday stress of dealing with income and budgets.</p><p>We are currently looking for full stack engineers with a penchant for product, who are willing to both help find the best solution for how we interact with our finances, as well as building out a system for handling those finances in the background.  We believe strongly in testing, as money is not a thing to be trifled with.</p><p>We're looking for:</p><p>* You an experienced developer, with at least 5 years of experience, knowledge of javascript/typescript or a fierce desire to learn.
* Experience building event based, and highly asynchronous solutions
* A lack of fear in solving hard problems, and writing tests to prove it.</p><p>Our stack is typescript with react, built in AWS.  While you don't have to know everything, you should be familiar with lambda and how it works in different contexts.  We also use postgres as our database.</p><p>If you're interested, come check out a better description and apply here:
<a href="https://advicerco.breezy.hr/p/37c0a0dd3aa2-staff-software-engineer" rel="nofollow noreferrer">https://advicerco.breezy.hr/p/37c0a0dd3aa2-staff-software-en...</a></p><p>Alternatively, send an email to jobs@advicerco.com
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574117"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574117" href="https://news.ycombinator.com/vote?id=36574117&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Oso | <a href="https://www.osohq.com/" rel="nofollow noreferrer">https://www.osohq.com</a><p>Oso is building authorization for the next billion developers. We are building the product in Rust, which we think is both a good design choice for our use case and a fun choice for the team. I recently joined the team and absolutely love the culture and I'm inspired by the talented engineers I get to work with :) Current open roles:</p><p>- Engineering Manager (NYC) 
- Software Engineer (NYC or Remote)
- Developer Experience Engineer (NYC or Remote) 
- Head of Engineering (NYC)</p><p>All open roles - <a href="https://www.osohq.com/company/jobs" rel="nofollow noreferrer">https://www.osohq.com/company/jobs</a>
A bit more about Authorization: <a href="https://www.osohq.com/academy" rel="nofollow noreferrer">https://www.osohq.com/academy</a>
Our Slack community: <a href="http://join-slack.osohq.com/" rel="nofollow noreferrer">http://join-slack.osohq.com/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574432"><td></td></tr>
                <tr id="36574891"><td></td></tr>
                                  <tr id="36573964"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36573964" href="https://news.ycombinator.com/vote?id=36573964&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Pioneer | Founding Senior Software Engineer | Climate Tech and LLMs | Seed stage | SF Bay Area, DC, NY, remote, <i>USA only</i> | $140K+, equity<p><i>Apply here:</i> <a href="https://usepioneer.com/careers" rel="nofollow noreferrer">https://usepioneer.com/careers</a></p><p>About: Pioneer takes the pain out of the government application process by using LLMs to gradually reduce the effort required to identify, qualify, apply, and comply with government awards. We are passionate about climate impact and creating a supportive growth environment based on the fundamentals of Radical Candor. We also have a proven business model and rapidly growing revenue.</p><p>Culture: Ask us about our culture: toms, laps, feedback, and decision journals! Our newest team member said <i>“Every interaction is “kind”, coming from a good place of respecting each other.”</i></p><p>You: Owner mindset, collaborative, have curiosity for technology like LLMs, start sentences with <i>“What if…“</i>, enjoy building full stack, and enjoy the 0-to-1 phase.</p><p>Stack: We TypeScript, React, Next.JS, and other modern tools.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574743"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_36574743" href="https://news.ycombinator.com/vote?id=36574743&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><br><div>
                  <p><span>I tried to email founder@usepioneer, founder@pioneerclimate and join@pioneerclimate, but got bounced emails from Gmail saying addresses don't exist.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="36574853"><td></td></tr>
                        <tr id="36574188"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574188" href="https://news.ycombinator.com/vote?id=36574188&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Ministudio AI | {ML, Computer Graphics, iOS} engineer | Remote / NYC | Full-Time<p>Ministudio is a funded AI startup based in NYC build creative tools for children to unleash their imagination with the power of AI. We combine traditional computer graphics / vision methods with modern advances in generative models, e.g., LLMs and Stable Diffusion. You will be joining a stellar team of experienced founders working on cutting edge technology to make creative tools accessible to children. As an early stage employee you will have the autonomy and responsibility to drive our next phase of growth.</p><p>We are looking for folks proficient in computer graphics/vision, game development, applied machine learning, AI research, or iOS development.</p><p>Please get in touch with CV and/or links to projects you've worked on: akash@ministudio.ai
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575046"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575046" href="https://news.ycombinator.com/vote?id=36575046&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>trivago | Multiple Positions | Düsseldorf, Germany | Onsite (3 days per week) | Full Time | Visa Sponsorship<p>trivago is a well-know travel tech company enabling users to find the right accommodation. We save our users time and empower them to get more out of travel by comparing accommodation from leading booking sites. At trivago we have talents from over 80 different countries and work on some of the most interesting technical challenges within the accommodation meta-search space.</p><p>We are looking for:</p><p>• Data Analyst – Product Intelligence</p><p>• Site Reliability Engineer</p><p>• Senior Quantitative UX Researcher</p><p>• Senior Data Analyst – UX Research</p><p>• Backend Lead – Ranking &amp; Search</p><p>Apply at: <a href="https://careers.trivago.com/join/open-positions/" rel="nofollow noreferrer">https://careers.trivago.com/join/open-positions/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36575112"><td></td></tr>
                <tr id="36575188"><td></td></tr>
                        <tr id="36573906"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36573906" href="https://news.ycombinator.com/vote?id=36573906&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Shortform | REMOTE | Full-stack Engineer | Full-time / Part-time | $100-200k<p><a href="https://www.shortform.com/" rel="nofollow noreferrer">https://www.shortform.com/</a></p><p>Do you feel overwhelmed by the amount of stuff to learn? Do you have hundreds of books and articles in your to-read list, but wish you could extract the main ideas faster?</p><p>The goal of Shortform is to make the world's best ideas more accessible. We started by creating the world's best book guides, with in-depth chapter-by-chapter summaries, original insights building on the book, and distillation of ideas into actionables. They're like superpowered book summaries.</p><p>Our next goal is to index every idea on Earth and make sense of it. Specifically, we want to summarize and contextualize every meaningful idea published each day, in every form of media (books, articles, podcasts, videos, news, research papers).</p><p>Our first step was to build a Chrome extension that summarizes any page in your browser (<a href="https://extension.shortform.com/" rel="nofollow noreferrer">https://extension.shortform.com/</a>). Next, we're building content products to comprehend the world's information - for example, an idea explorer lets you see how a specific idea has been expressed throughout human history; a news summarizer shows the entire spectrum of opinions on a topic to help avoid groupthink. If ideas like these interest you, please apply.</p><p>--------</p><p>Company status: We launched 4 years ago. Shortform was funded by the founder (who has built multiple bootstrapped profitable companies in the past) and has taken on no outside investment. Our financials allow us to be profitable, but currently we're reinvesting in growth. Engineering team consists of 8 full-stack engineers.</p><p>Technology: Vue.js on frontend, Flask / Python on backend, with heavy R&amp;D in AI / LLM / GPT. 
(Keywords for searchers with tech flexibility: Angular, React, Django | BERT, LLaMA, Natural Language Processing / NLP, Large Language Models, ML)</p><p>About the role: Ideally you're fullstack on the web, and comfortable on both front-end and back-end. Position is remote (current team is worldwide). Fulltime / parttime roles available. We're able to pay competitive market salaries (i.e. not decreased by equity).</p><p>Email jobs+engineerhn@shortform.com to get more details about the company, what we're building, and the application process. In your email, please discuss your experience for our stack, and also your favorite non-fiction book (to help us screen spam emails).
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574248"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_36574248" href="https://news.ycombinator.com/vote?id=36574248&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><br><div>
                  <p><span>What sort of part time roles do you have? What are your requirements for part time, like hours per week and availability?</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="36574437"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_36574437" href="https://news.ycombinator.com/vote?id=36574437&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Time - We typically ask 20 hours per week as a minimum. Below this we've found that not enough gets done for the relationship to be worthwhile for either party.<p>Availability - we try to be as async as possible. Right now the only live meeting is a daily standup at a time that supports very different time zones. Otherwise, we keep trying to cut live meetings down to the bone.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                        <tr id="36574325"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574325" href="https://news.ycombinator.com/vote?id=36574325&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>MorphMarket.com | Senior Django Backend or Django Full-Stack Developer | Remote | Full-time | Contract | <a href="https://www.morphmarket.com/" rel="nofollow noreferrer">https://www.morphmarket.com</a><p>I'm the founder of MorphMarket.com. We are an online marketplace that connects breeders and keepers of lizards, geckos, snakes, frogs, spiders and other captive-bred pets. Launched in 2015, we are the largest reptile-related website in the world with about 5,000 active sellers. Our users passionately love the least loved animals.</p><p>We are seeking to add another experienced developer to our remote team. This position requires expertise in Python/Django, and it is even better if the applicant is a Full Stack developer with React expertise.</p><p>Our reptile site is implemented in Python, of course. We use a Django/Postgres/Redis backend and frontend development is in React/Typescript.  Dev-ops mostly involve AWS, Heroku, CloudFlare, and NewRelic. As a dev on our team, you could think of yourself as a Python handler. :)~</p><p>You can see some of our recent work in this demo: <a href="https://www.youtube.com/watch?v=nz05fICRnNI">https://www.youtube.com/watch?v=nz05fICRnNI</a></p><p>Key skills: Django, Django Rest Framework, Python, SQL. Good knowledge of: browser caching, performance profiling, web performance fundamentals, system-wide debugging, unix.  Nice to have:  React, TypeScript, SCSS, React Native, AWS, webpack. Pragmatic: ability to balance quality and speed.</p><p>There are about 10 people on our product team. We collaborate with Github and Slack. Our business has done well even through the ups and downs of the economy. We are committed to a positive culture for the dev team.</p><p>This is a full-time, long-term engagement. Work-hours are expected to overlap a few hours a day with the US time zone. We have multiple team members in Europe and they shift their work-day a few hours forward to make it work.</p><p>Please email a CV jobs@morphmarket.com and fill out our short application form here <a href="https://forms.gle/Fr5Buqt6BkWvTiNfA" rel="nofollow noreferrer">https://forms.gle/Fr5Buqt6BkWvTiNfA</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="36574365"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_36574365" href="https://news.ycombinator.com/vote?id=36574365&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><br><div>
                  <p><span>I don't yet feel comfortable calling myself an "experienced" Djangoist, and even less an experienced React writer, but it's heartening to open up WIH and see my exact chosen stack as the first result.</span></p></div></td></tr>
        </tbody></table></td></tr>
                            <tr id="36573963"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36573963" href="https://news.ycombinator.com/vote?id=36573963&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Infinia ML | <a href="https://infiniaml.com/" rel="nofollow noreferrer">https://infiniaml.com</a> | Durham, NC, USA | REMOTE US | Full-time | Senior infrastructure and full-stack engineers<p>Infinia ML is a machine learning startup, originally spun out of a research lab at Duke University in 2017. We’re building a SaaS intelligent document processing platform that automates custom data-intensive workflows for our clients.</p><p>We’re hiring for:</p><p>* Lead Infrastructure Engineer</p><p>* Senior Infrastructure Engineer</p><p>* Senior Full-stack Engineer</p><p>Tech stack: Python (Django / FastAPI / Celery), Vue.js, Tailwind, a dash of Go, Postgres, Redis, RabbitMQ, K8s, and AWS.</p><p>Apply at: <a href="https://infiniaml.com/about/careers/" rel="nofollow noreferrer">https://infiniaml.com/about/careers/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574041"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574041" href="https://news.ycombinator.com/vote?id=36574041&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Countfire | Senior or Mid-level Fullstack Developer | Remote (but must based in UK) | www.countfire.com<p>Countfire makes software for the construction industry. Our software is well loved because we try to design solutions that are a magnitude more efficient than existing tools.</p><p>We use all sorts of tech, but mostly MobX, React, Typescript, Python, Hasura and Postgres. Looking for people with a good understanding of React.</p><p>Previously based in London, now seeking remote devs across the UK.</p><p>More info here <a href="https://www.countfire.com/careers/" rel="nofollow noreferrer">https://www.countfire.com/careers/</a></p><p>Feel free to contact me directly aidan@countfire.com</p><p>Note, applicants must be resident in the UK. No recruiters.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574112"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574112" href="https://news.ycombinator.com/vote?id=36574112&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>PivotCX | Indianapolis, IN USA | Senior Developer - Python, Go, Vue.js | Full-time | $100-$130K<p>PivotCX is communications hub, that plugs in to ATS, HRIS, CRMs and enables automated and person to person communication over SMS, chat, voice, and video. We're looking for a senior developer who can help us build our app and development team. We are pre-series A, and</p><p>We're hiring: Senior Developers and Front End Developers</p><p>Apply here: <a href="https://api.pivotcx.io/c/dHd6" rel="nofollow noreferrer">https://api.pivotcx.io/c/dHd6</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36573899"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36573899" href="https://news.ycombinator.com/vote?id=36573899&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>lowRISC <a href="https://lowrisc.org/" rel="nofollow noreferrer">https://lowrisc.org</a> | Non-profit | Cambridge, UK | Zurich, Switzerland | Design Verification Engineers | Infrastructure Engineer | HYBRID | Full time<p>lowRISC's mission is to bring open source silicon to the hardware world and see it shipping in volume in commercial applications. We want to see open source silicon occupy a similar position to open source software (e.g. look at Linux, it's the default choice in many applications, we'd like open source silicon to be used for similar foundational technologies in the hardware world).</p><p>Our major project focus is OpenTitan: <a href="https://github.com/lowRISC/opentitan">https://github.com/lowRISC/opentitan</a> it’s a silicon root of trust being built and funded by a collaboration of major companies, such as Google, Western Digital, Seagate, Winbond and Rivos amongst others. lowRISC stewards the project as well as performing a significant proportion of the engineering work.</p><p>We’ve just announced the RTL freeze for the first OpenTitan tapeout, a discrete chip, named Earl Grey: <a href="https://lowrisc.org/blog/2023/06/opentitans-rtl-freeze-leveraging-transparency-to-create-trustworthy-computing/" rel="nofollow noreferrer">https://lowrisc.org/blog/2023/06/opentitans-rtl-freeze-lever...</a></p><p>We’re looking for verification and infrastructure engineers to join us. We work in System Verilog and use UVM, though plan to expand our use of formal verification. We’re also keen to explore new innovative ways to verify designs.</p><p>A key responsibility for lowRISC is maintaining the CI and regression infrastructure for OpenTitan. This is a complex system running many different tools across different machines (both cloud and on-site) and involves FPGAs and custom hardware. We use ansible and terraform to manage it all. We’re seeking an infrastructure engineer to maintain and scale the system as well as architect and build new facets of it.</p><p>lowRISC is headquartered in Cambridge, UK and we have an office in Zürich, Switzerland. We utilize a hybrid working model.</p><p>We offer competitive salaries (see job ads for ranges) and a generous pension (12.5% employer contribution in the UK), you can find our individual job postings here: <a href="https://lowrisc.applytojob.com/apply/" rel="nofollow noreferrer">https://lowrisc.applytojob.com/apply/</a></p><p>Feel free to email me at gac@lowrisc.org if you’ve got any questions.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574116"><td></td></tr>
            <tr id="36574478"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574478" href="https://news.ycombinator.com/vote?id=36574478&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Powertools Technologies | Junior Engineer | Lisbon, Portugal | Full-time | ONSITE<p>Looking for a junior engineer for work on software related to Electronic Design Automation and/or Software Development. Candidate should at least have (or graduate shortly) a 3 year university degree in engineering. Most suitably Electronic/Computer Engineering or Informatics. Software Developers are more than welcome to apply.</p><p>Site: <a href="https://www.powertools-tech.com/" rel="nofollow noreferrer">https://www.powertools-tech.com</a> . Growing a small experienced team with international industrial and academic track, willing to train new hire in fairly uncommon skill set. Candidate should be capable of quality detail work, and have good communication abilities, to provide support to international design teams in fabless semiconductor companies.</p><p>Email your interest and CV to hr@powertools-tech.com, please.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575221"><td></td></tr>
            <tr id="36573982"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36573982" href="https://news.ycombinator.com/vote?id=36573982&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>iPify | Legal Tech | Remote Europe or UK | Full Time<p>Do you want to build the leading platform for the intellectual property industry? We want you to join us, a team of seasoned industry professionals growing an ambitious project in a niche market.</p><p>Bring your enthusiasm and expertise to help us build the B2B collaborative ecosystem supporting patent and trademark legal specialists with their business network management, legal workflows and financial flows.</p><p>Job description: <a href="https://ipify.notion.site/Senior-Python-Developer-37de517efa9d4ec793f5a2b4f4d753da" rel="nofollow noreferrer">https://ipify.notion.site/Senior-Python-Developer-37de517efa...</a></p><p>Company website: <a href="https://www.ipify.app/" rel="nofollow noreferrer">https://www.ipify.app/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574487"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574487" href="https://news.ycombinator.com/vote?id=36574487&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>acreom | DevRel (remote) or Prague (Czechia)<p><a href="https://acreom.com/" rel="nofollow noreferrer">https://acreom.com</a> is a markdown knowledge base with tasks for developers. We're building a delightful and integrated interface developers love using alongside their code editors to organise their work.</p><p>reach out to me directly /martin at acreom dot com/ for more info.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574267"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574267" href="https://news.ycombinator.com/vote?id=36574267&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Witt Software LLC | <a href="https://www.weatherthetrip.com/" rel="nofollow noreferrer">https://www.weatherthetrip.com</a><p>Seeking someone to extend their daily rigor in marketing and business development for a software-as-a-service. Remote only.</p><p>equity stake for you up to 20%
annual compensation is negotiable but is dependent on performance of the saas</p><p>@jasonmarks__ on twitter
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575303"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575303" href="https://news.ycombinator.com/vote?id=36575303&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><br><div>
                  <p><span>Tesla | Various Roles | Palo Alto | ONSITE | <a href="https://www.tesla.com/careers" rel="nofollow noreferrer">https://www.tesla.com/careers</a> Tesla is hiring for software positions across a variety of disciplines. If you're interested in helping us transition to sustainable energy production/storage/consumption, we'd love to hear from you! Please apply online at <a href="https://www.tesla.com/careers" rel="nofollow noreferrer">https://www.tesla.com/careers</a> and send us a email highlighting some exceptional things you've done in the past so we can pull your resume from the stack.
You can reach us at vehiclesoftwarerecruiting at tesla. Make sure to reference the url for the job(s) you've applied to!<p><a href="https://www.tesla.com/careers/search/job/software-validation-engineer-ethernet-communication-architecture-177415(test" rel="nofollow noreferrer">https://www.tesla.com/careers/search/job/software-validation...</a> validation, test infrastructure, SIL, HIL, integration, Python) Location: Palo Alto, CA</p><p><a href="https://www.tesla.com/careers/search/job/firmware-engineer-embedded-software-engineer-body-controls-164776" rel="nofollow noreferrer">https://www.tesla.com/careers/search/job/firmware-engineer-e...</a> (robotics, embedded, C) Location: Palo Alto, CA</p><p><a href="https://www.tesla.com/careers/search/job/firmware-validation-engineer-embedded-software-low-voltage-power-distribution-153049" rel="nofollow noreferrer">https://www.tesla.com/careers/search/job/firmware-validation...</a> (hardware, validation, python, C) Location: Palo Alto, CA</p><p><a href="https://www.tesla.com/careers/search/job/firmware-engineer-embedded-software-engineer-thermal-hvac-166402" rel="nofollow noreferrer">https://www.tesla.com/careers/search/job/firmware-engineer-e...</a> (sensors, actuators, embedded, C) Location: Palo Alto, CA</p><p><a href="https://www.tesla.com/careers/search/job/software-qa-engineer-chassis-systems-168868" rel="nofollow noreferrer">https://www.tesla.com/careers/search/job/software-qa-enginee...</a> (python, c, HIL/SIL, mechatronics, brakes, suspension) Location: Palo Alto, CA</p><p><a href="https://www.tesla.com/careers/search/job/software-validation-engineer-hardware-in-the-loop-crash-safety-104529" rel="nofollow noreferrer">https://www.tesla.com/careers/search/job/software-validation...</a>  (HIL, validation, firmware, c, python) Location: Palo Alto, CA</p><p><a href="https://www.tesla.com/careers/search/job/thermal-systems-integration-engineer-all-levels-120369" rel="nofollow noreferrer">https://www.tesla.com/careers/search/job/thermal-systems-int...</a> (firmware, integration, thermal, python) Location: Palo Alto, CA</p><p><a href="https://www.tesla.com/careers/search/job/software-integration-engineer-tesla-electronic-park-brake-168862" rel="nofollow noreferrer">https://www.tesla.com/careers/search/job/software-integratio...</a> (firmware, integration, electronic park brake) Location: Palo Alto, CA</p><p><a href="https://www.tesla.com/careers/search/job/software-validation-engineer-thermal-systems-123212" rel="nofollow noreferrer">https://www.tesla.com/careers/search/job/software-validation...</a> (system validation, thermal, Python) Location: Palo Alto, CA</p><p><a href="https://www.tesla.com/en_CA/careers/search/job/vehicle-firmware-embedded-systems-engineering-internship-fall-2023-168106" rel="nofollow noreferrer">https://www.tesla.com/en_CA/careers/search/job/vehicle-firmw...</a> (internship, embedded, validation, thermal) Location: Palo Alto, CA.
              </p></span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="36574881"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574881" href="https://news.ycombinator.com/vote?id=36574881&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>MixRank (YC S11) | Software Engineers | 100% REMOTE (Global) | Full-Time<p>MixRank processes petabytes of data every month from web crawling. We have hundreds of customers using our data products including Google, Amazon, Facebook, Intel, and Adobe, across industries Sales, Marketing, Finance, and Security.</p><p>Team is 34 full-time, full-remote from 17+ countries. We're growing, profitable, employee-owned, no dependence on outside funding. Applicants from all geographies and backgrounds are welcome.</p><p>We are looking for passionate individuals for whom programming is not just a job but it’s something they love to do. We're obsessed with computers, programming, big data, databases, compilers, hardware, math, data science, and the internet. Does this sound like you? Please apply to join our team.</p><p>Our code base is very friendly to new contributors. You'll have a fully-functional development environment within hours (fully automated) and be pushing commits on your first day. Deployments to production happen multiple times per day and finish in less than 2 minutes. Effectively all of our codebase is written in Python, Rust, SQL, Javascript/TypeScript, and Nix. The core technologies you'll need familiarity with to be productive are Python, PostgreSQL, Linux, and Git.</p><p>We operate at a larger scale than typical startups. We operate two datacenters with high performance servers we've built that are capable of dealing with the volumes of data we process. We've implemented our own distributed file system. We do full-scale web crawls. We download and perform static analysis on the entire universe of Android APKs and iOS IPAs that are published. Unlike a typical startup where you'll spend half of your time in meetings, and the other half fixing bugs from Jira tickets— at MixRank you'll get to challenge yourself with difficult technical problems that will help you to grow as an individual.</p><p>--</p><p>Junior Software Engineer - Remote (Global), Full-Time</p><p>We're looking for remote junior engineers that have 0-3 years of professional experience in software, and 5+ years of curiosity exploring computers, programming, and technical hobby projects. This is an open-ended entry role with mentorship and diverse opportunities to work on all areas of our product: databases, distributed systems, infrastructure and tooling, data analysis, machine learning, frontend/backend web development, APIs, data mining, data modeling, and more. To stand out, please highlight what makes you unique: passion for computing, curiosity and side projects, work ethic, niche research, etc.</p><p>Ideally you've already graduated, but if you still have one or more years left of school, please feel free to apply anyway, and if you're the right fit for the team we'll figure out a way to accommodate your schedule.</p><p>--</p><p>Software Engineer - Remote (Global), Full-Time</p><p>We're hiring generalist software engineers to work on web applications, data mining, machine learning/data science, data transformation/ETL, data modeling, database scaling, infrastructure, devops, and more. We'll cater the role to whatever subset of these areas match your interests.</p><p>Beneficial experience includes PostgreSQL, Python, Rust, Linux, TypeScript, Nix, frontend/backend web development, and data mining.</p><p>--</p><p>I'm Scott, Founder/CEO/CTO. Please apply here: <a href="https://www.ycombinator.com/companies/mixrank/jobs">https://www.ycombinator.com/companies/mixrank/jobs</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574178"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574178" href="https://news.ycombinator.com/vote?id=36574178&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Graphistry (graphistry.com + louie.ai) | DC | US | Australia | REMOTE | Full-time and Contract-to-hire | Senior data engineering, backend engineering, research engineering, security data science, security engineering<p>Graphistry is a Gartner-awarded startup used by fraud/cyber/BI/supplychain/... analysts to see and correlate using our visual graph AI platform, and now with louie.ai (generative AI), they can talk with their many databases in natural language while having L.O.U.I.E. generate the queries, GPU visualizations, &amp; analyses for them. We partner with companies like Nvidia &amp; AWS to enable end-to-end GPU compute so operational teams can do all this at previously impossible scales and interactivity.</p><p>We're looking for collaborative area owners especially around generative AI infra (OpenSearch, vector DBs, NLP &amp; knowledge graphs, ...), cybersecurity (Splunk, graph neural nets, ...), and osint. Despite the broader market slowdowns, we're 2-3X'ing this year, just as we did last year... and entirely on revenue. Many of our wins cannot be written about publicly, so we're happy to chat about details more privately. We're a small and high-leverage team, so looking for folks who thrive on bringing emerging technologies to meaningful problems in fast-but-intentional environments and iterating closely with our design partners at our bigger customers (banks, govs, late-stage startups, ..).</p><p>Non-traditional backgrounds are welcome. Think veterans, those transitioning from MSPs &amp; IaaS =&gt; software &amp; solutions, etc. We are generally hiring senior. Even if the current openings are not a fit, I encourage contacting us as we expect even more openings later this year as our no/low-code tools hit general availability for anyone with a database and we expect even faster growth. For senior candidates, we look for experiences like having started &amp; run projects &amp; startups, been a key contributor to open source, or other marks of engineering innovation, hard-earned wisdom, teamwork, and working holistically vs myopically.</p><p>You can find more info here: <a href="https://www.graphistry.com/careers" rel="nofollow noreferrer">https://www.graphistry.com/careers</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574172"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574172" href="https://news.ycombinator.com/vote?id=36574172&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Evertas Insurance | US-based REMOTE | Full-time | <a href="https://www.evertas.com/" rel="nofollow noreferrer">https://www.evertas.com/</a> | <a href="https://www.evertas.com/careers/" rel="nofollow noreferrer">https://www.evertas.com/careers/</a><p>Evertas is the world's first cryptoasset insurance company. We're a Bermuda carrier, Lloyd's of London coverholder, and have been around for over 5 years. (We raised a $15mm Series A in late 2022.) We write real policies which actually cover significant risk for clients, quantify premiums based on the effectiveness of deployed controls, and do professional services for clients to put better controls in place (or helping other insurance companies with underwriting and claims adjustments).</p><p>The best pitch for the company is: Join us to prevent the next SBF/FTX/3AC/Luna/Celsius... meltdown, by providing tools for the industry to police itself, provide meaningful risk transference, ensure best practices are documented and commercially required, and avoid uninformed and unproductive government regulatory retaliation instead of meaningful public/private beneficial governance -- and make a bunch of money for everyone while doing so.</p><p>(I'm Chief Security Officer; have been involved in crypto since the 1990s (blinded tokens), and I love insurance as a powerful tool to improve security across the industry. The rest of the team are also cryptocurrency and security OGs, with industry and institutional experience.)</p><p>We're looking to hire 1-2 Security Engineers. Primarily this is for underwriting and professional services in the cryptocurrency space, as well as research into risks in the space (and mitigations). A great thing about insurance is it's not "call in the middle of the night over a holiday with a crisis", but solving things prospectively for clients, but still having significant and meaningful impact.</p><p>We're open to security experts moving into cryptocurrency, or cryptocurrency experts moving into security, but obviously having interest in both is key (and expertise in both would be amazing). We highly value professionalism, integrity, and a problem-solving nature. Would be very interested in people who currently or recently worked at downsizing, technically excellent security teams in the crypto industry or in security-critical adjacent industries.</p><p>(We would be open to remote hires outside USA at some point; the complexity is handling nexus and HR and such with a small team.)</p><p>Please apply through the form at <a href="https://www.evertas.com/careers/" rel="nofollow noreferrer">https://www.evertas.com/careers/</a> (PLEASE NO RECRUITERS)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574134"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574134" href="https://news.ycombinator.com/vote?id=36574134&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Open edX / OpenCraft | Full-time | TRUE REMOTE (async/worldwide) | Senior Open Source Developer on Open edX - React, Python/Django, AWS/Kubernetes<p>Do you care about contributing to open-source, and appreciate a good challenge? We do too! :)</p><p>Open-source</p><p>We are a team of veteran open-source developers, working on educational and community-based projects in an open-first environment – and we are looking for new members. By joining us, you will work full-time on open-source, pushing your changes to free software projects upstream through pull requests, contributing features, documentation, or help on public forums.</p><p>We care deeply about contributing our work upstream. You will see the results of your work reused and recognized across the educational community, increasing access to quality education for everyone, everywhere.</p><p>Remote-first</p><p>Unlike companies who reluctantly started to accept remote workers recently, we have embraced it from day 1. For the past 7 years, we have based and refined our way of working around remote-friendly workflows, from the ground up. No day-long video meetings, mandatory work hours, or risk of being forced back into an office one day -- as long as you have a good internet connection, it’s none of our business when or where you work from. :)</p><p>We are all working remotely, from all continents (except Antarctica, at least so far - applicants welcome!). We use remote-friendly and timezone-agnostic workflows based on asynchronous principles and good documentation practices.</p><p>Online education</p><p>We are one of the main contributors to the Open edX project, the main open-source MOOC platform created by MIT, Harvard and many other top universities. It powers sites like edX.org, the MIT Open Learning Library, and the national online learning platform for France. We provide development and hosting for institutions like Harvard Medical School, Harvard LabXchange, Cloudera, Autodesk, and several governments. We are not affiliated with edX.org, but we contribute and work with them on various projects.</p><p>Our handbook, like much of our work, is publicly viewable and you can find it at <a href="https://handbook.opencraft.com/" rel="nofollow noreferrer">https://handbook.opencraft.com/</a>.</p><p>Apply for this Position</p><p>See the full details and apply at <a href="https://opencraft.com/jobs/open-source-developer/" rel="nofollow noreferrer">https://opencraft.com/jobs/open-source-developer/</a></p><p>Job description: <a href="https://docs.google.com/document/d/1VgA7geR5oAsHzTRnldm6KU7LK9c7pvbMAbSkt0ihNho/edit" rel="nofollow noreferrer">https://docs.google.com/document/d/1VgA7geR5oAsHzTRnldm6KU7L...</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36573895"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36573895" href="https://news.ycombinator.com/vote?id=36573895&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>Temporal Technologies | Multiple positions in United States - WORK FROM HOME | FULL-TIME.<p>Temporal offers an entirely new way to build scalable and reliable applications. Temporal enables developers to focus on writing important business logic, and not on managing state or worrying about the underlying infrastructure. Sequoia Capital led our recent round of funding and our team has experience from start-ups and larger companies like Microsoft, Google, Amazon, Uber, and more.</p><p>Temporal Investors Expand Funding: <a href="https://temporal.io/news/temporal-investors-expand-funding-with-usd75m-round" rel="nofollow noreferrer">https://temporal.io/news/temporal-investors-expand-funding-w...</a></p><p>Temporal in 7 minutes: <a href="https://temporal.io/tldr" rel="nofollow noreferrer">https://temporal.io/tldr</a></p><p>We're looking for senior level engineers for multiple roles - see here - <a href="https://www.temporal.io/careers" rel="nofollow noreferrer">https://www.temporal.io/careers</a></p><p>FEATURED ROLES:</p><p>Senior Product Manager - Platform - Read more and apply here  <a href="https://jobs.lever.co/temporal/d4ebe2cd-27fa-43e2-ae0b-57ec316c8f4a" rel="nofollow noreferrer">https://jobs.lever.co/temporal/d4ebe2cd-27fa-43e2-ae0b-57ec3...</a></p><p>Senior Technical Curriculum Developer - Read more and apply here <a href="https://jobs.lever.co/temporal/a09daac8-f296-4330-a31b-59e56445e6f8" rel="nofollow noreferrer">https://jobs.lever.co/temporal/a09daac8-f296-4330-a31b-59e56...</a></p><p>Staff+/Tech Lead - Distributed Systems Software Engineer - Read more and apply here <a href="https://jobs.lever.co/temporal/28a290fa-087f-447b-934c-2960e769b963" rel="nofollow noreferrer">https://jobs.lever.co/temporal/28a290fa-087f-447b-934c-2960e...</a></p><p>Developer Success Engineer - Read more and apply here  <a href="https://jobs.lever.co/temporal/ff1b33fe-fd12-4d8c-a266-4b1a83295182" rel="nofollow noreferrer">https://jobs.lever.co/temporal/ff1b33fe-fd12-4d8c-a266-4b1a8...</a></p><p>For all employees, we offer: competitive salary, stock options, fully covered premiums for medical, dental (and ortho), vision, and life insurance benefits, HSA, 401K, unlimited time-off, work from home perks, monthly wellness / food $ allowance, an access pass to a WeWork location if you so choose.Send resume to careers AT temporal.io or apply here <a href="https://www.temporal.io/careers/" rel="nofollow noreferrer">https://www.temporal.io/careers/</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574770"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36574770" href="https://news.ycombinator.com/vote?id=36574770&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>JetBrains | Software Developer (Kotlin Multiplatform Tooling) | Munich, Berlin, Amsterdam, Prague, Cyprus, … | Onsite, Hybrid | Visa | Full-time<p>Are you an ambitious and talented software developer with a passion for creating world-class developer tools? If so, we have an exciting opportunity for you at JetBrains, a rapidly growing software development company that's on a mission to build the best development tools in the world. Our products are used by millions of developers worldwide, helping them to be more productive and achieve better results faster.</p><p>We are looking for a motivated software developer to join our Kotlin Multiplatform Tooling team, working on innovative Integrated Development Environments (IDEs). You will have the opportunity to be at the forefront of software development and make your mark in the industry. You will collaborate with the team to design, implement, and improve our tooling for Kotlin, Swift, and Compose on Android, iOS, and desktop platforms, crafting a cohesive development experience for Kotlin Multiplatform developers.</p><p>At JetBrains, we understand the importance of a supportive and empowering workplace culture for software developers. Our company was founded by developers, for developers, and we strive to create an environment where you can do your best work, learn from your peers, and grow in your career. We encourage innovation, engage with our customers to better understand their needs, and value diversity, teamwork, and open communication.</p><p>We are committed to your professional growth, offering extensive mentorship opportunities, attendance at technical conferences, and various career advancement paths to align with your goals and strengths. We believe in a healthy work-life balance and provide flexible schedules, remote working opportunities, and a supportive work environment that encourages you to bring your whole self to work.</p><p>Our development process is fully transparent, and anyone can participate in any task. All team members communicate with our users, discuss newly proposed features, take part in troubleshooting, and provide bug reports. We are in constant communication with each other, both in person and via Slack.</p><p>Our source code is stored in Git repositories, with most of it written in Java and Kotlin, while low-level libraries use Rust and C/C++. All changes are covered by automated tests, code is peer-reviewed, and then extensively tested by QA to maintain high product quality and avoid regressions.</p><p>JetBrains has a strong presence in seven R&amp;D centers across Europe, and our tools are used by 99 of the Fortune 100 companies. We offer a competitive salary, excellent opportunities for professional and personal growth, 6 weeks of paid annual leave, relocation assistance, visa sponsorship, and many other benefits.</p><p>To apply and learn more about what we offer, check out our job posting for this position [0] and the many more we have open for all kinds of roles. If you have any questions at all, feel free to contact me directly at florian.kistner+hn@jetbrains.com.</p><p>Join our team and help us build the tools that empower developers to do their best work. We look forward to welcoming you to JetBrains!</p><p>[0]: <a href="https://www.jetbrains.com/careers/jobs/software-developer-kotlin-multiplatform-tooling-1061/" rel="nofollow noreferrer">https://www.jetbrains.com/careers/jobs/software-developer-ko...</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36575415"><td></td></tr>
            <tr id="36575076"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_36575076" href="https://news.ycombinator.com/vote?id=36575076&amp;how=up&amp;goto=item%3Fid%3D36573871"></a></center>    </td><td><p><span>TheNotCompany | Machine Learning Manager | San Francisco, CA | Hybrid (2-days/week)<p>Apply here: <a href="https://www.linkedin.com/jobs/view/3604523243" rel="nofollow noreferrer">https://www.linkedin.com/jobs/view/3604523243</a> or drop a line to aadit@thenotcompany.com</p><p>Hiring for a Machine Learning Manager to build ML-enabled software for formulators and scientists.</p><p>We are using a combination of Generative AI (jargony, but we started with VAE a few years ago and moving to LLMs now) and human-in-the-loop optimization to create sustainable formulations for CPG food, personal care and more. We've also extended our technology to solve wet-lab R&amp;D problems at the bench and pilot scale for synbio and other tangential industries.</p><p>This is a great role if you like working with scientific data and possess creative problem solving skills to envision how a suite of ML models can form into a comprehensive product for our end users. We work with internal teams of analytical scientists and formulators to collect data (GCMS, HPLC, FTIR) and test AI-generated/screened formulations. Our flagship product, NotMilk, is formulated with pineapple &amp; cabbage, which was suggested by our algorithm.</p><p>The team size is 7 ML Engineers with an overall Eng/Product/Design org of 40 (global). You will be inheriting a strongly built ML team (Stanford, Harvard, Berkeley, PUC Chile)</p><p>401k w/ match, Health/Dental/Vision, 24 days PTO.</p><p>Quick Summary:</p><p>* 7 year old food-tech company.</p><p>* $400M raised to date; last raise of $70M in Dec 2022 @ $1.5B valuation.</p><p>* Entered into a joint venture with Kraft-Heinz to develop their plant-based portfolio in 2022 using our technology and have already launched 2 products.</p><p>* Currently getting sued by the dairy industry in Chile, but we turned it into an ad-campaign and won a Cannes Lions.</p><p>Sites:  
<a href="http://notco.com/" rel="nofollow noreferrer">http://notco.com</a>  
<a href="http://notco.ai/" rel="nofollow noreferrer">http://notco.ai</a></p><p>News:
[1]<a href="https://techcrunch.com/2021/07/26/notco-gets-its-horn-following-235m-round-to-expand-plant-based-food-products/" rel="nofollow noreferrer">https://techcrunch.com/2021/07/26/notco-gets-its-horn-follow...</a>
[2]<a href="https://www.washingtonpost.com/food/2021/06/16/notmilk-non-dairy-drink/" rel="nofollow noreferrer">https://www.washingtonpost.com/food/2021/06/16/notmilk-non-d...</a>
[3]<a href="https://vegnews.com/2023/2/chilean-unicorn-notco-ai-starbucks-dunkin-vegan" rel="nofollow noreferrer">https://vegnews.com/2023/2/chilean-unicorn-notco-ai-starbuck...</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="36574762"><td></td></tr>
            <tr id="36574709"><td></td></tr>
                <tr id="36574774"><td></td></tr>
                  <tr id="36574826"><td></td></tr>
                <tr id="36574841"><td></td></tr>
                  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pay-frozen Microsofties not happy to hear of 'landmark year' (121 pts)]]></title>
            <link>https://www.theregister.com/2023/07/03/pay_freeze_microsoft_landmark_year/</link>
            <guid>36573664</guid>
            <pubDate>Mon, 03 Jul 2023 14:46:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2023/07/03/pay_freeze_microsoft_landmark_year/">https://www.theregister.com/2023/07/03/pay_freeze_microsoft_landmark_year/</a>, See on <a href="https://news.ycombinator.com/item?id=36573664">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>Following a wave of layoffs and stagnating pay, dissent among some of Microsoft's workforce is breaking out against CEO Satya Nadella after he thanked them for their contribution to the "landmark" fiscal '23.</p>
<p>Microsoft's latest full financial year ended on 30 June and the big boss dispatched a memo on the internal message board to the great unwashed at the tail-end of last week.</p>
<p>"As we approach the end of FY23, I want to express my sincere appreciation to everyone working hard across the company for a strong close," said Nadella in the missive, shared with <a target="_blank" rel="nofollow" href="https://www.businessinsider.com/angry-microsoft-employees-snap-at-satya-nadellas-thank-you-message-2023-6">Insider</a>. "The innovation and creativity you continue to show have made this a landmark year not just for Microsoft, but for our customers, partners, and communities around the world."</p>

    

<p>Nadella also touched upon the family atmosphere at the company, or what he described as "community," and then urged staff to "ground ourselves in our mission and culture."</p>

        


        

<p>There's nothing as tone-deaf as a tech CEO who can flip between channelling their inner corporate evangelist to wax lyrical to shareholders about a company's growth prospects, and then reverse turn to tell staff that weakening business conditions mean no pay rises for the year.</p>
<p>In May, <a target="_blank" href="https://www.theregister.com/2023/05/11/microsoft_pay_freeze/">Nadella told Microsofties</a> that to "remain a consequential" business it needs to maintain leadership in existing operations, make enough to invest in future ideas, and run an efficient organization.</p>

        

<p>"This year the economic conditions are very different across many dimensions, including customer demand, the labor market, and the investments required for the next cycle of innovation… we will not have salary increase for full-time salaried employees," he added.</p>
<p>This was mere months after Microsoft announced the <a target="_blank" href="https://www.theregister.com/2023/01/18/microsoft_job_cuts/">redundancy of 10,000</a> staff in January. Microsoft, like others, recruited heavily in the pandemic and felt headcount was too high for a slowing economy.</p>
<p>For the nine months ended 31 March 2023, Microsoft reported net revenue of $155.7 billion, up from $146.4 billion, and net profit of $52.28 billion, albeit down 6.6 percent year-on-year. As we've said before, Microsoft is not on the breadline.</p>

        

<p>The company found $69 billion to pay for Activision Blizzard, and is currently trying to pressure regulators in the US and UK to overcome their competition concerns and approve that acquisition.</p>
<p>Neither is the company's management worried about future growth prospects, despite the words of caution Nadella shared in the memo to staff about pay freezes. In a disclosure related to the <a target="_blank" href="https://www.theregister.com/2023/06/28/microsoft_ftc_activision/">FTC hearing for Activision Blizzard case</a>, Nadella said he expects Microsoft to be a <a target="_blank" rel="nofollow" href="https://www.cnbc.com/2023/06/26/microsoft-ceo-nadella-said-revenue-would-reach-500-billion-by-2030.html">$500 billion turnover business</a> by 2030 and to "deliver in excess of 10 percent annual returns to shareholders."</p>
<p>Lest we forget about how important shareholders are, Microsoft last month approved a quarterly dividend of $0.68 per share, payable in September. And just two weeks ago, Microsoft shares reached a new high, valuing the business at almost $2.6 trillion. This was on the back of generative AI hype across the tech industry.</p>
<p>Insider reports that 200,000 people saw the CEO's memo about the landmark 2023 and many responded to it with an upvote. Yet not everyone shared those sentiments with one saying: "good way to show gratitude is to unfreeze pay raises."</p>
<ul>

<li><a href="https://www.theregister.com/2023/06/30/microsoft_teams_profanity_filter/">Microsoft puts profanity filter on %@!#ing Teams transcripts</a></li>

<li><a href="https://www.theregister.com/2023/05/04/googlers_upset_with_ceos_226m/">Miffed Googlers meme on CEO's $226M pay award amid cost-cutting campaign</a></li>

<li><a href="https://www.theregister.com/2023/06/30/nhs_england_signs_744_million/">Microsoft signs 1.5 million seat contract for Office 365 and more</a></li>

<li><a href="https://www.theregister.com/2023/02/20/amazon_mandates_return_to_office/">Amazon mandates return to office for 300,000 corporate staff</a></li>
</ul>
<p>Another said: "Here employees take pay cuts as our company and leadership make record profits. It's not right, no other way to look at it."</p>
<p>In fiscal 2022, Nadella was <a target="_blank" href="https://www.theregister.com/2022/10/28/microsoft_nadella_2022_pay_karma/">awarded a pay packet of $55 million</a>, up 10 percent year-on-year. This was a CEO to employee ratio of 289 to 1, as the average staff pay at Microsoft was $190,302.</p>
<p>One more employee upset with the CEO's message said they worked up to 16 hours a day, saying: "I wonder where the profits come from? For myself, I don't feel privileged at all for working here."</p>
<p>We have asked Microsoft to comment. ®</p>                                


                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FoundationDB: A Distributed Key-Value Store (264 pts)]]></title>
            <link>https://cacm.acm.org/magazines/2023/6/273229-foundationdb-a-distributed-key-value-store/fulltext</link>
            <guid>36572658</guid>
            <pubDate>Mon, 03 Jul 2023 13:34:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cacm.acm.org/magazines/2023/6/273229-foundationdb-a-distributed-key-value-store/fulltext">https://cacm.acm.org/magazines/2023/6/273229-foundationdb-a-distributed-key-value-store/fulltext</a>, See on <a href="https://news.ycombinator.com/item?id=36572658">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="container">



<hr>
<div id="articleFullText">
<p><span>
By Jingyu Zhou, Meng Xu, Alexander Shraer, Bala Namasivayam, Alex Miller, Evan Tschannen, Steve Atherton, Andrew J. Beamon, Rusty Sears, John Leach, Dave Rosenthal, Xin Dong, Will Wilson, Ben Collins, David Scherer, Alec Grieser, Yang Liu, Alvin Moore, Bhaskar Muppana, Xiaoge Su, Vishesh Yadav
<br>
Communications of the ACM,
June 2023,
Vol. 66 No. 6, Pages 97-105<br>
10.1145/3592838<br>
<a href="#comments">Comments</a>
</span></p>


<div id="asset-45537">
<figure>
<img alt="FoundationDB logo" src="https://cacm.acm.org/system/assets/0004/5537/051523_VectorLogo_FoundationDB.large.jpg?1684170206&amp;1684170206" title="FoundationDB logo">
<figcaption>
<p>Credit: Vector Logo Zone</p>
</figcaption>
</figure>
</div>


<p>FoundationDB is an open-source transactional key-value store created more than 10 years ago. It is one of the first systems to combine the flexibility and scalability of NoSQL architectures with the power of ACID transactions. FoundationDB adopts an unbundled architecture that decouples an in-memory transaction management system, a distributed storage system, and a built-in distributed configuration system. Each sub-system can be independently provisioned and configured to achieve scalability, high availability, and fault tolerance. FoundationDB includes a deterministic simulation framework, used to test every new feature under a myriad of possible faults. This rigorous testing makes FoundationDB extremely stable and allows developers to introduce and release new features in a rapid cadence. FoundationDB offers a minimal and carefully chosen feature set, which has enabled a range of disparate systems to be built as layers on top. FoundationDB is the underpinning of cloud infrastructure at Apple, Snowflake, and other companies, due to its consistency, robustness, and availability for storing user data, system metadata and configuration, and other critical information.</p>

<p><a href="#PageTop">Back to Top</a></p>


<h3>1. Introduction</h3>
<p>Many cloud services rely on scalable, distributed storage backends for persisting application state. Such storage systems must be fault tolerant and highly available, and at the same time provide sufficiently strong semantics and flexible data models to enable rapid application development. Such services must scale to billions of users, petabytes or exabytes of stored data, and millions of requests per second.</p>
<p>More than a decade ago, NoSQL storage systems emerged offering ease of application development, making it simple to scale and operate storage systems, offering fault-tolerance and supporting a wide range of data models (instead of the traditional rigid relational model). In order to scale, these systems sacrificed transactional semantics, and instead provided eventual consistency, forcing application developers to reason about interleavings of updates from concurrent operations. </p>
<p>FoundationDB (FDB)<sup><a href="#R3">3</a></sup> was created in 2009 and gets its name from the focus on providing what we saw as the foundational set of building blocks required to build higher-level distributed systems. It is an ordered, transactional, key-value store natively supporting multi-key strictly serializable transactions across its entire key space. Unlike most databases, which bundle together a storage engine, data model, and query language, forcing users to choose all three or none, FDB takes a modular approach: it provides a highly scalable, transactional storage engine with a minimal yet carefully chosen set of features. It provides no structured semantics, no query language, data model or schema management, secondary indices, or many other features one normally finds in a transactional database. Offering these would benefit some applications but others that do not require them (or do so in a slightly different form) would need to work around them. Instead, The NoSQL model leaves application developers with great flexibility. Applications can manage data stored as simple key-value pairs, but at the same time implement advanced features, such as consistent secondary indices and referential integrity checks.<sup><a href="#R10">10</a></sup> FDB defaults to strictly serializable transactions but allows relaxing these semantics for applications that don't require them with flexible, fine-grained controls over conflicts.</p>
<p>One of the reasons for its popularity and growing open source community is FoundationDB's focus on the "lower half" of a database, leaving the rest to its "layers"—stateless applications developed on top to provide various data models and other capabilities. With this, applications that would traditionally require completely different types of storage systems, can instead all leverage FDB. Indeed, the wide range of layers that have been built on FDB in recent years is evidence of the usefulness of this unusual design. For example, the FoundationDB Record Layer<sup><a href="#R10">10</a></sup> adds back much of what users expect from a relational database, and JanusGraph,<sup><a href="#R6">6</a></sup> a graph database, provides an implementation as a FoundationDB layer.<sup><a href="#R5">5</a></sup> In its newest release, CouchDB<sup><a href="#R1">1</a></sup> (arguably the first NoSQL system) is being rebuilt as a layer on top of FoundationDB.</p>
<p>Testing and debugging distributed systems is at least as hard as building them. Unexpected process and network failures, message reorderings, and other sources of non-determinism can expose subtle bugs and implicit assumptions that break in reality, which are extremely difficult to reproduce or debug. The consequences of such subtle bugs are especially severe for database systems, which purport to offer perfect fidelity to an unambiguous contract. Moreover, the stateful nature of a database system means that any such bug can result in subtle data corruption that may not be discovered for months. Model-checking techniques can verify the correctness of distributed protocols but often fall short of checking the actual implementation. Deep bugs,<sup><a href="#R18">18</a></sup> which only happen when multiple crashes or restarts occur in a particular sequence, pose a challenge even for end-to-end testing infrastructure. FDB took a radical approach—before building the database itself, we built a deterministic database simulation framework that can simulate a network of interacting processes and a variety of disk, process, network, and request-level failures and recoveries, all within a single physical process. A syntactic extension to C++, called Flow,<sup><a href="#R2">2</a></sup> was created specifically for this purpose. This rigorous testing in simulation makes FDB extremely stable and allows its developers to introduce new features and releases in a rapid cadence.</p>
<p>FDB adopts an unbundled architecture<sup><a href="#R19">19</a></sup> that comprises a control plane and a data plane. The control plane manages the metadata of the cluster and uses Active Disk Paxos<sup><a href="#R9">9</a></sup> for high availability. The data plane consists of a transaction management system, responsible for processing updates, and a distributed storage layer serving reads; both can be independently scaled out. FDB achieves strict serializability through a combination of optimistic concurrency control (OCC)<sup><a href="#R17">17</a></sup> and multi-version concurrency control (MVCC).<sup><a href="#R8">8</a></sup> One of the features distinguishing FDB from other distributed databases is its approach to handling failures. Unlike most similar systems, FDB does not rely on quorums to mask failures, but rather tries to eagerly detect and recover from them by reconfiguring the system. This allows us to achieve the same level of fault tolerance with significantly fewer resources: FDB can tolerate <em>f</em> failures with only <em>f</em> + 1 (rather than 2<em>f</em> + 1) replicas. This approach is best suited for deployments in a local or metro area. For WAN deployments, FDB offers a novel strategy that avoids cross-region write latencies while providing automatic failover between regions without losing data.</p>
<p>This paper makes three primary contributions. First, we describe an open-source distributed storage system, FoundationDB, combining NoSQL and ACID, used in production at Apple, Snowflake, and other companies. Second, an integrated deterministic simulation framework makes FoundationDB one of the most stable systems of its kind. Third, we describe a unique architecture and approach to transaction processing, fault tolerance, and high availability.</p>

<p><a href="#PageTop">Back to Top</a></p>


<h3>2. Design</h3>
<p>The main design principles of FDB are:</p>
<ul>
<li><em>Divide-and-Conquer (or separation of concerns).</em> FDB decouples the transaction management system (write path) from the distributed storage (read path) and scales them independently. Within the transaction management system, processes are assigned various roles representing different aspects of transaction management. Furthermore, cluster-wide orchestrating tasks, such as overload control and load balancing are also divided and serviced by additional heterogeneous roles.</li>
<li><em>Make failure a common case.</em> For distributed systems, failure is a norm rather than an exception. To cope with failures in the transaction management system of FDB, we handle all failures through the recovery path: the transaction system proactively shuts down when it detects a failure. Thus, all failure handling is reduced to a single recovery operation, which becomes a common and well-tested code path. To improve availability, FDB strives to minimize Mean-Time-To-Recovery (MTTR). In our production clusters, the total time is usually less than five seconds.</li>
<li><em>Simulation testing.</em> FDB relies on a randomized, deterministic simulation framework for testing the correctness of its distributed database. Simulation tests not only expose deep bugs,<sup><a href="#R18">18</a></sup> but also boost developer productivity and the code quality of FDB.</li>
</ul>
<p><img alt="*" src="http://dl.acm.org/images/bullet.gif">&nbsp;<strong>2.1. Architecture</strong></p>
<p>An FDB cluster has a control plane for managing critical system metadata and cluster-wide orchestration, and a data plane for transaction processing and data storage, as illustrated in <a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f1.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=681,height=763'); return false;">Figure 1</a>.</p>
<p><a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f1.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=681,height=763'); return false;"><img alt="f1.jpg" height="465" src="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f1.jpg" width="415"></a><br>
<strong>Figure 1. Architecture and transaction processing.</strong></p>
<p><strong>Control plane.</strong> The control plane is responsible for persisting critical system metadata, that is, the configuration of transaction systems, on <code>Coordinators.</code> These <code>Coordinators</code> form a Paxos group<sup><a href="#R9">9</a></sup> and elect a <code>ClusterController.</code> The <code>ClusterController</code> monitors all servers in the cluster and recruits three processes, <code>Sequencer</code> (described in Section 2.1.2), <code>DataDistributor</code>, and <code>Ratekeeper</code>, which are re-recruited if they fail or crash. The <code>DataDistributor</code> is responsible for monitoring failures and balancing data among <code>StorageServers. Ratekeeper</code> provides overload protection for the cluster.</p>
<p><strong>Data plane.</strong> FDB targets OLTP workloads that are read-mostly, read and write a small set of keys per transaction, have low contention, and require scalability. FDB chooses an unbundled architecture<sup><a href="#R19">19</a></sup>: a distributed transaction management system (TS) consists of a <code>Sequencer</code>, <code>Proxies</code>, and <code>Resolvers</code>, all of which are stateless processes. A log system (LS) stores Write-Ahead-Log (WAL) for TS, and a separate distributed storage system (SS) is used for storing data and servicing reads. The LS contains a set of <code>LogServers</code> and the SS has a number of <code>StorageServers.</code> This scales well with Apple's largest transactional workloads.<sup><a href="#R10">10</a></sup></p>
<p>The <code>Sequencer</code> assigns a read and a commit version to each transaction. <code>Proxies</code> offer MVCC read versions to clients and orchestrate transaction commits. <code>Resolvers</code> check for conflicts among transactions. <code>LogServers</code> act as replicated, sharded, distributed persistent queues, each queue storing WAL data for a <code>StorageServer.</code></p>
<p>The SS consists of a number of <code>StorageServers</code>, each storing a set of data shards, that is, contiguous key ranges, and serving client reads. <code>StorageServers</code> are the majority of processes in the system, and together they form a distributed B-tree. Currently, the storage engine on each <code>StorageServer</code> is an enhanced version of SQLite,<sup><a href="#R15">15</a></sup> with enhancements that make range clears faster, defer deletion to a background task, and add support for asynchronous programming.</p>
<p><strong>Read-write separation and scaling.</strong> As mentioned above, processes are assigned different roles; FDB scales by adding new processes for each role. Clients read from sharded <code>StorageServers</code>, so reads scale linearly with the number of <code>StorageServers.</code> Writes are scaled by adding more <code>Proxies</code>, <code>Resolvers</code>, and <code>LogServers.</code> The control plane's singleton processes (e.g., <code>ClusterController</code> and <code>Sequencer</code>) and <code>Coordinators</code> are not performance bottlenecks; they only perform limited metadata operations.</p>
<p><strong>Bootstrapping.</strong> FDB has no dependency on external coordination services. All user data and most system metadata (keys that start with <code>0xFF</code> prefix) are stored in <code>StorageServers.</code> The metadata about <code>StorageServers</code> is persisted in <code>LogServers</code>, and the <code>LogServers</code> configuration data is stored in all <code>Coordinators.</code> The <code>Coordinators</code> are a disk Paxos group; servers attempt to become the <code>ClusterController</code> if one does not exist. A newly elected <code>ClusterController</code> reads the old LS configuration from the <code>Coordinators</code> and spawns a new TS and LS. <code>Proxies</code> recover system metadata from the old LS, including information about all <code>StorageServers.</code> The <code>Sequencer</code> waits until the new TS finishes recovery (Section 2.2.4), then writes the new LS configuration to all <code>Coordinators.</code> The new transaction system is then ready to accept client transactions.</p>
<p><strong>Reconfiguration.</strong> The <code>Sequencer</code> process monitors the health of <code>Proxies</code>, <code>Resolvers</code>, and <code>LogServers.</code> Whenever there is a failure in the TS or LS, or the database configuration changes, the <code>Sequencer</code> terminates. The <code>ClusterController</code> detects the <code>Sequencer</code> failure, then recruits and bootstraps a new TS and LS. In this way, transaction processing is divided into epochs, where each epoch represents a generation of the transaction management system with its own <code>Sequencer.</code></p>
<p><img alt="*" src="http://dl.acm.org/images/bullet.gif">&nbsp;<strong>2.2. Transaction management</strong></p>
<p>This section describes end-to-end transaction processing and strict serializability, then discusses logging and recovery.</p>
<p><strong>End-to-end transaction processing.</strong> As illustrated in <a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f1.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=681,height=763'); return false;">Figure 1</a>, a client transaction starts by contacting one of the <code>Proxies</code> to obtain a read version (i.e., a timestamp). The <code>Proxy</code> then asks the <code>Sequencer</code> for a read version that is at least as large as all previously issued transaction commit versions, and sends this read version back to the client. The client may then issue reads to <code>StorageServers</code> and obtain values at that specific read version. Client writes are buffered locally without contacting the cluster and read-your-write semantics are preserved by combining results from database look-ups with uncommitted writes of the transaction. At commit time, the client sends the transaction data, including the read and write sets (i.e., key ranges), to one of the <code>Proxies</code> and waits for a commit or abort response. If the transaction cannot commit, the client may choose to restart it.</p>
<p>A <code>Proxy</code> commits a client transaction in three steps. First, it contacts the <code>Sequencer</code> to obtain a commit version that is larger than any existing read versions or commit versions. The <code>Sequencer</code> chooses the commit version by advancing it at a rate of one million versions per second. Then, the <code>Proxy</code> sends the transaction information to range-partitioned <code>Resolvers</code>, which implement FDB's optimistic concurrency control by checking for <em>read-write</em> conflicts. If all <code>Resolvers</code> return with no conflict, the transaction can proceed to the final commit stage. Otherwise, the <code>Proxy</code> marks the transaction as aborted. Finally, committed transactions are sent to a set of <code>LogServers</code> for persistence. A transaction is considered committed after all designated <code>LogServers</code> have replied to the <code>Proxy</code>, which reports the committed version to the <code>Sequencer</code> (to ensure that later transactions' read versions are after this commit) and then replies to the client. <code>StorageServers</code> continuously pull mutation logs from <code>LogServers</code> and apply committed updates to disks.</p>
<p>In addition to the above <em>read-write transactions</em>, FDB also supports <em>read-only transactions</em> and <em>snapshot reads.</em> A read-only transaction in FDB is both serializable (happens at the read version) and performant (thanks to the MVCC), and the client can commit these transactions locally without contacting the database. This is particularly important because the majority of transactions are read-only. Snapshot reads in FDB selectively relax the isolation property of a transaction by reducing conflicts, that is, concurrent writes will not conflict with snapshot reads.</p>
<p><strong>Strict serializability.</strong> FDB implements Serializable Snapshot Isolation (SSI) by combining OCC with MVCC. Recall that a transaction <em>T<sub>x</sub></em> gets both its read version and commit version from the <code>Sequencer</code>, where the read version is guaranteed to be no less than any committed version when <em>T<sub>x</sub></em> starts and the commit version is larger than any existing read or commit versions. This commit version defines a serial history for transactions and serves as a Log Sequence Number (LSN). Because <em>T<sub>x</sub></em> observes the results of all previously committed transactions, FDB achieves strict serializability. To ensure there are no gaps between LSNs, the <code>Sequencer</code> returns the previous commit version (i.e., previous LSN) with each commit version. A Proxy sends both LSN and the previous LSN to <code>Resolvers</code> and <code>LogServers</code> so that they can serially process transactions in the order of LSNs. Similarly, <code>StorageServers</code> pull log data from <code>LogServers</code> in increasing LSN order.</p>
<p><code>Resolvers</code> use a lock-free conflict detection algorithm similar to <em>write-snapshot isolation</em>,<sup><a href="#R22">22</a></sup> with the difference that in FDB the commit version is chosen before conflict detection. This allows FDB to efficiently batch-process both version assignments and conflict detection.</p>
<p>The entire key space is divided among <code>Resolvers</code> allowing conflict detection to be performed in parallel. A transaction can commit only when all <code>Resolvers</code> admit the transaction. Otherwise, the transaction is aborted. It is possible that an aborted transaction is admitted by a subset of <code>Resolvers</code>, and they have already updated their history of potentially committed transactions, which may cause other transactions to conflict (i.e., a false positive). In practice, this has not been an issue for our production workloads, because transactions' key ranges usually fall into one <code>Resolver.</code> Additionally, because the modified keys expire after the MVCC window, such false positives are limited to only happen within the short MVCC window time (i.e., 5 seconds).</p>
<p>The OCC design of FDB avoids the complicated logic of acquiring and releasing (logical) locks, which greatly simplifies interactions between the TS and the SS. The price is wasted work done by aborted transactions. In our multitenant production workload transaction conflict rate is very low (less than 1%) and OCC works well. If a conflict happens, the client can simply restart the transaction.</p>
<p><strong>Logging protocol.</strong> After a <code>Proxy</code> decides to commit a transaction, it sends a message to all <code>LogServers</code>: mutations are sent to <code>LogServers</code> responsible for the modified key ranges, while other <code>LogServers</code> receive an empty message body. The log message header includes both the current and previous LSN obtained from the <code>Sequencer</code>, as well as the largest known committed version (KCV) of this <code>Proxy. LogServers</code> reply to the <code>Proxy</code> once the log data is made durable, and the <code>Proxy</code> updates its KCV to the LSN if all replica <code>LogServers</code> have replied and this LSN is larger than the current KCV.</p>
<p>Shipping the redo log from the LS to the SS is not a part of the commit path and is performed in the background. In FDB, <code>StorageServers</code> apply non-durable redo logs from <code>LogServers</code> to an in-memory index. In the common case, this happens before any read versions that reflect the commit is handed out to a client, allowing very low latency for serving multi-version reads. Therefore, when client read requests reach <code>StorageServers</code>, the requested version (i.e., the latest committed data) is usually already available. If fresh data is not available to read at a <code>StorageServer</code> replica, the client either waits for the data to become available or reissues the request at another replica.<sup><a href="#R12">12</a></sup> If both read time out, the client can simply restart the transaction.</p>
<p>Since log data is already durable on <code>LogServers</code>, <code>StorageServers</code> can buffer updates in memory and persist batches of data to disks periodically, thus improving I/O efficiency.</p>
<p><strong>Transaction system recovery.</strong> Traditional database systems often employ the ARIES recovery protocol.<sup><a href="#R20">20</a></sup> During recovery, the system processes redo log records from the last checkpoint by re-applying them to relevant data pages. This brings the database to a consistent state; transactions that were in flight during the crash can be rolled back by executing the undo log records.</p>
<p>In FDB, recovery is purposely made very cheap—there is no need to apply undo log entries. This is possible because of a greatly simplifying design choice: redo log processing is the same as the normal log forward path. In FDB, <code>StorageServers</code> pull logs from <code>LogServers</code> and apply them in the background. The recovery process starts by detecting a failure and recruiting a new transaction system. The new TS can accept transactions before all the data in the old <code>LogServers</code> is processed. Recovery only needs to find out the end of the redo log: At that point (as in normal forward operation) <code>StorageServers</code> asynchronously replay the log.</p>
<p>For each epoch, the <code>ClusterController</code> executes recovery in several steps. First, it reads the previous TS configuration from <code>Coordinators</code> and locks this information to prevent another concurrent recovery. Next, it recovers previous TS system states, including information about older <code>LogServers</code>, stops them from accepting transactions, and recruits a new set of <code>Sequencer</code>, <code>Proxies</code>, <code>Resolvers</code>, and <code>LogServers.</code> After previous <code>LogServers</code> are stopped and a new TS is recruited, the <code>ClusterController</code> writes the new TS information to the <code>Coordinators.</code> Because <code>Proxies</code> and <code>Resolvers</code> are stateless, their recoveries have no extra work. In contrast, <code>LogServers</code> save the logs of committed transactions, and we need to ensure all such transactions are durable and retrievable by <code>StorageServers.</code></p>
<p>The essence of the recovery of old <code>LogServers</code> is to determine the end of the redo log, that is, a Recovery Version (RV). Rolling back undo the log is essentially discarding any data after RV in the old <code>LogServers</code> and <code>StorageServers.</code> <a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f2.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=718,height=274'); return false;">Figure 2</a> illustrates how RV is determined by the <code>Sequencer.</code> Recall that a <code>Proxy</code> request to <code>LogServers</code> piggybacks its KCV, the maximum LSN that this <code>Proxy</code> has committed, along with the LSN of the current transaction. Each <code>LogServer</code> keeps the maximum KCV received and a Durable Version (DV), which is the maximum LSN persisted by the <code>LogServer</code> (DV is ahead of KCV since it corresponds to in-flight transactions). During recovery, the <code>Sequencer</code> attempts to stop all <em>m</em> old <code>LogServers</code>, where each response contains the DV and KCV on that <code>LogServer.</code> Assume the replication degree for <code>LogServers</code> is <em>k.</em> Once the <code>Sequencer</code> has received more than <em>m</em> − <em>k</em> replies, the <code>Sequencer</code> knows the previous epoch has committed transactions up to the maximum of all KCVs, which becomes the previous epoch's end version (PEV). All data before this version has been fully replicated. For the current epoch, its start version is <em>PEV</em> + 1 and the <code>Sequencer</code> chooses the minimum of all DVs to be the RV. Logs in the range of [<em>PEV</em> + 1, <em>RV</em>] are copied from the previous epoch's <code>LogServers</code> to the current ones, for healing the replication degree in case of <code>LogServer</code> failures. The overhead of copying this range is very small because it only contains a few seconds' log data.</p>
<p><a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f2.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=718,height=274'); return false;"><img alt="f2.jpg" height="158" src="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f2.jpg" width="415"></a><br>
<strong>Figure 2. An illustration of RV and PEV.</strong></p>
<p>When <code>Sequencer</code> accepts new transactions, the first is a special recovery transaction that informs <code>StorageServers</code> of the RV so that they can roll back any data larger than the RV. The current FDB storage engine consists of an unversioned SQLite<sup><a href="#R15">15</a></sup> B-tree and in-memory multi-versioned redo log data. Only mutations leaving the MVCC window (i.e., committed data) are written to SQLite. The rollback is simply discarding in-memory multi-versioned data in <code>StorageServers.</code> Then <code>StorageServers</code> pull any data larger than version <em>PEV</em> from new <code>LogServers.</code></p>
<p><img alt="*" src="http://dl.acm.org/images/bullet.gif">&nbsp;<strong>2.3. Replication</strong></p>
<p>FDB uses a combination of various replication strategies for different data to tolerate <em>f</em> failures:</p>
<ul>
<li><em>Metadata replication.</em> System metadata of the control plane is stored on <code>Coordinators</code> using Active Disk Paxos.<sup><a href="#R9">9</a></sup> As long as a quorum (i.e., majority) of <code>Coordinators</code> are live, this metadata can be recovered.</li>
<li><em>Log replication.</em> When a <code>Proxy</code> writes logs to <code>LogServers</code>, each sharded log record is synchronously replicated on <em>k</em> = <em>f</em> + 1 <code>LogServers.</code> Only when all <em>k</em> have replied with successful persistence can the <code>Proxy</code> send back the commit response to the client. Failure of <code>LogServer</code> results in a transaction system recovery.</li>
<li><em>Storage replication.</em> Every shard, that is, a key range, is asynchronously replicated to <em>k</em> = <em>f</em> + 1 <code>StorageServers</code>, which is called a <em>team.</em> A <code>StorageServer</code> usually hosts a number of shards so that its data is evenly distributed across many teams. A failure of a <code>StorageServer</code> triggers <code>DataDistributor</code> to move data from teams containing the failed process to other healthy teams.</li>
</ul>
<p>Note the storage team abstraction is more sophisticated than Copysets.<sup><a href="#R11">11</a></sup> To reduce the chance of data loss due to simultaneous failures, FDB ensures that at most one process in a replica group is placed in a <em>fault domain</em>, for example, a host, rack, or availability zone. Each team is guaranteed to have at least one process live and there is no data loss if any one of the respective fault domains remains available.</p>

<p><a href="#PageTop">Back to Top</a></p>


<h3>3. Simulation Testing</h3>
<p>Testing and debugging distributed systems is a challenging and inefficient process. This problem is particularly acute for FDB—any failure of its strong concurrency control contract can produce almost arbitrary corruption in systems layered on top. Accordingly, an ambitious approach to end-to-end testing was adopted from the beginning: the real database software is run, together with randomized synthetic workloads and fault injection, in a deterministic discrete-event simulation. The harsh simulated environment quickly provokes bugs in the database, and determinism guarantees that every such bug can be reproduced and investigated.</p>
<p><strong>Deterministic simulator.</strong> FDB was built from the ground up to enable this testing approach. All database code is deterministic and multithreaded concurrency is avoided (instead, one database node is deployed per core). <a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f3.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=617,height=314'); return false;">Figure 3</a> illustrates the simulator process of FDB, where all sources of nondeterminism and communication are abstracted, including network, disk, time, and pseudorandom number generator. FDB is written in Flow,<sup><a href="#R2">2</a></sup> a novel syntactic extension to C++ adding async/await-like concurrency primitives with automatic cancellation, permitting highly concurrent code to execute deterministically. Flow provides the Actor programming model<sup><a href="#R7">7</a></sup> that abstracts various actions of the FDB server process into a number of actors that are scheduled by the Flow runtime library. The simulator process is able to spawn multiple FDB servers that communicate with each other through a simulated network in a single discrete-event simulation. The production implementation is a simple shim to the relevant system calls.</p>
<p><a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f3.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=617,height=314'); return false;"><img alt="f3.jpg" height="211" src="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f3.jpg" width="415"></a><br>
<strong>Figure 3. The FDB deterministic simulator.</strong></p>
<p>The simulator runs multiple workloads (written in Flow) that communicate with simulated FDB servers through the simulated network. These workloads include fault injection instructions, mock applications, database configuration changes, and internal database functionality invocations. Workloads are composable to exercise various features and are reused to construct comprehensive test cases.</p>
<p><strong>Test oracles.</strong> FDB uses a variety of test oracles to detect failures in simulation. Most of the synthetic workloads have assertions built in to verify the contracts and properties of the database, for example, by checking invariants in their data that can only be maintained through transaction atomicity and isolation. Assertions are used throughout the code base to check properties that can be verified "locally." Properties like recoverability (eventual availability) can be checked by returning the modeled hardware environment (after a set of failures sufficient to break the database's availability) to a state in which recovery should be possible and verifying that the cluster eventually recovers.</p>
<p><strong>Fault injection.</strong> Simulation injects machine, rack, and data-center failures and reboots, a variety of network faults, partitions, and latency problems, disk behavior (e.g., the corruption of unsynchronized writes when machines reboot), and randomizes event times. This variety of fault injection both tests the database's resilience to specific faults and increases the diversity of states in simulation. Fault injection distributions are carefully tuned to avoid driving the system into a small state space caused by an excessive fault rate.</p>
<p>FDB itself cooperates with the simulation in making rare states and events more common, through a high-level fault injection technique informally referred to as "buggification." At many places in its code base, the simulation is allowed to inject some unusual (but not contract-breaking) behavior such as unnecessarily returning an error from an operation that usually succeeds, injecting a delay in an operation that is usually fast, or choosing an unusual value for a tuning parameter, etcetera. This complements fault injection at the network and hardware levels. Randomization of tuning parameters also ensures that specific performance tuning values do not accidentally become necessary for correctness.</p>
<p>Swarm testing<sup><a href="#R14">14</a></sup> is extensively used to maximize the diversity of simulation runs. Each run uses a random cluster size and configuration, random workloads, random fault injection parameters, random tuning parameters, and enables and disables a random subset of buggification points. We have open-sourced the swarm testing framework for FDB.<sup><a href="#R4">4</a></sup></p>
<p>Conditional coverage macros are used to evaluate and tune the effectiveness of the simulation. For example, a developer concerned that a new piece of code may rarely be invoked with a full buffer can add the line <code>TEST(buffer.is_full())</code>; and analysis of simulation results will tell them how many distinct simulation runs achieved that condition. If the number is too low, or zero, they can add buggification, workload, or fault injection functionality to ensure that scenario is adequately tested.</p>
<p><strong>Latency to bug discovery.</strong> Finding bugs quickly is important both so that they are encountered in testing before production, and for engineering productivity (since bugs found immediately in an individual commit can be trivially traced to that commit). Discrete-event simulation can run arbitrarily faster than real-time if CPU utilization within the simulation is low, as the simulator can fast-forward clock to the next event. Many distributed systems bugs take time to play out, and running simulations with long stretches of low utilization allows many more of these to be found per core second than in "real-world" end-to-end tests.</p>
<p>Additionally, randomized testing is embarrassingly parallel and FDB developers can and do "burst" the amount of testing they do before major releases, in the hopes of catching exceptionally rare bugs that have thus far eluded the testing process. Since the search space is effectively infinite, running more tests results in more code being covered and more potential bugs being found, in contrast to scripted functional or system testing.</p>
<p><strong>Limitations.</strong> Simulation cannot reliably detect performance issues, such as an imperfect load-balancing algorithm. It is also unable to test third-party libraries or dependencies, or even first-party code not implemented in Flow. As a consequence, we have largely avoided taking dependencies on external systems. Finally, bugs in critical dependent systems, such as a filesystem or the operating system, or misunderstandings of their contract, can lead to bugs in FDB. For example, several bugs have resulted from the true operating system contract being weaker than it was believed to be.</p>

<p><a href="#PageTop">Back to Top</a></p>


<h3>4. Evaluation</h3>
<p>This section studies the scalability of FDB and provides some data on the time of reconfiguration.</p>
<p><img alt="*" src="http://dl.acm.org/images/bullet.gif">&nbsp;<strong>4.1. Scalability test</strong></p>
<p>The experiments were conducted on a test cluster of 27 machines in a single data center. Each machine has a 16-core 2.5 GHz Intel Xeon CPU with hyper-threading enabled, 256 GB memory, 8 SSD disks, connected via 10 Gigabit Ethernet. Each machine runs 14 <code>StorageServers</code> on 7 SSD disks and reserves the remaining SSD for <code>LogServer.</code> In the experiments, we use the same number of <code>Proxies</code> and <code>LogServers.</code> The replication degrees for both <code>LogServers</code> and <code>StorageServers</code> are set to three.</p>
<p>We use a synthetic workload to evaluate the performance of FDB. Specifically, there are four types of transactions: (1) <em>blind writes</em> that update a configured number of random keys; (2) <em>range reads</em> that fetch a configured number of continuous keys starting at a random key; (3) <em>point reads</em> that fetch 10 random keys; and (4) <em>point writes</em> that fetch 5 random keys and update another 5 random keys. We use blind writes and range reads to evaluate the write and read performance, respectively. Point reads and point writes are used together to evaluate mixed read-write performance. For instance, 90% reads and 10% writes (90/10 read-write) is constructed with 80% point reads and 20% point writes transactions. Each key is 16 bytes and the value size is uniformly distributed between 8 and 100 bytes (averaging 54 bytes). The database is pre-populated with data using the same size distribution. In the experiments, we make sure the dataset cannot be completely cached in the memory of <code>StorageServers.</code></p>
<p><a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f4.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=690,height=354'); return false;">Figure 4</a> illustrates the scalability test of FDB from 4 to 24 machines using 2 to 22 <code>Proxies</code> or <code>LogServers.</code> <a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f4.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=690,height=354'); return false;">Figure 4a</a> shows that the write throughput scales from 67 to 391 MBps (5.84X) for 100 operations per transaction (T100), and from 73 to 467 MBps (6.40X) for 500 operations per transaction (T500). Note the raw write throughput is three times higher because each write is replicated three times to <code>LogServers</code> and <code>StorageServers. LogServers</code> are CPU saturated at the maximum write throughput. Read throughput increases from 2946 to 10,096 MBps (3.43X) for T100, and from 5055 to 21,830 MBps (4.32X) for T500, where <code>StorageServers</code> are saturated. For both reads and writes, increasing the number of operations in a transaction boosts throughput. However, increasing operations further (e.g., to 1000) doesn't bring significant changes. <a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f4.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=690,height=354'); return false;">Figure 4b</a> shows the operations per second for 90/10 read-write traffic, which increases from 593k to 2779k (4.69X). In this case, <code>Resolvers</code> and <code>Proxies</code> are CPU saturated.</p>
<p><a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f4.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=690,height=354'); return false;"><img alt="f4.jpg" height="213" src="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f4.jpg" width="415"></a><br>
<strong>Figure 4. Scalability test.</strong></p>
<p>The above experiments study saturated performance. <a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f5.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=696,height=274'); return false;">Figure 5</a> illustrates the client performance on a 24-machine cluster with varying operation rates of 90/10 read-write load. This configuration has 2 <code>Resolvers</code>, 22 <code>LogServers</code>, 22 <code>Proxies</code>, and 336 <code>StorageServers.</code> <a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f5.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=696,height=274'); return false;">Figure 5a</a> shows that the throughput scales linearly with more operations per second (Ops) for both reads and writes. For latency, <a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f5.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=696,height=274'); return false;">Figure 5b</a> shows that when Ops is below 100k, the mean latencies remain stable: about 0.35 ms to read a key, 2 ms to commit, and 1ms to get a read version (GRV). Read is a single-hop operation, thus is faster than the two-hop GRV request. The commit request involves multiple hops and persistence to three <code>LogServers</code>, thus higher latency than reads and GRVs. When Ops exceeds 100 k, all these latencies increase because of more queuing time. At 2m Ops, <code>Resolvers</code> and <code>Proxies</code> are saturated. Batching helps to sustain the throughput but commits latency spike to 368 ms due to saturation.</p>
<p><a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f5.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=696,height=274'); return false;"><img alt="f5.jpg" height="163" src="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f5.jpg" width="415"></a><br>
<strong>Figure 5. Throughput and average latency for different operation rates on a 24-machine cluster configuration.</strong></p>
<p><img alt="*" src="http://dl.acm.org/images/bullet.gif">&nbsp;<strong>4.2. Reconfiguration duration</strong></p>
<p>We collected 289 reconfigurations (i.e., transaction system recovery) traces from our production clusters that typically host hundreds of TBs data. Because of the client-facing nature, short reconfiguration time is critical for the high availability of these clusters. <a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f6.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=420,height=271'); return false;">Figure 6</a> illustrates the cumulative distribution function (CDF) of the reconfiguration times. The median and 90-percentile are 3.08 and 5.28 seconds, respectively. The reason for these short recovery times is that they are not bounded by the data or transaction log size, and are only related to the system metadata sizes. During the recovery, read-write transactions were temporarily blocked and were retried after the timeout. However, client reads were not impacted. The causes of these reconfigurations include automatic failure recovery from software or hardware faults, software upgrades, database configuration changes, and the manual mitigation of production issues.</p>
<p><a href="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f6.jpg" onclick="window.open(this.href, '', 'resizable=yes,status=no,location=no,toolbar=no,menubar=no,fullscreen=no,scrollbars=no,dependent=no,width=420,height=271'); return false;"><img alt="f6.jpg" height="268" src="https://dl.acm.org/cms/attachment/html/10.1145/3592838/assets/html/f6.jpg" width="415"></a><br>
<strong>Figure 6. CDF plot for reconfiguration duration in seconds.</strong></p>

<p><a href="#PageTop">Back to Top</a></p>


<h3>5. Lessons Learned</h3>
<p>This section discusses our experience and lessons of FDB.</p>
<p><img alt="*" src="http://dl.acm.org/images/bullet.gif">&nbsp;<strong>5.1. Architecture design</strong></p>
<p>The divide-and-conquer design principle has proven to be an enabling force for flexible cloud deployment, making the database extensible as well as performant. First, separating the transaction system from the storage layer enables greater flexibility in placing and scaling compute and storage resources independently. An added benefit of <code>LogServers</code> is that they are akin to witness replicas; in some of our multi-region production deployments, <code>LogServers</code> significantly reduce the number of <code>StorageServers</code> (full replicas) required to achieve the same high-availability properties. Further, operators are free to place heterogeneous roles of FDB on different server instance types, optimizing for performance and costs. Second, the decoupling design makes it possible to extend the database functionality, such as our ongoing work of supporting RocksDB<sup><a href="#R13">13</a></sup> as a drop-in replacement for the current SQLite engine. Finally, many of the recent performance improvements are specializing functionality as dedicated roles, for example, separating <code>DataDistributor</code> and <code>Ratekeeper</code> from <code>Sequencer</code>, adding storage cache, dividing <code>Proxies</code> into get-read-version Proxy and commit Proxy. This design pattern successfully allows new features and capabilities to be added frequently.</p>
<p><img alt="*" src="http://dl.acm.org/images/bullet.gif">&nbsp;<strong>5.2. Simulation testing</strong></p>
<p>Simulation testing has enabled FDB to maintain a very high development velocity with a small team by shortening the latency between a bug being introduced and a bug being found, and by allowing deterministic reproduction of issues. Adding additional logging, for instance, generally does not affect the deterministic ordering of events, so an exact reproduction is guaranteed. The productivity of this debugging approach is so much higher than normal production debugging, that in the rare circumstances when a bug was first found "in the wild," the debugging process was almost always first to improve the capabilities or the fidelity of the simulation until the issue could be reproduced there, and only then to begin the normal debugging process. Rigorous correctness testing via simulation makes FDB extremely reliable. In the past several years, CloudKit<sup><a href="#R21">21</a></sup> has deployed FDB for more than 0.5M disk years without a single data corruption event.</p>
<p>It is hard to measure the productivity improvements stemming from increased confidence in the testability of the system. On numerous occasions, the FDB team executed ambitious, ground-up rewrites of major subsystems. Without simulation testing, many of these projects would have been deemed too risky or too difficult, and not even attempted.</p>
<p>The success of simulation has led us to continuously push the boundary of what is amenable to simulation testing by eliminating dependencies and reimplementing them ourselves in Flow. For example, early versions of FDB depended on Apache Zookeeper for coordination, which was deleted after real-world fault injection found two independent bugs in Zookeeper (circa 2010) and was replaced by a de novo Paxos implementation written in Flow. No production bugs have ever been reported since.</p>
<p><img alt="*" src="http://dl.acm.org/images/bullet.gif">&nbsp;<strong>5.3. Fast recovery</strong></p>
<p>Fast recovery is not only useful for improving availability but also greatly simplifies software upgrades and configuration changes and makes them faster. The traditional wisdom of upgrading a distributed system is to perform rolling upgrades so that rollback is possible when something goes wrong. The duration of rolling upgrades can last from hours to days. In contrast, FoundationDB upgrades can be performed by restarting all processes at the same time, which usually finishes within a few seconds. Because this upgrade path has been extensively tested in simulation, all upgrades in Apple's production clusters are performed in this way. Additionally, this upgrade path simplifies protocol compatibility between different versions—we only need to make sure on-disk data is compatible. There is no need to ensure the compatibility of RPC protocols between different software versions.</p>
<p>An interesting discovery is that fast recovery sometimes can automatically heal latent bugs, which is similar to software rejuvenation.<sup><a href="#R16">16</a></sup> For instance, after we separated the <code>DataDistributor</code> role from the <code>Sequencer</code>, we were surprised to discover several unknown bugs in the <code>DataDistributor.</code> This is because, before the change, <code>DataDistributor</code> is restarted with <code>Sequencer</code>, which effectively reinitializes and heals the states of the <code>DataDistributor.</code> After the separation, we made <code>DataDistributor</code> a long-running process independent of transaction system recovery (including <code>Sequencer</code> restart). As a result, the erroneous states of the <code>DataDistributor</code> are never healed and cause test failures.</p>
<p><img alt="*" src="http://dl.acm.org/images/bullet.gif">&nbsp;<strong>5.4. 5s MVCC window</strong></p>
<p>FDB chooses a 5-second MVCC window to limit the memory usage of the transaction system and storage servers because the multi-version data is stored in the memory of <code>Resolvers</code> and <code>StorageServers</code>, which in turn restricts transaction sizes. From our experience, this 5s window is long enough for the majority of OLTP use cases. If a transaction exceeds the time limit, it is often the case that the client application is doing something inefficient, for example, issuing reads one by one instead of parallel reads. As a result, exceeding the time limit often exposes inefficiency in the application.</p>
<p>For some transactions that may span more than 5s, many can be divided into smaller transactions. For instance, the continuous backup process of FDB will scan through the key space and create snapshots of key ranges. Because of the 5s limit, the scanning process is divided into a number of smaller ranges so that each range can be performed within 5s. In fact, this is a common pattern: one transaction creates a number of jobs and each job can be further divided or executed in a transaction. FDB has implemented such a pattern in an abstraction called <code>TaskBucket</code> and the backup system heavily depends on it.</p>

<p><a href="#PageTop">Back to Top</a></p>


<h3>6. Conclusion</h3>
<p>FoundationDB is a key value store designed for OLTP cloud services. The main idea is to decouple transaction processing from logging and storage. Such an unbundled architecture enables the separation and horizontal scaling of both read and write handling. The transaction system combines OCC and MVCC to ensure strict serializability. The decoupling of logging and the determinism in transaction orders greatly simplify recovery, thus, allowing unusually quick recovery time and improving availability. Finally, deterministic and randomized simulation has ensured the correctness of the database implementation.</p>
<p><img alt="*" src="http://dl.acm.org/images/bullet.gif">&nbsp;<strong>Acknowledgments</strong></p>
<p>FoundationDB is still an ongoing effort. We thank Zhe Wu, He Liu, Dan Lambright, Hao Fu, Neethu H. Bingi, Renxuan Wang, Sreenath Bodagala, Yao Xiao, Aaron Molitor, our SRE team, and the Snowflake team for their continuous improvement to the project.</p>

<p><a href="#PageTop">Back to Top</a></p>

<div id="article-references"><h3>References</h3>
<p><a name="R1"></a>1. CouchDB. <a href="https://couchdb.apache.org/">https://couchdb.apache.org/</a>.</p>
<p><a name="R2"></a>2. Flow. <a href="https://github.com/apple/foundationdb/tree/master/flow">https://github.com/apple/foundationdb/tree/master/flow</a>.</p>
<p><a name="R3"></a>3. FoundationDB. <a href="https://github.com/apple/foundationdb">https://github.com/apple/foundationdb</a>.</p>
<p><a name="R4"></a>4. FoundationDB Joshua. <a href="https://github.com/FoundationDB/fdb-joshua">https://github.com/FoundationDB/fdb-joshua</a>.</p>
<p><a name="R5"></a>5. Foundationdb storage adapter for janusgraph. <a href="https://github.com/JanusGraph/janusgraph-foundationdb">https://github.com/JanusGraph/janusgraph-foundationdb</a>.</p>
<p><a name="R6"></a>6. Janusgraph. <a href="https://janusgraph.org/">https://janusgraph.org/</a>.</p>
<p><a name="R7"></a>7. Agha, G. <em>Actors: A Model of Concurrent Computation in Distributed Systems.</em> MIT Press Cambridge, MA, USA, 1986.</p>
<p><a name="R8"></a>8. Bernstein, P.A., Hadzilacos, V., Goodman, N. <em>Concurrency Control and Recovery in Database Systems.</em> Addison-Wesley Boston, MA, USA, 1987.</p>
<p><a name="R9"></a>9. Chockler, G., Malkhi, D. Active disk paxos with infinitely many processes. In <em>ACM PODC</em> (2002).</p>
<p><a name="R10"></a>10. Chrysafis, C., Collins, B., Dugas, S., Dunkelberger, J., Ehsan, M., Gray, S., et al. FoundationDB record layer: A multi-tenant structured datastore. In <em>ACM SIGMOD</em> (2019).</p>
<p><a name="R11"></a>11. Cidon, A., Rumble, S., Stutsman, R., Katti, S., Ousterhout, J., Rosenblum, M. Copysets: Reducing the frequency of data loss in cloud storage. In <em>USENIX Annual Technical Conference</em> (2013).</p>
<p><a name="R12"></a>12. Dean, J., Barroso, L.A. The tail at scale. <em>Commun. ACM 56</em>, 2 (Feb. 2013), 74–80.</p>
<p><a name="R13"></a>13. Facebook. Rocksdb. <a href="https://rocksdb.org/">https://rocksdb.org</a>.</p>
<p><a name="R14"></a>14. Groce, A., Zhang, C., Eide, E., Chen, Y., Regehr, J. Swarm testing. In <em>ACM ISSTA</em> (2012).</p>
<p><a name="R15"></a>15. Hipp, R.D. SQLite. 2020. <a href="https://www.sqlite.org/index.html">https://www.sqlite.org/index.html</a>.</p>
<p><a name="R16"></a>16. Huang, Y., Kintala, C., Kolettis, N., Fulton, N.D. Software rejuvenation: Analysis, module and applications. In <em>Twenty-Fifth International Symposium on Fault-Tolerant Computing</em> (1995), 381–390.</p>
<p><a name="R17"></a>17. Kung, H.T., Robinson, J.T. On optimistic methods for concurrency control. <em>ACM Trans. Database Syst. 6</em>, 2 (1981), 213–226.</p>
<p><a name="R18"></a>18. Leesatapornwongsa, T., Hao, M., Joshi, P., Lukman, J.F., Gunawi, H.S. Samc: Semantic-aware model checking for fast discovery of deep bugs in cloud systems. In <em>USENIX OSDI</em> (2014).</p>
<p><a name="R19"></a>19. Lomet, D., Fekete, A., Weikum, G., Zwilling, M.J. Unbundling transaction services in the cloud. In <em>CIDR</em> (2009).</p>
<p><a name="R20"></a>20. Mohan, C., Haderle, D., Lindsay, B.G., Pirahesh, H., Schwarz, P.M. Aries: A transaction recovery method supporting fine-granularity locking and partial rollbacks using write-ahead logging. <em>ACM Trans. Database Syst. 17</em>, 1 (1992), 94–162.</p>
<p><a name="R21"></a>21. Shraer, A., Aybes, A., Davis, B., Chrysafis, C., Browning, D., Krugler, E., et al. Cloudkit: Structured storage for mobile applications. <em>Proc. VLDB Endow. 11</em>, 5 (Jan. 2018) 540–552.</p>
<p><a name="R22"></a>22. Yabandeh, M., Gómez Ferro, D. A Critique of snapshot isolation. In <em>Proceedings of the 7<sup>th</sup> ACM European Conference on Computer Systems, EuroSys'12</em>, Bern, Switzerland 2012, 155–168.</p>
</div>

<p><a href="#PageTop">Back to Top</a></p>

<div id="article-authorinfo"><h3>Authors</h3>
<p><strong>Jingyu Zhou</strong> (<a href="mailto:jingyu_zhou@apple.com">jingyu_zhou@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>Meng Xu</strong> (<a href="mailto:meng_xu@apple.com">meng_xu@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>Alexander Shraer</strong> (<a href="mailto:alexander@cockroachlabs.com">alexander@cockroachlabs.com</a>), Cockroach Labs, New York, NY, USA.</p>
<p><strong>Bala Namasivayam</strong> (<a href="mailto:bnamasivayam@apple.com">bnamasivayam@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>Alex Miller</strong> (<a href="mailto:alex.r.miller@snowflake.com">alex.r.miller@snowflake.com</a>), Snowflake Inc., San Mateo, CA, USA.</p>
<p><strong>Evan Tschannen</strong> (<a href="mailto:evan.tschannen@snowflake.com">evan.tschannen@snowflake.com</a>), Snowflake Inc., San Mateo, CA, USA.</p>
<p><strong>Steve Atherton</strong> (<a href="mailto:steve.atherton@snowflake.com">steve.atherton@snowflake.com</a>), Snowflake Inc., San Mateo, CA, USA.</p>
<p><strong>Andrew J. Beamon</strong> (<a href="mailto:aj.beamon@snowflake.com">aj.beamon@snowflake.com</a>), Snowflake Inc., San Mateo, CA, USA.</p>
<p><strong>Rusty Sears</strong> (<a href="mailto:russell_sears@apple.com">russell_sears@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>John Leach</strong> (<a href="mailto:john_leach@apple.com">john_leach@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>Dave Rosenthal</strong> (<a href="mailto:daver@apple.com">daver@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>Xin Dong</strong> (<a href="mailto:xind@apple.com">xind@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>Will Wilson</strong> (<a href="mailto:will.wilson@antithesis.com">will.wilson@antithesis.com</a>), Vienna, VA, USA.</p>
<p><strong>Ben Collins</strong> (<a href="mailto:ben.collins@antithesis.com">ben.collins@antithesis.com</a>), Vienna, VA, USA.</p>
<p><strong>David Scherer</strong> (<a href="mailto:david.scherer@antithesis.com">david.scherer@antithesis.com</a>), Vienna, VA, USA.</p>
<p><strong>Alec Grieser</strong> (<a href="mailto:agrieser@apple.com">agrieser@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>Yang Liu</strong> (<a href="mailto:yliu68@apple.com">yliu68@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>Alvin Moore</strong> (<a href="mailto:alvinm@apple.com">alvinm@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>Bhaskar Muppana</strong> (<a href="mailto:g.muppana@snowflake.com">g.muppana@snowflake.com</a>), Snowflake Inc., San Mateo, CA, USA.</p>
<p><strong>Xiaoge Su</strong> (<a href="mailto:xiaoge_su@apple.com">xiaoge_su@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
<p><strong>Vishesh Yadav</strong> (<a href="mailto:vishesh_yadav@apple.com">vishesh_yadav@apple.com</a>), Apple Inc., Cupertino, CA, USA.</p>
</div>

<p><a href="#PageTop">Back to Top</a></p>

<div id="article-footnotes"><h3>Footnotes</h3>
<p>To view the accompanying Technical Perspective, visit <a href="http://doi.acm.org/10.1145/3592837/html">doi.acm.org/10.1145/3592837</a></p>
<p>The original version of this paper, entitled "FoundationDB: A Distributed Unbundled Transactional Key Value Store," was published in SIGMOD '21, June 20–25, 2021, Virtual Event, China; <a href="https://doi.org/10.1145/3448016.3457559">https://doi.org/10.1145/3448016.3457559</a></p>
<p>Before 7.1 release, the <code>ClusterController</code> delegates this work to the new <code>Sequencer.</code></p>
</div>

<div id="article-permission">
<hr><p>Copyright held by authors/owners. Publication rights licensed to ACM.<br>
Request permission to publish from <a href="mailto:permissions@acm.org">permissions@acm.org</a></p>
</div>

<p>The Digital Library is published by the Association for Computing Machinery. Copyright&nbsp;©&nbsp;2023 ACM, Inc.</p>


<hr>

<p>
No entries found
</p>

</div>

<a href="https://cacm.acm.org/magazines/2023/6/273229-foundationdb-a-distributed-key-value-store/fulltext"></a>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Problems of C, and how Zig addresses them (199 pts)]]></title>
            <link>https://avestura.dev/blog/problems-of-c-and-how-zig-addresses-them</link>
            <guid>36572645</guid>
            <pubDate>Mon, 03 Jul 2023 13:33:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://avestura.dev/blog/problems-of-c-and-how-zig-addresses-them">https://avestura.dev/blog/problems-of-c-and-how-zig-addresses-them</a>, See on <a href="https://news.ycombinator.com/item?id=36572645">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>C is a low-level systems programming language with almost no abstraction over memory
(so the memory management is all yours) and with minimal
abstractions over assembly (yet expressive enough to support some general concepts like
having a type system). It is also a very portable programming language, so when
written correctly, it can run on your kitchen toaster even if it has some obscure architecture.</p>
<p>The characteristics of C make it a highly suitable language for its intended purposes.
However, this does not imply that its design decisions are flawless by today's standards.
In this blog post, we will discuss certain issues that have led to multiple attempts at
creating alternative languages aimed at replacing C.</p>
<p>The Zig programming language has garnered considerable attention as a new systems
programming language, positioning itself as <em>the better C</em>. But how does Zig achieve this?
In this blog post, our aim is to examine some of the issues associated with C and explore
how Zig intends to address them.</p>
<h3 id="table-of-differences">Table of Differences</h3>
<ul>
<li><a href="#comptime-over-textual-replacement-preprocessing"><code>Comptime</code> over Textual Replacement Preprocessing</a></li>
<li><a href="#memory-management-and-zig-allocators">Memory Management, and Zig <code>Allocator</code>s</a></li>
<li><a href="#billion-dollar-mistake-vs-zig-optionals">Billion dollar mistake vs Zig Optionals</a></li>
<li><a href="#pointer-arithmetics-vs-zig-slices">Pointer arithmetics vs Zig <code>Slice</code>s</a></li>
<li><a href="#explicit-memory-alignment">Explicit memory alignment</a></li>
<li><a href="#arrays-as-values">Arrays as values</a></li>
<li><a href="#error-handling">Error handling</a></li>
<li><a href="#everything-is-an-expression">Everything is an expression</a></li>
<li><a href="#c-has-a-more-complex-syntax-to-deal-with">C has a more complex syntax to deal with</a></li>
</ul>
<h2 id="comptime-over-textual-replacement-preprocessing"><code>Comptime</code> over Textual Replacement Preprocessing</h2>
<p>Replacing the text in the source code using preprocessors is not exclusive to C. It existed way before the
creation of C and can be traced back to earlier examples such as the SAP assembler for IBM 704 computers.
Below is an example of an AMD64
assembly snippet that defines a <code>pushr</code> macro and substitutes it with either <code>push</code> or <code>pushf</code>
based on its argument:</p>

<p>C being a minimal abstraction over assembly adopted the same method to support macros, which can
easily turn into a foot gun. As a small example:</p>

<p>One might expect this code to set the value of the <code>result</code> to <code>square of (2 + 3) = (2 + 3)^2 = 25</code>.
However, due to the textual replacement nature of the <code>SQUARE</code> macro function, the expansion
results in <code>2 + 3 * 2 + 3</code>, which evaluates to 11, not 25.</p>
<p>To make this work correctly, it is crucial to ensure that all our macros are properly parenthesized:</p>

<p>C will not tolerate such errors, nor will be kind enough to notify you about them. An error can
show itself much later, on another input, in a completely irrelevant part of the program.</p>
<p>Zig, on the other hand, employs a much more intuitive approach for such tasks by introducing <code>comptime</code>
parameters and functions. This enables us to execute functions during compile-time rather than runtime.
Here's the same C <code>SQUARE</code> macro in Zig:</p>

<p>Another advantage of the Zig compiler is its ability to perform type checking on inputs, even if it is <code>anytype</code>.
When calling the <code>square</code> function in Zig, if a type is used that does not support the <code>*</code> operator,
it would result in a compile-time type error:</p>

<p><code>Comptime</code> allows execution of any arbitrary code in compile time:</p>

<p>This Zig program defines a <code>fibonacci</code> function and then calls the function
at compile-time to set the value of <code>foo</code>. No <code>fibonacci</code> is called at runtime.</p>
<p>Zig's comptime evaluations can also cover some of the small C quirks: For instance, in a platform where
the minimum <code>signed</code> value is -2^15=-32768 and the maximum value is (2^15)-1=32767,
it is impossible to write the minimum value of the type <code>signed</code> as a literal constant in C.</p>

<p>That is because in C <code>-32768</code> is actually <code>-1 * 32768</code> and <code>32768</code> is not in the boundaries
of the <code>signed</code> type. In Zig, however, <code>-1 * 32768</code> is a compile time evaluation.</p>

<h2 id="memory-management-and-zig-allocators">Memory Management, and Zig <code>Allocator</code>s</h2>
<p>As I've previously mentioned, C has almost no abstraction over memory. This has pros and cons:</p>
<ul>
<li><strong>Pro</strong>: One has full control over memory and can do whatever one wants with it</li>
<li><strong>Con</strong>: One has full control over memory and can do whatever one wants with it</li>
</ul>
<p>With great power comes great responsibility. Mismanaging memory in a language like C with manual
memory-management can have great security consequences. At best it can result in a denial of service,
and at worst it can let an attacker to execute any arbitrary code. Many languages tried to reduce
that responsibility by either imposing coding restrictions, or by erasing the entire question
using a Garbage Collector. However, Zig adopts a different approach.</p>
<p>Zig offers several advantages simultaneously:</p>
<ul>
<li>Manual Memory Management: You do you. Control over memory is in your hands. No coding restrictions as you see in Rust.</li>
<li>No hidden allocation: Nothing allocates on the heap, without you knowing it and letting it happen.
Zig utilizes the <code>Allocator</code> type to achieve this. Any function that allocates on heap
receives an <code>Allocator</code> as parameter. Anything that doesn't do so won't allocate on heap, guaranteed.</li>
<li>Safety tools to avoid memory leaks e.g. <code>std.heap.GeneralPurposeAllocator</code></li>
</ul>
<p>Zig doesn't limit you on the way you code as Rust does,
helps your remain safe and avoid leaks, but still let you go full rogue as you can do in C. I
personally think it might be a convenient middle ground.</p>

<p>The above Zig code utilized the built-in <code>std.testing.allocator</code> to initialize an <code>ArrayList</code>
and lets you <code>allocate</code> and <code>free</code>, and test if you're leaking memory:</p>


<h2 id="billion-dollar-mistake-vs-zig-optionals">Billion dollar mistake vs Zig Optionals</h2>
<p>This C code crashes abruptly, leaving you no clue other than a <code>SIGSEGV</code> about what the hell is going on:</p>

<p>On the other hand, Zig does not have any <code>null</code> references. It has Optional types instead
denoted by a question mark at the beginning.
You can assign <code>null</code> only to optional types, and you can
only reference them when you have checked if they are not null using <code>orelse</code> keyword or simply
via an <code>if</code> expression. You'll end up facing a compile error otherwise.</p>


<h2 id="pointer-arithmetics-vs-zig-slices">Pointer arithmetics vs Zig <code>Slice</code>s</h2>
<p>In C, an address is represented as a numeric value, which allows developers to perform arithmetic
operations on pointers. This feature enables C developers to access and modify arbitrary memory
locations by manipulating addresses.</p>
<p>Pointer arithmetic is commonly used for tasks such as manipulating or accessing specific parts of
an array or navigating through dynamically allocated memory blocks efficiently, without the need
for copying. However, due to the unforgiving nature of C, pointer arithmetic can easily lead to
issues such as segmentation faults or undefined behavior, making debugging a true pain in the arms.</p>
<p>Most of such issues can be fixed using <code>Slice</code>s. Slices provide a safer and more
intuitive way to manipulate and access arrays or sections of memory:</p>

<h2 id="explicit-memory-alignment">Explicit memory alignment</h2>
<p>Each type has an alignment number which defines the memory addresses
that are considered legal for that type.
Alignment is measured in bytes, and it ensures that the starting address of a variable is evenly
divisible by the alignment value. For example:</p>
<ul>
<li>The <code>u8</code> type has the natural alignment of 1, meaning it can reside in any memory address.</li>
<li>The <code>u16</code> type has the natural alignment of 2, meaning it can only reside in locations of memory with addresses
that are evenly divisible by 2, such as 0, 2, 4, 6, 8, etc...</li>
<li>The <code>u32</code> type has the natural alignment of 4, meaning it can only reside in locations of memory with addresses
that are evenly divisible by 4, such as 0, 4, 8, 12, 16, etc...</li>
</ul>
<p>The CPU enforces these alignment requirements. If a variable's type is not properly aligned,
it can lead to program crashes such as segmentation faults or result in <code>illegal instruction</code> errors.</p>
<p>Now we are going to intentionally create a misaligned pointer to an <code>unsigned int</code> in the code
below. This code will crash on runtime on most CPUs:</p>

<p>Working with low-level languages can brings its own challanges like managing the alignment of
the memory. Making a mistake can cause a crash, and C won't help with that. How about Zig?</p>
<p>Let's write a similar code in Zig:</p>

<p>If you compile the code above, Zig will complain and prevent compiling as there is an alignment issue:</p>

<p>Even if you try to fool zig with an explicit <code>@alignCast</code>, Zig will add a pointer alignment safety check
to the generated code on safe build modes to make sure the pointer is aligned as promised.
So if the alignment is wrong on runtime, it will panic with a message and a trace for you to
have a clue where the problem is coming from. Something that C doesn't do for you:</p>

<p>And on runtime you'll receive:</p>

<p>Cool stuff!</p>
<h2 id="arrays-as-values">Arrays as values</h2>
<p>The semantics of C defines arrays to be always passed as references"</p>

<p>The solution in C is to create a <em>wrapper</em> struct and pass the struct instead:</p>

<p>In Zig it just works:</p>

<h2 id="error-handling">Error handling</h2>
<p>Many C APIs have the concept of error codes where the return value of a function represents
either the success status or an integer indicating the specific error that occurred.</p>
<p>Zig uses the same method to handle errors, but improves upon this concept by capturing it in a
more useful and expressive manner within the type system.</p>
<p>An error set in Zig is like an enum. However, each error name across the entire compilation
gets assigned an unsigned integer greater than 0.</p>
<p>An error set type and a normal type can be combined with the ! operator to form an error
union type (example: <code>FileOpenError!u16</code>).
Values of these types may be an error value, or a value of the normal type.</p>

<p>Zig does have <code>try</code> and <code>catch</code> keywords but they are unrelated to <code>try</code> and <code>catch</code> in other languages as
Zig does not have exceptions.</p>
<p><code>try x</code> is a shortcut for <code>x catch |err| return err</code>, and is commonly used in places where handling an error isn’t appropriate.</p>
<p>Overall, Zig's error handling mechanism is similar to C, but has the type system's support.</p>


<h2 id="everything-is-an-expression">Everything is an expression</h2>
<p>Coming from higher level languages to C, you might have missed features like this:</p>

<p>The beauty of Zig is that you can behave Zig blocks as if they are expressions.</p>

<p>Or for a more complex example:</p>

<p>Every block can have a label like <code>:blk</code> and <code>break</code> from that block with <code>break blk:</code> to return a value.</p>
<h2 id="c-has-a-more-complex-syntax-to-deal-with">C has a more complex syntax to deal with</h2>
<p>Look at this C type:</p>

<p>This declares <code>bar</code> as a constant pointer to the array 5 of the pointer to the function (int) returning a
constant pointer to char. Whatever that means.</p>
<p>There are even tools like <a target="_blank" rel="noopener noreferrer" href="https://cdecl.org/">cdecl.org</a>
which helps you read C types and humanizes them for you. I am pretty sure
it might not be that challenging for practical C developers out there to deal with such types.
Some people are blessed with such abilities to be able to read the language of gods.
But for a simple man like me who rather keep things stupid simple,
Zig types are easier to read and maintain.</p>

<h2 id="conclustion">Conclustion</h2>
<p>In this blog post, we have discussed some of the issues with C that have led people to
seek or create alternatives for this relic of the past.</p>
<p>Zig, in summary, tackles these problems by:</p>
<ul>
<li>Zig Comptimes</li>
<li>Zig Allocators</li>
<li>Zig Optionals</li>
<li>Zig Slices</li>
<li>Zig Explicit Alignment</li>
<li>Zig Arrays</li>
<li>Zig error types</li>
<li>Zig expressions</li>
</ul>

<ul>
<li><a href="https://avestura.dev/blog/ideal-programming-language">An opinion on what's a good general-purpose programming language</a></li>
</ul>
<h2 id="appreciation">Appreciation</h2>
<p>Thanks to my friend <a target="_blank" rel="noopener noreferrer" href="https://github.com/trgwii">Thomas</a> for technically reviewing this blog post.</p>
<h2 id="references">References</h2>
<p>These are some of the references used to write this article:</p>
<ul>
<li>Gustedt, J. (2019). Modern C. Manning.</li>
<li>Zhirkov, I. (2017). Low-Level Programming: C, Assembly, and Program Execution on Intel x86-64 Architecture. Apress.</li>
<li>Zig Language Reference. [Online]. <a target="_blank" rel="noopener noreferrer" href="https://ziglang.org/documentation/master">ziglang.org/documentation/master</a></li>
<li>Zig Learn. [Online]. <a target="_blank" rel="noopener noreferrer" href="https://ziglearn.org/">ziglearn.org</a></li>
</ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Self-Driving Cars Are Surveillance Cameras on Wheels (250 pts)]]></title>
            <link>https://www.schneier.com/blog/archives/2023/07/self-driving-cars-are-surveillance-cameras-on-wheels.html</link>
            <guid>36572401</guid>
            <pubDate>Mon, 03 Jul 2023 13:11:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.schneier.com/blog/archives/2023/07/self-driving-cars-are-surveillance-cameras-on-wheels.html">https://www.schneier.com/blog/archives/2023/07/self-driving-cars-are-surveillance-cameras-on-wheels.html</a>, See on <a href="https://news.ycombinator.com/item?id=36572401">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-67500">

	<div>

		
		<p>Police are <a href="https://www.bloomberg.com/news/articles/2023-06-29/self-driving-car-video-from-waymo-cruise-give-police-crime-evidence?sref=P6Q0mxvj">already using</a> self-driving car footage as video evidence:</p>
<blockquote><p>While security cameras are commonplace in American cities, self-driving cars represent a new level of access for law enforcement ­ and a new method for encroachment on privacy, advocates say. Crisscrossing the city on their routes, self-driving cars capture a wider swath of footage. And it’s easier for law enforcement to turn to one company with a large repository of videos and a dedicated response team than to reach out to all the businesses in a neighborhood with security systems.</p>
<p>“We’ve known for a long time that they are essentially surveillance cameras on wheels,” said Chris Gilliard, a fellow at the Social Science Research Council. “We’re supposed to be able to go about our business in our day-to-day lives without being surveilled unless we are suspected of a crime, and each little bit of this technology strips away that ability.”</p>
<p>[…]</p>
<p>While self-driving services like Waymo and Cruise have yet to achieve the same level of market penetration as Ring, the wide range of video they capture while completing their routes presents other opportunities. In addition to the San Francisco homicide, Bloomberg’s review of court documents shows police have sought footage from Waymo and Cruise to help solve hit-and-runs, burglaries, aggravated assaults, a fatal collision and an attempted kidnapping.</p>
<p>In all cases reviewed by Bloomberg, court records show that police collected footage from Cruise and Waymo shortly after obtaining a warrant. In several cases, Bloomberg could not determine whether the recordings had been used in the resulting prosecutions; in a few of the cases, law enforcement and attorneys said the footage had not played a part, or was only a formality. However, video evidence has become a lynchpin of criminal cases, meaning it’s likely only a matter of time.</p></blockquote>

		
			<p>
				<span>Tags: <a href="https://www.schneier.com/tag/cars/" rel="tag">cars</a>, <a href="https://www.schneier.com/tag/crime/" rel="tag">crime</a>, <a href="https://www.schneier.com/tag/law-enforcement/" rel="tag">law enforcement</a>, <a href="https://www.schneier.com/tag/privacy/" rel="tag">privacy</a>, <a href="https://www.schneier.com/tag/surveillance/" rel="tag">surveillance</a></span>			</p>

		
		
		<p>
			<a href="https://www.schneier.com/blog/archives/2023/07/self-driving-cars-are-surveillance-cameras-on-wheels.html" rel="bookmark">Posted on July 3, 2023 at 7:04 AM</a>			•
			<a href="https://www.schneier.com/blog/archives/2023/07/self-driving-cars-are-surveillance-cameras-on-wheels.html#comments">4 Comments</a>		</p>

		
	</div>

</article><p id="powered">Sidebar photo of Bruce Schneier by Joe MacInnis.</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SUSE Liberty Linux:  secure your Linux future without fear of vendor lock-in. (169 pts)]]></title>
            <link>https://www.suse.com/products/suse-liberty-linux/</link>
            <guid>36571951</guid>
            <pubDate>Mon, 03 Jul 2023 12:29:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.suse.com/products/suse-liberty-linux/">https://www.suse.com/products/suse-liberty-linux/</a>, See on <a href="https://news.ycombinator.com/item?id=36571951">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <div>
                <h2>
                    <p>Top 4 Features</p>

<p><small>SUSE Liberty Linux</small></p>

                </h2>
                                <p>Running and maintaining a heterogeneous OS environment is hard; but your diverse workloads depend on it. With SUSE Liberty Linux, you get a world-class support and management solution for your entire Linux estate – from the core to the cloud and all the way to the edge – with no <a href="https://www.suse.com/suse-defines/definition/vendor-lock-in/">vendor lock-in</a>.</p>
                                            </div>
                        <div>
                                            <div>
                                <h4>Run workloads where they run best</h4>
                                                                    <p>Diverse workloads don’t always run on a single vendor solution. With SUSE Liberty Linux, you get trusted support with optional proven management tools that are optimized for mixed Linux environments, including RHEL, CentOS, and as you would expect openSUSE and SUSE Linux Enterprise Server. Get your support and maintenance patches from a leader in open source, with three decades of experience. Secure your future with SUSE Liberty Linux.</p>

                                                            </div>
                                            <div>
                                <h4>World class support</h4>
                                                                    <p>Simplify your customer experience and get world-class support. With SUSE as your trusted partner, you will be entitled to the broadest range of support options that include 24/7/365 follow the sun access to our global team, SLAs that support your business critical environment and complete transparency with ongoing communication from problem identification to resolution. SUSE Technical Support is always on, experienced and will treat you like family.</p>

                                                            </div>
                                            <div>
                                <h4>Automated IT management</h4>
                                                                    <p>Disparate systems often cause IT Management headaches. Cure those pains with automation. SUSE Liberty Linux works hand-in-glove with SUSE Manager. Streamline your mixed Linux OS operations from core to cloud to edge through a single pane of glass. Break through IT complexity and regain control of your IT assets by automating software updates and security patches for whole systems or individual packages.</p>

                                                            </div>
                                            <div>
                                <h4>Zero disruptions, Complete compatibility</h4>
                                                                    <p>With SUSE Liberty Linux, you can rest assured knowing that all maintenance and security patches are fully tested to be fully compatible, with RHEL and CentOS, from the source code and binaries to the integrity of the kernel application binary interface. Regularly released binary compatible security patches and maintenance updates ensures your entire mixed Linux estate is up-to-date and secure, ensuring high availability, resilient storage, and bullet proof load balancing.</p>

                                                            </div>
                                    </div>
                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Data-Oriented Design (2018) (273 pts)]]></title>
            <link>https://www.dataorienteddesign.com/dodbook/dodmain.html</link>
            <guid>36571110</guid>
            <pubDate>Mon, 03 Jul 2023 10:41:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.dataorienteddesign.com/dodbook/dodmain.html">https://www.dataorienteddesign.com/dodbook/dodmain.html</a>, See on <a href="https://news.ycombinator.com/item?id=36571110">Hacker News</a></p>
<div id="readability-page-1" class="page">


<!--End of Navigation Panel-->
<tt>Online release of Data-Oriented Design : <br>This is the free, online, reduced version. Some inessential chapters are excluded from this version, but in the spirit of this being an education resource, the essentials are present for anyone wanting to learn about data-oriented design.<br>Expect some odd formatting and some broken images and listings as this is auto generated and the Latex to html converters available are not perfect. If the source code listing is broken, you should be able to find the referenced source on <a href="https://github.com/raspofabs/dodbooksourcecode/">github</a>. If you like what you read here, consider purchasing the real paper book from <a href="https://www.amazon.com/dp/1916478700">here</a>, as not only will it look a lot better, but it will help keep this version online for those who cannot afford to buy it. Please send any feedback to <a href="mailto:support@dataorienteddesign.com">support@dataorienteddesign.com</a></tt>


<p><strong>Richard Fabian</strong>
</p>
<hr>

<br><hr>
<!--Table of Child-Links-->
<a name="CHILD_LINKS"></a>

<ul>
<li><a name="tex2html46" href="https://www.dataorienteddesign.com/dodbook/node1.html">Contents</a>
</li><li><a name="tex2html47" href="https://www.dataorienteddesign.com/dodbook/node2.html">Data-Oriented Design</a>
<ul>
<li><a name="tex2html48" href="https://www.dataorienteddesign.com/dodbook/node2.html#SECTION00210000000000000000">It's all about the data</a>
</li><li><a name="tex2html49" href="https://www.dataorienteddesign.com/dodbook/node2.html#SECTION00220000000000000000">Data is not the problem domain</a>
</li><li><a name="tex2html50" href="https://www.dataorienteddesign.com/dodbook/node2.html#SECTION00230000000000000000">Data and statistics</a>
</li><li><a name="tex2html51" href="https://www.dataorienteddesign.com/dodbook/node2.html#SECTION00240000000000000000">Data can change</a>
</li><li><a name="tex2html52" href="https://www.dataorienteddesign.com/dodbook/node2.html#SECTION00250000000000000000">How is data formed?</a>
</li><li><a name="tex2html53" href="https://www.dataorienteddesign.com/dodbook/node2.html#SECTION00260000000000000000">The framework</a>
</li><li><a name="tex2html54" href="https://www.dataorienteddesign.com/dodbook/node2.html#SECTION00270000000000000000">Conclusions and takeaways</a>
</li></ul>
<br>
</li><li><a name="tex2html55" href="https://www.dataorienteddesign.com/dodbook/node3.html">Relational Databases</a>
<ul>
<li><a name="tex2html56" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00310000000000000000">Complex state</a>
</li><li><a name="tex2html57" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00320000000000000000">The framework</a>
</li><li><a name="tex2html58" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00330000000000000000">Normalising your data</a>
</li><li><a name="tex2html59" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00340000000000000000">Normalisation</a>
<ul>
<li><a name="tex2html60" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00341000000000000000">Primary keys</a>
</li><li><a name="tex2html61" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00342000000000000000">1<sup>st</sup> Normal Form</a>
</li><li><a name="tex2html62" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00343000000000000000">2<sup>nd</sup> Normal Form</a>
</li><li><a name="tex2html63" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00344000000000000000">3<sup>rd</sup> Normal Form</a>
</li><li><a name="tex2html64" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00345000000000000000">Boyce-Codd Normal Form</a>
</li><li><a name="tex2html65" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00346000000000000000">Domain Key / Knowledge</a>
</li><li><a name="tex2html66" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00347000000000000000">Reflections</a>
</li></ul>
</li><li><a name="tex2html67" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00350000000000000000">Operations</a>
</li><li><a name="tex2html68" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00360000000000000000">Summing up</a>
</li><li><a name="tex2html69" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00370000000000000000">Stream Processing</a>
</li><li><a name="tex2html70" href="https://www.dataorienteddesign.com/dodbook/node3.html#SECTION00380000000000000000">Why does database technology matter?</a>
</li></ul>
<br>
</li><li><a name="tex2html71" href="https://www.dataorienteddesign.com/dodbook/node4.html">Existential Processing</a>
<ul>
<li><a name="tex2html72" href="https://www.dataorienteddesign.com/dodbook/node4.html#SECTION00410000000000000000">Complexity</a>
</li><li><a name="tex2html73" href="https://www.dataorienteddesign.com/dodbook/node4.html#SECTION00420000000000000000">Debugging</a>
</li><li><a name="tex2html74" href="https://www.dataorienteddesign.com/dodbook/node4.html#SECTION00430000000000000000">Why use an if</a>
</li><li><a name="tex2html75" href="https://www.dataorienteddesign.com/dodbook/node4.html#SECTION00440000000000000000">Types of processing</a>
</li><li><a name="tex2html76" href="https://www.dataorienteddesign.com/dodbook/node4.html#SECTION00450000000000000000">Don't use booleans</a>
</li><li><a name="tex2html77" href="https://www.dataorienteddesign.com/dodbook/node4.html#SECTION00460000000000000000">Don't use enums quite as much</a>
</li><li><a name="tex2html78" href="https://www.dataorienteddesign.com/dodbook/node4.html#SECTION00470000000000000000">Prelude to polymorphism</a>
</li><li><a name="tex2html79" href="https://www.dataorienteddesign.com/dodbook/node4.html#SECTION00480000000000000000">Dynamic runtime polymorphism</a>
</li><li><a name="tex2html80" href="https://www.dataorienteddesign.com/dodbook/node4.html#SECTION00490000000000000000">Event handling</a>
</li></ul>
<br>
</li><li><a name="tex2html81" href="https://www.dataorienteddesign.com/dodbook/node5.html">Component Based Objects</a>
<ul>
<li><a name="tex2html82" href="https://www.dataorienteddesign.com/dodbook/node5.html#SECTION00510000000000000000">Components in the wild</a>
</li><li><a name="tex2html83" href="https://www.dataorienteddesign.com/dodbook/node5.html#SECTION00520000000000000000">Away from the hierarchy</a>
</li><li><a name="tex2html84" href="https://www.dataorienteddesign.com/dodbook/node5.html#SECTION00530000000000000000">Towards managers</a>
</li><li><a name="tex2html85" href="https://www.dataorienteddesign.com/dodbook/node5.html#SECTION00540000000000000000">There is no entity</a>
</li></ul>
<br>
</li><li><a name="tex2html86" href="https://www.dataorienteddesign.com/dodbook/node6.html">Hierarchical Level of Detail</a>
<ul>
<li><a name="tex2html87" href="https://www.dataorienteddesign.com/dodbook/node6.html#SECTION00610000000000000000">Existence</a>
</li><li><a name="tex2html88" href="https://www.dataorienteddesign.com/dodbook/node6.html#SECTION00620000000000000000">Mementos</a>
</li><li><a name="tex2html89" href="https://www.dataorienteddesign.com/dodbook/node6.html#SECTION00630000000000000000">JIT mementos</a>
</li><li><a name="tex2html90" href="https://www.dataorienteddesign.com/dodbook/node6.html#SECTION00640000000000000000">Alternative axes</a>
<ul>
<li><a name="tex2html91" href="https://www.dataorienteddesign.com/dodbook/node6.html#SECTION00641000000000000000">The true measure</a>
</li><li><a name="tex2html92" href="https://www.dataorienteddesign.com/dodbook/node6.html#SECTION00642000000000000000">Beyond space</a>
</li></ul>
</li><li><a name="tex2html93" href="https://www.dataorienteddesign.com/dodbook/node6.html#SECTION00650000000000000000">Collective LOD</a>
</li></ul>
<br>
</li><li><a name="tex2html94" href="https://www.dataorienteddesign.com/dodbook/node7.html">Searching</a>
<ul>
<li><a name="tex2html95" href="https://www.dataorienteddesign.com/dodbook/node7.html#SECTION00710000000000000000">Indexes</a>
</li><li><a name="tex2html96" href="https://www.dataorienteddesign.com/dodbook/node7.html#SECTION00720000000000000000">Data-oriented Lookup</a>
</li><li><a name="tex2html97" href="https://www.dataorienteddesign.com/dodbook/node7.html#SECTION00730000000000000000">Finding low and high</a>
</li><li><a name="tex2html98" href="https://www.dataorienteddesign.com/dodbook/node7.html#SECTION00740000000000000000">Finding random</a>
</li></ul>
<br>
</li><li><a name="tex2html99" href="https://www.dataorienteddesign.com/dodbook/node8.html">Sorting</a>
<ul>
<li><a name="tex2html100" href="https://www.dataorienteddesign.com/dodbook/node8.html#SECTION00810000000000000000">Do you need to?</a>
</li><li><a name="tex2html101" href="https://www.dataorienteddesign.com/dodbook/node8.html#SECTION00820000000000000000">Maintaining</a>
</li><li><a name="tex2html102" href="https://www.dataorienteddesign.com/dodbook/node8.html#SECTION00830000000000000000">Sorting for your platform</a>
</li></ul>
<br>
</li><li><a name="tex2html103" href="https://www.dataorienteddesign.com/dodbook/node9.html">Optimisations</a>
<ul>
<li><a name="tex2html104" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00910000000000000000">When should we optimise?</a>
</li><li><a name="tex2html105" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00920000000000000000">Feedback</a>
<ul>
<li><a name="tex2html106" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00921000000000000000">Know your limits</a>
</li></ul>
</li><li><a name="tex2html107" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00930000000000000000">A strategy</a>
<ul>
<li><a name="tex2html108" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00931000000000000000">Define the problem</a>
</li><li><a name="tex2html109" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00932000000000000000">Measure</a>
</li><li><a name="tex2html110" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00933000000000000000">Analyse</a>
</li><li><a name="tex2html111" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00934000000000000000">Implement</a>
</li><li><a name="tex2html112" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00935000000000000000">Confirm</a>
</li><li><a name="tex2html113" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00936000000000000000">Summary</a>
</li></ul>
</li><li><a name="tex2html114" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00940000000000000000">Tables</a>
</li><li><a name="tex2html115" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00950000000000000000">Transforms</a>
</li><li><a name="tex2html116" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00960000000000000000">Spatial sets</a>
</li><li><a name="tex2html117" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00970000000000000000">Lazy evaluation</a>
</li><li><a name="tex2html118" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00980000000000000000">Necessity</a>
</li><li><a name="tex2html119" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION00990000000000000000">Varying length sets</a>
</li><li><a name="tex2html120" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION009100000000000000000">Joins as intersections</a>
</li><li><a name="tex2html121" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION009110000000000000000">Data-driven techniques</a>
<ul>
<li><a name="tex2html122" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION009111000000000000000">SIMD</a>
</li></ul>
</li><li><a name="tex2html123" href="https://www.dataorienteddesign.com/dodbook/node9.html#SECTION009120000000000000000">Structs of arrays</a>
</li></ul>
<br>
</li><li><a name="tex2html124" href="https://www.dataorienteddesign.com/dodbook/node10.html">Helping the compiler</a>
<ul>
<li><a name="tex2html125" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION001010000000000000000">Reducing order dependence</a>
</li><li><a name="tex2html126" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION001020000000000000000">Reducing memory dependency</a>
</li><li><a name="tex2html127" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION001030000000000000000">Write buffer awareness</a>
</li><li><a name="tex2html128" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION001040000000000000000">Aliasing</a>
</li><li><a name="tex2html129" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION001050000000000000000">Return value optimisation</a>
</li><li><a name="tex2html130" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION001060000000000000000">Cache line utilisation</a>
</li><li><a name="tex2html131" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION001070000000000000000">False sharing</a>
</li><li><a name="tex2html132" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION001080000000000000000">Speculative execution awareness</a>
</li><li><a name="tex2html133" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION001090000000000000000">Branch prediction</a>
</li><li><a name="tex2html134" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION0010100000000000000000">Don't get evicted</a>
</li><li><a name="tex2html135" href="https://www.dataorienteddesign.com/dodbook/node10.html#SECTION0010110000000000000000">Auto vectorisation</a>
</li></ul>
<br>
</li><li><a name="tex2html136" href="https://www.dataorienteddesign.com/dodbook/node11.html">Maintenance and reuse</a>
<ul>
<li><a name="tex2html137" href="https://www.dataorienteddesign.com/dodbook/node11.html#SECTION001110000000000000000">Cosmic hierarchies</a>
</li><li><a name="tex2html138" href="https://www.dataorienteddesign.com/dodbook/node11.html#SECTION001120000000000000000">Debugging</a>
<ul>
<li><a name="tex2html139" href="https://www.dataorienteddesign.com/dodbook/node11.html#SECTION001121000000000000000">Lifetimes</a>
</li><li><a name="tex2html140" href="https://www.dataorienteddesign.com/dodbook/node11.html#SECTION001122000000000000000">Avoiding pointers</a>
</li><li><a name="tex2html141" href="https://www.dataorienteddesign.com/dodbook/node11.html#SECTION001123000000000000000">Bad State</a>
</li></ul>
</li><li><a name="tex2html142" href="https://www.dataorienteddesign.com/dodbook/node11.html#SECTION001130000000000000000">Reusability</a>
</li><li><a name="tex2html143" href="https://www.dataorienteddesign.com/dodbook/node11.html#SECTION001140000000000000000">Reusable functions</a>
</li><li><a name="tex2html144" href="https://www.dataorienteddesign.com/dodbook/node11.html#SECTION001150000000000000000">Unit testing</a>
</li><li><a name="tex2html145" href="https://www.dataorienteddesign.com/dodbook/node11.html#SECTION001160000000000000000">Refactoring</a>
</li></ul>
<br>
</li><li><a name="tex2html146" href="https://www.dataorienteddesign.com/dodbook/node12.html">What's wrong?</a>
<ul>
<li><a name="tex2html147" href="https://www.dataorienteddesign.com/dodbook/node12.html#SECTION001210000000000000000">The harm</a>
</li><li><a name="tex2html148" href="https://www.dataorienteddesign.com/dodbook/node12.html#SECTION001220000000000000000">Mapping the problem</a>
</li><li><a name="tex2html149" href="https://www.dataorienteddesign.com/dodbook/node12.html#SECTION001230000000000000000">Internalised state</a>
</li><li><a name="tex2html150" href="https://www.dataorienteddesign.com/dodbook/node12.html#SECTION001240000000000000000">Instance oriented development</a>
</li><li><a name="tex2html151" href="https://www.dataorienteddesign.com/dodbook/node12.html#SECTION001250000000000000000">Hierarchical design vs change</a>
</li><li><a name="tex2html152" href="https://www.dataorienteddesign.com/dodbook/node12.html#SECTION001260000000000000000">Divisions of labour</a>
</li><li><a name="tex2html153" href="https://www.dataorienteddesign.com/dodbook/node12.html#SECTION001270000000000000000">Reusable generic code</a>
</li></ul>
<br>
</li><li><a name="tex2html154" href="https://www.dataorienteddesign.com/dodbook/node13.html">About this document ...</a>
</li></ul>
<!--End of Table of Child-Links-->
<br><hr>
<address>
Richard Fabian
2018-10-08
</address>


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Wikipedia switches to CC BY-SA 4.0 license (140 pts)]]></title>
            <link>https://diff.wikimedia.org/2023/06/29/stepping-into-the-future-wikimedia-projects-transition-to-creative-commons-4-0-license/</link>
            <guid>36570714</guid>
            <pubDate>Mon, 03 Jul 2023 09:35:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://diff.wikimedia.org/2023/06/29/stepping-into-the-future-wikimedia-projects-transition-to-creative-commons-4-0-license/">https://diff.wikimedia.org/2023/06/29/stepping-into-the-future-wikimedia-projects-transition-to-creative-commons-4-0-license/</a>, See on <a href="https://news.ycombinator.com/item?id=36570714">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-96580">
	<div>
			
<p><em>The Wikimedia Foundation is excited to announce the update to our license to Creative Commons Attribution-ShareAlike 4.0, one of the main changes of our recent Terms of Use update, which brings the Wikimedia projects up to the latest version of the Creative Commons licenses.</em></p>



<figure><a href="https://diff.wikimedia.org/?attachment_id=96581"><img decoding="async" src="https://diff.wikimedia.org/wp-content/uploads/2023/06/Creative-Commons-Attribution-ShareAlike-badge.png?w=1024&amp;resize=823%2C288" alt="An image of the Creative Commons Attribution-ShareAlike badge" width="823" height="288" srcset="https://diff.wikimedia.org/wp-content/uploads/2023/06/Creative-Commons-Attribution-ShareAlike-badge.png?w=2560 2560w, https://diff.wikimedia.org/wp-content/uploads/2023/06/Creative-Commons-Attribution-ShareAlike-badge.png?w=300 300w, https://diff.wikimedia.org/wp-content/uploads/2023/06/Creative-Commons-Attribution-ShareAlike-badge.png?w=768 768w, https://diff.wikimedia.org/wp-content/uploads/2023/06/Creative-Commons-Attribution-ShareAlike-badge.png?w=1024&amp;resize=823%2C288 1024w, https://diff.wikimedia.org/wp-content/uploads/2023/06/Creative-Commons-Attribution-ShareAlike-badge.png?w=1536 1536w, https://diff.wikimedia.org/wp-content/uploads/2023/06/Creative-Commons-Attribution-ShareAlike-badge.png?w=2048 2048w" sizes="(max-width: 823px) 100vw, 823px" data-recalc-dims="1"></a><figcaption>The Creative Commons Attribution-ShareAlike badge. Image by <a href="https://creativecommons.org/">Creative Commons</a>, <a href="https://creativecommons.org/licenses/by-sa/4.0/deed.en">CC BY-SA 4.0</a>, via <a href="https://creativecommons.org/about/downloads/">Creative Commons</a>.</figcaption></figure>



<div><p>We are glad to announce an exciting change that is now effective on many Wikimedia projects as part of our recent <a href="https://meta.wikimedia.org/wiki/Wikimedia_Foundation_Legal_department/2023_ToU_updates">Terms of Use (ToU) update</a>: Wikimedia project licensing has been updated from Creative Commons Attribution-ShareAlike 3.0 (CC BY-SA 3.0) to Creative Commons Attribution-ShareAlike 4.0 (CC BY-SA 4.0).</p><p>In this blog post, we’ll discuss what this update means to users and how it’ll positively impact the millions of volunteers who contribute to, reshare, and remix Wikipedia daily.</p></div>



<h2><strong>What are Creative Commons licenses, and why are they important to free knowledge and Wikimedia projects?</strong></h2>



<div><p>Creative Commons licenses are legal tools that enable everyone contributing to a massive, decentralized project like Wikipedia to create free culture content! Content that’s contributed to the Wikimedia projects under a Creative Commons license gives others permission to reuse and remix that content. That enables the projects to make knowledge available to people around the world, free of charge.&nbsp;</p><p>Creative Commons licensing allows creators—like Wikipedia editors—to retain copyright while permitting reusers—people who use Creative Commons content in their own works to help share knowledge—to copy, distribute, and republish the work in question as long as they follow two main conditions: The “Attribution” limitation means that a reuser must give credit to the original author; the “Share Alike” limitation means that reusers must share any adaptations they make under the same or an equivalent license. In this way, Creative Commons licenses enable knowledge to be widely adapted, help keep new knowledge freely available as people develop it, and contribute to making sure that the people who receive and use the knowledge in question are informed where that knowledge comes from so they can know its source and continue to contribute to it themselves.</p></div>



<h2><strong>Why did we update our license to CC BY-SA 4.0?</strong></h2>



<p>Wikipedia’s update to the <a href="https://creativecommons.org/licenses/by-sa/4.0/">CC BY-SA 4.0</a> license, from the previous <a href="https://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA 3.0</a> license, helps to make the project more accessible, globally compatible, simplified, and readable.</p>



<p><span>1. New sources for knowledge</span></p>



<p>For years, new knowledge created under the 4.0 license could not be <em>directly</em> added to Wikipedia. Now it can! For example, United Nations (UN) bodies and <a href="https://wiki.creativecommons.org/wiki/Government_use_of_Creative_Commons">national governments</a> have licensed their publications under 4.0, and these did not match the older versions of the license. Now, publications such as those from the UN can be uploaded directly to the Wikimedia projects to provide sources, quotations, or descriptions in articles. This opens a large area of new material for the projects to work with and build on, and helps everyone move closer to the vision of making the world’s knowledge freely available for anyone, anywhere.&nbsp;</p>



<p><span>2. Internationalization</span></p>



<p>The 4.0 license has been designed to be a <em>global </em>license. With 3.0, there were multiple versions of the license, which varied depending on the country in which they were used. Now, with 4.0, the single license is applicable worldwide, <a href="https://wiki.creativecommons.org/wiki/Legal_Tools_Translation">with official translations in over 30 languages—and with many more to come!</a> This eliminates the need for different ported versions of the license, that is to say, with changed language made for use in a specific jurisdiction. It also eliminates the need for users to make translations of those ports themselves. This universality fosters increased global collaboration across projects and national borders, hence making this change crucial to achieving the 2030 Wikimedia movement goals.</p>



<p><span>3. Attribution requirements are streamlined</span></p>



<p>With version 4.0, it is easier for reusers to understand how to credit the original author of the work. For example, it clarifies that linking to a webpage with attribution information is allowable, which is helpful since doing so has already become a common method of providing attribution. It also enables people to fix attribution mistakes within a reasonable time: this is important to help address simple mistakes without the need for overly aggressive copyright enforcement demands, and makes free knowledge content safer to use for people, anywhere in the world, who may be discovering and experimenting with contributing free content for the first time.&nbsp;</p>



<p>4<span>. The license text itself is more readable</span></p>



<p>The side-by-side comparison of the licenses that we have provided below shows how the license language is now clearer to read. This is important because it helps people who contribute to projects like Wikipedia, as well as people who want to use information on Wikipedia in their own work, understand the license. Clearer, better-organized texts mean fewer attribution errors and broader use of this material for the public good.</p>



<figure><a href="https://diff.wikimedia.org/?attachment_id=96587"><img decoding="async" loading="lazy" width="1024" height="543" src="https://diff.wikimedia.org/wp-content/uploads/2023/06/Screen-Shot-2023-06-28-at-1.06.51-PM.png?resize=1024%2C543" alt="An image featuring a side-by-side comparison of some of the text from the CC BY-SA 3.0 and CC BY-SA 4.0 licenses, which shows that the new version is more concise " srcset="https://diff.wikimedia.org/wp-content/uploads/2023/06/Screen-Shot-2023-06-28-at-1.06.51-PM.png?w=1206 1206w, https://diff.wikimedia.org/wp-content/uploads/2023/06/Screen-Shot-2023-06-28-at-1.06.51-PM.png?w=300 300w, https://diff.wikimedia.org/wp-content/uploads/2023/06/Screen-Shot-2023-06-28-at-1.06.51-PM.png?w=768 768w, https://diff.wikimedia.org/wp-content/uploads/2023/06/Screen-Shot-2023-06-28-at-1.06.51-PM.png?w=1024 1024w" sizes="(max-width: 1024px) 100vw, 1024px" data-recalc-dims="1"></a><figcaption>Side-by-side comparison of some of the text from the CC BY-SA 3.0 (left) and CC BY-SA 4.0 (right) licenses, illustrating how the new version is more concise.</figcaption></figure>



<p>You can find out more about what is new in 4.0 in <a href="https://creativecommons.org/version4/">this explainer from Creative Commons</a>.</p>



<h2><strong>Conclusion</strong></h2>



<p>The update to CC BY-SA 4.0 will help the Wikimedia projects continue to thrive as open, collaborative platforms for sharing free knowledge. The update makes the projects’ content more adaptable and usable for the global community, makes large amounts of new material compatible with the Wikimedia projects, and aligns our platform with the latest standards in open licensing.&nbsp;</p>



<p>We are excited about this new chapter of more modern, flexible, and easy-to-use licensing of free knowledge. Volunteer editors have already started the process of updating the relevant policy documents on-wiki so that we can operationalize this change and better communicate it to volunteers across the various Wikimedia projects and languages. If you see a webpage with an out-of-date license version, please feel free to update it!</p>
				<div id="translate-post">
					<p><img src="https://diff.wikimedia.org/wp-content/themes/interconnection/assets/images/translate-post.jpg" alt="">
					</p>

					<div>
						<h2>Can you help us translate this article?</h2>

						<p>In order for this article to reach as many people as possible we would like your help. Can you translate this article to get the message out?</p>

													<p><a href="https://diff.wikimedia.org/wp-login.php?redirect_to=%2F2023%2F06%2F29%2Fstepping-into-the-future-wikimedia-projects-transition-to-creative-commons-4-0-license%2F%23translate-post">Start translation</a>
												</p></div>
				</div>
				
		</div>

	<!-- .entry-footer -->

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Perl 5.38 (164 pts)]]></title>
            <link>https://perldoc.perl.org/perl5380delta</link>
            <guid>36569727</guid>
            <pubDate>Mon, 03 Jul 2023 07:04:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://perldoc.perl.org/perl5380delta">https://perldoc.perl.org/perl5380delta</a>, See on <a href="https://news.ycombinator.com/item?id=36569727">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="wrapperlicious">
        
        <h2><a id="toc">CONTENTS</a></h2>
                  <ul>
              <li>
                <a href="#NAME">NAME</a>
              </li>
              <li>
                <a href="#DESCRIPTION">DESCRIPTION</a>
              </li>
              <li>
                <a href="#Core-Enhancements">Core Enhancements</a>
                            <ul>
              <li>
                <a href="#New-class-Feature">New class Feature</a>
              </li>
              <li>
                <a href="#Unicode-15.0-is-supported">Unicode 15.0 is supported</a>
              </li>
              <li>
                <a href="#Deprecation-warnings-now-have-specific-subcategories">Deprecation warnings now have specific subcategories</a>
              </li>
              <li>
                <a href="#%25%7B%5EHOOK%7D-API-introduced">%{^HOOK} API introduced</a>
              </li>
              <li>
                <a href="#PERL_RAND_SEED">PERL_RAND_SEED</a>
              </li>
              <li>
                <a href="#Defined-or-and-logical-or-assignment-default-expressions-in-signatures">Defined-or and logical-or assignment default expressions in signatures</a>
              </li>
              <li>
                <a href="#@INC-Hook-Enhancements-and-$INC-and-INCDIR">@INC Hook Enhancements and $INC and INCDIR</a>
              </li>
              <li>
                <a href="#Forbidden-control-flow-out-of-defer-or-finally-now-detected-at-compile-time">Forbidden control flow out of defer or finally now detected at compile-time</a>
              </li>
              <li>
                <a href="#Optimistic-Eval-in-Patterns">Optimistic Eval in Patterns</a>
              </li>
              <li>
                <a href="#REG_INF-has-been-raised-from-65,536-to-2,147,483,647">REG_INF has been raised from 65,536 to 2,147,483,647</a>
              </li>
              <li>
                <a href="#New-API-functions-optimize_optree-and-finalize_optree">New API functions optimize_optree and finalize_optree</a>
              </li>
              <li>
                <a href="#Some-gotos-are-now-permitted-in-defer-and-finally-blocks">Some gotos are now permitted in defer and finally blocks</a>
              </li>
              <li>
                <a href="#New-regexp-variable-$%7B%5ELAST_SUCCESSFUL_PATTERN%7D">New regexp variable ${^LAST_SUCCESSFUL_PATTERN}</a>
              </li>
              <li>
                <a href="#Locale-category-LC_NAME-now-supported-on-participating-platforms">Locale category LC_NAME now supported on participating platforms</a>
              </li>
          </ul>

              </li>
              <li>
                <a href="#Incompatible-Changes">Incompatible Changes</a>
                            <ul>
              <li>
                <a href="#readline()-no-longer-clears-the-stream-error-and-eof-flags">readline() no longer clears the stream error and eof flags</a>
              </li>
              <li>
                <a href="#INIT-blocks-no-longer-run-after-an-exit()-in-BEGIN">INIT blocks no longer run after an exit() in BEGIN</a>
              </li>
              <li>
                <a href="#Syntax-errors-no-longer-produce-%22phantom-error-messages%22">Syntax errors no longer produce "phantom error messages"</a>
              </li>
              <li>
                <a href="#utf8::upgrade()">utf8::upgrade()</a>
              </li>
              <li>
                <a href="#Changes-to-%22thread-safe%22-locales">Changes to "thread-safe" locales</a>
              </li>
          </ul>

              </li>
              <li>
                <a href="#Deprecations">Deprecations</a>
                            <ul>
              <li>
                <a href="#Use-of-'-as-a-package-name-separator-is-deprecated">Use of ' as a package name separator is deprecated</a>
              </li>
              <li>
                <a href="#Switch-and-Smart-Match-operator">Switch and Smart Match operator</a>
              </li>
          </ul>

              </li>
              <li>
                <a href="#Performance-Enhancements">Performance Enhancements</a>
              </li>
              <li>
                <a href="#Modules-and-Pragmata">Modules and Pragmata</a>
                            <ul>
              <li>
                <a href="#Updated-Modules-and-Pragmata">Updated Modules and Pragmata</a>
              </li>
          </ul>

              </li>
              <li>
                <a href="#Documentation">Documentation</a>
                            <ul>
              <li>
                <a href="#New-Documentation">New Documentation</a>
                            <ul>
              <li>
                <a href="#perlclass">perlclass</a>
              </li>
              <li>
                <a href="#perlclassguts">perlclassguts</a>
              </li>
          </ul>

              </li>
              <li>
                <a href="#Changes-to-Existing-Documentation">Changes to Existing Documentation</a>
                            <ul>
              <li>
                <a href="#perlapi">perlapi</a>
              </li>
              <li>
                <a href="#perldeprecation">perldeprecation</a>
              </li>
              <li>
                <a href="#perlintern">perlintern</a>
              </li>
              <li>
                <a href="#perlexperiment">perlexperiment</a>
              </li>
              <li>
                <a href="#perlfunc">perlfunc</a>
              </li>
              <li>
                <a href="#perlhacktips">perlhacktips</a>
              </li>
              <li>
                <a href="#perlop">perlop</a>
              </li>
              <li>
                <a href="#perlvar">perlvar</a>
              </li>
          </ul>

              </li>
          </ul>

              </li>
              <li>
                <a href="#Diagnostics">Diagnostics</a>
                            <ul>
              <li>
                <a href="#New-Diagnostics">New Diagnostics</a>
                            <ul>
              <li>
                <a href="#New-Errors">New Errors</a>
              </li>
              <li>
                <a href="#New-Warnings">New Warnings</a>
              </li>
          </ul>

              </li>
              <li>
                <a href="#Changes-to-Existing-Diagnostics">Changes to Existing Diagnostics</a>
              </li>
          </ul>

              </li>
              <li>
                <a href="#Configuration-and-Compilation">Configuration and Compilation</a>
              </li>
              <li>
                <a href="#Testing">Testing</a>
              </li>
              <li>
                <a href="#Platform-Support">Platform Support</a>
                            <ul>
              <li>
                <a href="#Discontinued-Platforms">Discontinued Platforms</a>
              </li>
              <li>
                <a href="#Platform-Specific-Notes">Platform-Specific Notes</a>
              </li>
          </ul>

              </li>
              <li>
                <a href="#Internal-Changes">Internal Changes</a>
              </li>
              <li>
                <a href="#Selected-Bug-Fixes">Selected Bug Fixes</a>
              </li>
              <li>
                <a href="#Acknowledgements">Acknowledgements</a>
              </li>
              <li>
                <a href="#Reporting-Bugs">Reporting Bugs</a>
              </li>
              <li>
                <a href="#Give-Thanks">Give Thanks</a>
              </li>
              <li>
                <a href="#SEE-ALSO">SEE ALSO</a>
              </li>
          </ul>

      <h2 id="NAME"><a href="#NAME">#</a>NAME</h2>

<p>perldelta - what is new for perl v5.38.0</p>

<h2 id="DESCRIPTION"><a href="#DESCRIPTION">#</a>DESCRIPTION</h2>

<p>This document describes differences between the 5.36.0 release and the 5.38.0 release.</p>

<h2 id="Core-Enhancements"><a href="#Core-Enhancements">#</a><a id="Core"></a>Core Enhancements</h2>

<h2 id="New-class-Feature"><a href="#New-class-Feature">#</a><a id="New"></a>New <code>class</code> Feature</h2>

<p>A new <b>experimental</b> syntax is now available for defining object classes, where per-instance data is stored in "field" variables that behave like lexicals.</p>

<pre><code>use feature 'class';

class Point
{
    field $x;
    field $y;

    method zero { $x = $y = 0; }
}</code></pre>

<p>This is described in more detail in <a href="https://perldoc.perl.org/perlclass">perlclass</a>. Notes on the internals of its implementation and other related details can be found in <a href="https://perldoc.perl.org/perlclassguts">perlclassguts</a>.</p>

<p>This remains a new and experimental feature, and is very much still under development. It will be the subject of much further addition, refinement and alteration in future releases. As it is experimental, it yields warnings in the <code>experimental::class</code> category. These can be silenced by a <code>no warnings</code> statement.</p>

<pre><code>use feature 'class';
no warnings 'experimental::class';</code></pre>

<h2 id="Unicode-15.0-is-supported"><a href="#Unicode-15.0-is-supported">#</a><a id="Unicode"></a>Unicode 15.0 is supported</h2>

<p>See <a href="https://www.unicode.org/versions/Unicode15.0.0/">https://www.unicode.org/versions/Unicode15.0.0/</a> for details.</p>

<h2 id="Deprecation-warnings-now-have-specific-subcategories"><a href="#Deprecation-warnings-now-have-specific-subcategories">#</a><a id="Deprecation"></a>Deprecation warnings now have specific subcategories</h2>

<p>All deprecation warnings now have their own specific deprecation category which can be disabled individually. You can see a list of all deprecated features in <a href="https://perldoc.perl.org/perldeprecation">perldeprecation</a>, and in <a href="https://perldoc.perl.org/warnings">warnings</a>. The following list is from <a href="https://perldoc.perl.org/warnings">warnings</a>:</p>

<pre><code>+- deprecated ----+
|                 |
|                 +- deprecated::apostrophe_as_package_separator
|                 |
|                 +- deprecated::delimiter_will_be_paired
|                 |
|                 +- deprecated::dot_in_inc
|                 |
|                 +- deprecated::goto_construct
|                 |
|                 +- deprecated::smartmatch
|                 |
|                 +- deprecated::unicode_property_name
|                 |
|                 +- deprecated::version_downgrade</code></pre>

<p>It is still possible to disable all deprecation warnings in a single statement with</p>

<pre><code>no warnings 'deprecated';</code></pre>

<p>but now is possible to have a finer grained control. As has historically been the case these warnings are automatically enabled with</p>

<pre><code>use warnings;</code></pre>

<h2 id="%{^HOOK}-API-introduced"><a href="#%25%7B%5EHOOK%7D-API-introduced">#</a><a id="HOOK-API-introduced"></a>%{^HOOK} API introduced</h2>

<p>For various reasons it can be difficult to create subroutine wrappers for some of perls keywords. Any keyword which has an undefined prototype simply cannot be wrapped with a subroutine, and some keywords which perl permits to be wrapped are in practice very tricky to wrap. For example <code>require</code> is tricky to wrap, it is possible but doing so changes the stack depth, and the standard methods of exporting assume that they will be exporting to a package at certain stack depth up the stack, and the wrapper will thus change where functions are exported to unless implemented with a great deal of care. This can be very awkward to deal with.</p>

<p>Accordingly we have introduced a new hash called <code>%{^HOOK}</code> which is intended to facilitate such cases. When a keyword supports any kind of special hook then the hook will live in this new hash. Hooks in this hash will be named after the function they are called by, followed by two underbars and then the phase they are executed in, currently either before or after the keyword is executed.</p>

<p>In this initial release we support two hooks <code>require__before</code> and <code>require__after</code>. These are provided to make it easier to perform tasks before and after a require statement.</p>

<p>See <a href="https://perldoc.perl.org/perlvar">perlvar</a> for more details.</p>

<h2 id="PERL_RAND_SEED"><a href="#PERL_RAND_SEED">#</a>PERL_RAND_SEED</h2>

<p>Added a new environment variable <code>PERL_RAND_SEED</code> which can be used to cause a perl program which uses <code>rand</code> without using <code>srand()</code> explicitly or which uses <code>srand()</code> with no arguments to be repeatable. See <a href="https://perldoc.perl.org/perlrun">perlrun</a>. This feature can be disabled at compile time by passing</p>

<pre><code>-Accflags=-DNO_PERL_RAND_SEED</code></pre>

<p>to <i>Configure</i> during the build process.</p>

<h2 id="Defined-or-and-logical-or-assignment-default-expressions-in-signatures"><a href="#Defined-or-and-logical-or-assignment-default-expressions-in-signatures">#</a><a id="Defined"></a>Defined-or and logical-or assignment default expressions in signatures</h2>

<p>The default expression for a subroutine signature parameter can now be assigned using the <code>//=</code> or <code>||=</code> operators, to apply the defaults whenever the caller provided an undefined or false value (respectively), rather than simply when the parameter is missing entirely. For more detail see the documentation in <a href="https://perldoc.perl.org/perlsub">perlsub</a>.</p>

<h2 id="@INC-Hook-Enhancements-and-$INC-and-INCDIR"><a href="#@INC-Hook-Enhancements-and-$INC-and-INCDIR">#</a><a id="INC-Hook-Enhancements-and-INC-and-INCDIR"></a>@INC Hook Enhancements and $INC and INCDIR</h2>

<p>The internals for <code>@INC</code> hooks have been hardened to handle various edge cases and should no longer segfault or throw assert failures when hooks modify <code>@INC</code> during a require operation. As part of this we now ensure that any given hook is executed at most once during a require call, and that any duplicate directories do not trigger additional directory probes.</p>

<p>To provide developers more control over dynamic module lookup, a new hook method <code>INCDIR</code> is now supported. An object supporting this method may be injected into the <code>@INC</code> array, and when it is encountered in the module search process it will be executed, just like how INC hooks are executed, and its return value used as a list of directories to search for the module. Returning an empty list acts as a no-op. Note that since any references returned by this hook will be stringified and used as strings, you may not return a hook to be executed later via this API.</p>

<p>When an <code>@INC</code> hook (either <code>INC</code> or <code>INCDIR</code>) is called during require, the <code>$INC</code> variable will be localized to be the value of the index of <code>@INC</code> that the hook came from. If the hook wishes to override what the "next" index in <code>@INC</code> should be it may update <code>$INC</code> to be one less than the desired index (<code>undef</code> is equivalent to <code>-1</code>). This allows an <code>@INC</code> hook to completely rewrite the <code>@INC</code> array and have perl restart its directory probes from the beginning of <code>@INC</code>.</p>

<p>Blessed CODE references in <code>@INC</code> that do not support the <code>INC</code> or <code>INCDIR</code> methods will no longer trigger an exception, and instead will be treated the same as unblessed coderefs are, and executed as though they were an <code>INC</code> hook.</p>

<h2 id="Forbidden-control-flow-out-of-defer-or-finally-now-detected-at-compile-time"><a href="#Forbidden-control-flow-out-of-defer-or-finally-now-detected-at-compile-time">#</a><a id="Forbidden"></a>Forbidden control flow out of <code>defer</code> or <code>finally</code> now detected at compile-time</h2>

<p>It is forbidden to attempt to leave a <code>defer</code> or <code>finally</code> block by means of control flow such as <code>return</code> or <code>goto</code>. Previous versions of perl could only detect this when actually attempted at runtime.</p>

<p>This version of perl adds compile-time detection for many cases that can be statically determined. This may mean that code which compiled successfully on a previous version of perl is now reported as a compile-time error with this one. This only happens in cases where it would have been an error to actually execute the code anyway; the error simply happens at an earlier time.</p>

<h2 id="Optimistic-Eval-in-Patterns"><a href="#Optimistic-Eval-in-Patterns">#</a><a id="Optimistic"></a>Optimistic Eval in Patterns</h2>

<p>The use of <code>(?{ ... })</code> and <code>(??{ ... })</code> in a pattern disables various optimisations globally in that pattern. This may or may not be desired by the programmer. This release adds the <code>(*{ ... })</code> equivalent. The only difference is that it does not and will never disable any optimisations in the regex engine. This may make it more unstable in the sense that it may be called more or less times in the future, however the number of times it executes will truly match how the regex engine functions. For example, certain types of optimisation are disabled when <code>(?{ ... })</code> is included in a pattern, so that patterns which are O(N) in normal use become O(N*N) with a <code>(?{ ... })</code> pattern in them. Switching to <code>(*{ ... })</code> means the pattern will stay O(N).</p>

<h2 id="REG_INF-has-been-raised-from-65,536-to-2,147,483,647"><a href="#REG_INF-has-been-raised-from-65,536-to-2,147,483,647">#</a><a id="REG_INF"></a><a id="REG_INF-has-been-raised-from-65-536-to-2-147-483-647"></a>REG_INF has been raised from 65,536 to 2,147,483,647</h2>

<p>Many regex quantifiers used to be limited to <code>U16_MAX</code> in the past, but are now limited to <code>I32_MAX</code>, thus it is now possible to write <code>/(?:word){1000000}/</code> for example. Note that doing so may cause the regex engine to run longer and use more memory.</p>

<h2 id="New-API-functions-optimize_optree-and-finalize_optree"><a href="#New-API-functions-optimize_optree-and-finalize_optree">#</a><a id="New1"></a>New API functions optimize_optree and finalize_optree</h2>

<p>There are two new API functions for operating on optree fragments, ensuring you can invoke the required parts of the optree-generation process that might otherwise not get invoked (e.g. when creating a custom LOGOP). To get access to these functions, you first need to set a <code>#define</code> to opt-in to using these functions.</p>

<pre><code>#define PERL_USE_VOLATILE_API</code></pre>

<p>These functions are closely tied to the internals of how the interpreter works, and could be altered or removed at any time if other internal changes make that necessary.</p>

<h2 id="Some-gotos-are-now-permitted-in-defer-and-finally-blocks"><a href="#Some-gotos-are-now-permitted-in-defer-and-finally-blocks">#</a><a id="Some"></a>Some <code>goto</code>s are now permitted in <code>defer</code> and <code>finally</code> blocks</h2>

<p>Perl version 5.36.0 added <code>defer</code> blocks and permitted the <code>finally</code> keyword to also add similar behaviour to <code>try</code>/<code>catch</code> syntax. These did not permit any <code>goto</code> expression within the body, as it could have caused control flow to jump out of the block. Now, some <code>goto</code> expressions are allowed, if they have a constant target label, and that label is found within the block.</p>

<pre><code>use feature 'defer';

defer {
  goto LABEL;
  print "This does not execute\n";
  LABEL: print "This does\n";
}</code></pre>

<h2 id="New-regexp-variable-${^LAST_SUCCESSFUL_PATTERN}"><a href="#New-regexp-variable-$%7B%5ELAST_SUCCESSFUL_PATTERN%7D">#</a><a id="New2"></a><a id="New-regexp-variable-LAST_SUCCESSFUL_PATTERN"></a>New regexp variable ${^LAST_SUCCESSFUL_PATTERN}</h2>

<p>This allows access to the last succesful pattern that matched in the current scope. Many aspects of the regex engine refer to the "last successful pattern". The empty pattern reuses it, and all of the magic regex vars relate to it. This allows access to its pattern. The following code</p>

<pre><code>if (m/foo/ || m/bar/) {
    s//PQR/;
}</code></pre>

<p>can be rewritten as follows</p>

<pre><code>if (m/foo/ || m/bar/) {
    s/${^LAST_SUCCESSFUL_PATTERN}/PQR/;
}</code></pre>

<p>and it will do the exactly same thing.</p>

<h2 id="Locale-category-LC_NAME-now-supported-on-participating-platforms"><a href="#Locale-category-LC_NAME-now-supported-on-participating-platforms">#</a><a id="Locale"></a>Locale category LC_NAME now supported on participating platforms</h2>

<p>On platforms that have the GNU extension <code>LC_NAME</code> category, you may now use it as the category parameter to <a href="https://perldoc.perl.org/POSIX#setlocale">"setlocale" in POSIX</a> to set and query its locale.</p>

<h2 id="Incompatible-Changes"><a href="#Incompatible-Changes">#</a><a id="Incompatible"></a>Incompatible Changes</h2>

<h2 id="readline()-no-longer-clears-the-stream-error-and-eof-flags"><a href="#readline()-no-longer-clears-the-stream-error-and-eof-flags">#</a><a id="readline"></a><a id="readline-no-longer-clears-the-stream-error-and-eof-flags"></a>readline() no longer clears the stream error and eof flags</h2>

<p><code>readline()</code>, also spelled <code>&lt;&gt;</code>, would clear the handle's error and eof flags after an error occurred on the stream.</p>

<p>In nearly all cases this clear is no longer done, so the error and eof flags now properly reflect the status of the stream after readline().</p>

<p>Since the error flag is no longer cleared calling close() on the stream may fail and if the stream was not explicitly closed, the implicit close of the stream may produce a warning.</p>

<p>This has resulted in two main types of problems in downstream CPAN modules, and these may also occur in your code:</p>

<ul>

<li><p>If your code reads to end of file, and then rebinds the handle to a new file descriptor, previously since the eof flag wasn't set you could continue to read from the stream. You now need to clear the eof flag yourself with <code>$handle-&gt;clearerr()</code> to continue reading.</p>

</li>
<li><p>If your code encounters an error on the stream while reading with readline() you will need to call <code>$handle-&gt;clearerr</code> to continue reading. The one case this occurred the underlying file descriptor was marked non-blocking, so the read() system call was failing with <code>EAGAIN</code>, which resulted in the error flag being set on the stream.</p>

</li>
</ul>

<p>The only case where error and eof flags continue to cleared on error is when reading from the child process for glob() in <i>miniperl</i>. This allows it to correctly report errors from the child process on close(). This is unlikely to be an issue during normal perl development.</p>

<p>[<a href="https://github.com/Perl/perl5/issues/20060">GH #20060</a>]</p>

<h2 id="INIT-blocks-no-longer-run-after-an-exit()-in-BEGIN"><a href="#INIT-blocks-no-longer-run-after-an-exit()-in-BEGIN">#</a><a id="INIT"></a><a id="INIT-blocks-no-longer-run-after-an-exit-in-BEGIN"></a><code>INIT</code> blocks no longer run after an <code>exit()</code> in <code>BEGIN</code></h2>

<p><code>INIT</code> blocks will no longer run after an <code>exit()</code> performed inside of a <code>BEGIN</code>. This means that the combination of the <code>-v</code> option and the <code>-c</code> option no longer executes a compile check as well as showing the perl version. The <code>-v</code> option executes an exit(0) after printing the version information inside of a <code>BEGIN</code> block, and the <code>-c</code> check is implemented by using <code>INIT</code> hooks, resulting in the <code>-v</code> option taking precedence.</p>

<p>[<a href="https://github.com/Perl/perl5/issues/1537">GH #1537</a>] [<a href="https://github.com/Perl/perl5/issues/20181">GH #20181</a>]</p>

<h2 id="Syntax-errors-no-longer-produce-&quot;phantom-error-messages&quot;"><a href="#Syntax-errors-no-longer-produce-%22phantom-error-messages%22">#</a><a id="Syntax"></a><a id="Syntax-errors-no-longer-produce-phantom-error-messages"></a>Syntax errors no longer produce "phantom error messages"</h2>

<p>Generally perl will continue parsing the source code even after encountering a compile error. In many cases this is helpful, for instance with misspelled variable names it is helpful to show as many examples of the error as possible. But in the case of syntax errors continuing often produces bizarre error messages and may even cause segmentation faults during the compile process. In this release the compiler will halt at the first syntax error encountered. This means that any code expecting to see the specific error messages we used to produce will be broken. The error that is emitted will be one of the diagnostics that used to be produced, but in some cases some messages that used to be produced will no longer be displayed.</p>

<p>See <a href="#Changes-to-Existing-Diagnostics">"Changes to Existing Diagnostics"</a> for more details.</p>

<h2 id="utf8::upgrade()"><a href="#utf8::upgrade()">#</a><a id="utf8"></a><a id="utf8::upgrade"></a><a href="https://perldoc.perl.org/utf8#Utility-functions"><code>utf8::upgrade()</code></a></h2>

<p>Starting in this release, if the input string is <code>undef</code>, it remains <code>undef</code>. Previously it would be changed into a defined, zero-length string.</p>

<h2 id="Changes-to-&quot;thread-safe&quot;-locales"><a href="#Changes-to-%22thread-safe%22-locales">#</a><a id="Changes"></a><a id="Changes-to-thread-safe-locales"></a>Changes to "thread-safe" locales</h2>

<p>Perl 5.28 introduced "thread-safe" locales on systems that supported them, namely modern Windows, and systems supporting POSIX 2008 locale operations. These systems accomplish this by having per-thread locales, while continuing to support the older global locale operations for code that doesn't take the steps necessary to use the newer per-thread ones.</p>

<p>It turns out that some POSIX 2008 platforms have or have had buggy implementations, which forced perl to not use them. The <code>${^SAFE_LOCALES}</code> scalar variable contains 0 or 1 to indicate whether or not the current platform is considered by perl to have a working thread-safe implementation. Some implementations have been fixed already, but FreeBSD and Cygwin have been newly discovered to be sufficiently buggy that the thread-safe operations are no longer used by perl, starting in this release. Hence, <code>${^SAFE_LOCALES}</code> is now 0 for them. Older versions of perl can be configured to avoid these buggy implementations by adding the <i>Configure</i> option <code>-DNO_POSIX_2008_LOCALE</code>.</p>

<p>And v5.38 fixes a bug in all previous perls that led to locales not being fully thread-safe. The first thread that finishes caused the main thread (named <code>thread0</code>) to revert to the global locale in effect at startup, discarding whatever the thread's locale had been previously set to. If any other thread had switched to the global locale by calling <code>switch_to_global_locale()</code> in XS code, those threads would all share the global locale, and <code>thread0</code> would not be thread-safe.</p>

<h2 id="Deprecations"><a href="#Deprecations">#</a>Deprecations</h2>

<h2 id="Use-of-'-as-a-package-name-separator-is-deprecated"><a href="#Use-of-'-as-a-package-name-separator-is-deprecated">#</a><a id="Use"></a><a id="Use-of-as-a-package-name-separator-is-deprecated"></a>Use of <code>'</code> as a package name separator is deprecated</h2>

<p>Using <code>'</code> as package separator in a variable named in a double-quoted string has warned since 5.28. It is now deprecated in both string interpolation and non-interpolated contexts, and will be removed in Perl 5.42.</p>

<h2 id="Switch-and-Smart-Match-operator"><a href="#Switch-and-Smart-Match-operator">#</a><a id="Switch"></a>Switch and Smart Match operator</h2>

<p>The "switch" feature and the smartmatch operator, <code>~~</code>, were introduced in v5.10. Their behavior was significantly changed in v5.10.1. When the "experiment" system was added in v5.18.0, switch and smartmatch were retroactively declared experimental. Over the years, proposals to fix or supplement the features have come and gone.</p>

<p>In v5.38.0, we are declaring the experiment a failure. Some future system may take the conceptual place of smartmatch, but it has not yet been designed or built.</p>

<p>These features will be entirely removed from perl in v5.42.0.</p>

<h2 id="Performance-Enhancements"><a href="#Performance-Enhancements">#</a><a id="Performance"></a>Performance Enhancements</h2>

<ul>

<li><p>Additional optree optimizations for common OP patterns. For example, multiple simple OPs replaced by a single streamlined OP, so as to be more efficient at runtime. [<a href="https://github.com/Perl/perl5/pull/19943">GH #19943</a>], [<a href="https://github.com/Perl/perl5/pull/20063">GH #20063</a>], [<a href="https://github.com/Perl/perl5/pull/20077">GH #20077</a>].</p>

</li>
<li><p>Creating an anonymous sub no longer generates an <code>srefgen</code> op, the reference generation is now done in the <code>anoncode</code> or <code>anonconst</code> op, saving runtime. [<a href="https://github.com/Perl/perl5/pull/20290">GH #20290</a>]</p>

</li>
</ul>

<h2 id="Modules-and-Pragmata"><a href="#Modules-and-Pragmata">#</a><a id="Modules"></a>Modules and Pragmata</h2>

<h2 id="Updated-Modules-and-Pragmata"><a href="#Updated-Modules-and-Pragmata">#</a><a id="Updated"></a>Updated Modules and Pragmata</h2>

<ul>

<li><p>Added the <code>is_tainted()</code> builtin function. [<a href="https://github.com/Perl/perl5/issues/19854">GH #19854</a>]</p>

</li>
<li><p>Added the <code>export_lexically()</code> builtin function as per <a href="https://github.com/Perl/PPCs/blob/main/ppcs/ppc0020-lexical-export.md">PPC 0020</a>. [<a href="https://github.com/Perl/perl5/issues/19895">GH #19895</a>]</p>

</li>
<li><p>Support for <a href="https://github.com/Perl/PPCs/blob/main/ppcs/ppc0018-module-true.md">PPC 0018</a>, <code>use feature "module_true";</code> has been added to the default feature bundle for v5.38 and later. It may also be used explicitly. When enabled inside of a module the module does not need to return true explicitly, and in fact the return will be forced to a simple true value regardless of what it originally was.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Attribute::Handlers">Attribute::Handlers</a> has been upgraded from version 1.02 to 1.03.</p>

</li>
<li><p><a href="https://perldoc.perl.org/attributes">attributes</a> has been upgraded from version 0.34 to 0.35.</p>

</li>
<li><p><a href="https://perldoc.perl.org/autodie">autodie</a> has been upgraded from version 2.34 to 2.36.</p>

</li>
<li><p><a href="https://perldoc.perl.org/B">B</a> has been upgraded from version 1.83 to 1.88.</p>

</li>
<li><p><a href="https://perldoc.perl.org/B::Concise">B::Concise</a> has been upgraded from version 1.006 to 1.007.</p>

</li>
<li><p><a href="https://perldoc.perl.org/B::Deparse">B::Deparse</a> has been upgraded from version 1.64 to 1.74.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Benchmark">Benchmark</a> has been upgraded from version 1.23 to 1.24.</p>

</li>
<li><p><a href="https://perldoc.perl.org/bignum">bignum</a> has been upgraded from version 0.65 to 0.66.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Carp">Carp</a> has been upgraded from version 1.52 to 1.54.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Class::Struct">Class::Struct</a> has been upgraded from version 0.66 to 0.68.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Compress::Raw::Bzip2">Compress::Raw::Bzip2</a> has been upgraded from version 2.103 to 2.204_001.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Compress::Raw::Zlib">Compress::Raw::Zlib</a> has been upgraded from version 2.105 to 2.204_001.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Config::Perl::V">Config::Perl::V</a> has been upgraded from version 0.33 to 0.36.</p>

</li>
<li><p><a href="https://perldoc.perl.org/CPAN">CPAN</a> has been upgraded from version 2.33 to 2.36.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Data::Dumper">Data::Dumper</a> has been upgraded from version 2.184 to 2.188.</p>

</li>
<li><p><a href="https://perldoc.perl.org/DB_File">DB_File</a> has been upgraded from version 1.857 to 1.858.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Devel::Peek">Devel::Peek</a> has been upgraded from version 1.32 to 1.33.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Devel::PPPort">Devel::PPPort</a> has been upgraded from version 3.68 to 3.71.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Digest::MD5">Digest::MD5</a> has been upgraded from version 2.58 to 2.58_01.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Digest::SHA">Digest::SHA</a> has been upgraded from version 6.02 to 6.04.</p>

</li>
<li><p><a href="https://perldoc.perl.org/DynaLoader">DynaLoader</a> has been upgraded from version 1.52 to 1.54.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Encode">Encode</a> has been upgraded from version 3.17 to 3.19.</p>

</li>
<li><p><a href="https://perldoc.perl.org/encoding::warnings">encoding::warnings</a> has been upgraded from version 0.13 to 0.14.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Env">Env</a> has been upgraded from version 1.05 to 1.06.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Errno">Errno</a> has been upgraded from version 1.36 to 1.37.</p>

</li>
<li><p><a href="https://perldoc.perl.org/experimental">experimental</a> has been upgraded from version 0.028 to 0.031.</p>

</li>
<li><p><a href="https://perldoc.perl.org/ExtUtils::CBuilder">ExtUtils::CBuilder</a> has been upgraded from version 0.280236 to 0.280238.</p>

</li>
<li><p><a href="https://perldoc.perl.org/ExtUtils::Install">ExtUtils::Install</a> has been upgraded from version 2.20 to 2.22.</p>

</li>
<li><p><a href="https://perldoc.perl.org/ExtUtils::MakeMaker">ExtUtils::MakeMaker</a> has been upgraded from version 7.64 to 7.70.</p>

</li>
<li><p><a href="https://perldoc.perl.org/ExtUtils::Miniperl">ExtUtils::Miniperl</a> has been upgraded from version 1.11 to 1.13.</p>

</li>
<li><p><a href="https://perldoc.perl.org/ExtUtils::ParseXS">ExtUtils::ParseXS</a> has been upgraded from version 3.45 to 3.51.</p>

</li>
<li><p><a href="https://perldoc.perl.org/ExtUtils::PL2Bat">ExtUtils::PL2Bat</a> has been upgraded from version 0.004 to 0.005.</p>

</li>
<li><p><a href="https://perldoc.perl.org/ExtUtils::Typemaps">ExtUtils::Typemaps</a> has been upgraded from version 3.45 to 3.51.</p>

</li>
<li><p><a href="https://perldoc.perl.org/feature">feature</a> has been upgraded from version 1.72 to 1.82.</p>

</li>
<li><p><a href="https://perldoc.perl.org/File::Basename">File::Basename</a> has been upgraded from version 2.85 to 2.86.</p>

</li>
<li><p><a href="https://perldoc.perl.org/File::Copy">File::Copy</a> has been upgraded from version 2.39 to 2.41.</p>

</li>
<li><p><a href="https://perldoc.perl.org/File::Find">File::Find</a> has been upgraded from version 1.40 to 1.43.</p>

</li>
<li><p><a href="https://perldoc.perl.org/File::Glob">File::Glob</a> has been upgraded from version 1.37 to 1.40.</p>

</li>
<li><p><a href="https://perldoc.perl.org/File::Spec">File::Spec</a> has been upgraded from version 3.84 to 3.89.</p>

</li>
<li><p><a href="https://perldoc.perl.org/File::stat">File::stat</a> has been upgraded from version 1.12 to 1.13.</p>

</li>
<li><p><a href="https://perldoc.perl.org/FileHandle">FileHandle</a> has been upgraded from version 2.03 to 2.05.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Filter::Util::Call">Filter::Util::Call</a> has been upgraded from version 1.60 to 1.64.</p>

</li>
<li><p><a href="https://perldoc.perl.org/GDBM_File">GDBM_File</a> has been upgraded from version 1.23 to 1.24.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Getopt::Long">Getopt::Long</a> has been upgraded from version 2.52 to 2.54.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Hash::Util">Hash::Util</a> has been upgraded from version 0.28 to 0.30.</p>

</li>
<li><p><a href="https://perldoc.perl.org/HTTP::Tiny">HTTP::Tiny</a> has been upgraded from version 0.080 to 0.083.</p>

</li>
<li><p><a href="https://perldoc.perl.org/I18N::Langinfo">I18N::Langinfo</a> has been upgraded from version 0.21 to 0.22.</p>

</li>
<li><p><a href="https://perldoc.perl.org/IO">IO</a> has been upgraded from version 1.50 to 1.52.</p>

</li>
<li><p>IO-Compress has been upgraded from version 2.106 to 2.204.</p>

</li>
<li><p><a href="https://perldoc.perl.org/IO::Socket::IP">IO::Socket::IP</a> has been upgraded from version 0.41 to 0.41_01.</p>

<p>On DragonflyBSD, detect setsockopt() not actually clearing <code>IPV6_V6ONLY</code> even when setsockopt() returns success. [<a href="https://rt.cpan.org/Ticket/Display.html?id=148293">cpan #148293</a>]</p>

</li>
<li><p><a href="https://perldoc.perl.org/IO::Zlib">IO::Zlib</a> has been upgraded from version 1.11 to 1.14.</p>

</li>
<li><p><a href="https://perldoc.perl.org/JSON::PP">JSON::PP</a> has been upgraded from version 4.07 to 4.16.</p>

</li>
<li><p>libnet has been upgraded from version 3.14 to 3.15.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Locale::Maketext">Locale::Maketext</a> has been upgraded from version 1.31 to 1.33.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Math::BigInt">Math::BigInt</a> has been upgraded from version 1.999830 to 1.999837.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Math::BigInt::FastCalc">Math::BigInt::FastCalc</a> has been upgraded from version 0.5012 to 0.5013.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Math::BigRat">Math::BigRat</a> has been upgraded from version 0.2621 to 0.2624.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Math::Complex">Math::Complex</a> has been upgraded from version 1.5902 to 1.62.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Memoize">Memoize</a> has been upgraded from version 1.03_01 to 1.16.</p>

</li>
<li><p><a href="https://perldoc.perl.org/MIME::Base64">MIME::Base64</a> has been upgraded from version 3.16 to 3.16_01.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Module::CoreList">Module::CoreList</a> has been upgraded from version 5.20220520 to 5.20230520.</p>

</li>
<li><p><a href="https://perldoc.perl.org/mro">mro</a> has been upgraded from version 1.26 to 1.28.</p>

</li>
<li><p><a href="https://perldoc.perl.org/NDBM_File">NDBM_File</a> has been upgraded from version 1.15 to 1.16.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Net::Ping">Net::Ping</a> has been upgraded from version 2.74 to 2.76.</p>

</li>
<li><p><a href="https://perldoc.perl.org/ODBM_File">ODBM_File</a> has been upgraded from version 1.17 to 1.18.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Opcode">Opcode</a> has been upgraded from version 1.57 to 1.64.</p>

</li>
<li><p><a href="https://perldoc.perl.org/overload">overload</a> has been upgraded from version 1.35 to 1.37.</p>

</li>
<li><p><a href="https://perldoc.perl.org/parent">parent</a> has been upgraded from version 0.238 to 0.241.</p>

</li>
<li><p><a href="https://perldoc.perl.org/PerlIO::via::QuotedPrint">PerlIO::via::QuotedPrint</a> has been upgraded from version 0.09 to 0.10.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Pod::Checker">Pod::Checker</a> has been upgraded from version 1.74 to 1.75.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Pod::Html">Pod::Html</a> has been upgraded from version 1.33 to 1.34.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Pod::Usage">Pod::Usage</a> has been upgraded from version 2.01 to 2.03.</p>

</li>
<li><p><a href="https://perldoc.perl.org/podlators">podlators</a> has been upgraded from version 4.14 to 5.01.</p>

</li>
<li><p><a href="https://perldoc.perl.org/POSIX">POSIX</a> has been upgraded from version 2.03 to 2.13.</p>

</li>
<li><p><a href="https://perldoc.perl.org/re">re</a> has been upgraded from version 0.43 to 0.44.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Safe">Safe</a> has been upgraded from version 2.43 to 2.44.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Scalar::Util">Scalar::Util</a> has been upgraded from version 1.62 to 1.63.</p>

</li>
<li><p><a href="https://perldoc.perl.org/SDBM_File">SDBM_File</a> has been upgraded from version 1.15 to 1.17.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Socket">Socket</a> has been upgraded from version 2.033 to 2.036.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Storable">Storable</a> has been upgraded from version 3.26 to 3.32.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Sys::Hostname">Sys::Hostname</a> has been upgraded from version 1.24 to 1.25.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Term::Cap">Term::Cap</a> has been upgraded from version 1.17 to 1.18.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Test::Simple">Test::Simple</a> has been upgraded from version 1.302190 to 1.302194.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Text::Balanced">Text::Balanced</a> has been upgraded from version 2.04 to 2.06.</p>

</li>
<li><p><a href="https://perldoc.perl.org/threads">threads</a> has been upgraded from version 2.27 to 2.36.</p>

</li>
<li><p><a href="https://perldoc.perl.org/threads::shared">threads::shared</a> has been upgraded from version 1.64 to 1.68.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Tie::File">Tie::File</a> has been upgraded from version 1.06 to 1.07.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Time::HiRes">Time::HiRes</a> has been upgraded from version 1.9770 to 1.9775.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Time::Piece">Time::Piece</a> has been upgraded from version 1.3401 to 1.3401_01.</p>

</li>
<li><p><a href="https://perldoc.perl.org/Unicode::Normalize">Unicode::Normalize</a> has been upgraded from version 1.31 to 1.32.</p>

</li>
<li><p><a href="https://perldoc.perl.org/UNIVERSAL">UNIVERSAL</a> has been upgraded from version 1.14 to 1.15.</p>

</li>
<li><p><a href="https://perldoc.perl.org/User::grent">User::grent</a> has been upgraded from version 1.03 to 1.04.</p>

</li>
<li><p><a href="https://perldoc.perl.org/User::pwent">User::pwent</a> has been upgraded from version 1.01 to 1.02.</p>

</li>
<li><p><a href="https://perldoc.perl.org/utf8">utf8</a> has been upgraded from version 1.24 to 1.25.</p>

</li>
<li><p><a href="https://perldoc.perl.org/warnings">warnings</a> has been upgraded from version 1.58 to 1.65.</p>

</li>
<li><p><a href="https://perldoc.perl.org/XS::APItest">XS::APItest</a> has been upgraded from version 1.22 to 1.32.</p>

</li>
<li><p><a href="https://perldoc.perl.org/XSLoader">XSLoader</a> has been upgraded from version 0.31 to 0.32.</p>

</li>
</ul>

<h2 id="Documentation"><a href="#Documentation">#</a>Documentation</h2>

<h2 id="New-Documentation"><a href="#New-Documentation">#</a><a id="New3"></a>New Documentation</h2>

<h3 id="perlclass"><a href="#perlclass">#</a><a href="https://perldoc.perl.org/perlclass">perlclass</a></h3>

<p>Describes the new <code>class</code> feature.</p>

<h3 id="perlclassguts"><a href="#perlclassguts">#</a><a href="https://perldoc.perl.org/perlclassguts">perlclassguts</a></h3>

<p>Describes the internals of the new <code>class</code> feature.</p>

<h2 id="Changes-to-Existing-Documentation"><a href="#Changes-to-Existing-Documentation">#</a><a id="Changes1"></a>Changes to Existing Documentation</h2>

<p>We have attempted to update the documentation to reflect the changes listed in this document. If you find any we have missed, open an issue at <a href="https://github.com/Perl/perl5/issues">https://github.com/Perl/perl5/issues</a>.</p>

<p>Additionally, the following selected changes have been made:</p>

<h3 id="perlapi"><a href="#perlapi">#</a><a href="https://perldoc.perl.org/perlapi">perlapi</a></h3>

<ul>

<li><p>Documented <a href="https://perldoc.perl.org/perlapi#hv_ksplit"><code>hv_ksplit</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#hv_name_set"><code>hv_name_set</code></a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perlapi#hv_store"><code>hv_store</code></a> and <a href="https://perldoc.perl.org/perlapi#hv_stores"><code>hv_stores</code></a> documentation have been greatly improved.</p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#gv_autoload_pv"><code>gv_autoload_pv</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#gv_autoload_pvn"><code>gv_autoload_pvn</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#gv_autoload_sv"><code>gv_autoload_sv</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#gv_name_set"><code>gv_name_set</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#start_subparse"><code>start_subparse</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#SV_CHECK_THINKFIRST_COW_DROP"><code>SV_CHECK_THINKFIRST_COW_DROP</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#SV_CHECK_THINKFIRST"><code>SV_CHECK_THINKFIRST</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#SvPV_shrink_to_cur"><code>SvPV_shrink_to_cur</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#save_aelem"><code>save_aelem</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#save_aelem_flags"><code>save_aelem_flags</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#save_helem"><code>save_helem</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlapi#save_helem_flags"><code>save_helem_flags</code></a></p>

</li>
</ul>

<h3 id="perldeprecation"><a href="#perldeprecation">#</a><a href="https://perldoc.perl.org/perldeprecation">perldeprecation</a></h3>

<ul>

<li><p>Added information about unscheduled deprecations and their categories.</p>

</li>
<li><p>Added category information for existing scheduled deprecations.</p>

</li>
<li><p>Added smartmatch and apostrophe as a package separator deprecation data.</p>

</li>
</ul>

<h3 id="perlintern"><a href="#perlintern">#</a><a href="https://perldoc.perl.org/perlintern">perlintern</a></h3>

<ul>

<li><p>Documented <a href="https://perldoc.perl.org/perlintern#save_pushptr"><code>save_pushptr</code></a></p>

</li>
<li><p>Documented <a href="https://perldoc.perl.org/perlintern#save_scalar_at"><code>save_scalar_at</code></a></p>

</li>
<li><p>Entries have been added to <a href="https://perldoc.perl.org/perlguts">perlguts</a> for the new <code>newAV_alloc_x</code>, <code>newAV_alloc_xz</code> and <code>*_simple</code> functions.</p>

</li>
<li><p>References to the now-defunct PrePAN service have been removed from <a href="https://perldoc.perl.org/perlcommunity">perlcommunity</a> and <a href="https://perldoc.perl.org/perlmodstyle">perlmodstyle</a>.</p>

</li>
<li><p>A section on symbol naming has been added to <a href="https://perldoc.perl.org/perlhacktips">perlhacktips</a>.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perlexperiment">perlexperiment</a> has been edited to properly reference the warning categories for the defer block modifier and extra paired delimiters for quote-like operators.</p>

</li>
</ul>

<h3 id="perlexperiment"><a href="#perlexperiment">#</a><a href="https://perldoc.perl.org/perlexperiment">perlexperiment</a></h3>

<ul>

<li><p>Smartmatch has been moved from experimental status to deprecated status. Unfortunately the experiment did not work out.</p>

</li>
</ul>

<h3 id="perlfunc"><a href="#perlfunc">#</a><a href="https://perldoc.perl.org/perlfunc">perlfunc</a></h3>

<ul>

<li><p>Some wording improvements have been made for the <code>ucfirst</code>, <code>push</code>, <code>unshift</code> and <code>bless</code> functions, as well as additional examples added.</p>

</li>
</ul>

<h3 id="perlhacktips"><a href="#perlhacktips">#</a>perlhacktips</h3>

<ul>

<li><p>A new section, <a href="https://perldoc.perl.org/perlhacktips#Writing-safer-macros">"Writing safer macros" in perlhacktips</a> has been added to discuss pitfalls and solutions to using C macros in C and XS code.</p>

</li>
<li><p>A new section, <a href="https://perldoc.perl.org/perlhacktips#Choosing-good-symbol-names">"Choosing good symbol names" in perlhacktips</a>, has been added to discuss unexpected gotchas with names.</p>

</li>
</ul>

<h3 id="perlop"><a href="#perlop">#</a><a href="https://perldoc.perl.org/perlop">perlop</a></h3>

<ul>

<li><p>Document the behavior of matching the empty pattern better and specify its relationship to the new <code>${^LAST_SUCCESSFUL_PATTERN}</code> properly.</p>

</li>
</ul>

<h3 id="perlvar"><a href="#perlvar">#</a><a href="https://perldoc.perl.org/perlvar">perlvar</a></h3>

<ul>

<li><p>Added a section on "Scoping Rules of Regex Variables", and other wording improvements made throughout.</p>

</li>
<li><p>Added information on the new <code>%{^HOOK}</code> interface, and the new <code>require__before</code> and <code>require__after</code> hooks which it exposes.</p>

</li>
<li><p>Correct information on the regex variables <code>${^PREMATCH}</code>, <code>${^MATCH}</code> and <code>${^POSTMATCH}</code>, all of which were incorrectly documented due to an oversight. Specifically they only work properly after a regex operation that used the /p modifier to enable them.</p>

</li>
<li><p>Added information on the new regex variable <code>${^LAST_SUCCESSFUL_PATTERN}</code>, which represents the pattern of the last successful regex match in scope.</p>

</li>
</ul>

<h2 id="Diagnostics"><a href="#Diagnostics">#</a>Diagnostics</h2>

<p>The following additions or changes have been made to diagnostic output, including warnings and fatal error messages. For the complete list of diagnostic messages, see <a href="https://perldoc.perl.org/perldiag">perldiag</a>.</p>

<h2 id="New-Diagnostics"><a href="#New-Diagnostics">#</a><a id="New4"></a>New Diagnostics</h2>

<h3 id="New-Errors"><a href="#New-Errors">#</a><a id="New5"></a>New Errors</h3>

<ul>

<li><p>A new syntax error has been added for the error that a <code>catch</code> block does not have its required variable declaration. See <a href="https://perldoc.perl.org/perldiag#catch-block-requires-a-%28VAR%29">catch block requires a (VAR)</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Too-many-nested-BEGIN-blocks%2C-maximum-of-%25d-allowed">Too many nested BEGIN blocks, maximum of %d allowed</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Execution-of-%25s-aborted-due-to-compilation-errors.">Execution of %s aborted due to compilation errors.</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Can%27t-locate-object-method-%22INC%22%2C-nor-%22INCDIR%22-nor-string-overload-via-package-%22%25s%22-%25s-in-%40INC">Can't locate object method "INC", nor "INCDIR" nor string overload via package "%s" %s in @INC</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Attempt-to-bless-into-a-class">Attempt to bless into a class</a></p>

<p>(F) You are attempting to call <code>bless</code> with a package name that is a new-style <code>class</code>. This is not necessary, as instances created by the constructor are already in the correct class. Instances cannot be created by other means, such as <code>bless</code>.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Cannot-assign-%3Aparam%28%25s%29-to-field-%25s-because-that-name-is-already-in-use">Cannot assign :param(%s) to field %s because that name is already in use</a></p>

<p>(F) An attempt was made to apply a parameter name to a field, when the name is already being used by another field in the same class, or one of its parent classes. This would cause a name clash so is not allowed.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Cannot-create-class-%25s-as-it-already-has-a-non-empty-%40ISA">Cannot create class %s as it already has a non-empty @ISA</a></p>

<p>(F) An attempt was made to create a class out of a package that already has an <code>@ISA</code> array, and the array is not empty. This is not permitted, as it would lead to a class with inconsistent inheritance.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Cannot-invoke-a-method-of-%22%25s%22-on-an-instance-of-%22%25s%22">Cannot invoke a method of "%s" on an instance of "%s"</a></p>

<p>(F) You tried to directly call a <code>method</code> subroutine of one class by passing in a value that is an instance of a different class. This is not permitted, as the method would not have access to the correct instance fields.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Cannot-invoke-method-on-a-non-instance">Cannot invoke method on a non-instance</a></p>

<p>(F) You tried to directly call a <code>method</code> subroutine of a class by passing in a value that is not an instance of that class. This is not permitted, as the method would not then have access to its instance fields.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Cannot-%27%25s%27-outside-of-a-%27class%27">Cannot '%s' outside of a 'class'</a></p>

<p>(F) You attempted to use one of the keywords that only makes sense inside a <code>class</code> definition, at a location that is not inside such a class.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Cannot-reopen-existing-class-%22%25s%22">Cannot reopen existing class "%s"</a></p>

<p>(F) You tried to begin a <code>class</code> definition for a class that already exists. A class may only have one definition block.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Can%27t-bless-an-object-reference">Can't bless an object reference</a></p>

<p>(F) You attempted to call <code>bless</code> on a value that already refers to a real object instance.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#can%27t-convert-empty-path">can't convert empty path</a></p>

<p>(F) On Cygwin, you called a path conversion function with an empty path. Only non-empty paths are legal.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Class-already-has-a-superclass%2C-cannot-add-another">Class already has a superclass, cannot add another</a></p>

<p>(F) You attempted to specify a second superclass for a <code>class</code> by using the <code>:isa</code> attribute, when one is already specified. Unlike classes whose instances are created with <code>bless</code>, classes created via the <code>class</code> keyword cannot have more than one superclass.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Class-attribute-%25s-requires-a-value">Class attribute %s requires a value</a></p>

<p>(F) You specified an attribute for a class that would require a value to be passed in parentheses, but did not provide one. Remember that whitespace is <b>not</b> permitted between the attribute name and its value; you must write this as</p>

<pre><code>class Example::Class :attr(VALUE) ...</code></pre>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Class-%3Aisa-attribute-requires-a-class-but-%22%25s%22-is-not-one">Class :isa attribute requires a class but "%s" is not one</a></p>

<p>(F) When creating a subclass using the <code>class</code> <code>:isa</code> attribute, the named superclass must also be a real class created using the <code>class</code> keyword.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Field-already-has-a-parameter-name%2C-cannot-add-another">Field already has a parameter name, cannot add another</a></p>

<p>(F) A field may have at most one application of the <code>:param</code> attribute to assign a parameter name to it; once applied a second one is not allowed.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Field-attribute-%25s-requires-a-value">Field attribute %s requires a value</a></p>

<p>(F) You specified an attribute for a field that would require a value to be passed in parentheses, but did not provide one. Remember that whitespace is <b>not</b> permitted between the attribute name and its value; you must write this as</p>

<pre><code>field $var :attr(VALUE) ...</code></pre>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Field-%25s-is-not-accessible-outside-a-method">Field %s is not accessible outside a method</a></p>

<p>(F) An attempt was made to access a field variable of a class from code that does not appear inside the body of a <code>method</code> subroutine. This is not permitted, as only methods will have access to the fields of an instance.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Field-%25s-of-%22%25s%22-is-not-accessible-in-a-method-of-%22%25s%22">Field %s of "%s" is not accessible in a method of "%s"</a></p>

<p>(F) An attempt was made to access a field variable of a class, from a method of another class nested inside the one that actually defined it. This is not permitted, as only methods defined by a given class are permitted to access fields of that class.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Only-scalar-fields-can-take-a-%3Aparam-attribute">Only scalar fields can take a :param attribute</a></p>

<p>(F) You tried to apply the <code>:param</code> attribute to an array or hash field. Currently this is not permitted.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Required-parameter-%27%25s%27-is-missing-for-%25s-constructor">Required parameter '%s' is missing for %s constructor</a></p>

<p>(F) You called the constructor for a class that has a required named parameter, but did not pass that parameter at all.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Unexpected-characters-while-parsing-class-%3Aisa-attribute%3A-%25s">Unexpected characters while parsing class :isa attribute: %s</a></p>

<p>(F) You tried to specify something other than a single class name with an optional trailing version number as the value for a <code>class</code> <code>:isa</code> attribute. This confused the parser.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Unrecognized-class-attribute-%25s">Unrecognized class attribute %s</a></p>

<p>(F) You attempted to add a named attribute to a <code>class</code> definition, but perl does not recognise the name of the requested attribute.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Unrecognized-field-attribute-%25s">Unrecognized field attribute %s</a></p>

<p>(F) You attempted to add a named attribute to a <code>field</code> definition, but perl does not recognise the name of the requested attribute.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#%24%7B%5EHOOK%7D%7B%25s%7D-may-only-be-a-CODE-reference-or-undef">${^HOOK}{%s} may only be a CODE reference or undef</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Attempt-to-set-unknown-hook-%27%25s%27-in-%25%7B%5EHOOK%7D">Attempt to set unknown hook '%s' in %{^HOOK}</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Missing-or-undefined-argument-to-%25s-via-%25%7B%5EHOOK%7D%7Brequire__before%7D">Missing or undefined argument to %s via %{^HOOK}{require__before}</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Too-many-capture-groups-%28limit-is-%25d%29-in-regex-m%2F%25s%2F">Too many capture groups (limit is %d) in regex m/%s/</a></p>

</li>
</ul>

<h3 id="New-Warnings"><a href="#New-Warnings">#</a><a id="New6"></a>New Warnings</h3>

<ul>

<li><p><a href="https://perldoc.perl.org/perldiag#Unknown-locale-category-%25d">Unknown locale category %d</a></p>

<p>This is a shortened form of an already existing diagnostic, for use when there is no new locale being switched to. The previous diagnostic was misleading in such circumstances.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Locale-%27%25s%27-is-unsupported%2C-and-may-crash-the-interpreter.">Locale '%s' is unsupported, and may crash the interpreter.</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Treating-%25s%3A%3AINIT-block-as-BEGIN-block-as-workaround">Treating %s::INIT block as BEGIN block as workaround</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Filehandle-STD%25s-reopened-as-%25s-only-for-input">Filehandle STD%s reopened as %s only for input</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#%25s-on-BEGIN-block-ignored">%s on BEGIN block ignored</a></p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#ADJUST-is-experimental">ADJUST is experimental</a></p>

<p>(S experimental::class) This warning is emitted if you use the <code>ADJUST</code> keyword of <code>use feature 'class'</code>. This keyword is currently experimental and its behaviour may change in future releases of Perl.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#class-is-experimental">class is experimental</a></p>

<p>(S experimental::class) This warning is emitted if you use the <code>class</code> keyword of <code>use feature 'class'</code>. This keyword is currently experimental and its behaviour may change in future releases of Perl.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Method-%25s-redefined">Method %s redefined</a></p>

<p>(W redefine) You redefined a method. To suppress this warning, say</p>

<pre><code>{
   no warnings 'redefine';
   *name = method { ... };
}</code></pre>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Odd-number-of-elements-in-hash-field-initialization">Odd number of elements in hash field initialization</a></p>

<p>(W misc) You specified an odd number of elements to initialise a hash field of an object. Hashes are initialised from a list of key/value pairs so there must be a corresponding value to every key. The final missing value will be filled in with undef instead.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Old-package-separator-%22%27%22-deprecated">Old package separator "'" deprecated</a></p>

<p>(W deprecated, syntax) You used the old package separator "'" in a variable, subroutine or package name. Support for the old package separator will be removed in Perl 5.40.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#field-is-experimental">field is experimental</a></p>

<p>(S experimental::class) This warning is emitted if you use the <code>field</code> keyword of <code>use feature 'class'</code>. This keyword is currently experimental and its behaviour may change in future releases of Perl.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#method-is-experimental">method is experimental</a></p>

<p>(S experimental::class) This warning is emitted if you use the <code>method</code> keyword of <code>use feature 'class'</code>. This keyword is currently experimental and its behaviour may change in future releases of Perl.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Can%27t-call-destructor-for-0x%25p-in-global-destruction">Can't call destructor for 0x%p in global destruction</a></p>

</li>
</ul>

<h2 id="Changes-to-Existing-Diagnostics"><a href="#Changes-to-Existing-Diagnostics">#</a><a id="Changes2"></a>Changes to Existing Diagnostics</h2>

<ul>

<li><p>The compiler will now stop parsing on the first syntax error it encounters. Historically the compiler would attempt to "skip past" the error and continue parsing so that it could list multiple errors. For things like undeclared variables under strict this makes sense. For syntax errors however it has been found that continuing tends to result in a storm of unrelated or bizarre errors that mostly just obscure the true error. In extreme cases it can even lead to segfaults and other incorrect behavior.</p>

<p>Therefore we have reformed the continuation logic so that the parse will stop after the first seen syntax error. Semantic errors like undeclared variables will not stop the parse, so you may still see multiple errors when compiling code. However if there is a syntax error it will be the last error message reported by perl and all of the errors that you see will be something that actually needs to be fixed.</p>

</li>
<li><p>Error messages that output class or package names have been modified to output double quoted strings with various characters escaped so as to make the exact value clear to a reader. The exact rules on which characters are escaped may change over time but currently are that printable ASCII codepoints, with the exception of <code>"</code> and <code>\</code>, and unicode word characters whose codepoint is over 255 are output raw, and any other symbols are escaped much as Data::Dumper might escape them, using <code>\n</code> for newline and <code>\"</code> for double quotes, etc. Codepoints in the range 128-255 are always escaped as they can cause trouble on unicode terminals when output raw.</p>

<p>In older versions of perl the one liner</p>

<pre><code>$ perl -le'"thing\n"-&gt;foo()'</code></pre>

<p>would output the following error message exactly as shown here, with text spread over multiple lines because the "\n" would be emitted as a raw newline character:</p>

<pre><code>Can't locate object method "foo" via package "thing
" (perhaps you forgot to load "thing
"?) at -e line 1.</code></pre>

<p>As of this release we would output this instead (as one line):</p>

<pre><code>Can't locate object method "foo" via package "thing\n"
  (perhaps you forgot to load "thing\n"?) at -e line 1.</code></pre>

<p>Notice the newline in the package name has been quoted and escaped, and thus the error message is a single line. The text is shown here wrapped to two lines only for readability.</p>

</li>
<li><p>When package or class names in errors are very large the middle excess portion will be elided from the message. As of this release error messages will show only up to the first 128 characters and the last 128 characters in a package or class name in error messages. For example</p>

<pre><code>$ perl -le'("Foo" x 1000)-&gt;new()'</code></pre>

<p>will output the following as one line:</p>

<pre><code>Can't locate object method "new" via package "FooFooFooFooFooFooFoo
FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo
FooFooFooFooFooFooFooFooFooFooFooFooFooFo"..."oFooFooFooFooFooFooFoo
FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo
FooFooFooFooFooFooFooFooFooFooFooFooFoo" (perhaps you forgot to load
"FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo
FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFo"...
"oFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo
FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo"?)
at -e line 1.</code></pre>

<p>Notice the <code> "prefix"..."suffix" </code> form of the package name in this case. In previous versions of perl the complete string would have been shown making the error message over 6k long and there was no upper limit on the length of the error message at all. If you accidentally used a 1MB string as a class name then the error message would be over 2MB long. In this perl the upper limit should be around 2k when eliding and escaping are taken into account.</p>

</li>
<li><p>Removed <code>Complex regular subexpression recursion limit (%d) exceeded</code></p>

<p>The regular expresion engine has not used recursion in some time. This warning no longer makes sense.</p>

<p>See [<a href="https://github.com/Perl/perl5/pull/19636">GH #19636</a>].</p>

</li>
<li><p>Various warnings that used to produce parenthesized hints underneath the main warning message and after its "location data" were chanaged to put the hint inline with the main message. For instance:</p>

<pre><code>Bareword found where operator expected at -e line 1, near "foo bar"
    (Do you need to predeclare foo?)</code></pre>

<p>will now look like this but as one line:</p>

<pre><code>Bareword found where operator expected (Do you need to predeclare
foo?) at -e line 1, near "foo bar"</code></pre>

<p>as a result such warnings will no longer trigger <code>$SIG{__WARN__}</code> twice, and the hint will be visible when fatal warnings is in effect.</p>

</li>
<li><p>The error message that is produced when a <code>require</code> or <code>use</code> statement fails has been changed. It used to contain the words <code>@INC contains:</code>, and it used to show the state of <code>@INC</code> *after* the require had completed and failed. The error message has been changed to say <code>@INC entries checked:</code> and to reflect the actual directories or hooks that were executed during the require statement. For example:</p>

<pre><code>perl -e'push @INC, sub {@INC=()}; eval "require Frobnitz"
    or die $@'
Can't locate Frobnitz.pm in @INC (you may need to install the
Frobnitz module) (@INC contains:) at (eval 1) line 1.</code></pre>

<p>Will change to (with some output elided for clarity):</p>

<pre><code>perl -e'push @INC, sub {@INC=()}; eval "require Frobnitz"
    or die $@'
Can't locate Frobnitz.pm in @INC (you may need to install the
Frobnitz module) (@INC entries checked:
.../site_perl/5.38.0/x86_64-linux .../site_perl/5.38.0
.../5.38.0/x86_64-linux .../5.38.0 CODE(0x562745e684b8))
at (eval 1) line 1.</code></pre>

<p>thus showing the actual directories checked. Code that checks for <code>@INC contains:</code> in error messages should be hardened against any future wording changes between the <code>@INC</code> and <code>:</code>, for instance use <code>qr/\@INC[ \w]+:/</code> instead of using <code>qr/\@INC contains:/</code> or <code>qr/\@INC entries checked:/</code> in tests as this will ensure both forward and backward compatibility.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Old-package-separator-used-in-string">Old package separator used in string</a></p>

<p>This diagnostic is now also part of the <code>deprecated</code> category.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#given-is-deprecated">given is deprecated</a> replaces <code>given is experimental</code>.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#when-is-deprecated">when is deprecated</a> replaces <code>when is experimental</code>.</p>

</li>
<li><p><a href="https://perldoc.perl.org/perldiag#Smartmatch-is-deprecated">Smartmatch is deprecated</a> replaces <code>Smartmatch is experimental</code>.</p>

</li>
</ul>

<h2 id="Configuration-and-Compilation"><a href="#Configuration-and-Compilation">#</a><a id="Configuration"></a>Configuration and Compilation</h2>

<ul>

<li><p><code>make -j6 minitest</code> could fail due to a build conflict in building <code>$(MINIPERL_EXE)</code> between the main make process and a child process. [<a href="https://github.com/Perl/perl5/issues/19829">GH #19829</a>]</p>

</li>
<li><p>Properly populate osvers on Dragonfly BSD when the hostname isn't set.</p>

</li>
<li><p>Fix typos for C99 macro name <code>PRIX64</code>.</p>

</li>
<li><p>Remove ancient and broken GCC for VMS support</p>

</li>
<li><p>Remove vestigial reference to <code>/VAXC</code> qualifier</p>

</li>
<li><p>Remove sharedperl option on VMS</p>

</li>
<li><p>VMS now has mkostemp</p>

</li>
<li><p><code>Configure</code> now properly handles quoted elements outputted by gcc. [<a href="https://github.com/Perl/perl5/issues/20606">GH #20606</a>]</p>

</li>
<li><p><code>Configure</code> probed for the return type of malloc() and free() by testing whether declarations for those functions produced a function type mismatch with the implementation. On Solaris, with a C++ compiler, this check always failed, since Solaris instead imports malloc() and free() from <code>std::</code> with <code>using</code> for C++ builds. Since the return types of malloc() and free() are well defined by the C standard, skip probing for them. <code>Configure</code> command-line arguments and hints can still override these type in the unlikely case that is needed. [<a href="https://github.com/Perl/perl5/issues/20806">GH #20806</a>]</p>

</li>
</ul>

<h2 id="Testing"><a href="#Testing">#</a>Testing</h2>

<p>Tests were added and changed to reflect the other additions and changes in this release. Furthermore, these significant changes were made:</p>

<ul>

<li><p>Unicode normalization tests have been added.</p>

</li>
<li><p>t/test.pl: Add ability to cancel an watchdog timer</p>

</li>
</ul>

<h2 id="Platform-Support"><a href="#Platform-Support">#</a><a id="Platform"></a>Platform Support</h2>

<h2 id="Discontinued-Platforms"><a href="#Discontinued-Platforms">#</a><a id="Discontinued"></a>Discontinued Platforms</h2>

<dl>

<dt id="Ultrix"><a href="#Ultrix">#</a>Ultrix</dt>
<dd>

<p>Support code for DEC Ultrix has been removed. Ultrix was the native Unix-like operating system for various Digital Equipment Corporation machines. Its final release was in 1995.</p>

</dd>
</dl>

<h2 id="Platform-Specific-Notes"><a href="#Platform-Specific-Notes">#</a><a id="Platform1"></a>Platform-Specific Notes</h2>

<dl>

<dt id="DragonflyBSD"><a href="#DragonflyBSD">#</a>DragonflyBSD</dt>
<dd>

<p>Skip tests to workaround an apparent bug in <code>setproctitle()</code>. [<a href="https://github.com/Perl/perl5/issues/19894">GH #19894</a>]</p>

</dd>
<dt id="FreeBSD"><a href="#FreeBSD">#</a>FreeBSD</dt>
<dd>

<p>FreeBSD no longer uses thread-safe locale operations, to avoid <a href="https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=265950">a bug in FreeBSD</a></p>

<p>Replace the first part of archname with <code>uname -p</code> [<a href="https://github.com/Perl/perl5/issues/19791">GH #19791</a>]</p>

</dd>
<dt id="Solaris"><a href="#Solaris">#</a>Solaris</dt>
<dd>

<p>Avoid some compiler and compilation issues on NetBSD/Solaris from regexec.c and regcomp.c.</p>

</dd>
<dt id="Synology"><a href="#Synology">#</a>Synology</dt>
<dd>

<p>Update Synology Readme for DSM 7.</p>

</dd>
<dt id="Windows"><a href="#Windows">#</a>Windows</dt>
<dd>

<p>Fix win32 memory alignment needed for gcc-12 from vmem.h.</p>

<p>utimes() on Win32 would print a message to stderr if it failed to convert a supplied <code>time_t</code> to to a <code>FILETIME</code>. [<a href="https://github.com/Perl/perl5/issues/19668">GH #19668</a>]</p>

<p>In some cases, timestamps returned by <a href="https://perldoc.perl.org/perlfunc#stat">stat()</a> and <a href="https://perldoc.perl.org/perlfunc#lstat">lstat()</a> failed to take daylight saving time into account. [<a href="https://github.com/Perl/perl5/issues/20018">GH #20018</a>] [<a href="https://github.com/Perl/perl5/issues/20061">GH #20061</a>]</p>

<p>stat() now works on <code>AF_UNIX</code> socket files. [<a href="https://github.com/Perl/perl5/issues/20204">GH #20204</a>]</p>

<p>readlink() now returns the <code>PrintName</code> from a symbolic link reparse point instead of the <code>SubstituteName</code>, which should make it better match the name the link was created with. [<a href="https://github.com/Perl/perl5/pull/20271">GH #20271</a>]</p>

<p>lstat() on Windows now returns the length of the link target as the size of the file, as it does on POSIX systems. [<a href="https://github.com/Perl/perl5/issues/20476">GH #20476</a>]</p>

<p>symlink() on Windows now replaces any <code>/</code> in the target with <code>\</code>, since Windows does not recognise <code>/</code> in symbolic links. The reverse translation is <b>not</b> done by readlink(). [<a href="https://github.com/Perl/perl5/issues/20506">GH #20506</a>]</p>

<p>symlink() where the target was an absolute path to a directory was incorrectly created as a file symbolic link. [<a href="https://github.com/Perl/perl5/issues/20533">GH #20533</a>]</p>

<p><code>POSIX::dup2</code> no longer creates broken sockets. [<a href="https://github.com/Perl/perl5/issues/20920">GH #20920</a>]</p>

<p>Closing a busy pipe could cause Perl to hang. [<a href="https://github.com/Perl/perl5/issues/19963">GH #19963</a>]</p>

</dd>
</dl>

<h2 id="Internal-Changes"><a href="#Internal-Changes">#</a><a id="Internal"></a>Internal Changes</h2>

<ul>

<li><p>Removed many deprecated C functions.</p>

<p>These have been deprecated for a long time. See <a href="https://github.com/perl/perl5/commit/7008caa915ad99e650acf2aea40612b5e48b7ba2">https://github.com/perl/perl5/commit/7008caa915ad99e650acf2aea40612b5e48b7ba2</a> for a full list.</p>

</li>
<li><p><code>get_op_descs</code>, <code>get_op_names</code>, <code>get_opargs</code>, <code>get_no_modify</code> and <code>get_ppaddr</code> have been marked deprecated.</p>

</li>
<li><p><code>hv_free_ent</code> has been marked as internal API.</p>

</li>
<li><p><code>save_pushptr</code>, <code>save_pushptrptr</code>, and <code>save_pushi32ptr</code> have been marked as internal API.</p>

</li>
<li><p>New bool related functions and macros have been added to complement the new bool type introduced in 5.36:</p>

<p>The functions are:</p>

<dl>

<dt id="newSVbool(const-bool-bool_val)"><a href="#newSVbool(const-bool-bool_val)">#</a><a id="newSVbool"></a><a id="newSVbool-const-bool-bool_val"></a><a href="https://perldoc.perl.org/perlapi#newSVbool"><code>newSVbool(const bool bool_val)</code></a></dt>
<dd>

</dd>
<dt id="newSV_true()"><a href="#newSV_true()">#</a><a id="newSV_true"></a><a href="https://perldoc.perl.org/perlapi#newSV_true"><code>newSV_true()</code></a></dt>
<dd>

</dd>
<dt id="newSV_false()"><a href="#newSV_false()">#</a><a id="newSV_false"></a><a href="https://perldoc.perl.org/perlapi#newSV_false"><code>newSV_false()</code></a></dt>
<dd>

</dd>
<dt id="sv_set_true(SV-*sv)"><a href="#sv_set_true(SV-*sv)">#</a><a id="sv_set_true"></a><a id="sv_set_true-SV-sv"></a><a href="https://perldoc.perl.org/perlapi#sv_set_true"><code>sv_set_true(SV *sv)</code></a></dt>
<dd>

</dd>
<dt id="sv_set_false(SV-*sv)"><a href="#sv_set_false(SV-*sv)">#</a><a id="sv_set_false"></a><a id="sv_set_false-SV-sv"></a><a href="https://perldoc.perl.org/perlapi#sv_set_false"><code>sv_set_false(SV *sv)</code></a></dt>
<dd>

</dd>
<dt id="sv_set_bool(SV-*sv,-const-bool-bool_val)"><a href="#sv_set_bool(SV-*sv,-const-bool-bool_val)">#</a><a id="sv_set_bool"></a><a id="sv_set_bool-SV-sv-const-bool-bool_val"></a><a href="https://perldoc.perl.org/perlapi#sv_set_bool"><code>sv_set_bool(SV *sv, const bool bool_val)</code></a></dt>
<dd>

</dd>
</dl>

<p>The macros are:</p>

<dl>

<dt id="SvIandPOK(sv)"><a href="#SvIandPOK(sv)">#</a><a id="SvIandPOK"></a><a id="SvIandPOK-sv"></a><a href="https://perldoc.perl.org/perlapi#SvIandPOK"><code>SvIandPOK(sv)</code></a></dt>
<dd>

</dd>
<dt id="SvIandPOK_off(sv)"><a href="#SvIandPOK_off(sv)">#</a><a id="SvIandPOK_off"></a><a id="SvIandPOK_off-sv"></a><a href="https://perldoc.perl.org/perlapi#SvIandPOK_off"><code>SvIandPOK_off(sv)</code></a></dt>
<dd>

</dd>
<dt id="SvIandPOK_on"><a href="#SvIandPOK_on">#</a><a href="https://perldoc.perl.org/perlapi#SvIandPOK_on"><code>SvIandPOK_on</code></a></dt>
<dd>

</dd>
</dl>

</li>
<li><p>Perl is no longer manipulating the <code>environ</code> array directly. The variable <code>PL_use_safe_putenv</code> has been removed and <code>PERL_USE_SAFE_PUTENV</code> is always defined. This means XS modules can now call <code>setenv</code> and <code>putenv</code> without causing segfaults. [<a href="https://github.com/Perl/perl5/issues/19399">perl #19399</a>]</p>

</li>
<li><p>Internal C API functions are now hidden with <code>__attribute__((hidden))</code> on the platforms that support it. This means they are no longer callable from XS modules on those platforms.</p>

<p>It should be noted that those functions have always been hidden on Windows. This change merely brings that to the other platforms. [<a href="https://github.com/Perl/perl5/pull/19655">perl #19655</a>]</p>

</li>
<li><p>New formatting symbols were added for printing values declared as <code>U32</code> or <code>I32</code>:</p>

<dl>

<dt id="I32df-Like-%d"><a href="#I32df-Like-%25d">#</a><a id="I32df"></a><a id="I32df----Like-d"></a>I32df -- Like %d</dt>
<dd>

</dd>
<dt id="U32of-Like-%o"><a href="#U32of-Like-%25o">#</a><a id="U32of"></a><a id="U32of----Like-o"></a>U32of -- Like %o</dt>
<dd>

</dd>
<dt id="U32uf-Like-%u"><a href="#U32uf-Like-%25u">#</a><a id="U32uf"></a><a id="U32uf----Like-u"></a>U32uf -- Like %u</dt>
<dd>

</dd>
<dt id="U32xf-Like-%x"><a href="#U32xf-Like-%25x">#</a><a id="U32xf"></a><a id="U32xf----Like-x"></a>U32xf -- Like %x</dt>
<dd>

</dd>
<dt id="U32Xf-Like-%X"><a href="#U32Xf-Like-%25X">#</a><a id="U32Xf"></a><a id="U32Xf----Like-X"></a>U32Xf -- Like %X</dt>
<dd>

</dd>
</dl>

<p>These are used in the same way already existing similar symbols, such as <code>IVdf</code>, are used. See <a href="https://perldoc.perl.org/perlapi#I%2FO-Formats">"I/O Formats" in perlapi</a>.</p>

</li>
<li><p>new 'HvHasAUX' macro</p>

</li>
<li><p>regexec.c: Add some branch predictions reorder conds</p>

</li>
<li><p>locale: Change macro name to be C conformant</p>

</li>
<li><p>Rename the <code>PADNAMEt_*</code> constants to <code>PADNAMEf_*</code></p>

</li>
<li><p>Changes all the API macros that retrieve a PV into a call to an inline function so as to evaluate the parameter just once.</p>

</li>
<li><p>regexec.c: multiple code refactor to make the code more readable</p>

</li>
<li><p>perl.h: Change macro name to be C conformant (remove leading _ from NOT_IN_NUMERIC macros)</p>

</li>
<li><p>regcomp.h: add new <code>BITMAP_BIT</code> macro in addition to the existing <code>BITMAP_BYTE</code> and <code>BITMAP_TEST</code> ones.</p>

</li>
<li><p>Create new regnode type ANYOFH. populate_ANYOF_from_invlist was renamed to populate_bitmap_from_invlist</p>

</li>
<li><p>regex: Refactor bitmap vs non-bitmap of qr/[]/</p>

</li>
<li><p>regcomp.c: add new functions to convert from an inversion list to a bitmap (and vice versa) <code>populate_bitmap_from_invlist</code> and <code>populate_invlist_from_bitmap</code>.</p>

</li>
<li><p>Add <code>newAVav()</code> to create an AV from an existing AV. Add <code>newAVhv()</code> to create an AV using keys and values from an existing HV.</p>

</li>
<li><p>Fix definition of <code>Perl_atof</code>.</p>

</li>
<li><p>Fix undefined behavior with overflow related <code>OPTIMIZE_INFTY</code> and delta in <i>regcomp.c</i>.</p>

</li>
<li><p>Fix regnode pointer alignment issue in <i>regcomp.h</i>.</p>

</li>
<li><p>The <code>CVf_METHOD</code> CV flag and associated <code>CvMETHOD</code> macro has been renamed to <code>CVf_NOWARN_AMBIGUOUS</code> and <code>CvNOWARN_AMBIGUOUS</code>. This closer reflects its actual behaviour (it suppresses a warning that would otherwise be generated about ambiguous names), in order to be less confusing with <code>CvIsMETHOD</code>, which indicates that a CV is a <code>method</code> subroutine relating to the <code>class</code> feature.</p>

</li>
<li><p>The <code>OPf_SPECIAL</code> flag is no longer set on the <code>OP_ENTERSUB</code> op constructed to call the <code>VERSION</code>, <code>import</code> and <code>unimport</code> methods as part of a <code>use</code> statement and attribute application, nor when assigning to an <code>:lvalue</code> subroutine.</p>

</li>
<li><p>A new CV flag <code>CVf_REFCOUNTED_ANYSV</code> has been added, which indicates that the CV is an XSUB and stores an SV pointer in the <code>CvXSUBANY.any_sv</code> union field. Perl core operations such as cloning or destroying the CV will maintain the reference count of the pointed-to SV, destroying it when required.</p>

</li>
<li><p>A new API function <a href="https://perldoc.perl.org/perlapi#Perl_localeconv">"<code>Perl_localeconv</code>" in perlapi</a> is added. This is the same as <a href="https://perldoc.perl.org/POSIX#localeconv"><code>POSIX::localeconv</code></a> (returning a hash of the <code>localeconv()</code> fields), but directly callable from XS code.</p>

</li>
<li><p>A new API function, <a href="https://perldoc.perl.org/perlapi#Perl_langinfo8">"<code>Perl_langinfo8</code>" in perlapi</a> is added. This is the same as plain <a href="https://perldoc.perl.org/perlapi#Perl_langinfo">"<code>Perl_langinfo</code>" in perlapi</a>, but with an extra parameter that allows the caller to simply and reliably know if the returned string is UTF-8.</p>

</li>
<li><p>We have introduced a limit on the number of nested <code>eval EXPR</code>/<code>BEGIN</code> blocks and <code>require</code>/<code>BEGIN</code> (and thus <code>use</code> statements as well) to prevent C stack overflows. This variable can also be used to forbid <code>BEGIN</code> blocks from executing during <code>eval EXPR</code> compilation. The limit defaults to <code>1000</code> but can be overridden by setting the <code>${^MAX_NESTED_EVAL_BEGIN_BLOCKS}</code> variable. The default itself can be changed at compile time with</p>

<pre><code>-Accflags='-DPERL_MAX_NESTED_EVAL_BEGIN_BLOCKS_DEFAULT=12345'</code></pre>

<p>Note that this value relates to the size of your C stack and if you choose an inappropriately large value Perl may segfault, be conservative about what you choose.</p>

</li>
<li><p>A new magic type <code>PERL_MAGIC_extvalue</code> has been added. This is available for use like <code>PERL_MAGIC_ext</code>, but is a value magic: upon localization the new value will not be magical.</p>

</li>
<li><p>The <code>SSNEW()</code>, <code>SSNEWt()</code>, <code>SSNEWa()</code> and <code>SSNEWat()</code> APIs now return a <code>SSize_t</code> value. The <code>SSPTR()</code> and <code>SSPTRt()</code> macros now expect a <code>SSize_t</code> parameter, and enforce that on debugging builds. [<a href="https://github.com/Perl/perl5/issues/20411">GH #20411</a>]</p>

</li>
<li><p>Filenames in cops are now refcounted under threads. Under threads we were copying the filenames into each opcode. This is because in theory opcodes created in one thread can be destroyed in another. The change adds a new struct/type <code>RCPV</code>, which is a refcounted string using shared memory. This is implemented in such a way that code that previously used a char * can continue to do so, as the refcounting data is located a specific offset before the char * pointer itself.</p>

</li>
<li><p>Added <code>HvNAMEf</code> and <code>HvNAMEf_QUOTEDPREFIX</code> special formats. They take an <code>HV *</code> as an argument and use <code>HvNAME()</code> and related macros to determine the string, its length, and whether it is utf8.</p>

</li>
<li><p>The underlying <code>Perl_dowantarray</code> function implementing the long-deprecated <a href="https://perldoc.perl.org/perlapi#GIMME"><code>GIMME</code></a> macro has been marked as deprecated, so that use of the macro emits a compile-time warning. <code>GIMME</code> has been documented as deprecated in favour of <a href="https://perldoc.perl.org/perlapi#GIMME_V"><code>GIMME_V</code></a> since Perl v5.6.0, but had not previously issued a warning.</p>

</li>
<li><p>The API function <a href="https://perldoc.perl.org/perlapi#utf8_length">"utf8_length" in perlapi</a> is now more efficient.</p>

</li>
<li><p>Added <code>SAVERCPV()</code> and <code>SAVEFREERCPV()</code> for better support for working with <code>RCPV</code> (reference counted string/pointer value) structures which currently are used in opcodes to share filename and warning bit data in a memory efficient manner.</p>

</li>
<li><p>Added <code>MORTALSVFUNC_SV()</code> and <code>MORTALDESTRUCTOR_SV()</code> macros, which make it possible to create a destructor which is fired at the end of the current statement. This uses the <code>PERL_MAGIC_destruct</code> magic to use "free" magic to trigger an action when a variable is freed. The action can be specified as a C function or as a Perl code reference.</p>

</li>
<li><p>Added the <code>%{^HOOK}</code> api and related <code>PERL_MAGIC_hook</code> and <code>PERL_MAGIC_hookelem</code> for providing ways to hook selected perl functions which for one reason or another are problematic to wrap with a customized subroutine.</p>

</li>
<li><p>Added support for <code>${^HOOK}{require__before}</code> which can be used to rewrite the filename that <code>require</code> will try to load, and also to block <code>require</code> from loading a specific module, even via fully qualified filename. The hook can also be used to perform "pre-require" and "post-require" actions.</p>

</li>
<li><p>Added support for <code>${^HOOK}{require__after}</code> which can be used to track what modules have been required after the fact.</p>

</li>
<li><p>Regular expression opcodes (regops) now use a standardized structure layout that uses unions to expose data in different format. This means it should be much easier to extend or modify regops to use more memory. This has been used to make a number of regops track how many parens they contain.</p>

</li>
</ul>

<h2 id="Selected-Bug-Fixes"><a href="#Selected-Bug-Fixes">#</a><a id="Selected"></a>Selected Bug Fixes</h2>

<ul>

<li><p>Avoid recursion and stack overflow parsing 'pack' template</p>

<p>[<a href="https://github.com/Perl/perl5/issues/16319">GH #16319</a>]</p>

</li>
<li><p>An eval() as the last statement in a regex code block could trigger an interpreter panic; e.g.</p>

<pre><code>/(?{ ...; eval {....}; })/</code></pre>

<p>[<a href="https://github.com/Perl/perl5/issues/19680">GH #19680</a>]</p>

</li>
<li><p>Disabling the <code>bareword_filehandles</code> feature no longer treats <code>print Class-&gt;method</code> as an error. [<a href="https://github.com/Perl/perl5/issues/19704">GH #19704</a>]</p>

</li>
<li><p>When a Perl subroutine tail-calls an XS subroutine using <code>goto &amp;xs_sub</code>, the XS subroutine can now correctly determine its calling context. Previously it was always reported as scalar.</p>

<p>In addition, where the Perl subroutine is freed at the same time:</p>

<pre><code>sub foo { *foo = sub {}; goto &amp;xs_sub }</code></pre>

<p>this formerly could lead to crashes if the XS subroutine tried to use the value of <code>PL_op</code>, since this was being set to NULL. This is now fixed.</p>

<p>[<a href="https://github.com/Perl/perl5/issues/19936">GH #19936</a>]</p>

</li>
<li><p>setsockopt() now uses the mechanism added in 5.36 to better distinguish between numeric and string values supplied as the <code>OPTVAL</code> parameter. [<a href="https://github.com/Perl/perl5/issues/18761">GH #18761</a>]</p>

</li>
<li><p>4-argument <code>select()</code> now rejects strings with code points above 255. Additionally, for code points 128-255, this operator will now always give the corresponding octet to the OS, regardless of how Perl stores such code points in memory. (Previously Perl leaked its internal string storage to the OS.) [<a href="https://github.com/Perl/perl5/issues/19882">GH #19882</a>]</p>

</li>
<li><p>Fix panic issue from <code>val {} inside /(?{...})/</code> [<a href="https://github.com/Perl/perl5/issues/19390">GH #19390</a>]</p>

</li>
<li><p>Fix multiple compiler warnings from <i>regexp.c</i>, <i>locale.c</i> [<a href="https://github.com/Perl/perl5/issues/19915">GH #19915</a>]</p>

</li>
<li><p>Fix a bug with querying locales on platforms that don't have <code>LC_NUMERIC</code> [<a href="https://github.com/Perl/perl5/issues/19890">GH #19890</a>]</p>

</li>
<li><p>Prevent undefined behaviour in <code>S_maybe_multideref()</code>.</p>

</li>
<li><p>Avoid signed integer overflow in <code>use integer</code> ops.</p>

</li>
<li><p>Avoid adding an offset to a NULL pointer in <code>hv_delete_common</code>.</p>

</li>
<li><p>PerlIO::get_layers will now accept IO references too</p>

<p>Previously it would only take glob references or names of globs. Now it will also accept IO references.</p>

</li>
<li><p>Fixes to memory handling for <code>PL_splitstr</code>:</p>

<ul>

<li><p>If a thread was created the allocated string would be freed twice.</p>

</li>
<li><p>If two <code>-F</code> switches were supplied the memory allocated for the first switch wouldn't be freed.</p>

</li>
</ul>

</li>
<li><p>Correctly handle <code>OP_ANONCODE</code> ops generated by CPAN modules that don't include the OPf_REF flag when propagating lvalue context. [<a href="https://github.com/Perl/perl5/pull/20532">GH #20532</a>]</p>

</li>
<li><p><a href="https://perldoc.perl.org/POSIX#strxfrm">POSIX::strxfrm</a> now uses the <code>LC_CTYPE</code> locale category to specify its collation, ignoring any differing <code>LC_COLLATE</code>. It doesn't make sense for a string to be encoded in one locale (say, ISO-8859-6, Arabic) and to collate it based on another (like ISO-8859-7, Greek). Perl assumes that the current <code>LC_CTYPE</code> locale correctly represents the encoding, and collates accordingly.</p>

<p>Also, embedded <code>NUL</code> characters are now allowed in the input.</p>

<p>If locale collation is not enabled on the platform (<code>LC_COLLATE</code>), the input is returned unchanged.</p>

</li>
<li><p>Double FETCH during stringification of tied scalars returning an overloaded object have been fixed. The FETCH method should only be called once, but prior to this release was actually called twice. [<a href="https://github.com/Perl/perl5/pull/20574">GH #20574</a>]</p>

</li>
<li><p>Writing to a magic variables associated with the selected output handle, <code>$^</code>, <code>$~</code>, <code>$=</code>, <code>$-</code> and <code>$%</code>, no longer crashes perl if the IO object has been cleared from the selected output handle. [<a href="https://github.com/Perl/perl5/issues/20733">GH #20733</a>]</p>

</li>
<li><p>Redefining a <code>use constant</code> list constant with <code>use constant</code> now properly warns. This changes the behaviour of <code>use constant</code> but is a core change, not a change to <i>constant.pm</i>. [<a href="https://github.com/Perl/perl5/issues/20742">GH #20742</a>]</p>

</li>
<li><p>Redefining a <code>use constant</code> list constant with an empty prototype constant sub would result in an assertion failure. [<a href="https://github.com/Perl/perl5/issues/20742">GH #20742</a>]</p>

</li>
<li><p>Fixed a regression where the <code>INC</code> method for objects in <code>@INC</code> would not be resolved by <code>AUTOLOAD</code>, while it was in 5.36. The <code>INCDIR</code> method for objects in <code>@INC</code> cannot be resolved by <code>AUTOLOAD</code> as <code>INC</code> would have been resolved first. [<a href="https://github.com/Perl/perl5/issues/20665">GH #20665</a>]</p>

</li>
<li><p><code>$SIG{__DIE__}</code> will now be called from eval when the code dies during compilation regardless of how it dies. This means that code expecting to be able to upgrade <code>$@</code> into an object will be called consistently. In earlier versions of perl <code>$SIG{__DIE__}</code> would not be called for certain compilation errors, for instance undeclared variables. For other errors it might be called if there were more than a certain number of errors, but not if there were less. Now you can expect that it will be called in every case.</p>

</li>
<li><p>Compilation of code with errors used to inconsistently stop depending on the count and type of errors encountered. The intent was that after 10 errors compilation would halt, but bugs in this logic meant that certain types of error would be counted, but would not trigger the threshold check to stop compilation. Other errors would. With this release after at most 10 errors compilation will terminate, regardless of what type of error they were.</p>

<p>Note that you can change the maximum count by defining <code>PERL_STOP_PARSING_AFTER_N_ERRORS</code> to be something else during the configuration process. For instance</p>

<pre><code>./Configure ... -Accflags='-DPERL_STOP_PARSING_AFTER_N_ERRORS=100'</code></pre>

<p>would allow up to 100 errors.</p>

</li>
<li><p>The API function <a href="https://perldoc.perl.org/perlapi#my_snprintf">"my_snprintf" in perlapi</a> now prints a non-dot decimal point if the perl code it ultimately is called from is in the scope of <code>use locale</code> and the locale in effect calls for that.</p>

</li>
<li><p>A number of bugs related to capture groups in quantified groups in regular expression have been fixed, especially in alternations. For example in a pattern like:</p>

<pre><code>"foobazfoobar" =~ /((foo)baz|foo(bar))+/</code></pre>

<p>the regex variable <code>$2</code> will not be "foo" as it once was, it will be undef.</p>

</li>
<li><p>Bugs with regex backreference operators that are inside of a capture group have been fixed. For instance:</p>

<pre><code>"xa=xaaa" =~ /^(xa|=?\1a){2}\z/</code></pre>

<p>will now correctly not match. [<a href="https://github.com/Perl/perl5/issues/10073">GH #10073</a>]</p>

</li>
<li><p><code>SSGROW()</code> and <code>SSCHECK()</code> have been reworked to ensure that the requested space is actually allocated. <code>SSCHECK()</code> is now an alias for <code>SSGROW()</code>.</p>

</li>
</ul>

<h2 id="Acknowledgements"><a href="#Acknowledgements">#</a>Acknowledgements</h2>

<p>Perl 5.38.0 represents approximately 12 months of development since Perl 5.36.0 and contains approximately 290,000 lines of changes across 1,500 files from 100 authors.</p>

<p>Excluding auto-generated files, documentation and release tools, there were approximately 190,000 lines of changes to 970 .pm, .t, .c and .h files.</p>

<p>Perl continues to flourish into its fourth decade thanks to a vibrant community of users and developers. The following people are known to have contributed the improvements that became Perl 5.38.0:</p>

<p>Alex, Alexander Nikolov, Alex Davies, Andreas König, Andrew Fresh, Andrew Ruthven, Andy Lester, Aristotle Pagaltzis, Arne Johannessen, A. Sinan Unur, Bartosz Jarzyna, Bart Van Assche, Benjamin Smith, Bram, Branislav Zahradník, Brian Greenfield, Bruce Gray, Chad Granum, Chris 'BinGOs' Williams, chromatic, Clemens Wasser, Craig A. Berry, Dagfinn Ilmari Mannsåker, Dan Book, danielnachun, Dan Jacobson, Dan Kogai, David Cantrell, David Golden, David Mitchell, E. Choroba, Ed J, Ed Sabol, Elvin Aslanov, Eric Herman, Felipe Gasper, Ferenc Erki, Firas Khalil Khana, Florian Weimer, Graham Knop, Håkon Hægland, Harald Jörg, H.Merijn Brand, Hugo van der Sanden, James E Keenan, James Raspass, jkahrman, Joe McMahon, Johan Vromans, Jonathan Stowe, Jon Gentle, Karen Etheridge, Karl Williamson, Kenichi Ishigaki, Kenneth Ölwing, Kurt Fitzner, Leon Timmermans, Li Linjie, Loren Merritt, Lukas Mai, Marcel Telka, Mark Jason Dominus, Mark Shelor, Matthew Horsfall, Matthew O. Persico, Mattia Barbon, Max Maischein, Mohammad S Anwar, Nathan Mills, Neil Bowers, Nicholas Clark, Nicolas Mendoza, Nicolas R, Paul Evans, Paul Marquess, Peter John Acklam, Peter Levine, Philippe Bruhat (BooK), Reini Urban, Renee Baecker, Ricardo Signes, Richard Leach, Russ Allbery, Scott Baker, Sevan Janiyan, Sidney Markowitz, Sisyphus, Steve Hay, TAKAI Kousuke, Todd Rinaldo, Tomasz Konojacki, Tom Stellard, Tony Cook, Tsuyoshi Watanabe, Unicode Consortium, vsfos, Yves Orton, Zakariyya Mughal, Zefram, 小鸡.</p>

<p>The list above is almost certainly incomplete as it is automatically generated from version control history. In particular, it does not include the names of the (very much appreciated) contributors who reported issues to the Perl bug tracker.</p>

<p>Many of the changes included in this version originated in the CPAN modules included in Perl's core. We're grateful to the entire CPAN community for helping Perl to flourish.</p>

<p>For a more complete list of all of Perl's historical contributors, please see the <i>AUTHORS</i> file in the Perl source distribution.</p>

<h2 id="Reporting-Bugs"><a href="#Reporting-Bugs">#</a><a id="Reporting"></a>Reporting Bugs</h2>

<p>If you find what you think is a bug, you might check the perl bug database at <a href="https://github.com/Perl/perl5/issues">https://github.com/Perl/perl5/issues</a>. There may also be information at <a href="http://www.perl.org/">http://www.perl.org/</a>, the Perl Home Page.</p>

<p>If you believe you have an unreported bug, please open an issue at <a href="https://github.com/Perl/perl5/issues">https://github.com/Perl/perl5/issues</a>. Be sure to trim your bug down to a tiny but sufficient test case.</p>

<p>If the bug you are reporting has security implications which make it inappropriate to send to a public issue tracker, then see <a href="https://perldoc.perl.org/perlsec#SECURITY-VULNERABILITY-CONTACT-INFORMATION">"SECURITY VULNERABILITY CONTACT INFORMATION" in perlsec</a> for details of how to report the issue.</p>

<h2 id="Give-Thanks"><a href="#Give-Thanks">#</a><a id="Give"></a>Give Thanks</h2>

<p>If you wish to thank the Perl 5 Porters for the work we had done in Perl 5, you can do so by running the <code>perlthanks</code> program:</p>

<pre><code>perlthanks</code></pre>

<p>This will send an email to the Perl 5 Porters list with your show of thanks.</p>

<h2 id="SEE-ALSO"><a href="#SEE-ALSO">#</a><a id="SEE"></a>SEE ALSO</h2>

<p>The <i>Changes</i> file for an explanation of how to view exhaustive details on what changed.</p>

<p>The <i>INSTALL</i> file for how to build Perl.</p>

<p>The <i>README</i> file for general stuff.</p>

<p>The <i>Artistic</i> and <i>Copying</i> files for copyright information.</p>


      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Douglas Hofstadter changes his mind on Deep Learning and AI risk (233 pts)]]></title>
            <link>https://www.lesswrong.com/posts/kAmgdEjq2eYQkB5PP/douglas-hofstadter-changes-his-mind-on-deep-learning-and-ai</link>
            <guid>36569365</guid>
            <pubDate>Mon, 03 Jul 2023 05:52:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.lesswrong.com/posts/kAmgdEjq2eYQkB5PP/douglas-hofstadter-changes-his-mind-on-deep-learning-and-ai">https://www.lesswrong.com/posts/kAmgdEjq2eYQkB5PP/douglas-hofstadter-changes-his-mind-on-deep-learning-and-ai</a>, See on <a href="https://news.ycombinator.com/item?id=36569365">Hacker News</a></p>
Couldn't get https://www.lesswrong.com/posts/kAmgdEjq2eYQkB5PP/douglas-hofstadter-changes-his-mind-on-deep-learning-and-ai: Error: Request failed with status code 403]]></description>
        </item>
    </channel>
</rss>