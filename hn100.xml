<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 09 Apr 2024 15:00:08 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[The Eclipse via Satellite (145 pts)]]></title>
            <link>https://kieranhealy.org/blog/archives/2024/04/09/the-eclipse-via-satellite/</link>
            <guid>39978723</guid>
            <pubDate>Tue, 09 Apr 2024 12:33:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://kieranhealy.org/blog/archives/2024/04/09/the-eclipse-via-satellite/">https://kieranhealy.org/blog/archives/2024/04/09/the-eclipse-via-satellite/</a>, See on <a href="https://news.ycombinator.com/item?id=39978723">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
          <article>
    
    

    
    

    
    <div>
      <p>Yesterday’s eclipse as seen by the <a href="https://www.star.nesdis.noaa.gov/GOES/">GOES-East</a> weather satellite. I just grabbed the full-disk geocolor JPGs with <code>wget</code> and stitched them together with <code>ffmpeg</code>.</p>
<video autoplay="" loop="" muted="" playsinline="" controls="true" width="100%">
    <source src="https://kieranhealy.org/blog/archives/2024/04/09/the-eclipse-via-satellite/eclipse_sm.mp4" type="video/mp4">
    <source src="https://kieranhealy.org/blog/archives/2024/04/09/the-eclipse-via-satellite/eclipse_sm.mov" type="video/mov">
    <source src="https://kieranhealy.org/blog/archives/2024/04/09/the-eclipse-via-satellite/eclipse_sm.webm" type="video/webm">
</video>

    </div>

    

    

    
  </article>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google Axion Processors – Arm-based CPUs designed for the data center (101 pts)]]></title>
            <link>https://cloud.google.com/blog/products/compute/introducing-googles-new-arm-based-cpu/</link>
            <guid>39978577</guid>
            <pubDate>Tue, 09 Apr 2024 12:12:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cloud.google.com/blog/products/compute/introducing-googles-new-arm-based-cpu/">https://cloud.google.com/blog/products/compute/introducing-googles-new-arm-based-cpu/</a>, See on <a href="https://news.ycombinator.com/item?id=39978577">Hacker News</a></p>
<div id="readability-page-1" class="page"><div jsname="tx2NYc"><section><span jsaction="rcuQ6b:npT2md" jscontroller="YSybTb" data-track-type="" soy-skip="" ssk="5:kbe95"><p><span>At Google, we constantly push the boundaries of computing, exploring what is possible for grand challenges ranging from information retrieval, global video distribution, and of course generative AI. Doing so requires rethinking systems design in deep collaboration with service developers. This rethinking has resulted in our significant investment in custom silicon. Today, we are thrilled to announce the latest incarnation of this work: Google Axion Processors, our first custom Arm®</span><span>-based CPUs designed for the data center. Axion delivers industry-leading performance and energy efficiency and will be available to Google Cloud customers later this year.</span></p></span></section><section><figure><section jscontroller="SCGBie" jsaction="rcuQ6b:npT2md"><img src="https://storage.googleapis.com/gweb-cloudblog-publish/images/image1_Ab4940U.max-2000x2000.jpg" alt="https://storage.googleapis.com/gweb-cloudblog-publish/images/image1_Ab4940U.max-2000x2000.jpg" jsname="P3Vluc" jsaction="click:HTIlC" loading="lazy"></section></figure><p><span jsaction="rcuQ6b:npT2md" jscontroller="YSybTb" data-track-type="" soy-skip="" ssk="5:kbe95"><p>Run general-purpose workloads on C4A for exceptional performance, energy-efficiency and advanced capabilities.</p></span></p></section><section><span jsaction="rcuQ6b:npT2md" jscontroller="YSybTb" data-track-type="" soy-skip="" ssk="5:kbe95"><p><span>Axion is but the latest in a long line of custom Google silicon. Since 2015 we’ve released five generations of Tensor Processing Units (TPU); in 2018 we released our first Video Coding Unit (VCU), achieving up to </span><a href="https://dl.acm.org/doi/abs/10.1145/3445814.3446723" rel="noopener" target="_blank"><span>33x</span></a><span> more efficiency for video transcoding; </span><span>in 2021, we </span><a href="https://cloud.google.com/blog/topics/systems/the-past-present-and-future-of-custom-compute-at-google?e=48754805"><span>doubled-down</span></a><span> on custom compute by investing in “system on a chip” (SoC) designs, and released the </span><a href="https://blog.google/products/pixel/introducing-google-tensor/" rel="noopener" target="_blank"><span>first of three generations</span></a><span> of Tensor chips for mobile devices.&nbsp;</span></p>
<p><span>While our investments in compute accelerators have transformed our customers’ capabilities, general-purpose compute is and will remain a critical portion of our customers’ workloads. Analytics, information retrieval, and ML training and serving all require a huge amount of compute power. Customers and users who wish to maximize performance, reduce infrastructure costs, and meet sustainability goals have found that the rate of CPU improvements has slowed recently. Amdahl’s Law suggests that as accelerators continue to improve, general purpose compute will dominate the cost and limit the capability of our infrastructure unless we make commensurate investments to keep up.</span></p>
<p><span>Axion processors combine Google’s silicon expertise with Arm’s highest performing CPU cores to deliver instances with up to </span><span>30% better performance than the fastest general-purpose Arm-based instances available in the cloud today, up to 50% better performance and up to 60% better energy-efficiency than comparable current-generation x86-based instances<sup>1</sup>.</span><span> </span><span>That’s why we’ve already started deploying Google services like BigTable, Spanner, BigQuery, Blobstore, Pub/Sub, Google Earth Engine, and the YouTube Ads platform on current generation Arm-based servers and plan to deploy and scale these services and more on Axion soon.</span></p>
<h3><strong>Unrivaled performance and efficiency, underpinned by Titanium</strong></h3>
<p><span>Built using the Arm Neoverse</span><span><span>™</span></span><span> V2 CPU, Axion processors deliver giant leaps in performance </span><span>for general-purpose workloads like web and app servers, containerized microservices, open-source databases, in-memory caches, data analytics engines, media processing, CPU-based AI training and inferencing, and more.&nbsp;</span></p>
<p><span>Axion is underpinned b</span><span>y </span><a href="https://cloud.google.com/titanium?e=48754805"><span>Titanium</span></a><span>, a system of</span><span> purpose-built custom silicon microcontrollers and tiered scale-out offloads</span><span>. Titanium offloads take care of platform operations like networking and security, so Axion processors have more capacity and improved performance for customer workloads. Titanium also offloads storage I/O processing to </span><a href="https://cloud.google.com/compute/docs/disks/hyperdisks"><span>Hyperdisk</span></a><span>, our new block storage service that decouples performance from instance size and that can be dynamically provisioned in real time.&nbsp;</span></p>
<p><em>“Google’s announcement of the new Axion CPU marks a significant milestone in delivering custom silicon that is optimized for Google’s infrastructure, and built on our high-performance Arm Neoverse V2 platform. Decades of ecosystem investment, combined with Google’s ongoing innovation and open-source software contributions ensure the best experience for the workloads that matter most to customers running on Arm everywhere."</em> - Rene Haas, CEO, Arm</p>
<p><span>Beyond performance, customers want to operate more efficiently and meet their sustainability goals. </span><span>Google Cloud data centers are already 1.5X more efficient than the industry average and deliver 3X more computing power with the same amount of electrical power compared with five years ago<sup>2</sup>.</span><span> </span><span>We’ve set ambitious </span><a href="https://sustainability.google/operating-sustainably/" rel="noopener" target="_blank"><span>goals</span></a><span> to </span><span>operate our offices, campuses, and data centers on carbon-free energy, 24/7</span><span>, and offer </span><a href="https://cloud.google.com/carbon-footprint"><span>tools</span></a><span> to help you report on carbon emissions. With Axion processors, customers can optimize for even more energy-efficiency.&nbsp;</span></p>
<h3><strong>Axion - out-of-the-box application compatibility and interoperability</strong></h3>
<p><span>Google also has a rich history of contributions to the Arm ecosystem. We built and open sourced Android, Kubernetes, Tensorflow and the Go language, and worked closely with Arm and industry partners to optimize them for the Arm architecture.&nbsp;</span></p>
<p><span>Axion is built on the standard Armv9 architecture and instruction set. Most recently, we contributed to SystemReady Virtual Environment (VE), Arm’s hardware and firmware interoperability standard that ensures common operating systems and software packages can seamlessly run on Arm-based servers and VMs, making it easier for customers to deploy Arm workloads on Google Cloud with limited-if-any code rewrites. Through this collaboration, we’re accessing an ecosystem of tens of thousands of cloud customers already deploying workloads and leveraging Arm-native software from hundreds of ISVs and open-source projects.&nbsp;</span></p>
<p><span>Customers will be able to use Axion in many Google Cloud services including Google Compute Engine, Google Kubernetes Engine, Dataproc, Dataflow, Cloud Batch, and more.&nbsp; Arm-compatible software and solutions are now available on the </span><a href="https://cloud.google.com/marketplace?hl=en"><span>Google Cloud Marketplace</span></a><span>, and we've recently launched preview support for Arm-based instances migration in the </span><a href="https://cloud.google.com/migrate/virtual-machines"><span>Migrate to Virtual Machines</span></a><span> service.</span></p>
<h3><strong>What our customers and partners are saying</strong></h3>
<p><span>"</span><span>We're thrilled to add application packages built on the new Axion Arm-based CPU for Google Cloud to the Bitnami by VMware Tanzu library. This will deliver significantly improved performance, attractive price-performance, and better sustainability for our users. We're excited to get our hands on the new Google Axion instances and do even more to help our customers streamline deployments and reduce their environmental footprint."</span><span> - Mike Wookey, Senior Director R&amp;D, Tanzu Division, Broadcom</span></p>
<p><span>"Organizations all over the world rely on CrowdStrike and our single platform, single agent architecture to stop cloud breaches. CrowdStrike delivers the industry’s best protection while being the fastest to deploy, so we’re excited about testing Google's new processor to discover power and efficiency gains." </span><span>– Daniel Bernard, Chief Business Officer, CrowdStrike</span></p>
<p><span>“Our customers demand uncompromising cybersecurity protection that our systems provide. We're intrigued by the power and efficiency gains possible with the new Google Cloud's custom Arm-based CPU and plan to validate its capabilities as a way to provide even better threat detection and response capabilities to our customers.” - </span><span>Tzach Segal, VP Business Development, Cybereason</span></p>
<p><span>“Datadog has been a trusted partner for customers adopting Arm-based virtual machines and an early adopter of Arm for our own operations. We’re excited about Google Cloud's announcement of the Axion processor and plan to evaluate it on our workloads as we help customers measure the cost and performance benefits of using Datadog on Google Cloud Arm instances.”</span><span> - </span><span>Yrieix Garnier, VP of Product Management</span><span>, Datadog</span></p>
<p><span>“Elastic is committed to helping customers unlock the potential of all their structured and unstructured data efficiently at any scale. We look forward to testing Google Cloud's new custom Arm-based CPU and expect it to help us provide an even better Elastic customer experience on the Google Cloud Platform.” </span><span>- Steve Kearns, VP of Product, Elastic</span><span>&nbsp;</span></p>
<p><span>“We’ve built a strong partnership with Google Cloud over many years and have seen the benefits of building on GCP Arm-based VMs. We can’t wait to see the remarkable improvements coming with the new generation Arm-based Axion processor.” </span><span>- Joel Meyer, SVP, Engineering, OpenX </span><span>&nbsp;</span></p>
<p><span>"Snap empowers everyone to express themselves, live in the moment, learn about the world, and have fun together. We're constantly optimizing our infrastructure for performance and efficiency. Google's new Axion Arm-based CPU promises major leaps forward in both. The potential to serve our community with these gains while leading on our sustainability goals is incredibly exciting. We look forward to seeing the benefits of Axion-based virtual machines when they become available." - </span><span>Korwin Smith, Sr Director of Engineering, Cloud Infrastructure, Snap</span></p>
<p><span>“WP Engine powers websites for more than 1.5 million customers across 150 countries. They rely on WP Engine to deliver on our core promises of performance, reliability, and security and we take that responsibility to heart. Our commitment to innovation and a customer-inspired mindset means we’re always looking for ways to further enhance our customers’ performance and confidence online. We’re excited to test Google’s new custom Arm-based processor and its anticipated performance and sustainability gains, and explore how they can empower our customers to create even more compelling websites and applications.”</span><span> - Ramadass Prabhakar, SVP and CTO, WP Engine</span></p>
<h3><strong>Learn more</strong></h3>
<p><span>Virtual machines based on Axion processors will be available in preview in the coming months. </span><a href="https://docs.google.com/forms/d/e/1FAIpQLSdmFDDBNffCScti1FLlum71Q2V9kBANNKIy_2fd85iSgMcj9Q/viewform" rel="noopener" target="_blank"><span>Register your interest today</span></a><span>! And if you’re here at Next ‘24, come learn more about Axion and other compute announcements in these related sessions:</span></p>
<ul>
<li>
<p><strong>SPTL205</strong><span> - </span><a href="https://cloud.withgoogle.com/next/session-library?filters=session-type-spotlight&amp;session=SPTL205#all" rel="noopener" target="_blank"><span>Workload-optimized and AI-powered Infrastructure</span></a></p>
</li>
<li>
<p><strong>ARC225 </strong><span>- </span><a href="https://cloud.withgoogle.com/next/session-library?filters=session-type-spotlight&amp;session=ARC225#all" rel="noopener" target="_blank"><span>Transform your cloud operations and design capability with Gemini for Google Cloud</span></a></p>
</li>
<li>
<p><strong>ARC229 </strong><span>- </span><a href="https://cloud.withgoogle.com/next/session-library?filters=session-type-spotlight,track-infrastructure-architects-admins&amp;session=ARC229#all" rel="noopener" target="_blank"><span>Best practices to manage and automate on Compute Engine</span></a></p>
</li>
</ul>
<hr>
<p><sup><em><span><span>1. Google Cloud Internal Data, 31 March 2024<br>2. <a href="https://www.gstatic.com/gumdrop/sustainability/google-2023-environmental-report.pdf" rel="noopener" target="_blank"><span>Google Environmental Report</span></a><span>, 2023, page 10.</span></span></span></em></sup></p></span></section><section><span>Posted in</span><ul><li><a href="https://cloud.google.com/blog/products/compute" track-metadata-position="body" track-metadata-eventdetail="cloud.google.com/blog/products/compute" track-metadata-module="tag list" track-metadata-module_headline="posted in">Compute</a></li><li><a href="https://cloud.google.com/blog/topics/google-cloud-next" track-metadata-position="body" track-metadata-eventdetail="cloud.google.com/blog/topics/google-cloud-next" track-metadata-module="tag list" track-metadata-module_headline="posted in">Google Cloud Next</a></li><li><a href="https://cloud.google.com/blog/products/ai-machine-learning" track-metadata-position="body" track-metadata-eventdetail="cloud.google.com/blog/products/ai-machine-learning" track-metadata-module="tag list" track-metadata-module_headline="posted in">AI &amp; Machine Learning</a></li></ul></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SSSL – Hackless SSL bypass for the Wii U (146 pts)]]></title>
            <link>https://github.com/PretendoNetwork/SSSL</link>
            <guid>39977862</guid>
            <pubDate>Tue, 09 Apr 2024 10:03:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/PretendoNetwork/SSSL">https://github.com/PretendoNetwork/SSSL</a>, See on <a href="https://news.ycombinator.com/item?id=39977862">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">SSSL - Hackless SSL bypass for the Wii U</h2><a id="user-content-sssl---hackless-ssl-bypass-for-the-wii-u" aria-label="Permalink: SSSL - Hackless SSL bypass for the Wii U" href="#sssl---hackless-ssl-bypass-for-the-wii-u"></a></p>
<div dir="auto">
	<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/PretendoNetwork/SSSL/blob/master/shutter.png"><img src="https://github.com/PretendoNetwork/SSSL/raw/master/shutter.png"></a></p></div>
<p dir="auto">On March 1, 2021 Nintendo released Wii U firmware version <a href="https://wiiubrew.org/wiki/5.5.5" rel="nofollow">5.5.5</a>. This update updated the Wii U's SSL verification and recompiled all RPLs (though no code changes were made). The exact purpose for this update is unknown, as nothing of significance was changed, and no other changes were made in this update. With the changes to SSL verification, Nintendo introduced a bug which allows for the forging of SSL certificates. These forged certificates will be seen as "Nintendo Signed" and, due to an existing bug with how the Wii U handles CA common names, will be accepted by all domains.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">The bugs</h2><a id="user-content-the-bugs" aria-label="Permalink: The bugs" href="#the-bugs"></a></p>
<p dir="auto">There are 2 bugs at play:</p>
<ol dir="auto">
<li>Normally a CA common name does not accept a single wildcard (*) value. They must contain a hostname, and optionally one or many wildcards for subdomains. The Wii U will accept a single * wildcard in place of a hostname, which allows the CA to be accepted as any domain. This bug has existed since before 5.5.5, but was not useful until now.</li>
<li>As of 5.5.5, CA's crafted in a specific way may take a newly introduced alternate path for verification. This allows for a CA's signature to not be verified correctly. Instead, the Wii U simply checks if the CA matches one already known by the system, but not the signature or contents of the CA. We have no idea why this change was made, as it does not benefit Nintendo at all. It almost feels intentional.</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Exploiting</h2><a id="user-content-exploiting" aria-label="Permalink: Exploiting" href="#exploiting"></a></p>
<p dir="auto">Not any CA will work. There are 3 conditions for a CA which still need to be met even for a forged CA to be accepted:</p>
<ol dir="auto">
<li>The CA needs to be one which the Wii U would already accept. The signature is not validated in this case, so modifying an existing CA works.</li>
<li>The Wii U does not allow a Root CA in the cert chain. It will ignore any certs that have a matching subject and authority key.</li>
<li>The title must not roll it's own SSL. WebKit titles such as the eShop, Miiverse, TVii, etc, as well as any game which uses it's own SSL library, will not work with these certificates.</li>
</ol>
<p dir="auto">The easiest way to exploit this bug is to use the Nintendo CA - G3 CA, and is what this script opts to do. This can be dumped from a Wii U's SSL certificates title at <code>/storage_mlc/sys/title/0005001b/10054000/content/scerts/CACERT_NINTENDO_CA_G3.der</code>. Changing the public key to a user-controlled key and changing the authority key identifier to anything else is all that is required. The resulting user-controlled private key and patched CA can be used to bypass SSL verification without any homebrew or CFW at all.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">The script</h2><a id="user-content-the-script" aria-label="Permalink: The script" href="#the-script"></a></p>
<p dir="auto">This script takes in a PEM encoded copy of Nintendo CA - G3 and does the above patches and exports the patched CA and private key.</p>
<ul dir="auto">
<li>Install <a href="https://nodejs.org/" rel="nofollow">NodeJS</a></li>
<li><code>git clone https://github.com/PretendoNetwork/SSSL</code></li>
<li><code>cd SSSL</code></li>
<li><code>npm i</code> to install the dependencies</li>
<li><code>node patch</code> to run the patching wizard</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits</h2><a id="user-content-credits" aria-label="Permalink: Credits" href="#credits"></a></p>
<ul dir="auto">
<li>Shutterbug for actually finding the new verification bug</li>
<li>Jemma and Quarky for decompiling the updated SSL functions</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sqlime: Online SQLite Playground (118 pts)]]></title>
            <link>https://github.com/nalgeon/sqlime</link>
            <guid>39977231</guid>
            <pubDate>Tue, 09 Apr 2024 08:24:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/nalgeon/sqlime">https://github.com/nalgeon/sqlime</a>, See on <a href="https://news.ycombinator.com/item?id=39977231">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Sqlime</h2><a id="user-content-sqlime" aria-label="Permalink: Sqlime" href="#sqlime"></a></p>
<p dir="auto"><strong><a href="http://sqlime.org/" rel="nofollow">Sqlime</a></strong> is an online SQLite playground for debugging and sharing SQL snippets. Kinda like JSFiddle, but for SQL instead of JavaScript.</p>
<p dir="auto">🌟 <strong>New!</strong> Turn static SQL code in your articles into <a href="https://codapi.org/sqlite/" rel="nofollow">interactive examples</a>.</p>
<a href="https://sqlime.org/" rel="nofollow">
    <img src="https://github.com/nalgeon/sqlime/raw/main/img/sqlime.jpg" alt="Sqlime" width="600">
</a>
<p dir="auto">Here are some notable features:</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🔋 Full-blown database in the browser</h3><a id="user-content--full-blown-database-in-the-browser" aria-label="Permalink: 🔋 Full-blown database in the browser" href="#-full-blown-database-in-the-browser"></a></p>
<p dir="auto">Sqlime is backed by the latest version of SQLite via the <a href="https://github.com/nalgeon/sqlean.js">sqlean.js</a> project. It provides a full-featured SQL implementation, including indexes, triggers, views, transactions, CTEs, window functions and execution plans.</p>
<p dir="auto">It also includes essential SQLite extensions, from math statistics and regular expressions to hash functions and dynamic SQL.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🔌 Connect any data source</h3><a id="user-content--connect-any-data-source" aria-label="Permalink: 🔌 Connect any data source" href="#-connect-any-data-source"></a></p>
<p dir="auto">Connect any local or remote SQLite database. Both files and URLs are supported. For example, try loading the <a href="http://sqlime.org/#https://raw.githubusercontent.com/nalgeon/sqliter/main/employees.en.db" rel="nofollow">Employees&nbsp;database</a> from the GitHub repo.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🔗 Save and share with others</h3></p>
<p dir="auto">Sqlime saves both the database and the queries to GitHub so that you can revisit them later or share them with a colleague. The database is stored as a plain text SQL dump, so it's easy to read the code or import data into PostgreSQL, MySQL, or other databases.</p>
<p dir="auto">For example, here is the <a href="https://gist.github.com/nalgeon/e012594111ce51f91590c4737e41a046">gist</a> for the Employees database, and here is the <a href="https://sqlime.org/#gist:e012594111ce51f91590c4737e41a046" rel="nofollow">sharing&nbsp;link</a> for it.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🤖 Ask AI</h3><a id="user-content--ask-ai" aria-label="Permalink: 🤖 Ask AI" href="#-ask-ai"></a></p>
<p dir="auto">Connect an OpenAI account to get help with your queries from the state-of-the-art ChatGPT assistant. AI can explain, teach, and troubleshoot your SQL.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/nalgeon/sqlime/blob/main/img/sqlime-ai.jpg"><img src="https://github.com/nalgeon/sqlime/raw/main/img/sqlime-ai.jpg" alt="Ask AI" width="600"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">📱 Mobile friendly</h3><a id="user-content--mobile-friendly" aria-label="Permalink: 📱 Mobile friendly" href="#-mobile-friendly"></a></p>
<p dir="auto">Most playgrounds are not meant for small screens. Sqlime was specifically designed and tested on mobile devices. No need to zoom or aim at tiny buttons — everything looks and works just fine.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">🔒 Secure and private</h3><a id="user-content--secure-and-private" aria-label="Permalink: 🔒 Secure and private" href="#-secure-and-private"></a></p>
<p dir="auto">There is no server. Sqlime works completely in the browser. GitHub and OpenAI credentials are also stored locally. Queries are saved as private GitHub gists within your account. Your data is yours only.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">⌨️ Dead simple</h3><a id="user-content-️-dead-simple" aria-label="Permalink: ⌨️ Dead simple" href="#️-dead-simple"></a></p>
<p dir="auto">Sqlime has zero third-party dependencies other than SQLite. Good old HTML, CSS, and vanilla JS — that's all. No frameworks, no heavy editors, no obsolete and vulnerable libraries. Just some modular open-source code, which is easy to grasp and extend.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Last but not least</h2><a id="user-content-last-but-not-least" aria-label="Permalink: Last but not least" href="#last-but-not-least"></a></p>
<p dir="auto"><strong>⭐️ Star the project</strong> if you like it</p>
<p dir="auto">🚀 <a href="https://antonz.org/subscribe/" rel="nofollow"><strong>Subscribe</strong></a> to stay on top of new features</p>
<p dir="auto">🍋 <a href="https://sqlime.org/" rel="nofollow"><strong>Use Sqlime</strong></a> to debug and share SQL snippets</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Interview with Yanis Varoufakis on Technofeudalism (141 pts)]]></title>
            <link>https://www.wired.com/story/yanis-varoufakis-technofeudalism-interview/</link>
            <guid>39977002</guid>
            <pubDate>Tue, 09 Apr 2024 07:38:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wired.com/story/yanis-varoufakis-technofeudalism-interview/">https://www.wired.com/story/yanis-varoufakis-technofeudalism-interview/</a>, See on <a href="https://news.ycombinator.com/item?id=39977002">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-testid="ArticlePageChunks"><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>The tech giants have overthrown capitalism. That’s the argument of former Greek finance minister Yanis Varoufakis, who became famous trying to defend debt-laden Greece from its German creditors. Varoufakis has never quite regained the notoriety of 2015. But he has remained a prominent left-wing voice. After a failed campaign for a seat in the European Parliament in 2019, he plans to run again this June. This time, his adversary isn’t Berlin or the banks. It’s the tech companies he accuses of warping the economy while turning people against one other.</p><div data-testid="GenericCallout"><figure><p><span>Courtesy of Penguin Random House</span></p></figure></div><p>Varoufakis is also a prolific author; his 17th book, written as a letter to his techno-curious father, chronicles the evolution of capitalism from the 1960s advertising boom, through Wall Street in the 1980s, to the 2008 financial crisis and the pandemic. In its most compelling stretches, <a data-offer-url="https://www.amazon.com/Technofeudalism-Killed-Capitalism-Yanis-Varoufakis/dp/1685891241" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.amazon.com/Technofeudalism-Killed-Capitalism-Yanis-Varoufakis/dp/1685891241&quot;}" href="https://www.amazon.com/Technofeudalism-Killed-Capitalism-Yanis-Varoufakis/dp/1685891241" rel="noopener" target="_blank"><em>Technofeudalism</em></a> argues that Apple, Facebook, and Amazon have changed the economy so much that it now resembles Europe’s medieval feudal system. The tech giants are the lords, while everyone else is a peasant, working their land for not much in return.</p><p>To Varoufakis, every time you post on X, formerly Twitter, you’re essentially toiling Elon Musk’s estate like a medieval serf. Musk doesn't pay you. But your free labor pays him, in a sense, by increasing the value of his company. On X, the more active users there are, the more people can be shown advertising or sold subscriptions. On Google Maps, he argues, users improve the product—alerting the system to traffic jams on their route.</p><p>The feudal comparison isn’t novel. But <em>Technofeudalism</em> attempts to introduce the idea to a wider audience. Its US release, launched the month before regulators in the <a href="https://www.wired.com/story/doj-sues-apple-antitrust/">US</a> and <a href="https://www.wired.com/story/apple-meta-alphabet-eu-digital-markets-act/">European Union</a> simultaneously initiated antitrust actions against Apple, also had impeccable timing.</p><p>Over Zoom, I spoke to Varoufakis, from his home near Athens, about how the tech giants have changed the economy—and why we should care about it.</p><p><em>This interview has been edited for length and clarity.</em></p><p><strong>WIRED: That word, <em>technofeudalism</em>, what does it mean? How is the feudal system relevant here?</strong></p><p><strong>Yanis Varoufakis:</strong> Profit drives capitalism, rent drove feudalism. Now we have moved [from one system to the other] because of this new form of super-duper, all-singing, all-dancing capital: cloud capital, algorithmic capital. If I'm right, that is creating new digital fiefdoms like Amazon.com, like Airbnb, where the main mode of wealth extraction comes in the form not of profit but of rent.</p><p>Take the Apple Store. You are producing an app, Apple can withhold 30 percent of your profits [through a commission fee]. That's a rent. That's like a ground rent. It's a bit like the Apple Store is a fiefdom. It's a cloud fiefdom, and Apple extracts a rent exactly as in feudalism. So my argument is not that we went back from capitalism to feudalism. My argument is that we have progressed forward to a new system, which has many of the characteristics of feudalism, but it is one step ahead of capitalism. To signal that, I added the word <em>techno</em>.</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p><strong>When you're talking about these digital fiefdoms, the idea is easier to understand in terms of platforms that take a cut of the sales, like the Apple App Store or Amazon. But can you also accuse other platforms of operating these digital fiefs, like Facebook?</strong></p><p>Facebook is a classic cloud fief. It creates cloud capital which is attractive to you, to me, to other people who want to communicate with each other—to find friends, or post their views, or news about their dog or their cat. So you're drawn into this fiefdom, and then the next step for Zuckerberg was to draw into the same fiefdom publishers and advertisers in order to sell them the attention of users. And then immediately after that, as Cory Doctorow so beautifully describes through his concept of <a href="https://www.wired.com/story/tiktok-platforms-cory-doctorow/">enshittification</a>, you're a publisher, you feel great because your sales go up through Facebook, and then suddenly, you find that you've been downgraded. And then you have to pay a higher cloud rent in order to be re-upgraded [paying for ads, for example, for customers to find your product]. That’s typical cloud capitalism, producing technofeudalism.</p><p><strong>I understand technofeudalism as affecting three groups of people. Can we boil down who is affected into these groups?</strong></p><p>Yes, and I've given them names. The company that produces the electric bicycles sold on Alibaba or Amazon.com, this is a vassal capitalist. Most of the profit margin for that company is skimmed off by Jeff Bezos [Amazon’s founder and executive chairman] in the form of cloud rent.</p><p>Second is cloud proles, or cloud proletarians. Look at the workers in Amazon warehouses who are monitored by algorithms.</p><p>And the third one is you and me. I call us cloud serfs. Because the parallel with the serfs is that we <em>volunteer</em> free labor. It doesn't matter whether we're enjoying it or not. Every time you upload a video on Tiktok, on Facebook, on Instagram, you're adding to the capital stock of these companies. We are adding to it directly through our labor or our movement or our existence. In that way we're serfs, but we are more than serfs, we’re cloud serfs producing capital. And that has never happened in the history of the world.</p><p><strong>A company like Apple might argue that instead of being a fiefdom, maybe the Apple App Store is more like a mall where companies have to rent their stores from whomever owns the building. How is technofeudalism different from the mall dynamic?</strong></p><p>Well, hugely. Say you and I were going into partnership together with a fashion brand. We go to the shopping mall and we hire a shop, the rent is fixed. It is not proportional to our sales. The more money we make, the higher our price-to-rent margin. With the Apple Store, they get 30 percent of all sales. That’s not at all the same thing. That is the equivalent of the ground rent that the feudal lord used to extract from vassal capitalists.</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p><strong>What makes cloud capitalism a worse economic system than capitalism?</strong></p><p>The first thing is from a macroeconomic perspective. When you have such a large sum of money extracted in the form of cloud rent, that money disappears from a circular flow of income. According to my calculations, between 35 and 40 percent of GDP is being siphoned off the circular flow of income by cloud rent, and that means there is less money in the economy. Investment is low, and that means less good, quality jobs in the rest of the economy.</p><p>The second reason is that this cloud capital is designed to reproduce itself through our attention and through our free labor. And platforms discovered that we spend more time doing this, producing free cloud capital for the owners of cloud capital, if we're angry. So algorithms are primed to poison our conversations. That is highly detrimental to our democracies because consensus is really bad for cloud capital. It doesn't want it. It wants you and me to be angry and shouting at each other.</p><p>Now, as a professor, I have noticed the effect on kids in universities in Britain, in Australia, here in Greece, in America. I find that students today are too scared of having a face-to-face conversation. They want a safe space. They do not want any challenging ideas to be presented to them in class. They protest, they will have you thrown out of university if you say something that upsets them, about anything. But give them a phone and they become toxic and ballistic. Now, that is no way of running a democracy or a civilized society for that matter.</p><p><strong>People have already expressed dissatisfaction with capitalism in various protest movements across Europe. Why should they care that there's been a shift to a slightly different system that's dominated by a slightly different kind of company?</strong></p><p>Ordinary people need to know the reasons behind the discontent. The discontented always ask: Why is this happening? Giving them an answer, in a way that makes sense to them, is hugely empowering. This is the foundation of any possibility of democracy. Because to have democracy, it's not enough to be able to vote every four or five years. You need people who understand what is going on, who are informed about the causes of their discontent. Because if they don't understand the causes of their discontent, then it's easy for them to fall prey to xenophobia, to misogyny, to racism. Then they can say, it’s the Jew. It's the Muslim. It's the foreigner. It's the Brit. It's the German, whatever. Then people latch on to simple solutions, which is the beginning of fascism.</p><p><strong>Are we at the beginning of fascism? And if so, is that really technofeudalism’s fault?</strong></p><p>I think that fascism is already on the rise. In France almost <a href="https://www.france24.com/en/france/20220425-victory-in-defeat-le-pen-raises-far-right-s-glass-ceiling-fails-to-crack-it">45 percent</a> of the population are supporting a neofascist [Marine Le Pen]. In Italy, we have a neofascist prime minister, Giorgia Meloni. That was not the doing of technofeudalism, because technofeudalism came later. What happened is, the rise of cloud capital and the siphoning off of money from the circular flow of income increases the discontent within people. At the same time you have the algorithms which make money and accumulate cloud capital to the extent that we hate one another. Hate is the fuel of facism. So if you blend discontent, the fact that most people can’t make ends meet, and you throw in there the hatred that is reinforced by the algorithms, that's fascism.</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p><strong>So if we have this new system that is fueling a new fascism, then what should we do about it?</strong></p><p>Well, many things. But to begin with, let's understand where we are, so we don't blame the foreigners. We don't blame women. We don't blame trans people. A little bit of knowledge goes a long way towards recreating the circumstances for a decent conversation between us.</p><p>In economic terms, we need to introduce a cloud tax immediately. Tax Amazon 5 percent for every transaction that takes place on its platform. Then, introduce a capacity for you and me to own a digital identity so we don't need Google or Facebook to vouch for who we are on the internet. Having a state-issued digital identity will go a long way towards restoring or handing you property rights over your data, because at the moment you do not own your data.</p><p>You can introduce interoperability. I am on X. I can't go to Bluesky. Let's say that Elon Musk decides to block me because I said something he didn't like. He has blocked me before for a couple of weeks. Now, I have more than a million followers on X. I cannot leave without losing them. If I go to Bluesky, I have 10 followers. Interoperability would mean that if I go to another platform, to Bluesky, when I post something on Bluesky, then my 1 million followers on X can hear it.</p><p><strong>It’s interesting you mention interoperability, because that’s one of the proposals in the EU's Digital Markets Act, which feels like it’s at least trying to get at some of the problems you've outlined. Do you think it goes far enough?</strong></p><p>No, it certainly doesn't go far enough. There are some interesting ideas in there, like interoperability. But nobody in government is actually working on this. This is my problem. Not that it is a hard task, but there is nobody working on it, because they don't care. They are all in the pockets of the big technofeudal lords, as I call them.</p><p><strong>So if you believe no one in government is doing anything, how do you move forward from that?</strong></p><p>That's a very good question. I have no idea. But this is why—against my spirit, against my preferences and my desires—I'm still in politics, because there is no alternative to politics.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I made a discrete logic network card (260 pts)]]></title>
            <link>https://qdiv.dev/posts/eth2/</link>
            <guid>39976640</guid>
            <pubDate>Tue, 09 Apr 2024 06:24:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://qdiv.dev/posts/eth2/">https://qdiv.dev/posts/eth2/</a>, See on <a href="https://news.ycombinator.com/item?id=39976640">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><h5>April 9, 2024</h5><p>This post is a continuation of my journey to build a complete computer system using discrete logic components. At this point I have made a computer capable of running network applications like an HTTP server or a LAN game.</p><p>Last year I built <a href="https://qdiv.dev/posts/eth-to-spi">a physical level adapter</a> which converts a 10BASE-T Ethernet signal to SPI and back. Back then I used an STM32 microcontroller to test its operation, now I’m implementing a MAC layer module to connect it to my <a href="https://qdiv.dev/posts/ccpu">homebrew computer</a>.</p><p>Both adapters are full-duplex and have independent transmitter and receiver parts.</p><p><img src="https://qdiv.dev/eth2/overview-eth.jpg" alt="Discrete logic computer">
<em>Complete computer. The new module is bottom-right.</em></p><p><img src="https://qdiv.dev/eth2/eth.jpg" alt="ETH MAC adapter">
<em>The new module with PHY shield removed. Bodge wires fix swapped SCK and MOSI.</em></p><h2 id="receiver">Receiver
<a href="#receiver">#</a></h2><p>Summary of receiver operation:</p><ul><li>SPI serial data is converted to bytewise parallel data, byte clock is extracted;</li><li>First 6 bytes are checked against destination MAC address criteria, unmatched frames are rejected;</li><li>Bytes are written into a static RAM buffer;</li><li>When a frame ends, receiver is disabled and further frames are rejected until user re-arms the receiver. Byte counter is stopped, its value is made accessible to the user.</li></ul><p><a href="https://en.wikipedia.org/wiki/Frame_check_sequence">FCS</a> is not checked in hardware.</p><h3 id="data-collection">Data collection
<a href="#data-collection">#</a></h3><p>Firstly, serial SPI data needs to be converted into a stream of bytes.</p><p><img src="https://qdiv.dev/eth2/receiver.png" alt="Receiver"></p><p>Serial data is shifted into a shift register (<code>U32</code>). <code>U30</code> and <code>U31</code> count bits and bytes respectively. Static RAM write signal <code>recv_buf_we</code> is formed using a D flip-flop <code>U29B</code>. This signal briefly becomes low after each 8 bits of input data:</p><p><img src="https://qdiv.dev/eth2/recv_buf_we.svg" alt="recv_buf_we"></p><p>Received bytes are written into a 2 kB static RAM buffer 6116 (<code>U20</code>).</p><p><img src="https://qdiv.dev/eth2/recv-buffer.png" alt="receiver buffer"></p><p><code>U13</code>, <code>U16</code> and <code>U18</code> form an address multiplexer: it chooses either byte counter or system address bus as an address input for the SRAM (<code>U20</code>). A tri-state buffer <code>U21</code> forwards the received byte into the RAM.</p><p>To access the received data and its length, RAM and byte counter are connected to the system data bus with tri-state buffers:</p><p><img src="https://qdiv.dev/eth2/recv-output.png" alt="receiver output"></p><p><code>U25</code> connects the receiver RAM with the system data bus. After a frame is complete, the byte counter is not reset and its value is kept on the <code>recv_byte_cnt</code> bus. This bus is connected with the system data bus using <code>U26</code> and <code>U27</code>. They are activated when CPU makes a read request to specific addresses. The other half of <code>U27</code> makes a two-bit read-only status register which is used to query receiver and transmitter status.</p><h3 id="mac-address-filtering">MAC address filtering
<a href="#mac-address-filtering">#</a></h3><p>When analyzing the Ethernet traffic I noticed that frames usually come in small groups (3-4 frames together separated by a short delay). Frames in one group usually have different destination MAC addresses. This made me think that my computer won’t be able to filter received frames by MAC and re-arm the receiver fast enough to catch the frames meant for itself. I needed a hardware MAC address filtering.</p><p>Storing a custom MAC address somewhere and then comparing first 6 received bytes against it is a no-go: too complex. I could also make it a repetition of a single byte (e.g. FE:FE:FE:FE:FE:FE), but that’s boring. To bring some variation to my MAC, I made it a function of the byte index:</p><ul><li>Bit 0 is fixed to 0;</li><li>Bit 1 is fixed to 1;</li><li>Bits 2-4 are an inversion of the byte index;</li><li>Bits 5-7 are fixed to 1.</li></ul><p>Using this rule, the MAC address comes out to be <code>FE:FA:F6:F2:EE:EA</code>. We also need to accept the broadcast MAC <code>FF:FF:FF:FF:FF:FF</code> to work with ARP.</p><p><img src="https://qdiv.dev/eth2/mac-filter.png" alt="MAC filter"></p><p>On this schematics, bus <code>a[0..3]</code> is the lower 4 bits of the byte counter. Bus <code>d[0..7]</code> is the received byte. <code>U33</code> compares data bits 0 and 2-4 with their desired values, the output of <code>U34A</code> will be high when those bits match. <code>U35A</code> implements the broadcast MAC check: its output will be high when bits 0 and 2-4 are all ones. Those two signals are combined with a logical OR (implemented with diodes <code>D7</code> and resistor <code>R6</code>). The remaining bits are checked for being all ones with <code>U35B</code>.</p><p>This block only checks the validity of a single byte. To check all six of them, the result is accumulated in <code>U10A</code>. When no frame is being received, <code>ss</code> (the incoming SPI slave select signal) is low and <code>U10A</code> is set to 1. During frame reception this value is updated for each received byte. If destination MAC address matches the criteria, the value of <code>U10A</code> stays high. When byte address reaches 5, the final value is latched into <code>U36B</code>. Its output is used to inhibit frame reception if destination address is unmatched.</p><h2 id="transmitter">Transmitter
<a href="#transmitter">#</a></h2><p>Similarly to the receiver, the transmitter doesn’t implement FCS generation, it is done in software. To simplify the transmitter even further, I decided to only support frames of a fixed length. This way no complex digital comparator is necessary, the frame transmission logic only depends on a single bit of the byte counter. I selected the frame length to be 1024 bytes, this is close to the usual MTU of 1500 bytes. The frame preamble (the sequence of several 0x55 ending with a 0xD5 required by 10BASE-T) is also included in those 1024 bytes and needs to be loaded there in software.</p><p>Fixing the frame length doesn’t have any effect on higher-level protocols because they encode the packet size in their headers and do not rely on the actual Ethernet frame length.</p><p>Summary of transmitter operation:</p><ul><li>Data is stored in a static RAM;</li><li>20 MHz clock is fed to a 4-bit counter, its overflow output is used as a byte clock;</li><li>To transmit a frame, user writes to a specific write-only memory location which enables the counter;</li><li>Parallel byte data is serialized using a shift register.</li></ul><h3 id="counters">Counters
<a href="#counters">#</a></h3><p><img src="https://qdiv.dev/eth2/tx-counters.png" alt="tx counters"></p><p>Same as in the receiver, two counters are used to count bits (<code>U12</code>) and bytes (<code>U14</code>). First counter is fed by a 20 MHz clock from an integrated oscillator. 20 MHz is not used directly, but only divided at least by 2. This way the duty cycle of the oscillator doesn’t affect the output signal.</p><h3 id="data-flow">Data flow
<a href="#data-flow">#</a></h3><p><img src="https://qdiv.dev/eth2/tx-dataflow.png" alt="tx data flow"></p><p>Same as in the receiver three 74HC157 multiplexors (not shown here) are used to select address input for the RAM (<code>U22</code>). <code>U23</code> is used to load data into the RAM. <code>U24</code> acts as an intermediate storage for the byte currently being transmitted. The idea here is similar to my <a href="https://qdiv.dev/posts/vga/#image-generation">VGA pipeline</a>: byte counter 74HC4040 is a ripple counter and is slow to stabilize, <code>U24</code> provides a stable output while RAM output is still invalid. This data is fed to the shift register <code>U28</code> and shifted bit-by-bit.</p><p><em>After I’d built the thing I noticed that I’d messed up the order of bits coming from the RAM to the shift register. I had to shuffle bits in software to workaround this hardware bug. This was something I couldn’t test in Verilog beforehand.</em></p><p>To form a nice 10BASE-T signal (see <a href="https://qdiv.dev/posts/eth-to-spi/#transmitter">my previous post</a>) <code>MOSI</code> and <code>SCK</code> should be precisely synchronized. <code>U11A</code> and <code>U8B</code> achieve that. <code>tx_cnt0</code> (bit 0 of the bit counter, 20 MHz divided by 2) is used as a clock. <code>U11A</code> changes its output in sync with this signal. <code>U8B</code> delays the clock to match the delay introduced by <code>U11A</code>. Because a D-latch is more complex than a simple AND gate and has a slightly larger (by 5 ns) delay, a faster 74LV74A is used here. Its propagation delay is the same as of 74HC08. This is the only chip of a “fast” family on this board.</p><h2 id="cpu-interface">CPU interface
<a href="#cpu-interface">#</a></h2><p>From the programmer’s point of view, my Ethernet adapter has following interface:</p><ul><li>Both frame buffers are mapped at <code>0xF000</code>.</li><li>There are two read-only registers:<ul><li>8-bit status register at <code>0xFB00</code> has two flags:<ul><li><code>RX_FULL</code> - a frame is received,</li><li><code>TX_BUSY</code> - a frame is being transmitted;</li></ul></li><li>16-bit received data length register at <code>0xFB02</code>.</li></ul></li><li>Writing any value at <code>0xFB00</code> re-arms the receiver.</li><li>Writing any value at <code>0xFB01</code> starts a transmission.</li></ul><p>There are no interrupts since my CPU doesn’t support them.</p><p><img src="https://qdiv.dev/eth2/addr-select.png" alt="address selector"></p><p>Any relevant address starts with an <code>F</code> (upper 4 bits are all ones). This condition is checked by <code>U2A</code>.</p><p>Bit 11 should be 0 for a buffer address. <code>U1D</code>, <code>D2</code>, <code>R2</code> and <code>U1E</code> check that. Then the buffer select signal is combined with either write- or output-enable signals to select writing to the TX buffer or reading from the RX buffer.</p><p>Second hex digit being <code>B</code> (1011) for registers is checked by <code>U1B</code> and <code>U2B</code>. Then another diode logic block (<code>D1</code>, <code>R1</code>, <code>U1C</code>) combines it with the first digit check. Decoders <code>U4A</code> and <code>U4B</code> are used to select the individual function.</p><p>Two LEDs indicate buffer or register access.</p><h2 id="programming">Programming
<a href="#programming">#</a></h2><p>I wanted a network support for my computer, but didn’t want to implement a TCP/IP stack myself. Also I wanted a decent C compiler because my first compiler sucked and programming in assembly is annoying. So I made a <a href="https://github.com/imihajlow/ccpu-cc">C compiler</a>. It is mature enough to compile uIP 1.0 (a tiny TCP/IP library). Despite my CPU having awfully low code density, uIP is small enough to fit into RAM and have some place left for an actual application.</p><p>Network performance is very low, but I’m still very happy with it considering that no commercial CPUs or special chips are involved here:</p><ul><li>Ping round trip average 85 ms;</li><li>HTTP server download speed 2.6 kB/s (serving static files from the SD card).</li></ul><h2 id="project-repository">Project repository
<a href="#project-repository">#</a></h2><p>Models, schematic files and PCB drawings are located <a href="https://github.com/imihajlow/ccpu">on github</a>.</p></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How I Tripped Over the Debian Weak Keys Vulnerability (224 pts)]]></title>
            <link>https://www.hezmatt.org/~mpalmer/blog/2024/04/09/how-i-tripped-over-the-debian-weak-keys-vuln.html</link>
            <guid>39976225</guid>
            <pubDate>Tue, 09 Apr 2024 04:36:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.hezmatt.org/~mpalmer/blog/2024/04/09/how-i-tripped-over-the-debian-weak-keys-vuln.html">https://www.hezmatt.org/~mpalmer/blog/2024/04/09/how-i-tripped-over-the-debian-weak-keys-vuln.html</a>, See on <a href="https://news.ycombinator.com/item?id=39976225">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">

				
				<p>
					Posted: Tue,  9 April 2024
					| <a href="https://www.hezmatt.org/~mpalmer/blog/2024/04/09/how-i-tripped-over-the-debian-weak-keys-vuln.html">permalink</a>
					| <a href="https://www.hezmatt.org/~mpalmer/blog/2024/04/09/how-i-tripped-over-the-debian-weak-keys-vuln.html#comments">
						
							No comments
						
					</a>
				</p>
<p><em>Those of you who haven’t been in IT for far, far too long might not know that next month will be the 16th(!) anniversary of the <a href="https://security-tracker.debian.org/tracker/DSA-1571-1">disclosure</a> of what was, at the time, a fairly earth-shattering revelation: that for about 18 months, the Debian OpenSSL package was <a href="https://security-tracker.debian.org/tracker/CVE-2008-0166">generating entirely predictable private keys</a>.</em></p>

<p>The recent <a href="https://en.wikipedia.org/wiki/XZ_Utils_backdoor">xz-stential threat</a> (thanks to <a href="https://infosec.exchange/@nixCraft@mastodon.social">@nixCraft</a> for <a href="https://mastodon.social/@nixCraft/112219225728684695">making me aware of that one</a>), has got me thinking about my own serendipitous interaction with a major vulnerability.
Given that the statute of limitations has (probably) run out, I thought I’d share it as a tale of how “huh, that’s weird” can be a powerful threat-hunting tool – but only if you’ve got the time to keep pulling at the thread.</p>

<h2 id="prelude-to-an-adventure">Prelude to an Adventure</h2>

<p>Our story begins back in March 2008.
I was working at Engine Yard (EY), a now largely-forgotten Rails-focused hosting company, which pioneered several advances in Rails application deployment.
Probably EY’s greatest claim to lasting fame is that they helped launch a little code hosting platform you might have heard of, by providing them free infrastructure when they were little more than a glimmer in the Internet’s eye.</p>

<p>I am, of course, talking about everyone’s favourite Microsoft product: GitHub.</p>

<p>Since GitHub was in the right place, at the right time, with a compelling product offering, they quickly started to gain traction, and grow their userbase.
With growth comes challenges, amongst them the one we’re focusing on today: SSH login times.
Then, as now, GitHub provided SSH access to the git repos they hosted, by SSHing to <code>git@github.com</code> with publickey authentication.
They were using the standard way that everyone manages SSH keys: the <code>~/.ssh/authorized_keys</code> file, and that became a problem as the number of keys started to grow.</p>

<p>The way that SSH uses this file is that, when a user connects and asks for publickey authentication, SSH opens the <code>~/.ssh/authorized_keys</code> file and scans all of the keys listed in it, looking for a key which matches the key that the user presented.
This linear search is normally not a huge problem, because nobody in their right mind puts more than a few keys in their <code>~/.ssh/authorized_keys</code>, right?</p>

<figure>
<img src="https://www.hezmatt.org/~mpalmer/blog/images/2008_github_auth_keys_sideeye.jpg" alt="2008-era GitHub giving monkey puppet side-eye to the idea that nobody stores many keys in an authorized_keys file">
</figure>

<p>Of course, as a popular, rapidly-growing service, GitHub was gaining users at a fair clip, to the point that the one big file that stored all the SSH keys was starting to visibly impact SSH login times.
This problem was also not going to get any better by itself.
Something Had To Be Done.</p>

<p>EY management was keen on making sure GitHub ran well, and so despite it not <em>really</em> being a hosting problem, they were willing to help fix this problem.
For some reason, the late, great, Ezra Zygmuntowitz pointed GitHub in my direction, and let me take the time to <em>really</em> get into the problem with the GitHub team.
After examining a variety of different possible solutions, we came to the conclusion that the least-worst option was to patch OpenSSH to lookup keys in a MySQL database, indexed on the key fingerprint.</p>

<p>We didn’t take this decision on a whim – it wasn’t a case of “yeah, sure, let’s just hack around with OpenSSH, what could possibly go wrong?”.
We knew it was potentially catastrophic if things went sideways, so you can imagine how much worse the other options available were.
Ensuring that this wouldn’t compromise security was a lot of the effort that went into the change.
In the end, though, we rolled it out in early April, and lo! SSH logins were fast, and we were pretty sure we wouldn’t have to worry about this problem for a long time to come.</p>

<p>Normally, you’d think “patching OpenSSH to make mass SSH logins super fast” would be a good story on its own.
But no, this is just the opening scene.</p>

<h2 id="chekovs-gun-makes-its-appearance">Chekov’s Gun Makes its Appearance</h2>

<p>Fast forward a little under a month, to the first few days of May 2008.
I get a message from one of the GitHub team, saying that <em>somehow</em> users were able to access other users’ repos over SSH.
Naturally, as we’d recently rolled out the OpenSSH patch, which touched <em>this very thing</em>, the code I’d written was suspect number one, so I was called in to help.</p>

<figure>
<img src="https://www.hezmatt.org/~mpalmer/blog/images/the_usual_suspects.png" alt="The lineup scene from the movie The Usual Suspects">
<figcaption>
  They're called The Usual Suspects for a reason, but sometimes, it really <b>is</b> Keyser Söze
</figcaption>
</figure>

<p>Eventually, after more than a little debugging, we discovered that, somehow, there were two users with keys that had the same key fingerprint.
This <em>absolutely</em> shouldn’t happen – it’s a bit like winning the lottery twice in a row<sup id="fnref:1"><a href="https://www.hezmatt.org/~mpalmer/blog/#fn:1">1</a></sup> – unless the users had somehow shared their keys with each other, of course.
Still, it was worth investigating, just in case it was a web application bug, so the GitHub team reached out to the users impacted, to try and figure out what was going on.</p>

<p>The users professed no knowledge of each other, neither admitted to publicising their key, and couldn’t offer any explanation as to how the other person could possibly have gotten their key.</p>

<p>Then things went from “weird” to “what the…?”.
Because <em>another</em> pair of users showed up, sharing a key fingerprint – but it was a <em>different</em> shared key fingerprint.
The odds now have gone from “winning the lottery multiple times in a row” to as close to “this literally cannot happen” as makes no difference.</p>

<figure>
<img src="https://www.hezmatt.org/~mpalmer/blog/images/were_through_the_looking_glass.jpg" alt="Milhouse from The Simpsons says that We're Through The Looking Glass Here, People">
</figure>

<p>Once we were really, <em>really</em> confident that the OpenSSH patch wasn’t the cause of the problem, my involvement in the problem basically ended.
I wasn’t a GitHub employee, and EY had plenty of other customers who needed my help, so I wasn’t able to stay deeply involved in the on-going investigation of The Mystery of the Duplicate Keys.</p>

<p>However, the GitHub team did keep talking to the users involved, and managed to determine the only apparent common factor was that all the users claimed to be using Debian or Ubuntu systems, which was where their SSH keys would have been generated.</p>

<p>That was as far as the investigation had really goten, when along came May 13, 2008.</p>

<h2 id="chekovs-gun-goes-off">Chekov’s Gun Goes Off</h2>

<p>With the publication of <a href="https://security-tracker.debian.org/tracker/DSA-1571-1">DSA-1571-1</a>, everything suddenly became clear.
Through a well-meaning but ultimately disasterous cleanup of OpenSSL’s randomness generation code, the Debian maintainer had inadvertently reduced the number of possible keys that could be generated by a given user from “bazillions” to a little over 32,000.
With so many people signing up to GitHub – some of them no doubt following best practice and freshly generating a separate key – it’s unsurprising that some collisions occurred.</p>

<p>You can imagine the sense of “oooooooh, so <em>that’s</em> what’s going on!” that rippled out once the issue was understood.
I was mostly glad that we had conclusive evidence that my OpenSSH patch wasn’t at fault, little knowing how much more contact I was to have with Debian weak keys in the future, running <a href="https://pwnedkeys.com/">a huge store of known-compromised keys</a> and using them to find <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1620772">misbehaving Certificate Authorities</a>, amongst other things.</p>

<h2 id="lessons-learned">Lessons Learned</h2>

<p>While I’ve not found a description of exactly when and how Luciano Bello discovered the vulnerability that became CVE-2008-0166, I presume he first came across it some time before it was disclosed – likely before GitHub tripped over it.
The stable Debian release that included the vulnerable code had been released a year earlier, so there was plenty of time for Luciano to have discovered key collisions and go “hmm, I wonder what’s going on here?”, then keep digging until the solution presented itself.</p>

<p>The thought “hmm, that’s odd”, followed by intense investigation, leading to the discovery of a major flaw is also what ultimately brought down the recent XZ backdoor.
The critical part of that sequence is the ability to <em>do</em> that intense investigation, though.</p>

<p>When I reflect on my brush with the Debian weak keys vulnerability, what sticks out to me is the fact that I <em>didn’t</em> do the deep investigation.
I wonder if Luciano hadn’t found it, how long it might have been before it was found.
The GitHub team would have continued investigating, presumably, and perhaps they (or I) would have eventually dug deep enough to find it.
But we were all super busy – myself, working support tickets at EY, and GitHub feverishly building features and fighting the fires in their rapidly-growing service.</p>

<p>As it was, Luciano <em>was</em> able to take the time to dig in and find out what was happening, but just like the XZ backdoor, I feel like we, as an industry, got a bit lucky that someone with the skills, time, and energy was on hand at the right time to make a huge difference.</p>

<p>It’s a luxury to be able to take the time to really dig into a problem, and it’s a luxury that most of us rarely have.
Perhaps an understated takeaway is that somehow we all need to wrestle back some time to follow our hunches and really dig into the things that make us go “hmm…”.</p>

<h2 id="support-my-hunches">Support My Hunches</h2>

<p>If you’d like to help me be able to do intense investigations of mysterious software phenomena, you can <a href="https://ko-fi.com/tobermorytech">shout me a refreshing beverage on ko-fi</a>.</p>



<hr>
			
			

			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[MapSCII – A Braille and ASCII world map renderer for the console (114 pts)]]></title>
            <link>https://github.com/rastapasta/mapscii</link>
            <guid>39975887</guid>
            <pubDate>Tue, 09 Apr 2024 02:58:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/rastapasta/mapscii">https://github.com/rastapasta/mapscii</a>, See on <a href="https://news.ycombinator.com/item?id=39975887">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto"><h2 tabindex="-1" dir="auto">MapSCII - The Whole World In Your Console. <a href="https://travis-ci.com/rastapasta/mapscii" rel="nofollow"><img src="https://camo.githubusercontent.com/d7d076fbc026aa6986f301975e2539fc1b94b7dfb9b50e4143af6a3c035c2879/68747470733a2f2f7472617669732d63692e636f6d2f726173746170617374612f6d6170736369692e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/rastapasta/mapscii.svg?branch=master"></a></h2><a id="user-content-mapscii---the-whole-world-in-your-console-" aria-label="Permalink: MapSCII - The Whole World In Your Console. " href="#mapscii---the-whole-world-in-your-console-"></a></div>
<p dir="auto">A node.js based <a href="http://wiki.openstreetmap.org/wiki/Vector_tiles" rel="nofollow">Vector Tile</a> to <a href="http://www.fileformat.info/info/unicode/block/braille_patterns/utf8test.htm" rel="nofollow">Braille</a> and <a href="https://de.wikipedia.org/wiki/American_Standard_Code_for_Information_Interchange" rel="nofollow">ASCII</a> renderer for <a href="https://en.wikipedia.org/wiki/Xterm" rel="nofollow">xterm</a>-compatible terminals.</p>
<p dir="auto"><a href="https://asciinema.org/a/117813?autoplay=1" rel="nofollow"><img src="https://cloud.githubusercontent.com/assets/1259904/25480718/497a64e2-2b4a-11e7-9cf0-ed52ee0b89c0.png" alt="asciicast"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Try it out!</h2><a id="user-content-try-it-out" aria-label="Permalink: Try it out!" href="#try-it-out"></a></p>

<p dir="auto">If you're on Windows, use the open source telnet client <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" rel="nofollow">PuTTY</a> to connect.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>Use your mouse to drag and zoom in and out!</li>
<li>Discover Point-of-Interests around any given location</li>
<li>Highly customizable layer styling with <a href="https://www.mapbox.com/mapbox-gl-style-spec/" rel="nofollow">Mapbox Styles</a> support</li>
<li>Connect to any public or private vector tile server</li>
<li>Or just use the supplied and optimized <a href="https://github.com/osm2vectortiles">OSM2VectorTiles</a> based one</li>
<li>Work offline and discover local <a href="https://github.com/mapbox/vector-tile-spec">VectorTile</a>/<a href="https://github.com/mapbox/mbtiles-spec">MBTiles</a></li>
<li>Compatible with most Linux and OSX terminals</li>
<li>Highly optimized algorithms for a smooth experience</li>
<li>100% pure JavaScript! 😎</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to run it locally</h2><a id="user-content-how-to-run-it-locally" aria-label="Permalink: How to run it locally" href="#how-to-run-it-locally"></a></p>
<p dir="auto">With a modern node installation available, just start it with</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">How to install it locally</h2><a id="user-content-how-to-install-it-locally" aria-label="Permalink: How to install it locally" href="#how-to-install-it-locally"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">With npm</h3><a id="user-content-with-npm" aria-label="Permalink: With npm" href="#with-npm"></a></p>
<p dir="auto">If you haven't already got Node.js &gt;= version 10, then <a href="http://nodejs.org/" rel="nofollow">go get it</a>.</p>

<p dir="auto">If you're on OSX, or get an error about file permissions, you may need to do <code>sudo npm install -g mapscii</code></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">With snap</h3><a id="user-content-with-snap" aria-label="Permalink: With snap" href="#with-snap"></a></p>
<p dir="auto">In any of the <a href="https://snapcraft.io/docs/core/install" rel="nofollow">supported Linux distros</a>:</p>
<div data-snippet-clipboard-copy-content="sudo snap install mapscii"><pre><code>sudo snap install mapscii
</code></pre></div>
<p dir="auto">(This snap is maintained by <a href="https://github.com/nathanhaines/">@nathanhaines</a>)</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Running</h2><a id="user-content-running" aria-label="Permalink: Running" href="#running"></a></p>
<p dir="auto">This is pretty simple too.</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Keyboard shortcuts</h2><a id="user-content-keyboard-shortcuts" aria-label="Permalink: Keyboard shortcuts" href="#keyboard-shortcuts"></a></p>
<ul dir="auto">
<li>Arrows <strong>up</strong>, <strong>down</strong>, <strong>left</strong>, <strong>right</strong> to scroll around</li>
<li>Press <strong>a</strong> or <strong>z</strong> to zoom in and out</li>
<li>Press <strong>c</strong> to switch to block character mode</li>
<li>Press <strong>q</strong> to quit</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Mouse control</h2><a id="user-content-mouse-control" aria-label="Permalink: Mouse control" href="#mouse-control"></a></p>
<p dir="auto">If your terminal supports mouse events you can drag the map and use your scroll wheel to zoom in and out.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Behind the scenes</h2><a id="user-content-behind-the-scenes" aria-label="Permalink: Behind the scenes" href="#behind-the-scenes"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Libraries</h3><a id="user-content-libraries" aria-label="Permalink: Libraries" href="#libraries"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Mastering the console</h4><a id="user-content-mastering-the-console" aria-label="Permalink: Mastering the console" href="#mastering-the-console"></a></p>
<ul dir="auto">
<li><a href="https://github.com/substack/node-x256"><code>x256</code></a> for converting RGB values to closest xterm-256 <a href="https://en.wikipedia.org/wiki/File:Xterm_256color_chart.svg" rel="nofollow">color code</a></li>
<li><a href="https://github.com/CoderPuppy/term-mouse"><code>term-mouse</code></a> for mouse handling</li>
<li><a href="https://github.com/TooTallNate/keypress"><code>keypress</code></a> for input handling</li>
<li><a href="https://github.com/sindresorhus/string-width"><code>string-width</code></a> to determine visual string lengths</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Discovering the map data</h4><a id="user-content-discovering-the-map-data" aria-label="Permalink: Discovering the map data" href="#discovering-the-map-data"></a></p>
<ul dir="auto">
<li><a href="https://github.com/mapbox/vector-tile-js"><code>vector-tile</code></a> for <a href="https://github.com/mapbox/vector-tile-spec/tree/master/2.1">VectorTile</a> parsing</li>
<li><a href="https://github.com/mapbox/pbf"><code>pbf</code></a> for <a href="https://developers.google.com/protocol-buffers/" rel="nofollow">Protobuf</a> decoding</li>
<li><a href="https://github.com/mapbox/node-mbtiles"><code>mbtiles</code></a> for <a href="https://github.com/mapbox/mbtiles-spec/blob/master/1.2/spec.md">MBTiles</a> parsing</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Juggling the vectors and numbers</h4><a id="user-content-juggling-the-vectors-and-numbers" aria-label="Permalink: Juggling the vectors and numbers" href="#juggling-the-vectors-and-numbers"></a></p>
<ul dir="auto">
<li><a href="https://github.com/mapbox/earcut"><code>earcut</code></a> for polygon triangulation</li>
<li><a href="https://github.com/mourner/rbush"><code>rbush</code></a> for 2D spatial indexing of geo and label data</li>
<li><a href="https://github.com/madbence/node-bresenham"><code>bresenham</code></a> for line point calculations</li>
<li><a href="https://github.com/mourner/simplify-js"><code>simplify-js</code></a> for polyline simplifications</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Handling the flow</h4><a id="user-content-handling-the-flow" aria-label="Permalink: Handling the flow" href="#handling-the-flow"></a></p>
<ul dir="auto">
<li><a href="https://github.com/bitinn/node-fetch"><code>node-fetch</code></a> for HTTP requests</li>
<li><a href="https://github.com/sindresorhus/env-paths"><code>env-paths</code></a> to determine where to persist downloaded tiles</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">TODOs</h3><a id="user-content-todos" aria-label="Permalink: TODOs" href="#todos"></a></p>
<ul dir="auto">
<li>
<p dir="auto">MapSCII</p>
<ul>
<li>
<p dir="auto"> GeoJSON support via <a href="https://github.com/mapbox/geojson-vt">geojson-vt</a></p>
</li>
<li>
<p dir="auto"> CLI support</p>
<ul dir="auto">
<li>[-] startup parameters
<ul>
<li> TileSource</li>
<li> Style</li>
<li> center position</li>
<li> zoom</li>
<li> demo mode?</li>
</ul>
</li>
</ul>
</li>
<li>
<p dir="auto"> mouse control</p>
<ul>
<li> hover POIs/labels</li>
<li> hover maybe even polygons/-lines?</li>
</ul>
</li>
</ul>
</li>
<li>
<p dir="auto">Styler</p>
<ul>
<li> respect zoom based style ranges</li>
</ul>
</li>
<li>
<p dir="auto">Renderer</p>
<ul>
<li> download and process tiles in a different thread (<a href="https://github.com/rastapasta/mapscii/issues/3" data-hovercard-type="issue" data-hovercard-url="/rastapasta/mapscii/issues/3/hovercard">#3</a>)</li>
<li> optimize renderer for large areas (<a href="https://github.com/rastapasta/mapscii/issues/6" data-hovercard-type="issue" data-hovercard-url="/rastapasta/mapscii/issues/6/hovercard">#6</a>)</li>
<li> label drawing
<ul>
<li> multi line label?</li>
</ul>
</li>
</ul>
</li>
<li>
<p dir="auto">TileSource</p>
<ul>
<li> implement single vector-tile handling</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Special thanks</h2><a id="user-content-special-thanks" aria-label="Permalink: Special thanks" href="#special-thanks"></a></p>
<ul dir="auto">
<li><a href="https://github.com/lukasmartinelli">lukasmartinelli</a> &amp; <a href="https://github.com/manuelroth">manuelroth</a> for all their work on <a href="https://github.com/osm2vectortiles">OSM2VectorTiles</a> (global vector tiles from <a href="https://wiki.openstreetmap.org/wiki/Planet.osm" rel="nofollow">OSM Planet</a>)</li>
<li><a href="https://github.com/mourner">mourner</a> for all his work on mindblowing GIS algorithms (like the used <a href="https://github.com/mapbox/earcut">earcut</a>, <a href="https://github.com/mourner/rbush">rbush</a>, <a href="https://github.com/mourner/simplify-js">simplify-js</a>, ..)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Licenses</h2><a id="user-content-licenses" aria-label="Permalink: Licenses" href="#licenses"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Map data</h3><a id="user-content-map-data" aria-label="Permalink: Map data" href="#map-data"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">The Open Data Commons Open Database License (oDbl)</h4><a id="user-content-the-open-data-commons-open-database-license-odbl" aria-label="Permalink: The Open Data Commons Open Database License (oDbl)" href="#the-open-data-commons-open-database-license-odbl"></a></p>
<p dir="auto"><a href="https://www.openstreetmap.org/" rel="nofollow">OpenStreetMap</a> is open data, licensed under the <a href="http://opendatacommons.org/licenses/odbl/" rel="nofollow">Open Data Commons Open Database License</a> (ODbL) by the <a href="http://osmfoundation.org/" rel="nofollow">OpenStreetMap Foundation</a> (OSMF).</p>
<p dir="auto">You are free to copy, distribute, transmit and adapt our data, as long as you credit OpenStreetMap and its contributors. If you alter or build upon our data, you may distribute the result only under the same licence. The full <a href="http://opendatacommons.org/licenses/odbl/1.0/" rel="nofollow">legal code</a> explains your rights and responsibilities.</p>
<p dir="auto">The cartography in our map tiles, and our documentation, are licenced under the <a href="http://creativecommons.org/licenses/by-sa/2.0/" rel="nofollow">Creative Commons Attribution-ShareAlike 2.0</a> licence (CC BY-SA).</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">MapSCII</h3><a id="user-content-mapscii" aria-label="Permalink: MapSCII" href="#mapscii"></a></p>
<ul dir="auto">
<li><a href="https://github.com/rastapasta/mapscii/blob/master/LICENSE">License</a></li>
<li><a href="https://github.com/rastapasta/mapscii/blob/master/AUTHORS">Authors</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[BART to offer final rides on original equipment on April 20 (101 pts)]]></title>
            <link>https://www.trains.com/trn/news-reviews/news-wire/bart-to-offer-final-rides-on-original-equipment-on-april-20/</link>
            <guid>39975865</guid>
            <pubDate>Tue, 09 Apr 2024 02:52:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.trains.com/trn/news-reviews/news-wire/bart-to-offer-final-rides-on-original-equipment-on-april-20/">https://www.trains.com/trn/news-reviews/news-wire/bart-to-offer-final-rides-on-original-equipment-on-april-20/</a>, See on <a href="https://news.ycombinator.com/item?id=39975865">Hacker News</a></p>
<div id="readability-page-1" class="page"><p><strong>'Riding into History' event will operate on original 24-mile segment to Fremont, Calif.</strong></p><div><figure id="attachment_170302" aria-describedby="caption-attachment-170302"><img fetchpriority="high" decoding="async" src="https://www.trains.com/wp-content/uploads/2023/08/TRN_BART_first_day.jpg" alt="Black and white photo of rapid-transit equipment in underground station" width="1000" height="761" srcset="https://www.trains.com/wp-content/uploads/2023/08/TRN_BART_first_day.jpg 1000w, https://www.trains.com/wp-content/uploads/2023/08/TRN_BART_first_day-300x228.jpg 300w, https://www.trains.com/wp-content/uploads/2023/08/TRN_BART_first_day-768x584.jpg 768w, https://www.trains.com/wp-content/uploads/2023/08/TRN_BART_first_day-600x457.jpg 600w, https://www.trains.com/wp-content/uploads/2023/08/TRN_BART_first_day-400x304.jpg 400w, https://www.trains.com/wp-content/uploads/2023/08/TRN_BART_first_day-200x152.jpg 200w, https://www.trains.com/wp-content/uploads/2023/08/TRN_BART_first_day-350x266.jpg 350w" sizes="(max-width: 1000px) 100vw, 1000px"><figcaption id="caption-attachment-170302">A Bay Area Rapid Transit prototype train poses at the Lake Merritt station in Oakland prior to the start of service, in late 1971 or early 1972. While BART removed the last of the original equipment from service last September, it will hold a farewell event on April 20. BART</figcaption></figure>
<hr>
<p>OAKLAND, Calif. — Bay Area Rapid Transit, the 131-mile electrified rail network in the San Francisco Bay Area, is offering the public a last chance to ride the 1970s-era futuristic railcars that made up its original fleet.</p>
<p>On Saturday, April 20, at 1 p.m. at the MacArthur station in Oakland, BART will commemorate the cars with a ceremony and then run two 10-car trains using original cars for the last time. Anyone can ride for the usual fare.</p>
<p>“We understand that BART cars are iconic, especially the sloped-front A cars,” said BART spokesperson Jim Allison. “We just wanted to give them a proper sendoff so that people had a chance to say goodbye to the cars that have been serving the Bay Area for more than 50 years.”</p>
<p>The special trains will run about 24 miles from MacArthur to Fremont, the first segment of BART to open 52 years ago. The trains will make the usual stops and run more loops between the two stations if needed to accommodate everyone who wants to ride, he said.</p>
<p>The “Riding into History: Final Run of the First Fleet” event will include speeches, a raffle for a couple of railcar plates, and probably some merchandise for sale, Allison said. Some details were still being decided early this month.</p>
<p>April 20 is coincidentally the same day when the electric trains of the Key System, a BART predecessor, ran their final miles in 1958.</p>
<p>The legacy fleet ended regular service in September 2023; when that date was set, BART had indicated it would eventually hold a special farewell event [see <a href="https://www.trains.com/trn/news-reviews/news-wire/bart-to-retire-last-original-cars-on-sept-11/" target="_blank" rel="noopener">“BART to retire last original cars …,”</a> Trains News Wire, Aug. 25, 2023]. Most of the legacy equipment has already been recycled, but BART is donating three cars — one each of the A, B and C versions — to the Western Railway Museum at Rio Vista Junction, which is run by the Bay Area Electric Railroad Association. Five other cars were awarded in 2022 for reuse ranging from an arcade area at an Oakland bar and grill to use in firefighter training [see “<a href="https://www.trains.com/trn/news-reviews/news-wire/bart-to-award-eight-retired-cars-for-reuse/" target="_blank" rel="noopener">BART to award eight retired cars ..,”</a> News Wire, March 16, 2022].</p>
<p>When it opened on Sept. 11, 1972, BART was the first entirely new rail transit system built in the United States in decades, built to an atypical 5-foot, 6-inch gauge for reasons <a href="https://www.bart.gov/news/articles/2022/news20220708-2" target="_blank" rel="noopener">the agency explains here</a>. Its technology, advanced for the time, included central computer control, on-board electronic propulsion and “the lightest weight car per passenger ever built,” the museum says. The intended effect was space age, not subway.</p>
<p>Museum volunteers will ride the last trains, staff a table, and speak for a few minutes at the farewell, said Andy Payne, a museum archivist and author of “Legacy Fleet,” an upcoming book about the cars.</p>
<p>The museum will receive the cars in June and intends to place them in its Loring C. Jensen Memorial Car House 3. “We are planning exhibits near the cars showcasing the history of the BART system and the legacy fleet,” he said. “In the future, if funding allows, we would love to build the <a href="https://www.wrm.org/fundraising-campaigns/rapid-transit-history-center" target="_blank" rel="noopener">Rapid Transit History Center</a>” that would feature the cars and other aspects of Bay Area electric rail history.</p>
<p>The museum runs historic equipment from several electric railroads on about 6 miles of ex-Sacramento Northern track with overhead wire, but can’t operate the BART cars, because of their gauge and need for third-rail power.</p>
<p>According to BART, the 669 cars in the legacy fleet used 1,000-volt DC electricity for propulsion, with one 150 hp motor per axle and four motors per car. The fleet had:</p>
<ul>
<li>59 A2 cars and 380 B2 cars, built by aerospace company Rohr Industries. They began service in 1972, and were rehabilitated in 1997 and 2002.</li>
<li>150 C1 cars from Alstom. They entered service in 1988, and were never rehabilitated.</li>
<li>80 C2 cars from Morrison-Knudsen. They began service in 1994, and were never rehabilitated.</li>
</ul>
<p>Each car was 70 feet long, except for the A model, 75 feet with a cab.</p>
<p>BART’s new <a href="https://www.bart.gov/about/projects/cars" target="_blank" rel="noopener">Fleet of the Future</a> consists of 775 cars from Bombardier, later bought by Alstom. Also 70 feet long, each car uses 1,000-volt DC electricity, gets power from a third rail, and has two trucks with one 194-hp motor per axle, and two axles per truck.</p>
<p><em>— Updated at 1:30 p.m. CT to correct caption information.</em></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Distributed SQLite: Paradigm shift or hype? (204 pts)]]></title>
            <link>https://kerkour.com/distributed-sqlite</link>
            <guid>39975596</guid>
            <pubDate>Tue, 09 Apr 2024 01:51:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://kerkour.com/distributed-sqlite">https://kerkour.com/distributed-sqlite</a>, See on <a href="https://news.ycombinator.com/item?id=39975596">Hacker News</a></p>
Couldn't get https://kerkour.com/distributed-sqlite: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[TSAC: Low Bitrate Audio Compression (181 pts)]]></title>
            <link>https://bellard.org/tsac/</link>
            <guid>39975331</guid>
            <pubDate>Tue, 09 Apr 2024 01:00:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bellard.org/tsac/">https://bellard.org/tsac/</a>, See on <a href="https://news.ycombinator.com/item?id=39975331">Hacker News</a></p>
<div id="readability-page-1" class="page">


<p>
TSAC is an audio compression utility reaching very low bitrates such
as 5.5 kb/s for mono or 7.5 kb/s for stereo at 44.1 kHz with a good
perceptual quality. Hence TSAC compresses a 3.5 minute stereo song to
a file of 192 KiB.
</p>
<p>
An Nvidia GPU is necessary for fast operation. CPU only is also
supported but slower.
</p>

<h2>Compression Results</h2>

<p>The audio extracts are
from <a href="https://listening-test.coresv.net/results.htm">here</a>.
</p>
  
<p>
  Waiting (Pops):
</p>
<table>
  <tbody><tr>
    <td>original<br>
      <audio controls=""><source src="https://bellard.org/tsac/Waiting.wav" type="audio/wav"></audio>
    </td><td>stereo 7.26 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/Waiting_stereo.wav" type="audio/wav"></audio>
    </td><td>mono 5.61 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/Waiting_mono.wav" type="audio/wav"></audio>
    </td><td>stereo 2.99 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/Waiting_stereo_q5.wav" type="audio/wav"></audio>
  </td></tr>
</tbody></table>

<p>
  Greatest_Love_of_All_2min57 (Pops):
</p>
<table>
  <tbody><tr> 
   <td>original<br>
      <audio controls=""><source src="https://bellard.org/tsac/Greatest_Love_of_All_2min57.wav" type="audio/wav"></audio>
   </td><td>stereo 6.79 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/Greatest_Love_stereo.wav" type="audio/wav"></audio>
   </td><td>mono 5.02 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/Greatest_Love_stereo.wav" type="audio/wav"></audio>
   </td><td>stereo 2.84 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/Greatest_Love_stereo_q5.wav" type="audio/wav"></audio>
  </td></tr>
</tbody></table>

<p>
  9-Have-big-expensive-car.441 (Pops):
</p>
<table>
<tbody><tr> 
   <td>original<br>
     <audio controls=""><source src="https://bellard.org/tsac/9-Have-big-expensive-car.441.wav" type="audio/wav"></audio>
   </td><td>stereo 7.81 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/Have-big-expensive-car_stereo.wav" type="audio/wav"></audio>
   </td><td>mono 5.91 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/Have-big-expensive-car_mono.wav" type="audio/wav"></audio>
   </td><td>stereo 3.25 kb/s<br>
     <audio controls=""><source src="https://bellard.org/tsac/Have-big-expensive-car_stereo_q5.wav" type="audio/wav"></audio>
</td></tr>
</tbody></table>

<p>
  21-classic.441 (Classic):
</p>
<table>
<tbody><tr> 
   <td>original<br>
     <audio controls=""><source src="https://bellard.org/tsac/21-classic.441.wav" type="audio/wav"></audio>
   </td><td>stereo 6.21 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/classic_stereo.wav" type="audio/wav"></audio>
   </td><td>mono 4.71 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/classic_mono.wav" type="audio/wav"></audio>
   </td><td>stereo 2.57 kb/s<br>
     <audio controls=""><source src="https://bellard.org/tsac/classic_stereo_q5.wav" type="audio/wav"></audio>
</td></tr>
</tbody></table>

<p>
  4-Sound-English-male.441 (Voice):
</p>
<table>
  <tbody><tr>
    <td>original<br>
      <audio controls=""><source src="https://bellard.org/tsac/4-Sound-English-male.441.wav" type="audio/wav"></audio>
    </td><td>mono 6.79 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/4-Sound-English-male.441_mono.wav" type="audio/wav"></audio>
    </td><td>mono 3.74 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/4-Sound-English-male.441_mono_q5.wav" type="audio/wav"></audio>
    </td><td>mono 2.18 kb/s<br>
      <audio controls=""><source src="https://bellard.org/tsac/4-Sound-English-male.441_mono_q3.wav" type="audio/wav"></audio>
  </td></tr>
</tbody></table>

<h2>Download</h2>

<ul>
  <li>Linux version: <a href="https://bellard.org/tsac/tsac-2024-04-08.tar.gz">tsac-2024-04-08.tar.gz</a>. (<a href="https://bellard.org/tsac/readme.txt">readme.txt</a>)</li>
  <li>Windows version (experimental): <a href="https://bellard.org/tsac/tsac-2024-04-08-win64.zip">tsac-2024-04-08-win64.zip</a>.</li>
</ul>

<h2>Technical information</h2>
<ul>
  <li><code>tsac</code> is based on a modified version of
    the <a href="https://github.com/descriptinc/descript-audio-codec">Descript
      Audio Codec</a> extended for stereo and a Transformer model to further
    increase the compression ratio. Both models are quantized to 8 bits
    per parameter.</li>
  <li>The Transformer model is evaluated in a deterministic and
    reproducible way. Hence the result does not depend on the exact
    GPU or CPU model nor on the number of configured threads. This key
    point ensures that a compressed file can be decompressed using a
    different hardware or software configuration.</li>
</ul>

<hr>
Fabrice Bellard - <a href="https://bellard.org/">https://bellard.org/</a>


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[1.18k drawings of plant root systems (292 pts)]]></title>
            <link>https://images.wur.nl/digital/collection/coll13/search</link>
            <guid>39974646</guid>
            <pubDate>Mon, 08 Apr 2024 23:11:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://images.wur.nl/digital/collection/coll13/search">https://images.wur.nl/digital/collection/coll13/search</a>, See on <a href="https://news.ycombinator.com/item?id=39974646">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Hello OLMo: A truly open LLM (325 pts)]]></title>
            <link>https://blog.allenai.org/hello-olmo-a-truly-open-llm-43f7e7359222?gi=760105621962</link>
            <guid>39974374</guid>
            <pubDate>Mon, 08 Apr 2024 22:26:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.allenai.org/hello-olmo-a-truly-open-llm-43f7e7359222?gi=760105621962">https://blog.allenai.org/hello-olmo-a-truly-open-llm-43f7e7359222?gi=760105621962</a>, See on <a href="https://news.ycombinator.com/item?id=39974374">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><a href="https://ai2.medium.com/?source=post_page-----43f7e7359222--------------------------------" rel="noopener follow"><div aria-hidden="false"><p><img alt="AI2" src="https://miro.medium.com/v2/resize:fill:88:88/2*SvB65gf75EGAqMn3yoQBqA.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"></p></div></a><a href="https://blog.allenai.org/?source=post_page-----43f7e7359222--------------------------------" rel="noopener  ugc nofollow"><div aria-hidden="false"><p><img alt="AI2 Blog" src="https://miro.medium.com/v2/resize:fill:48:48/1*CFYlEW-OV_f22ROc3Lr52g.png" width="24" height="24" loading="lazy" data-testid="publicationPhoto"></p></div></a></div><figure></figure><p id="9388">As the world races to deploy AI models that are effective and safe, the demand for Open Large Language Models (LLMs) has exploded. The massive adoption of both open and closed AI models means that AI capabilities have leapfrogged our ability to understand how they are created. Releasing the OLMo framework will provide the industry with an opportunity to understand what is going on inside AI models.</p><p id="fdbf">Today, <a href="https://allenai.org/olmo" rel="noopener ugc nofollow" target="_blank">The Allen Institute for AI (AI2) </a>has released <a href="https://huggingface.co/allenai/OLMo-7B" rel="noopener ugc nofollow" target="_blank">OLMo 7B</a>, a truly open, state-of-the-art large language model released alongside the pre-training data and training code. This empowers researchers and developers to use the best <em>and</em> open models to advance the science of language models collectively.</p><blockquote><p id="c46e">“Open foundation models have been critical in driving a burst of innovation and development around generative AI,” said Yann LeCun, Chief AI Scientist at Meta. “The vibrant community that comes from open source is the fastest and most effective way to build the future of AI.”</p></blockquote><p id="05f0">OLMo and the framework is designed to aid researchers in training and experimenting with large language models. They are available for direct download on <a href="https://huggingface.co/allenai/OLMo-7B" rel="noopener ugc nofollow" target="_blank">Hugging Face</a> and in <a href="https://github.com/allenai/OLMo" rel="noopener ugc nofollow" target="_blank">GitHub</a>. This work was made possible, in part, via a collaboration with the <a href="https://www.harvard.edu/kempner-institute/" rel="noopener ugc nofollow" target="_blank">Kempner Institute for the Study of Natural and Artificial Intelligence at Harvard University</a> and partners including <a href="https://www.amd.com/en.html" rel="noopener ugc nofollow" target="_blank">AMD</a>, <a href="https://www.csc.fi/en/home" rel="noopener ugc nofollow" target="_blank">CSC</a> (<a href="https://www.lumi-supercomputer.eu/" rel="noopener ugc nofollow" target="_blank">Lumi Supercomputer</a>), the <a href="https://www.cs.washington.edu/" rel="noopener ugc nofollow" target="_blank">Paul G. Allen School of Computer Science &amp; Engineering at the University of Washington</a> and <a href="https://www.databricks.com/" rel="noopener ugc nofollow" target="_blank">Databricks</a>.</p><p id="5d96">The framework features a suite of completely open AI development tools, including:</p><ul><li id="8b40"><strong>Full pretraining data</strong>: The model is built on AI2’s <a rel="noopener ugc nofollow" target="_blank" href="https://blog.allenai.org/dolma-3-trillion-tokens-open-llm-corpus-9a0ff4b8da64">Dolma</a> set which features three trillion token open corpus for language model pretraining, including code that produces the training data.</li><li id="b143"><strong>Training code and model weights:</strong> The OLMo framework includes full model weights for four model variants at the 7B scale, each trained to at least 2T tokens. Inference code, training metrics and training logs are all provided.</li><li id="9b2a"><strong>Evaluation: </strong>We’ve released the evaluation suite used in development, complete with 500+ checkpoints per model, from every 1000 steps during the training process and evaluation code under the umbrella of the Catwalk project.</li></ul><blockquote><p id="923f">“I’m enthusiastic about getting OLMo into the hands of AI researchers,” said Eric Horvitz, Microsoft’s Chief Scientific Officer and a founding member of the AI2 Scientific Advisory Board. “The new offering continues Allen AI’s tradition of providing valuable open models, tools, and data, which have spurred numerous advancements in AI across the global community.”</p></blockquote><h2 id="c157"><strong>A truly open model</strong></h2><p id="7709">By making OLMo and its training data fully available to the public, AI2 has taken a big step towards collaboratively building the best open language model in the world. In the coming months, AI2 will continue to iterate on OLMo and will bring different model sizes, modalities, datasets, and capabilities into the OLMo family.</p><blockquote><p id="7f01">“Many language models today are published with limited transparency. Without having access to training data, researchers cannot scientifically understand how a model is working. It’s the equivalent of drug discovery without clinical trials or studying the solar system without a telescope,” said <a href="https://homes.cs.washington.edu/~hannaneh/" rel="noopener ugc nofollow" target="_blank">Hanna Hajishirzi</a>, OLMo project lead, a senior director of NLP Research at AI2, and a professor in the UW’s Allen School. “With our new framework, researchers will finally be able to study the science of LLMs, which is critical to building the next generation of safe and trustworthy AI.”</p></blockquote><p id="edf2">With OLMo, AI researchers and developers will experience:</p><ul><li id="c6b3"><strong>More Precision:</strong> With full insight into the training data behind the model, researchers will be able to work faster and no longer need to depend on qualitative assumptions of how we feel the model is performing but can test it scientifically.</li><li id="3b50"><strong>Less Carbon: </strong>Currently one training run is equivalent to the emissions of <a href="https://www.epa.gov/energy/greenhouse-gas-equivalencies-calculator" rel="noopener ugc nofollow" target="_blank">nine US homes for one year.</a> By opening the full training and evaluation ecosystem, it radically reduces developmental redundancies, which is critical in the decarbonization of AI</li><li id="d283"><strong>Lasting results:</strong> Keeping models and their datasets in the open and not behind APIs enables researchers to learn and build from previous models and work.</li></ul><p id="64be">“With OLMo, open <em>actually </em>means ‘open’ and everyone in the AI research community will have access to all aspects of model creation, including training code, evaluation methods, data, and so on” said <a href="https://nasmith.github.io/" rel="noopener ugc nofollow" target="_blank">Noah Smith</a>, OLMo project lead, a senior director of NLP Research at AI2, and a professor in the UW’s Allen School. “AI was once an open field centered on an active research community, but as models grew, became more expensive, and started turning into commercial products, AI work started to happen behind closed doors. With OLMo we hope to work against this trend and empower the research community to come together to better understand and engage with language models in a scientific way, leading to more responsible AI technology that benefits everyone.”</p><p id="f6a3">“With AI2’s deep expertise in natural language processing combined with AMD high-performance computing engines, the OLMo models developed on the LUMI Supercomputer powered by AMD EPYC™ CPUs and AMD Instinct™ accelerators offer a unique opportunity to truly expand AI experimentation and innovation and advance the industry like never before. This new open framework will provide the AI research community across the world with trusted resources and a platform to contribute to and work directly on language models.” — Ian Ferreria, Senior Director, AI Solutions, AMD</p><p id="70eb">“We are happy that we can contribute to this important initiative by providing the computing capacity from the LUMI supercomputer along with our expertise. Public supercomputers like LUMI play a vital role in the infrastructure for open and transparent AI.” Dr. Pekka Manninen, Director of Science and Technology, CSC</p><p id="ba67">LUMI supercomputer in Finland is hosted by CSC, and owned by EuroHPC Joint Undertaking and 10 European countries. LUMI is the fastest supercomputer in Europe, and is known for its entirely carbon-free operations and was critical in supporting the pre-training work necessary to develop OLMo.</p><p id="f366">“Databricks is excited to be collaborating with the Allen Institute for AI on the release of their OLMo open source model and framework. OLMo sets the standard for what it means to be open. Everyone in academia, industry, and the broader community will benefit enormously from access to not only the model but all of the training details, including the data, code, and intermediate checkpoints. I am especially proud that this model was developed on the Mosaic AI model training platform from Databricks. As with all great open source releases, the best is yet to come now that these artifacts and tools are in the hands of the community.” — Jonathan Frankle, Chief Scientist (Neural Networks), Databricks.</p><h2 id="d1d1">Learn more</h2><p id="d09a"><a rel="noopener ugc nofollow" target="_blank" href="https://blog.allenai.org/olmo-open-language-model-87ccfc95f580">Getting started with OLMo technical blog</a></p><p id="6458"><a href="https://allenai.org/olmo/olmo-paper.pdf" rel="noopener ugc nofollow" target="_blank">OLMo 7B technical report</a></p><p id="08bd"><a href="https://huggingface.co/allenai/OLMo-7B" rel="noopener ugc nofollow" target="_blank">Get OLMo 7B</a></p><p id="59fc">For more information on the OLMo framework and The Allen Institute for AI visit <a href="https://allenai.org/olmo" rel="noopener ugc nofollow" target="_blank">here</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[llm.c – LLM training in simple, pure C/CUDA (897 pts)]]></title>
            <link>https://github.com/karpathy/llm.c</link>
            <guid>39973467</guid>
            <pubDate>Mon, 08 Apr 2024 20:38:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/karpathy/llm.c">https://github.com/karpathy/llm.c</a>, See on <a href="https://news.ycombinator.com/item?id=39973467">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">llm.c</h2><a id="user-content-llmc" aria-label="Permalink: llm.c" href="#llmc"></a></p>
<p dir="auto">LLM training in simple, pure C/CUDA. There is no need for 245MB of PyTorch or 107MB of cPython. For example, training GPT-2 (CPU, fp32) is ~1,000 lines of clean code in a single file. It compiles and runs instantly, and exactly matches the PyTorch reference implementation. I chose GPT-2 as the first working example because it is the grand-daddy of LLMs, the first time the modern stack was put together.</p>
<p dir="auto">Currently, I am working on:</p>
<ul dir="auto">
<li>direct CUDA implementation, which will be significantly faster and probably come close to PyTorch.</li>
<li>speed up the CPU version with SIMD instructions, AVX2 on x86 / NEON on ARM (e.g. Apple Silicon).</li>
<li>more modern architectures, e.g. Llama2, Gemma, etc.</li>
</ul>
<p dir="auto">For the repo, I'd like to maintain both clean, simple reference implementations alongside a also lot more optimized versions that can come close to PyTorch, but in a tiny fraction of the code and dependencies.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">quick start</h2><a id="user-content-quick-start" aria-label="Permalink: quick start" href="#quick-start"></a></p>
<p dir="auto">Download and tokenize a dataset. The <a href="https://raw.githubusercontent.com/karpathy/char-rnn/master/data/tinyshakespeare/input.txt" rel="nofollow">tinyshakespeare</a> dataset is the fastest to download and tokenize:</p>
<div dir="auto" data-snippet-clipboard-copy-content="python prepro_tinyshakespeare.py"><pre>python prepro_tinyshakespeare.py</pre></div>
<p dir="auto">This prints:</p>
<div data-snippet-clipboard-copy-content="Saved 32768 tokens to data/tiny_shakespeare_val.bin
Saved 305260 tokens to data/tiny_shakespeare_train.bin"><pre><code>Saved 32768 tokens to data/tiny_shakespeare_val.bin
Saved 305260 tokens to data/tiny_shakespeare_train.bin
</code></pre></div>
<p dir="auto">The .bin files are raw byte streams of int32 numbers indicating the token ids with the GPT-2 tokenizer. Alternatively you could also tokenize the <a href="https://huggingface.co/datasets/roneneldan/TinyStories" rel="nofollow">TinyStories</a> dataset with <code>prepro_tinystories.py</code>.</p>
<p dir="auto">In principle we'd be ready to the train the model right here. However the baseline CPU/fp32 reference code is so inefficient that it's not practical to train these models from scratch yet. Instead, we initialize with the GPT-2 weights released by OpenAI and just do finetuning. For that, we have to download the GPT-2 weights and save them as a checkpoint we can load in C:</p>

<p dir="auto">You'll recognize this code from nanoGPT as a simple GPT-2 reference implementation in PyTorch. This script will download the GPT-2 (124M) model, overfit a single batch of data for 10 iterations, run a few steps of generation, and most importantly it will save two files: 1) the <code>gpt2_124M.bin</code> file that contains the raw model weights for loading in C, and <code>gpt2_124M_debug_state.bin</code>, which also contains more debug state: the inputs, targets, logits and loss. This is very useful for debugging C code, for unit testing, and making sure we're exactly matching the PyTorch reference implementation. For now all we care about are the model weights in <code>gpt2_124M.bin</code>. We can now initialize with them and train in raw C. First compile the code:</p>

<p dir="auto">You can have a look inside the <code>Makefile</code> and its comments. It will try to autodetect if OpenMP is available on your system, which is very helpful for speeding up the code at very low cost of code complexity. Once <code>train_gpt2</code> is compiled, you can run it:</p>
<div dir="auto" data-snippet-clipboard-copy-content="OMP_NUM_THREADS=8 ./train_gpt2"><pre>OMP_NUM_THREADS=8 ./train_gpt2</pre></div>
<p dir="auto">You should tune the number of threads depending on how many cores your CPU has. The program will load the model weights, the tokens, it will run a finetuning loop for a few iterations with Adam lr 1e-4, and then generate a sample from the model. The file is (I think) very readable and you should have a look. Simply, there are implementations for the forward and backward pass of all the layers, and they get strung together into a large, manual, forward/backward/update loop. The output looks like this on my MacBook Pro (Apple Silicon M3 Max):</p>
<div data-snippet-clipboard-copy-content="[GPT-2]
max_seq_len: 1024
vocab_size: 50257
num_layers: 12
num_heads: 12
channels: 768
num_parameters: 124439808
train dataset num_batches: 1192
val dataset num_batches: 128
num_activations: 73323776
val loss 5.252026
step 0: train loss 5.356189 (took 1452.121000 ms)
step 1: train loss 4.301069 (took 1288.673000 ms)
step 2: train loss 4.623322 (took 1369.394000 ms)
step 3: train loss 4.600470 (took 1290.761000 ms)
... (trunctated) ...
step 39: train loss 3.970751 (took 1323.779000 ms)
val loss 4.107781
generated: 50256 16773 18162 21986 11 198 13681 263 23875 198 3152 262 11773 2910 198 1169 6002 6386 2583 286 262 11858 198 20424 428 3135 7596 995 3675 13 198 40 481 407 736 17903 11 329 703 6029 706 4082 198 42826 1028 1128 633 263 11 198 10594 407 198 2704 454 680 1028 262 1027 28860 286 198 3237 323
step 40: train loss 4.377757 (took 1366.368000 ms)"><pre><code>[GPT-2]
max_seq_len: 1024
vocab_size: 50257
num_layers: 12
num_heads: 12
channels: 768
num_parameters: 124439808
train dataset num_batches: 1192
val dataset num_batches: 128
num_activations: 73323776
val loss 5.252026
step 0: train loss 5.356189 (took 1452.121000 ms)
step 1: train loss 4.301069 (took 1288.673000 ms)
step 2: train loss 4.623322 (took 1369.394000 ms)
step 3: train loss 4.600470 (took 1290.761000 ms)
... (trunctated) ...
step 39: train loss 3.970751 (took 1323.779000 ms)
val loss 4.107781
generated: 50256 16773 18162 21986 11 198 13681 263 23875 198 3152 262 11773 2910 198 1169 6002 6386 2583 286 262 11858 198 20424 428 3135 7596 995 3675 13 198 40 481 407 736 17903 11 329 703 6029 706 4082 198 42826 1028 1128 633 263 11 198 10594 407 198 2704 454 680 1028 262 1027 28860 286 198 3237 323
step 40: train loss 4.377757 (took 1366.368000 ms)
</code></pre></div>
<p dir="auto">The generation just gives you the token ids for now, which we have to decode back to text. We can implement this in C quite easily also, because decoding is very straight-forward, it's just string chunk lookups and prints. For now we can use tiktoken:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import tiktoken
enc = tiktoken.get_encoding(&quot;gpt2&quot;)
print(enc.decode(list(map(int, &quot;50256 16773 18162 21986 11 198 13681 263 23875 198 3152 262 11773 2910 198 1169 6002 6386 2583 286 262 11858 198 20424 428 3135 7596 995 3675 13 198 40 481 407 736 17903 11 329 703 6029 706 4082 198 42826 1028 1128 633 263 11 198 10594 407 198 2704 454 680 1028 262 1027 28860 286 198 3237 323&quot;.split()))))"><pre><span>import</span> <span>tiktoken</span>
<span>enc</span> <span>=</span> <span>tiktoken</span>.<span>get_encoding</span>(<span>"gpt2"</span>)
<span>print</span>(<span>enc</span>.<span>decode</span>(<span>list</span>(<span>map</span>(<span>int</span>, <span>"50256 16773 18162 21986 11 198 13681 263 23875 198 3152 262 11773 2910 198 1169 6002 6386 2583 286 262 11858 198 20424 428 3135 7596 995 3675 13 198 40 481 407 736 17903 11 329 703 6029 706 4082 198 42826 1028 1128 633 263 11 198 10594 407 198 2704 454 680 1028 262 1027 28860 286 198 3237 323"</span>.<span>split</span>()))))</pre></div>
<p dir="auto">which prints:</p>
<div data-snippet-clipboard-copy-content="<|endoftext|>Come Running Away,
Greater conquer
With the Imperial blood
the heaviest host of the gods
into this wondrous world beyond.
I will not back thee, for how sweet after birth
Netflix against repounder,
will not
flourish against the earlocks of
Allay"><pre><code>&lt;|endoftext|&gt;Come Running Away,
Greater conquer
With the Imperial blood
the heaviest host of the gods
into this wondrous world beyond.
I will not back thee, for how sweet after birth
Netflix against repounder,
will not
flourish against the earlocks of
Allay
</code></pre></div>
<p dir="auto">I like how Netflix comes up, it's clear that the shadow of the training past is still lurking in the model. I did not attempt to tune the finetuning hyperparameters so it's quite likely this can be improved quite a bit, most likely especially if one was to train a bit longer.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">test</h2><a id="user-content-test" aria-label="Permalink: test" href="#test"></a></p>
<p dir="auto">I am also attaching a simple unit test for making sure our C code agrees with the PyTorch code. Compile and run with:</p>
<div data-snippet-clipboard-copy-content="make test_gpt2
./test_gpt2"><pre><code>make test_gpt2
./test_gpt2
</code></pre></div>
<p dir="auto">This now loads the <code>gpt2_124M_debug_state.bin</code> file, runs a forward pass, compares the logits and loss with the PyTorch reference implementation, then it does 10 iterations of training with Adam and makes sure the losses match PyTorch.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">license</h2><a id="user-content-license" aria-label="Permalink: license" href="#license"></a></p>
<p dir="auto">MIT</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I looking into an apparently scammy looking zsh plugin manager called “zi” (157 pts)]]></title>
            <link>https://recurse.social/@dylnuge/112224580867240812</link>
            <guid>39973341</guid>
            <pubDate>Mon, 08 Apr 2024 20:25:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://recurse.social/@dylnuge/112224580867240812">https://recurse.social/@dylnuge/112224580867240812</a>, See on <a href="https://news.ycombinator.com/item?id=39973341">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[GNU Stow needs a co-maintainer (158 pts)]]></title>
            <link>https://savannah.gnu.org/bugs/index.php?65569</link>
            <guid>39973296</guid>
            <pubDate>Mon, 08 Apr 2024 20:20:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://savannah.gnu.org/bugs/index.php?65569">https://savannah.gnu.org/bugs/index.php?65569</a>, See on <a href="https://news.ycombinator.com/item?id=39973296">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="top">


<!-- end pagemenu -->


<h2><i><a href="https://savannah.gnu.org/bugs/index.php?65569">bug #65569</a></i>: Stow needs a co-maintainer</h2>

<form action="/bugs/index.php" method="post" enctype="multipart/form-data" name="item_form">






<table>
<tbody><tr>
<td>Submitter:&nbsp;</td>
<td><a href="https://savannah.gnu.org/users/aspiers">Adam Spiers &lt;aspiers&gt;</a></td>
<td colspan="2"><span> </span></td>
</tr>
<tr>
<td>Submitted:&nbsp;</td>
<td>Sun 07 Apr 2024 10:49:12 PM UTC</td>
<td colspan="2"><span></span></td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td colspan="2"><span></span></td>
</tr>
<tr><td colspan="4">&nbsp;</td></tr>

<tr><td><span title="Generally high level modules or functionalities of the software (e.g. User interface, Configuration Manager, etc)">Category:</span>&nbsp;</td>
<td>None</td>
<td><span title="Impact of the item on the system (Critical, Major,...)">Severity:</span>&nbsp;</td>
<td>4 - Important</td>
</tr>

<tr><td><span title="Characterizes the nature of the item (e.g. Crash Error, Documentation Typo, Installation Problem, etc">Item Group:</span>&nbsp;</td>
<td>None</td>
<td><span title="Current status of the item">Status:</span>&nbsp;</td>
<td>None</td>
</tr>

<tr><td><span title="Whether the item can be seen by members of the group only or anybody">Privacy:</span>&nbsp;</td>
<td>Public</td>
<td><span title="Who is in charge of handling this item">Assigned to:</span>&nbsp;</td>
<td>aspiers</td>
</tr>

<tr><td><span title="Most basic status of the item: is the item considered as dealt with or not.">Open/Closed:</span>&nbsp;</td>
<td>Open</td>
</tr></tbody></table>
<p><span>* Mandatory Fields</span></p>


<!-- closing hidsubpart -->



<div id="hidsubpartcontentdiscussion">

<table>
<tbody><tr>
</tr>

<tr><td>
<a id="comment0" href="#comment0">
Sun 07 Apr 2024 10:49:12 PM UTC, <b>original submission:</b>
</a>&nbsp;<br>

</td>
<td><a href="https://savannah.gnu.org/users/aspiers">Adam Spiers &lt;aspiers&gt;</a><br>
<span><img src="https://savannah.gnu.org/images/Savannah.theme/roles/project-admin.png" alt="Group administrator" width="24" height="24"></span><img src="https://savannah.gnu.org/images/Savannah.theme/roles/assignee.png" title="In charge of this item." alt="" width="24" height="24"></td></tr>
</tbody></table>


</div><!-- closing hidsubpart -->



<div id="hidsubpartcontentattached">
<p>(Note: upload size limit is set to 16384 kB, after insertion of
the required escape characters.)</p>
<p><span> Attach Files:</span><br>
&nbsp;&nbsp;&nbsp;  <br>
&nbsp;&nbsp;&nbsp;  
<br>
<span>Comment:</span><br>
&nbsp;&nbsp;&nbsp;
</p>
<p><span>No files currently attached</span></p>


</div><!-- closing hidsubpart -->



<div id="hidsubpartcontentdependencies">
<p>Depends on the following items: None found</p>
<p>Items that depend on this one: None found</p>



</div><!-- closing hidsubpart -->



<div id="hidsubpartcontentcc">
<p>Carbon-Copy List</p><!-- end boxtitle -->
<li><!-- email --> <span title="This information is not provided to anonymous users">-email is unavailable-</span> added by <a href="https://savannah.gnu.org/users/aspiers">aspiers</a> <span>(Submitted the item)</span>
</li></div><!-- closing hidsubpart -->



<div id="hidsubpartcontentvotes">

<p>There are 0 votes so far. Votes easily highlight which items people would like to see resolved
in priority, independently of the priority of the item set by tracker
managers.</p>
<p><span>Only logged-in users can vote.</span></p>


</div><!-- closing hidsubpart -->
<p><label for="check">Please enter the title of <a href="https://en.wikipedia.org/wiki/George_Orwell">George Orwell</a>'s famous
dystopian book (it's a date):</label> </p>

</form>



<p><span>No changes have been made to this item</span>
</p><!-- closing hidsubpart -->

<p>
<a href="#top"><img src="https://savannah.gnu.org/images/Savannah.theme/arrows/top.orig.png" alt="Back to the top" width="48" height="48"></a>
</p>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Shorebird 1.0, Flutter Code Push (135 pts)]]></title>
            <link>https://github.com/shorebirdtech/shorebird</link>
            <guid>39973150</guid>
            <pubDate>Mon, 08 Apr 2024 20:01:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/shorebirdtech/shorebird">https://github.com/shorebirdtech/shorebird</a>, See on <a href="https://news.ycombinator.com/item?id=39973150">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Shorebird 🐦</h2><a id="user-content-shorebird-" aria-label="Permalink: Shorebird 🐦" href="#shorebird-"></a></p>
<p dir="auto">Shorebird is now 1.0! 🎉
<a href="https://shorebird.dev/blogs/1.0/" rel="nofollow">https://shorebird.dev/blogs/1.0/</a></p>
<p dir="auto"><a href="https://discord.gg/shorebird" rel="nofollow"><img src="https://camo.githubusercontent.com/6acba6e415f6c81398bad9a0c59c970f4aa3ad6c989444867bf013de7be7e264/68747470733a2f2f646362616467652e76657263656c2e6170702f6170692f7365727665722f73686f726562697264" alt="Discord" data-canonical-src="https://dcbadge.vercel.app/api/server/shorebird"></a> <a href="https://www.producthunt.com/posts/shorebird-code-push?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-shorebird-code-push" rel="nofollow"><img src="https://camo.githubusercontent.com/b08569ec81275f60134342e9de2983deedda055128c916986d5cd073276c0d8f/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d343439393436267468656d653d6e65757472616c" alt="Shorebird Code Push - Flutter over the air updates | Product Hunt" width="128" height="27" data-canonical-src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=449946&amp;theme=neutral"></a></p>
<p dir="auto"><a href="https://github.com/shorebirdtech/shorebird/actions/workflows/main.yaml"><img src="https://github.com/shorebirdtech/shorebird/actions/workflows/main.yaml/badge.svg" alt="ci"></a>
<a href="https://github.com/shorebirdtech/shorebird/actions/workflows/e2e.yaml"><img src="https://github.com/shorebirdtech/shorebird/actions/workflows/e2e.yaml/badge.svg" alt="e2e"></a>
<a href="https://codecov.io/gh/shorebirdtech/shorebird" rel="nofollow"><img src="https://camo.githubusercontent.com/df8ca8f5d16dc465d02d9a6fc25787930a4e27eddd1eb4e5154472851ee13bec/68747470733a2f2f636f6465636f762e696f2f67682f73686f726562697264746563682f73686f7265626972642f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/shorebirdtech/shorebird/branch/main/graph/badge.svg"></a>
<a href="https://github.com/shorebirdtech/shorebird/blob/main/LICENSE-MIT"><img src="https://camo.githubusercontent.com/2bb6ac78e5a9f4f688a6a066cc71b62012101802fcdb478e6e4c6b6ec75dc694/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg"></a>
<a href="https://github.com/shorebirdtech/shorebird/blob/main/LICENSE-APACHE"><img src="https://camo.githubusercontent.com/36c44c97bcc8c33e0c833dde2f92c250868fb071a455eb98042ce5d5cec6073b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d6f72616e67652e737667" alt="License: Apache" data-canonical-src="https://img.shields.io/badge/license-Apache-orange.svg"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting Started" href="#getting-started"></a></p>
<p dir="auto">Visit <a href="https://docs.shorebird.dev/" rel="nofollow">https://docs.shorebird.dev</a> to get started.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Packages</h2><a id="user-content-packages" aria-label="Permalink: Packages" href="#packages"></a></p>
<p dir="auto">This repository is a monorepo containing the following packages:</p>
<table>
<thead>
<tr>
<th>Package</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/shorebirdtech/shorebird/blob/main/packages/shorebird_cli/README.md">shorebird_cli</a></td>
<td>Command-line which allows developers to interact with various Shorebird services</td>
</tr>
<tr>
<td><a href="https://github.com/shorebirdtech/shorebird/blob/main/packages/shorebird_code_push_client/README.md">shorebird_code_push_client</a></td>
<td>Dart library which allows Dart applications to interact with the ShoreBird CodePush API</td>
</tr>
<tr>
<td><a href="https://github.com/shorebirdtech/shorebird/blob/main/packages/shorebird_code_push_protocol/README.md">shorebird_code_push_protocol</a></td>
<td>Dart library which contains common interfaces used by Shorebird CodePush</td>
</tr>
<tr>
<td><a href="https://github.com/shorebirdtech/shorebird/blob/main/packages/artifact_proxy/README.md">artifact_proxy</a></td>
<td>Dart server which supports intercepting and proxying Flutter artifact requests.</td>
</tr>
<tr>
<td><a href="https://github.com/shorebirdtech/shorebird/blob/main/packages/discord_gcp_alerts/README.md">discord_gcp_alerts</a></td>
<td>Dart server which forwards GCP alerts to Discord</td>
</tr>
<tr>
<td><a href="https://github.com/shorebirdtech/shorebird/blob/main/packages/jwt/README.md">jwt</a></td>
<td>Dart library for verifying Json Web Tokens</td>
</tr>
<tr>
<td><a href="https://github.com/shorebirdtech/shorebird/blob/main/packages/redis_client/README.md">redis_client</a></td>
<td>Dart library for interacting with Redis</td>
</tr>
<tr>
<td><a href="https://github.com/shorebirdtech/shorebird/blob/main/packages/scoped/README.md">scoped</a></td>
<td>A simple dependency injection library built on Zones</td>
</tr>
</tbody>
</table>
<p dir="auto">For more information, please refer to the documentation for each package.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">If you're interested in contributing, please join us on
<a href="https://discord.gg/shorebird" rel="nofollow">Discord</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Environment setup</h3><a id="user-content-environment-setup" aria-label="Permalink: Environment setup" href="#environment-setup"></a></p>
<p dir="auto">Working on Shorebird requires Dart.</p>
<p dir="auto"><code>./scripts/bootstrap.sh</code> will run <code>pub get</code> all packages in the repository.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Running tests</h3><a id="user-content-running-tests" aria-label="Permalink: Running tests" href="#running-tests"></a></p>
<p dir="auto">We don't yet have a script to run tests locally. For now, we recommend using
<code>very_good test -r</code> in the packages directory to run all shorebird tests.</p>
<p dir="auto">(If you run it in the root, it will find packages in bin/cache/flutter and try
to run tests there, some of which will fail.)</p>
<p dir="auto">To generate a coverage report install <code>lcov</code>:</p>

<p dir="auto">Then run tests with the <code>--coverage</code> flag:</p>
<div data-snippet-clipboard-copy-content="very_good test -r --coverage
genhtml coverage/lcov.info -o coverage"><pre><code>very_good test -r --coverage
genhtml coverage/lcov.info -o coverage
</code></pre></div>
<p dir="auto">You can view the generated coverage report via:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Tracking coverage</h3><a id="user-content-tracking-coverage" aria-label="Permalink: Tracking coverage" href="#tracking-coverage"></a></p>
<p dir="auto">The following command will generate a coverage report for the Dart packages:</p>
<div dir="auto" data-snippet-clipboard-copy-content="dart test --coverage=coverage &amp;&amp; dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.dart_tool/package_config.json --check-ignore"><pre>dart <span>test</span> --coverage=coverage <span>&amp;&amp;</span> dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.dart_tool/package_config.json --check-ignore</pre></div>
<p dir="auto">Coverage reports are uploaded to <a href="https://app.codecov.io/gh/shorebirdtech/shorebird" rel="nofollow">Codecov</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Shorebird projects are licensed for use under either Apache License, Version 2.0
(LICENSE-APACHE or <a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow">http://www.apache.org/licenses/LICENSE-2.0</a>) MIT license
(LICENSE-MIT or <a href="http://opensource.org/licenses/MIT" rel="nofollow">http://opensource.org/licenses/MIT</a>) at your option.</p>
<p dir="auto">See our license philosophy for more information on why we license files this
way:
<a href="https://github.com/shorebirdtech/handbook/blob/main/engineering.md#licensing-philosophy">https://github.com/shorebirdtech/handbook/blob/main/engineering.md#licensing-philosophy</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[After AI beat them, professional Go players got better and more creative (393 pts)]]></title>
            <link>https://www.henrikkarlsson.xyz/p/go</link>
            <guid>39972990</guid>
            <pubDate>Mon, 08 Apr 2024 19:42:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.henrikkarlsson.xyz/p/go">https://www.henrikkarlsson.xyz/p/go</a>, See on <a href="https://news.ycombinator.com/item?id=39972990">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg" width="1024" height="825" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:825,&quot;width&quot;:1024,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:277381,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe7fe2146-3231-45d4-bdcd-e5750e548b45_1024x825.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><h6>A game of the board game Go in Japan 1876</h6><p>For many decades, it seemed professional Go players had reached a hard limit on how well it is possible to play. They were not getting better. Decision quality was largely plateaued from 1950 to the mid-2010s:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif" width="918" height="616" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:616,&quot;width&quot;:918,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1700056,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/tiff&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd0c3f82b-dd47-4dff-a6f8-680a1f975dc4.tif 1456w" sizes="100vw"></picture></div></a></figure></div><p>Then, in May 2016, DeepMind demonstrated AlphaGo, an AI that could beat the best human Go players. This is how the humans reacted:</p><p>After a few years, the weakest professional players were better than the strongest players before AI. The strongest players pushed beyond what had been thought possible.</p><p><span>Or were they cheating by using the AI? No.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-140954444" href="https://www.henrikkarlsson.xyz/p/go#footnote-1-140954444" target="_self" rel="">1</a></span><span> They really were getting better.</span></p><p><span>And it wasn’t simply that they imitated the AI, in a mechanical way. They got more creative, too. There was an uptick in historically novel moves and sequences.&nbsp;</span><a href="https://www.pnas.org/doi/epdf/10.1073/pnas.2214840120" rel="">Shin et al</a><span>&nbsp;calculate about 40 percent of the improvement came from moves that could have been memorized by studying the AI. But moves that deviated from what the AI would do also improved, and these “human moves” accounted for 60 percent of the improvement.</span></p><p>My guess is that AlphaGo’s success forced the humans to reevaluate certain moves and abandon weak heuristics. This let them see possibilities that had been missed before.</p><p>Something is considered impossible. Then somebody does it. Soon it is standard. This is a common pattern. Until Roger Bannister ran the 4-minute mile, the best runners clustered just above 4 minutes for decades. A few months later Bannister was no longer the only runner to do a 4-minute mile. These days, high schoolers do it. The same story can be told about the French composer Pierre Boulez. His music was considered unplayable until recordings started circulating on YouTube and elsewhere. Now it is standard repertoire at concert houses.</p><p>The recent development in Go suggests that superhuman AI systems can have this effect, too. They can prove something is possible and lift people up. This doesn’t mean that AI systems will not displace humans at many tasks, and it doesn’t mean that humans can always adapt to keep up with the systems—in fact, the human Go players are not keeping up. But the flourishing of creativity and skills tells us something about what might happen at the tail end of the human skill distribution when more AI systems come online. As humans learn from AIs, they might push through blockages that have kept them stalled and reach higher.</p><p><span>Another interesting detail about the flourishing in Go, which is teased out in&nbsp;</span><a href="https://escholarship.org/content/qt6q05n7pz/qt6q05n7pz.pdf" rel="">this paper by Shin, Kim, and Kim</a><span>, is that the trend shift actually happened 18 months&nbsp;</span><em>after</em><span>&nbsp;AlphaGo. This coincides with the release of </span><a href="https://en.wikipedia.org/wiki/Leela_Zero" rel="">Leela Zero</a><span>, an open source Go engine. Being open source Leela Zero allowed Go players to build tools, like Lizzie, that show the AI’s reasoning when picking moves. Also, by giving people direct access, it made it possible to do massive input learning</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-140954444" href="https://www.henrikkarlsson.xyz/p/go#footnote-2-140954444" target="_self" rel="">2</a></span><span>. This is likely what caused the machine-mediated unleash of human creativity.</span></p><p><span>This is not the first time this kind of machine-mediated flourishing has happened. When DeepBlue beat the chess world champion Kasparov in 1997, it was assumed this would be a blow to human chess players. It wasn’t. Chess became more popular than ever. And the games did not become machine-like and predictable. Instead, top players like Magnus Carlsen became&nbsp;</span><a href="https://www.wsj.com/articles/magnus-carlsen-ian-nepomniachtchi-world-chess-championship-computer-analysis-11639003641" rel="">more inventive than ever</a><span>.</span></p><p><span>Our potential is greater than we realize. Even in highly competitive domains, like chess and GO, performance can be operating far below the limit of what is possible. </span><em>Perhaps</em><span> AI will give us a way to push through these limits in more domains.</span></p><p><span>Warmly</span><br><span>Henrik</span></p><p><span>Several of the points here build on comments made on a Twitter thread I made about this yesterday. Nabeel S. Qureshi (</span><a href="https://twitter.com/nabeelqu" rel="">Twitter</a><span>, </span><a href="https://nabeelqu.co/" rel="">blog</a><span>) read a draft and gave useful pointers.</span></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Japanese American Bird Pins (138 pts)]]></title>
            <link>https://www.hcn.org/issues/56-4/the-untold-history-of-japanese-american-bird-pins/</link>
            <guid>39972780</guid>
            <pubDate>Mon, 08 Apr 2024 19:14:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.hcn.org/issues/56-4/the-untold-history-of-japanese-american-bird-pins/">https://www.hcn.org/issues/56-4/the-untold-history-of-japanese-american-bird-pins/</a>, See on <a href="https://news.ycombinator.com/item?id=39972780">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

		
		
<p>As a child, I’d creep down the basement stairs and watch him: hunched over a table, a single lamp lighting his work. First he’d carve a walnut-sized body out of wood. Then he’d take a tiny brush and paint the figure in bright reds and greens and blues, wrap embroidery thread around its spindly wire legs, and top the whole thing with a shiny lacquer. On the back, he’d add a clasp and sign his name in <em>katakana</em>.&nbsp;





</p><p>The end result: a bird pin so delicate it could fit into the palm of my 8-year-old hand. My grandfather, whom I called <em>jichan</em>, made hundreds of these bird pins over the course of his retirement. I always thought they were unique to him. But in recent years, I’ve learned that he was part of something much larger.&nbsp;





</p><p>It all began in February 1942, when President Franklin D. Roosevelt issued <a href="https://www.archives.gov/milestone-documents/executive-order-9066">Executive Order 9066</a>, which led to the expulsion and incarceration of roughly 122,000 Japanese Americans. Many were given just 48 hours to pack, forcing them to sell their houses, farms, businesses and possessions at rock-bottom prices —&nbsp;ultimately costing them more than an estimated $12 billion in lost property and income, in today’s dollars.&nbsp;




</p>


<p>Carrying suitcases full of clothes and little else, most “evacuees” were sent to 10 War Relocation Authority camps in remote parts of Wyoming, California, Utah, Arizona, Colorado, Idaho and Arkansas. Others were brought to lesser-known camps throughout the country, including in Alaska, Montana, New Mexico and Hawai’i.&nbsp;





</p><p>My jichan was sent from his home in California to Poston, in the Arizona desert, the <a href="https://www.digitalhistory.uh.edu/active_learning/explorations/japanese_internment/camps.cfm">second-largest camp</a> by population. At its peak, Poston held nearly 18,000 men, women and children of Japanese descent, including more than a dozen members of my family.&nbsp;





</p><blockquote>
<p>I always thought they were unique to him. But in recent years, I’ve learned that he was part of something much larger.


</p></blockquote>



<p>Since the camp barracks and grounds were <a href="https://www.npr.org/2010/05/12/126557553/the-creative-art-of-coping-in-japanese-internment">nearly empty</a> when they arrived, the incarcerated people spent their early days making their surroundings habitable: building furniture, carving clothes hangers, planting gardens, opening schools. They also took jobs, initially for no pay. Each camp eventually had a hospital, newspaper, mess hall, dry goods store and police and fire department, so many found ways to continue their careers as doctors, journalists, teachers or farmers. By the end of 1943, <a href="https://dp.la/exhibitions/japanese-internment/employment/farming_agriculture">85% of the vegetables</a> eaten in the camps came from within them.





</p><p>People sought out more leisurely distractions, too. “Stuck in that one-square-mile area, it was like, how do you entertain yourself, how do you keep your sanity?” said Delphine Hirasuna, the author of <em>The Art of Gaman, </em>a <a href="https://www.penguinrandomhouse.com/books/198042/the-art-of-gaman-by-delphine-hirasuna/">book about the arts and crafts of Japanese incarceration</a>. In addition to forming sports leagues, they taught each other pursuits like flower arranging, doll making, sewing and quilting. “If somebody had a particular skill,” Hirasuna said, “the other people who were stuck in camp would say, ‘Could you teach me?’”&nbsp;





</p><p>In Poston, Roy Takahashi, who’d been an <a href="https://digitalassets.lib.berkeley.edu/jarda/ucb/text/cubanc_35_1_00259342ta.pdf">art student</a> prior to the war, offered a bird-carving class in <a href="https://www.loc.gov/resource/sn83025333/1944-09-05/ed-1/?sp=4&amp;q=%22bird+carving%22&amp;r=-0.711,0.319,2.422,1.268,0">September 1944</a>. Within two weeks, the camp newspaper, the <em>Poston Chronicle</em>, <a href="https://www.loc.gov/resource/sn83025333/1944-09-14/ed-1/?sp=3&amp;q=%22bird+carving%22&amp;r=-0.109,0.973,0.967,0.506,0">declared that</a> “bird carving seems to be one of the most popular pastimes now.” Archival records suggest that Takahashi offered several <a href="https://www.loc.gov/resource/sn83025333/1944-10-05/ed-1/?sp=3&amp;q=%22bird+carving%22&amp;r=0.168,1.083,0.988,0.517,0">more</a> <a href="http://digitalcollections.archives.csudh.edu/digital/collection/p16855coll4/id/38007/rec/11">sessions</a> to meet the demand.&nbsp;

</p>





<figure>
<figure data-wp-context="{&quot;uploadedSrc&quot;:&quot;https:\/\/www.hcn.org\/wp-content\/uploads\/2024\/03\/flying-free-56-04_5-scaled.jpg&quot;,&quot;figureClassNames&quot;:&quot;wp-block-image size-full&quot;,&quot;figureStyles&quot;:null,&quot;imgClassNames&quot;:&quot;wp-image-323660&quot;,&quot;imgStyles&quot;:null,&quot;targetWidth&quot;:1707,&quot;targetHeight&quot;:2560,&quot;scaleAttr&quot;:false,&quot;ariaLabel&quot;:&quot;Enlarge image&quot;,&quot;alt&quot;:&quot;&quot;}" data-wp-interactive="core/image"><img decoding="async" width="780" height="1170" data-wp-init="callbacks.setButtonStyles" data-wp-on--click="actions.showLightbox" data-wp-on--load="callbacks.setButtonStyles" data-wp-on-window--resize="callbacks.setButtonStyles" data-id="323660" src="https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?resize=780%2C1170&amp;ssl=1" alt="" srcset="https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?w=1707&amp;ssl=1 1707w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?resize=200%2C300&amp;ssl=1 200w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?resize=683%2C1024&amp;ssl=1 683w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?resize=768%2C1152&amp;ssl=1 768w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?resize=1024%2C1536&amp;ssl=1 1024w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?resize=1365%2C2048&amp;ssl=1 1365w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?resize=1200%2C1800&amp;ssl=1 1200w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?resize=1568%2C2352&amp;ssl=1 1568w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?resize=400%2C600&amp;ssl=1 400w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_5-scaled.jpg?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px" data-recalc-dims="1"></figure>



<figure data-wp-context="{&quot;uploadedSrc&quot;:&quot;https:\/\/www.hcn.org\/wp-content\/uploads\/2024\/03\/flying-free-56-04_6-scaled.jpg&quot;,&quot;figureClassNames&quot;:&quot;wp-block-image size-full&quot;,&quot;figureStyles&quot;:null,&quot;imgClassNames&quot;:&quot;wp-image-323964&quot;,&quot;imgStyles&quot;:null,&quot;targetWidth&quot;:1920,&quot;targetHeight&quot;:2560,&quot;scaleAttr&quot;:false,&quot;ariaLabel&quot;:&quot;Enlarge image&quot;,&quot;alt&quot;:&quot;&quot;}" data-wp-interactive="core/image"><img decoding="async" width="780" height="1040" data-wp-init="callbacks.setButtonStyles" data-wp-on--click="actions.showLightbox" data-wp-on--load="callbacks.setButtonStyles" data-wp-on-window--resize="callbacks.setButtonStyles" data-id="323964" src="https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=780%2C1040&amp;ssl=1" alt="" srcset="https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?w=1920&amp;ssl=1 1920w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=225%2C300&amp;ssl=1 225w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=768%2C1024&amp;ssl=1 768w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=1152%2C1536&amp;ssl=1 1152w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=1536%2C2048&amp;ssl=1 1536w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=900%2C1200&amp;ssl=1 900w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=600%2C800&amp;ssl=1 600w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=450%2C600&amp;ssl=1 450w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=300%2C400&amp;ssl=1 300w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=150%2C200&amp;ssl=1 150w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=1200%2C1600&amp;ssl=1 1200w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=1568%2C2091&amp;ssl=1 1568w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=2000%2C2667&amp;ssl=1 2000w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?resize=400%2C533&amp;ssl=1 400w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_6-scaled.jpg?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px" data-recalc-dims="1"></figure>



<figure data-wp-context="{&quot;uploadedSrc&quot;:&quot;https:\/\/www.hcn.org\/wp-content\/uploads\/2024\/03\/flying-free-56-04_4-scaled.jpg&quot;,&quot;figureClassNames&quot;:&quot;wp-block-image size-full&quot;,&quot;figureStyles&quot;:null,&quot;imgClassNames&quot;:&quot;wp-image-323659&quot;,&quot;imgStyles&quot;:null,&quot;targetWidth&quot;:1707,&quot;targetHeight&quot;:2560,&quot;scaleAttr&quot;:false,&quot;ariaLabel&quot;:&quot;Enlarge image&quot;,&quot;alt&quot;:&quot;&quot;}" data-wp-interactive="core/image"><img decoding="async" width="780" height="1170" data-wp-init="callbacks.setButtonStyles" data-wp-on--click="actions.showLightbox" data-wp-on--load="callbacks.setButtonStyles" data-wp-on-window--resize="callbacks.setButtonStyles" data-id="323659" src="https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?resize=780%2C1170&amp;ssl=1" alt="" srcset="https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?w=1707&amp;ssl=1 1707w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?resize=200%2C300&amp;ssl=1 200w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?resize=683%2C1024&amp;ssl=1 683w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?resize=768%2C1152&amp;ssl=1 768w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?resize=1024%2C1536&amp;ssl=1 1024w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?resize=1365%2C2048&amp;ssl=1 1365w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?resize=1200%2C1800&amp;ssl=1 1200w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?resize=1568%2C2352&amp;ssl=1 1568w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?resize=400%2C600&amp;ssl=1 400w, https://i0.wp.com/www.hcn.org/wp-content/uploads/2024/03/flying-free-56-04_4-scaled.jpg?w=370&amp;ssl=1 370w" sizes="(max-width: 780px) 100vw, 780px" data-recalc-dims="1"></figure>
</figure>



<p>One reason the bird pins were so popular, Hirasuna said, is they didn’t require a lot of materials. Many of the people at camp had knives they’d fashioned out of scrap metal,&nbsp; and paint could be ordered fairly easily from a Sears catalog. For the birds’ bodies, they salvaged scraps of wood from delivery crates; for the legs and feet, they used wire from window screens.&nbsp;





</p><p>They created all manner of birds:&nbsp;My jichan’s repertoire included cranes, wood ducks, road runners, pheasants, eagles — even a toucan. They reportedly used an Audubon field guide for inspiration, as well as copies of <em>National Geographic</em>, which was “deluged” with orders for back issues, according to Allen H. Eaton’s 1952 book <em><a href="https://archive.org/stream/dli.ernet.28835/28835-Beauty%20Behind%20Barbed%20Wire%20(1952)_djvu.txt">Beauty Behind Barbed Wire</a></em>. And, though bird carving spread to many other camps, perhaps through letters and packages sent between them, Eaton wrote that Poston “outnumbered all others in the quantity and quality of carved and painted American birds.”&nbsp;





</p><p>Carol Takahashi (no relation to Roy Takahashi) said her grandparents took one of the bird-carving classes offered at Poston. For them, Takahashi said, the pins served as a form of currency: “I know my grandparents traded some of the early bird pins with other ladies for diapers and stuff like that.”&nbsp;





</p><p>Then, after the war, Takahashi’s grandparents were unable to find work. “Nobody wanted to hire Japanese,” she said. So they turned to the skill they had learned in camp, and made and sold bird pins for the next 40 years. Over time, they became the craft’s <a href="http://www.takahashibirds.com/place_in_history.html">most famous makers</a>; their pins received write-ups in the media and permanent spots in several museums. “They made the best of what they could with the situation,” Takahashi said, noting that the bird pins funded her grandparents’ retirement and their four children’s college educations.&nbsp;




</p>


<p>Kristen Hayashi, the director of collections management and access at the <a href="https://www.janm.org/">Japanese American National Museum</a> in Los Angeles, said the bird pins are “very iconic to the camp experience,” and one of the most common donations the museum receives.





</p><p>“Maybe we’re imbuing a lot of meaning onto it, but it seems very poignant that a lot of these incarcerees were recreating birds,” Hayashi said. “Just the symbolism of birds having the freedom to fly and kind of go wherever they want to —&nbsp;something they weren’t able to do incarcerated behind barbed wire.”&nbsp;





</p><p>My jichan eventually moved back to California, where he worked at a newspaper printing press and as a grocery clerk, among other jobs. In retirement, he returned to making bird pins, which my aunts and I sold at markets on both coasts.





</p><blockquote>
<p>“Just the symbolism of birds having the freedom to fly and kind of go wherever they want to —&nbsp;something they weren’t able to do incarcerated behind barbed wire.”&nbsp;


</p></blockquote>



<p>I know my jichan’s pins are still out there, as they occasionally pop up on Etsy or eBay, complete with his signature. I’m sure that many more, from many other former incarcerees, are hidden in basements or attics or jewelry boxes. When people hold these pins in their hands, I hope they see what I do: not a story of suffering, but a story of resilience —&nbsp;of finding beauty, even in the rawest places.

</p>





<p><em>We welcome reader letters.&nbsp;Email&nbsp;</em>High Country News<em>&nbsp;at&nbsp;<a href="mailto:editor@hcn.org">editor@hcn.org</a>&nbsp;or submit a&nbsp;<a href="https://www.hcn.org/feedback/contact-us">letter to the editor</a>. See our&nbsp;<a href="https://www.hcn.org/policies/lte">letters to the editor policy</a>.</em>





</p><p><em>This article appeared in the&nbsp;April 2024 print edition of the magazine&nbsp;with the headline&nbsp;“Flying free.”</em>



</p><section id="block-31">
<p>Spread the word.  News organizations can pick-up&nbsp;quality news, essays&nbsp;and feature stories for free.</p>
</section><section id="republication_tracker_tool-3"><div><p><a rel="noreferrer license" target="_blank" href="http://creativecommons.org/licenses/by-nd/4.0/"><img width="88" height="31" alt="Creative Commons License" src="https://www.hcn.org/wp-content/plugins/republication-tracker-tool/assets/img/creative-commons-sharing.png"></a></p></div><p>Republish our articles for free, online or in print, under a Creative Commons license.</p></section>					
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The 6502 instruction set as a database (114 pts)]]></title>
            <link>https://gitlab.com/Screwtapello/isa65xx</link>
            <guid>39972603</guid>
            <pubDate>Mon, 08 Apr 2024 18:49:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gitlab.com/Screwtapello/isa65xx">https://gitlab.com/Screwtapello/isa65xx</a>, See on <a href="https://news.ycombinator.com/item?id=39972603">Hacker News</a></p>
<div id="readability-page-1" class="page">





<header data-testid="navbar">
<a href="#content-body">Skip to content</a>
<div>
<nav aria-label="Explore GitLab">
<div>
<span>GitLab</span>
<a title="Homepage" id="logo" aria-label="Homepage" data-track-label="main_navigation" data-track-action="click_gitlab_logo_link" data-track-property="navigation_top" href="https://gitlab.com/"><svg aria-hidden="true" role="img" width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="m24.507 9.5-.034-.09L21.082.562a.896.896 0 0 0-1.694.091l-2.29 7.01H7.825L5.535.653a.898.898 0 0 0-1.694-.09L.451 9.411.416 9.5a6.297 6.297 0 0 0 2.09 7.278l.012.01.03.022 5.16 3.867 2.56 1.935 1.554 1.176a1.051 1.051 0 0 0 1.268 0l1.555-1.176 2.56-1.935 5.197-3.89.014-.01A6.297 6.297 0 0 0 24.507 9.5Z" fill="#E24329"></path>
  <path d="m24.507 9.5-.034-.09a11.44 11.44 0 0 0-4.56 2.051l-7.447 5.632 4.742 3.584 5.197-3.89.014-.01A6.297 6.297 0 0 0 24.507 9.5Z" fill="#FC6D26"></path>
  <path d="m7.707 20.677 2.56 1.935 1.555 1.176a1.051 1.051 0 0 0 1.268 0l1.555-1.176 2.56-1.935-4.743-3.584-4.755 3.584Z" fill="#FCA326"></path>
  <path d="M5.01 11.461a11.43 11.43 0 0 0-4.56-2.05L.416 9.5a6.297 6.297 0 0 0 2.09 7.278l.012.01.03.022 5.16 3.867 4.745-3.584-7.444-5.632Z" fill="#FC6D26"></path>
</svg>

</a></div>
<ul>
<li>

<div>
<ul>
<li>
<a href="https://about.gitlab.com/why-gitlab">Why GitLab
</a></li>
<li>
<a href="https://about.gitlab.com/pricing">Pricing
</a></li>
<li>
<a href="https://about.gitlab.com/sales">Contact Sales
</a></li>
<li>
<a href="https://gitlab.com/explore">Explore</a>
</li>
</ul>
</div>
</li>
<li>
<a href="https://about.gitlab.com/why-gitlab">Why GitLab
</a></li>
<li>
<a href="https://about.gitlab.com/pricing">Pricing
</a></li>
<li>
<a href="https://about.gitlab.com/sales">Contact Sales
</a></li>
<li>
<a href="https://gitlab.com/explore">Explore</a>
</li>
</ul>
<ul>
<li>
<a href="https://gitlab.com/users/sign_in?redirect_to_referer=yes">Sign in</a>
</li>
<li>
<a href="https://gitlab.com/users/sign_up"><span>
Get free trial

</span>

</a></li>
</ul>
</nav>
</div>
</header>

<div>


<div data-testid="top-bar">

<nav aria-label="Breadcrumbs" data-testid="breadcrumb-links">
<ul>
<li><a href="https://gitlab.com/Screwtapello">Screwtape</a></li> <li><a href="https://gitlab.com/Screwtapello/isa65xx"><span>isa65xx</span></a></li>

</ul>

</nav>



</div>
<div>
<main id="content-body" itemscope="" itemtype="http://schema.org/SoftwareSourceCode">










<header>
<div>
<div>
<div alt="isa65xx" itemprop="image">
I
</div>

<h2 data-testid="project-name-content" itemprop="name">
isa65xx
<span data-container="body" data-placement="top" title="Public - The project can be accessed without any authentication."><svg data-testid="earth-icon"><use href="/assets/icons-0b41337f52be73f7bbf9d59b841eb98a6e790dfa1a844644f120a80ce3cc18ba.svg#earth"></use></svg></span>


</h2>
</div>

</div>

</header>


<div>

<div data-blame-per-page="1000" id="tree-holder">
<div>
<div>


</div>

<div>
<div>








</div>
<div>


<div>


<ul data-dropdown="">
<li>
<a href="https://gitlab.com/Screwtapello/git@gitlab.com:Screwtapello/isa65xx.git" data-clone-type="ssh"><strong>Copy SSH clone URL</strong><span>git@gitlab.com:Screwtapello/isa65xx.git</span></a>
</li>
<li>
<a href="https://gitlab.com/Screwtapello/isa65xx.git" data-clone-type="http"><strong>Copy HTTPS clone URL</strong><span>https://gitlab.com/Screwtapello/isa65xx.git</span></a>
</li>

</ul>
</div>

</div>
</div>

</div>
<div role="status" data-ref-type="heads" id="js-last-commit"><span aria-label="Loading"></span></div>

</div>
</div>

</main>
</div>


</div>








</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Colab notebook to create Magic cards from image with Claude (101 pts)]]></title>
            <link>https://colab.research.google.com/drive/1h5WIzhvT-GJCL3LHxMCLnc9qyOIqHubY?usp=sharing</link>
            <guid>39972036</guid>
            <pubDate>Mon, 08 Apr 2024 17:42:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://colab.research.google.com/drive/1h5WIzhvT-GJCL3LHxMCLnc9qyOIqHubY?usp=sharing">https://colab.research.google.com/drive/1h5WIzhvT-GJCL3LHxMCLnc9qyOIqHubY?usp=sharing</a>, See on <a href="https://news.ycombinator.com/item?id=39972036">Hacker News</a></p>
<div id="readability-page-1" class="page"><div ng-non-bindable="" data-ogsr-up="" id="gb"><p><a aria-label="Sign in" href="https://accounts.google.com/ServiceLogin?passive=true&amp;continue=https%3A%2F%2Fcolab.research.google.com%2Fdrive%2F1h5WIzhvT-GJCL3LHxMCLnc9qyOIqHubY%3Fusp%3Dsharing&amp;ec=GAZAqQM" target="_top"><span>Sign in</span></a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Live NASA telescope feed for today's solar eclipse [video] (112 pts)]]></title>
            <link>https://www.youtube.com/watch?v=J5j95RUSLd8</link>
            <guid>39971717</guid>
            <pubDate>Mon, 08 Apr 2024 17:08:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=J5j95RUSLd8">https://www.youtube.com/watch?v=J5j95RUSLd8</a>, See on <a href="https://news.ycombinator.com/item?id=39971717">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Find My Device on Android (211 pts)]]></title>
            <link>https://blog.google/products/android/android-find-my-device/</link>
            <guid>39971673</guid>
            <pubDate>Mon, 08 Apr 2024 17:03:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.google/products/android/android-find-my-device/">https://blog.google/products/android/android-find-my-device/</a>, See on <a href="https://news.ycombinator.com/item?id=39971673">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="jump-content" tabindex="-1">
            

    
    

    <article ng-init="drawerToggle = {'open': true}">

    
    





    

    
      

<div data-analytics-module="{
    &quot;module_name&quot;: &quot;Hero Menu&quot;,
    &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
  }">
      <div>
          <p>Apr 08, 2024</p>
          
            <p data-reading-time-render="">[[read-time]] min read</p>
          
        </div>
      
        <p>
          The new Find My Device experience helps you easily find your misplaced Android devices and other belongings.
        </p>
      
    </div>

    

    
      







<div>
    <figure>
      <div>
  <p><img srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/find_device_keyword_illustration_.width-600.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/find_device_keyword_illustration.width-1200.format-webp.webp 1200w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/find_device_keyword_illustration.width-1600.format-webp.webp 1600w" sizes="(max-width: 599px) 100vw, (max-width: 1023px) 600px, 1024px" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/find_device_keyword_illustration.width-1200.format-webp.webp" fetchpriority="high" alt="Illustration of headphones, a wallet, keys, a TV remote control, luggage and Bluetooth tags.">
  </p>
</div>

      
    </figure>
  </div>


    

    
    <div data-reading-time="true" data-component="uni-drop-cap|uni-tombstone">

            
              


<google-read-aloud-player data-analytics-module="{
        &quot;event&quot;: &quot;module_impression&quot;,
        &quot;module_name&quot;: &quot;ai_audio&quot;,
        &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
    }" data-date-modified="2024-04-08T17:47:14.052567+00:00" data-progress-bar-style="half-wave" data-api-key="AIzaSyBLT6VkYe-x7sWLZI2Ep26-fNkBKgND-Ac" data-article-style="style9" data-tracking-ids="G-HGNBTNCHCQ,G-6NKTLKV14N" data-voice-list="en.ioh-pngnat:Cyan,en.usb-pngnat:Lime" data-layout-style="style1" data-highlight-mode="word-over-paragraph" data-highlight-text-color="#000000" data-highlight-word-background="#8AB4F8" data-highlight-paragraph-background="#D2E3FC" data-background="linear-gradient(180deg, #F1F3F4 0%, #F8F9FA 100%)" data-foreground-color="#202124" data-font="600 16px Google Sans, sans-serif" data-box-shadow="0px 1px 3px 1px rgba(60, 64, 67, 0.15)">
</google-read-aloud-player>




            

            
            
<!--article text-->

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }">
        <p data-block-key="g4c3e">Today, the all-new Find My Device is rolling out to Android devices around the world, starting in the U.S. and Canada. With a new, crowdsourced network of over a billion Android devices, Find My Device can help you find your misplaced Android devices and everyday items quickly and securely. Here are five ways you can try it out.</p>
      </div>
  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><h2 data-block-key="g4c3e">1. Locate offline devices</h2><p data-block-key="1hpqn">Locate your compatible Android phone and tablet by ringing them or viewing their location on a map in the app — even when they’re offline. And thanks to specialized Pixel hardware, Pixel 8 and 8 Pro owners will also be able to find their devices if they’re powered off or the battery is dead.</p></div>
  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><h2 data-block-key="w3l5r">2. Keep track of everyday items with compatible Bluetooth tags</h2><p data-block-key="dl4c6">Starting in May, you’ll be able to locate everyday items like your keys, wallet or luggage with Bluetooth tracker tags from <a href="https://chipolo.net/en-us/products/category/chipolo-point" rt-link-type="external">Chipolo</a> and <a href="https://pebblebee.com/pages/google-find-my-device" rt-link-type="external">Pebblebee</a> in the Find My Device app. These tags, built specifically for the Find My Device network, will be compatible with <a href="https://blog.google/products/android/unknown-tracker-alert-google-android/" rt-link-type="external">unknown tracker alerts across Android</a> and iOS to help protect you from unwanted tracking. Keep an eye out later this year for additional Bluetooth tags from eufy, Jio, Motorola and more.</p></div>
  

  
    







  
      <div data-analytics-module="{
          &quot;module_name&quot;: &quot;Inline Images&quot;,
          &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
        }">
  

  <p><img alt="A phone screen shows the Find My Device user interface with a list of devices, including a Pixel 8, house key and family tablet." src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/2._Keep_track_of_everyday_items_w.width-100.format-webp_kIa4MPR.webp" loading="lazy" data-loading="{
                &quot;mobile&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/2._Keep_track_of_everyday_items_w.width-500.format-webp_FxdNqKI.webp&quot;,
                &quot;desktop&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/2._Keep_track_of_everyday_items_.width-1000.format-webp_HC0rRT2.webp&quot;
              }">
        
      
    
    </p>
    
  
    </div>
  



  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><h2 data-block-key="w3l5r">3. Find nearby items</h2><p data-block-key="a9le">Sometimes what we’re looking for is right under our noses. If you're close to your lost device but need a little extra help tracking it down, a “Find nearby” button will appear to help you figure out exactly where it’s hiding. You’ll also be able to use this to find everyday items, like your wallet or keys, when Bluetooth tags launch in May.</p></div>
  

  
    







  
      <div data-analytics-module="{
          &quot;module_name&quot;: &quot;Inline Images&quot;,
          &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
        }">
  

  <p>

      
      
        
          <video tabindex="0" autoplay="" loop="" muted="" playsinline="" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/3._Find_nearby_items_3.mp4" type="video/mp4" title="Animation of the Find My Device app showing how to locate a nearby house key." alt="3 Find nearby items">
            Video format not supported
          </video>
        
      
    
    </p>
    
  
    </div>
  



  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><h2 data-block-key="w3l5r">4. Pinpoint devices at home with Nest</h2><p data-block-key="7qrh0">More often than not, we lose everyday items like our keys or phone right at home. So the Find My Device app now shows a lost device’s proximity to your home Nest devices, giving you an easy reference point.</p></div>
  

  
    







  
      <div data-analytics-module="{
          &quot;module_name&quot;: &quot;Inline Images&quot;,
          &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
        }">
  

  <p>

      
      
        
          <video tabindex="0" autoplay="" loop="" muted="" playsinline="" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/4._Pinpoint_devices_at_home_with_Nest_1.mp4" type="video/mp4" title="Animation of the Find My Device app indicating that a house key was last seen near a living room speaker" alt="4 pinpoint devices at home with nest">
            Video format not supported
          </video>
        
      
    
    </p>
    
  
    </div>
  



  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><h2 data-block-key="w3l5r">5. Share accessories with friends and family</h2><p data-block-key="cr9v">Share an accessory so everyone can keep an eye on it in the app. For instance, share your house key with your roommate, the TV remote with your friend or luggage with a travel buddy so you can easily divide and conquer if something goes missing.</p></div>
  

  
    







  
      <div data-analytics-module="{
          &quot;module_name&quot;: &quot;Inline Images&quot;,
          &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
        }">
  

  <p><img alt="A phone screen shows a shared device prompt in the Find My Device app." src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/5._Share_accessories_with_friends.width-100.format-webp_sIdCkYl.webp" loading="lazy" data-loading="{
                &quot;mobile&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/5._Share_accessories_with_friends.width-500.format-webp_lVC3a8b.webp&quot;,
                &quot;desktop&quot;: &quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/5._Share_accessories_with_friend.width-1000.format-webp_emfeN0x.webp&quot;
              }">
        
      
    
    </p>
    
  
    </div>
  



  

  
    <div data-component="uni-article-paragraph" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;5 ways to use the new Find My Device on Android&quot;
         }"><p data-block-key="w3l5r">Find My Device is secure by default and private by design. Multi-layered protections built into the Find My Device network help keep you safe and your personal information private, while keeping you in control of the devices connected to the Find My Device network. This includes end-to-end encryption of location data as well as aggregated device location reporting, a first-of-its-kind safety feature that provides additional protection against unwanted tracking back to a home or private location. <a href="https://security.googleblog.com/2024/04/find-my-device-network-security-privacy-protections.html" rt-link-type="external">Read more</a> about how our multi-layered protections for the Find My Device network work.</p><p data-block-key="ef08k">The new Find My Device works with devices running Android 9+. Learn more about <a href="https://www.android.com/find-my-device" rt-link-type="external">Find My Device-compatible devices</a> and all the ways the Find My Device network can <a href="https://support.google.com/android/answer/3265955?hl=en&amp;ref_topic=7651004&amp;sjid=3104889368197014343-NC" rt-link-type="external">help you find a lost device or item</a>. And look out for software updates coming to headphones from JBL, Sony and others, which will join the Find My Device network soon.</p></div>
  


            
            

            
              




            
          </div>
  </article>
  





  

  


<div data-component="uni-related-articles" data-analytics-module="{
    &quot;module_name&quot;: &quot;Article Footer Related Stories&quot;,
    &quot;section_header&quot;: &quot;Related stories&quot;
  }">
    <div>
        <h3>
          <p>
            Related stories
          </p>
        </h3>
      </div>
    <div>
      <ul aria-role="menu" aria-label="Related articles">
        
          <li>
            <a href="https://blog.google/products/android/google-ai-android-mwc-barcelona/" data-index="1" data-target="card" data-primarytag="products - android" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;6 Android experiences to see at MWC Barcelona&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/products/android/google-ai-android-mwc-barcelona/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;1&quot;,
                &quot;related_article_tag&quot;: &quot;products - android&quot;,
                &quot;article_name&quot;: &quot;6 Android experiences to see at MWC Barcelona&quot;,
                &quot;author_name&quot;: &quot;Menaka Shroff&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/001_CM301076_MWC_2024_Highlight.max-600x208.format-webp.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/001_CM301076_MWC_2024_Highligh.max-1200x416.format-webp.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/001_CM301076_MWC_2024_Highligh.max-1200x416.format-webp.webp" alt="001_CM301076_MWC 2024_Highlightlights_Blog Post_ Header_SM3_dims" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/001_CM301076_MWC_2024_Highlight.max-600x208.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/001_CM301076_MWC_2024_Highligh.max-1200x416.format-webp.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Android</span></p><h4 data-target="title">6 Android experiences to see at MWC Barcelona</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    Menaka Shroff
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Feb 26, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
          <li>
            <a href="https://blog.google/products/android/new-android-features-february-2024/" data-index="2" data-target="card" data-primarytag="products - android" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;9 new Android features to help you stay productive&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/products/android/new-android-features-february-2024/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;2&quot;,
                &quot;related_article_tag&quot;: &quot;products - android&quot;,
                &quot;article_name&quot;: &quot;9 new Android features to help you stay productive&quot;,
                &quot;author_name&quot;: &quot;John Renaldi&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Blog_Keyframe_Image_16x9_Thumbn.max-600x208.format-webp.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Blog_Keyframe_Image_16x9_Thumb.max-1200x416.format-webp.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Blog_Keyframe_Image_16x9_Thumb.max-1200x416.format-webp.webp" alt="Blog_Keyframe Image_16x9_Thumbnail03" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Blog_Keyframe_Image_16x9_Thumbn.max-600x208.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Blog_Keyframe_Image_16x9_Thumb.max-1200x416.format-webp.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Android</span></p><h4 data-target="title">9 new Android features to help you stay productive</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    John Renaldi
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Feb 26, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
          <li>
            <a href="https://blog.google/products/android/how-to-use-quick-share-android/" data-index="3" data-target="card" data-primarytag="products - android" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;How to quickly share content with nearby devices&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/products/android/how-to-use-quick-share-android/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;3&quot;,
                &quot;related_article_tag&quot;: &quot;products - android&quot;,
                &quot;article_name&quot;: &quot;How to quickly share content with nearby devices&quot;,
                &quot;author_name&quot;: &quot;Alice Zheng&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/quickshare_4.max-600x208.format-webp.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/quickshare_4.max-1200x416.format-webp.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/quickshare_4.max-1200x416.format-webp.webp" alt="quickshare_4" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/quickshare_4.max-600x208.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/quickshare_4.max-1200x416.format-webp.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Android</span></p><h4 data-target="title">How to quickly share content with nearby devices</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    Alice Zheng
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Feb 08, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
          <li>
            <a href="https://blog.google/products/google-tv/google-tv-movies-valentines-day-2024/" data-index="4" data-target="card" data-primarytag="products - google tv" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;Find your perfect match this Valentine\u0027s Day on Google TV&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/products/google-tv/google-tv-movies-valentines-day-2024/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;4&quot;,
                &quot;related_article_tag&quot;: &quot;products - google tv&quot;,
                &quot;article_name&quot;: &quot;Find your perfect match this Valentine\u0027s Day on Google TV&quot;,
                &quot;author_name&quot;: &quot;Stacey Herron&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GoogleTV_Valentines-Day_b4vn9or.max-600x208.format-webp.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GoogleTV_Valentines-Day_b4vn9o.max-1200x416.format-webp.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GoogleTV_Valentines-Day_b4vn9o.max-1200x416.format-webp.webp" alt="GTV_VDay Hero" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GoogleTV_Valentines-Day_b4vn9or.max-600x208.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GoogleTV_Valentines-Day_b4vn9o.max-1200x416.format-webp.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Google TV</span></p><h4 data-target="title">Find your perfect match this Valentine's Day on Google TV</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    Stacey Herron
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Feb 08, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
          <li>
            <a href="https://blog.google/technology/safety-security/online-safety-tips-cybersecurity-mistakes/" data-index="5" data-target="card" data-primarytag="topics - safety &amp; security" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;6 cybersecurity mistakes people make — and what to do instead&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/technology/safety-security/online-safety-tips-cybersecurity-mistakes/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;5&quot;,
                &quot;related_article_tag&quot;: &quot;topics - safety &amp; security&quot;,
                &quot;article_name&quot;: &quot;6 cybersecurity mistakes people make — and what to do instead&quot;,
                &quot;author_name&quot;: &quot;Ladan Mohamed&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/CybersecurityMistakes_Hero-1.max-600x208.format-webp.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/CybersecurityMistakes_Hero-1.max-1200x416.format-webp.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/CybersecurityMistakes_Hero-1.max-1200x416.format-webp.webp" alt="CybersecurityMistakes_Hero-1" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/CybersecurityMistakes_Hero-1.max-600x208.format-webp.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/CybersecurityMistakes_Hero-1.max-1200x416.format-webp.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Safety &amp; Security</span></p><h4 data-target="title">6 cybersecurity mistakes people make — and what to do instead</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    Ladan Mohamed
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Feb 06, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
          <li>
            <a href="https://blog.google/products/android/google-ai-samsung-galaxy-s24/" data-index="6" data-target="card" data-primarytag="products - android" data-image="true" data-ga4-analytics-footer-lead-click="{
                &quot;link_text&quot;: &quot;The power of Google AI comes to the new Samsung Galaxy S24 series&quot;,
                &quot;link_url&quot;:  &quot;https://blog.google/products/android/google-ai-samsung-galaxy-s24/&quot;,
                &quot;source_content&quot;: &quot;Related stories&quot;,
                &quot;related_index&quot;: &quot;6&quot;,
                &quot;related_article_tag&quot;: &quot;products - android&quot;,
                &quot;article_name&quot;: &quot;The power of Google AI comes to the new Samsung Galaxy S24 series&quot;,
                &quot;author_name&quot;: &quot;Hiroshi Lockheimer&quot;
              }">
              <div data-target="card">
                
                  <div>
                    
    <figure>
        <picture>
            


    

    
        <source media="(max-resolution: 1.5dppx)" sizes="600px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/21424_ANC_Unpacked_blog_post_he.max-600x208.format-webp_MwYIMRd.webp 600w">
    
        <source media="(min-resolution: 1.5dppx)" sizes="1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/21424_ANC_Unpacked_blog_post_h.max-1200x416.format-webp_MroMQQq.webp 1200w">
    

    <img src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/21424_ANC_Unpacked_blog_post_h.max-1200x416.format-webp_MroMQQq.webp" alt="21424_ANC_Unpacked blog post header_OP1@3x" sizes=" 600px,  1200px" srcset="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/21424_ANC_Unpacked_blog_post_he.max-600x208.format-webp_MwYIMRd.webp 600w, https://storage.googleapis.com/gweb-uniblog-publish-prod/images/21424_ANC_Unpacked_blog_post_h.max-1200x416.format-webp_MroMQQq.webp 1200w" data-target="image" loading="lazy">
    


        </picture>
    </figure>


                  </div>
                
                <p><span data-target="eyebrow">Android</span></p><h4 data-target="title">The power of Google AI comes to the new Samsung Galaxy S24 series</h4>
                
              </div>
              <div>
                
                <p>
                  By
                  
                    <span data-target="author">
                    Hiroshi Lockheimer
                    </span>
                  
                </p>
                
                <p><span data-target="date"> Jan 17, 2024</span>
              </p></div>
              <svg role="presentation" data-target="arrow">
                <use xlink:href="/static/blogv2/images/icons.svg#mi-arrow-forward-no-bg"></use>
              </svg>
            </a>
          </li>
        
        <li>.</li>
      </ul>
    </div>
    
      
    
 </div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[She Built a Microcomputer Empire from Her Suburban Home (479 pts)]]></title>
            <link>https://every.to/the-crazy-ones/the-woman-that-tech-history-forgot</link>
            <guid>39970915</guid>
            <pubDate>Mon, 08 Apr 2024 15:48:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://every.to/the-crazy-ones/the-woman-that-tech-history-forgot">https://every.to/the-crazy-ones/the-woman-that-tech-history-forgot</a>, See on <a href="https://news.ycombinator.com/item?id=39970915">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <p><em>If history is written by the victors, Lore Harp McGovern should have volumes devoted to her contributions to the personal computing industry. In the mid-1970s, from her suburban California home, Harp McGovern—a housewife and mother of two—began assembling memory boards and other computer expansions to sell to the growing hobbyist and business markets. With her friend Carole Ely, she grew their company, Vector Graphic, into a major manufacturer of microcomputers, eventually taking it public before before Big Blue—IBM—muscled into the market. In the latest installment of his column The Crazy Ones, </em><strong><em>Gareth Edwards</em></strong><em> tells the untold story of one of the last remaining original founders of Silicon Valley.—</em><a href="https://every.to/news/kate-lee-joins-every-as-editor-in-chief" rel="noopener noreferrer" target="_blank"><em>Kate Lee</em></a></p><hr><p>London. 1981. A young, smartly dressed woman watches from the sidelines as a stage is prepared. Everyone is there to hear about a hotly anticipated IPO out of Silicon Valley. An investor approaches the woman and asks for a coffee refill from the table behind her. Her train of thought broken, she looks up at him. For a second, she holds his gaze. Then she turns and pours him a coffee. A few minutes later, the host announces that the CEO is ready to speak.</p><p>Tucking her short brown hair behind her ears, the same young woman straightens her suit and walks confidently up onto the stage. A murmur of surprise spreads across the room, which soon gives way to polite applause. She nods in acknowledgement, her eyes scanning the audience, searching.</p><p>“My name is Lore Harp, CEO and founder of Vector Graphic,” she says, her accent a mix of German and Californian. She locks eyes with the investor who asked her to refill his cup. “Sir, do you need me to get you any more coffee?”</p><p>The crowd looks at the embarrassed investor. He shakes his head.</p><p>“Good,” Lore Harp says with a thin smile. “Let’s continue, then, shall we?”</p><p>This is the story of Lore Harp McGovern, founder of Vector Graphic. With her friend Carole Ely, she launched a multi-million-dollar computer company from her suburban home and became one of the most important founders of the microcomputer age. It is based on contemporary accounts in publications such as the <em>Harvard Business Review, Interface Age, Kilobaud, Time, </em>and the <em>Los Angeles Times</em>, as well as books such as <em>Women, Technology and Power </em>by Marguerite Zientara; <em>Future Rich</em> by Jacqueline Thompson; and <em>The Untold Story of the Computer Revolution </em>by G.H. Stine. It is also based on the words of Lore Harp McGovern herself.</p><h2><strong>‘You can do anything you want’</strong></h2><p>Like many of Silicon Valley’s pioneers, Harp was an immigrant. Born Lore Lange-Hegermann, she grew up in Bottrop, Germany amid World War II, where she shared a bombed-out building with her parents and grandfather, Hermann Lange-Hegermann.</p><p>Lange-Hegermann had been a businessman and politician during the pre-war Weimar Republic, but the rise of Hitler and the war had cost him his political career and much of his business empire. He believed in the importance of a proper education for all of his children and grandchildren, regardless of gender. As a result, Lore grew up watching her aunt become a successful lawyer and her father take over what remained of her grandfather’s businesses.</p><p>Lore’s grandfather was her biggest influence. “I remember, as a seven-year-old, getting a little book from him,” she recalled later in an interview with the Computer History Museum. “In my child’s mind’s eye, it was gigantic. And it was a photographic book of people from all over the world in their native costumes, their traditions and all this. And I was so enthused about the book that I said, ‘I will see all these people!’”</p><p>“You can do anything you want,” her grandfather responded.</p><p>What her family hadn’t entirely grasped was just how determined Lore was to achieve this goal. Smart and observant, it hadn’t taken long for her to spot that reality didn’t always match the ideal. Her mother was a talented photographer and had studied the subject in college, but society expected her to become a housewife, which she did. So while Lore studied hard, she also watched for an opportunity to do something different. In February 1964, one of her friends pulled out of a planned six-month exchange visit with an American family. It was the opportunity Lore had been waiting for. She went instead.&nbsp;</p><h2><strong>A land of opportunity</strong></h2><p>On February 8, 1964, Lore Lange-Hegermann arrived in Santa Cruz, California. She was 19 years old and had promised her family that she would only stay for six months.</p><p>Six months later, to her parents’ surprise and disappointment, Lore sold her return ticket to West Germany and hitchhiked to Mexico. After that, she headed to San Francisco. When her tourist visa expired, she became undocumented, unable to officially work. She crashed in a shared house with four other women and took off-the-books jobs to pay rent and survive, while immersing herself in the growing sixties counterculture.</p><p>During this time, she met Bob Harp. Bob was a young computing researcher and engineer whose talents had secured him a well-paid role at a prestigious research institute in Germany. On his return to the U.S., his path crossed with Lore’s. She was attending a friend’s party when a British sports car roared up outside. It was Bob.</p><p>Bob was as outgoing as he was brilliant, and the two soon fell into conversation. The fact that Bob had broader horizons than most of his peers and spoke fluent German, thanks to his time in Europe, also helped. He made an instant impression on Lore, and she on him. It wasn’t long before they began dating and fell in love. When he was offered a research job at the California Institute of Technology, she agreed to go with him. For the next year, the pair enjoyed living a bohemian life in Los Angeles, until the inevitable happened—immigration services caught up with Lore. Threatened with deportation and summoned to an interview, the couple hatched a plan.</p><p>“I put on my little black shift dress,” Lore later said. “My hair was down. I put it in a big bun. I put on my pearl necklace, my father’s gold bracelet, my grandmother’s ring. I sat there like Miss Prim and Proper. And we said, ‘Oh, we just got engaged, and we’re getting married.’”</p><p>And they did. Lore Lange-Hegermann became Lore Harp. “We found some minister in our neighborhood, and then we went to McDonald’s and had a hamburger.”</p><h2><strong>The gilded cage</strong></h2><p>While Bob had worked at Caltech, Lore was able to immerse herself in the flourishing local art community. But over time the gears of his career began to turn. In the early seventies, Bob was offered a better-paid aeronautical research role at Hughes Research Laboratories, which he accepted. For Harp, this meant leaving vibrant Los Angeles for a more traditional suburban life in Westlake Village, California. “We moved from there to way out in the boonies,” Harp recalled. “Westlake Village which is…oh my God.”</p><p>By 1975, this lifestyle had begun to take a toll on her mental health. Harp had stayed in America to escape a future where her only option was to be a housewife.Yet in Westlake Village, this was the only role it seemed possible for her to play. While Bob worked, she was required to manage the home and join the various women’s groups and their activities like charity fundraisers and dinner parties—obligations expected by her community and Bob’s employer. To try and prevent this from taking over her whole life, she started studying anthropology. But then she became pregnant with their first child and was forced to abandon her studies. A second—another daughter—followed two years later. When the children were three and five, Harp tried to pursue school again, this time hoping to follow in her aunt’s footsteps and become a lawyer. But law school was not friendly to young mothers.&nbsp;</p><p>“My husband was not the kind of person who would take over half the chores while I studied, even though he was otherwise supportive,” she said. Forced to quit, Harp felt frustrated and isolated. The social activities that seemed to provide a sense of value and purpose for many of her neighbors just didn’t feel satisfying for her.</p><p>“I was 32 at the time, and I felt…‘My God, suddenly I’ll be 40, the children will be gone, and where am I going to be?'”&nbsp;</p><h2><strong>The product</strong></h2><p>Harp first met Carole Ely while they were waiting to pick up their children from school. Ely had started a promising career as a bond trader when marriage and children intervened. Now, like Harp, she was stuck living the life of a Westlake Village housewife. She, too, felt caged.</p><p>The duo talked about starting a business together. Their first idea was a travel agency. However, the travel industry in California was one of entrenched interests—when it came to securing partnerships and permits, who you knew mattered just as much as how good your product was. Networking required membership of the kind of business and social clubs that would never allow two women like Harp and Ely to join.</p><p>Then, in January 1975, <em>Popular Electronics </em>published a picture of the <a href="https://every.to/the-crazy-ones/the-secret-father-of-modern-computing" rel="noopener noreferrer" target="_blank">Altair 8800</a> on its cover. Bob Harp, like many who worked with large computers in their workplace, had never imagined that he might one day own a machine of his own. He placed an order for the Altair, which was billed as the world’s first mass-market “microcomputer.” When the machine arrived in kit form, Bob quickly assembled it and it became one of his obsessions. The Harp house was soon filled with pamphlets, newsletters, and how-to guides about microcomputers, and Bob discovered, to his delight, that the Altair’s creator Ed Roberts had built it around a principle of “open architecture” via its S-100 expansion socket. Anyone could create memory boards or peripherals that could expand the functionality of the machine . A few third-party expansions were already on the market and more were being released regularly, but Bob decided it would be more interesting (and a fun test of his skills) to design his own expansion board. Over the course of a few months, he created a board for his own use, one that would double the amount of RAM in his Altair from 4K to a mighty 8K.</p><p>While Bob was at work, Harp would read the computing materials that littered the house. Dinner table conversations would routinely include discussion of the latest trends in technology. Through a form of osmosis, she became versed in the growing computer industry herself. “[Bob] was reading tech publications all the time, and I kind of read them as well, and looked at them, and saw what was going on,” she said.</p><p>Harp decided that Bob’s 8K RAM board was the opportunity that she and Ely had been waiting for. They would make and sell them from home. In return, Bob would receive a royalty payment on every sale. She called her prospective business partner and asked her if she wanted to team up and sell memory boards.</p><p>“Sure,” Ely replied. “What’s a memory board?”</p><p>Two days after that phone call, Lore Harp and Ely attended the Southern California Computer Society’s monthly show. They were there to scout out their potential market. They watched vendors try to sell bags of chips and parts for memory boards and other expansions, often with poorly composed hand-written instructions on how to build them. The whole operation seemed distinctly amateur, yet it seemed to work. Attendees would hand over bundles of money—sometimes as much as $1,000 (about $5,000 today)—in exchange for these products.</p><p>Two days later, on August 23, 1976, Vector Graphic was incorporated. Its head of marketing was Carole Ely. Lore Harp was the CEO.</p><p><strong><a href="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_P3I9vJOqpHx-NNqFeebVsxGCtY1LkjgN8Jm9jKXPsiWuVOOs-A7H3R0c0KYgyFpF2Pn6SCyRc6xL_EffIA5HEH0L6V6m4udVqFylwjx78SMVcNARJng7sYqCBeP3lFBPL_MpvieYeWFs130TSTQ8ew.png?link=true" target="_blank"><img src="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_P3I9vJOqpHx-NNqFeebVsxGCtY1LkjgN8Jm9jKXPsiWuVOOs-A7H3R0c0KYgyFpF2Pn6SCyRc6xL_EffIA5HEH0L6V6m4udVqFylwjx78SMVcNARJng7sYqCBeP3lFBPL_MpvieYeWFs130TSTQ8ew.png"></a></strong></p><p><em>Carole Ely (left) and Lore Harp. Source: Vector Graphic.</em></p><h2><strong>The deal</strong></h2><p>“It’s Lore Harp from Vector Graphic. We have a new memory board and need about 50,000 chips.”&nbsp;</p><p>Harp was seated in the family room of her Westlake home on the phone with a sales representative at chip manufacturer AMD. The company was one of a small number of independent U.S. chip manufacturers that were prepared to supply third parties. Harp and Ely needed these chips so they could package them into kits in Harp’s house and sell them as memory board kits.</p><p>“Oh!” The sales representative on the other end of the phone sounded keen. “I’d be happy to come to your office to discuss it.” Harp looked around the room and across to the kitchen beyond, where a large pot of stew was cooking on the stove.&nbsp;</p><p>“We’d love to meet you in our office, but we’re in the middle of moving,” she replied, thinking on her feet. Harp told the representative they were in Westlake and suggested they meet at the Westlake Inn. The sales representative agreed. After calling Carole and telling her the news, Harp called Bob at work.</p><p>“You’ve got to get home from Hughes,” she told him. “You’ve got to be here at a quarter to five to care for the kids. We have to go meet a guy from AMD.”</p><p>The memory of that first meeting was seared into Harp’s brain. “He had these little monogrammed cufflinks and that aftershave everybody had. Some Old Spice thing,” she remembered about the salesman later. “And he gave us this up-and-down look. I never forget this.”</p><p>The three of them sat down in the hotel’s restaurant area and tried to negotiate a deal. Harp told the man from AMD that they planned to manufacture memory boards and sell them to the growing hobbyist market. The salesman nodded along, then gave them a price. It was far too high. “He didn’t even know what an Altair was,” Harp said. As a result, he didn’t believe their assertions that there was a large enough market for their product to make a discount worthwhile. They refused AMD’s terms.</p><p>Not to be deterred, Harp called Fairchild Semiconductor, another major chip manufacturer. Once again, it led to a meeting at the Westlake Inn.</p><p>“You know what,” the Fairchild representative replied after Harp had explained their plan. “I’ll help you.”</p><p>Now Harp took her biggest gamble. They didn’t have enough money to pre-pay for the chips, so she decided to be honest.</p><p>“We will pay within 30 days because we cannot afford to prepay,” she told him. Harp knew that they’d need to sell enough boards first to cover the cost. “We promise we’ll pay in 30 days or before.”</p><p>The Fairchild man was silent. Then he laughed. “You know what? I trust you.”</p><p>They shook hands and went their separate ways. A few weeks later, there was a knock on the Harp family door. When Lore opened it, a man named Dick Kirkpatrick introduced himself. He explained that he was their Fairchild distributor and pointed to the boxes of chips in the back of his rental car. Harp helped him carry the boxes into the back bedroom that they had begun converting into an assembly space.</p><h2><strong>The sell</strong></h2><p>Stan Veit had just opened up his computer store one autumn morning in New York when the phone rang. It was a woman calling from California. She wanted to sell him some memory boards.</p><p>“I listened because a woman selling computer equipment was indeed a novelty,” he wrote later. “After speaking with her, I found out that her name was Lore Harp.”</p><p>Veit didn’t know it, but he was about to be subject to a sales pitch created by Carole Ely to make Vector stand out.</p><p>Harp told Veit that the Vector boards were not only superior to anything else on the market—they were cheaper as well. She made Veit a simple offer.</p><p>“She would ship me two boards, and if I liked them, I would call her and she would ship me six more and I would pay cash on delivery for the six,” Veit recalled. “If I didn’t want them I just had to send her boards back. Well, that seemed like a fair offer, so I agreed.” When the boards arrived, they were as good as Harp had claimed.&nbsp;</p><p>Veit made the call. “Thus, I became a dealer for Vector Graphic, a company run by two women,” <a href="https://archive.org/details/stan-veits-history-of-the-personal-computer/page/218/mode/2up" rel="noopener noreferrer" target="_blank">he wrote later</a>.</p><p>Veit wasn’t the only one. Harp and Ely systematically went through computer hobbyist magazines like <em>Byte </em>and <em>Interface Age</em>, which were full of advertisements from dealers like Veit. It was from these computer dealers that most hobbyists purchased their microcomputers and parts, so the Vector Graphic team targeted them aggressively. They would call them and pitch the same arrangement that they had offered Veit. By October 1976, orders were flooding in. Harp and Ely’s product wasn’t revolutionary, nor were their boards significantly cheaper than their rivals, but their approach to the process of sales and ordering was more professional. This also extended to the board kits themselves. The pair hadn’t forgotten the poor-quality instructions and packaging they’d seen at computer fairs when starting out. They put extra effort into making sure that the packaging for their own boards was of a high quality, providing clear instructions for assembly, and even color-coded their chips. Overall, Vector’s commitment to high standards made them stand out.</p><p>By the end of the year, they were almost overwhelmed with orders for their memory boards, with demand starting to exceed the number of kits the two women could assemble themselves at Harp’s home. They were also attracting neighborhood attention. It was hard not to. Every weekday morning, Bob Harp would depart for work and Lore would take the children to school. Shortly after, Lore would return home and Ely would knock on her door.</p><p>The rest of the day would see a steady stream of men in suits visiting the house. A short while later, they would leave. It would stop when Lore left to pick up the children and Bob got home. The men were computer parts dealers, but the neighbors didn’t know that.</p><p>“I think our neighbors thought we had a brothel going,” Harp said.</p><p>Eventually Harp’s next-door neighbor, Jean, grew too curious to remain silent. She knocked on the door and asked what they were up to. Harp invited her in. Jean was stunned by the operation. The rear bedroom and family room of Harp’s house had been converted into a production line for memory boards and board kits. Boxes of chips and parts were stacked on the floor, while the table was covered in fruit bowls into which the correct chips for each board had been carefully sorted, ready to be packaged. In the kitchen, salesmen helped themselves to coffee while discussing orders with the women. Toward the end of the afternoon, local high school students would arrive, paid by Harp and Ely to help with packaging and distribution. Watching, Jean admitted she had never had a job, although she had always wanted one. After a brief discussion, Harp and Ely told Jean that they were expanding and offered her a job as their receptionist. She became one of their first full-time employees. Forty years later, Harp would still vividly recall the joy of giving Jean her first ever paycheck.</p><p>“It…it was just great,” Harp said, a smile on her face.</p><p>By December 1976, Harp and Ely had built Vector Graphic into a million-dollar company. In 1977, Harp decided they should go one step further: They should release a desktop microcomputer themselves. This would go from a company oriented around building add-ons for other company’s machines to making machines themselves.</p><h2><strong>The Vector 1</strong></h2><p>Harp persuaded Bob to leave his job at Hughes and join Vector Graphic full time. Harp and Ely had already employed a number of engineers to design parts, but building a computer would require someone to manage them and create an overarching design. Bob possessed the right skills and vision to do this.</p><p>The type of computer the company would build was determined by a growing demand for business machines that had been identified by their dealer network. The pair had a reputation for treating the dealers that sold Vector products fairly, so they were happy to be regularly canvassed for their opinion on what products would sell. Vector had an advantage over its competitors when it came to market intelligence. Vector’s dealers reported that their clientele was expanding. The hobbyist market was still the primary driver for sales of first-generation computers like the Altair, but small-to-medium-sized businesses were becoming interested in owning a microcomputer to use for word processing, accounting, and other business-related tasks. Unlike the hobbyists, they were often leaving stores empty-handed.</p><p>This wasn’t due to fears over price—quite the opposite. These buyers were prepared to pay more than $3,000 (roughly $16,000 today) for the right machine coupled with the right hardware add-ons or business software. It was that they wanted a microcomputer that was reliable, powerful, expandable, and pre-built—unlike hobbyists, most businesses had no desire to assemble their own machines from a kit. It also wouldn’t hurt if it was something that could serve as an office centerpiece around important clients. A machine that ticked all these boxes didn’t yet exist. The market was machines like the Altair or Apple at the low end or expensive, room-sized computers by IBM or others at the high end. There was nothing in between, so Vector decided to fill that gap.</p><p>At the 1977 West Coast Computer Faire, Steve Jobs and Steve Wozniak set the home computer world abuzz with the announcement of the Apple II, a pre-built machine for home users. Just a few booths down, Lore Harp and Carole Ely did the same thing for businesses with the announcement of the Vector 1, designed by Bob Harp. In terms of CPU and RAM, it wasn’t anything special, launching with the same specifications as the Altair 8800. What differentiated it was that it could be easily expanded—well beyond the limits of the Altair. It also came pre-built.&nbsp;</p><p><a href="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_1imEIsNaUtLoWzA53tJegncGKXXr1E11Xdzsd5E2SFTCdplx6an4HqGQa-W7tv8JQJzYbsEu6xsS9x5bfuHRdB0QDgdU5m1IY4lHsq1GhghOT4ggw3Moa6JoCTM8K6RXKVz5VK_yQvL1NIC-ZbWvzw.png?link=true" target="_blank"><img src="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_1imEIsNaUtLoWzA53tJegncGKXXr1E11Xdzsd5E2SFTCdplx6an4HqGQa-W7tv8JQJzYbsEu6xsS9x5bfuHRdB0QDgdU5m1IY4lHsq1GhghOT4ggw3Moa6JoCTM8K6RXKVz5VK_yQvL1NIC-ZbWvzw.png"></a></p><p><em>Carole Ely (left) and Lore Harp holding a Vector 1. Source: Vector Graphic.</em></p><p>“Maybe people are really interested in having a computer that doesn't have all the switches,” Harp told an excited <a href="https://archive.org/details/PersonalComputing19770506/page/n109/mode/2up" rel="noopener noreferrer" target="_blank"><em>Personal Computing World </em>journalist</a>. “Maybe it’s a little beyond the hobbyist who likes to fiddle with all that and likes to see everything work.”</p><p>The Vector 1 was a no-nonsense, ready-to-use computer designed for businesses that wanted a machine that would just work. It also had style, featuring a sleek metal case with rounded corners. It was even available in four colors—burnt orange, dark green, black, and beige. “It was not Apple that did colors first,” Harp remembered later.</p><p>“The folks at Vector have managed to come up with a rather slick-looking entry into the market,” <em>Kilobaud Microcomputing </em>wrote. “And, it’s all theirs.”</p><p>Other reviews of the Vector 1 were equally impressive. So, too, were those for the Vector 2—a machine that kept to the same principles but was faster and had more RAM—that followed soon after. Together, the machines pushed Vector Graphic to the top of the second tier of microcomputer manufacturers that almost exclusively focused on business customers. Companies like Apple and Commodore could boast larger unit sales if figures for both the business and home markets were combined, but when it came to more expensive machines for medium-sized businesses, Vector was the dominant player. By 1980, it was achieving $25 million (about $95 million today) in annual sales. The company that had been started in Harp’s converted back bedroom was now a well-known brand within the computing industry.&nbsp;</p><p>Wall Street also began to notice.</p><h2>From the ground up</h2><p>It wasn’t just the functionality of Vector’s machines that impressed the business market. It was also that they reliably worked.&nbsp;</p><p><a href="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_K1Q4r7huvZ8XXgUs1VK99J1Yu0P7cNoRSBuoLhuxW9eGvXBVa_2dEJCgAVGPAw0yWhFfWs4jfHTaL5-sCXqoHlXtlC5NKomZQbHivjacCYpK7DB4U0r4PIIgbMMbT8igpIKu-p-ci-Wb7YD97ZJqNw.png?link=true" target="_blank"><img src="https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/3030/optimized_K1Q4r7huvZ8XXgUs1VK99J1Yu0P7cNoRSBuoLhuxW9eGvXBVa_2dEJCgAVGPAw0yWhFfWs4jfHTaL5-sCXqoHlXtlC5NKomZQbHivjacCYpK7DB4U0r4PIIgbMMbT8igpIKu-p-ci-Wb7YD97ZJqNw.png"></a></p><p><em>An advertisement for the 1979 Vector MZ, championing its reliability. Source: Author’s collection.</em></p><p>In customer surveys of the time, Vector Graphic consistently outperformed Apple, Commodore, Tandy, and others in terms of customer satisfaction among business users, largely due to reliability. Lore Harp had mastered running microcomputer production lines, something most other computer startups struggled with. Under her leadership, Vector rarely suffered any workforce issues, and the quality of output from the production lines themselves was high. Her success wasn’t just due to her eye for detail. It was also because she recognized that production is, fundamentally, about people.</p><p>In an era in which production-line staff was largely treated as unskilled labor and corporate benefits were reserved for the C-suite, Vector Graphic bucked the trend. When the company hit its first $1 million sales month, Harp closed the factory and took all 500 employees out to play baseball and drink beer. The company also paid well. It even had a daycare and offered home cleaning services to employees who were struggling to balance household responsibilities with their work.&nbsp;</p><p>These benefits did not go unnoticed in the trade and business press, nor that, as a result, Vector had a higher-than-average number of female employees. In interviews, magazines would ask if Harp’s approach was intended as some kind of feminist experiment. Alternatively, they would ask if it was evidence that female CEOs managed more emotionally than strategically—often with the implicit accusation that the company benefits were a sign of weakness. Harp’s answer was always the same: These benefits and policies were in place because they made economic sense.</p><p>Harp’s philosophy was made clear when Vector went public in 1981. In the first meeting with the IPO’s prospective underwriters, she dropped a bombshell—she wanted <em>every</em><strong> </strong>Vector employee to receive stock options.</p><p>“That guy in assembly who puts in the last screw? If he is really mad, and he doesn’t do it properly, and Quality Assurance misses it, it’s not just the guy back there who hears about it. It’s the VP of sales,” Harp explained. “Because soon it is sales going down because suddenly you’re no longer delivering quality product. <em>Everybody</em> is deserving, not just those of us sitting at the front office.”</p><p>She was told it wasn’t normal. Share options for senior staff was fine, but offering them to the entire staff would harm the value of the offering.</p><p>Harp wouldn’t budge. “Well, you’ve got five minutes,” she told them. “We must have a deal at the end of that time, or we walk.”</p><p>The underwriters protested again.</p><p>“Okay,” Harp said calmly, looking at her watch. “Well, that’s 30 seconds gone.”</p><p>After a frantic discussion, the underwriters agreed to find a way to make it work. In the end, Vector’s staff received stock options based on their time at the company, priced at $1 per share. When the IPO was successful, these shares increased in value by a factor of 13.</p><p>“People couldn’t believe it,” Harp said later. “They were thrilled.”</p><p>The IPO also made Harp the second-ever female founder to take a company public on the Nasdaq stock exchange. Fellow Silicon Valley tech entrepreneur Sandra Kurtzig beat her by just a few days. Harp didn’t mind. Kurtzig was the founder of ASK, a software company focused on business productivity applications. As the two most prominent female founders in the industry, they had become good friends and business allies.</p><p>Although the IPO would represent a major achievement for both Harp and Ely, running Vector was taking a toll on their marriages. Ely’s husband had tolerated her role at Vector as an outlet for her boredom, but as she continued to invest more of her time in the company, their relationship began to deteriorate. For the Harps, cracks were also appearing. Bob had also initially seen Vector as a side project for Lore Harp, and his direct involvement created further problems when the two began to hold different opinions on how the company should be run. He was resentful of the level of attention she received in the press, feeling it diminished his own role at Vector.</p><h2><strong>The Ice Maiden</strong></h2><p>In the beginning, both Harp and Ely were treated as a curious novelty by the rest of Silicon Valley. Their impressive range of products allowed them access to the right circles and markets, but that often came at a price. At best, they were treated with a sort of benign paternalism by competitors that Harp was often all too happy to exploit. Often, the first time a competitor realized how ruthless she could be was when they discovered their customers were now Vector’s customers instead.</p><p>Deals and product demos often took place in hotel rooms during industry shows or on sales tours. Unfortunately, Harp and Ely were often left having to deal with attempts at abuse or exploitation.</p><p>“They either just loved you, or they were trying to be after you,” Harp said later. “One guy actually got slapped. I said, ‘I’m here for one purpose only.’”</p><p>As Harp climbed higher within American industry, the paradigm started to shift. Senior figures within other companies began to resent her presence at the top of the tech pyramid. What had begun as an unthreatening story of two housewives running an odd little business became one instead of two women successfully building and expanding their empire. To many, this didn’t seem possible, and articles of the time suggested that Harp’s husband Bob played a larger role than he actually did. By diminishing the role of the two women in the success of their own company, readers were reassured—whether purposely or not—that behind every successful woman, there must be a man.</p><p>This attitude wasn’t universal. There were those who saw Harp’s skills clearly for what they were. In late 1980, it was Harp—and Vector—who Adam Osborne approached while looking for a manufacturer for his revolutionary portable computer. Osborne was making the jump from writing about computers to designing them. He knew that manufacturing his new machine—the Osborne 1—would be difficult and complex, so he wanted it to be made by the best. In his mind, the best was Lore Harp. Harp was skeptical and wanted to wait until Osborne had a production prototype. Unwilling to wait, Adam Osborne <a href="https://every.to/the-crazy-ones/the-rise-and-fall-of-steve-jobs-s-greatest-rival" rel="noopener noreferrer" target="_blank">pushed ahead</a> on his own.</p><p>After Vector went public in August 1981, the negative perception of Harp held by some executives only grew stronger. Female business icons were allowed, as long as they followed the unwritten rules and remained quiet and humble. Harp was proud of her company and her success, and was happy to call out individuals who treated her poorly, as she had done at that London meeting for Vector’s IPO.</p><p>Soon, she was referred to as the <a href="https://archive.org/details/trialsrewardsofe0000unse/page/84/mode/2up" rel="noopener noreferrer" target="_blank">“Ice Maiden”</a> within the industry. Early in 1982, a female employee wrote to Harp, congratulating her on her success. However, the employee expressed her dismay at some of the things she would hear from male industry figures when she mentioned that she worked at Vector. She told Harp that one man had complained to her about “the awful bitch who was running the company.”</p><p>“I sent a nice note back,” Harp remembered later, “and said I especially enjoyed the comment about this bitch running the company because that poor guy is either so jealous or he’s so stupid that he doesn’t have anything else to talk about, and I must be terribly important in his eyes.”</p><p>Long before the phrase was coined, Lore Harp was busy living rent-free in many male executives’ heads.&nbsp;</p><h2><strong>The breakup</strong></h2><p>Harp and Ely’s success came at a cost. By the end of 1981, Carole Ely was divorced; her husband was unhappy with how much of her time was occupied by her career. Lore and Bob Harp had already effectively separated by the end of 1980, and the possibility of a divorce was even declared as a business risk in the company’s IPO documents. Any faint chance of reconciliation ended with the positive press Vector received after the company went public. Much of this focused on Harp’s leadership role and impact on the company’s success, including an <a href="https://archive.org/details/time-1982-11-15/Time%201982-03-22/page/58/mode/2up" rel="noopener noreferrer" target="_blank">interview in <em>Time</em> magazine</a>. Bob, annoyed at the attention his then-wife was receiving, burned a number of copies of <em>Inc. </em>magazine—which had featured Harp on its cover—in front of her.</p><p>Official divorce proceedings began not long after, eventually concluding in the summer of 1982. In the end, Harp would be divorced for only a single day. She had already begun a relationship with the man who would become her second husband—publishing mogul Pat McGovern. She became Lore Harp McGovern. They proved to be a good match, enjoying their time together but respecting each other’s boundaries. The marriage would last until McGovern’s death in 2014.</p><h2><strong>‘Big Blue’ awakens</strong></h2><p>Adam Osborne was not the only person in Silicon Valley impressed with what Lore Harp McGovern had built at Vector. Just before she took the company public, a man named Don Estridge led a delegation from IBM to pay her a visit. Estridge indicated that IBM was thinking about making a small move into the microcomputer market, and suggested that Vector could supply computers for IBM to badge and sell under an original equipment manufacturer (OEM) arrangement. Rather than designing and selling its own microcomputer, IBM would be happy to confine itself to purchasing stock from Vector that it would sell—with a mark-up—as IBM products.</p><p>“Let me get this straight,” Harp McGovern asked him. “You are a $25 billion business. We’re a $25 million business. And you are interested in potentially buying OEM products <em>from us</em>? That seems like a highly unlikely proposition.”</p><p>Estridge insisted it was true, and Harp McGovern played along. Estridge left with a number of Vector machines as samples. Harp McGovern was smart enough though to know what this really meant: IBM was building a microcomputer. She called an emergency meeting of her senior executives.</p><p>“We have one year, if that,” she said. “The world is going to change.”</p><p>Vector Graphic knew that if IBM (“Big Blue” to its friends and enemies) entered the market, it would target business clients—Vector’s bread and butter. This couldn’t have come at a worse time. Bob Harp, who despite the divorce was still an intrinsic part of the company’s design team, had recently overseen two major technical missteps.</p><p>Vector was late in moving from machines with 8K processing to 16K, which had become the new industry standard. This left Vector—and its dealer network—selling a range of machines based on dated technology longer than other manufacturers. As a result, its customer base was slow to upgrade to new machines, choosing to wait until Vector released one based on 16K technology. This problem was compounded by the release of the Vector 3, its final 8K machine. The computer itself was as reliable as ever, but its keyboard wasn’t detachable and instead was <a href="https://www.computerhistory.org/collections/catalog/X1092.92" rel="noopener noreferrer" target="_blank">built into</a> the computer’s case. Users found this design uncomfortable to use and the Vector 3 became the first of the company’s machines to garner negative reviews.</p><p>Because of these mistakes, Vector failed to sufficiently expand its business before Big Blue arrived—even though Harp McGovern had correctly guessed that IBM was about to enter the game. Vector had little financial room to maneuver once the first IBM PC was released in August 1981.</p><p>Vector made another bad decision later that year, even after the impact of the IBM PC on the business microcomputer market became apparent: Vector continued to use the CP/M operating system rather than switch to Microsoft DOS.</p><p>CP/M had been the operating system of choice within the business sector for some time. Most business software was written to work with it, which made it the obvious choice for any microcomputer manufacturer around which to build their machine. Despite this, Vector had always enjoyed a close relationship with Microsoft, which had its own aspirations to be a power player in the operating system market. Indeed, Bill Gates occasionally worked out of Harp McGovern’s office when he was in town.</p><p>As a result, Harp McGovern had the opportunity to see, sooner than most other companies, what Microsoft was adding to its own operating system in an effort to capture the market. Once the IBM PC debuted with Microsoft DOS—not CP/M—installed, building future machines around this upstart operating system began to look more attractive. It could offer more functionality, while IBM’s adoption of DOS all but guaranteed that software companies would rewrite their business software to support it. It was a switch that Harp McGovern herself was inclined to make, so she contacted Gates and negotiated a provisional contract for Vector to pivot to using DOS instead of CP/M on far sweeter terms—and at a much faster pace—than were being offered to other manufacturers.</p><p>“We had an amazing relationship with Microsoft. I’d signed a contract where every update and every new system in perpetuity we would get at no increased royalty,“ she explained.</p><p>The deal was taken to the board, but the collective decision was made that it was better to stick with the known quantity that was CP/M for the in-development Vector 4. Switching would potentially mean redesigning the next line of machines. It meant re-educating their dealers and clients in the new operating system, and there was no guarantee that every piece of software they needed would be ported to it. The board, which included a number of ex-IBM employees, was also convinced that IBM would soon lose interest in the microcomputer market, leaving it entirely. If that happened, it would leave Vector alone on DOS—a precarious position to be in. In the end, the board agreed that moving to DOS was the bigger risk. This decision robbed Vector of the chance to be one of the first manufacturers to offer “IBM compatibility.” The window for survival in the post-IBM world would be narrow, and Vector had just narrowed it even further.</p><p>“I would say not having forced this through to make it happen was probably a flaw on my part,” Harp McGovern reflected. “By kind of going against my instinct that this needed to happen in order to be competitive. Because IBM was lusting after our dealer network.”</p><p>1982 was a tough year for Vector and the microcomputer industry in general. IBM aggressively pushed to gain market share with its PC, squeezing out many of the smaller players in this space. Harp McGovern worked hard, and successfully, to defend Vector’s share of the market in this hostile environment. Margins were squeezed, but the company’s commitment to quality and support gaveVector a fiercely loyal customer base and dealer network. Sales remained strong, and the company remained profitable. Vector seemed to have secured its niche. So at the end of 1982, Harp McGovern stepped back, relinquishing the role of CEO that she had held since founding the company in 1976. She oversaw the appointment of Fred Snow, an experienced industry hand from Honeywell, as Vector’s new CEO. Since the divorce from Bob, Harp McGovern had wanted to find more time to spend with her own children. She also wanted to fulfill the promise she had made herself as a child and travel the world in her spare time. Both Bob and Carole Ely had left the company by this point, and she decided it was her turn, too. She thought Vector no longer needed Lore Harp McGovern. She was wrong.</p><h2><strong>The final roll of the dice</strong></h2><p>In 1983, the Vector board petitioned Lore Harp McGovern to retake the position of CEO. In her absence, the company had lost more ground to IBM. Countering its moves required quick, decisive action, which the new CEO was unable to provide. The company’s market share had declined precipitously, and it was losing money at an alarming rate.</p><p>Harp McGovern was reluctant to step back into the fray.</p><p>“I had moved up to northern California at the time,” she said later in an interview. “I’d just moved up here a few months earlier with small children, nine and eleven, right after school was out, no friendship, no circle for them.”</p><p>Harp McGovern had promised to spend more time with her children. It was not a promise she was prepared to break. The board pleaded with her to return anyway, stressing that layoffs were already necessary. Without her back at the helm, they likely faced bankruptcy. Harp McGovern relented.</p><p>For almost nine months, Harp McGovern worked to save what was left of the business she and Ely had built. She oversaw a round of layoffs, which was painful for someone who believed the employees were the heart of the business. It was clear to everyone now that the future lay in IBM-compatible machines running DOS—the boat that Vector missed in 1982. Harp negotiated new investment to enable the development of IBM compatibility for the Vector 5 and beyond. . With gargantuan effort, Harp McGovern managed to drag Vector back close to profitability.&nbsp;</p><p>The personal toll, however, was enormous. Keeping the company alive took all of her talent, but it also took her away from her children. When she had agreed to become CEO again, it was conditioned on her not having to move back to LA. She wanted her now school-age children to have a stable home life. To achieve that, she endured multi-hour, long commutes to Vector’s headquarters in southern California.</p><p>“I commuted every day to Los Angeles between here and Burbank,” she said. “I would take a 6 a.m. flight. I’d get to Burbank, have my car in the parking lot, got to the office at 8:30. And at night, I’d try to get the 6 o’clock flight back so I could have dinner with my kids a little late but still have dinner, and the next day, do the same thing again.”</p><p>Soon, Harp McGovern wasn’t just fighting external battles. Friction grew with the board over where savings should be found. Where they wanted to find more cost efficiencies in staffing or production, she argued instead that they should seek new investment and expand into markets yet to be targeted by IBM. They rejected her plan to develop a new machine that would focus on networking and telecommunications, which she saw as the future of computing.&nbsp;</p><p>In the end, Harp McGovern was worn down. In 1984 she walked away (again) from her own company: “I finally said, ‘Guys, I’ve had it. I’m out of here.’ I dumped all my stock, had a good cry at my lawyer’s office because it was just…Oh, it was just…”</p><h2><strong>Life after Vector</strong></h2><p>Harp McGovern’s departure sealed the fate of Vector Graphic, although the company would limp on for a few more years. In October 1987 Vector Graphic finally declared bankruptcy. By that point, Harp McGovern herself had been out of the picture for three years. That didn’t stop a number of journalists from treating its failure as unspoken vindication that housewives—and Ice Maidens—lacked the mettle to succeed. The departure of Bob was often pushed as the turning point. Bob himself was often on hand to provide a useful quote in support of this idea.</p><p>“They didn’t develop any successful products after I left there,” he told the <a href="https://www.latimes.com/archives/la-xpm-1985-08-20-fi-2173-story.html" rel="noopener noreferrer" target="_blank"><em>Los Angeles Times</em></a> in 1985 after Vector filed for Chapter 11 bankruptcy protection. “If the proper decisions had been made, it would be quite successful.”</p><p>By contrast, Harp McGovern refused to talk much about Vector for a long time after her departure. To her, Vector wasn’t just a company. It was more than that. It was something she and Ely had built from nothing into a profitable community of people.</p><p>Harp McGovern had only intended her absence from the business world to be temporary. By 1987, she was back. With Vector gone, she founded (and funded) one of the first companies attempting to develop disposable urinal funnels that would allow women to urinate standing up. Then, in partnership with her husband Pat, she launched a venture capital fund. In 1994, she became one of the original <a href="https://www.bandangels.com/" rel="noopener noreferrer" target="_blank">“Band of Angels”</a>—one of the first angel investor groups in California focused on technology and life sciences.&nbsp;</p><p>“What I really enjoy is growing the company,” Harp McGovern said when asked what drove her. “Growing people within the company, accepting the challenge of being out there, competing against other companies and making an impact.”</p><p>At first, venture capital and angel investment seemed to offer those opportunities for growth, but over time she became disillusioned with this world. Many investors were happy to take her money, but they refused to accept that she might have useful advice to offer.</p><p>“After I’d done Vector—building a company from totally nothing to fairly good size with an international distribution network, having gone through raising venture capital, having gone through taking the company public and that sort of thing—I felt I could make a great contribution to other young companies that wanted to start in business,” she said later. The reality was quite different. Most entrepreneurs don’t want all the help I thought I could bring.”</p><p>Providing funding without hands-on advice held little interest for Harp. She eventually moved away from this industry as well.</p><p>In the end, Harp McGovern’s legacy would end up being something different. In 2000, alongside her husband Pat, she gave $350 million to endow the McGovern Institute at MIT. She played an active role in establishing it as one of the foremost research institutes into the brain in the world.</p><p>Of all the figures we have explored so far in this series, and of all those we are yet to explore, Lore Harp McGovern is likely the one who has been overlooked the most. Perhaps only Harp McGovern’s friend Sandy Kurtzig runs close. While Steve Jobs and Steve Wozniak were building a computer empire in the suburbs of California, Lore Harp McGovern and Carole Ely were doing the same. As with Adam Osborne, however, the history of Silicon Valley likes to focus on its winners.&nbsp;</p><p>But the voices that are the most outspoken about the need for women to step up and beat men at their own game are often those that are the quietest when that actually happens. Harp McGovern didn’t just shatter Silicon Valley’s glass ceiling—the Ice Maiden (or “the awful bitch”) used its broken shards to carve out a place for herself, her company, and her employees along the way. All too often, her successes have been allocated to other people, while her failures have been attributed to her alone. For all these reasons, one of Silicon Valley’s true pioneers has been granted only a single <a href="https://en.wikipedia.org/wiki/Lore_Harp_McGovern" rel="noopener noreferrer" target="_blank">inaccurate paragraph</a> on Wikipedia.&nbsp;</p><p>In 2016, Harp McGovern <a href="https://www.youtube.com/watch?v=PKLmJ5kQ5pw" rel="noopener noreferrer" target="_blank">recorded an interview</a> with the Computer History Museum. “I'm delighted to do this, mainly because there were so few women in the industry at the time,” she said, when thanked for her contribution to the museum’s archive. “And also for my grandchildren to see that their grandmother actually did things that not a lot of women did in those days.”</p><p>It’s not just Harp McGovern’s grandchildren who should be aware of her achievements. Because unlike many of those who kickstarted the golden age of computing, Lore Harp McGovern, in her late seventies, is still with us today.</p><p>If you are a young founder today who finds themselves in her presence, you would do well to ask one of Silicon Valley’s last remaining original founders for her advice. If she’s prepared to offer it, then listen.</p><hr><p><em>Gareth Edwards is a digital strategist, writer, and historian. He has worked for startups and corporations in both the UK and U.S. He is an avid collector of old computers, rare books and interviews, and abandoned cats. Follow him on </em><a href="https://twitter.com/garius" rel="noopener noreferrer" target="_blank"><em>X</em></a><em>, </em><a href="https://mastodon.me.uk/@garius" rel="noopener noreferrer" target="_blank"><em>Mastodon</em></a><em>, and </em><a href="https://bsky.app/profile/garius.bsky.social" rel="noopener noreferrer" target="_blank"><em>BlueSky</em></a><em>.</em></p><p><em>To read more essays like this, subscribe to </em><a href="https://every.to/subscribe" rel="noopener noreferrer" target="_blank"><em>Every</em></a><em>, and follow us on X at </em><a href="http://twitter.com/every" rel="noopener noreferrer" target="_blank"><em>@every</em></a><em> and on </em><a href="https://www.linkedin.com/company/everyinc/" rel="noopener noreferrer" target="_blank"><em>LinkedIn</em></a>.</p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Reverst: Reverse Tunnels in Go over HTTP/3 and QUIC (172 pts)]]></title>
            <link>https://github.com/flipt-io/reverst</link>
            <guid>39970501</guid>
            <pubDate>Mon, 08 Apr 2024 15:04:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/flipt-io/reverst">https://github.com/flipt-io/reverst</a>, See on <a href="https://news.ycombinator.com/item?id=39970501">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">reverst: HTTP reverse tunnels over QUIC</h2><a id="user-content-reverst-http-reverse-tunnels-over-quic" aria-label="Permalink: reverst: HTTP reverse tunnels over QUIC" href="#reverst-http-reverse-tunnels-over-quic"></a></p>
<blockquote>
<p dir="auto">Ti esrever dna ti pilf nwod gnaht ym tup i</p>
</blockquote>
<p dir="auto">Reverst is a (load-balanced) reverse-tunnel server and Go server-client library built on QUIC and HTTP/3.</p>
<ul dir="auto">
<li>Go Powered: Written in Go using <a href="https://github.com/quic-go/quic-go">quic-go</a></li>
<li>Compatible: The Go <code>client</code> package is built on <code>net/http</code> standard-library abstractions</li>
<li>Load-balanced: Run multiple instances of your services behind the same tunnel</li>
<li>Performant: Built on top of QUIC and HTTP/3</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Use-case</h2><a id="user-content-use-case" aria-label="Permalink: Use-case" href="#use-case"></a></p>
<p dir="auto">Reverst is for exposing services on the public internet from within restrictive networks (e.g. behind NAT gateways).
The tunnel binary is intended to be deployed on the public internet.
Client servers then dial out to the tunnels and register themselves on target tunnel groups.
A tunnel group is a load-balanced set of client-servers, which is exposed through the reverst tunnel HTTP interface.</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/flipt-io/reverst/blob/main/diagram.png"><img width="800" height="1199" src="https://github.com/flipt-io/reverst/raw/main/diagram.png" alt="Tunnel Lifecycle"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><code>reverst</code> tunnel server</h3><a id="user-content-reverst-tunnel-server" aria-label="Permalink: reverst tunnel server" href="#reverst-tunnel-server"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="➜  reverst -h
COMMAND
  reverst

USAGE
  reverst [FLAGS]

FLAGS
  -l, --log LEVEL                    debug, info, warn or error (default: INFO)
  -a, --tunnel-address STRING        address for accepting tunnelling quic connections (default: 127.0.0.1:7171)
  -s, --http-address STRING          address for serving HTTP requests (default: 127.0.0.1:8181)
  -g, --tunnel-groups STRING         path to tunnel groups configuration file (default: groups.yml)
  -n, --server-name STRING           server name used to identify tunnel via TLS (required)
  -k, --private-key-path STRING      path to TLS private key PEM file (required)
  -c, --certificate-path STRING      path to TLS certificate PEM file (required)
      --max-idle-timeout DURATION    maximum time a connection can be idle (default: 1m0s)
      --keep-alive-period DURATION   period between keep-alive events (default: 30s)"><pre>➜  <span>reverst -h</span>
<span>COMMAND</span>
<span>  reverst</span>

<span>USAGE</span>
<span>  reverst [FLAGS]</span>

<span>FLAGS</span>
<span>  -l, --log LEVEL                    debug, info, warn or error (default: INFO)</span>
<span>  -a, --tunnel-address STRING        address for accepting tunnelling quic connections (default: 127.0.0.1:7171)</span>
<span>  -s, --http-address STRING          address for serving HTTP requests (default: 127.0.0.1:8181)</span>
<span>  -g, --tunnel-groups STRING         path to tunnel groups configuration file (default: groups.yml)</span>
<span>  -n, --server-name STRING           server name used to identify tunnel via TLS (required)</span>
<span>  -k, --private-key-path STRING      path to TLS private key PEM file (required)</span>
<span>  -c, --certificate-path STRING      path to TLS certificate PEM file (required)</span>
<span>      --max-idle-timeout DURATION    maximum time a connection can be idle (default: 1m0s)</span>
<span>      --keep-alive-period DURATION   period between keep-alive events (default: 30s)</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Client</h2><a id="user-content-client" aria-label="Permalink: Client" href="#client"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Building</h3><a id="user-content-building" aria-label="Permalink: Building" href="#building"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Usage</h3><a id="user-content-usage-1" aria-label="Permalink: Usage" href="#usage-1"></a></p>
<p dir="auto">See <a href="https://github.com/flipt-io/reverst/blob/main/client">./client</a> directory for more details.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Server</h2><a id="user-content-server" aria-label="Permalink: Server" href="#server"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Building</h3><a id="user-content-building-1" aria-label="Permalink: Building" href="#building-1"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Testing</h3><a id="user-content-testing" aria-label="Permalink: Testing" href="#testing"></a></p>
<p dir="auto">Reverst uses Dagger to setup and run an integration test suite.</p>
<div dir="auto" data-snippet-clipboard-copy-content="dagger call test --source=."><pre><span>dagger call test --source=.</span></pre></div>
<p dir="auto">The test suite sets up a tunnel, registers a server-client to the tunnel and then requests the service through the tunnels HTTP interface.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Running</h3><a id="user-content-running" aria-label="Permalink: Running" href="#running"></a></p>
<p dir="auto">The following walks through experimenting with the <a href="https://github.com/flipt-io/reverst/blob/main/examples/simple">./examples/simple</a> server example.
This directory contains a number of things needed to stand up reverst and a registering client server:</p>
<ul dir="auto">
<li>The example service in <a href="https://github.com/flipt-io/reverst/blob/main/examples/simple/main.go">./examples/simple/main.go</a>.</li>
<li>Simple self-signed TLS private key and certificate.</li>
<li>A tunnel-groups file for routing decisions.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Running <code>reverst</code></h4><a id="user-content-running-reverst" aria-label="Permalink: Running reverst" href="#running-reverst"></a></p>
<p dir="auto">The following runs the tunnel server with:</p>
<ul dir="auto">
<li>The QUIC tunnel listener on <code>127.0.0.1:7171</code></li>
<li>The HTTP serving listener on <code>127.0.0.1:8181</code></li>
<li>Logging with <code>debug</code> level</li>
<li>A TLS server-name of <code>flipt.dev.local</code></li>
<li>Some tunnel group definitions with a single tunnel group
<ul dir="auto">
<li>The group has the name <code>flipt.dev.local</code></li>
<li>The group is reachable under the same host name</li>
<li>The group requires basic username and password authentication</li>
</ul>
</li>
<li>The dummy TLS certificates</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="go run ./cmd/reverst/... -l debug \
    -n flipt.dev.local \
    -g examples/simple/group.yml \
    -k examples/simple/server.key \
    -c examples/simple/server.crt"><pre><span>go run ./cmd/reverst/... -l debug \</span>
<span>    -n flipt.dev.local \</span>
<span>    -g examples/simple/group.yml \</span>
<span>    -k examples/simple/server.key \</span>
<span>    -c examples/simple/server.crt</span></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Running example server</h4><a id="user-content-running-example-server" aria-label="Permalink: Running example server" href="#running-example-server"></a></p>
<p dir="auto">Now you can run the example server.
This is a simple HTTP server that responds to all requests with <code>PONG</code>.
It is setup to use the server client to register as a listener on the tunnel.</p>
<div dir="auto" data-snippet-clipboard-copy-content="go run ./examples/simple/main.go --username user --password pass"><pre><span>go run ./examples/simple/main.go --username user --password pass</span></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Making requests</h4><a id="user-content-making-requests" aria-label="Permalink: Making requests" href="#making-requests"></a></p>
<p dir="auto">You can now curl the tunnel and requests will be forward all the way through to the example server.
Be sure to include the <code>Host</code> header, as this is used to route requests to the respective tunnel-group.</p>
<div data-snippet-clipboard-copy-content="curl -H 'Host: flipt.dev.local' 127.0.0.1:8181/fo"><pre lang="curl"><code>curl -H 'Host: flipt.dev.local' 127.0.0.1:8181/fo
</code></pre></div>
</article></div></div>]]></description>
        </item>
    </channel>
</rss>