<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 03 Feb 2025 20:30:14 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Httptap: View HTTP/HTTPS requests made by any Linux program (201 pts)]]></title>
            <link>https://github.com/monasticacademy/httptap</link>
            <guid>42919909</guid>
            <pubDate>Mon, 03 Feb 2025 16:28:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/monasticacademy/httptap">https://github.com/monasticacademy/httptap</a>, See on <a href="https://news.ycombinator.com/item?id=42919909">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto"><h2 tabindex="-1" dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/monasticacademy/httptap/blob/main/docs/readme-header.webp"><img src="https://github.com/monasticacademy/httptap/raw/main/docs/readme-header.webp" alt="Monastic Academy" height="450px"></a>
  <br>
  httptap
  <br>
</h2><a id="user-content-------httptap--" aria-label="Permalink: 
  httptap
  " href="#------httptap--"></a></div>
<p dir="auto">
  <a href="https://pkg.go.dev/github.com/monasticacademy/httptap" rel="nofollow"><img src="https://camo.githubusercontent.com/8a31945592ac771f5621c4a01a095433ca18c4490d85590699dcdc7b7d5a96a0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f676f2e6465762d7265666572656e63652d3030376439633f6c6f676f3d676f266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" alt="Documentation" data-canonical-src="https://img.shields.io/badge/go.dev-reference-007d9c?logo=go&amp;logoColor=white&amp;style=flat-square"></a>
  <a href="https://github.com/monasticacademy/httptap/actions"><img src="https://github.com/monasticacademy/httptap/workflows/Test/badge.svg" alt="Build Status"></a>
</p>

<p dir="auto">View the HTTP and HTTPS requests made by any linux program by running <code>httptap -- &lt;command&gt;</code>. For example, the following runs curl on "monasticacademy.org", which results in an HTTP status of 308 (Redirect):</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ httptap -- curl https://monasticacademy.org
---> GET https://monasticacademy.org/
<--- 308 https://monasticacademy.org/ (15 bytes)"><pre>$ httptap -- curl https://monasticacademy.org
---<span>&gt;</span> GET https://monasticacademy.org/
<span>&lt;</span>--- 308 https://monasticacademy.org/ (15 bytes)</pre></div>
<p dir="auto">Now let's try the same thing with an HTTP request from python. This time we see that python follows the redirect and gets a 200 OK response:</p>
<div dir="auto" data-snippet-clipboard-copy-content="httptap -- python -c &quot;import requests; requests.get('https://monasticacademy.org')&quot;
---> GET https://monasticacademy.org/
<--- 308 https://monasticacademy.org/ (15 bytes)
---> GET https://www.monasticacademy.org/
<--- 200 https://www.monasticacademy.org/ (5796 bytes)"><pre>httptap -- python -c <span><span>"</span>import requests; requests.get('https://monasticacademy.org')<span>"</span></span>
---<span>&gt;</span> GET https://monasticacademy.org/
<span>&lt;</span>--- 308 https://monasticacademy.org/ (15 bytes)
---<span>&gt;</span> GET https://www.monasticacademy.org/
<span>&lt;</span>--- 200 https://www.monasticacademy.org/ (5796 bytes)</pre></div>
<p dir="auto">To run <code>httptap</code> you do not need to be the root user. You do not need to set up any kind of daemon or make any system-wide changes to your system. It will not create any iptables rules or change your routing table, and generally will not affect any other processes running on the same system. The <code>httptap</code> executable is a static Go binary that runs without dependencies.</p>
<p dir="auto">Httptap only runs on linux at present. It makes use of linux-specific system calls -- in particular network namespaces -- that will unfortunately make it very difficult to port to other operating systems. If you know how httptap could be ported to other operating systems then please get in touch!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Install pre-built binary</h2><a id="user-content-install-pre-built-binary" aria-label="Permalink: Install pre-built binary" href="#install-pre-built-binary"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="curl -L https://github.com/monasticacademy/httptap/releases/download/v0.0.5/httptap_linux_x86_64.tar.gz | tar xzf -"><pre>curl -L https://github.com/monasticacademy/httptap/releases/download/v0.0.5/httptap_linux_x86_64.tar.gz <span>|</span> tar xzf -</pre></div>
<p dir="auto">For all versions and CPU architectures see the <a href="https://github.com/monasticacademy/httptap/releases/">releases page</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Install with Go</h2><a id="user-content-install-with-go" aria-label="Permalink: Install with Go" href="#install-with-go"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="go install github.com/monasticacademy/httptap@latest"><pre>go install github.com/monasticacademy/httptap@latest</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Quickstart</h2><a id="user-content-quickstart" aria-label="Permalink: Quickstart" href="#quickstart"></a></p>
<p dir="auto">Let's run a simple test:</p>
<div dir="auto" data-snippet-clipboard-copy-content="httptap -- curl -s https://buddhismforai.sutra.co -o /dev/null
---> GET https://buddhismforai.sutra.co/
<--- 302 https://buddhismforai.sutra.co/ (117 bytes)"><pre>httptap -- curl -s https://buddhismforai.sutra.co -o /dev/null
---<span>&gt;</span> GET https://buddhismforai.sutra.co/
<span>&lt;</span>--- 302 https://buddhismforai.sutra.co/ (117 bytes)</pre></div>
<p dir="auto">What happened here is that we ran <code>curl -s https://buddhismforai.sutra.co -o /dev/null</code> and it received a 302 redirect from the server. <code>httptap</code> printed summaries of the HTTP requests and their responses. Let's see how it changes if we tell curl to follow redirects by adding <code>-L</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="httptap -- curl -sL https://buddhismforai.sutra.co -o /dev/null
---> GET https://buddhismforai.sutra.co/
<--- 302 https://buddhismforai.sutra.co/ (117 bytes)
---> GET https://buddhismforai.sutra.co/space/cbodvy/content
<--- 200 https://buddhismforai.sutra.co/space/cbodvy/content (6377 bytes)"><pre>httptap -- curl -sL https://buddhismforai.sutra.co -o /dev/null
---<span>&gt;</span> GET https://buddhismforai.sutra.co/
<span>&lt;</span>--- 302 https://buddhismforai.sutra.co/ (117 bytes)
---<span>&gt;</span> GET https://buddhismforai.sutra.co/space/cbodvy/content
<span>&lt;</span>--- 200 https://buddhismforai.sutra.co/space/cbodvy/content (6377 bytes)</pre></div>
<p dir="auto">Now we can see that after receiving the 302 redirect, curl made an additional HTTP request to the URL to which it was redirected, which is what you expect when using <code>-L</code> with curl.</p>
<p dir="auto">Let's see what HTTP endpoints the Google Cloud command line interface uses to list compute resources (this requires that you have gcloud installed and are signed in):</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ httptap -- gcloud compute instances list
---> POST https://oauth2.googleapis.com/token
<--- 200 https://oauth2.googleapis.com/token (997 bytes)
---> GET https://compute.googleapis.com/compute/v1/projects/maple-public-website/aggregated/instances?alt=json&amp;includeAllScopes=True&amp;maxResults=500&amp;returnPartialSuccess=True
<--- 200 https://compute.googleapis.com/compute/v1/projects/maple-public-website/aggregated/instances?alt=json&amp;includeAllScopes=True&amp;maxResults=500&amp;returnPartialSuccess=True (19921 bytes)
NAME       ZONE        MACHINE_TYPE  PREEMPTIBLE  INTERNAL_IP  EXTERNAL_IP     STATUS
<your cloud instances listed here>"><pre>$ httptap -- gcloud compute instances list
---<span>&gt;</span> POST https://oauth2.googleapis.com/token
<span>&lt;</span>--- 200 https://oauth2.googleapis.com/token (997 bytes)
---<span>&gt;</span> GET https://compute.googleapis.com/compute/v1/projects/maple-public-website/aggregated/instances<span>?</span>alt=json<span>&amp;</span>includeAllScopes=True<span>&amp;</span>maxResults=500<span>&amp;</span>returnPartialSuccess=True
<span>&lt;</span>--- 200 https://compute.googleapis.com/compute/v1/projects/maple-public-website/aggregated/instances<span>?</span>alt=json<span>&amp;</span>includeAllScopes=True<span>&amp;</span>maxResults=500<span>&amp;</span>returnPartialSuccess=True (19921 bytes)
NAME       ZONE        MACHINE_TYPE  PREEMPTIBLE  INTERNAL_IP  EXTERNAL_IP     STATUS
<span>&lt;</span>your cloud instances listed here<span>&gt;</span></pre></div>
<p dir="auto">What happened here is that we ran <code>gcloud compute instances list</code>, which lists the compute instances that the signed-in user has on Google Cloud. The bottom two lines of output were printed by <code>gcloud</code>; the rest were printed by <code>httptap</code> and show what HTTP requests <code>gcloud</code> used to get the information it printed.</p>
<p dir="auto">Let's see what HTTP endpoints kubectl uses in a "get all" (this requires that you have kubectl installed and are authenticated to a cluster):</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ httptap --https 443 6443 -- kubectl get all --insecure-skip-tls-verify
---> GET https://cluster:6443/api/v1/namespaces/default/pods?limit=500
<--- 200 https://cluster:6443/api/v1/namespaces/default/pods?limit=500 (38345 bytes)
---> GET https://cluster:6443/api/v1/namespaces/default/replicationcontrollers?limit=500
<--- 200 https://cluster:6443/api/v1/namespaces/default/replicationcontrollers?limit=500 (2509 bytes)
---> GET https://cluster:6443/api/v1/namespaces/default/services?limit=500
<--- 200 https://cluster:6443/api/v1/namespaces/default/services?limit=500 (5586 bytes)
---> GET https://cluster:6443/apis/apps/v1/namespaces/default/daemonsets?limit=500
<--- 200 https://cluster:6443/apis/apps/v1/namespaces/default/daemonsets?limit=500 (3052 bytes)
---> GET https://cluster:6443/apis/apps/v1/namespaces/default/deployments?limit=500
<--- 200 https://cluster:6443/apis/apps/v1/namespaces/default/deployments?limit=500 (7438 bytes)
---> GET https://cluster:6443/apis/apps/v1/namespaces/default/replicasets?limit=500
<--- 200 https://cluster:6443/apis/apps/v1/namespaces/default/replicasets?limit=500 (47211 bytes)
---> GET https://cluster:6443/apis/apps/v1/namespaces/default/statefulsets?limit=500
<--- 200 https://cluster:6443/apis/apps/v1/namespaces/default/statefulsets?limit=500 (1416 bytes)
---> GET https://cluster:6443/apis/autoscaling/v2/namespaces/default/horizontalpodautoscalers?limit=500
<--- 200 https://cluster:6443/apis/autoscaling/v2/namespaces/default/horizontalpodautoscalers?limit=500 (2668 bytes)
---> GET https://cluster:6443/apis/batch/v1/namespaces/default/cronjobs?limit=500
<--- 200 https://cluster:6443/apis/batch/v1/namespaces/default/cronjobs?limit=500 (3134 bytes)
---> GET https://cluster:6443/apis/batch/v1/namespaces/default/jobs?limit=500
<--- 200 https://cluster:6443/apis/batch/v1/namespaces/default/jobs?limit=500 (2052 bytes)
<ordinary kubectl output here>"><pre>$ httptap --https 443 6443 -- kubectl get all --insecure-skip-tls-verify
---<span>&gt;</span> GET https://cluster:6443/api/v1/namespaces/default/pods<span>?</span>limit=500
<span>&lt;</span>--- 200 https://cluster:6443/api/v1/namespaces/default/pods<span>?</span>limit=500 (38345 bytes)
---<span>&gt;</span> GET https://cluster:6443/api/v1/namespaces/default/replicationcontrollers<span>?</span>limit=500
<span>&lt;</span>--- 200 https://cluster:6443/api/v1/namespaces/default/replicationcontrollers<span>?</span>limit=500 (2509 bytes)
---<span>&gt;</span> GET https://cluster:6443/api/v1/namespaces/default/services<span>?</span>limit=500
<span>&lt;</span>--- 200 https://cluster:6443/api/v1/namespaces/default/services<span>?</span>limit=500 (5586 bytes)
---<span>&gt;</span> GET https://cluster:6443/apis/apps/v1/namespaces/default/daemonsets<span>?</span>limit=500
<span>&lt;</span>--- 200 https://cluster:6443/apis/apps/v1/namespaces/default/daemonsets<span>?</span>limit=500 (3052 bytes)
---<span>&gt;</span> GET https://cluster:6443/apis/apps/v1/namespaces/default/deployments<span>?</span>limit=500
<span>&lt;</span>--- 200 https://cluster:6443/apis/apps/v1/namespaces/default/deployments<span>?</span>limit=500 (7438 bytes)
---<span>&gt;</span> GET https://cluster:6443/apis/apps/v1/namespaces/default/replicasets<span>?</span>limit=500
<span>&lt;</span>--- 200 https://cluster:6443/apis/apps/v1/namespaces/default/replicasets<span>?</span>limit=500 (47211 bytes)
---<span>&gt;</span> GET https://cluster:6443/apis/apps/v1/namespaces/default/statefulsets<span>?</span>limit=500
<span>&lt;</span>--- 200 https://cluster:6443/apis/apps/v1/namespaces/default/statefulsets<span>?</span>limit=500 (1416 bytes)
---<span>&gt;</span> GET https://cluster:6443/apis/autoscaling/v2/namespaces/default/horizontalpodautoscalers<span>?</span>limit=500
<span>&lt;</span>--- 200 https://cluster:6443/apis/autoscaling/v2/namespaces/default/horizontalpodautoscalers<span>?</span>limit=500 (2668 bytes)
---<span>&gt;</span> GET https://cluster:6443/apis/batch/v1/namespaces/default/cronjobs<span>?</span>limit=500
<span>&lt;</span>--- 200 https://cluster:6443/apis/batch/v1/namespaces/default/cronjobs<span>?</span>limit=500 (3134 bytes)
---<span>&gt;</span> GET https://cluster:6443/apis/batch/v1/namespaces/default/jobs<span>?</span>limit=500
<span>&lt;</span>--- 200 https://cluster:6443/apis/batch/v1/namespaces/default/jobs<span>?</span>limit=500 (2052 bytes)
<span>&lt;</span>ordinary kubectl output here<span>&gt;</span></pre></div>
<p dir="auto">In the above, <code>--insecure-skip-tls-verify</code> is necessary because kubectl doesn't use the httptap-generated certificate authority, and <code>--https 443 6443</code> says to treat TCP connections on ports 443 and 6443 as HTTPS connections, which is needed because my cluter's API endpoint uses port 6443.</p>
<p dir="auto">Let's see how DNS-over-HTTP works when you use <code>--doh-url</code> with curl:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ httptap -- curl -sL --doh-url https://cloudflare-dns.com/dns-query https://buddhismforai.sutra.co -o /dev/null
---> POST https://cloudflare-dns.com/dns-query
<--- 200 https://cloudflare-dns.com/dns-query (149 bytes)
---> POST https://cloudflare-dns.com/dns-query
<--- 200 https://cloudflare-dns.com/dns-query (150 bytes)
---> GET https://buddhismforai.sutra.co/
<--- 302 https://buddhismforai.sutra.co/ (117 bytes)
---> GET https://buddhismforai.sutra.co/space/cbodvy/content
<--- 200 https://buddhismforai.sutra.co/space/cbodvy/content (6377 bytes)"><pre>$ httptap -- curl -sL --doh-url https://cloudflare-dns.com/dns-query https://buddhismforai.sutra.co -o /dev/null
---<span>&gt;</span> POST https://cloudflare-dns.com/dns-query
<span>&lt;</span>--- 200 https://cloudflare-dns.com/dns-query (149 bytes)
---<span>&gt;</span> POST https://cloudflare-dns.com/dns-query
<span>&lt;</span>--- 200 https://cloudflare-dns.com/dns-query (150 bytes)
---<span>&gt;</span> GET https://buddhismforai.sutra.co/
<span>&lt;</span>--- 302 https://buddhismforai.sutra.co/ (117 bytes)
---<span>&gt;</span> GET https://buddhismforai.sutra.co/space/cbodvy/content
<span>&lt;</span>--- 200 https://buddhismforai.sutra.co/space/cbodvy/content (6377 bytes)</pre></div>
<p dir="auto">What happened here is that we told <code>curl</code> to request the url "<a href="https://buddhismforai.sutra.co/" rel="nofollow">https://buddhismforai.sutra.co</a>", using the cloudflare DNS-over-HTTP service at <code>cloudflare-dns.com</code>. In the output we see that <code>curl</code> made 4 HTTP requests in total; the first two were DNS lookups, and then the second two were the ordinary HTTP requests for buddhismforai.sutra.co.</p>
<p dir="auto">Let's print the contents of the DNS-over-HTTP payloads:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ httptap --head --body -- curl -sL --doh-url https://cloudflare-dns.com/dns-query https://buddhismforai.sutra.co -o /dev/null
---> POST https://cloudflare-dns.com/dns-query
> Accept: */*
> Content-Type: application/dns-message
> Content-Length: 40
buddhismforaisutraco
<--- 200 https://cloudflare-dns.com/dns-query (149 bytes)
< Alt-Svc: h3=&quot;:443&quot;; ma=86400
< Server: cloudflare
< Date: Tue, 24 Dec 2024 18:13:12 GMT
< Content-Type: application/dns-message
< Access-Control-Allow-Origin: *
< Content-Length: 149
< Cf-Ray: 8f7290631e334211-EWR
buddhismforaisutraco�
��w�4+#G�.           <wildcardsutraco	herokudnscom�4+!�=�4+
..."><pre>$ httptap --head --body -- curl -sL --doh-url https://cloudflare-dns.com/dns-query https://buddhismforai.sutra.co -o /dev/null
---<span>&gt;</span> POST https://cloudflare-dns.com/dns-query
<span>&gt;</span> Accept: <span>*</span>/<span>*</span>
<span>&gt;</span> Content-Type: application/dns-message
<span>&gt;</span> Content-Length: 40
buddhismforaisutraco
<span>&lt;</span>--- 200 https://cloudflare-dns.com/dns-query (149 bytes)
<span>&lt;</span> Alt-Svc: h3=<span><span>"</span>:443<span>"</span></span><span>;</span> ma=86400
<span>&lt;</span> Server: cloudflare
<span>&lt;</span> Date: Tue, 24 Dec 2024 18:13:12 GMT
<span>&lt;</span> Content-Type: application/dns-message
<span>&lt;</span> Access-Control-Allow-Origin: <span>*</span>
<span>&lt;</span> Content-Length: 149
<span>&lt;</span> Cf-Ray: 8f7290631e334211-EWR
buddhismforaisutraco�
��w�4+<span><span>#</span>G�.           &lt;wildcardsutraco	herokudnscom�4+!�=�4+</span>
...</pre></div>
<p dir="auto">Here the <code>--head</code> option tells httptap to print the HTTP headers, and <code>--body</code> tells it to print the raw HTTP payloads. To keep it short I'm showing just the first request/response pair.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">HAR output</h2><a id="user-content-har-output" aria-label="Permalink: HAR output" href="#har-output"></a></p>
<p dir="auto">You can dump the HTTP requests and responses to a HAR file like this:</p>
<div data-snippet-clipboard-copy-content="$ httptap --dump-har out.har -- curl -Lso /dev/null https://monasticacademy.org"><pre><code>$ httptap --dump-har out.har -- curl -Lso /dev/null https://monasticacademy.org
</code></pre></div>
<p dir="auto">There are many HAR viewers out there that can visualize this dump file. For example here is how the above looks in the <a href="https://toolbox.googleapps.com/apps/har_analyzer/" rel="nofollow">Google HAR Analyzer</a>:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/monasticacademy/httptap/blob/main/docs/har-screenshot.png"><img src="https://github.com/monasticacademy/httptap/raw/main/docs/har-screenshot.png" alt="HAR Analyzer Screenshot"></a></p>
<p dir="auto">Again, what you're looking at here is one HTTP request to <a href="https://monasticacademy.org/" rel="nofollow">https://monasticacademy.org</a> that returns a 308 Redirect, followed by a second HTTP request to <a href="https://www.monasticacademy.org/" rel="nofollow">https://www.monasticacademy.org</a> that return a 200 OK.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How it works</h2><a id="user-content-how-it-works" aria-label="Permalink: How it works" href="#how-it-works"></a></p>
<p dir="auto">When you run <code>httptap -- &lt;command&gt;</code>, httptap runs <code>&lt;command&gt;</code> in an isolated network namespace, injecting a certificate authority created on-the-fly in order to decrypt HTTPS traffic. Here is the process in detail:</p>
<p dir="auto">In linux, there is a kernel API for creating and configuring network interfaces. Conventionally, a network interface would be a physical ethernet or WiFi controller in your computer, but it is possible to create a special kind of network interface called a TUN device. A TUN device shows up to the system in the way that any network interface shows up, but any traffic written to it will be delivered to a file descriptor held by the process that created it. Httptap creates a TUN device and runs the subprocess in an environment in which all network traffic is routed through that device.</p>
<p dir="auto">There is also a kernel API in linux for creating network namespaces. A network namespace is a list of network interfaces and routing rules. When a process is started in linux, it can be run in a specified network namespace. By default, processes run in a root network namespace that we do not want to make chagnes to because doing so would affect all network traffic on the system. Instead, we create a network namespace in which there are only two network interfaces: a loopback device (127.0.0.1) and a TUN device that delivers traffic to us. Then we run the subprocess in that namespace.</p>
<p dir="auto">The traffic from the network device is delivered to us as raw IP packets. We must parse the IP packets as well as the inner TCP and UDP packets, and write raw IP packets back to the subprocess. This requires a software implementation of the TCP/IP protocol, which is by far the most difficult part of httptap. The TCP/IP implementation in httptap is missing many aspects of the full TCP protocol, but still works reasonably well for its purpose.</p>
<p dir="auto">Suppose the subprocess makes an HTTP request to <a href="http://www.example.com/" rel="nofollow">www.example.com</a>. The first thing we receive is a TCP SYN packet addressed to 93.184.215.14 (the current IP address of example.com). We respond with a SYN+ACK packet with source address 93.184.215.14, though in truth the packet did not come from 93.184.215.14, but from us. Separately, we establish our own TCP connection to 93.184.215.14 using the ordinary sockets API in the linux kernel. When the subprocess sends data to 93.184.215.14 we relay it over our separate TCP connection, and vice versa for return data. This is a traditional transparent TCP proxy, and in this way we can view all data flowing to and from the subprocess, though we won't be able to decrypt HTTPS traffic without a bit more work.</p>
<p dir="auto">When a client makes an HTTPS request, it asks the server for evidence that it is who it says it is. If the server has a certificate signed by a certificate authority, it can use that certificate to prove that it is who it says it is. The client will only accept such a certificate if it trusts the certificate authority that signed the certificate. Operating systems, web browsers, and many other pieces of software come with a list of a few hundred certificate authorities that they trust. Many of these pieces of software have ways for users to add additional certificate authorities to this list. We make use of this.</p>
<p dir="auto">When httptap starts, it creates a certificate authority (actually a private key plus a corresponding x509 certificate), writes it to a file on the filesystem visible only to the subprocess, and sets a few environment variables -- again only visible to the subprocess being run -- that add this certificate authority to the list of trusted certificate authorities. Since the subprocess trusts this certificate authority, and httptap holds the private key for the certificate authority, it can prove to the subprocess that it is the server which which the subprocess was trying to communicate. In this way we can read the plaintext HTTP requests.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How it was made</h2><a id="user-content-how-it-was-made" aria-label="Permalink: How it was made" href="#how-it-was-made"></a></p>
<p dir="auto">Httptap is part of an experiment in developing technology in the context of Buddhist monasticism. It was developed at the <a href="https://www.monasticacademy.org/" rel="nofollow">Monastic Academy</a> in Vermont in the US. We believe that a monastic schedule, and the practice of the Buddhist spiritual path more generally, provide ideal conditions for technological development. The way we have set things up is that we live and practice together on a bit over a hundred acres of land. In the mornings and evenings we chant and meditate together, and for about one week out of every month we run and participate in a meditation retreat. The rest of the time we work together on everything from caring for the land, maintaining the buildings, cooking, cleaning, planning, fundraising, and for the past few years developing software together. This project is a demonstration of what is possible on the software side, but of course to see the full product of our work you should come visit us.</p>
<p dir="auto">If you're interested, we run an <a href="https://www.monasticacademy.org/ai-fellowship" rel="nofollow">AI fellowship program</a>, which is a funded month-to-month program where you live on the land, participate in the schedule, and do your own work during the day. We also have a 3-month <a href="https://www.monasticacademy.org/train" rel="nofollow">monastic training program</a>, which can lead into our long-term residential training.</p>
<p dir="auto">For the past few years we have been recording a lecture series called <a href="https://buddhismforai.sutra.co/" rel="nofollow">Buddhism for AI</a>. It's about our efforts to design a religion (yes, a religion) based on Buddhism for consumption directly by AI systems. We actually feel this is very important work given the world situation.</p>
<p dir="auto">Finally, our head teacher <a href="https://www.monasticacademy.org/teacher" rel="nofollow">Soryu Forall</a> published a book a few years back called <a href="https://buddhism.net/buddhism-for-all-book/" rel="nofollow">Buddhism For All</a>. We're working on a sequel at the moment.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/monasticacademy/httptap/blob/main/docs/group.webp"><img src="https://github.com/monasticacademy/httptap/raw/main/docs/group.webp" alt="MAPLE Group Photo"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Caveats</h2><a id="user-content-caveats" aria-label="Permalink: Caveats" href="#caveats"></a></p>
<ul dir="auto">
<li>The process cannot listen for incoming network connections</li>
<li>You need access to <code>/dev/net/tun</code></li>
<li>All ICMP echo requests will be echoed without sending any ICMP packets out to the real network</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Donations</h2><a id="user-content-donations" aria-label="Permalink: Donations" href="#donations"></a></p>
<p dir="auto">You can support <a href="https://github.com/sponsors/alexflint">me personally through github sponsors</a>, or (my preference if it's an option for you) <a href="https://www.monasticacademy.org/donate" rel="nofollow">the community I live in through our donate page</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Who is hiring? (February 2025) (242 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=42919502</link>
            <guid>42919502</guid>
            <pubDate>Mon, 03 Feb 2025 16:00:43 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=42919502">Hacker News</a></p>
Couldn't get https://news.ycombinator.com/item?id=42919502: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I convert videos to printed flipbooks for living (227 pts)]]></title>
            <link>https://www.videotoflip.com/</link>
            <guid>42918902</guid>
            <pubDate>Mon, 03 Feb 2025 15:09:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.videotoflip.com/">https://www.videotoflip.com/</a>, See on <a href="https://news.ycombinator.com/item?id=42918902">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main"><div><h2><span> <!-- -->videos</span><br><span> <!-- -->flipbooks!</span></h2><p>Make your favorite videos into real books you can flip through. Perfect for gifts or keeping memories.</p></div><section><h2>Create your flipbook</h2><ul><li><article><div><p><img alt="" loading="lazy" width="50" height="50" decoding="async" data-nimg="1" src="https://www.videotoflip.com/icons/upload.svg"></p><h3>Upload Your Video</h3></div><p>Select a video file from your device.<br>Supported formats: MP4, AVI, MOV, and more. Horizontal videos work best.</p></article></li><li><article><div><p><img alt="" loading="lazy" width="50" height="50" decoding="async" data-nimg="1" src="https://www.videotoflip.com/icons/settings.svg"></p><h3>Customize Your Flipbook</h3></div><p>Choose a premium cover color to match your style and a nice touch.</p></article></li><li><article><div><p><img alt="" loading="lazy" width="50" height="50" decoding="async" data-nimg="1" src="https://www.videotoflip.com/icons/eye.svg"></p><h3>Live Preview</h3></div><p>See your flipbook come to life with our real-time preview tool. You'll see a preview before ordering.</p></article></li><li><article><div><p><img alt="" loading="lazy" width="50" height="50" decoding="async" data-nimg="1" src="https://www.videotoflip.com/icons/cheque.svg"></p><h3>Order Your Flipbook</h3></div><div><p>Love your flipbook? Order a high-quality printed version to keep or gift to someone special.</p></div></article></li></ul></section><section><h2>Perfect gift for any occasion</h2><div><video src="https://www.videotoflip.com/video/i-love-you.mp4" playsinline="" autoplay="" muted="" loop=""></video><div><p><img alt="" loading="lazy" width="40" height="40" decoding="async" data-nimg="1" src="https://www.videotoflip.com/icons/gift-card.svg"></p><h3>Say 'I love you!' with a flipbook</h3><p>Create a unique flipbook gift for your loved ones with your favorite video.</p></div><div><p><img alt="" loading="lazy" width="40" height="40" decoding="async" data-nimg="1" src="https://www.videotoflip.com/icons/wedding-gift.svg"></p><h3>Wedding Favors</h3><p>Make your special day even more memorable by giving your guests unique, custom flipbooks as keepsakes.</p></div><video src="https://www.videotoflip.com/video/couple-wedding.mp4" playsinline="" autoplay="" muted="" loop=""></video><video src="https://www.videotoflip.com/video/prev-3.mp4" playsinline="" autoplay="" muted="" loop=""></video><div><p><img alt="" loading="lazy" width="40" height="40" decoding="async" data-nimg="1" src="https://www.videotoflip.com/icons/confetti.svg"></p><h3>Event Souvenirs</h3><p>Whether it's a conference, trade show, or any large gathering, our flipbooks make perfect souvenirs that attendees will cherish.</p></div></div></section><div><h2>Flipbook details</h2><div><p>Our flipbooks are crafted with care, ensuring high-quality prints and durable construction. Here's what you need to know:</p><ul><li><p><strong>Size</strong><span>10.5cm x 5cm x 1cm (4.53'' x 1.97'' x 0.39'')</span></p><p>Compact and easy to carry.</p></li><li><p><strong>Materials</strong><span>Paper</span></p><p>Made with high-quality paper and a sturdy binding.</p></li><li><p><strong>Sheet Count</strong><span>72 pages</span></p><p>Each page represents a video frame.</p></li><li><p><strong>Customization</strong><span>Many cover colors available</span></p><p>Choose a premium cover color to match your style.</p></li><li><p><strong>Print Quality</strong><span></span></p><p>Crisp and vibrant prints that bring your video to life.</p></li></ul><p>Each flipbook is a unique reflection of your video, providing a fun and interactive way to relive your memories.</p></div></div><section><h2>What our customers say</h2><ul><li><article><p>“<!-- -->I ordered 30 flipbooks for my wedding, and it was a huge hit! The quality is amazing, and the process was so easy. Guests loved them!<!-- -->”</p><p>John D.</p></article></li><li><article><p>“<!-- -->The preview feature is fantastic. I loved being able to see my flipbook before ordering.<!-- -->”</p><p>Sarah L.</p></article></li><li><article><p>“<!-- -->Great product and excellent customer service. Highly recommend!<!-- -->”</p><p>Mike R.</p></article></li></ul></section><section><p><h3>from social media</h3></p></section><section><div><h2>Order in bulk</h2><p>Looking to order flipbooks in bulk for a corporate event, wedding, or another special occasion? We've got you covered!</p><ul><li><strong>Discounted Pricing</strong>Enjoy significant savings on large orders, making it a cost-effective option for any event.</li><li><strong>Custom Branding</strong>Add your company logo or event branding to the cover, giving your flipbooks a personalized touch that stands out.</li><li><strong>Fast Turnaround</strong>We understand the importance of meeting deadlines. Our team ensures quick and efficient processing to get your flipbooks ready on time.</li></ul></div><div><div><p><img alt="" loading="lazy" width="96" height="96" decoding="async" data-nimg="1" src="https://www.videotoflip.com/icons/buy.svg"></p><h3>Ready to Order?</h3></div><div><p>Contact us to discuss your bulk order needs and receive a customized quote. We're here to help you create the perfect flipbooks for your event!</p><p><a href="mailto:support@videotoflip.com">Contact Us for Bulk Orders</a></p></div></div></section><section><ul><li><h4>General Questions</h4><ul><li><details><summary>What is a flipbook?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>A flipbook is a small book with a series of images that, when flipped quickly, create the illusion of motion—similar to an animation. We turn your videos into fun, interactive flipbooks.</p></details></li><li><details><summary>How do I create a flipbook?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>Creating a flipbook is easy! Simply upload your video or paste a URL, customize the duration and cover design, and preview your flipbook in real time. You can then download a digital mockup for free or order a printed version.</p></details></li><li><details><summary>What video formats are supported?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>We support all standard video formats, including MP4, AVI, and MOV. The size limit is 100 MB, and the duration limit is up to 30 seconds. If you encounter any issues, feel free to contact our support team.</p></details></li><li><details><summary>What are the dimensions of the flipbook?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>10.5cm x 5cm x 1cm (4.5'' x 2'' x 0.5'')</p></details></li><li><details><summary>Can I create a flipbook on my mobile device?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>Yes, our online flipbook maker is mobile-friendly and can be accessed from any device with an internet connection.</p></details></li></ul></li><li><h4>Ordering and Shipping</h4><ul><li><details><summary>How much does a flipbook cost?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>Flipbook prices depend on the type you choose. Standard flipbooks start at $25, while premium versions with custom cover colors are $28 ($25 + $3 for the cover upgrade).</p></details></li><li><details><summary>How long does it take to receive my flipbook?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>Production time is typically 1-4 business days, depending on the season (longer during holidays). Free shipping takes about 14 business days, while DHL express shipping delivers in around 4 days.</p></details></li><li><details><summary>Do you offer international shipping?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>Yes, we offer flat-rate free shipping worldwide—even to Antarctica! 😉 Delivery times depend on your location and chosen shipping method, with faster options like DHL available.</p></details></li><li><details><summary>Does free shipping include tracking information?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>Free standard shipping does not include tracking information. If you'd like to track your order, consider upgrading to express shipping, which includes tracking details for your convenience.</p></details></li><li><details><summary>What happens if I enter the wrong shipping address?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>Please double-check your address during checkout. If you notice an error after placing your order, contact us immediately. Once the order is shipped, we cannot modify the address. Orders sent to incorrect addresses cannot be refunded or replaced.</p></details></li><li><details><summary>What is your return policy?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>We offer a no-questions-asked 15-day money-back guarantee. If you're not happy with your flipbook, just contact our support team within 15 days, and we'll arrange a return or exchange.</p></details></li></ul></li><li><h4>Bulk Orders</h4><ul><li><details><summary>Can I order flipbooks in bulk for an event?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>Yes, we offer bulk ordering options for corporate events, weddings, and other special occasions. Bulk orders come with discounted pricing and custom branding options.</p></details></li><li><details><summary>How do I place a bulk order?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>To place a bulk order, please visit our Bulk Orders section and fill out the contact form. Our team will get in touch with you to discuss your needs and provide a customized quote.</p></details></li><li><details><summary>What is the turnaround time for bulk orders?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>Turnaround time for bulk orders depends on order size and customizations. For 30 flipbooks, expect 7-10 business days for production, depending on the season.</p></details></li><li><details><summary>Do you offer custom branding for bulk orders?<svg viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5.5v14m-7-7h14" stroke="#111" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></summary><p>Yes, we offer custom branding options for bulk orders. You can add your company logo or event branding to the flipbook cover. Please contact us for more details. support@videotoflip.com</p></details></li></ul></li></ul></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Decorator JITs: Python as a DSL (101 pts)]]></title>
            <link>https://eli.thegreenplace.net/2025/decorator-jits-python-as-a-dsl/</link>
            <guid>42918846</guid>
            <pubDate>Mon, 03 Feb 2025 15:03:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://eli.thegreenplace.net/2025/decorator-jits-python-as-a-dsl/">https://eli.thegreenplace.net/2025/decorator-jits-python-as-a-dsl/</a>, See on <a href="https://news.ycombinator.com/item?id=42918846">Hacker News</a></p>
Couldn't get https://eli.thegreenplace.net/2025/decorator-jits-python-as-a-dsl/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[I Wrote a WebAssembly VM in C (194 pts)]]></title>
            <link>https://irreducible.io/blog/my-wasm-interpreter/</link>
            <guid>42918524</guid>
            <pubDate>Mon, 03 Feb 2025 14:30:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://irreducible.io/blog/my-wasm-interpreter/">https://irreducible.io/blog/my-wasm-interpreter/</a>, See on <a href="https://news.ycombinator.com/item?id=42918524">Hacker News</a></p>
Couldn't get https://irreducible.io/blog/my-wasm-interpreter/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA["Anything threatening to be a subculture is commodified before it can walk" (2014) (136 pts)]]></title>
            <link>https://www.dezeen.com/2014/12/18/william-gibson-subculture-commodification-london-justin-mcguirk-opinion/</link>
            <guid>42917680</guid>
            <pubDate>Mon, 03 Feb 2025 12:50:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.dezeen.com/2014/12/18/william-gibson-subculture-commodification-london-justin-mcguirk-opinion/">https://www.dezeen.com/2014/12/18/william-gibson-subculture-commodification-london-justin-mcguirk-opinion/</a>, See on <a href="https://news.ycombinator.com/item?id=42917680">Hacker News</a></p>
Couldn't get https://www.dezeen.com/2014/12/18/william-gibson-subculture-commodification-london-justin-mcguirk-opinion/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[YouTube shut down audio developer's channel of 15 years standing for "reasons" (360 pts)]]></title>
            <link>https://bsky.app/profile/sinevibes.bsky.social/post/3lhazuyn5as2t</link>
            <guid>42917454</guid>
            <pubDate>Mon, 03 Feb 2025 12:21:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bsky.app/profile/sinevibes.bsky.social/post/3lhazuyn5as2t">https://bsky.app/profile/sinevibes.bsky.social/post/3lhazuyn5as2t</a>, See on <a href="https://news.ycombinator.com/item?id=42917454">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: AI Company Researching Agent (494 pts)]]></title>
            <link>https://github.com/LeadsOnTrees/company-researcher-agent</link>
            <guid>42917126</guid>
            <pubDate>Mon, 03 Feb 2025 11:20:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/LeadsOnTrees/company-researcher-agent">https://github.com/LeadsOnTrees/company-researcher-agent</a>, See on <a href="https://news.ycombinator.com/item?id=42917126">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Company Researching Agent</h2><a id="user-content-company-researching-agent" aria-label="Permalink: Company Researching Agent" href="#company-researching-agent"></a></p>

<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/LeadsOnTrees/company-researcher-agent/blob/master/imgs/demo.gif"><img src="https://github.com/LeadsOnTrees/company-researcher-agent/raw/master/imgs/demo.gif" alt="demo" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is this about?</h2><a id="user-content-what-is-this-about" aria-label="Permalink: What is this about?" href="#what-is-this-about"></a></p>
<p dir="auto">This is a tool that helps you research a company by scraping the web and generating a report.</p>
<p dir="auto">Save time instead of browsing manually through the company's website. Use this tool to get a quick overview of the company's website, careers, funding, and more.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How this works?</h2><a id="user-content-how-this-works" aria-label="Permalink: How this works?" href="#how-this-works"></a></p>
<ul dir="auto">
<li>
<p dir="auto">The tool uses a browser to scrape the company's website.
This agent will deep crawl a website and extract all the information it can find.
It will skip some unnecessary pages like the documentation, support pages, etc.</p>
</li>
<li>
<p dir="auto">It then uses a series of prompts to extract the information you need. There's a lot of valuable information from career pages, FAQ sections, blog posts. This gives you a lot of insights what tech stack the company uses and what the company might be interested to buy.</p>
</li>
<li>
<p dir="auto">The tool generates a report in PDF format. Which you can save and share with your team.</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to use</h2><a id="user-content-how-to-use" aria-label="Permalink: How to use" href="#how-to-use"></a></p>
<p dir="auto">Setup env keys:</p>
<div dir="auto" data-snippet-clipboard-copy-content="export OPENAI_API_KEY=...
export DEEPSEEK_API_KEY=...

# Default is gpt-4o-mini
export LLM_MODEL=o3-mini

# Optional - if you want to use LeadsOnTrees API for funding data
export LOT_API_KEY=..."><pre><span>export</span> OPENAI_API_KEY=...
<span>export</span> DEEPSEEK_API_KEY=...

<span><span>#</span> Default is gpt-4o-mini</span>
<span>export</span> LLM_MODEL=o3-mini

<span><span>#</span> Optional - if you want to use LeadsOnTrees API for funding data</span>
<span>export</span> LOT_API_KEY=...</pre></div>
<p dir="auto">Launching:</p>
<div dir="auto" data-snippet-clipboard-copy-content="uv sync
uv run research https://example.com"><pre>uv sync
uv run research https://example.com</pre></div>
<p dir="auto">If you want to research a very large website it can be good to reduce the max response count:</p>
<div dir="auto" data-snippet-clipboard-copy-content="uv run research https://example.com --max-results 30"><pre>uv run research https://example.com --max-results 30</pre></div>
<p dir="auto">However, the more pages you scrape the more data LLM will have to give you better insights.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is LeadsOnTrees?</h2><a id="user-content-what-is-leadsontrees" aria-label="Permalink: What is LeadsOnTrees?" href="#what-is-leadsontrees"></a></p>
<p dir="auto">LeadsOnTrees is a platform which aggregates all VC funded startups and their founders.</p>
<p dir="auto">We scrape news, blogs, and other sources to find new startups and investments.</p>
<p dir="auto">This data is then used to generate insights about the startup ecosystem.</p>
<p dir="auto">See more on <a href="https://leadsontrees.com/" rel="nofollow">leadsontrees.com</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bluesky now has 30 million users (182 pts)]]></title>
            <link>https://bsky.app/profile/bsky.app/post/3lgu4lg6j2k2v</link>
            <guid>42916770</guid>
            <pubDate>Mon, 03 Feb 2025 10:17:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bsky.app/profile/bsky.app/post/3lgu4lg6j2k2v">https://bsky.app/profile/bsky.app/post/3lgu4lg6j2k2v</a>, See on <a href="https://news.ycombinator.com/item?id=42916770">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Anthropic: "Applicants should not use AI assistants" (448 pts)]]></title>
            <link>https://simonwillison.net/2025/Feb/2/anthropic/</link>
            <guid>42915905</guid>
            <pubDate>Mon, 03 Feb 2025 07:46:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://simonwillison.net/2025/Feb/2/anthropic/">https://simonwillison.net/2025/Feb/2/anthropic/</a>, See on <a href="https://news.ycombinator.com/item?id=42915905">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<blockquote cite="https://boards.greenhouse.io/anthropic"><p><em>While we encourage people to use AI systems during their role to help them work faster and more effectively, please do not use AI assistants during the application process. We want to understand your personal interest in Anthropic without mediation through an AI system, and we also want to evaluate your non-AI-assisted communication skills. Please indicate 'Yes' if you have read and agree.</em></p>
<p>Why do you want to work at Anthropic? (We value this response highly - great answers are often 200-400 words.)</p></blockquote>
<p>— <a href="https://boards.greenhouse.io/anthropic">Anthropic</a>, <span>online job application form</span></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[London Street Views (1840) (160 pts)]]></title>
            <link>https://www.davidrumsey.com/luna/servlet/detail/RUMSEY~8~1~323099~90092214:Composite--London-Street-Views-No--</link>
            <guid>42915231</guid>
            <pubDate>Mon, 03 Feb 2025 05:19:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.davidrumsey.com/luna/servlet/detail/RUMSEY~8~1~323099~90092214:Composite--London-Street-Views-No--">https://www.davidrumsey.com/luna/servlet/detail/RUMSEY~8~1~323099~90092214:Composite--London-Street-Views-No--</a>, See on <a href="https://news.ycombinator.com/item?id=42915231">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            
            <div>
              <p>COLLECTION NAME:</p>
              <div>
                <p>
                  David Rumsey Historical Map Collection
                </p>
                <div>
                  <p>mediaCollectionId</p>
                  <p>RUMSEY~8~1</p>
                  <p>David Rumsey Historical Map Collection</p>
                  <p>Collection</p>
                  <p>true</p>
                </div>
              </div>
            </div>             
              
              
              
              
              
                
                  
                     
                     
                         
                                            
                     
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > AUTHOR:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Author:
                    </p>
                    <div>
                      <p>
                        Tallis, John, 1817-1876
                      </p>
                      
                        <div>
                        <p>author</p>
                        <p>Tallis, John, 1817-1876</p>
                        <p>Author</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > DATE:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Short Title:
                    </p>
                    <div>
                      <p>
                        Composite: London Street Views No. 1-88.
                      </p>
                      
                        <div>
                        <p>short_title</p>
                        <p>Composite: London Street Views No. 1-88.</p>
                        <p>Short Title</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > PUBLISHER:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Publisher:
                    </p>
                    <div>
                      <p>
                        John Tallis &amp; Co.
                      </p>
                      
                        <div>
                        <p>publisher</p>
                        <p>John Tallis &amp; Co.</p>
                        <p>Publisher</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Publisher Location:
                    </p>
                    <div>
                      <p>
                        London
                      </p>
                      
                        <div>
                        <p>publisher_location</p>
                        <p>London</p>
                        <p>Publisher Location</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > TYPE:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Type:
                    </p>
                    <div>
                      <p>
                        Composite Map
                      </p>
                      
                        <div>
                        <p>type</p>
                        <p>Composite Map</p>
                        <p>Type</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Type:
                    </p>
                    <div>
                      <p>
                        Composite View
                      </p>
                      
                        <div>
                        <p>type</p>
                        <p>Composite View</p>
                        <p>Type</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Note:
                    </p>
                    <div>
                      <p>
                        Composite of all 88 London Street Views.
                      </p>
                      
                        <div>
                        <p>note</p>
                        <p>Composite of all 88 London Street Views.</p>
                        <p>Note</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > CITY:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      City:
                    </p>
                    <div>
                      <p>
                        London (England)
                      </p>
                      
                        <div>
                        <p>city</p>
                        <p>London (England)</p>
                        <p>City</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > SUBJECT:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Subject:
                    </p>
                    <div>
                      <p>
                        Roads
                      </p>
                      
                        <div>
                        <p>subject</p>
                        <p>Roads</p>
                        <p>Subject</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Subject:
                    </p>
                    <div>
                      <p>
                        Tourism
                      </p>
                      
                        <div>
                        <p>subject</p>
                        <p>Tourism</p>
                        <p>Subject</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Subject:
                    </p>
                    <div>
                      <p>
                        Historical
                      </p>
                      
                        <div>
                        <p>subject</p>
                        <p>Historical</p>
                        <p>Subject</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Subject:
                    </p>
                    <div>
                      <p>
                        Street View
                      </p>
                      
                        <div>
                        <p>subject</p>
                        <p>Street View</p>
                        <p>Subject</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Subject:
                    </p>
                    <div>
                      <p>
                        Street View
                      </p>
                      
                        <div>
                        <p>subject</p>
                        <p>Street View</p>
                        <p>Subject</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Full Title:
                    </p>
                    <div>
                      <p>
                        (Composite to) Tallis's London Street Views No. 1-88.
                      </p>
                      
                        <div>
                        <p>full_title</p>
                        <p>(Composite to) Tallis's London Street Views No. 1-88.</p>
                        <p>Full Title</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      List No:
                    </p>
                    <div>
                      <p>
                        14002.688
                      </p>
                      
                        <div>
                        <p>list_no</p>
                        <p>14002.688</p>
                        <p>List No</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Series No:
                    </p>
                    <div>
                      <p>
                        2
                      </p>
                      
                        <div>
                        <p>series_no</p>
                        <p>2</p>
                        <p>Series No</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > ENGRAVER OR PRINTER:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Engraver or Printer:
                    </p>
                    <div>
                      <p>
                        Bigot, Charles
                      </p>
                      
                        <div>
                        <p>engraver_or_printer</p>
                        <p>Bigot, Charles</p>
                        <p>Engraver or Printer</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Engraver or Printer:
                    </p>
                    <div>
                      <p>
                        Gaspey, William, 1812-1888
                      </p>
                      
                        <div>
                        <p>engraver_or_printer</p>
                        <p>Gaspey, William, 1812-1888</p>
                        <p>Engraver or Printer</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > PUBLICATION AUTHOR:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Publication Author:
                    </p>
                    <div>
                      <p>
                        Tallis, John, 1817-1876
                      </p>
                      
                        <div>
                        <p>publication_author</p>
                        <p>Tallis, John, 1817-1876</p>
                        <p>Publication Author</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Date:
                    </p>
                    <div>
                      <p>
                        1840
                      </p>
                      
                        <div>
                        <p>pub_date</p>
                        <p>1840</p>
                        <p>Pub Date</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Title:
                    </p>
                    <div>
                      <p>
                        Tallis's London street views, exhibiting upwards of one hundred buildings in each number ... the whole forming a complete stranger's guide through London ... to which is added an index map of the streets ... and a faithful history and description of every object worthy of notice ... London: published by John Tallis, 15, St. John's Lane, St. John's Gate; and regularly kept by all booksellers and toy shops, in England, Wales, Ireland, and Scotland. Each sheet may be had separately. W. Hill, Printer, 48, Northampton-street, Clerkenwell.
                      </p>
                      
                        <div>
                        <p>pub_title</p>
                        <p>Tallis's London street views, exhibiting upwards of one hundred buildings in each number ... the whole forming a complete stranger's guide through London ... to which is added an index map of the streets ... and a faithful history and description of every object worthy of notice ... London: published by John Tallis, 15, St. John's Lane, St. John's Gate; and regularly kept by all booksellers and toy shops, in England, Wales, Ireland, and Scotland. Each sheet may be had separately. W. Hill, Printer, 48, Northampton-street, Clerkenwell.</p>
                        <p>Pub Title</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Reference:
                    </p>
                    <div>
                      <p>
                        Jackson 9-13
                      </p>
                      
                        <div>
                        <p>pub_reference</p>
                        <p>Jackson 9-13</p>
                        <p>Pub Reference</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Note:
                    </p>
                    <div>
                      <p>
                        Tallis’ London Street Views includes eighty-eight parts, which were followed by eighteen additional enlarged and revised views released several years later. “Each part consisted of the engraved elevation spread over the two centre pages, four surrounding pages of advertisements with an historical and descriptive text occupying the middle columns, and a coloured wrapper carrying the title, further advertisements, and a street directory relating to the elevation … The elevations of both sides of the street were engraved together with a map of its location in relation to surrounding streets and a view, either of the street itself, or of a famous building or individual shop. Where possible each street was dealt with in a single issue, but several of the important longer thoroughfares had to be spread over two or more parts: Oxford Street, for instance, had six parts devoted to it. So although there was a total of eighty-eight parts only seventy-four streets were illustrated. Each issue of the Street Views was sold at 1 1/2 d. a copy, with an occasional exception at 2d. The low cost is explained by the fact that the publication was devised as an advertising medium. Although the lists of names in the street directories were complete, by no means all of the premises in the elevations had their proprietors’ names engraved on them, and it is clear that this privilege had to be paid for. According to Beresford Chancellor (Architectural Review. July, 1924, p. 39), the drawings for the elevations were made by an artist named Charles Bigot … The historical and descriptive notes were probably compiled by William Gaspey who certainly wrote the notes for the 1847 edition … The printers of the covers and text are W. Hill of Northampton Street, Clerkenwell, but it is unlikely that they also printed the engraved plates, for the printing of copper- and steel-engravings was a highly specialized craft bearing no affinity with letterpress printing … There is a reference among Tallis papers to ‘Willoughby our printer,’ which clearly refers to Richard Willoughby &amp; Co. … Although it is impossible to date the beginning and the ending of these Street Views precisely, I suggest the following dating: Parts 1-36, issued 1838; Parts 37-79, 1839; Parts 80-88, 1840. The later edition of Street Views is also undated but from the clues contained in the advertisements it seems that they were issued during the latter half of 1847.” [Jackson, Peter (1969). Introduction. John Tallis’s London street views (p. 9-13). London Topographical Society, Nattali &amp; Maurice, London.] The Rumsey Collection copy includes 77 original street view pamphlets; the online version is augmented by 11 facsimile images of numbers 78 to 88 from the London Topographical Society edition mentioned above.
                      </p>
                      
                        <div>
                        <p>pub_note</p>
                        <p>Tallis’ London Street Views includes eighty-eight parts, which were followed by eighteen additional enlarged and revised views released several years later. “Each part consisted of the engraved elevation spread over the two centre pages, four surrounding pages of advertisements with an historical and descriptive text occupying the middle columns, and a coloured wrapper carrying the title, further advertisements, and a street directory relating to the elevation … The elevations of both sides of the street were engraved together with a map of its location in relation to surrounding streets and a view, either of the street itself, or of a famous building or individual shop. Where possible each street was dealt with in a single issue, but several of the important longer thoroughfares had to be spread over two or more parts: Oxford Street, for instance, had six parts devoted to it. So although there was a total of eighty-eight parts only seventy-four streets were illustrated. Each issue of the Street Views was sold at 1 1/2 d. a copy, with an occasional exception at 2d. The low cost is explained by the fact that the publication was devised as an advertising medium. Although the lists of names in the street directories were complete, by no means all of the premises in the elevations had their proprietors’ names engraved on them, and it is clear that this privilege had to be paid for. According to Beresford Chancellor (Architectural Review. July, 1924, p. 39), the drawings for the elevations were made by an artist named Charles Bigot … The historical and descriptive notes were probably compiled by William Gaspey who certainly wrote the notes for the 1847 edition … The printers of the covers and text are W. Hill of Northampton Street, Clerkenwell, but it is unlikely that they also printed the engraved plates, for the printing of copper- and steel-engravings was a highly specialized craft bearing no affinity with letterpress printing … There is a reference among Tallis papers to ‘Willoughby our printer,’ which clearly refers to Richard Willoughby &amp; Co. … Although it is impossible to date the beginning and the ending of these Street Views precisely, I suggest the following dating: Parts 1-36, issued 1838; Parts 37-79, 1839; Parts 80-88, 1840. The later edition of Street Views is also undated but from the clues contained in the advertisements it seems that they were issued during the latter half of 1847.” [Jackson, Peter (1969). Introduction. John Tallis’s London street views (p. 9-13). London Topographical Society, Nattali &amp; Maurice, London.] The Rumsey Collection copy includes 77 original street view pamphlets; the online version is augmented by 11 facsimile images of numbers 78 to 88 from the London Topographical Society edition mentioned above.</p>
                        <p>Pub Note</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub List No:
                    </p>
                    <div>
                      <p>
                        14002.000
                      </p>
                      
                        <div>
                        <p>pub_list_no</p>
                        <p>14002.000</p>
                        <p>Pub List No</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > PUB TYPE:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Pub Type:
                    </p>
                    <div>
                      <p>
                        City Atlas
                      </p>
                      
                        <div>
                        <p>pub_type</p>
                        <p>City Atlas</p>
                        <p>Pub Type</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Maps:
                    </p>
                    <div>
                      <p>
                        88
                      </p>
                      
                        <div>
                        <p>pub_maps</p>
                        <p>88</p>
                        <p>Pub Maps</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Height cm:
                    </p>
                    <div>
                      <p>
                        15
                      </p>
                      
                        <div>
                        <p>pub_height_cm</p>
                        <p>15</p>
                        <p>Pub Height cm</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Width cm:
                    </p>
                    <div>
                      <p>
                        23
                      </p>
                      
                        <div>
                        <p>pub_width_cm</p>
                        <p>23</p>
                        <p>Pub Width cm</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Image No:
                    </p>
                    <div>
                      <p>
                        14002688.jp2
                      </p>
                      
                        <div>
                        <p>image_no</p>
                        <p>14002688.jp2</p>
                        <p>Image No</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Download 1:
                    </p>
                    <div>
                        <p>fullsidurl</p>
                        <p>&lt;a href=https://www.davidrumsey.com/rumsey/download.pl?image=/179/14002688.jp2 target=_blank&gt;Full Image Download in JP2 Format&lt;/a&gt;</p>
                        <p>Download 1</p>
                        
                           <p>false</p>
                           
                        
                      </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Download 2:
                    </p>
                    <div>
                        <p>mrsidsoftwareurl</p>
                        <p>&lt;a href=https://www.extensis.com/support/geoviewer-9 target=_blank &gt;GeoViewer for JP2 and SID files&lt;/a&gt;</p>
                        <p>Download 2</p>
                        
                           <p>false</p>
                           
                        
                      </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Authors:
                    </p>
                    <div>
                      <p>
                        Tallis, John, 1817-1876
                      </p>
                      
                        <div>
                        <p>author_thumbnail_label</p>
                        <p>Tallis, John, 1817-1876</p>
                        <p>Authors</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
              
              
              
              
              
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Polish city is using mussels to monitor water quality (2020) (184 pts)]]></title>
            <link>https://www.awa.asn.au/resources/latest-news/technology/innovation/polish-city-using-mussels-monitor-water-quality</link>
            <guid>42915113</guid>
            <pubDate>Mon, 03 Feb 2025 04:53:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.awa.asn.au/resources/latest-news/technology/innovation/polish-city-using-mussels-monitor-water-quality">https://www.awa.asn.au/resources/latest-news/technology/innovation/polish-city-using-mussels-monitor-water-quality</a>, See on <a href="https://news.ycombinator.com/item?id=42915113">Hacker News</a></p>
Couldn't get https://www.awa.asn.au/resources/latest-news/technology/innovation/polish-city-using-mussels-monitor-water-quality: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[The Economic and Fiscal Effects of the Trump Administration's Proposed Tariffs (102 pts)]]></title>
            <link>https://budgetlab.yale.edu/research/economic-and-fiscal-effects-trump-administrations-proposed-tarrifs</link>
            <guid>42914794</guid>
            <pubDate>Mon, 03 Feb 2025 03:57:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://budgetlab.yale.edu/research/economic-and-fiscal-effects-trump-administrations-proposed-tarrifs">https://budgetlab.yale.edu/research/economic-and-fiscal-effects-trump-administrations-proposed-tarrifs</a>, See on <a href="https://news.ycombinator.com/item?id=42914794">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="paragraph-html-content-1724" data-js="html-content">
  <p>The Budget Lab modeled the economic and fiscal impact of the tariff proposal both with and without retaliation.<sup>2</sup> The results are summarized in the table above.</p><ul><li><strong>Aggregate price effects.&nbsp;</strong>The proposed tariff puts upward pressure on the PCE price level of 0.72-0.76% before consumer substitution, depending on the extent of retaliation from Canada, Mexico, and China. Pre-substitution is the best way to gauge the hit to consumer welfare. That is the equivalent of a loss of purchasing power of about $1,250 on average per household in 2024$.</li></ul><p>Even after consumers substitute, and assuming the Federal Reserve does not tighten monetary policy to counteract the tariff’s price effects, the level of PCE prices is still persistently 0.6% higher in the medium-term, a loss in purchasing power of about $1,000 per household in 2024$.</p><ul><li><strong>Output effects.&nbsp;</strong>In the medium-to-long run, the size of the US economy is persistently 0.2% smaller in real terms under the package, even after the US and global economies rebalance. This long-run result does not differ meaningfully between retaliation and no retaliation scenarios.<sup>3 4</sup></li><li><strong>Fiscal effects.&nbsp;</strong>Over 2026-2035, this tariff package raises $1.4-1.5 trillion under “relaxed” conventional assumptions (keeping income constant for the US but allowing it to fall for foreign countries). Conventional revenues under retaliation are 6% smaller than under non-retaliation assumptions.</li></ul><p>Net revenues would, in reality, likely be even lower than this once dynamic effects are taken into account, given the smaller size of the US economy. Under Congressional Budget Office (CBO) rules of thumb, a -0.2% permanent shock to the size of the US economy that phases in over three years—akin to how The Budget Lab models tariff impacts—lowers revenues by an additional roughly-$130 billion over a decade.</p><ul><li><strong>Average effective tariff rate.&nbsp;</strong>The average effective tariff rate would rise by approximately 6.1-6.3 percentage points under the proposal, once consumers and businesses substituted towards domestic or non-tariffed imported goods. This would put the overall average effective tariff rate at 8.6-8.8%, the highest US average tariff rate since 1946.</li><li><strong>Commodity price effects.&nbsp;</strong>The figure below shows detail from GTAP on how the longer-run price level effects are distributed across different goods and services, and how prices would change for both domestic and imported products. These are the net effects after the US and global production re-balances to account for the tariffs. A few high-level observations:<ul><li>Tariffs not only raise prices for imports, but drive domestic producers to raise prices too, though by how much depends on the size of the tariff, the exposure of the market to both foreign and domestic competition, and the price sensitivity of customers.</li><li>Computers and electronics see the largest price increases. The average price rises 5.7%, which is a weighted average of the domestic price increase (0.8%) and imported price increase (6.5%).</li><li>Fresh produce (“Vegetables, fruits, nuts”) rises in price by 1.8% on average.</li><li>Crude oil prices rise 1.1% in the long run. Gasoline prices (“Petroleum, coal products”) rise 1.3% on average, the equivalent of an additional $0.04 per gallon in today’s prices. Note that these are longer-run effects after the US shifts its supply chains for crude oil; shorter-run effects on oil and gasoline prices may be larger.</li><li>Auto prices rise 3.9% on average, the result of a 6.9% rise in imported auto prices and a 1.8% rise in domestic auto prices.</li></ul></li></ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Dumbest Trade War Fallout Begins (135 pts)]]></title>
            <link>https://www.wsj.com/opinion/the-trump-tariff-fallout-begins-canada-mexico-vow-retaliation-economic-uncertainty-da522b44</link>
            <guid>42914478</guid>
            <pubDate>Mon, 03 Feb 2025 03:06:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wsj.com/opinion/the-trump-tariff-fallout-begins-canada-mexico-vow-retaliation-economic-uncertainty-da522b44">https://www.wsj.com/opinion/the-trump-tariff-fallout-begins-canada-mexico-vow-retaliation-economic-uncertainty-da522b44</a>, See on <a href="https://news.ycombinator.com/item?id=42914478">Hacker News</a></p>
Couldn't get https://www.wsj.com/opinion/the-trump-tariff-fallout-begins-canada-mexico-vow-retaliation-economic-uncertainty-da522b44: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Musk says DOGE is halting Treasury payments to US contractors (111 pts)]]></title>
            <link>https://fortune.com/2025/02/02/musk-doge-treasury-payments-system-halt-us-govenment-contractors-lutheran-charity/</link>
            <guid>42914425</guid>
            <pubDate>Mon, 03 Feb 2025 02:57:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fortune.com/2025/02/02/musk-doge-treasury-payments-system-halt-us-govenment-contractors-lutheran-charity/">https://fortune.com/2025/02/02/musk-doge-treasury-payments-system-halt-us-govenment-contractors-lutheran-charity/</a>, See on <a href="https://news.ycombinator.com/item?id=42914425">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-cy="article-wrapper" id="content" role="article"><p><img alt="Elon Musk during an inauguration event at Capital One Arena on Jan. 20." fetchpriority="high" width="768" height="512" decoding="async" data-nimg="1" sizes="100vw" srcset="https://fortune.com/img-assets/wp-content/uploads/2025/02/GettyImages-2194950573-e1738539664665.jpg?w=320&amp;q=75 320w, https://fortune.com/img-assets/wp-content/uploads/2025/02/GettyImages-2194950573-e1738539664665.jpg?w=384&amp;q=75 384w, https://fortune.com/img-assets/wp-content/uploads/2025/02/GettyImages-2194950573-e1738539664665.jpg?w=480&amp;q=75 480w, https://fortune.com/img-assets/wp-content/uploads/2025/02/GettyImages-2194950573-e1738539664665.jpg?w=576&amp;q=75 576w, https://fortune.com/img-assets/wp-content/uploads/2025/02/GettyImages-2194950573-e1738539664665.jpg?w=768&amp;q=75 768w, https://fortune.com/img-assets/wp-content/uploads/2025/02/GettyImages-2194950573-e1738539664665.jpg?w=1024&amp;q=75 1024w, https://fortune.com/img-assets/wp-content/uploads/2025/02/GettyImages-2194950573-e1738539664665.jpg?w=1280&amp;q=75 1280w, https://fortune.com/img-assets/wp-content/uploads/2025/02/GettyImages-2194950573-e1738539664665.jpg?w=1440&amp;q=75 1440w" src="https://fortune.com/img-assets/wp-content/uploads/2025/02/GettyImages-2194950573-e1738539664665.jpg?w=1440&amp;q=75"></p><p>Elon Musk during an inauguration event at Capital One Arena on Jan. 20.</p><p>Christopher Furlong—Getty Images</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Patterns for Personal Web Sites (2003) (106 pts)]]></title>
            <link>http://www.rdrop.com/~half/Creations/Writings/Web.patterns/index.html</link>
            <guid>42913831</guid>
            <pubDate>Mon, 03 Feb 2025 01:18:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/index.html">http://www.rdrop.com/~half/Creations/Writings/Web.patterns/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=42913831">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="writings">

<!-- breadcrumbs -->
<p>
<small>
  <a href="http://www.rdrop.com/~half/index.html">MLI&nbsp;Home</a>
  →
  <a href="http://www.rdrop.com/~half/Creations/Writings/index.html">Writings</a>
  →
  Patterns for Personal&nbsp;Web&nbsp;Sites
</small>
</p>

<p><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/map.html"><img src="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/compass.gif" alt="[map]"></a>Patterns for Personal Web Sites</p>

<div>



<p>These patterns for creating personal Web sites have been distilled over the last few years from the most interesting personal Web sites I've found. For more information on these patterns, please read the <a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/introduction.html">introduction</a>.</p>

<p>These patterns were last revised in July of 2003. For a summary of changes, see the <a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/history.html">revision history</a>.</p>

<p>The patterns are grouped by subject:</p>

<ol>
  <li><a href="#contentpatterns">Content</a></li>
  <li><a href="#structuralpatterns">Structure</a></li>
  <li><a href="#temporalpatterns">Time</a></li>
  <li><a href="#navigationpatterns">Navigation</a></li>
  <li><a href="#technologypatterns">Technology</a></li>
</ol>

<hr>

<h2><a name="contentpatterns">Content Patterns</a></h2>

<p>Content patterns focus on <em>what</em> your site contains.</p>

<ul>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/deep.content.html">Deep Content</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/diverse.content.html">Diverse Content</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/gift.to.the.community.html">Gift To The Community</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/your.own.voice.html">Your Own Voice</a></li>
</ul>

<hr>

<h2><a name="structuralpatterns">Structural Patterns</a></h2>

<p>Structural patterns describe three levels of organization: the site, individual pages, and links.</p>

<h3><a name="sitestructurepatterns">Site structure</a></h3>

<ul>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/useful.home.page.html">Useful Home Page</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/index.pages.html">Index Pages</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/history.page.html">History Page</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/default.pages.html">Default Pages</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/private.entrance.html">Private Entrance</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/cover.page.html">Cover Page</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/secret.garden.html">Secret Garden</a></li>
</ul>

<h3><a name="pagestructurepatterns">Page structure</a></h3>

<ul>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/consistent.format.html">Consistent Format</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/standard.header.and.footer.html">Standard Header And Footer</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/link.to.maintainer.html">Link To Maintainer</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/appropriate.length.html">Appropriate Length</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/necessary.images.html">Necessary Images</a></li>
</ul>

<h3><a name="linkpatterns">Links: the three Rs</a></h3>

<ul>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/recognizable.links.html">Recognizable Links</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/readable.links.html">Readable Links</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/relative.links.html">Relative Links</a></li>
</ul>

<hr>

<h2><a name="temporalpatterns">Temporal Patterns</a></h2>

<p>Temporal patterns guide how your site changes over time.</p>

<ul>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/living.site.html">Living Site</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/incremental.growth.html">Incremental Growth</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/freshness.dates.html">Freshness Dates</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/unchanging.urls.html">Unchanging Urls</a></li>
</ul>

<hr>

<h2><a name="navigationpatterns">Navigation Patterns</a></h2>

<p>Navigation patterns provide guidelines for designing site navigation.</p>

<ul>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/entrances.everywhere.html">Entrances Everywhere</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/visible.location.html">Visible Location</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/one.jump.home.html">One Jump Home</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/three.jump.maximum.html">Three Jump Maximum</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/site.map.html">Site Map</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/related.pages.html">Related Pages</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/guessable.urls.html">Guessable Urls</a></li>
</ul>

<hr>

<h2><a name="technologypatterns">Technology Patterns</a></h2>

<p>Use technology patterns to make your site more useful, not less.</p>

<ul>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/open.to.all.html">Open To All</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/appropriate.format.html">Appropriate Format</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/valid.markup.html">Valid Markup</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/graceful.failure.html">Graceful Failure</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/downloadable.weblet.html">Downloadable Weblet</a></li>
  <li><a href="http://www.rdrop.com/~half/Creations/Writings/Web.patterns/offline.readability.html">Offline Readability</a></li>
</ul>

</div>

<hr>

<!-- Footer -->
<p><small>Last updated 8 July 2003<br>
<tt>http://www.rdrop.com/~half/Creations/Writings/Web.patterns/index.html</tt><br>
All contents <a href="http://www.rdrop.com/~half/site.info/license.html">©</a>2002-2003 <a href="http://www.rdrop.com/~half/Personal/Life/ContactInformation.html">Mark L. Irons</a></small></p>

<!-- breadcrumbs -->
<p>
<small>
  <a href="http://www.rdrop.com/~half/index.html">MLI&nbsp;Home</a>
  →
  <a href="http://www.rdrop.com/~half/Creations/Writings/index.html">Writings</a>
  →
  Patterns for Personal&nbsp;Web&nbsp;Sites
</small>
</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Deep Research (542 pts)]]></title>
            <link>https://openai.com/index/introducing-deep-research/</link>
            <guid>42913251</guid>
            <pubDate>Mon, 03 Feb 2025 00:06:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/index/introducing-deep-research/">https://openai.com/index/introducing-deep-research/</a>, See on <a href="https://news.ycombinator.com/item?id=42913251">Hacker News</a></p>
Couldn't get https://openai.com/index/introducing-deep-research/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[The Art of Dithering and Retro Shading for the Web (2024) (138 pts)]]></title>
            <link>https://blog.maximeheckel.com/posts/the-art-of-dithering-and-retro-shading-web/</link>
            <guid>42913180</guid>
            <pubDate>Sun, 02 Feb 2025 23:58:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.maximeheckel.com/posts/the-art-of-dithering-and-retro-shading-web/">https://blog.maximeheckel.com/posts/the-art-of-dithering-and-retro-shading-web/</a>, See on <a href="https://news.ycombinator.com/item?id=42913180">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>August 6, 2024<!-- --> /<!-- --> <!-- -->30 min read</p><p><span>Last Updated:<!-- --> <!-- -->August 10, 2024</span></p></div><div><p>I spent the past few months building my <a href="https://maximeheckel.com/">personal website</a> from the ground up, finally taking the time to incorporate some 3D work to showcase my shader and WebGL skills.
Throughout this work, I got to truly understand the crucial role that <strong>post-processing</strong> plays in making a scene actually <em>look good</em>, which brought some resolutions to long-term frustrations I had with my past React Three Fiber and shader projects where my vision wouldn't materialize regardless of the amount of work and care I was putting into them.</p>
<p>Taking the time to build, combine, and experiment with custom post-processing effects gave me an additional creative outlet, and among the many types I got to iterate on, I always had a particular affection for the several "retro" effects I came up with. With subtle details such as <strong>dithering</strong>, <strong>color quantization</strong>, or <strong>pixelization/CRT RGB cells</strong>, they bring a pleasant contrast between the modern web landscape and a long-gone era of technology we 90s/early 2000s kids are sometime longing for.</p>
<figure></figure>
<p>Given the time I invested dissecting every aspect of these effects, I wanted to dive deep with you into the concepts powering them and the shader techniques I learned along the way. In this article, I hope to convince you of the power of post-processing effects and that nothing beats an elegant retro vibe applied to a website 👌✨. We'll also look into examples of dithering and pixel art from very talented folks who use the same processes that I'll be introducing later on, as well as some of my own creations that I built while learning about all this.</p>


<section id="dithering-techniques-section"><h2 id="dithering-techniques">Dithering techniques</h2>
<p>Dithering originated as an early graphics technique to <em>trick</em> the viewer's brain into seeing more color or smoothness in gradients/shadows that the machines back in the day could output by intentionally introducing noise on top of an image or a render.
Color palettes were very limited back then, thus relying on techniques like these was vital for game designers to realize their vision. This gave, as a result, a unique look and feel to games and media from that specific moment in time where computers became ubiquitous, but advanced graphic capabilities were not yet there.</p>
<p>Today, dithering is more an artistic choice than a workaround. Many artists or game designers use this technique as a creative outlet to give their work a unique <em>retro vibe</em>, calling out to that early gaming era, or work within the realms of self-imposed limits in colors. Some great examples of such use of dithering include:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Basement Studio's <a href="https://chronicles.basement.studio/">Basement Chronicle</a> game: a well-executed <em>point-and-click</em> game that reminds me a lot of my own early gaming experience.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p><a href="https://twitter.com/loackme_">@loackme</a>'s art, which I'm an absolute fan of.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p><a href="https://twitter.com/aweusmeuh">@aweusmeuh</a>'s use of the original Game Boy camera for experimental photography which features
a sublime dithering effect.</p></li>
</ul>
<figure><p><img alt="Examples of beautifully executed dithering art from left to right by Basement Studio, @aweusmeuh, and @loackme_" loading="lazy" width="700" height="405" decoding="async" data-nimg="1" sizes="100vw" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 640w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 750w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 828w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 1080w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 1200w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 1920w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 2048w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 3840w" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples"></p><figcaption>Examples of beautifully executed dithering art from left to right by Basement Studio, @aweusmeuh, and @loackme_</figcaption></figure>
<p>The latter is how we will approach dithering in this blog post: to give our React Three Fiber/Three.js projects a unique style! In this first part, we'll explore how the dithering technique works, implement it as a shader, and build a first iteration of a custom dithering post-processing effect that we can apply on top of any 3D scene.</p>
<h3 id="a-first-pass-at-dithering-in-react-three-fiber">A first pass at dithering in React Three Fiber</h3>
<p>For this project, we'll create a <strong>custom post-processing effect</strong>. As we did for the <a href="https://blog.maximeheckel.com/posts/moebius-style-post-processing/">Moebius stylized shader</a>, relying on post-processing will allow us to apply a shader to an already rendered scene and alter its style like adding an "image filter" to a photo.</p>

<p>To create a custom effect, we will:</p>
<ol>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Declare a class that extends from <code>Effect</code></p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Define our fragment shader and call it from the parent constructor using the <code>super</code> keyword.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Define the set of uniforms we will need for our effect.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Call the <code>wrapEffect</code> function from <code>@react-three/post-processing</code> with our effect class as an argument. This will allow us to use our effect as a JSX component within <code>EffectComposer</code>.</p></li>
</ol>
<div><div><p data-testid="codesnippet-title">Sample custom shader post-processing effect used in an R3F scene</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> </span><span data-testid="content-line">OrbitControls</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">OrthographicCamera</span><span data-testid="content-line">,</span><span data-testid="content-line"> useFBO </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'@react-three/drei'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> </span><span data-testid="content-line">Canvas</span><span data-testid="content-line"> </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'@react-three/fiber'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> wrapEffect</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">EffectComposer</span><span data-testid="content-line"> </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'@react-three/postprocessing'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> </span><span data-testid="content-line">Effect</span><span data-testid="content-line"> </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'postprocessing'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>5</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> </span><span data-testid="content-line">Suspense</span><span data-testid="content-line">,</span><span data-testid="content-line"> useRef</span><span data-testid="content-line">,</span><span data-testid="content-line"> useState </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'react'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> v4 </span><span data-testid="content-line">as</span><span data-testid="content-line"> uuidv4 </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'uuid'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>7</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">fragmentShader</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'./fragmentShader.glsl'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>9</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">class</span><span data-testid="content-line"> </span><span data-testid="content-line">RetroEffectImpl</span><span data-testid="content-line"> </span><span data-testid="content-line">extends</span><span data-testid="content-line"> </span><span data-testid="content-line">Effect</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>11</p><p><span><span data-testid="content-line">    </span><span data-testid="content-line">super</span><span data-testid="content-line">(</span><span data-testid="content-line">'RetroEffect'</span><span data-testid="content-line">,</span><span data-testid="content-line"> fragmentShader</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>12</p><p><span><span data-testid="content-line">      </span><span data-testid="content-line">uniforms</span><span data-testid="content-line">:</span><span data-testid="content-line"> </span><span data-testid="content-line">new</span><span data-testid="content-line"> </span><span data-testid="content-line">Map</span><span data-testid="content-line">(</span><span data-testid="content-line">[</span><span data-testid="content-line">]</span><span data-testid="content-line">)</span><span data-testid="content-line">,</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>17</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">RetroEffect</span><span data-testid="content-line"> </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">wrapEffect</span><span data-testid="content-line">(</span><span data-testid="content-line">RetroEffectImpl</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>20</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">const</span><span data-testid="content-line"> mesh </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">useRef</span><span data-testid="content-line">(</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>24</p><p><span><span data-testid="content-line">      </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">mesh</span><span data-testid="content-line"> </span><span data-testid="content-line">receiveShadow</span><span data-testid="content-line"> </span><span data-testid="content-line">castShadow</span><span data-testid="content-line">&gt;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>25</p><p><span><span data-testid="content-line">        </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">torusKnotGeometry</span><span data-testid="content-line"> </span><span data-testid="content-line">args</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">[</span><span data-testid="content-line">1</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.25</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">128</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">100</span><span data-testid="content-line">]</span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">/&gt;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>26</p><p><span><span data-testid="content-line">        </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">meshStandardMaterial</span><span data-testid="content-line"> </span><span data-testid="content-line">color</span><span data-testid="content-line">=</span><span data-testid="content-line">"</span><span data-testid="content-line">cyan</span><span data-testid="content-line">"</span><span data-testid="content-line"> </span><span data-testid="content-line">/&gt;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>As a first step to building our effect, we'll start with a simple <strong>luminance-based white noise dithering</strong>. The idea behind this is to:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Look at the <em>luminance</em> of each pixel.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Compare it to a random number (hence the "white noise" in the name).</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Output a white or black pixel based on whether the luminance falls above or below said random number.</p></li>
</ul>
<div><div><p data-testid="codesnippet-title">White noise dithering implemented in a fragment shader of a custom effect</p></div><pre><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">return</span><span data-testid="content-line"> </span><span data-testid="content-line">fract</span><span data-testid="content-line">(</span><span data-testid="content-line">sin</span><span data-testid="content-line">(</span><span data-testid="content-line">dot</span><span data-testid="content-line">(</span><span data-testid="content-line">c</span><span data-testid="content-line">.</span><span data-testid="content-line">xy</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">12.9898</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">78.233</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">43758.5453</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>5</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec3</span><span data-testid="content-line"> </span><span data-testid="content-line">whiteNoiseDither</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">float</span><span data-testid="content-line"> lum</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">0.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>8</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">if</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">lum </span><span data-testid="content-line">&lt;</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>17</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainImage</span><span data-testid="content-line">(</span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> inputColor</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">out</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> outputColor</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>18</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">inputBuffer</span><span data-testid="content-line">,</span><span data-testid="content-line"> uv</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>20</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> lum </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">dot</span><span data-testid="content-line">(</span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">0.2126</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.7152</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0722</span><span data-testid="content-line">)</span><span data-testid="content-line">,</span><span data-testid="content-line"> color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>21</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">whiteNoiseDither</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> lum</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>You can observe the effect that this code would yield on the widget below which re-implements a similar process:</p>


<p>Doing this will result in a grayscale version of our scene where any pixel not purely black or white will be <em>dithered</em> tricking our brains into seeing more shades of gray. The demo below shows the effect applied on top of a simple React Three Fiber scene:</p>

<h3 id="ordered-dithering-and-bayer-matrix">Ordered Dithering and Bayer Matrix</h3>
<p>The effect we just built works, but it relies on white noise for its dithering threshold, leading to a messy result. We can bring order to all this (🥁) using a technique commonly known as <strong>ordered dithering</strong> due to the <em>ordered</em> pattern it yields when applied.</p>
<p>This technique relies on a threshold map defined via a <strong>Bayer Matrix</strong> that contains values used to determine whether we should adjust the color of a given pixel to black or white.</p>

<div data-fullbleed="true"><figure><p><img alt="Diagram showcasing the process of applying the 4x4 Bayer Matrix on the input buffer of a scene and obtaining the dithering pattern based on the threshold value matching each pixel" loading="lazy" width="700" height="298" decoding="async" data-nimg="1" sizes="100vw" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 640w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 750w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 828w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 1080w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 1200w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 1920w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 2048w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 3840w" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix"></p><figcaption>Diagram showcasing the process of applying the 4x4 Bayer Matrix on the input buffer of a scene and obtaining the dithering pattern based on the threshold value matching each pixel</figcaption></figure></div>
<p>To demonstrate how this dithering type works, I built the widget below where you can see how this matrix changes the output of a grid of pixels once applied on top of it:</p>

<p>As you can see through the examples I showcased above, we get some pretty distinct dithering patterns based on</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>the shades of gray used in the underlying pixel grid</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>the size of the Bayer Matrix used to get the threshold value</p></li>
</ul>
<figure><div tabindex="0" role="slider" aria-label="Ordered dithering applied on a simple grayscale gradient" aria-valuemin="0" aria-valuemax="100" aria-valuenow="50"><p><img alt="Before" loading="eager" width="700" height="364" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscale 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscale 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscale"></p><p><img alt="After" loading="eager" width="700" height="364" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color"></p><div id="slider-line"><p><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img" style="transform:rotate(180deg)"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></p></div></div><figcaption>Ordered dithering applied on a simple grayscale gradient</figcaption></figure>
<p>To implement this in GLSL, we need to get the luminance of each pixel and compare its value with the corresponding threshold value for that same pixel obtained from the Bayer Matrix:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>if the difference between those values is positive, the pixel is white</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>otherwise, it is black</p></li>
</ul>
<div><div><p data-testid="codesnippet-title">Ordered dithering using a 4x4 Bayer Matrix</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">mat4x4</span><span data-testid="content-line"> bayerMatrix4x4 </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">mat4x4</span><span data-testid="content-line">(</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec3</span><span data-testid="content-line"> </span><span data-testid="content-line">orderedDither</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">float</span><span data-testid="content-line"> lum</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>9</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">0.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>11</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>13</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> x </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">4</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>14</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> y </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">4</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>15</p><p><span><span data-testid="content-line">  threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> bayerMatrix4x4</span><span data-testid="content-line">[</span><span data-testid="content-line">y</span><span data-testid="content-line">]</span><span data-testid="content-line">[</span><span data-testid="content-line">x</span><span data-testid="content-line">]</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>17</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">if</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">lum </span><span data-testid="content-line">&lt;</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">+</span><span data-testid="content-line"> bias</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>Modifying the effect code we implemented in the previous part with the code we just introduced will give us an ordered dithering effect for our underlying scene:</p>


<h3 id="blue-noise-dithering">Blue noise dithering</h3>
<p>We got ourselves a satisfying ordered dithering effect! While this is the most popular dithering technique, as well as the main one we'll leverage in this article, I still wanted to touch upon an additonal way to dither that you perhaps remember seeing in my article on <a href="https://blog.maximeheckel.com/posts/real-time-cloudscapes-with-volumetric-raymarching/">Volumetric Raymarching</a>: <strong>blue noise dithering</strong>.</p>
<p>I used this technique in my raymarched cloud scenes to <em>"erase the banding or layering effect due to a less granular [raymarching] loop"</em> which funny enough is the same use case we need dithering for in our Retro post-processing effect. Unlike the previous techniques, this one relies on a texture that we'll pass to the shader of our custom post-processing effect via a uniform and then sample it as follows:</p>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec4</span><span data-testid="content-line"> noise </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">uNoise</span><span data-testid="content-line">,</span><span data-testid="content-line"> gl_FragCoord</span><span data-testid="content-line">.</span><span data-testid="content-line">xy </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">128.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">float</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> noise</span><span data-testid="content-line">.</span><span data-testid="content-line">r</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<p>where <code>128.0</code> is the width/height of said texture. We also define the threshold as the red color channel of the resulting noise color we obtain from the sampling, given that we're using a grayscale texture, it doesn't matter much which value you pick.</p>

<p>Below is the resulting output when we use a blue noise texture to obtain our dithering threshold value:</p>

<p>As you can see, it feels less repetitive and structured than ordered dithering while also not being as <em>random</em> as white noise dithering; a nice middle ground.</p>

</section><section id="color-quantization-section"><h2 id="color-quantization">Color Quantization</h2>
<p>So far, all our dithering examples also converted the underlying scene to black and white, thus making us lose a lot of information and color. That is because:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We calculated our dithering threshold based on the pixel luminance, thus relying on a grayscale version of our scene.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We manually returned a black or white pixel based on the threshold value relative to the luminance.</p></li>
</ul>
<p>That technique is commonly referred to as <strong>luminance-based dithering</strong> and the color conversion used here compresses the color palette to 2-bit: each pixel of the resulting scene with our post-processing effect applied is either black or white, and any shade in-between appears to us through dithering.</p>
<p>This <em>color compression</em> is known as <strong>color quantization</strong>, and it supports more than just black and white pixels as we'll see in this section.</p>
<h3 id="shades-of-gray-and-colors">Shades of gray and colors</h3>
<p>Manually setting the colors of our dithering pattern can quickly get out of hand, especially with large color palettes. Instead, to get more than just a black or white pixel and leverage shades of gray, we'll use a formula to find the nearest neighboring color of a given pixel color based on the total number of colors we want to output in our effect:</p>
<p><code>floor(color * (n - 1) + 0.5)/n - 1</code> where <code>n</code> is the total number of color.</p>
<p>For example, if we wanted only two colors in our final color palette we would get a value of:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p><code>vec3(0.0)</code> for the color <code>vec3(0.3)</code> i.e. black</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p><code>vec3(1.0)</code> for the color <code>vec3(0.6)</code> i.e. white</p></li>
</ul>
<p>If we were to increase the number of colors we would get more shades of gray in the case of our grayscale scene.</p>
<div><div><p data-testid="codesnippet-title">Grayscale color quantization implemented in our custom effect</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec3</span><span data-testid="content-line"> </span><span data-testid="content-line">dither</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">float</span><span data-testid="content-line"> lum</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">lum</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> x </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>5</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> y </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> bayerMatrix8x8</span><span data-testid="content-line">[</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> x</span><span data-testid="content-line">]</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">+=</span><span data-testid="content-line"> threshold</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>9</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>10</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>11</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>


<figure><div tabindex="0" role="slider" aria-label="Ordered dithering with 2 VS 4 color quantization. Notice how the 4-color variant yields a better looking gradient." aria-valuemin="0" aria-valuemax="100" aria-valuenow="50"><p><img alt="Before" loading="eager" width="700" height="364" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color"></p><p><img alt="After" loading="eager" width="700" height="364" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/4-color 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/4-color 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/4-color"></p><div id="slider-line"><p><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img" style="transform:rotate(180deg)"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></p></div></div><figcaption>Ordered dithering with 2 VS 4 color quantization. Notice how the 4-color variant yields a better looking gradient.</figcaption></figure>
<p>This formula doesn't just work for shades of gray, we can use it directly on the original pixel color to compute its nearest neighbor:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>for a two-color palette, we'll get the 2 possible values for each color channel thus 2^3 = 8 colors</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>for a four-color palette, it would be 4^3 = 64 colors</p></li>
</ul>
<div><div><p data-testid="codesnippet-title">Color quantization implemented in our custom effect</p></div><pre><div data-testid="highlight-line"><p>1</p><p><span><span data-testid="content-line">vec3</span><span data-testid="content-line"> </span><span data-testid="content-line">dither</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> color</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> x </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> y </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> bayerMatrix8x8</span><span data-testid="content-line">[</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> x</span><span data-testid="content-line">]</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">+=</span><span data-testid="content-line"> threshold</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>7</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>9</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>

<p>This quantization technique lets us approximate the look and feel of older graphics. We can obtain color palettes that are more in line with what computers and consoles could output back in the day.</p>

<h3 id="custom-color-palettes">Custom color palettes</h3>
<p>We now know a technique to reduce the number of colors in our final render to an arbitrary number, but what about reducing it to an arbitrary set of colors?</p>
<p>In his <a href="https://www.youtube.com/watch?v=8wOUe32Pt-E&amp;ab_channel=Acerola">video on quantization and dithering</a>, <a href="https://twitter.com/Acerola_t">@Acerola_t</a> introduces a technique to do just that by using the value of a grayscale color palette to sample a texture defining a custom color palette.</p>
<p>For example, if our last grayscale example scene from earlier sets the color number to four, we will get the following grayscale values:</p>
<figure><p><img alt="Diagram showcasing how to use the grayscale values to sample a texture containing the same amount of colors" loading="lazy" width="700" height="362" decoding="async" data-nimg="1" sizes="100vw" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 640w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 750w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 828w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 1080w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 1200w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 1920w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 2048w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 3840w" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture"></p><figcaption>Diagram showcasing how to use the grayscale values to sample a texture containing the same amount of colors</figcaption></figure>
<p>These values correspond to the horizontal values of the UV coordinates of our color palette texture, thus letting us use those values to sample the texture and get the custom colors from it:</p>
<div><div><p data-testid="codesnippet-title">Using quantization grayscale value to sample custom color palette texture"</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec3</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line">13</span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">dither</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">float</span><span data-testid="content-line"> lum</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">lum</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> x </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>5</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> y </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> bayerMatrix8x8</span><span data-testid="content-line">[</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> x</span><span data-testid="content-line">]</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">+=</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.2</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>9</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>10</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>11</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>13</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> paletteColor </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">palette</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">r</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>If we were to apply that technique to the previous scene, this is what the final output would look like:</p>

<p>I'd encourage you to fork this demo and try with:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>different textures</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>different number of colors</p></li>
</ul>
<p>The only thing to pay attention to is to keep the number of color blocks in your palette texture the same as the number of color you set in your custom effect.</p>
<h3 id="hue-lightness-based-color-quantization">Hue-lightness-based color quantization</h3>
<p>In his article <a href="http://alex-charlton.com/posts/Dithering_on_the_GPU/">Dithering on the GPU</a> Alex Charlton introduces an alternative color quantization technique. Instead of using the quantization formula we introduced at the beginning of this section, he relies on the hue of a color to find its closest neighboring colors from an arbitrary palette and the lightness of those colors to obtain the ordered dithering pattern.</p>
<p>To do so, he proceeds as follows:</p>
<ol>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>For each pixel, convert the color to HSL (Hue Saturation Lightness).</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Find its two closest neighbors in "hue" from the arbitrary color palette defined statically or provided via a uniform.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Get the distance between the pixel and its closest color over the distance between the previously obtained colors.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Compare this distance with the threshold value from the Bayer Matrix and, based on the result pick the first or second closest color.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Get the distance between the two closest lightness that match the original pixel's color.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Compare this distance with the threshold value from the Bayer Matrix and, based on the result pick the first or second lightness to set in the final color.</p></li>
</ol>
<p>I vividly recommend taking the time to read the full article as it goes in-depth into an original and more artistic dithering process. Below you'll find the demo I re-implemented from the process showcased in the article. It also features some of the missing functions the author did not include in their post.</p>

</section><section id="pixelization-section"><h2 id="pixelization">Pixelization</h2>
<p>We now know how to:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Reduce the number of colors of a given scene to a specific number or an arbitrary color palette.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Use dithering to <em>get back</em> some of the details of the scene in the form of a dithering pattern like shadows or color gradients.</p></li>
</ul>
<p>In this section, we will look at some techniques to <em>downsample</em> the final output of our scene to get a more <strong>pixelated</strong> look and see our dithering and quantization process shine at lower resolutions.</p>
<p>The key to getting a pixelated version of our original scene is to remap the UV coordinate system used in our effect shader and snap it to a grid so, once sampled, the texture from our input buffer appears as if it were at a lower resolution.</p>
<div><div><p data-testid="codesnippet-title">Pixelating a texture in GLSL</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainImage</span><span data-testid="content-line">(</span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> inputColor</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">out</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> outputColor</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> normalizedPixelSize </span><span data-testid="content-line">=</span><span data-testid="content-line"> pixelSize </span><span data-testid="content-line">/</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>3</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uvPixel </span><span data-testid="content-line">=</span><span data-testid="content-line"> normalizedPixelSize </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">uv </span><span data-testid="content-line">/</span><span data-testid="content-line"> normalizedPixelSize</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>5</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">inputBuffer</span><span data-testid="content-line">,</span><span data-testid="content-line"> uvPixel</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">dither</span><span data-testid="content-line">(</span><span data-testid="content-line">uvPixel</span><span data-testid="content-line">,</span><span data-testid="content-line"> color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>In the code snippet above:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We define the size of our pixel via the <code>pixelSize</code> uniform.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We divide this value by the resolution of our scene to convert it to a normalized texture coordinate ranging from 0 to 1.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We snap the UV coordinate to the grid defined by <code>uv/normalizedPixelSize</code> using the <code>floor</code> function.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We rescale the snapped UV coordinates to the original UV space by multiplying the result by <code>normalizedPixelSize</code>.</p></li>
</ul>
<p>The demo below adds this process along with an additional uniform for you to tweak the pixel size used in our scene:</p>

<p>Notice how the higher the value of <code>pixelSize</code> is, the more pixelated our scene becomes.</p>
<p>On top of that, we can see that our dithering pattern becomes less and less visible as the pixel size increases: there are not enough pixels in the final output to get any pattern at all.
We'll have to strike the right balance between dithering pattern and pixel size to get the most compelling effect.</p>
<p>With this added to our effect, we have all the ingredients to produce gorgeous pixel art pieces or pixelated 3D scenes! One thing I immediately tried upon wrapping up this post-processing effect was to try it on top of some of my earlier shader work, like in <a href="https://r3f.maximeheckel.com/dithered-waves">my scene titled Dithering Waves</a> where I applied a grayscale version of it on top of a simple scene rendering a domain wrapping texture using Fractal Brownian Motion, inspired by <a href="https://iquilezles.org/articles/warp/">Inigo Quilez' article</a> on the matter.</p>


<p>To experiment with <a href="https://rauno.me/craft/contrasting-aesthetics">contrasting aesthetics</a>, I also wanted to try out ordered dithering and color quantization on some of my Raymarching work from last year. The ordered pattern contrasts nicely with the more organic nature of some of those scenes, especially at lower resolutions. Below are two examples that I particularily enjoyed:</p>
<figure></figure>
<figure></figure>
</section><section id="cathode-ray-tube-effect-section"><h2 id="cathode-ray-tube-effect">Cathode-Ray Tube effect</h2>
<p>While pixelization brings us one step closer to an accurate retro post-processing effect, there is one essential aspect of this effect that's missing: emulating the look of a good ol' CRT monitor.</p>
<p>CRTs work differently than our current displays. Thus, the best we can do here is to approach the look and feel of those old monitors by stacking a series of effects in our custom shader effect. The first and most fundamental effect that we'll work on, that also highlights the inner workings of CRTs, is the RGB cell pattern from the display.</p>

<h3 id="rgb-cells">RGB Cells</h3>
<p>First and foremost, let's look at how CRT displays work so we can reproduce the effect as accurately as possible. Those monitors have 3 electron guns for each of the color channels (red, green, and blue) that run across the screen and excite their corresponding phosphors, which in return emit light to form an image. To prevent those beams from hitting the wrong phosphor dots and causing color issues on the final image, CRTs use a <strong>shadow mask</strong> with a metal plate made of tiny holes. They can have many different configurations which yield different <em>mask types</em>.</p>
<p>In this section, we'll attempt to emulate the Schiltzmaske: an aperture grill where each column is staggered by half a cell height.</p>
<figure><p><img alt="Diagram showcasing the staggered RGB cells shadow mask effect on a sample scene" loading="lazy" width="700" height="362" decoding="async" data-nimg="1" sizes="100vw" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 640w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 750w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 828w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 1080w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 1200w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 1920w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 2048w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 3840w" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells"></p><figcaption>Diagram showcasing the staggered RGB cells shadow mask effect on a sample scene</figcaption></figure>
<p>This implementation could also allow us to try to get another mask type called Streifermaske, which is similar except that it does not feature the staggered cells and only features a mask on its column.</p>
<p>The implementation of such a "pixel pattern" in GLSL goes as follows:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We first need to define our RGB cells and their subcells: a slot for each red, green, and blue channel.</p></li>
</ul>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec2</span><span data-testid="content-line"> pixel </span><span data-testid="content-line">=</span><span data-testid="content-line"> uv </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec2</span><span data-testid="content-line"> coord </span><span data-testid="content-line">=</span><span data-testid="content-line"> pixel </span><span data-testid="content-line">/</span><span data-testid="content-line"> pixelSize</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec2</span><span data-testid="content-line"> subcoord </span><span data-testid="content-line">=</span><span data-testid="content-line"> coord </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">3</span><span data-testid="content-line">,</span><span data-testid="content-line">1</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec2</span><span data-testid="content-line"> cellOffset </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">mod</span><span data-testid="content-line">(</span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">coord</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">3.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We create a cell "offset" for every two cells: some will have an offset of <code>vec2(0.0)</code> and some of <code>vec2(0.0, 0.5)</code>, thus creating the vertical <em>staggered effect</em> of our shadow mask.</p></li>
</ul>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec2</span><span data-testid="content-line"> cellOffset </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">mod</span><span data-testid="content-line">(</span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">coord</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">3.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We pick which subcell the current pixel belongs to and output the corresponding subcell color based on the subcell index.</p></li>
</ul>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">float</span><span data-testid="content-line"> ind </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">mod</span><span data-testid="content-line">(</span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">subcoord</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">3.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec3</span><span data-testid="content-line"> maskColor </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">ind </span><span data-testid="content-line">==</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> ind </span><span data-testid="content-line">==</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> ind </span><span data-testid="content-line">==</span><span data-testid="content-line"> </span><span data-testid="content-line">2.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">2.0</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We now need to draw the borders of our masks. The first step is to create a set of UV coordinates for each subcell, then make a border vector that gets higher values in the edges of each subcell and lower towards the center. Finally, we blend the result with the current mask color, thus creating a colored subcell with a border.</p></li>
</ul>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec2</span><span data-testid="content-line"> cellUv </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">fract</span><span data-testid="content-line">(</span><span data-testid="content-line">subcoord </span><span data-testid="content-line">+</span><span data-testid="content-line"> cellOffset</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">2.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec2</span><span data-testid="content-line"> border </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> cellUv </span><span data-testid="content-line">*</span><span data-testid="content-line"> cellUv </span><span data-testid="content-line">*</span><span data-testid="content-line"> MASK_BORDER</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line">maskColor</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">*=</span><span data-testid="content-line"> border</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> border</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>The last step is to create a <code>rgbCellUV</code> vector that we can use to sample the input buffer of our underlying scene and map it in this new CRT RGB Cell coordinate system.</p></li>
</ul>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec2</span><span data-testid="content-line"> rgbCellUV </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">coord</span><span data-testid="content-line">+</span><span data-testid="content-line">cellOffset</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> pixelSize </span><span data-testid="content-line">/</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<p>This results in a more accurate look and feel for a retro post-processing effect. Those are the types of details that can make the whole difference when making a 3D scene for the web.</p>
<figure><div tabindex="0" role="slider" aria-label="Pixelization VS RGB Cell shadow mask effect. Notice how the output appears slightly sharper in the RGB Cell variant." aria-valuemin="0" aria-valuemax="100" aria-valuenow="50"><p><img alt="Before" loading="eager" width="700" height="370" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/pixeleffect2 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/pixeleffect2 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/pixeleffect2"></p><p><img alt="After" loading="eager" width="700" height="370" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbeffect2 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbeffect2 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbeffect2"></p><div id="slider-line"><p><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img" style="transform:rotate(180deg)"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></p></div></div><figcaption>Pixelization VS RGB Cell shadow mask effect. Notice how the output appears slightly sharper in the RGB Cell variant.</figcaption></figure>
<p>The demo below fully implements the process highlighted above, which yields a beautiful and soft CRT effect. Setting a high pixel size will also allow you to admire our subcells at work, lighting up individually based on the color of the underlying scene.</p>


<h3 id="curving-the-display">Curving the display</h3>
<p>CRTs were not flat like their LCD counterparts. Instead, they featured some slight curvature which we can emulate with a few lines of GLSL. To do so, much like we just did for our RGB cells shadow mask, we can remap our UV coordinates to introduce some curvature:</p>
<div><div><p data-testid="codesnippet-title">Modifying our UVs to introduce curvature to our effect</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainImage</span><span data-testid="content-line">(</span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> inputColor</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">out</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> outputColor</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> curveUV </span><span data-testid="content-line">=</span><span data-testid="content-line"> uv </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">2.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> offset </span><span data-testid="content-line">=</span><span data-testid="content-line"> curveUV</span><span data-testid="content-line">.</span><span data-testid="content-line">yx </span><span data-testid="content-line">*</span><span data-testid="content-line"> curve</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line">  curveUV </span><span data-testid="content-line">+=</span><span data-testid="content-line"> curveUV </span><span data-testid="content-line">*</span><span data-testid="content-line"> offset </span><span data-testid="content-line">*</span><span data-testid="content-line"> offset</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>5</p><p><span><span data-testid="content-line">  curveUV </span><span data-testid="content-line">=</span><span data-testid="content-line"> curveUV </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>In the code snippet above:</p>
<ol>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We convert our UV coordinates range to a new range of <code>[-1, 1]</code> as we want the curvature to be <em>centered</em> relative to the screen.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Swapping the x and y components of our UV coordinates and multiplying by a <code>CURVE_INTENSITY</code> variable lets us define the strength/offset of our curvature. In this case, the offset will be stronger at the corners and not as strong as we reach the center of both the x and y-axis.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Finally, we want our curvature to be quadratic, i.e. stronger the closer we get to the fringes of the screen. We then convert the resulting UV coordinates back to a range of <code>[0, 1]</code> allowing us to use it in our shader as the <em>base</em> UVs.</p></li>
</ol>
<p>Using those new UV coordinates, we can draw the <em>edges</em> of our CRT using <code>smoothstep</code>:</p>
<div><div><p data-testid="codesnippet-title">Drawing edges of our curved CRT using curveUV</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec2</span><span data-testid="content-line"> edge </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">smoothstep</span><span data-testid="content-line">(</span><span data-testid="content-line">0.</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.02</span><span data-testid="content-line">,</span><span data-testid="content-line"> curveUV</span><span data-testid="content-line">)</span><span data-testid="content-line">*</span><span data-testid="content-line">(</span><span data-testid="content-line">1.</span><span data-testid="content-line">-</span><span data-testid="content-line">smoothstep</span><span data-testid="content-line">(</span><span data-testid="content-line">1.</span><span data-testid="content-line">-</span><span data-testid="content-line">0.02</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">1.</span><span data-testid="content-line">,</span><span data-testid="content-line"> curveUV</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">*=</span><span data-testid="content-line"> edge</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> edge</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<p>This gives us black curved edges on the top, bottom, left, and right sides of the display. The demo below implements this curvature element to the effect we've been iterating on since the beginning of this blog post and also lets you tweak the curvature intensity from 0 (flat) to 0.5 (realistically curved, anything higher than that is "too much").</p>


<h3 id="scanlines-distortion-and-final-touches">Scanlines, distortion, and final touches</h3>
<p>In this last part, I wanted to walk you through some of the final touches I added to my own retro post-processing effect to make it as accurate as possible.</p>
<p>One of the first tweaks I felt was necessary was to add some slight chromatic aberration when sampling the input buffer of our effect, which we can find the code of in <a href="https://blog.maximeheckel.com/posts/refraction-dispersion-and-other-shader-light-effects/">Refraction, dispersion, and other shader light effects</a>. Due to the screen curvature and some imperfect alignments of the electron beams of the CRT, it was frequent that color channels would appear slightly offset, yielding a slightly blurred image.</p>
<div><div><p data-testid="codesnippet-title">Arbitrary chromatic aberration applied to our effect</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainImage</span><span data-testid="content-line">(</span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> inputColor</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">out</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> outputColor</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>5</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">inputBuffer</span><span data-testid="content-line">,</span><span data-testid="content-line"> rgbCellUV </span><span data-testid="content-line">+</span><span data-testid="content-line"> SPREAD</span><span data-testid="content-line">)</span><span data-testid="content-line">.</span><span data-testid="content-line">r</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>6</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">inputBuffer</span><span data-testid="content-line">,</span><span data-testid="content-line"> rgbCellUV</span><span data-testid="content-line">)</span><span data-testid="content-line">.</span><span data-testid="content-line">g</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>7</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">inputBuffer</span><span data-testid="content-line">,</span><span data-testid="content-line"> rgbCellUV </span><span data-testid="content-line">-</span><span data-testid="content-line"> SPREAD</span><span data-testid="content-line">)</span><span data-testid="content-line">.</span><span data-testid="content-line">b</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>9</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">dither</span><span data-testid="content-line">(</span><span data-testid="content-line">rgbCellUV</span><span data-testid="content-line">,</span><span data-testid="content-line"> color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>Moreover, due to the inner workings of CRTs we highlighted earlier, some <strong>Bloom</strong> may also occur. We can consider this using the <code>Bloom</code> component from <code>@react-three/postprocessing</code>.</p>
<div><div><p data-testid="codesnippet-title">Adding Bloom within our EffectComposer</p></div><pre><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">const</span><span data-testid="content-line"> spaceship </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">useRef</span><span data-testid="content-line">(</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">const</span><span data-testid="content-line"> effect </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">useRef</span><span data-testid="content-line">(</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>7</p><p><span><span data-testid="content-line">      </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">group</span><span data-testid="content-line"> </span><span data-testid="content-line">rotation</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">[</span><span data-testid="content-line">0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">Math</span><span data-testid="content-line">.</span><span data-testid="content-line">PI</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">2</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0</span><span data-testid="content-line">]</span><span data-testid="content-line">}</span><span data-testid="content-line">&gt;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line">        </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">Spaceship</span><span data-testid="content-line"> </span><span data-testid="content-line">ref</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">spaceship</span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">/&gt;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>11</p><p><span><span data-testid="content-line">        </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">RetroEffect</span><span data-testid="content-line"> </span><span data-testid="content-line">ref</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">effect</span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">/&gt;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>14</p><p><span><span data-testid="content-line">          </span><span data-testid="content-line">luminanceThreshold</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">0.05</span><span data-testid="content-line">}</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>15</p><p><span><span data-testid="content-line">          </span><span data-testid="content-line">luminanceSmoothing</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">0.9</span><span data-testid="content-line">}</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>Finally, we can overlay the final output of our custom shader effect with horizontal scanlines running through the screen vertically:</p>
<div><div><p data-testid="codesnippet-title">Simple scanlines added on top of our effect output</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">float</span><span data-testid="content-line"> lines </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">sin</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">2000.0</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> time </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">100.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>We can also include some additional distortion to the UV coordinates of our effect by adding code to the <code>mainUv</code> function of our shader. Adding some slight imperfections like these can make our CRT look even more accurate. Below is a simple example, but feel free to further experiment with more complex distortion patterns:</p>
<div><div><p data-testid="codesnippet-title">Adding distortion in mainUv</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">float</span><span data-testid="content-line"> </span><span data-testid="content-line">noise</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> st</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>7</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> c </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">0.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> d </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>10</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> u </span><span data-testid="content-line">=</span><span data-testid="content-line"> f</span><span data-testid="content-line">*</span><span data-testid="content-line">f</span><span data-testid="content-line">*</span><span data-testid="content-line">(</span><span data-testid="content-line">3.0</span><span data-testid="content-line">-</span><span data-testid="content-line">2.0</span><span data-testid="content-line">*</span><span data-testid="content-line">f</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>12</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">return</span><span data-testid="content-line"> </span><span data-testid="content-line">mix</span><span data-testid="content-line">(</span><span data-testid="content-line">a</span><span data-testid="content-line">,</span><span data-testid="content-line"> b</span><span data-testid="content-line">,</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>13</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">(</span><span data-testid="content-line">cfloat </span><span data-testid="content-line">noise</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> st</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>18</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>19</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> c </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">0.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>20</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> d </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>22</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> u </span><span data-testid="content-line">=</span><span data-testid="content-line"> f</span><span data-testid="content-line">*</span><span data-testid="content-line">f</span><span data-testid="content-line">*</span><span data-testid="content-line">(</span><span data-testid="content-line">3.0</span><span data-testid="content-line">-</span><span data-testid="content-line">2.0</span><span data-testid="content-line">*</span><span data-testid="content-line">f</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>24</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">return</span><span data-testid="content-line"> </span><span data-testid="content-line">mix</span><span data-testid="content-line">(</span><span data-testid="content-line">a</span><span data-testid="content-line">,</span><span data-testid="content-line"> b</span><span data-testid="content-line">,</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>25</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">(</span><span data-testid="content-line">c </span><span data-testid="content-line">-</span><span data-testid="content-line"> a</span><span data-testid="content-line">)</span><span data-testid="content-line">*</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>29</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainUv</span><span data-testid="content-line">(</span><span data-testid="content-line">inout</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>30</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> shake </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">noise</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">sin</span><span data-testid="content-line">(</span><span data-testid="content-line">time </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">400.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">100.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0025</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>32</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> a</span><span data-testid="content-line">)</span><span data-testid="content-line">*</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>36</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainUv</span><span data-testid="content-line">(</span><span data-testid="content-line">inout</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>37</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> shake </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">noise</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">sin</span><span data-testid="content-line">(</span><span data-testid="content-line">time </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">400.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">100.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0025</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>

<p>We're finally done! Or at least I was satisfied enough to make this the stopping point of this article, you can still experiment and continue to tweak this shader at your heart's content! You can admire the final version of our retro post-processing effect below, which includes:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Color quantization to reduce the number of colors in our final output.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Pixelization and RGB Cell shadow mask effect to create realistic downsampling typically visible in old CRT displays.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Ordered Dithering which alleviates the low pixel and color count in the output image and gives us back some details of the underlying scene in the form of pixel patterns.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Screen Curvature, scanlines with distortions, bloom, and chromatic aberration as final touches to make our effect <em>pop</em>.</p></li>
</ul>

</section><section id="conclusion-section"><h2 id="conclusion">Conclusion</h2>
<p>Through the many examples and techniques we covered, I hope this article demonstrated how powerful custom shader effects are and how transformative they can be when applied on top of your own WebGL/3D work. This particular "Retro" effect is, of course, just a particular case of a beautiful effect you can build, a drop in the ocean of what's possible. The underlying <strong>dithering</strong>, <strong>quantization</strong>, and <strong>pixelization/RGB Cells</strong> that we learned about are applicable on their own as well as infinitely tweakable to make your work stand out in the ever-growing scene of 3D websites and digital art.</p>
<p>I'm looking forward to seeing what you will come up with now that you know pretty much everything I do on the matter (there are no excuses not to build!), there's a lot you can create by combining the effect and building blocks we've just seen. Meanwhile, I'll keep working through my endless list of shader techniques to study, and the many other post-processing effects and styles I'm trying to mimic. As always, I'll report back on my findings 😊.</p></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GarminDB (305 pts)]]></title>
            <link>https://github.com/tcgoetz/GarminDB</link>
            <guid>42912515</guid>
            <pubDate>Sun, 02 Feb 2025 22:27:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/tcgoetz/GarminDB">https://github.com/tcgoetz/GarminDB</a>, See on <a href="https://news.ycombinator.com/item?id=42912515">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a href="https://github.com/tcgoetz/GarminDB/wiki/Screenshots"><img src="https://raw.githubusercontent.com/tcgoetz/GarminDB/master/Screenshots/Screen_Shot_jupyter_daily_sm.jpg" alt="Screen shot of a daily graph"></a></p>
<hr>
<p dir="auto"><a href="https://github.com/tcgoetz/GarminDB/wiki/Screenshots"><img src="https://raw.githubusercontent.com/tcgoetz/GarminDB/master/Screenshots/Screen_Shot_activity_sm.jpg" alt="Screen shot of an activity display"></a></p>
<hr>
<p dir="auto"><a href="https://github.com/tcgoetz/GarminDB/wiki/Screenshots"><img src="https://github.com/tcgoetz/GarminDB/raw/master/Screenshots/Screen_Shot_daily_trend.png" alt="Screen shot of daily trend "></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">GarminDB</h2><a id="user-content-garmindb" aria-label="Permalink: GarminDB" href="#garmindb"></a></p>
<p dir="auto"><a href="https://www.python.org/" rel="nofollow">Python</a> scripts for parsing health data into and manipulating data in a <a href="http://sqlite.org/" rel="nofollow">SQLite</a> database. SQLite is a light weight database that doesn't require a server.</p>
<p dir="auto">What they can do:</p>
<ul dir="auto">
<li>Automatically download and import Garmin daily monitoring files (all day heart rate, activity, climb/descend, stress, and intensity minutes) from the user's Garmin Connect "Daily Summary" page.</li>
<li>Extract sleep, weight, and resting heart rate data from Garmin Connect, store it as JSON files, and import it into the DB.</li>
<li>Download and import activity files from Garmin Connect. A summary table for all activities and more detailed data for some activity types. Lap and record entries for activities.</li>
<li>Summarizing data into a DB with tables containing daily, weekly, monthly, and yearly summaries.</li>
<li>Graph your data from the commandline or with Jupyter notebooks.</li>
<li>Retain downloaded JSON and FIT files so that the DB can be regenerated without connecting to or redownloading data from Garmin Connect.</li>
<li>Export activities as TCX files.</li>
</ul>
<p dir="auto">Once you have your data in the DB, I recommend using a supplied Jupyter notebooks, third party Jupyter notebooks, and/or SQLite browser like <a href="http://sqlitestudio.pl/" rel="nofollow">SQLite Studio</a>, <a href="https://www.heidisql.com/" rel="nofollow">HeidiSQL</a>, or <a href="https://sqlitebrowser.org/" rel="nofollow">DB Browser for SQLite</a> for browsing and working with the data. The scripts create some default <a href="http://www.tutorialspoint.com/sqlite/sqlite_views.htm" rel="nofollow">views</a> in the DBs that make browsing the data easier.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Using It</h2><a id="user-content-using-it" aria-label="Permalink: Using It" href="#using-it"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Releases</h2><a id="user-content-releases" aria-label="Permalink: Releases" href="#releases"></a></p>
<p dir="auto">GarminDb releases are hosted on <a href="https://pypi.org/project/garmindb/" rel="nofollow">PyPI</a>. GarminDb requires <a href="https://www.python.org/" rel="nofollow">Python</a> 3.x. With Python installed, install the latest release with <a href="https://pypi.org/project/pip/" rel="nofollow">pip</a> by running <code>pip install garmindb</code> in a terminal.</p>
<ul dir="auto">
<li>Copy <a href="https://github.com/tcgoetz/GarminDB/raw/master/garmindb/GarminConnectConfig.json.example"><code>GarminConnectConfig.json.example</code></a> to <code>~/.GarminDb/GarminConnectConfig.json</code>, edit it, and add your Garmin Connect username and password and adjust the start dates to match the dates of your data in Garmin Connect.</li>
<li>Starting out: download all of your data and create your db by running <code>garmindb_cli.py --all --download --import --analyze</code> in a terminal.</li>
<li>Incrementally update your db by downloading the latest data and importing it by running <code>garmindb_cli.py --all --download --import --analyze --latest</code> in a terminal.</li>
<li>Ocassionally run <code>garmindb_cli.py --backup</code> to backup your DB files.</li>
</ul>
<p dir="auto">Update to the latest release with <code>pip install --upgrade garmindb</code>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">From Source</h2><a id="user-content-from-source" aria-label="Permalink: From Source" href="#from-source"></a></p>
<p dir="auto">The scripts are automated with <a href="https://www.gnu.org/software/make/manual/make.html" rel="nofollow">Make</a>. Run the Make commands in a terminal window.</p>
<ul dir="auto">
<li>Git clone GarminDB repo using the <a href="https://github.com/git-guides/git-clone#git-clone-with-ssh">SSH clone method</a>. The submodules require you to use SSH and not HTTPS. Get the command from the green button on the project home page.</li>
<li>Run <code>make setup</code> in the cloned tree to get the scripts ready to process data.</li>
<li>Copy <a href="https://github.com/tcgoetz/GarminDB/raw/master/garmindb/GarminConnectConfig.json.example"><code>GarminConnectConfig.json.example</code></a> to <code>~/.GarminDb/GarminConnectConfig.json</code>, edit it, and add your Garmin Connect username and password and adjust the start dates to match the dates of your data in Garmin Connect.</li>
<li>Run <code>make create_dbs</code> once to fetch and process for you data.</li>
<li>Keep all of your local data up to date by periodically running only one command: <code>make</code>.</li>
</ul>
<p dir="auto">There is more help on <a href="https://github.com/tcgoetz/GarminDB/wiki/Usage">using the program</a> in the wiki.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Jupyter Notebooks</h2><a id="user-content-jupyter-notebooks" aria-label="Permalink: Jupyter Notebooks" href="#jupyter-notebooks"></a></p>
<p dir="auto">Jupyter notebooks for analzing data from the database can be found in the 'Jupyter' directory in the source tree. <a href="https://github.com/tcgoetz/GarminDB/wiki/Related-Projects#jupyter-notebooks">Links</a> to user submitted notebooks can be found in the wiki.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Plugins</h2><a id="user-content-plugins" aria-label="Permalink: Plugins" href="#plugins"></a></p>
<p dir="auto">Plugins allow the user to expand the types of data that are processed and stored in the database. GarminDb already has a number of plugins for handling data from third-party Connect IQ apps and data fields. Read more about plugins <a href="https://github.com/tcgoetz/GarminDbPlugins">here</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Support This Project</h2><a id="user-content-support-this-project" aria-label="Permalink: Support This Project" href="#support-this-project"></a></p>
<p dir="auto">Do you find this project useful? <a href="https://www.buymeacoffee.com/tcgoetz" rel="nofollow"><img src="https://camo.githubusercontent.com/67f1b859c85032255c81e5f861a5f572fa25813c2ea5e7623b7efa91c395e37f/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f64656661756c742d6f72616e67652e706e67" alt="Buy Me A Coffee" height="41" width="174" data-canonical-src="https://cdn.buymeacoffee.com/buttons/default-orange.png"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Success Stories</h2><a id="user-content-success-stories" aria-label="Permalink: Success Stories" href="#success-stories"></a></p>
<p dir="auto">Find out who's using GarminDb on what platforms, OSes, and python versions <a href="https://github.com/tcgoetz/GarminDB/wiki/Success-Stories">here</a>. If you're using GarminDB and your scenario isn't listed send me a message or file an issue with your success case.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Notes</h2><a id="user-content-notes" aria-label="Permalink: Notes" href="#notes"></a></p>
<ul dir="auto">
<li>You may get a DB version exception after updating the code, this means that the DB schema was updated and you need to rebuild your DBs by running <code>garmindb_cli.py --rebuild_db</code>. Your DBs will be regenerated from the previously downloaded data files. All of your data will not be redownloaded from Garmin.</li>
<li>The scripts were developed on MacOS. Information or patches on using these scripts on other platforms are welcome.</li>
<li>When a database update finishes, a summary of the data in the DB will be saved to stats.txt. The output includes the date ranges included in the downloaded daily monitoring files and activities. It includes the number of records for daily monitoring, activities, sleep, resting heart rate, weight, etc. Use the summary information to determine if all of your data has been downloaded from Garmin Connect. If not, adjust the dates in GarminConnectConfig.json and runt he download again.</li>
<li>In <code>GarminConnectConfig.json</code> the "steps" element of the "course_views" is list of course ids that per course database views will be generated for. The database view allows you to compare all activities from that course.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Bugs and Debugging</h2><a id="user-content-bugs-and-debugging" aria-label="Permalink: Bugs and Debugging" href="#bugs-and-debugging"></a></p>
<ul dir="auto">
<li>If you have issues, file a bug here on the project. See the Issues tab at the top of the project page. Run <code>make bugreport</code> or <code>garmindb_bug_report.py</code> and include bugreport.txt in your bug report.</li>
<li>Besides errors that appear on the screen, one of the first places to look for more information is the log files (garmindb.log).</li>
<li>If you're having issues with a particular data files, please considering sharing so I can debug it and add support.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">Please submit a pull request targeting the develop branch and add your self to the contributors file. Run <code>make flake8</code> at the top level and fix all errors before submitting your pull request.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[F-strings for C++26 proposal [pdf] (172 pts)]]></title>
            <link>https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3412r0.pdf</link>
            <guid>42912438</guid>
            <pubDate>Sun, 02 Feb 2025 22:19:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3412r0.pdf">https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3412r0.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=42912438">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Emergence of a second law of thermodynamics in isolated quantum systems (127 pts)]]></title>
            <link>https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.6.010309</link>
            <guid>42912412</guid>
            <pubDate>Sun, 02 Feb 2025 22:15:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.6.010309">https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.6.010309</a>, See on <a href="https://news.ycombinator.com/item?id=42912412">Hacker News</a></p>
Couldn't get https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.6.010309: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Don't make fun of renowned author Dan Brown (2013) (234 pts)]]></title>
            <link>https://onehundredpages.wordpress.com/2013/06/12/dont-make-fun-of-renowned-dan-brown/</link>
            <guid>42912133</guid>
            <pubDate>Sun, 02 Feb 2025 21:42:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://onehundredpages.wordpress.com/2013/06/12/dont-make-fun-of-renowned-dan-brown/">https://onehundredpages.wordpress.com/2013/06/12/dont-make-fun-of-renowned-dan-brown/</a>, See on <a href="https://news.ycombinator.com/item?id=42912133">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
		<main id="main" role="main">

		
			
<article id="post-945">
	
	<!-- .entry-header -->

	<div>
		<div>
<p><a href="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg"><img data-attachment-id="946" data-permalink="https://onehundredpages.wordpress.com/2013/06/12/dont-make-fun-of-renowned-dan-brown/dan-brown/" data-orig-file="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg" data-orig-size="236,363" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}" data-image-title="dan brown" data-image-description="" data-image-caption="" data-medium-file="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg?w=195" data-large-file="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg?w=236" alt="dan brown" src="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg?w=768" srcset="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg 236w, https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg?w=98&amp;h=150 98w" sizes="(max-width: 236px) 100vw, 236px"></a></p>
<p>Renowned author Dan Brown woke up in his luxurious four-poster bed in his expensive $10 million house – and immediately he felt angry. Most people would have thought that the 48-year-old man had no reason to be angry. After all, the famous writer had a new book coming out. But that was the problem. A new book meant an inevitable attack on the rich novelist by the wealthy wordsmith’s fiercest foes. The critics.</p>
</div>
<p>Renowned author Dan Brown hated the critics. Ever since he had become one of the world’s top renowned authors they had made fun of him. They had mocked bestselling book&nbsp;<i>The Da Vinci Code</i>, successful novel&nbsp;<i>Digital Fortress</i>, popular tome&nbsp;<i>Deception Point</i>, money-spinning volume&nbsp;<i>Angels &amp; Demons</i>&nbsp;and chart-topping work of narrative fiction&nbsp;<i>The Lost Symbol</i>.</p>
<p>The critics said his writing was clumsy, ungrammatical, repetitive and repetitive. They said it was full of unnecessary tautology. They said his prose was swamped in a sea of mixed metaphors. For some reason they found something funny in sentences such as “His eyes went white, like a shark about to attack.”&nbsp;<i>They even say my books are packed with banal and superfluous description</i>, thought the 5ft 9in man. He particularly hated it when they said his imagery was nonsensical. It made his insect eyes flash like a rocket.</p>
<p>Renowned author Dan Brown got out of his luxurious four-poster bed in his expensive $10 million house and paced the bedroom, using the feet located at the ends of his two legs to propel him forwards. He knew he shouldn’t care what a few jealous critics thought. His new book Inferno was coming out on Tuesday, and the 480-page hardback published by Doubleday with a recommended US retail price of $29.95 was sure to be a hit. Wasn’t it?</p>
<div>
<p><i>I’ll call my agent</i>, pondered the prosperous scribe. He reached for the telephone using one of his two hands. “Hello, this is renowned author Dan Brown,” spoke renowned author Dan Brown. “I want to talk to literary agent John Unconvincingname.”</p>
<p>“Mr Unconvincingname, it’s renowned author Dan Brown,” told the voice at the other end of the line. Instantly the voice at the other end of the line was replaced by a different voice at the other end of the line. “Hello, it’s literary agent John Unconvincingname,” informed the new voice at the other end of the line.</p>
<p>“Hello agent John, it’s client Dan,” commented the pecunious scribbler. “I’m worried about new book Inferno. I think critics are going to say it’s badly written.”</p>
<p>The voice at the other end of the line gave a sigh, like a mighty oak toppling into a great river, or something else that didn’t sound like a sigh if you gave it a moment’s thought. “Who cares what the stupid critics say?” advised the literary agent. “They’re just snobs. You have millions of fans.”</p>
<p><i>That’s true</i>, mused the accomplished composer of thrillers that combined religion, high culture and conspiracy theories. His books were read by everyone from renowned politician President Obama to renowned musician Britney Spears. It was said that a copy of&nbsp;<i>The Da Vinci Code</i>&nbsp;had even found its way into the hands of renowned monarch the Queen. He was grateful for his good fortune, and gave thanks every night in his prayers to renowned deity God.</p>
<p>“Think of all the money you’ve made,” recommended the literary agent. That was true too. The thriving ink-slinger’s wealth had allowed him to indulge his passion for great art. Among his proudest purchases were a specially commissioned landscape by acclaimed painter Vincent van Gogh and a signed first edition by revered scriptwriter William Shakespeare.</p>
<p>Renowned author Dan Brown smiled, the ends of his mouth curving upwards in a physical expression of pleasure. He felt much better. If your books brought innocent delight to millions of readers, what did it matter whether you knew the difference between a transitive and an intransitive verb?</p>
<p>“Thanks, John,” he thanked. Then he put down the telephone and perambulated on foot to the desk behind which he habitually sat on a chair to write his famous books on an Apple iMac MD093B/A computer. New book Inferno, the latest in his celebrated series about fictional Harvard professor Robert Langdon, was inspired by top Italian poet Dante. It wouldn’t be the last in the lucrative sequence, either. He had all the sequels mapped out. The Mozart Acrostic. The Michelangelo Wordsearch. The Newton Sudoku.</p>
<p>The 190lb adult male human being nodded his head to indicate satisfaction and returned to his bedroom by walking there. Still asleep in the luxurious four-poster bed of the expensive $10 million house was beautiful wife Mrs Brown. Renowned author Dan Brown gazed admiringly at the pulchritudinous brunette’s blonde tresses, flowing from her head like a stream but made from hair instead of water and without any fish in. She was as majestic as the finest sculpture by Caravaggio or the most coveted portrait by Rodin.&nbsp;<i>I like the attractive woman</i>, thought the successful man.</p>
<p>Perhaps one day, inspired by beautiful wife Mrs Brown, he would move into romantic poetry, like market-leading British rhymester John Keats.<i>That would be good</i>, opined the talented person, and got back into the luxurious four-poster bed. He felt as happy as a man who has something to be happy about and is suitably happy about it.</p>
<p>Inferno by Dan Brown 470pp, Bantam Press, rrp £20</p>

</div>

			
						</div><!-- .entry-content -->

	
	<!-- .entry-footer -->
</article><!-- #post-## -->

			
<!-- #comments -->

				<!-- .navigation -->
	
		
		</main><!-- #main -->
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Costa rican supermarket wins trademark battle against Nintendo (276 pts)]]></title>
            <link>https://ticotimes.net/2025/01/30/david-vs-goliath-costa-rican-super-mario-defeats-nintendo-in-court</link>
            <guid>42911842</guid>
            <pubDate>Sun, 02 Feb 2025 21:07:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ticotimes.net/2025/01/30/david-vs-goliath-costa-rican-super-mario-defeats-nintendo-in-court">https://ticotimes.net/2025/01/30/david-vs-goliath-costa-rican-super-mario-defeats-nintendo-in-court</a>, See on <a href="https://news.ycombinator.com/item?id=42911842">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-td-block-uid="tdi_70">

<p>A small Costa Rican supermarket has emerged victorious from a legal battle against the renowned video game giant, Nintendo. José Mario Alfaro González, owner of “Super Mario” in San Ramón de Alajuela, found himself in an unexpected legal showdown when he attempted to formally register his store’s name. In Costa Rica, the term “super” is often used as shorthand for “supermarket.”</p>



<p>What began as a routine trademark registration process turned into a clash of the titans when Nintendo of America filed an appeal, claiming exclusive rights to the “Super Mario” name. The video game behemoth, creator of iconic titles like Super Mario Bros., asserted that the name was registered under its <a href="https://ticotimes.net/2005/08/26/trademark-use-registration" target="_blank" rel="noreferrer noopener">trademark</a> in various classes, including clothing, games, and accessories.</p>



<p>However, Alfaro intended to register “Super Mario” specifically for international class 35, which covers “supply services for third parties of products from the basic food basket.” “We knew these big companies have vast resources to fight, and we had to think carefully,” said Edgardo Jiménez, Alfaro’s legal representative. “We even considered changing the supermarket’s name to avoid a lawsuit.”</p>



<p>But Alfaro and Jiménez persevered, and on January 21st, the National Registry issued a final notification in favor of “Super Mario” de San Ramón. It was game over for Nintendo, and the small Costa Rican business had won the legal bout. “We refuted all of Nintendo’s arguments, demonstrating their errors and our rightful claim,” Jiménez explained. “Although Nintendo’s registration covers 45 categories, it doesn’t include the specific class for suppliers of basic food products.”</p>



<p>As of yet, <a href="https://www.nintendo.com/us/" target="_blank" rel="noreferrer noopener">Nintendo</a> has not issued an official statement or comment on the outcome. This legal victory is a testament to the determination of a small Costa Rican entrepreneur who stood his ground against a global corporation, proving that even the smallest of players can triumph in the face of seemingly insurmountable odds.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A loophole used by Shein/Temu to ship packages to US tax-free (2024) (127 pts)]]></title>
            <link>https://www.businessinsider.com/shein-temu-de-minimis-tax-loophole-scrutiny-2024-1</link>
            <guid>42911511</guid>
            <pubDate>Sun, 02 Feb 2025 20:31:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.businessinsider.com/shein-temu-de-minimis-tax-loophole-scrutiny-2024-1">https://www.businessinsider.com/shein-temu-de-minimis-tax-loophole-scrutiny-2024-1</a>, See on <a href="https://news.ycombinator.com/item?id=42911511">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-component-type="content-lock" data-load-strategy="exclude" id="piano-inline-content-wrapper" data-piano-inline-content-wrapper="" data-user-status="anonymous" data-track-content="" data-post-type="post">
                                    <ul><li>A US tax rule called de minimis has gotten increased attention as Shein and Temu have grown.&nbsp;</li><li>Detractors say it creates unfair competition and allows companies to bypass trade laws.&nbsp;</li><li>Shein and Temu representatives said they support de minimis reform — as long as it's fair.&nbsp;</li></ul><p>As Shein and Temu <a target="_blank" href="https://www.businessinsider.com/temu-passes-shein-in-traffic-purchasing-visits-hasnt-surpassed-amazon-2023-9" data-analytics-product-module="body_link" rel="">grow their foothold in the US</a>, analysts and lawmakers are paying close attention to both companies' use of a special tax rule that some say should be eliminated completely.</p><!-- Excluded mobile ad on desktop --><p>The provision, known as "de minimis," allows importers to avoid paying duty and tax on shipments that are going to individual consumers and are worth less than $800 in total.</p><p>Shippers using de minimis also do not have to provide as much information to US Customs and Border Protection as shippers using more traditional methods would.<strong> </strong>Opponents of the rule argue it creates unfair competition, and the lack of in-depth screening could allow for the <a target="_blank" href="https://www.businessinsider.com/shein-and-temu-skirt-import-tariffs-us-lawmakers-fast-fashion-2023-6" data-analytics-product-module="body_link" rel="">import of goods</a> containing banned materials like <a target="_blank" href="https://www.businessinsider.com/temu-blamed-shoppers-for-buying-forced-labor-lawmakers-say-2023-6" data-analytics-product-module="body_link" rel="">cotton from Xinjiang</a>, where forced labor is common.</p><!-- Excluded mobile ad on desktop --><p>De minimis has been around since 1938 when Congress introduced the rule in order to speed up the processing of items that were so cheap that they would not generate significant tax revenue for the government. The limit for eligible items has been raised many times over the years, most recently going up to $800 from $200 in 2016.</p><p>Two bills aimed at reforming de minimis were introduced in Congress last June. One, introduced by Rep. Earl Blumenauer, aims to limit companies in "nonmarket" economies <strong>—</strong>&nbsp;or countries where prices do not follow market dynamics, such as China and Russia<strong> — </strong>and countries on priority watch lists from using de minimis shipments. The other bill, from Sen. Bill Cassidy and Sen. Tammy Baldwin, would ban de minimis shipments from China.</p><p>But some experts say it's unlikely the provision will go away anytime soon.</p><!-- Excluded mobile ad on desktop --><p>A US trade law and policy expert interviewed by Bank of America analysts put the odds of Blumenauer's bill passing the Senate at more than 50% but said it had a roughly 30% chance of passing overall "given issues in the House," according to a research note the bank published on January 5. The same expert said the bill introduced by Cassidy and Baldwin was unlikely to pass in Congress.</p><p>"While many retailers are likely in favor of these bills, groups like the US Chamber of Commerce or the Express Shippers Association may not be in favor of them since they generally are looking for fewer tariffs, not more," UBS analyst Jay Sole wrote in a research note in August. "Also, direct carriers, direct importers, and logistics companies may not be in favor of a change since their businesses may benefit from the $800 rule."</p><p>The provision is more likely to change — a prospect that both Shein and Temu have said they support.</p><!-- Excluded mobile ad on desktop --><h2>A 'paradigm shift'</h2><p>Shein and Temu are not the only companies to use the de minimis provision, but they have gained the attention of advocacy groups and lawmakers in part because of how quickly they have grown in the last year.</p>
                          
                          
                          
                                 
                          <p>Shein, which was founded in China in 2008 but moved its headquarters to Singapore in late 2021, <a target="_blank" href="https://www.businessinsider.com/what-is-shein-billion-dollar-fast-fashion-company-explained-2023-7" data-analytics-product-module="body_link" rel=""><u>filed confidentially</u></a> for a US IPO in November. It's reportedly looking for a valuation of $90 billion.</p><p>Temu, meanwhile, is owned by Chinese commerce giant Pinduoduo Holdings and headquartered in Boston. It has grown extremely fast since launching in the US in September 2022, outpacing many more established e-commerce companies in terms of app downloads and <a target="_blank" href="https://www.insiderintelligence.com/content/shoppers-spend-nearly-twice-long-on-temu-s-app-than-its-competitors" data-analytics-product-module="body_link" rel=" nofollow"><u>engagement</u></a>.</p><!-- Excluded mobile ad on desktop -->
                            <figure data-type="img" data-e2e-name="image-figure-image" data-media-container="image" itemscope="" itemtype="https://schema.org/ImageObject">
                            
                            
                            
                              <div>
                          
                            
                            <meta itemprop="contentUrl" content="https://i.insider.com/64da3c621f51cc001968df91">
                            <p><img src="data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg xmlns='http://www.w3.org/2000/svg' width='1' height='1'/%3E" data-content-type="image/jpeg" data-srcs="{&quot;https://i.insider.com/64da3c621f51cc001968df91&quot;:{&quot;contentType&quot;:&quot;image/jpeg&quot;,&quot;aspectRatioW&quot;:4032,&quot;aspectRatioH&quot;:3024}}" alt="flat lay image of Temu package, checkered pants, and pink heels">
                          </p></div>
                            
                            <span>
                                  <figcaption data-e2e-name="image-caption">
                                    Goods bought on Temu.
                                    
                            <span data-e2e-name="image-source" itemprop="creditText">
                            
                            Jennifer Ortakales Dawkins/Insider
                            
                            </span>
                                  </figcaption>
                                </span>
                            </figure>
                          <p>Shipping consultancy ShipMatrix estimates that Shein and Temu each ship more than a million packages to the US daily.</p><p>An interim 2023 report from the US House Select Committee on the Chinese Communist Party said that Shein and Temu "likely" account for more than 30% of all shipments made to the US under the de minimis provision. It added that almost 50% of all de minimis shipments to the US come from China.</p><p>Shipping directly from manufacturers to individual consumers helps Shein and Temu keep prices low. Wired reported in May that the <a target="_blank" href="https://www.wired.com/story/temu-is-losing-millions-of-dollars-to-send-you-cheap-socks/" data-analytics-product-module="body_link" rel=" nofollow"><u>average order on Temu was about $25</u></a>, while <a target="_blank" href="https://www.barrons.com/articles/shein-clothing-shopping-retail-challenger-16d512db" data-analytics-product-module="body_link" rel=" nofollow"><u>Shein's was about $70 as of April</u></a>, according to Barron's.</p><!-- Excluded mobile ad on desktop --><p>The Bank of America analysts wrote in their research note that if de minimis were to change or go away completely, it could be disruptive for these companies.</p><p>"Changes to the exemption could create a paradigm shift for retailers like Temu and Shein," Bank of America analysts wrote in the note. "The discount prices charged by both retailers are aided by the absence of duties and the lack of trade and customs infrastructure that would be required if this regulation did not exist."</p><p>The analysts added that they "wouldn't expect price increases to be well-accepted by the consumer."</p><!-- Excluded mobile ad on desktop --><p>Representatives for Shein and Temu pushed back on the notion that their businesses have relied on de minimis to grow and said that they support reforms to the provision if they are fair.</p><p>"Our success has come from our ability to leverage on-demand technology to bring the latest styles to customers efficiently and at an affordable price," a spokesperson for Shein said.</p><p>In a July letter to the American Apparel and Footwear Association, Shein's executive vice chairman, Donald Tang wrote that the company supports "responsible reform of the de minimis exemption."</p><!-- Excluded mobile ad on desktop --><p>"SHEIN believes the de minimis framework should be reformed to create a more level, transparent playing field — one where all retailers play by the same rules, and where the rules are applied evenly and equally, regardless of where a company is based or ships from," he wrote.</p><p>A spokesperson for Temu said its "supply-chain efficiencies and operational proficiencies" have been the primary drivers of its rapid growth.</p><p>"We are open to and supportive of any policy adjustments made by legislators that align with consumer interests. We believe that as long as these policies are fair, they won't influence the outcomes of competitive business dynamics," they said. "We also see such reforms as potential avenues to alleviate concerns among various stakeholders, fostering greater comprehension and emphasizing the significance of each player in the market ecosystem."</p><!-- Excluded mobile ad on desktop --><p>The two companies also detailed their practices for remaining compliant with import laws. The Shein spokesperson said that the company has a "zero-tolerance policy for forced labor" and requires its manufacturers to only source cotton from approved regions. The Temu spokesperson said it requires its sellers to sign an agreement that they will maintain compliant business practices, and that "the use of forced, penal, or child labor is strictly prohibited."</p><h2>'If you can't beat 'em, join 'em'</h2><p>Other <a target="_blank" href="https://www.nytimes.com/2023/11/04/business/dealbook/us-retailers-say-an-old-trade-law-puts-them-at-a-disadvantage.html#:~:text=The%20rule%2C%20known%20as%20de,are%20textile%20and%20apparel%20products." data-analytics-product-module="body_link" rel=" nofollow"><u>opposition to de minimis has come from US retailers and trade groups</u></a> concerned about their ability to compete with companies shipping cheaply from China. Many retailers manufacture their products abroad and then ship them to the US in large quantities, meaning they can't use the de minimis provision as easily as Shein and Temu have.</p><p>"The textile industry is probably the biggest proponent against de minimis because they've got all their mills, they're making shirts, pants," said Steve Story, executive vice president at Apex Logistics International, which specializes in de minimis. "I can order a shirt from China at a quarter of the price, or I can go to Macy's, Nordstrom's, or Walmart and buy it."</p><!-- Excluded mobile ad on desktop --><p>He said that companies like Shein and Temu do not have to serve as the importers of record and are therefore not responsible for certifying the origin of items on their platforms.</p><p>"However, they're facilitating the sale for export to the United States, so they do have a financial interest in the merchandise," Story said. He serves on several committees exploring possible changes to de minimis, including a customs bond that would allow customs to make a claim in the event of a policy violation.</p><p>While many apparel retailers have spoken out against de minimis, an expert interviewed by UBS' Sole said that many retailers outside clothing are taking an "if you can't beat 'em, join 'em" approach and exploring ways they, too, can use de minimis to lower their costs instead of changing the rule altogether.</p><!-- Excluded mobile ad on desktop --><p>Satish Jindel, founder and president of ShipMatrix, said companies could lean on de minimis to lower their own prices.</p><p>"The companies who think it is not helping them should be looking at it and saying, how do I utilize that opportunity to revise and refine my business model to lower the cost of operating," Jindel said.</p><p><em>Got a tip? Contact this reporter at mstone@insider.com, mlstone@protonmail.com, or on the secure messaging app Signal at (646) 889-2143 using a non-work phone.&nbsp;</em></p>
                        </div></div>]]></description>
        </item>
    </channel>
</rss>